; ModuleID = '../../third_party/blink/renderer/platform/p2p/ipc_socket_factory.cc'
source_filename = "../../third_party/blink/renderer/platform/p2p/ipc_socket_factory.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.153", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.194", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.42", %"class.std::__1::unique_ptr.48", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.101", %"class.std::__1::unique_ptr.108", %"class.std::__1::unique_ptr.133", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.42" = type { %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.48" = type { %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i64 }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::Worklist.97"* }
%"class.blink::Worklist.97" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.blink::Worklist.104"* }
%"class.blink::Worklist.104" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.51" }
%"class.std::__1::unique_ptr.108" = type { %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.111", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113", %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.114" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { i64 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { float }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.136", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.145" }
%"class.WTF::Vector.145" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.161" }
%"class.WTF::VectorBuffer.161" = type { %"class.WTF::VectorBufferBase.162" }
%"class.WTF::VectorBufferBase.162" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.175" }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.83"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.90"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.198" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.193 }
%class.scoped_refptr.193 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.194" = type { %"struct.std::__1::__atomic_base.195" }
%"struct.std::__1::__atomic_base.195" = type { %"struct.std::__1::__cxx_atomic_impl.196" }
%"struct.std::__1::__cxx_atomic_impl.196" = type { %"struct.std::__1::__cxx_atomic_base_impl.197" }
%"struct.std::__1::__cxx_atomic_base_impl.197" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::IpcPacketSocketFactory" = type <{ %"class.rtc::PacketSocketFactory", %"class.blink::CrossThreadWeakPersistent", %"struct.net::NetworkTrafficAnnotationTag", [4 x i8] }>
%"class.rtc::PacketSocketFactory" = type { i32 (...)** }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::P2PSocketDispatcher"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic.14" }
%"struct.std::__1::atomic.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { %"class.blink::PersistentNode"* }
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.blink::P2PSocketDispatcher" = type { %"class.blink::Supplement", %"class.blink::NetworkListManager", %"class.network::mojom::blink::P2PNetworkNotificationClient", %class.scoped_refptr, %class.scoped_refptr.7, %"class.mojo::PendingReceiver", %"class.mojo::SharedRemote", %"class.base::Lock", %"class.WTF::Vector", %"class.net::IPAddress", %"class.net::IPAddress", %"class.blink::HeapMojoReceiver" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.4" }
%"class.WTF::HashTable.4" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { i8*, %"class.blink::Member.453" }
%"class.blink::Member.453" = type { %"class.blink::MemberBase.454" }
%"class.blink::MemberBase.454" = type { %"class.blink::Supplement"* }
%"class.blink::NetworkListManager" = type { %"class.blink::GarbageCollectedMixin" }
%"class.network::mojom::blink::P2PNetworkNotificationClient" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.7 = type { %"class.base::ObserverListThreadSafe"* }
%"class.base::ObserverListThreadSafe" = type opaque
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.203", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.206, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.207", [4 x i8] }>
%"class.base::RefCountedThreadSafe.203" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.205", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.205" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.206 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"struct.std::__1::atomic.207" = type { %"struct.std::__1::__atomic_base.208" }
%"struct.std::__1::__atomic_base.208" = type { %"struct.std::__1::__atomic_base.209" }
%"struct.std::__1::__atomic_base.209" = type { %"struct.std::__1::__cxx_atomic_impl.210" }
%"struct.std::__1::__cxx_atomic_impl.210" = type { %"struct.std::__1::__cxx_atomic_base_impl.211" }
%"struct.std::__1::__cxx_atomic_base_impl.211" = type { i32 }
%"class.mojo::SharedRemote" = type { %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::SharedRemoteBase"* }
%"class.mojo::SharedRemoteBase" = type opaque
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.net::NetworkInterface"*, i32, i32 }
%"struct.net::NetworkInterface" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, %"class.net::IPAddress", [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.12" }
%"class.blink::Member.12" = type { %"class.blink::MemberBase.13" }
%"class.blink::MemberBase.13" = type { %"class.blink::HeapMojoReceiver<network::mojom::blink::P2PNetworkNotificationClient, blink::P2PSocketDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<network::mojom::blink::P2PNetworkNotificationClient, blink::P2PSocketDispatcher, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.rtc::AsyncPacketSocket" = type { %"class.sigslot::has_slots", %"class.sigslot::signal_with_thread_policy", %"class.sigslot::signal_with_thread_policy.224", %"class.sigslot::signal_with_thread_policy.226", %"class.sigslot::signal_with_thread_policy.228", %"class.sigslot::signal_with_thread_policy.226", %"class.sigslot::signal_with_thread_policy.230", %"class.sigslot::signal_with_thread_policy.232" }
%"class.sigslot::has_slots" = type { %"class.sigslot::has_slots_interface", %"class.std::__1::set" }
%"class.sigslot::has_slots_interface" = type { i32 (...)**, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*, %"class.sigslot::_signal_base_interface"*)*, void (%"class.sigslot::has_slots_interface"*)* }
%"class.sigslot::_signal_base_interface" = type { void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*)*, void (%"class.sigslot::_signal_base_interface"*, %"class.sigslot::has_slots_interface"*, %"class.sigslot::has_slots_interface"*)* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.212", %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.sigslot::signal_with_thread_policy" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::_signal_base.base" = type <{ %"class.sigslot::_signal_base_interface", %"class.std::__1::list", %"class.std::__1::__list_iterator", i8 }>
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.220" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%"class.sigslot::signal_with_thread_policy.224" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.228" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.226" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.230" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.sigslot::signal_with_thread_policy.232" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.rtc::SocketAddress" = type <{ %"class.std::__1::basic_string", %"class.rtc::IPAddress", i16, [2 x i8], i32, i8, [7 x i8] }>
%"class.rtc::IPAddress" = type <{ i32 (...)**, i32, %union.anon.234, [4 x i8] }>
%union.anon.234 = type { %struct.in6_addr }
%struct.in6_addr = type { %union.anon.235 }
%union.anon.235 = type { [4 x i32] }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase.236" }
%"class.blink::PersistentBase.236" = type { %"class.blink::P2PSocketDispatcher"*, %"class.blink::CrossThreadPersistentNodePtr.237" }
%"class.blink::CrossThreadPersistentNodePtr.237" = type { %"struct.std::__1::atomic.14" }
%"class.blink::P2PSocketClientImpl" = type { %"class.blink::P2PSocketClient", %"class.network::mojom::blink::P2PSocketClient", %"class.blink::CrossThreadWeakPersistent", i32, %"class.blink::P2PSocketClientDelegate"*, i32, %"struct.net::NetworkTrafficAnnotationTag", i32, i32, %"class.mojo::Remote", %"class.mojo::Receiver" }
%"class.blink::P2PSocketClient" = type { i32 (...)** }
%"class.network::mojom::blink::P2PSocketClient" = type { i32 (...)** }
%"class.blink::P2PSocketClientDelegate" = type { i32 (...)** }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.399" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.241, %"class.std::__1::unique_ptr.350", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.206, i32 }>
%class.scoped_refptr.241 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.206, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.312", %"class.absl::optional.317", %"class.absl::optional.274", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.341", i8, [7 x i8], %class.scoped_refptr.206, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.242" }>
%"class.base::RefCountedThreadSafe.242" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.256", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.256" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.257" }
%"struct.std::__1::atomic.257" = type { %"struct.std::__1::__atomic_base.258" }
%"struct.std::__1::__atomic_base.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__cxx_atomic_impl.260" }
%"struct.std::__1::__cxx_atomic_impl.260" = type { %"struct.std::__1::__cxx_atomic_base_impl.261" }
%"struct.std::__1::__cxx_atomic_base_impl.261" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.206, %"class.std::__1::unique_ptr.262", %"class.absl::optional", %"struct.std::__1::atomic.194", i8, i8, i8, i8, i32, i32, %"class.absl::optional.274", %"class.std::__1::unique_ptr.279", i8, i64, %class.scoped_refptr.309, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.311" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.206, i8, %"class.mojo::ScopedHandleBase.265", %class.scoped_refptr.266, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.267", i8*, %"class.base::WeakPtrFactory.268" }
%"class.mojo::ScopedHandleBase.265" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.266 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.267" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.268" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.272 }
%union.anon.272 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.273", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.273" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.282", i8, i64, %class.scoped_refptr.283, %class.scoped_refptr.305 }
%"class.base::RepeatingCallback.282" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.283 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.294", i8, [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.284 }
%class.scoped_refptr.284 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::map.294" = type { %"class.std::__1::__tree.295" }
%"class.std::__1::__tree.295" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.296", %"class.std::__1::__compressed_pair.300" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%class.scoped_refptr.305 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.309 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.310 }
%class.scoped_refptr.310 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.311" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.312" = type { %"class.absl::optional_internal::optional_data.313" }
%"class.absl::optional_internal::optional_data.313" = type { %"class.absl::optional_internal::optional_data_base.314" }
%"class.absl::optional_internal::optional_data_base.314" = type { %"class.absl::optional_internal::optional_data_dtor_base.315" }
%"class.absl::optional_internal::optional_data_dtor_base.315" = type { i8, %union.anon.316 }
%union.anon.316 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.317" = type { %"class.absl::optional_internal::optional_data.318" }
%"class.absl::optional_internal::optional_data.318" = type { %"class.absl::optional_internal::optional_data_base.319" }
%"class.absl::optional_internal::optional_data_base.319" = type { %"class.absl::optional_internal::optional_data_dtor_base.320" }
%"class.absl::optional_internal::optional_data_dtor_base.320" = type { i8, [7 x i8], %union.anon.321 }
%union.anon.321 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.274" = type { %"class.absl::optional_internal::optional_data.275" }
%"class.absl::optional_internal::optional_data.275" = type { %"class.absl::optional_internal::optional_data_base.276" }
%"class.absl::optional_internal::optional_data_base.276" = type { %"class.absl::optional_internal::optional_data_dtor_base.277" }
%"class.absl::optional_internal::optional_data_dtor_base.277" = type { i8, %union.anon.278 }
%union.anon.278 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.326 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.326 = type { %"class.std::__1::map.329" }
%"class.std::__1::map.329" = type { %"class.std::__1::__tree.330" }
%"class.std::__1::__tree.330" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.331", %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.340"*, i64 }
%"class.std::__1::unique_ptr.340" = type opaque
%"class.std::__1::map.341" = type { %"class.std::__1::__tree.342" }
%"class.std::__1::__tree.342" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.343", %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.353", %"class.absl::optional.354", %"class.absl::optional.359", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.366", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.374", %"class.std::__1::map.385", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.394", i8, %class.scoped_refptr.206, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.395" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.353" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.354" = type { %"class.absl::optional_internal::optional_data.355" }
%"class.absl::optional_internal::optional_data.355" = type { %"class.absl::optional_internal::optional_data_base.356" }
%"class.absl::optional_internal::optional_data_base.356" = type { %"class.absl::optional_internal::optional_data_dtor_base.357" }
%"class.absl::optional_internal::optional_data_dtor_base.357" = type { i8, %union.anon.358 }
%union.anon.358 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.359" = type { %"class.absl::optional_internal::optional_data.360" }
%"class.absl::optional_internal::optional_data.360" = type { %"class.absl::optional_internal::optional_data_base.361" }
%"class.absl::optional_internal::optional_data_base.361" = type { %"class.absl::optional_internal::optional_data_dtor_base.362" }
%"class.absl::optional_internal::optional_data_dtor_base.362" = type { i8, %union.anon.363 }
%union.anon.363 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.206, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.364" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.364" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.365 }
%class.scoped_refptr.365 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.369", %class.scoped_refptr.370 }
%"class.base::RepeatingCallback.369" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.370 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.242", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.374" = type { %"class.std::__1::__tree.375" }
%"class.std::__1::__tree.375" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.376", %"class.std::__1::__compressed_pair.380" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.380" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.std::__1::map.385" = type { %"class.std::__1::__tree.386" }
%"class.std::__1::__tree.386" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.base::OnceCallback.394" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.395" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.network::mojom::blink::P2PSocketProxy"* }
%"class.network::mojom::blink::P2PSocketProxy" = type { %"class.network::mojom::blink::P2PSocket", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::P2PSocket" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.network::mojom::blink::P2PSocketClientStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.241, %"class.std::__1::unique_ptr.350", %"class.base::WeakPtrFactory.405" }
%"class.base::WeakPtrFactory.405" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.network::mojom::blink::P2PSocketClientStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.network::mojom::blink::P2PSocketClient"* }
%"class.blink::(anonymous namespace)::IpcPacketSocket" = type { %"class.rtc::AsyncPacketSocket", %"class.blink::P2PSocketClientDelegate", i32, %"class.std::__1::unique_ptr.412", %"class.rtc::SocketAddress", %"class.rtc::SocketAddress", i32, i64, %"class.std::__1::list.418", i8, i32, [3 x i32], i64, i64, i64, i64 }
%"class.std::__1::unique_ptr.412" = type { %"class.std::__1::__compressed_pair.413" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"class.blink::P2PSocketClient"* }
%"class.std::__1::list.418" = type { %"class.std::__1::__list_imp.419" }
%"class.std::__1::__list_imp.419" = type { %"struct.std::__1::__list_node_base.420", %"class.std::__1::__compressed_pair.421" }
%"struct.std::__1::__list_node_base.420" = type { %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"* }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"struct.network::P2PHostAndIPEndPoint" = type <{ %"class.std::__1::basic_string", %"class.net::IPEndPoint", [4 x i8] }>
%"struct.rtc::ProxyInfo" = type { i32, [4 x i8], %"class.rtc::SocketAddress", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.rtc::CryptString" }
%"class.rtc::CryptString" = type { %"class.std::__1::unique_ptr.428" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.rtc::CryptStringImpl"* }
%"class.rtc::CryptStringImpl" = type { i32 (...)** }
%"struct.rtc::PacketSocketTcpOptions" = type { i32, %"class.std::__1::vector.434", %"class.std::__1::vector.434", %"class.rtc::SSLCertificateVerifier"* }
%"class.std::__1::vector.434" = type { %"class.std::__1::__vector_base.435" }
%"class.std::__1::__vector_base.435" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.std::__1::basic_string"* }
%"class.rtc::SSLCertificateVerifier" = type opaque
%"class.rtc::AsyncResolverInterface" = type { i32 (...)**, %"class.sigslot::signal_with_thread_policy.441" }
%"class.sigslot::signal_with_thread_policy.441" = type { %"class.sigslot::_signal_base.base", [7 x i8] }
%"class.blink::P2PAsyncAddressResolver" = type { i32 (...)**, %"class.base::RefCountedThreadSafe.444", %"class.blink::CrossThreadPersistent", i32, %"class.base::OnceCallback.445" }
%"class.base::RefCountedThreadSafe.444" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::OnceCallback.445" = type { %"class.base::internal::CallbackBase" }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.207", [4 x i8] }>
%"struct.rtc::PacketOptions" = type { i32, i64, %"struct.rtc::PacketTimeUpdateParams", %"struct.rtc::PacketInfo" }
%"struct.rtc::PacketTimeUpdateParams" = type { i32, %"class.std::__1::vector.455", i32, i64 }
%"class.std::__1::vector.455" = type { %"class.std::__1::__vector_base.456" }
%"class.std::__1::__vector_base.456" = type { i8*, i8*, %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { i8* }
%"struct.rtc::PacketInfo" = type { i8, i8, i32, i32, %"class.absl::optional.459", i64, i64, i64 }
%"class.absl::optional.459" = type { %"class.absl::optional_internal::optional_data.460" }
%"class.absl::optional_internal::optional_data.460" = type { %"class.absl::optional_internal::optional_data_base.461" }
%"class.absl::optional_internal::optional_data_base.461" = type { %"class.absl::optional_internal::optional_data_dtor_base.462" }
%"class.absl::optional_internal::optional_data_dtor_base.462" = type { i8, %union.anon.463 }
%union.anon.463 = type { i16 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { i8*, i32, i32 }
%"struct.std::__1::__list_node.497" = type { %"struct.std::__1::__list_node_base", %"class.sigslot::_opaque_connection" }
%"class.sigslot::_opaque_connection" = type { void (%"class.sigslot::_opaque_connection"*)*, %"class.sigslot::has_slots_interface"*, [16 x i8] }
%"struct.network::P2PSendPacketMetrics" = type { i64, i32, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"struct.rtc::SentPacket" = type { i64, i64, %"struct.rtc::PacketInfo" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base.420", %"struct.blink::(anonymous namespace)::IpcPacketSocket::InFlightPacketRecord" }
%"struct.blink::(anonymous namespace)::IpcPacketSocket::InFlightPacketRecord" = type { i64, i64 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.469", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.469" = type { %"class.std::__1::__vector_base.470" }
%"class.std::__1::__vector_base.470" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.477" }
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.471", i64, i64 }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list.482" }
%"class.std::__1::list.482" = type { %"class.std::__1::__list_imp.483" }
%"class.std::__1::__list_imp.483" = type { %"struct.std::__1::__list_node_base.484", %"class.std::__1::__compressed_pair.485" }
%"struct.std::__1::__list_node_base.484" = type { %"struct.std::__1::__list_node_base.484"*, %"struct.std::__1::__list_node_base.484"* }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl" = type { %"class.rtc::AsyncResolverInterface", %class.scoped_refptr.443, %"class.rtc::SocketAddress", %"class.std::__1::vector.446" }
%class.scoped_refptr.443 = type { %"class.blink::P2PAsyncAddressResolver"* }
%"class.std::__1::vector.446" = type { %"class.std::__1::__vector_base.447" }
%"class.std::__1::__vector_base.447" = type { %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"*, %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.rtc::IPAddress"* }
%"class.WTF::Vector.503" = type { %"class.WTF::VectorBuffer.504" }
%"class.WTF::VectorBuffer.504" = type { %"class.WTF::VectorBufferBase.505" }
%"class.WTF::VectorBufferBase.505" = type { %"class.net::IPAddress"*, i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_ = comdat any

$_ZN3WTF6VectorIaLj0ENS_18PartitionAllocatorEE6AppendIaEEvPKT_j = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIaEEmm = comdat any

$_ZNK3WTF6VectorIaLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3rtc9IPAddressD2Ev = comdat any

$_ZNK3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorIN3rtc9IPAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZN3rtc9IPAddressD0Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_19P2PSocketDispatcherEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN3rtc9IPAddressE = comdat any

@_ZTVN5blink22IpcPacketSocketFactoryE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::IpcPacketSocketFactory"*)* @_ZN5blink22IpcPacketSocketFactoryD2Ev to i8*), i8* bitcast (void (%"class.blink::IpcPacketSocketFactory"*)* @_ZN5blink22IpcPacketSocketFactoryD0Ev to i8*), i8* bitcast (%"class.rtc::AsyncPacketSocket"* (%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"*, i16, i16)* @_ZN5blink22IpcPacketSocketFactory15CreateUdpSocketERKN3rtc13SocketAddressEtt to i8*), i8* bitcast (%"class.rtc::AsyncPacketSocket"* (%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"*, i16, i16, i32)* @_ZN5blink22IpcPacketSocketFactory21CreateServerTcpSocketERKN3rtc13SocketAddressEtti to i8*), i8* bitcast (%"class.rtc::AsyncPacketSocket"* (%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"*, %"class.rtc::SocketAddress"*, %"struct.rtc::ProxyInfo"*, %"class.std::__1::basic_string"*, %"struct.rtc::PacketSocketTcpOptions"*)* @_ZN5blink22IpcPacketSocketFactory21CreateClientTcpSocketERKN3rtc13SocketAddressES4_RKNS1_9ProxyInfoERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERKNS1_22PacketSocketTcpOptionsE to i8*), i8* bitcast (%"class.rtc::AsyncResolverInterface"* (%"class.blink::IpcPacketSocketFactory"*)* @_ZN5blink22IpcPacketSocketFactory19CreateAsyncResolverEv to i8*)] }, align 8
@.str = private unnamed_addr constant [5 x i8] c"stun\00", align 1
@_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE = internal unnamed_addr constant { [19 x i8*], [9 x i8*] } { [19 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD0Ev to i8*), i8* bitcast (void (%"class.rtc::SocketAddress"*, %"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket15GetLocalAddressEv to i8*), i8* bitcast (void (%"class.rtc::SocketAddress"*, %"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket16GetRemoteAddressEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"struct.rtc::PacketOptions"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4SendEPKvmRKN3rtc13PacketOptionsE to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket6SendToEPKvmRKN3rtc13SocketAddressERKNS4_13PacketOptionsE to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket5CloseEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket8GetStateEv to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i32, i32*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket9GetOptionEN3rtc6Socket6OptionEPi to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i32, i32)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket9SetOptionEN3rtc6Socket6OptionEi to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket8GetErrorEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i32)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket8SetErrorEi to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket6OnOpenERKN3net10IPEndPointES5_ to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.blink::P2PSocketClient"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket23OnIncomingTcpConnectionERKN3net10IPEndPointENSt3__110unique_ptrINS_15P2PSocketClientENS6_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"struct.network::P2PSendPacketMetrics"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnSendCompleteERKN7network20P2PSendPacketMetricsE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket7OnErrorEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"class.base::TimeTicks"*)* @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnDataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS6_18PartitionAllocatorEEERKN4base9TimeTicksE to i8*)], [9 x i8*] [i8* inttoptr (i64 -448 to i8*), i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocketD1Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocketD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket6OnOpenERKN3net10IPEndPointES5_ to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.blink::P2PSocketClient"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket23OnIncomingTcpConnectionERKN3net10IPEndPointENSt3__110unique_ptrINS_15P2PSocketClientENS6_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"struct.network::P2PSendPacketMetrics"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket14OnSendCompleteERKN7network20P2PSendPacketMetricsE to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket7OnErrorEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"class.base::TimeTicks"*)* @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket14OnDataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS6_18PartitionAllocatorEEERKN4base9TimeTicksE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [42 x i8] c"WebRTC.ApplicationPercentPacketsDiscarded\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.2 = private unnamed_addr constant [26 x i8] c"MaxPendingBytesWouldBlock\00", align 1
@.str.3 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.4 = private unnamed_addr constant [59 x i8] c"IpcPacketSocket: sending is blocked. %d packets_in_flight.\00", align 1
@.str.5 = private unnamed_addr constant [68 x i8] c"../../third_party/blink/renderer/platform/p2p/ipc_socket_factory.cc\00", align 1
@.str.6 = private unnamed_addr constant [57 x i8] c"Failed to convert remote address to IPEndPoint: address=\00", align 1
@.str.7 = private unnamed_addr constant [19 x i8] c", remote_address_=\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.9 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIaEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = signed char]\00", align 1
@.str.14 = private unnamed_addr constant [22 x i8] c"P2PSendBytesAvailable\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.16 = private unnamed_addr constant [23 x i8] c"P2PSendPacketsInFlight\00", align 1
@.str.17 = private unnamed_addr constant [35 x i8] c"!in_flight_packet_records_.empty()\00", align 1
@.str.18 = private unnamed_addr constant [74 x i8] c"send_metrics.packet_id == 0 || record.packet_id == send_metrics.packet_id\00", align 1
@.str.19 = private unnamed_addr constant [61 x i8] c"IpcPacketSocket: sending is unblocked. %d packets in flight.\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@_ZTVN5blink12_GLOBAL__N_124AsyncAddressResolverImplE = internal unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)* @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImplD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)* @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImplD0Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.rtc::SocketAddress"*)* @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl5StartERKN3rtc13SocketAddressE to i8*), i8* bitcast (i1 (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, i32, %"class.rtc::SocketAddress"*)* @_ZNK5blink12_GLOBAL__N_124AsyncAddressResolverImpl18GetResolvedAddressEiPN3rtc13SocketAddressE to i8*), i8* bitcast (i32 (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)* @_ZNK5blink12_GLOBAL__N_124AsyncAddressResolverImpl8GetErrorEv to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, i1)* @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl7DestroyEb to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)* @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl17OnAddressResolvedERKN3WTF6VectorIN3net9IPAddressELj0ENS2_18PartitionAllocatorEEE to i8*)] }, align 8
@_ZTVN3rtc9IPAddressE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rtc::IPAddress"*)* @_ZN3rtc9IPAddressD2Ev to i8*), i8* bitcast (void (%"class.rtc::IPAddress"*)* @_ZN3rtc9IPAddressD0Ev to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZZN5blink12_GLOBAL__N_115IpcPacketSocketD1EvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink22IpcPacketSocketFactoryC1EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE = hidden unnamed_addr alias void (%"class.blink::IpcPacketSocketFactory"*, %"class.blink::P2PSocketDispatcher"*, %"struct.net::NetworkTrafficAnnotationTag"*), void (%"class.blink::IpcPacketSocketFactory"*, %"class.blink::P2PSocketDispatcher"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN5blink22IpcPacketSocketFactoryC2EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE
@_ZN5blink22IpcPacketSocketFactoryD1Ev = hidden unnamed_addr alias void (%"class.blink::IpcPacketSocketFactory"*), void (%"class.blink::IpcPacketSocketFactory"*)* @_ZN5blink22IpcPacketSocketFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22IpcPacketSocketFactoryC2EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE(%"class.blink::IpcPacketSocketFactory"*, %"class.blink::P2PSocketDispatcher"*, %"struct.net::NetworkTrafficAnnotationTag"* nocapture readonly dereferenceable(4)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink22IpcPacketSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %5, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::CrossThreadWeakPersistent", %"class.blink::CrossThreadWeakPersistent"* %5, i64 0, i32 0, i32 0
  store %"class.blink::P2PSocketDispatcher"* %1, %"class.blink::P2PSocketDispatcher"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistentNodePtr", %"class.blink::CrossThreadPersistentNodePtr"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %9, align 8
  %10 = ptrtoint %"class.blink::P2PSocketDispatcher"* %1 to i64
  switch i64 %10, label %11 [
    i64 0, label %30
    i64 -1, label %30
  ]

11:                                               ; preds = %3
  %12 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %13 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %12, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %13) #11
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %11
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %11 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %6, %"class.blink::PersistentBase"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  %29 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %8 to i64*
  store atomic i64 %28, i64* %29 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %13) #11
  br label %30

30:                                               ; preds = %3, %3, %21
  %31 = getelementptr inbounds %"struct.net::NetworkTrafficAnnotationTag", %"struct.net::NetworkTrafficAnnotationTag"* %2, i64 0, i32 0
  %32 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 2, i32 0
  %33 = load i32, i32* %31, align 4
  store i32 %33, i32* %32, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22IpcPacketSocketFactoryD2Ev(%"class.blink::IpcPacketSocketFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink22IpcPacketSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #11
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %11 = load atomic i64, i64* %4 monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.blink::PersistentNode"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %12, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %12, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %14, %7
  store atomic i64 0, i64* %4 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #11
  br label %21

21:                                               ; preds = %1, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink22IpcPacketSocketFactoryD0Ev(%"class.blink::IpcPacketSocketFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink22IpcPacketSocketFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 1
  %4 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %3 to i64*
  %5 = load atomic i64, i64* %4 acquire, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %9 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #11
  %10 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %11 = load atomic i64, i64* %4 monotonic, align 8
  %12 = inttoptr i64 %11 to %"class.blink::PersistentNode"*
  %13 = icmp eq i64 %11, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.blink::CrossThreadPersistentRegion"* %10 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = inttoptr i64 %11 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %12, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %19, align 8
  store %"class.blink::PersistentNode"* %12, %"class.blink::PersistentNode"** %15, align 8
  br label %20

20:                                               ; preds = %14, %7
  store atomic i64 0, i64* %4 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #11
  br label %21

21:                                               ; preds = %1, %20
  %22 = bitcast %"class.blink::IpcPacketSocketFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rtc::AsyncPacketSocket"* @_ZN5blink22IpcPacketSocketFactory15CreateUdpSocketERKN3rtc13SocketAddressEtt(%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"* dereferenceable(72), i16 zeroext, i16 zeroext) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::CrossThreadPersistent", align 8
  %6 = alloca %"class.rtc::SocketAddress", align 8
  %7 = bitcast %"class.blink::CrossThreadPersistent"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #11
  %8 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #11, !alias.scope !3
  %10 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !3
  %11 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %10, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %11) #11, !noalias !3
  %12 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %12, align 8, !noalias !3
  call void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.236"* nonnull %9, %"class.blink::P2PSocketDispatcher"* %13) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %11) #11
  %14 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 2
  %15 = call i8* @_Znwm(i64 160) #12
  %16 = bitcast i8* %15 to %"class.blink::P2PSocketClientImpl"*
  %17 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %8, align 8
  call void @_ZN5blink19P2PSocketClientImplC1EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE(%"class.blink::P2PSocketClientImpl"* nonnull %16, %"class.blink::P2PSocketDispatcher"* %17, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %14) #11
  %18 = call i8* @_Znwm(i64 712) #12
  %19 = bitcast i8* %18 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  %20 = bitcast i8* %18 to %"class.rtc::AsyncPacketSocket"*
  call void @_ZN3rtc17AsyncPacketSocketC2Ev(%"class.rtc::AsyncPacketSocket"* nonnull %20) #11
  %21 = getelementptr inbounds i8, i8* %18, i64 448
  %22 = bitcast i8* %21 to i32 (...)***
  %23 = bitcast i8* %18 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %24 = getelementptr inbounds i8, i8* %18, i64 456
  %25 = bitcast i8* %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 464
  %27 = bitcast i8* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 472
  %29 = bitcast i8* %28 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %29) #11
  %30 = getelementptr inbounds i8, i8* %18, i64 544
  %31 = bitcast i8* %30 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %31) #11
  %32 = getelementptr inbounds i8, i8* %18, i64 616
  %33 = bitcast i8* %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds i8, i8* %18, i64 624
  %35 = bitcast i8* %34 to i64*
  store i64 65536, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %18, i64 632
  %37 = bitcast i8* %36 to i8**
  store i8* %36, i8** %37, align 8
  %38 = getelementptr inbounds i8, i8* %18, i64 640
  %39 = bitcast i8* %38 to i8**
  store i8* %36, i8** %39, align 8
  %40 = getelementptr inbounds i8, i8* %18, i64 648
  %41 = bitcast i8* %40 to i64*
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds i8, i8* %18, i64 656
  store i8 0, i8* %42, align 8
  %43 = getelementptr inbounds i8, i8* %18, i64 660
  %44 = bitcast i8* %43 to i32*
  store i32 0, i32* %44, align 4
  %45 = getelementptr inbounds i8, i8* %18, i64 680
  %46 = getelementptr i8, i8* %18, i64 664
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 32, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 4 %46, i8 -1, i64 12, i1 false) #11
  %47 = bitcast %"class.rtc::SocketAddress"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %47) #11
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %6) #11
  %48 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4InitEN7network13P2PSocketTypeENSt3__110unique_ptrINS_19P2PSocketClientImplENS4_14default_deleteIS6_EEEERKN3rtc13SocketAddressEttSD_(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %19, i32 0, %"class.blink::P2PSocketClientImpl"* nonnull %16, %"class.rtc::SocketAddress"* dereferenceable(72) %1, i16 zeroext %2, i16 zeroext %3, %"class.rtc::SocketAddress"* nonnull dereferenceable(72) %6)
  %49 = bitcast %"class.rtc::SocketAddress"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %56

53:                                               ; preds = %4
  %54 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @_ZdlPv(i8* %55) #12
  br label %56

56:                                               ; preds = %4, %53
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %47) #11
  br i1 %48, label %62, label %57

57:                                               ; preds = %56
  %58 = bitcast i8* %18 to void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)***
  %59 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)**, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %59, i64 1
  %61 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %60, align 8
  call void %61(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %19) #11
  br label %62

62:                                               ; preds = %56, %57
  %63 = phi %"class.rtc::AsyncPacketSocket"* [ null, %57 ], [ %20, %56 ]
  %64 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %5, i64 0, i32 0, i32 1
  %65 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %82, label %68

68:                                               ; preds = %62
  %69 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %70 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %69, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %70) #11
  %71 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %72 = load atomic i64, i64* %65 monotonic, align 8
  %73 = inttoptr i64 %72 to %"class.blink::PersistentNode"*
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %81, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %71, i64 0, i32 0, i32 0
  %77 = bitcast %"class.blink::CrossThreadPersistentRegion"* %71 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = inttoptr i64 %72 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %73, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %80, align 8
  store %"class.blink::PersistentNode"* %73, %"class.blink::PersistentNode"** %76, align 8
  br label %81

81:                                               ; preds = %75, %68
  store atomic i64 0, i64* %65 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %70) #11
  br label %82

82:                                               ; preds = %62, %81
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #11
  ret %"class.rtc::AsyncPacketSocket"* %63
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4InitEN7network13P2PSocketTypeENSt3__110unique_ptrINS_19P2PSocketClientImplENS4_14default_deleteIS6_EEEERKN3rtc13SocketAddressEttSD_(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i32, %"class.blink::P2PSocketClientImpl"*, %"class.rtc::SocketAddress"* dereferenceable(72), i16 zeroext, i16 zeroext, %"class.rtc::SocketAddress"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.net::IPEndPoint", align 2
  %11 = alloca %"class.net::IPAddress", align 1
  %12 = alloca %"struct.network::P2PHostAndIPEndPoint", align 8
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 2
  store i32 %1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.blink::P2PSocketClientImpl", %"class.blink::P2PSocketClientImpl"* %2, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %16 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %15, align 8
  store %"class.blink::P2PSocketClient"* %14, %"class.blink::P2PSocketClient"** %15, align 8
  %17 = icmp eq %"class.blink::P2PSocketClient"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %7
  %19 = bitcast %"class.blink::P2PSocketClient"* %16 to void (%"class.blink::P2PSocketClient"*)***
  %20 = load void (%"class.blink::P2PSocketClient"*)**, void (%"class.blink::P2PSocketClient"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %20, i64 1
  %22 = load void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %21, align 8
  tail call void %22(%"class.blink::P2PSocketClient"* nonnull %16) #11
  br label %23

23:                                               ; preds = %7, %18
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %25 = tail call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %24, %"class.rtc::SocketAddress"* dereferenceable(72) %3) #11
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %27 = tail call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %26, %"class.rtc::SocketAddress"* dereferenceable(72) %6) #11
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  store i32 1, i32* %28, align 8
  %29 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %29) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %29, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  %30 = call zeroext i1 @_ZN11jingle_glue25SocketAddressToIPEndPointERKN3rtc13SocketAddressEPN3net10IPEndPointE(%"class.rtc::SocketAddress"* dereferenceable(72) %3, %"class.net::IPEndPoint"* nonnull %8) #11
  br i1 %30, label %31, label %73

31:                                               ; preds = %23
  %32 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %32) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %32, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %9) #11
  %33 = call zeroext i1 @_ZNK3rtc13SocketAddress5IsNilEv(%"class.rtc::SocketAddress"* %6) #11
  br i1 %33, label %42, label %34

34:                                               ; preds = %31
  %35 = call zeroext i1 @_ZNK3rtc13SocketAddress14IsUnresolvedIPEv(%"class.rtc::SocketAddress"* %6) #11
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %11, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %38) #11
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %11) #11
  %39 = call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %6) #11
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %10, %"class.net::IPAddress"* nonnull dereferenceable(17) %11, i16 zeroext %39) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %37, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %10) #11
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %38) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %37) #11
  br label %42

40:                                               ; preds = %34
  %41 = call zeroext i1 @_ZN11jingle_glue25SocketAddressToIPEndPointERKN3rtc13SocketAddressEPN3net10IPEndPointE(%"class.rtc::SocketAddress"* dereferenceable(72) %6, %"class.net::IPEndPoint"* nonnull %9) #11
  br i1 %41, label %42, label %71

42:                                               ; preds = %36, %40, %31
  %43 = bitcast %"struct.network::P2PHostAndIPEndPoint"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %43) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 -86, i64 48, i1 false)
  %44 = bitcast %"class.rtc::SocketAddress"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 1
  %47 = icmp slt i8 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %42
  %49 = bitcast %"class.rtc::SocketAddress"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %43, i8* align 8 %49, i64 24, i1 false) #11
  br label %56

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"struct.network::P2PHostAndIPEndPoint", %"struct.network::P2PHostAndIPEndPoint"* %12, i64 0, i32 0
  %52 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %51, i8* %53, i64 %55) #11
  br label %56

56:                                               ; preds = %48, %50
  %57 = getelementptr inbounds %"struct.network::P2PHostAndIPEndPoint", %"struct.network::P2PHostAndIPEndPoint"* %12, i64 0, i32 1
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %57, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %9) #11
  %58 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 1
  %59 = bitcast %"class.blink::P2PSocketClientImpl"* %2 to void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)***
  %60 = load void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)**, void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)*, void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)** %60, i64 7
  %62 = load void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)*, void (%"class.blink::P2PSocketClientImpl"*, i32, %"class.net::IPEndPoint"*, i16, i16, %"struct.network::P2PHostAndIPEndPoint"*, %"class.blink::P2PSocketClientDelegate"*)** %61, align 8
  call void %62(%"class.blink::P2PSocketClientImpl"* %2, i32 %1, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %8, i16 zeroext %4, i16 zeroext %5, %"struct.network::P2PHostAndIPEndPoint"* nonnull dereferenceable(48) %12, %"class.blink::P2PSocketClientDelegate"* %58) #11
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %57) #11
  %63 = bitcast %"struct.network::P2PHostAndIPEndPoint"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %56
  %68 = getelementptr inbounds %"struct.network::P2PHostAndIPEndPoint", %"struct.network::P2PHostAndIPEndPoint"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #12
  br label %70

70:                                               ; preds = %56, %67
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %43) #11
  br label %71

71:                                               ; preds = %40, %70
  %72 = phi i1 [ true, %70 ], [ false, %40 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %32) #11
  br label %73

73:                                               ; preds = %71, %23
  %74 = phi i1 [ %72, %71 ], [ false, %23 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %29) #11
  ret i1 %74
}

declare void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"*) unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rtc::AsyncPacketSocket"* @_ZN5blink22IpcPacketSocketFactory21CreateServerTcpSocketERKN3rtc13SocketAddressEtti(%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"* dereferenceable(72), i16 zeroext, i16 zeroext, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CrossThreadPersistent", align 8
  %7 = alloca %"class.rtc::SocketAddress", align 8
  %8 = and i32 %4, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %90

10:                                               ; preds = %5
  %11 = and i32 %4, 4
  %12 = icmp eq i32 %11, 0
  %13 = select i1 %12, i32 1, i32 2
  %14 = bitcast %"class.blink::CrossThreadPersistent"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #11, !alias.scope !6
  %17 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !6
  %18 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %17, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %18) #11, !noalias !6
  %19 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %19, align 8, !noalias !6
  call void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.236"* nonnull %16, %"class.blink::P2PSocketDispatcher"* %20) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %18) #11
  %21 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 2
  %22 = call i8* @_Znwm(i64 160) #12
  %23 = bitcast i8* %22 to %"class.blink::P2PSocketClientImpl"*
  %24 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %15, align 8
  call void @_ZN5blink19P2PSocketClientImplC1EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE(%"class.blink::P2PSocketClientImpl"* nonnull %23, %"class.blink::P2PSocketDispatcher"* %24, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %21) #11
  %25 = call i8* @_Znwm(i64 712) #12
  %26 = bitcast i8* %25 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  %27 = bitcast i8* %25 to %"class.rtc::AsyncPacketSocket"*
  call void @_ZN3rtc17AsyncPacketSocketC2Ev(%"class.rtc::AsyncPacketSocket"* nonnull %27) #11
  %28 = getelementptr inbounds i8, i8* %25, i64 448
  %29 = bitcast i8* %28 to i32 (...)***
  %30 = bitcast i8* %25 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %29, align 8
  %31 = getelementptr inbounds i8, i8* %25, i64 456
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds i8, i8* %25, i64 464
  %34 = bitcast i8* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %25, i64 472
  %36 = bitcast i8* %35 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %36) #11
  %37 = getelementptr inbounds i8, i8* %25, i64 544
  %38 = bitcast i8* %37 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %38) #11
  %39 = getelementptr inbounds i8, i8* %25, i64 616
  %40 = bitcast i8* %39 to i32*
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds i8, i8* %25, i64 624
  %42 = bitcast i8* %41 to i64*
  store i64 65536, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %25, i64 632
  %44 = bitcast i8* %43 to i8**
  store i8* %43, i8** %44, align 8
  %45 = getelementptr inbounds i8, i8* %25, i64 640
  %46 = bitcast i8* %45 to i8**
  store i8* %43, i8** %46, align 8
  %47 = getelementptr inbounds i8, i8* %25, i64 648
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %25, i64 656
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds i8, i8* %25, i64 660
  %51 = bitcast i8* %50 to i32*
  store i32 0, i32* %51, align 4
  %52 = getelementptr inbounds i8, i8* %25, i64 680
  %53 = getelementptr i8, i8* %25, i64 664
  call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 32, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 -1, i64 12, i1 false) #11
  %54 = bitcast %"class.rtc::SocketAddress"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %54) #11
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %7) #11
  %55 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4InitEN7network13P2PSocketTypeENSt3__110unique_ptrINS_19P2PSocketClientImplENS4_14default_deleteIS6_EEEERKN3rtc13SocketAddressEttSD_(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %26, i32 %13, %"class.blink::P2PSocketClientImpl"* nonnull %23, %"class.rtc::SocketAddress"* dereferenceable(72) %1, i16 zeroext %2, i16 zeroext %3, %"class.rtc::SocketAddress"* nonnull dereferenceable(72) %7)
  %56 = bitcast %"class.rtc::SocketAddress"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %57 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %56, i64 0, i32 1, i32 0
  %58 = load i8, i8* %57, align 1
  %59 = icmp slt i8 %58, 0
  br i1 %59, label %60, label %63

60:                                               ; preds = %10
  %61 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %10, %60
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %54) #11
  br i1 %55, label %69, label %64

64:                                               ; preds = %63
  %65 = bitcast i8* %25 to void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)***
  %66 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)**, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %66, i64 1
  %68 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %67, align 8
  call void %68(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %26) #11
  br label %69

69:                                               ; preds = %63, %64
  %70 = phi %"class.rtc::AsyncPacketSocket"* [ null, %64 ], [ %27, %63 ]
  %71 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %6, i64 0, i32 0, i32 1
  %72 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %71 to i64*
  %73 = load atomic i64, i64* %72 acquire, align 8
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %89, label %75

75:                                               ; preds = %69
  %76 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %77 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %76, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %77) #11
  %78 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %79 = load atomic i64, i64* %72 monotonic, align 8
  %80 = inttoptr i64 %79 to %"class.blink::PersistentNode"*
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %78, i64 0, i32 0, i32 0
  %84 = bitcast %"class.blink::CrossThreadPersistentRegion"* %78 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = inttoptr i64 %79 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %80, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %87, align 8
  store %"class.blink::PersistentNode"* %80, %"class.blink::PersistentNode"** %83, align 8
  br label %88

88:                                               ; preds = %82, %75
  store atomic i64 0, i64* %72 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %77) #11
  br label %89

89:                                               ; preds = %69, %88
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #11
  br label %90

90:                                               ; preds = %5, %89
  %91 = phi %"class.rtc::AsyncPacketSocket"* [ %70, %89 ], [ null, %5 ]
  ret %"class.rtc::AsyncPacketSocket"* %91
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.rtc::AsyncPacketSocket"* @_ZN5blink22IpcPacketSocketFactory21CreateClientTcpSocketERKN3rtc13SocketAddressES4_RKNS1_9ProxyInfoERKNSt3__112basic_stringIcNS8_11char_traitsIcEENS8_9allocatorIcEEEERKNS1_22PacketSocketTcpOptionsE(%"class.blink::IpcPacketSocketFactory"*, %"class.rtc::SocketAddress"* dereferenceable(72), %"class.rtc::SocketAddress"* dereferenceable(72), %"struct.rtc::ProxyInfo"* nocapture readnone dereferenceable(168), %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"struct.rtc::PacketSocketTcpOptions"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::CrossThreadPersistent", align 8
  %8 = tail call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %2) #11
  %9 = zext i16 %8 to i32
  %10 = tail call zeroext i1 @_ZN3net22IsPortAllowedForSchemeEiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i32 %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #11
  br i1 %10, label %11, label %98

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"struct.rtc::PacketSocketTcpOptions", %"struct.rtc::PacketSocketTcpOptions"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %11
  %17 = and i32 %13, 4
  %18 = icmp eq i32 %17, 0
  %19 = select i1 %18, i32 5, i32 6
  br label %29

20:                                               ; preds = %11
  %21 = and i32 %13, 2
  %22 = icmp eq i32 %21, 0
  %23 = and i32 %13, 4
  %24 = icmp ne i32 %23, 0
  br i1 %22, label %27, label %25

25:                                               ; preds = %20
  %26 = select i1 %24, i32 8, i32 7
  br label %29

27:                                               ; preds = %20
  %28 = select i1 %24, i32 4, i32 3
  br label %29

29:                                               ; preds = %25, %27, %16
  %30 = phi i32 [ %19, %16 ], [ %26, %25 ], [ %28, %27 ]
  %31 = bitcast %"class.blink::CrossThreadPersistent"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 16, i1 false) #11, !alias.scope !9
  %34 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !9
  %35 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %34, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %35) #11, !noalias !9
  %36 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %36, align 8, !noalias !9
  call void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.236"* nonnull %33, %"class.blink::P2PSocketDispatcher"* %37) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %35) #11
  %38 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 2
  %39 = call i8* @_Znwm(i64 160) #12
  %40 = bitcast i8* %39 to %"class.blink::P2PSocketClientImpl"*
  %41 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %32, align 8
  call void @_ZN5blink19P2PSocketClientImplC1EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE(%"class.blink::P2PSocketClientImpl"* nonnull %40, %"class.blink::P2PSocketDispatcher"* %41, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %38) #11
  %42 = call i8* @_Znwm(i64 712) #12
  %43 = bitcast i8* %42 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  %44 = bitcast i8* %42 to %"class.rtc::AsyncPacketSocket"*
  call void @_ZN3rtc17AsyncPacketSocketC2Ev(%"class.rtc::AsyncPacketSocket"* nonnull %44) #11
  %45 = getelementptr inbounds i8, i8* %42, i64 448
  %46 = bitcast i8* %45 to i32 (...)***
  %47 = bitcast i8* %42 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %48 = getelementptr inbounds i8, i8* %42, i64 456
  %49 = bitcast i8* %48 to i32*
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds i8, i8* %42, i64 464
  %51 = bitcast i8* %50 to i64*
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds i8, i8* %42, i64 472
  %53 = bitcast i8* %52 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %53) #11
  %54 = getelementptr inbounds i8, i8* %42, i64 544
  %55 = bitcast i8* %54 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %55) #11
  %56 = getelementptr inbounds i8, i8* %42, i64 616
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 8
  %58 = getelementptr inbounds i8, i8* %42, i64 624
  %59 = bitcast i8* %58 to i64*
  store i64 65536, i64* %59, align 8
  %60 = getelementptr inbounds i8, i8* %42, i64 632
  %61 = bitcast i8* %60 to i8**
  store i8* %60, i8** %61, align 8
  %62 = getelementptr inbounds i8, i8* %42, i64 640
  %63 = bitcast i8* %62 to i8**
  store i8* %60, i8** %63, align 8
  %64 = getelementptr inbounds i8, i8* %42, i64 648
  %65 = bitcast i8* %64 to i64*
  store i64 0, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %42, i64 656
  store i8 0, i8* %66, align 8
  %67 = getelementptr inbounds i8, i8* %42, i64 660
  %68 = bitcast i8* %67 to i32*
  store i32 0, i32* %68, align 4
  %69 = getelementptr inbounds i8, i8* %42, i64 680
  %70 = getelementptr i8, i8* %42, i64 664
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 32, i1 false) #11
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 -1, i64 12, i1 false) #11
  %71 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4InitEN7network13P2PSocketTypeENSt3__110unique_ptrINS_19P2PSocketClientImplENS4_14default_deleteIS6_EEEERKN3rtc13SocketAddressEttSD_(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %43, i32 %30, %"class.blink::P2PSocketClientImpl"* nonnull %40, %"class.rtc::SocketAddress"* dereferenceable(72) %1, i16 zeroext 0, i16 zeroext 0, %"class.rtc::SocketAddress"* dereferenceable(72) %2)
  br i1 %71, label %77, label %72

72:                                               ; preds = %29
  %73 = bitcast i8* %42 to void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)***
  %74 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)**, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %74, i64 1
  %76 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %75, align 8
  call void %76(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %43) #11
  br label %77

77:                                               ; preds = %29, %72
  %78 = phi %"class.rtc::AsyncPacketSocket"* [ null, %72 ], [ %44, %29 ]
  %79 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %7, i64 0, i32 0, i32 1
  %80 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %79 to i64*
  %81 = load atomic i64, i64* %80 acquire, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %97, label %83

83:                                               ; preds = %77
  %84 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %85 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %84, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %85) #11
  %86 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %87 = load atomic i64, i64* %80 monotonic, align 8
  %88 = inttoptr i64 %87 to %"class.blink::PersistentNode"*
  %89 = icmp eq i64 %87, 0
  br i1 %89, label %96, label %90

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %86, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::CrossThreadPersistentRegion"* %86 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %88, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %88, %"class.blink::PersistentNode"** %91, align 8
  br label %96

96:                                               ; preds = %90, %83
  store atomic i64 0, i64* %80 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %85) #11
  br label %97

97:                                               ; preds = %77, %96
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #11
  br label %98

98:                                               ; preds = %6, %97
  %99 = phi %"class.rtc::AsyncPacketSocket"* [ %78, %97 ], [ null, %6 ]
  ret %"class.rtc::AsyncPacketSocket"* %99
}

declare zeroext i1 @_ZN3net22IsPortAllowedForSchemeEiN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i32, i8*, i64) local_unnamed_addr #4

declare zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rtc::AsyncResolverInterface"* @_ZN5blink22IpcPacketSocketFactory19CreateAsyncResolverEv(%"class.blink::IpcPacketSocketFactory"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::CrossThreadPersistent", align 8
  %3 = bitcast %"class.blink::CrossThreadPersistent"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %3) #11
  %4 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %3, i8 0, i64 16, i1 false) #11, !alias.scope !12
  %6 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11, !noalias !12
  %7 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %6, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %7) #11, !noalias !12
  %8 = getelementptr inbounds %"class.blink::IpcPacketSocketFactory", %"class.blink::IpcPacketSocketFactory"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %8, align 8, !noalias !12
  call void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.236"* nonnull %5, %"class.blink::P2PSocketDispatcher"* %9) #11
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %7) #11
  %10 = call i8* @_Znwm(i64 168) #12
  %11 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %4, align 8
  %12 = bitcast i8* %10 to %"class.rtc::AsyncResolverInterface"*
  call void @_ZN3rtc22AsyncResolverInterfaceC2Ev(%"class.rtc::AsyncResolverInterface"* nonnull %12) #11
  %13 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124AsyncAddressResolverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = call i8* @_Znwm(i64 48) #12
  %15 = bitcast i8* %14 to %"class.blink::P2PAsyncAddressResolver"*
  call void @_ZN5blink23P2PAsyncAddressResolverC1EPNS_19P2PSocketDispatcherE(%"class.blink::P2PAsyncAddressResolver"* nonnull %15, %"class.blink::P2PSocketDispatcher"* %11) #11
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i32*
  %18 = atomicrmw add i32* %17, i32 1 monotonic
  %19 = getelementptr inbounds i8, i8* %10, i64 64
  %20 = bitcast i8* %19 to i8**
  store i8* %14, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 72
  %22 = bitcast i8* %21 to %"class.rtc::SocketAddress"*
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %22) #11
  %23 = getelementptr inbounds i8, i8* %10, i64 144
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #11
  %24 = getelementptr inbounds %"class.blink::CrossThreadPersistent", %"class.blink::CrossThreadPersistent"* %2, i64 0, i32 0, i32 1
  %25 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %24 to i64*
  %26 = load atomic i64, i64* %25 acquire, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %42, label %28

28:                                               ; preds = %1
  %29 = call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %30 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %29, i64 0, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %30) #11
  %31 = call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %32 = load atomic i64, i64* %25 monotonic, align 8
  %33 = inttoptr i64 %32 to %"class.blink::PersistentNode"*
  %34 = icmp eq i64 %32, 0
  br i1 %34, label %41, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %31, i64 0, i32 0, i32 0
  %37 = bitcast %"class.blink::CrossThreadPersistentRegion"* %31 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = inttoptr i64 %32 to i64*
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %33, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %40, align 8
  store %"class.blink::PersistentNode"* %33, %"class.blink::PersistentNode"** %36, align 8
  br label %41

41:                                               ; preds = %35, %28
  store atomic i64 0, i64* %25 release, align 8
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %30) #11
  br label %42

42:                                               ; preds = %1, %41
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %3) #11
  ret %"class.rtc::AsyncResolverInterface"* %12
}

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() local_unnamed_addr #4

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #4

declare void @_ZN3rtc17AsyncPacketSocketC2Ev(%"class.rtc::AsyncPacketSocket"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD2Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %13 [
    i32 1, label %6
    i32 2, label %6
    i32 4, label %6
  ]

6:                                                ; preds = %1, %1, %1
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %7, align 8
  %9 = bitcast %"class.blink::P2PSocketClient"* %8 to void (%"class.blink::P2PSocketClient"*)***
  %10 = load void (%"class.blink::P2PSocketClient"*)**, void (%"class.blink::P2PSocketClient"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %10, i64 4
  %12 = load void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %11, align 8
  tail call void %12(%"class.blink::P2PSocketClient"* %8) #11
  store i32 3, i32* %4, align 8
  br label %13

13:                                               ; preds = %1, %6
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 15
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load atomic i64, i64* @_ZZN5blink12_GLOBAL__N_115IpcPacketSocketD1EvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %19 = inttoptr i64 %18 to %"class.base::HistogramBase"*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = tail call %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i32 1, i32 101, i32 102, i32 1) #11
  %23 = ptrtoint %"class.base::HistogramBase"* %22 to i64
  store atomic i64 %23, i64* @_ZZN5blink12_GLOBAL__N_115IpcPacketSocketD1EvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %24

24:                                               ; preds = %17, %21
  %25 = phi %"class.base::HistogramBase"* [ %19, %17 ], [ %22, %21 ]
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 14
  %27 = load i64, i64* %26, align 8
  %28 = mul i64 %27, 100
  %29 = load i64, i64* %14, align 8
  %30 = udiv i64 %28, %29
  %31 = trunc i64 %30 to i32
  %32 = bitcast %"class.base::HistogramBase"* %25 to void (%"class.base::HistogramBase"*, i32)***
  %33 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %33, i64 6
  %35 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %34, align 8
  tail call void %35(%"class.base::HistogramBase"* %25, i32 %31) #11
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %65, label %41

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %43 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__list_imp.419", %"class.std::__1::__list_imp.419"* %37, i64 0, i32 0
  %45 = getelementptr inbounds %"class.std::__1::__list_imp.419", %"class.std::__1::__list_imp.419"* %37, i64 0, i32 0, i32 0
  %46 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %45, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %46, i64 0, i32 1
  %48 = bitcast %"struct.std::__1::__list_node_base.420"** %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %43, i64 0, i32 0
  %51 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %50, align 8
  %52 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %51, i64 0, i32 1
  %53 = bitcast %"struct.std::__1::__list_node_base.420"** %52 to i64*
  store i64 %49, i64* %53, align 8
  %54 = bitcast %"struct.std::__1::__list_node_base.420"* %43 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.std::__1::__list_node_base.420"** %47 to i64**
  %57 = load i64*, i64** %56, align 8
  store i64 %55, i64* %57, align 8
  store i64 0, i64* %38, align 8
  %58 = icmp eq %"struct.std::__1::__list_node_base.420"* %43, %44
  br i1 %58, label %65, label %59

59:                                               ; preds = %41, %59
  %60 = phi %"struct.std::__1::__list_node_base.420"* [ %62, %59 ], [ %43, %41 ]
  %61 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %60, i64 0, i32 1
  %62 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %61, align 8
  %63 = bitcast %"struct.std::__1::__list_node_base.420"* %60 to i8*
  tail call void @_ZdlPv(i8* %63) #12
  %64 = icmp eq %"struct.std::__1::__list_node_base.420"* %62, %44
  br i1 %64, label %65, label %59

65:                                               ; preds = %59, %36, %41
  %66 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %67 = bitcast %"class.rtc::SocketAddress"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %65, %71
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %76 = bitcast %"class.rtc::SocketAddress"* %75 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #12
  br label %83

83:                                               ; preds = %74, %80
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %85 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %84, align 8
  store %"class.blink::P2PSocketClient"* null, %"class.blink::P2PSocketClient"** %84, align 8
  %86 = icmp eq %"class.blink::P2PSocketClient"* %85, null
  br i1 %86, label %92, label %87

87:                                               ; preds = %83
  %88 = bitcast %"class.blink::P2PSocketClient"* %85 to void (%"class.blink::P2PSocketClient"*)***
  %89 = load void (%"class.blink::P2PSocketClient"*)**, void (%"class.blink::P2PSocketClient"*)*** %88, align 8
  %90 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %89, i64 1
  %91 = load void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %90, align 8
  tail call void %91(%"class.blink::P2PSocketClient"* nonnull %85) #11
  br label %92

92:                                               ; preds = %83, %87
  %93 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  tail call void @_ZN3rtc17AsyncPacketSocketD2Ev(%"class.rtc::AsyncPacketSocket"* %93) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD0Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD2Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0) #11
  %2 = bitcast %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket15GetLocalAddressEv(%"class.rtc::SocketAddress"* noalias sret, %"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %1, i64 0, i32 4
  tail call void @_ZN3rtc13SocketAddressC1ERKS0_(%"class.rtc::SocketAddress"* %0, %"class.rtc::SocketAddress"* dereferenceable(72) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket16GetRemoteAddressEv(%"class.rtc::SocketAddress"* noalias sret, %"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %1, i64 0, i32 5
  tail call void @_ZN3rtc13SocketAddressC1ERKS0_(%"class.rtc::SocketAddress"* %0, %"class.rtc::SocketAddress"* dereferenceable(72) %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket4SendEPKvmRKN3rtc13PacketOptionsE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"struct.rtc::PacketOptions"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %6 = bitcast %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0 to i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)***
  %7 = load i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)**, i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)*** %6, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)*, i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)** %7, i64 5
  %9 = load i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)*, i32 (%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, %"struct.rtc::PacketOptions"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i8* %1, i64 %2, %"class.rtc::SocketAddress"* dereferenceable(72) %5, %"struct.rtc::PacketOptions"* dereferenceable(104) %3) #11
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket6SendToEPKvmRKN3rtc13SocketAddressERKNS4_13PacketOptionsE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"* dereferenceable(72), %"struct.rtc::PacketOptions"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.net::IPEndPoint", align 2
  %9 = alloca %"class.net::IPEndPoint", align 2
  %10 = alloca %"class.net::IPAddress", align 1
  %11 = alloca %"class.logging::LogMessage", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = alloca %"class.std::__1::basic_string", align 8
  %14 = alloca %"class.WTF::Vector.464", align 8
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  switch i32 %16, label %23 [
    i32 0, label %17
    i32 1, label %19
    i32 3, label %21
    i32 4, label %176
  ]

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 11, i32* %18, align 4
  br label %176

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 11, i32* %20, align 4
  br label %176

21:                                               ; preds = %5
  %22 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 107, i32* %22, align 4
  br label %176

23:                                               ; preds = %5
  %24 = icmp eq i64 %2, 0
  br i1 %24, label %176, label %25

25:                                               ; preds = %23
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 15
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, 1
  store i64 %28, i64* %26, align 8
  %29 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 7
  %30 = load i64, i64* %29, align 8
  %31 = icmp ult i64 %30, %2
  br i1 %31, label %32, label %75

32:                                               ; preds = %25
  %33 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), align 16
  %34 = and i8 %33, 25
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36, !prof !15

36:                                               ; preds = %32
  %37 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #11
  %38 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %39 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %38, align 8
  %40 = bitcast %"class.blink::P2PSocketClient"* %39 to i32 (%"class.blink::P2PSocketClient"*)***
  %41 = load i32 (%"class.blink::P2PSocketClient"*)**, i32 (%"class.blink::P2PSocketClient"*)*** %40, align 8
  %42 = getelementptr inbounds i32 (%"class.blink::P2PSocketClient"*)*, i32 (%"class.blink::P2PSocketClient"*)** %41, i64 5
  %43 = load i32 (%"class.blink::P2PSocketClient"*)*, i32 (%"class.blink::P2PSocketClient"*)** %42, align 8
  %44 = tail call i32 %43(%"class.blink::P2PSocketClient"* %39) #11
  store i32 %44, i32* %6, align 4
  %45 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.2, i64 0, i64 0), i8* null, i64 0, i32 8, i64 0, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.3, i64 0, i64 0), i32* nonnull dereferenceable(4) %6)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #11
  br label %46

46:                                               ; preds = %32, %36
  %47 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 9
  %48 = load i8, i8* %47, align 8, !range !16
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %63

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.4, i64 0, i64 0), i32 %54) #11
  call void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #11
  %55 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %50
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #12
  br label %62

62:                                               ; preds = %50, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #11
  store i8 1, i8* %47, align 8
  br label %63

63:                                               ; preds = %46, %62
  %64 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 11, i32* %64, align 4
  %65 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 13
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, %2
  store i64 %67, i64* %65, align 8
  %68 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 14
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %68, align 8
  %71 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 12
  %72 = load i64, i64* %71, align 8
  %73 = icmp ugt i64 %67, %72
  br i1 %73, label %74, label %176

74:                                               ; preds = %63
  store i64 %67, i64* %71, align 8
  br label %176

75:                                               ; preds = %25
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 13
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %77) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %77, i8 -86, i64 20, i1 false)
  call void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  %78 = call zeroext i1 @_ZNK3rtc13SocketAddress14IsUnresolvedIPEv(%"class.rtc::SocketAddress"* %3) #11
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %80) #11
  %81 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %10, i64 0, i32 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 17, i8* nonnull %81) #11
  call void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"* nonnull %10) #11
  %82 = call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %3) #11
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %9, %"class.net::IPAddress"* nonnull dereferenceable(17) %10, i16 zeroext %82) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %77, i8* nonnull align 2 %80, i64 20, i1 false)
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %9) #11
  call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 17, i8* nonnull %81) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %80) #11
  br label %134

83:                                               ; preds = %75
  %84 = call zeroext i1 @_ZN11jingle_glue25SocketAddressToIPEndPointERKN3rtc13SocketAddressEPN3net10IPEndPointE(%"class.rtc::SocketAddress"* dereferenceable(72) %3, %"class.net::IPEndPoint"* nonnull %8) #11
  br i1 %84, label %134, label %85

85:                                               ; preds = %83
  %86 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 1) #11
  br i1 %86, label %87, label %132

87:                                               ; preds = %85
  %88 = bitcast %"class.logging::LogMessage"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %88) #11
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %11, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 413, i32 1) #11
  %89 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %11, i64 0, i32 2
  %90 = bitcast %"class.std::__1::basic_ostringstream"* %89 to %"class.std::__1::basic_ostream"*
  %91 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %90, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @.str.6, i64 0, i64 0), i64 56) #11
  %92 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #11
  %93 = call dereferenceable(32) %"class.rtc::IPAddress"* @_ZNK3rtc13SocketAddress6ipaddrEv(%"class.rtc::SocketAddress"* %3) #11
  call void @_ZNK3rtc9IPAddress17ToSensitiveStringEv(%"class.std::__1::basic_string"* nonnull sret %12, %"class.rtc::IPAddress"* %93) #11
  %94 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %101 = load i64, i64* %100, align 8
  %102 = zext i8 %96 to i64
  %103 = select i1 %97, i8* %99, i8* %92
  %104 = select i1 %97, i64 %101, i64 %102
  %105 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %91, i8* %103, i64 %104) #11
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %105, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.7, i64 0, i64 0), i64 18) #11
  %107 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %107) #11
  %108 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %109 = call dereferenceable(32) %"class.rtc::IPAddress"* @_ZNK3rtc13SocketAddress6ipaddrEv(%"class.rtc::SocketAddress"* %108) #11
  call void @_ZNK3rtc9IPAddress17ToSensitiveStringEv(%"class.std::__1::basic_string"* nonnull sret %13, %"class.rtc::IPAddress"* %109) #11
  %110 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %112 to i64
  %119 = select i1 %113, i8* %115, i8* %107
  %120 = select i1 %113, i64 %117, i64 %118
  %121 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* %119, i64 %120) #11
  %122 = load i8, i8* %111, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %126

124:                                              ; preds = %87
  %125 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %125) #12
  br label %126

126:                                              ; preds = %87, %124
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %107) #11
  %127 = load i8, i8* %95, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %131

129:                                              ; preds = %126
  %130 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %130) #12
  br label %131

131:                                              ; preds = %126, %129
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #11
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %88) #11
  br label %132

132:                                              ; preds = %85, %131
  %133 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 22, i32* %133, align 4
  br label %174

134:                                              ; preds = %83, %79
  %135 = load i64, i64* %29, align 8
  %136 = sub i64 %135, %2
  store i64 %136, i64* %29, align 8
  %137 = bitcast %"class.WTF::Vector.464"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %14, i64 0, i32 0, i32 0, i32 0
  %139 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %14, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 0, i64 16, i1 false) #11
  %140 = trunc i64 %2 to i32
  call void @_ZN3WTF6VectorIaLj0ENS_18PartitionAllocatorEE6AppendIaEEvPKT_j(%"class.WTF::Vector.464"* nonnull %14, i8* %1, i32 %140)
  %141 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %142 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %141, align 8
  %143 = bitcast %"class.blink::P2PSocketClient"* %142 to i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)***
  %144 = load i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)**, i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)*** %143, align 8
  %145 = getelementptr inbounds i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)*, i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)** %144, i64 2
  %146 = load i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)*, i64 (%"class.blink::P2PSocketClient"*, %"class.net::IPEndPoint"*, %"class.WTF::Vector.464"*, %"struct.rtc::PacketOptions"*)** %145, align 8
  %147 = call i64 %146(%"class.blink::P2PSocketClient"* %142, %"class.net::IPEndPoint"* nonnull dereferenceable(20) %8, %"class.WTF::Vector.464"* nonnull dereferenceable(16) %14, %"struct.rtc::PacketOptions"* dereferenceable(104) %4) #11
  %148 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8
  %149 = call i8* @_Znwm(i64 32) #12, !noalias !17
  %150 = bitcast i8* %149 to %"struct.std::__1::__list_node_base.420"**
  %151 = getelementptr inbounds i8, i8* %149, i64 16
  %152 = bitcast i8* %151 to i64*
  store i64 %147, i64* %152, align 8
  %153 = getelementptr inbounds i8, i8* %149, i64 24
  %154 = bitcast i8* %153 to i64*
  store i64 %2, i64* %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::list.418", %"class.std::__1::list.418"* %148, i64 0, i32 0, i32 0
  %156 = getelementptr inbounds i8, i8* %149, i64 8
  %157 = bitcast i8* %156 to %"struct.std::__1::__list_node_base.420"**
  store %"struct.std::__1::__list_node_base.420"* %155, %"struct.std::__1::__list_node_base.420"** %157, align 8
  %158 = getelementptr inbounds %"class.std::__1::list.418", %"class.std::__1::list.418"* %148, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %158, align 8
  store %"struct.std::__1::__list_node_base.420"* %159, %"struct.std::__1::__list_node_base.420"** %150, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base.420"** %160 to i8**
  store i8* %149, i8** %161, align 8
  %162 = bitcast %"class.std::__1::list.418"* %148 to i8**
  store i8* %149, i8** %162, align 8
  %163 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %164 = load i64, i64* %163, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %163, align 8
  call fastcc void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket24TraceSendThrottlingStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0)
  %166 = load i8*, i8** %138, align 8
  %167 = icmp eq i8* %166, null
  br i1 %167, label %173, label %168, !prof !15

168:                                              ; preds = %134
  %169 = load i32, i32* %139, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !2

171:                                              ; preds = %168
  store i32 0, i32* %139, align 4
  br label %172

172:                                              ; preds = %171, %168
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #11
  store i8* null, i8** %138, align 8
  br label %173

173:                                              ; preds = %134, %172
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #11
  br label %174

174:                                              ; preds = %173, %132
  %175 = phi i32 [ %140, %173 ], [ -1, %132 ]
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %77) #11
  br label %176

176:                                              ; preds = %74, %63, %23, %5, %174, %21, %19, %17
  %177 = phi i32 [ %175, %174 ], [ -1, %21 ], [ -1, %19 ], [ -1, %17 ], [ -1, %5 ], [ 0, %23 ], [ -1, %63 ], [ -1, %74 ]
  ret i32 %177
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket5CloseEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %2, align 8
  %4 = bitcast %"class.blink::P2PSocketClient"* %3 to void (%"class.blink::P2PSocketClient"*)***
  %5 = load void (%"class.blink::P2PSocketClient"*)**, void (%"class.blink::P2PSocketClient"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %5, i64 4
  %7 = load void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %6, align 8
  tail call void %7(%"class.blink::P2PSocketClient"* %3) #11
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  store i32 3, i32* %8, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket8GetStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %11 [
    i32 2, label %5
    i32 1, label %4
  ]

4:                                                ; preds = %1
  br label %11

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, -3
  %9 = icmp ult i32 %8, 6
  %10 = select i1 %9, i32 4, i32 2
  br label %11

11:                                               ; preds = %1, %5, %4
  %12 = phi i32 [ 1, %4 ], [ %10, %5 ], [ 0, %1 ]
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket9GetOptionEN3rtc6Socket6OptionEPi(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture readonly, i32, i32* nocapture) unnamed_addr #0 align 2 {
  switch i32 %1, label %10 [
    i32 1, label %6
    i32 2, label %4
    i32 5, label %5
  ]

4:                                                ; preds = %3
  br label %6

5:                                                ; preds = %3
  br label %6

6:                                                ; preds = %3, %5, %4
  %7 = phi i64 [ 1, %4 ], [ 2, %5 ], [ 0, %3 ]
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 11, i64 %7
  %9 = load i32, i32* %8, align 4
  store i32 %9, i32* %2, align 4
  br label %10

10:                                               ; preds = %3, %6
  %11 = phi i32 [ 0, %6 ], [ -1, %3 ]
  ret i32 %11
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @_ZN5blink12_GLOBAL__N_115IpcPacketSocket9SetOptionEN3rtc6Socket6OptionEi(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture, i32, i32) unnamed_addr #0 align 2 {
  switch i32 %1, label %20 [
    i32 1, label %6
    i32 2, label %4
    i32 5, label %5
  ]

4:                                                ; preds = %3
  br label %6

5:                                                ; preds = %3
  br label %6

6:                                                ; preds = %3, %5, %4
  %7 = phi i32 [ 1, %4 ], [ 2, %5 ], [ 0, %3 ]
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 11, i64 %8
  store i32 %2, i32* %9, align 4
  %10 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 2
  br i1 %12, label %13, label %20

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %14, align 8
  %16 = bitcast %"class.blink::P2PSocketClient"* %15 to void (%"class.blink::P2PSocketClient"*, i32, i32)***
  %17 = load void (%"class.blink::P2PSocketClient"*, i32, i32)**, void (%"class.blink::P2PSocketClient"*, i32, i32)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %17, i64 3
  %19 = load void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %18, align 8
  tail call void %19(%"class.blink::P2PSocketClient"* %15, i32 %7, i32 %2) #11
  br label %20

20:                                               ; preds = %3, %6, %13
  %21 = phi i32 [ 0, %13 ], [ 0, %6 ], [ -1, %3 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket8GetErrorEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket8SetErrorEi(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nocapture, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket6OnOpenERKN3net10IPEndPointES5_(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.rtc::SocketAddress", align 8
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %6 = tail call zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.rtc::SocketAddress"* %5) #11
  br i1 %6, label %12, label %7

7:                                                ; preds = %3
  %8 = bitcast %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0 to void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)***
  %9 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)**, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %9, i64 15
  %11 = load void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)*, void (%"class.blink::(anonymous namespace)::IpcPacketSocket"*)** %10, align 8
  tail call void %11(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0) #11
  br label %95

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  store i32 2, i32* %13, align 8
  tail call fastcc void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket24TraceSendThrottlingStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0)
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 11, i64 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, -1
  br i1 %17, label %44, label %38

18:                                               ; preds = %112
  %19 = inttoptr i64 %116 to %"struct.std::__1::__list_node.497"*
  %20 = bitcast %"class.std::__1::__list_iterator"* %119 to i64*
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi %"struct.std::__1::__list_node.497"* [ %19, %18 ], [ %32, %21 ]
  %23 = phi %"struct.std::__1::__list_node_base"* [ %122, %18 ], [ %30, %21 ]
  %24 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %22, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %23, i64 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  store i64 %27, i64* %20, align 8
  %28 = bitcast %"class.sigslot::_opaque_connection"* %24 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::SocketAddress"*)**
  %29 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::SocketAddress"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::SocketAddress"*)** %28, align 8
  tail call void %29(%"class.sigslot::_opaque_connection"* %24, %"class.rtc::AsyncPacketSocket"* %113, %"class.rtc::SocketAddress"* dereferenceable(72) %5) #11
  %30 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %121, align 8
  %31 = icmp eq %"struct.std::__1::__list_node_base"* %30, %120
  %32 = bitcast %"struct.std::__1::__list_node_base"* %30 to %"struct.std::__1::__list_node.497"*
  br i1 %31, label %33, label %21

33:                                               ; preds = %21, %112
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = add i32 %35, -3
  %37 = icmp ult i32 %36, 6
  br i1 %37, label %48, label %95

38:                                               ; preds = %12
  %39 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %14, align 8
  %40 = bitcast %"class.blink::P2PSocketClient"* %39 to void (%"class.blink::P2PSocketClient"*, i32, i32)***
  %41 = load void (%"class.blink::P2PSocketClient"*, i32, i32)**, void (%"class.blink::P2PSocketClient"*, i32, i32)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %41, i64 3
  %43 = load void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %42, align 8
  tail call void %43(%"class.blink::P2PSocketClient"* %39, i32 0, i32 %16) #11
  br label %44

44:                                               ; preds = %12, %38
  %45 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 11, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, -1
  br i1 %47, label %102, label %96

48:                                               ; preds = %33
  %49 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %50 = tail call zeroext i1 @_ZNK3rtc13SocketAddress14IsUnresolvedIPEv(%"class.rtc::SocketAddress"* %49) #11
  br i1 %50, label %51, label %69

51:                                               ; preds = %48
  %52 = bitcast %"class.rtc::SocketAddress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %52) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 -86, i64 72, i1 false)
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %4) #11
  %53 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %2, i64 0, i32 0, i32 0, i32 1
  %54 = load i8, i8* %53, align 1
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %51
  %57 = call zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* dereferenceable(20) %2, %"class.rtc::SocketAddress"* nonnull %4) #11
  br i1 %57, label %58, label %60

58:                                               ; preds = %56
  %59 = call dereferenceable(32) %"class.rtc::IPAddress"* @_ZNK3rtc13SocketAddress6ipaddrEv(%"class.rtc::SocketAddress"* nonnull %4) #11
  call void @_ZN3rtc13SocketAddress13SetResolvedIPERKNS_9IPAddressE(%"class.rtc::SocketAddress"* %49, %"class.rtc::IPAddress"* dereferenceable(32) %59) #11
  br label %60

60:                                               ; preds = %58, %56, %51
  %61 = bitcast %"class.rtc::SocketAddress"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %67) #12
  br label %68

68:                                               ; preds = %60, %65
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %52) #11
  br label %69

69:                                               ; preds = %68, %48
  %70 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 5, i32 0, i32 1, i32 0, i32 0, i32 1
  %71 = bitcast %"struct.std::__1::__list_node_base"** %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 5, i32 0, i32 2, i32 0
  %74 = bitcast %"struct.std::__1::__list_node_base"** %73 to i64*
  store i64 %72, i64* %74, align 8
  %75 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 5, i32 0, i32 2
  %76 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 5, i32 0, i32 1, i32 0, i32 0
  %77 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %75, i64 0, i32 0
  %78 = inttoptr i64 %72 to %"struct.std::__1::__list_node_base"*
  %79 = icmp eq %"struct.std::__1::__list_node_base"* %76, %78
  br i1 %79, label %95, label %80

80:                                               ; preds = %69
  %81 = inttoptr i64 %72 to %"struct.std::__1::__list_node.497"*
  %82 = bitcast %"class.std::__1::__list_iterator"* %75 to i64*
  br label %83

83:                                               ; preds = %83, %80
  %84 = phi %"struct.std::__1::__list_node.497"* [ %81, %80 ], [ %94, %83 ]
  %85 = phi %"struct.std::__1::__list_node_base"* [ %78, %80 ], [ %92, %83 ]
  %86 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %84, i64 0, i32 1
  %87 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 1
  %88 = bitcast %"struct.std::__1::__list_node_base"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  store i64 %89, i64* %82, align 8
  %90 = bitcast %"class.sigslot::_opaque_connection"* %86 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)**
  %91 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)** %90, align 8
  call void %91(%"class.sigslot::_opaque_connection"* %86, %"class.rtc::AsyncPacketSocket"* %113) #11
  %92 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %77, align 8
  %93 = icmp eq %"struct.std::__1::__list_node_base"* %92, %76
  %94 = bitcast %"struct.std::__1::__list_node_base"* %92 to %"struct.std::__1::__list_node.497"*
  br i1 %93, label %95, label %83

95:                                               ; preds = %83, %69, %7, %33
  ret void

96:                                               ; preds = %44
  %97 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %14, align 8
  %98 = bitcast %"class.blink::P2PSocketClient"* %97 to void (%"class.blink::P2PSocketClient"*, i32, i32)***
  %99 = load void (%"class.blink::P2PSocketClient"*, i32, i32)**, void (%"class.blink::P2PSocketClient"*, i32, i32)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %99, i64 3
  %101 = load void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %100, align 8
  tail call void %101(%"class.blink::P2PSocketClient"* %97, i32 1, i32 %46) #11
  br label %102

102:                                              ; preds = %96, %44
  %103 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 11, i64 2
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %14, align 8
  %108 = bitcast %"class.blink::P2PSocketClient"* %107 to void (%"class.blink::P2PSocketClient"*, i32, i32)***
  %109 = load void (%"class.blink::P2PSocketClient"*, i32, i32)**, void (%"class.blink::P2PSocketClient"*, i32, i32)*** %108, align 8
  %110 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %109, i64 3
  %111 = load void (%"class.blink::P2PSocketClient"*, i32, i32)*, void (%"class.blink::P2PSocketClient"*, i32, i32)** %110, align 8
  tail call void %111(%"class.blink::P2PSocketClient"* %107, i32 2, i32 %104) #11
  br label %112

112:                                              ; preds = %106, %102
  %113 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  %114 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 1
  %115 = bitcast %"struct.std::__1::__list_node_base"** %114 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 4, i32 0, i32 2, i32 0
  %118 = bitcast %"struct.std::__1::__list_node_base"** %117 to i64*
  store i64 %116, i64* %118, align 8
  %119 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 4, i32 0, i32 2
  %120 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 4, i32 0, i32 1, i32 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %119, i64 0, i32 0
  %122 = inttoptr i64 %116 to %"struct.std::__1::__list_node_base"*
  %123 = icmp eq %"struct.std::__1::__list_node_base"* %120, %122
  br i1 %123, label %33, label %18
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket23OnIncomingTcpConnectionERKN3net10IPEndPointENSt3__110unique_ptrINS_15P2PSocketClientENS6_14default_deleteIS8_EEEE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.blink::P2PSocketClient"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.rtc::SocketAddress", align 8
  %5 = ptrtoint %"class.blink::P2PSocketClient"* %2 to i64
  %6 = tail call i8* @_Znwm(i64 712) #12
  %7 = bitcast i8* %6 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  %8 = bitcast i8* %6 to %"class.rtc::AsyncPacketSocket"*
  tail call void @_ZN3rtc17AsyncPacketSocketC2Ev(%"class.rtc::AsyncPacketSocket"* nonnull %8) #11
  %9 = getelementptr inbounds i8, i8* %6, i64 448
  %10 = bitcast i8* %9 to i32 (...)***
  %11 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [19 x i8*], [9 x i8*] }, { [19 x i8*], [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_115IpcPacketSocketE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 456
  %13 = bitcast i8* %12 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %6, i64 464
  %15 = bitcast i8* %14 to i64*
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 472
  %17 = bitcast i8* %16 to %"class.rtc::SocketAddress"*
  tail call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %17) #11
  %18 = getelementptr inbounds i8, i8* %6, i64 544
  %19 = bitcast i8* %18 to %"class.rtc::SocketAddress"*
  tail call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* %19) #11
  %20 = getelementptr inbounds i8, i8* %6, i64 616
  %21 = bitcast i8* %20 to i32*
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 624
  %23 = bitcast i8* %22 to i64*
  store i64 65536, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 632
  %25 = bitcast i8* %24 to i8**
  store i8* %24, i8** %25, align 8
  %26 = getelementptr inbounds i8, i8* %6, i64 640
  %27 = bitcast i8* %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %6, i64 648
  %29 = bitcast i8* %28 to i64*
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %6, i64 656
  store i8 0, i8* %30, align 8
  %31 = getelementptr inbounds i8, i8* %6, i64 660
  %32 = bitcast i8* %31 to i32*
  store i32 0, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %6, i64 680
  %34 = getelementptr i8, i8* %6, i64 664
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 32, i1 false) #11
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %34, i8 -1, i64 12, i1 false) #11
  %35 = bitcast %"class.rtc::SocketAddress"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %35) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 72, i1 false)
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %4) #11
  %36 = call zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.rtc::SocketAddress"* nonnull %4) #11
  %37 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %38 = bitcast i8* %14 to %"class.blink::P2PSocketClient"**
  %39 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %38, align 8
  store i64 %5, i64* %15, align 8
  %40 = icmp eq %"class.blink::P2PSocketClient"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %3
  %42 = bitcast %"class.blink::P2PSocketClient"* %39 to void (%"class.blink::P2PSocketClient"*)***
  %43 = load void (%"class.blink::P2PSocketClient"*)**, void (%"class.blink::P2PSocketClient"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %43, i64 1
  %45 = load void (%"class.blink::P2PSocketClient"*)*, void (%"class.blink::P2PSocketClient"*)** %44, align 8
  call void %45(%"class.blink::P2PSocketClient"* nonnull %39) #11
  br label %46

46:                                               ; preds = %3, %41
  %47 = call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %17, %"class.rtc::SocketAddress"* dereferenceable(72) %37) #11
  %48 = call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %19, %"class.rtc::SocketAddress"* nonnull dereferenceable(72) %4) #11
  store i32 2, i32* %21, align 8
  call fastcc void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket24TraceSendThrottlingStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* nonnull %7) #11
  %49 = load %"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClient"** %38, align 8
  %50 = bitcast i8* %9 to %"class.blink::P2PSocketClientDelegate"*
  %51 = bitcast %"class.blink::P2PSocketClient"* %49 to void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)***
  %52 = load void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)**, void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)*, void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)** %52, i64 6
  %54 = load void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)*, void (%"class.blink::P2PSocketClient"*, %"class.blink::P2PSocketClientDelegate"*)** %53, align 8
  call void %54(%"class.blink::P2PSocketClient"* %49, %"class.blink::P2PSocketClientDelegate"* %50) #11
  %55 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  %56 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = bitcast %"struct.std::__1::__list_node_base"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 7, i32 0, i32 2, i32 0
  %60 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 7, i32 0, i32 2
  %62 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 7, i32 0, i32 1, i32 0, i32 0
  %63 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %61, i64 0, i32 0
  %64 = inttoptr i64 %58 to %"struct.std::__1::__list_node_base"*
  %65 = icmp eq %"struct.std::__1::__list_node_base"* %62, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %46
  %67 = inttoptr i64 %58 to %"struct.std::__1::__list_node.497"*
  %68 = bitcast %"class.std::__1::__list_iterator"* %61 to i64*
  br label %69

69:                                               ; preds = %69, %66
  %70 = phi %"struct.std::__1::__list_node.497"* [ %67, %66 ], [ %80, %69 ]
  %71 = phi %"struct.std::__1::__list_node_base"* [ %64, %66 ], [ %78, %69 ]
  %72 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %70, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %74 = bitcast %"struct.std::__1::__list_node_base"** %73 to i64*
  %75 = load i64, i64* %74, align 8
  store i64 %75, i64* %68, align 8
  %76 = bitcast %"class.sigslot::_opaque_connection"* %72 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)**
  %77 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"class.rtc::AsyncPacketSocket"*)** %76, align 8
  call void %77(%"class.sigslot::_opaque_connection"* %72, %"class.rtc::AsyncPacketSocket"* %55, %"class.rtc::AsyncPacketSocket"* nonnull %8) #11
  %78 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %63, align 8
  %79 = icmp eq %"struct.std::__1::__list_node_base"* %78, %62
  %80 = bitcast %"struct.std::__1::__list_node_base"* %78 to %"struct.std::__1::__list_node.497"*
  br i1 %79, label %81, label %69

81:                                               ; preds = %69, %46
  %82 = bitcast %"class.rtc::SocketAddress"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %81, %86
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnSendCompleteERKN7network20P2PSendPacketMetricsE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"struct.network::P2PSendPacketMetrics"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"struct.rtc::SentPacket", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %13

10:                                               ; preds = %2
  %11 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 587, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.17, i64 0, i64 0)) #11
  %12 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  br label %13

13:                                               ; preds = %2, %10
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %15 = bitcast %"struct.std::__1::__list_node_base.420"** %14 to %"struct.std::__1::__list_node"**
  %16 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %15, align 8
  %17 = getelementptr inbounds %"struct.network::P2PSendPacketMetrics", %"struct.network::P2PSendPacketMetrics"* %1, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  %20 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 0
  br i1 %19, label %29, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, %18
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str.5, i64 0, i64 0), i32 594, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.18, i64 0, i64 0)) #11
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #11
  %28 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %14, align 8
  br label %29

29:                                               ; preds = %21, %13, %25
  %30 = phi %"struct.std::__1::__list_node_base.420"* [ %20, %21 ], [ %20, %13 ], [ %28, %25 ]
  %31 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %16, i64 0, i32 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 7
  %34 = load i64, i64* %33, align 8
  %35 = add i64 %34, %32
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %30, i64 0, i32 1
  %37 = bitcast %"struct.std::__1::__list_node_base.420"** %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %30, i64 0, i32 0
  %40 = load %"struct.std::__1::__list_node_base.420"*, %"struct.std::__1::__list_node_base.420"** %39, align 8
  %41 = getelementptr inbounds %"struct.std::__1::__list_node_base.420", %"struct.std::__1::__list_node_base.420"* %40, i64 0, i32 1
  %42 = bitcast %"struct.std::__1::__list_node_base.420"** %41 to i64*
  store i64 %38, i64* %42, align 8
  %43 = bitcast %"struct.std::__1::__list_node_base.420"* %30 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"struct.std::__1::__list_node_base.420"** %36 to i64**
  %46 = load i64*, i64** %45, align 8
  store i64 %44, i64* %46, align 8
  %47 = load i64, i64* %7, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %7, align 8
  %49 = bitcast %"struct.std::__1::__list_node_base.420"* %30 to i8*
  call void @_ZdlPv(i8* %49) #12
  call fastcc void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket24TraceSendThrottlingStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %0)
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  %51 = bitcast %"struct.rtc::SentPacket"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %51) #11
  %52 = getelementptr inbounds %"struct.network::P2PSendPacketMetrics", %"struct.network::P2PSendPacketMetrics"* %1, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.network::P2PSendPacketMetrics", %"struct.network::P2PSendPacketMetrics"* %1, i64 0, i32 2
  %56 = load i64, i64* %55, align 8
  call void @_ZN3rtc10SentPacketC1Ell(%"struct.rtc::SentPacket"* nonnull %5, i64 %54, i64 %56) #11
  %57 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 2, i32 0, i32 2, i32 0
  %61 = bitcast %"struct.std::__1::__list_node_base"** %60 to i64*
  store i64 %59, i64* %61, align 8
  %62 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %63 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %64 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %62, i64 0, i32 0
  %65 = inttoptr i64 %59 to %"struct.std::__1::__list_node_base"*
  %66 = icmp eq %"struct.std::__1::__list_node_base"* %63, %65
  br i1 %66, label %82, label %67

67:                                               ; preds = %29
  %68 = inttoptr i64 %59 to %"struct.std::__1::__list_node.497"*
  %69 = bitcast %"class.std::__1::__list_iterator"* %62 to i64*
  br label %70

70:                                               ; preds = %70, %67
  %71 = phi %"struct.std::__1::__list_node.497"* [ %68, %67 ], [ %81, %70 ]
  %72 = phi %"struct.std::__1::__list_node_base"* [ %65, %67 ], [ %79, %70 ]
  %73 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %71, i64 0, i32 1
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %72, i64 0, i32 1
  %75 = bitcast %"struct.std::__1::__list_node_base"** %74 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %69, align 8
  %77 = bitcast %"class.sigslot::_opaque_connection"* %73 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)**
  %78 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, %"struct.rtc::SentPacket"*)** %77, align 8
  call void %78(%"class.sigslot::_opaque_connection"* %73, %"class.rtc::AsyncPacketSocket"* %50, %"struct.rtc::SentPacket"* nonnull dereferenceable(56) %5) #11
  %79 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %80 = icmp eq %"struct.std::__1::__list_node_base"* %79, %63
  %81 = bitcast %"struct.std::__1::__list_node_base"* %79 to %"struct.std::__1::__list_node.497"*
  br i1 %80, label %82, label %70

82:                                               ; preds = %70, %29
  %83 = getelementptr inbounds %"struct.rtc::SentPacket", %"struct.rtc::SentPacket"* %5, i64 0, i32 2
  call void @_ZN3rtc10PacketInfoD1Ev(%"struct.rtc::PacketInfo"* %83) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %51) #11
  %84 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 9
  %85 = load i8, i8* %84, align 8, !range !16
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %127, label %87

87:                                               ; preds = %82
  %88 = load i64, i64* %33, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %127, label %90

90:                                               ; preds = %87
  %91 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #11
  %92 = load i64, i64* %7, align 8
  %93 = trunc i64 %92 to i32
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %6, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.19, i64 0, i64 0), i32 %93) #11
  call void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #11
  %94 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %90
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %90, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #11
  store i8 0, i8* %84, align 8
  %102 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 3, i32 0, i32 1, i32 0, i32 0, i32 1
  %103 = bitcast %"struct.std::__1::__list_node_base"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 3, i32 0, i32 2, i32 0
  %106 = bitcast %"struct.std::__1::__list_node_base"** %105 to i64*
  store i64 %104, i64* %106, align 8
  %107 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 3, i32 0, i32 2
  %108 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 3, i32 0, i32 1, i32 0, i32 0
  %109 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %107, i64 0, i32 0
  %110 = inttoptr i64 %104 to %"struct.std::__1::__list_node_base"*
  %111 = icmp eq %"struct.std::__1::__list_node_base"* %108, %110
  br i1 %111, label %127, label %112

112:                                              ; preds = %101
  %113 = inttoptr i64 %104 to %"struct.std::__1::__list_node.497"*
  %114 = bitcast %"class.std::__1::__list_iterator"* %107 to i64*
  br label %115

115:                                              ; preds = %115, %112
  %116 = phi %"struct.std::__1::__list_node.497"* [ %113, %112 ], [ %126, %115 ]
  %117 = phi %"struct.std::__1::__list_node_base"* [ %110, %112 ], [ %124, %115 ]
  %118 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %116, i64 0, i32 1
  %119 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %117, i64 0, i32 1
  %120 = bitcast %"struct.std::__1::__list_node_base"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  store i64 %121, i64* %114, align 8
  %122 = bitcast %"class.sigslot::_opaque_connection"* %118 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)**
  %123 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*)** %122, align 8
  call void %123(%"class.sigslot::_opaque_connection"* %118, %"class.rtc::AsyncPacketSocket"* %50) #11
  %124 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %109, align 8
  %125 = icmp eq %"struct.std::__1::__list_node_base"* %124, %108
  %126 = bitcast %"struct.std::__1::__list_node_base"* %124 to %"struct.std::__1::__list_node.497"*
  br i1 %125, label %127, label %115

127:                                              ; preds = %115, %101, %87, %82
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket7OnErrorEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -3
  %5 = icmp ult i32 %4, 2
  store i32 4, i32* %2, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 10
  store i32 103, i32* %6, align 4
  br i1 %5, label %34, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::__list_node_base"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 6, i32 0, i32 2, i32 0
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  store i64 %11, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 6, i32 0, i32 2
  %15 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %16 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %14, i64 0, i32 0
  %17 = inttoptr i64 %11 to %"struct.std::__1::__list_node_base"*
  %18 = icmp eq %"struct.std::__1::__list_node_base"* %15, %17
  br i1 %18, label %34, label %19

19:                                               ; preds = %7
  %20 = inttoptr i64 %11 to %"struct.std::__1::__list_node.497"*
  %21 = bitcast %"class.std::__1::__list_iterator"* %14 to i64*
  br label %22

22:                                               ; preds = %22, %19
  %23 = phi %"struct.std::__1::__list_node.497"* [ %20, %19 ], [ %33, %22 ]
  %24 = phi %"struct.std::__1::__list_node_base"* [ %17, %19 ], [ %31, %22 ]
  %25 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %23, i64 0, i32 1
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %24, i64 0, i32 1
  %27 = bitcast %"struct.std::__1::__list_node_base"** %26 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %21, align 8
  %29 = bitcast %"class.sigslot::_opaque_connection"* %25 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)**
  %30 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)** %29, align 8
  tail call void %30(%"class.sigslot::_opaque_connection"* %25, %"class.rtc::AsyncPacketSocket"* %8, i32 0) #11
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %32 = icmp eq %"struct.std::__1::__list_node_base"* %31, %15
  %33 = bitcast %"struct.std::__1::__list_node_base"* %31 to %"struct.std::__1::__list_node.497"*
  br i1 %32, label %34, label %22

34:                                               ; preds = %22, %7, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnDataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS6_18PartitionAllocatorEEERKN4base9TimeTicksE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.WTF::Vector.464"* dereferenceable(16), %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.rtc::SocketAddress", align 8
  %6 = alloca i64, align 8
  %7 = bitcast %"class.rtc::SocketAddress"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %7) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 72, i1 false)
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %5) #11
  %8 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 5
  %13 = call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* nonnull %5, %"class.rtc::SocketAddress"* dereferenceable(72) %12) #11
  br label %16

14:                                               ; preds = %4
  %15 = call zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.rtc::SocketAddress"* nonnull %5) #11
  br i1 %15, label %16, label %51

16:                                               ; preds = %14, %11
  %17 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0
  %18 = call dereferenceable(1) i8* @_ZNK3WTF6VectorIaLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.464"* %2, i32 0) #11
  %19 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %2, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  %23 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %6, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"struct.std::__1::__list_node_base"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %29 = bitcast %"struct.std::__1::__list_node_base"** %28 to i64*
  store i64 %27, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %31 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %30, i64 0, i32 0
  %33 = inttoptr i64 %27 to %"struct.std::__1::__list_node_base"*
  %34 = icmp eq %"struct.std::__1::__list_node_base"* %31, %33
  br i1 %34, label %50, label %35

35:                                               ; preds = %16
  %36 = inttoptr i64 %27 to %"struct.std::__1::__list_node.497"*
  %37 = bitcast %"class.std::__1::__list_iterator"* %30 to i64*
  br label %38

38:                                               ; preds = %38, %35
  %39 = phi %"struct.std::__1::__list_node.497"* [ %36, %35 ], [ %49, %38 ]
  %40 = phi %"struct.std::__1::__list_node_base"* [ %33, %35 ], [ %47, %38 ]
  %41 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %39, i64 0, i32 1
  %42 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %40, i64 0, i32 1
  %43 = bitcast %"struct.std::__1::__list_node_base"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  store i64 %44, i64* %37, align 8
  %45 = bitcast %"class.sigslot::_opaque_connection"* %41 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)**
  %46 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i8*, i64, %"class.rtc::SocketAddress"*, i64*)** %45, align 8
  call void %46(%"class.sigslot::_opaque_connection"* %41, %"class.rtc::AsyncPacketSocket"* %17, i8* %18, i64 %21, %"class.rtc::SocketAddress"* nonnull dereferenceable(72) %5, i64* nonnull dereferenceable(8) %6) #11
  %47 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %32, align 8
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %47, %31
  %49 = bitcast %"struct.std::__1::__list_node_base"* %47 to %"struct.std::__1::__list_node.497"*
  br i1 %48, label %50, label %38

50:                                               ; preds = %38, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %51

51:                                               ; preds = %14, %50
  %52 = bitcast %"class.rtc::SocketAddress"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #12
  br label %59

59:                                               ; preds = %51, %56
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocketD1Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD2Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %3) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocketD0Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocketD2Ev(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %3) #11
  %4 = bitcast %"class.std::__1::__list_iterator"* %2 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket6OnOpenERKN3net10IPEndPointES5_(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket6OnOpenERKN3net10IPEndPointES5_(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %5, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.net::IPEndPoint"* dereferenceable(20) %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket23OnIncomingTcpConnectionERKN3net10IPEndPointENSt3__110unique_ptrINS_15P2PSocketClientENS6_14default_deleteIS8_EEEE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.blink::P2PSocketClient"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket23OnIncomingTcpConnectionERKN3net10IPEndPointENSt3__110unique_ptrINS_15P2PSocketClientENS6_14default_deleteIS8_EEEE(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %5, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.blink::P2PSocketClient"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket14OnSendCompleteERKN7network20P2PSendPacketMetricsE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"struct.network::P2PSendPacketMetrics"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %4 = bitcast %"class.std::__1::__list_iterator"* %3 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnSendCompleteERKN7network20P2PSendPacketMetricsE(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %4, %"struct.network::P2PSendPacketMetrics"* dereferenceable(24) %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket7OnErrorEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %3 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  %4 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 77
  %5 = bitcast %"class.std::__1::__list_iterator"* %4 to i32*
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -3
  %8 = icmp ult i32 %7, 2
  store i32 4, i32* %5, align 8
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %3, i64 0, i32 10
  store i32 103, i32* %9, align 4
  br i1 %8, label %38, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.std::__1::__list_iterator"* %2 to %"class.rtc::AsyncPacketSocket"*
  %12 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 45, i32 0
  %13 = bitcast %"struct.std::__1::__list_node_base"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 47, i32 0
  %16 = bitcast %"struct.std::__1::__list_node_base"** %15 to i64*
  store i64 %14, i64* %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 47
  %18 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %2, i64 44
  %19 = bitcast %"class.std::__1::__list_iterator"* %18 to %"struct.std::__1::__list_node_base"*
  %20 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %17, i64 0, i32 0
  %21 = inttoptr i64 %14 to %"struct.std::__1::__list_node_base"*
  %22 = icmp eq %"struct.std::__1::__list_node_base"* %19, %21
  br i1 %22, label %38, label %23

23:                                               ; preds = %10
  %24 = inttoptr i64 %14 to %"struct.std::__1::__list_node.497"*
  %25 = bitcast %"class.std::__1::__list_iterator"* %17 to i64*
  br label %26

26:                                               ; preds = %26, %23
  %27 = phi %"struct.std::__1::__list_node.497"* [ %24, %23 ], [ %37, %26 ]
  %28 = phi %"struct.std::__1::__list_node_base"* [ %21, %23 ], [ %35, %26 ]
  %29 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %27, i64 0, i32 1
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %28, i64 0, i32 1
  %31 = bitcast %"struct.std::__1::__list_node_base"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  store i64 %32, i64* %25, align 8
  %33 = bitcast %"class.sigslot::_opaque_connection"* %29 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)**
  %34 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncPacketSocket"*, i32)** %33, align 8
  tail call void %34(%"class.sigslot::_opaque_connection"* %29, %"class.rtc::AsyncPacketSocket"* %11, i32 0) #11
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %20, align 8
  %36 = icmp eq %"struct.std::__1::__list_node_base"* %35, %19
  %37 = bitcast %"struct.std::__1::__list_node_base"* %35 to %"struct.std::__1::__list_node.497"*
  br i1 %36, label %38, label %26

38:                                               ; preds = %26, %1, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZThn448_N5blink12_GLOBAL__N_115IpcPacketSocket14OnDataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS6_18PartitionAllocatorEEERKN4base9TimeTicksE(%"class.blink::(anonymous namespace)::IpcPacketSocket"*, %"class.net::IPEndPoint"* dereferenceable(20), %"class.WTF::Vector.464"* dereferenceable(16), %"class.base::TimeTicks"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 -1, i32 0, i32 4, i32 0, i32 2
  %6 = bitcast %"class.std::__1::__list_iterator"* %5 to %"class.blink::(anonymous namespace)::IpcPacketSocket"*
  tail call void @_ZN5blink12_GLOBAL__N_115IpcPacketSocket14OnDataReceivedERKN3net10IPEndPointERKN3WTF6VectorIaLj0ENS6_18PartitionAllocatorEEERKN4base9TimeTicksE(%"class.blink::(anonymous namespace)::IpcPacketSocket"* %6, %"class.net::IPEndPoint"* dereferenceable(20) %1, %"class.WTF::Vector.464"* dereferenceable(16) %2, %"class.base::TimeTicks"* dereferenceable(8) %3)
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base15LinearHistogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc17AsyncPacketSocketD2Ev(%"class.rtc::AsyncPacketSocket"*) unnamed_addr #7

declare void @_ZN3rtc13SocketAddressC1ERKS0_(%"class.rtc::SocketAddress"*, %"class.rtc::SocketAddress"* dereferenceable(72)) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, i32* dereferenceable(4)) local_unnamed_addr #8 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #11
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #11
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #11
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #11
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 3, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = load i32, i32* %8, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0, i32 0
  store i64 %20, i64* %21, align 8
  %22 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #11
  %23 = load i8, i8* %16, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %59, label %25

25:                                               ; preds = %9, %54
  %26 = phi i64 [ %55, %54 ], [ 0, %9 ]
  %27 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = icmp eq i8 %28, 8
  br i1 %29, label %30, label %41

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %32 = bitcast %"union.base::trace_event::TraceValue"* %31 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %33 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %32, align 8
  %34 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %30
  %36 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %33 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %37 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %37, i64 1
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %38, align 8
  call void %39(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %33) #11
  %40 = load i8, i8* %27, align 1
  br label %41

41:                                               ; preds = %35, %25
  %42 = phi i8 [ %28, %25 ], [ %40, %35 ]
  %43 = icmp eq i8 %42, 9
  br i1 %43, label %44, label %54

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %26
  %46 = bitcast %"union.base::trace_event::TraceValue"* %45 to %"class.protozero::HeapBuffered"**
  %47 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %46, align 8
  %48 = icmp eq %"class.protozero::HeapBuffered"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %50) #11
  %51 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %51) #11
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %47, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %52) #11
  %53 = bitcast %"class.protozero::HeapBuffered"* %47 to i8*
  call void @_ZdlPv(i8* %53) #12
  br label %54

54:                                               ; preds = %49, %44, %41, %30
  %55 = add nuw nsw i64 %26, 1
  %56 = load i8, i8* %16, align 8
  %57 = zext i8 %56 to i64
  %58 = icmp ult i64 %55, %57
  br i1 %58, label %25, label %59

59:                                               ; preds = %54, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #11
  ret i64 %22
}

declare void @_ZN5blink16WebRtcLogMessageERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #4

declare void @_ZN3net10IPEndPointC1Ev(%"class.net::IPEndPoint"*) unnamed_addr #4

declare zeroext i1 @_ZNK3rtc13SocketAddress14IsUnresolvedIPEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #4

declare void @_ZN3net9IPAddressC1Ev(%"class.net::IPAddress"*) unnamed_addr #4

declare void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"*, %"class.net::IPAddress"* dereferenceable(17), i16 zeroext) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #7

declare zeroext i1 @_ZN11jingle_glue25SocketAddressToIPEndPointERKN3rtc13SocketAddressEPN3net10IPEndPointE(%"class.rtc::SocketAddress"* dereferenceable(72), %"class.net::IPEndPoint"*) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

declare dereferenceable(32) %"class.rtc::IPAddress"* @_ZNK3rtc13SocketAddress6ipaddrEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #4

declare void @_ZNK3rtc9IPAddress17ToSensitiveStringEv(%"class.std::__1::basic_string"* sret, %"class.rtc::IPAddress"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIaLj0ENS_18PartitionAllocatorEE6AppendIaEEvPKT_j(%"class.WTF::Vector.464"*, i8*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %87

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ugt i8* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %15, i64 %18
  %20 = icmp ugt i8* %19, %1
  br i1 %20, label %52, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  %29 = icmp ult i32 %11, %28
  br i1 %29, label %30, label %87, !prof !15

30:                                               ; preds = %21
  %31 = icmp eq i8* %15, null
  %32 = zext i32 %28 to i64
  %33 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIaEEmm(i64 %32) #11
  %34 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %33, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIaEEPKcv, i64 0, i64 0)) #11
  %35 = ptrtoint i8* %34 to i64
  br i1 %31, label %36, label %39

36:                                               ; preds = %30
  %37 = bitcast %"class.WTF::Vector.464"* %0 to i64*
  store atomic i64 %35, i64* %37 monotonic, align 8
  %38 = trunc i64 %33 to i32
  store i32 %38, i32* %10, align 8
  br label %87

39:                                               ; preds = %30
  %40 = load i8*, i8** %14, align 8
  %41 = icmp ne i8* %34, null
  %42 = icmp ne i8* %40, null
  %43 = and i1 %41, %42
  br i1 %43, label %44, label %48, !prof !15

44:                                               ; preds = %39
  %45 = load i32, i32* %7, align 4
  %46 = zext i32 %45 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* nonnull align 1 %40, i64 %46, i1 false) #11
  %47 = load i8*, i8** %14, align 8
  br label %48

48:                                               ; preds = %44, %39
  %49 = phi i8* [ %40, %39 ], [ %47, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.464"* %0 to i64*
  store atomic i64 %35, i64* %50 monotonic, align 8
  %51 = trunc i64 %33 to i32
  store i32 %51, i32* %10, align 8
  br label %87

52:                                               ; preds = %17
  %53 = ptrtoint i8* %1 to i64
  %54 = ptrtoint i8* %15 to i64
  %55 = sub i64 %53, %54
  %56 = lshr i32 %11, 2
  %57 = add nuw i32 %11, 1
  %58 = add i32 %57, %56
  %59 = icmp ugt i32 %58, 4
  %60 = select i1 %59, i32 %58, i32 4
  %61 = icmp ugt i32 %60, %9
  %62 = select i1 %61, i32 %60, i32 %9
  %63 = icmp ult i32 %11, %62
  br i1 %63, label %64, label %84, !prof !15

64:                                               ; preds = %52
  %65 = icmp eq i8* %15, null
  %66 = zext i32 %62 to i64
  %67 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIaEEmm(i64 %66) #11
  %68 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %67, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIaEEPKcv, i64 0, i64 0)) #11
  %69 = ptrtoint i8* %68 to i64
  br i1 %65, label %81, label %70

70:                                               ; preds = %64
  %71 = load i8*, i8** %14, align 8
  %72 = icmp ne i8* %68, null
  %73 = icmp ne i8* %71, null
  %74 = and i1 %72, %73
  br i1 %74, label %75, label %79, !prof !15

75:                                               ; preds = %70
  %76 = load i32, i32* %7, align 4
  %77 = zext i32 %76 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %68, i8* nonnull align 1 %71, i64 %77, i1 false) #11
  %78 = load i8*, i8** %14, align 8
  br label %79

79:                                               ; preds = %75, %70
  %80 = phi i8* [ %71, %70 ], [ %78, %75 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #11
  br label %81

81:                                               ; preds = %64, %79
  %82 = bitcast %"class.WTF::Vector.464"* %0 to i64*
  store atomic i64 %69, i64* %82 monotonic, align 8
  %83 = trunc i64 %67 to i32
  store i32 %83, i32* %10, align 8
  br label %84

84:                                               ; preds = %81, %52
  %85 = phi i8* [ %15, %52 ], [ %68, %81 ]
  %86 = getelementptr inbounds i8, i8* %85, i64 %55
  br label %87

87:                                               ; preds = %84, %21, %36, %48, %3
  %88 = phi i8* [ %1, %3 ], [ %86, %84 ], [ %1, %21 ], [ %1, %36 ], [ %1, %48 ]
  %89 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #11
  %90 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %90, align 8
  %91 = load i32, i32* %7, align 4
  %92 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92)
  %93 = icmp ult i32 %9, %91
  br i1 %93, label %95, label %94

94:                                               ; preds = %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* null, i8** %90, align 8
  br label %104

95:                                               ; preds = %87
  %96 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  %97 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %91) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.9, i64 0, i64 0), i8* %96, i8* %97) #11
  %98 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92)
  store i8* %99, i8** %90, align 8
  %100 = icmp eq i8* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %95
  %102 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %102) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #11
  %103 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %102) #11
  br label %104

104:                                              ; preds = %94, %95, %101
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #11
  %105 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  %107 = load i32, i32* %7, align 4
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds i8, i8* %106, i64 %108
  %110 = icmp ne i8* %109, null
  %111 = icmp ne i8* %88, null
  %112 = and i1 %111, %110
  br i1 %112, label %113, label %115, !prof !15

113:                                              ; preds = %104
  %114 = zext i32 %2 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %109, i8* nonnull align 1 %88, i64 %114, i1 false) #11
  br label %115

115:                                              ; preds = %104, %113
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNK5blink12_GLOBAL__N_115IpcPacketSocket24TraceSendThrottlingStateEv(%"class.blink::(anonymous namespace)::IpcPacketSocket"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), align 16
  %5 = and i8 %4, 25
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7, !prof !15

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %9 = tail call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %8) #11
  %10 = zext i16 %9 to i64
  %11 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 7
  %13 = load i64, i64* %12, align 8
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %2, align 4
  %15 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.14, i64 0, i64 0), i8* null, i64 %10, i32 2, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i32* nonnull dereferenceable(4) %2)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #11
  %16 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), align 16
  %17 = and i8 %16, 25
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %28, label %19, !prof !15

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 4
  %21 = call zeroext i16 @_ZNK3rtc13SocketAddress4portEv(%"class.rtc::SocketAddress"* %20) #11
  %22 = zext i16 %21 to i64
  %23 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.blink::(anonymous namespace)::IpcPacketSocket", %"class.blink::(anonymous namespace)::IpcPacketSocket"* %0, i64 0, i32 8, i32 0, i32 1, i32 0, i32 0
  %25 = load i64, i64* %24, align 8
  %26 = trunc i64 %25 to i32
  store i32 %26, i32* %3, align 4
  %27 = call i64 @_ZN20trace_event_internal13AddTraceEventIiEEN4base11trace_event16TraceEventHandleEcPKhPKcS7_yjyS7_OT_(i8 signext 67, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 95, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.16, i64 0, i64 0), i8* null, i64 %22, i32 2, i64 0, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.15, i64 0, i64 0), i32* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #11
  br label %28

28:                                               ; preds = %1, %7, %19
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #11
  %7 = load i8, i8* %6, align 8, !range !16
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #11
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #11
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #11
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #11
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #11
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #11
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #11
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #11
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #11
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #9

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #7

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIaEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.13, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #11
  ret i64 %20
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

declare zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* dereferenceable(20), %"class.rtc::SocketAddress"*) local_unnamed_addr #4

declare void @_ZN3rtc13SocketAddress13SetResolvedIPERKNS_9IPAddressE(%"class.rtc::SocketAddress"*, %"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #4

declare dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"*, %"class.rtc::SocketAddress"* dereferenceable(72)) local_unnamed_addr #4

declare void @_ZN3rtc10SentPacketC1Ell(%"struct.rtc::SentPacket"*, i64, i64) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc10PacketInfoD1Ev(%"struct.rtc::PacketInfo"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK3WTF6VectorIaLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.464"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.464", %"class.WTF::Vector.464"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

declare zeroext i1 @_ZNK3rtc13SocketAddress5IsNilEv(%"class.rtc::SocketAddress"*) local_unnamed_addr #4

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc9IPAddressD2Ev(%"class.rtc::IPAddress"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #4

declare void @_ZN3rtc22AsyncResolverInterfaceC2Ev(%"class.rtc::AsyncResolverInterface"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImplD2Ev(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124AsyncAddressResolverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.446", %"class.std::__1::vector.446"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %4, align 8
  %6 = icmp eq %"class.rtc::IPAddress"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rtc::IPAddress"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %9, align 8
  %11 = icmp eq %"class.rtc::IPAddress"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.rtc::IPAddress"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %13, i64 -1
  %15 = bitcast %"class.rtc::IPAddress"* %14 to void (%"class.rtc::IPAddress"*)***
  %16 = load void (%"class.rtc::IPAddress"*)**, void (%"class.rtc::IPAddress"*)*** %15, align 8
  %17 = load void (%"class.rtc::IPAddress"*)*, void (%"class.rtc::IPAddress"*)** %16, align 8
  tail call void %17(%"class.rtc::IPAddress"* %14) #11
  %18 = icmp eq %"class.rtc::IPAddress"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.446"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.rtc::IPAddress"* %5, %"class.rtc::IPAddress"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 2
  %26 = bitcast %"class.rtc::SocketAddress"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %24, %30
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 1, i32 0
  %35 = load %"class.blink::P2PAsyncAddressResolver"*, %"class.blink::P2PAsyncAddressResolver"** %34, align 8
  %36 = icmp eq %"class.blink::P2PAsyncAddressResolver"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::P2PAsyncAddressResolver", %"class.blink::P2PAsyncAddressResolver"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.444", %"class.base::RefCountedThreadSafe.444"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.444", %"class.base::RefCountedThreadSafe.444"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.444"* %43 to %"class.blink::P2PAsyncAddressResolver"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.444"* %43 to void (%"class.blink::P2PAsyncAddressResolver"*)***
  %46 = load void (%"class.blink::P2PAsyncAddressResolver"*)**, void (%"class.blink::P2PAsyncAddressResolver"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::P2PAsyncAddressResolver"*)*, void (%"class.blink::P2PAsyncAddressResolver"*)** %46, i64 1
  %48 = load void (%"class.blink::P2PAsyncAddressResolver"*)*, void (%"class.blink::P2PAsyncAddressResolver"*)** %47, align 8
  tail call void %48(%"class.blink::P2PAsyncAddressResolver"* nonnull %44) #11
  br label %49

49:                                               ; preds = %33, %37, %42
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0
  tail call void @_ZN3rtc22AsyncResolverInterfaceD2Ev(%"class.rtc::AsyncResolverInterface"* %50) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImplD0Ev(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink12_GLOBAL__N_124AsyncAddressResolverImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.std::__1::vector.446", %"class.std::__1::vector.446"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %4, align 8
  %6 = icmp eq %"class.rtc::IPAddress"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.rtc::IPAddress"* %5 to i8*
  %9 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %9, align 8
  %11 = icmp eq %"class.rtc::IPAddress"* %10, %5
  br i1 %11, label %22, label %12

12:                                               ; preds = %7, %12
  %13 = phi %"class.rtc::IPAddress"* [ %14, %12 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %13, i64 -1
  %15 = bitcast %"class.rtc::IPAddress"* %14 to void (%"class.rtc::IPAddress"*)***
  %16 = load void (%"class.rtc::IPAddress"*)**, void (%"class.rtc::IPAddress"*)*** %15, align 8
  %17 = load void (%"class.rtc::IPAddress"*)*, void (%"class.rtc::IPAddress"*)** %16, align 8
  tail call void %17(%"class.rtc::IPAddress"* %14) #11
  %18 = icmp eq %"class.rtc::IPAddress"* %14, %5
  br i1 %18, label %19, label %12

19:                                               ; preds = %12
  %20 = bitcast %"class.std::__1::vector.446"* %3 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %7
  %23 = phi i8* [ %21, %19 ], [ %8, %7 ]
  store %"class.rtc::IPAddress"* %5, %"class.rtc::IPAddress"** %9, align 8
  tail call void @_ZdlPv(i8* %23) #12
  br label %24

24:                                               ; preds = %22, %1
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 2
  %26 = bitcast %"class.rtc::SocketAddress"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #12
  br label %33

33:                                               ; preds = %30, %24
  %34 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 1, i32 0
  %35 = load %"class.blink::P2PAsyncAddressResolver"*, %"class.blink::P2PAsyncAddressResolver"** %34, align 8
  %36 = icmp eq %"class.blink::P2PAsyncAddressResolver"* %35, null
  br i1 %36, label %49, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.blink::P2PAsyncAddressResolver", %"class.blink::P2PAsyncAddressResolver"* %35, i64 0, i32 1
  %39 = getelementptr inbounds %"class.base::RefCountedThreadSafe.444", %"class.base::RefCountedThreadSafe.444"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i32* %39, i32 1 acq_rel
  %41 = icmp eq i32 %40, 1
  br i1 %41, label %42, label %49

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.base::RefCountedThreadSafe.444", %"class.base::RefCountedThreadSafe.444"* %38, i64 -2
  %44 = bitcast %"class.base::RefCountedThreadSafe.444"* %43 to %"class.blink::P2PAsyncAddressResolver"*
  %45 = bitcast %"class.base::RefCountedThreadSafe.444"* %43 to void (%"class.blink::P2PAsyncAddressResolver"*)***
  %46 = load void (%"class.blink::P2PAsyncAddressResolver"*)**, void (%"class.blink::P2PAsyncAddressResolver"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::P2PAsyncAddressResolver"*)*, void (%"class.blink::P2PAsyncAddressResolver"*)** %46, i64 1
  %48 = load void (%"class.blink::P2PAsyncAddressResolver"*)*, void (%"class.blink::P2PAsyncAddressResolver"*)** %47, align 8
  tail call void %48(%"class.blink::P2PAsyncAddressResolver"* nonnull %44) #11
  br label %49

49:                                               ; preds = %33, %37, %42
  %50 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0
  tail call void @_ZN3rtc22AsyncResolverInterfaceD2Ev(%"class.rtc::AsyncResolverInterface"* %50) #11
  %51 = bitcast %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %51) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl5StartERKN3rtc13SocketAddressE(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.rtc::SocketAddress"* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback.445", align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 2
  %5 = tail call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %4, %"class.rtc::SocketAddress"* dereferenceable(72) %1) #11
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.blink::P2PAsyncAddressResolver"*, %"class.blink::P2PAsyncAddressResolver"** %6, align 8
  %8 = ptrtoint %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0 to i64
  %9 = tail call i8* @_Znwm(i64 56) #12, !noalias !20
  %10 = bitcast i8* %9 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %10, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.WTF::Vector.503"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEEJNS6_17UnretainedWrapperIS5_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS5_18PartitionAllocatorEEEEJNS5_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !20
  %11 = getelementptr inbounds i8, i8* %9, i64 32
  %12 = bitcast i8* %11 to <2 x i64>*
  store <2 x i64> <i64 49, i64 0>, <2 x i64>* %12, align 8, !noalias !20
  %13 = getelementptr inbounds i8, i8* %9, i64 48
  %14 = bitcast i8* %13 to i64*
  store i64 %8, i64* %14, align 8, !noalias !20
  %15 = bitcast %"class.base::OnceCallback.445"* %3 to i8**
  store i8* %9, i8** %15, align 8, !alias.scope !20
  call void @_ZN5blink23P2PAsyncAddressResolver5StartERKN3rtc13SocketAddressEN4base12OnceCallbackIFvRKN3WTF6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEEEE(%"class.blink::P2PAsyncAddressResolver"* %7, %"class.rtc::SocketAddress"* dereferenceable(72) %1, %"class.base::OnceCallback.445"* nonnull %3) #11
  %16 = getelementptr inbounds %"class.base::OnceCallback.445", %"class.base::OnceCallback.445"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal zeroext i1 @_ZNK5blink12_GLOBAL__N_124AsyncAddressResolverImpl18GetResolvedAddressEiPN3rtc13SocketAddressE(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, i32, %"class.rtc::SocketAddress"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %7 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %6, align 8
  %8 = icmp eq %"class.rtc::IPAddress"* %5, %7
  br i1 %8, label %27, label %9

9:                                                ; preds = %3
  %10 = ptrtoint %"class.rtc::IPAddress"* %5 to i64
  %11 = ptrtoint %"class.rtc::IPAddress"* %7 to i64
  %12 = sub i64 %11, %10
  %13 = ashr exact i64 %12, 5
  br label %14

14:                                               ; preds = %9, %19
  %15 = phi i64 [ %20, %19 ], [ 0, %9 ]
  %16 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %5, i64 %15, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = add nuw i64 %15, 1
  %21 = icmp ult i64 %20, %13
  br i1 %21, label %14, label %27

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 2
  %24 = tail call dereferenceable(72) %"class.rtc::SocketAddress"* @_ZN3rtc13SocketAddressaSERKS0_(%"class.rtc::SocketAddress"* %2, %"class.rtc::SocketAddress"* dereferenceable(72) %23) #11
  %25 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %4, align 8
  %26 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %25, i64 %15
  tail call void @_ZN3rtc13SocketAddress13SetResolvedIPERKNS_9IPAddressE(%"class.rtc::SocketAddress"* %2, %"class.rtc::IPAddress"* dereferenceable(32) %26) #11
  br label %27

27:                                               ; preds = %19, %3, %22
  %28 = phi i1 [ true, %22 ], [ false, %3 ], [ false, %19 ]
  ret i1 %28
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZNK5blink12_GLOBAL__N_124AsyncAddressResolverImpl8GetErrorEv(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %5 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %4, align 8
  %6 = icmp eq %"class.rtc::IPAddress"* %3, %5
  %7 = sext i1 %6 to i32
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl7DestroyEb(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.blink::P2PAsyncAddressResolver"*, %"class.blink::P2PAsyncAddressResolver"** %3, align 8
  tail call void @_ZN5blink23P2PAsyncAddressResolver6CancelEv(%"class.blink::P2PAsyncAddressResolver"* %4) #11
  %5 = icmp eq %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0 to void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)***
  %8 = load void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)**, void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)*, void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)** %8, i64 1
  %10 = load void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)*, void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*)** %9, align 8
  tail call void %10(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* nonnull %0) #11
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_124AsyncAddressResolverImpl17OnAddressResolvedERKN3WTF6VectorIN3net9IPAddressELj0ENS2_18PartitionAllocatorEEE(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.rtc::SocketAddress", align 8
  %4 = alloca %"class.net::IPEndPoint", align 2
  %5 = getelementptr inbounds %"class.WTF::Vector.503", %"class.WTF::Vector.503"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %18, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.rtc::SocketAddress"* %3 to i8*
  %10 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %11 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast %"class.rtc::IPAddress"** %11 to i64*
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 3
  %15 = bitcast %"class.rtc::SocketAddress"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.rtc::SocketAddress", %"class.rtc::SocketAddress"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %46

18:                                               ; preds = %72, %2
  %19 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 1
  %21 = bitcast %"struct.std::__1::__list_node_base"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 2, i32 0
  %24 = bitcast %"struct.std::__1::__list_node_base"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 2
  %26 = getelementptr inbounds %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl", %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %0, i64 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::__list_iterator", %"class.std::__1::__list_iterator"* %25, i64 0, i32 0
  %28 = inttoptr i64 %22 to %"struct.std::__1::__list_node_base"*
  %29 = icmp eq %"struct.std::__1::__list_node_base"* %26, %28
  br i1 %29, label %45, label %30

30:                                               ; preds = %18
  %31 = inttoptr i64 %22 to %"struct.std::__1::__list_node.497"*
  %32 = bitcast %"class.std::__1::__list_iterator"* %25 to i64*
  br label %33

33:                                               ; preds = %33, %30
  %34 = phi %"struct.std::__1::__list_node.497"* [ %31, %30 ], [ %44, %33 ]
  %35 = phi %"struct.std::__1::__list_node_base"* [ %28, %30 ], [ %42, %33 ]
  %36 = getelementptr inbounds %"struct.std::__1::__list_node.497", %"struct.std::__1::__list_node.497"* %34, i64 0, i32 1
  %37 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %38 = bitcast %"struct.std::__1::__list_node_base"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  store i64 %39, i64* %32, align 8
  %40 = bitcast %"class.sigslot::_opaque_connection"* %36 to void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncResolverInterface"*)**
  %41 = load void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncResolverInterface"*)*, void (%"class.sigslot::_opaque_connection"*, %"class.rtc::AsyncResolverInterface"*)** %40, align 8
  call void %41(%"class.sigslot::_opaque_connection"* %36, %"class.rtc::AsyncResolverInterface"* %19) #11
  %42 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %43 = icmp eq %"struct.std::__1::__list_node_base"* %42, %26
  %44 = bitcast %"struct.std::__1::__list_node_base"* %42 to %"struct.std::__1::__list_node.497"*
  br i1 %43, label %45, label %33

45:                                               ; preds = %33, %18
  ret void

46:                                               ; preds = %8, %72
  %47 = phi i64 [ 0, %8 ], [ %73, %72 ]
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %9) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 72, i1 false)
  call void @_ZN3rtc13SocketAddressC1Ev(%"class.rtc::SocketAddress"* nonnull %3) #11
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %10) #11
  %48 = trunc i64 %47 to i32
  %49 = call dereferenceable(17) %"class.net::IPAddress"* @_ZNK3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.503"* %1, i32 %48) #11
  call void @_ZN3net10IPEndPointC1ERKNS_9IPAddressEt(%"class.net::IPEndPoint"* nonnull %4, %"class.net::IPAddress"* dereferenceable(17) %49, i16 zeroext 0) #11
  %50 = call zeroext i1 @_ZN11jingle_glue25IPEndPointToSocketAddressERKN3net10IPEndPointEPN3rtc13SocketAddressE(%"class.net::IPEndPoint"* nonnull dereferenceable(20) %4, %"class.rtc::SocketAddress"* nonnull %3) #11
  call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %10) #11
  %51 = call dereferenceable(32) %"class.rtc::IPAddress"* @_ZNK3rtc13SocketAddress6ipaddrEv(%"class.rtc::SocketAddress"* nonnull %3) #11
  %52 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %11, align 8
  %53 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %12, align 8
  %54 = icmp eq %"class.rtc::IPAddress"* %52, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %52, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %57 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %52, i64 0, i32 1
  %58 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %51, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %52, i64 0, i32 2
  %61 = bitcast %union.anon.234* %60 to i8*
  %62 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %51, i64 0, i32 2
  %63 = bitcast %union.anon.234* %62 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %61, i8* align 4 %63, i64 16, i1 false) #11
  %64 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %52, i64 1
  %65 = ptrtoint %"class.rtc::IPAddress"* %64 to i64
  store i64 %65, i64* %13, align 8
  br label %67

66:                                               ; preds = %46
  call void @_ZNSt3__16vectorIN3rtc9IPAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.446"* %14, %"class.rtc::IPAddress"* dereferenceable(32) %51) #11
  br label %67

67:                                               ; preds = %55, %66
  %68 = load i8, i8* %16, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %67
  %71 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %71) #12
  br label %72

72:                                               ; preds = %67, %70
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %9) #11
  %73 = add nuw nsw i64 %47, 1
  %74 = load i32, i32* %5, align 4
  %75 = zext i32 %74 to i64
  %76 = icmp ult i64 %73, %75
  br i1 %76, label %46, label %18
}

declare void @_ZN5blink23P2PAsyncAddressResolverC1EPNS_19P2PSocketDispatcherE(%"class.blink::P2PAsyncAddressResolver"*, %"class.blink::P2PSocketDispatcher"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3rtc22AsyncResolverInterfaceD2Ev(%"class.rtc::AsyncResolverInterface"*) unnamed_addr #7

declare void @_ZN5blink23P2PAsyncAddressResolver5StartERKN3rtc13SocketAddressEN4base12OnceCallbackIFvRKN3WTF6VectorIN3net9IPAddressELj0ENS7_18PartitionAllocatorEEEEEE(%"class.blink::P2PAsyncAddressResolver"*, %"class.rtc::SocketAddress"* dereferenceable(72), %"class.base::OnceCallback.445"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEEJNS6_17UnretainedWrapperIS5_EEEEEFvSD_EE7RunOnceEPNS0_13BindStateBaseESD_(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.WTF::Vector.503"* dereferenceable(16)) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)**
  %22 = load void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)*, void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"*, %"class.WTF::Vector.503"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::(anonymous namespace)::AsyncAddressResolverImpl"* %13, %"class.WTF::Vector.503"* dereferenceable(16) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS5_18PartitionAllocatorEEEEJNS5_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

declare void @_ZN5blink23P2PAsyncAddressResolver6CancelEv(%"class.blink::P2PAsyncAddressResolver"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(17) %"class.net::IPAddress"* @_ZNK3WTF6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.503"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.503", %"class.WTF::Vector.503"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #11
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* %14, i8* %15) #11
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #11
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %23 = getelementptr inbounds %"class.WTF::Vector.503", %"class.WTF::Vector.503"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.net::IPAddress"*, %"class.net::IPAddress"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.net::IPAddress", %"class.net::IPAddress"* %24, i64 %25
  ret %"class.net::IPAddress"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3rtc9IPAddressENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.446"*, %"class.rtc::IPAddress"* dereferenceable(32)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.446", %"class.std::__1::vector.446"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.rtc::IPAddress"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.446"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.446"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.446", %"class.std::__1::vector.446"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.rtc::IPAddress"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #13
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.rtc::IPAddress"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.rtc::IPAddress"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %36, i64 %9
  %38 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %36, i64 %35
  %39 = ptrtoint %"class.rtc::IPAddress"* %38 to i64
  %40 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %36, i64 %9, i32 1
  %42 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %41, align 8
  %44 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %36, i64 %9, i32 2
  %45 = bitcast %union.anon.234* %44 to i8*
  %46 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %1, i64 0, i32 2
  %47 = bitcast %union.anon.234* %46 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %45, i8* align 4 %47, i64 16, i1 false) #11
  %48 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 1
  %49 = ptrtoint %"class.rtc::IPAddress"* %48 to i64
  %50 = getelementptr inbounds %"class.std::__1::vector.446", %"class.std::__1::vector.446"* %0, i64 0, i32 0, i32 0
  %51 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %50, align 8
  %52 = ptrtoint %"class.rtc::IPAddress"* %51 to i64
  %53 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %3, align 8
  %54 = icmp eq %"class.rtc::IPAddress"* %53, %51
  br i1 %54, label %103, label %55

55:                                               ; preds = %34
  %56 = getelementptr %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %53, i64 -1, i32 0
  %57 = ptrtoint i32 (...)*** %56 to i64
  %58 = sub i64 %57, %52
  %59 = and i64 %58, 32
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %72

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %53, i64 -1
  %63 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 -1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 -1, i32 1
  %65 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %53, i64 -1, i32 1
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %64, align 8
  %67 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 -1, i32 2
  %68 = bitcast %union.anon.234* %67 to i8*
  %69 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %53, i64 -1, i32 2
  %70 = bitcast %union.anon.234* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %70, i64 16, i1 false) #11
  %71 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %37, i64 -1
  br label %72

72:                                               ; preds = %61, %55
  %73 = phi %"class.rtc::IPAddress"* [ undef, %55 ], [ %71, %61 ]
  %74 = phi %"class.rtc::IPAddress"* [ %37, %55 ], [ %71, %61 ]
  %75 = phi %"class.rtc::IPAddress"* [ %53, %55 ], [ %62, %61 ]
  %76 = icmp ult i64 %58, 32
  br i1 %76, label %99, label %77

77:                                               ; preds = %72, %77
  %78 = phi %"class.rtc::IPAddress"* [ %97, %77 ], [ %74, %72 ]
  %79 = phi %"class.rtc::IPAddress"* [ %88, %77 ], [ %75, %72 ]
  %80 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %80, align 8
  %81 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -1, i32 1
  %82 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %79, i64 -1, i32 1
  %83 = load i32, i32* %82, align 8
  store i32 %83, i32* %81, align 8
  %84 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -1, i32 2
  %85 = bitcast %union.anon.234* %84 to i8*
  %86 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %79, i64 -1, i32 2
  %87 = bitcast %union.anon.234* %86 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %85, i8* align 4 %87, i64 16, i1 false) #11
  %88 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %79, i64 -2
  %89 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3rtc9IPAddressE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %89, align 8
  %90 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -2, i32 1
  %91 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %79, i64 -2, i32 1
  %92 = load i32, i32* %91, align 8
  store i32 %92, i32* %90, align 8
  %93 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -2, i32 2
  %94 = bitcast %union.anon.234* %93 to i8*
  %95 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %79, i64 -2, i32 2
  %96 = bitcast %union.anon.234* %95 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %94, i8* align 4 %96, i64 16, i1 false) #11
  %97 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %78, i64 -2
  %98 = icmp eq %"class.rtc::IPAddress"* %88, %51
  br i1 %98, label %99, label %77

99:                                               ; preds = %77, %72
  %100 = phi %"class.rtc::IPAddress"* [ %73, %72 ], [ %97, %77 ]
  %101 = load i64, i64* %6, align 8
  %102 = load %"class.rtc::IPAddress"*, %"class.rtc::IPAddress"** %3, align 8
  br label %103

103:                                              ; preds = %34, %99
  %104 = phi %"class.rtc::IPAddress"* [ %102, %99 ], [ %51, %34 ]
  %105 = phi %"class.rtc::IPAddress"* [ %100, %99 ], [ %37, %34 ]
  %106 = phi i64 [ %101, %99 ], [ %52, %34 ]
  %107 = ptrtoint %"class.rtc::IPAddress"* %105 to i64
  store i64 %107, i64* %6, align 8
  store i64 %49, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %108 = inttoptr i64 %106 to %"class.rtc::IPAddress"*
  %109 = icmp eq %"class.rtc::IPAddress"* %104, %108
  br i1 %109, label %117, label %110

110:                                              ; preds = %103, %110
  %111 = phi %"class.rtc::IPAddress"* [ %112, %110 ], [ %104, %103 ]
  %112 = getelementptr inbounds %"class.rtc::IPAddress", %"class.rtc::IPAddress"* %111, i64 -1
  %113 = bitcast %"class.rtc::IPAddress"* %112 to void (%"class.rtc::IPAddress"*)***
  %114 = load void (%"class.rtc::IPAddress"*)**, void (%"class.rtc::IPAddress"*)*** %113, align 8
  %115 = load void (%"class.rtc::IPAddress"*)*, void (%"class.rtc::IPAddress"*)** %114, align 8
  tail call void %115(%"class.rtc::IPAddress"* %112) #11
  %116 = icmp eq %"class.rtc::IPAddress"* %112, %108
  br i1 %116, label %117, label %110

117:                                              ; preds = %110, %103
  %118 = icmp eq i64 %106, 0
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = inttoptr i64 %106 to i8*
  tail call void @_ZdlPv(i8* %120) #12
  br label %121

121:                                              ; preds = %117, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3rtc9IPAddressD0Ev(%"class.rtc::IPAddress"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.rtc::IPAddress"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE1EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::P2PSocketDispatcher"**
  %4 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %3, align 8
  %5 = icmp eq %"class.blink::P2PSocketDispatcher"* %4, null
  br i1 %5, label %39, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !2

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %39, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::P2PSocketDispatcher", %"class.blink::P2PSocketDispatcher"* %4, i64 -1, i32 11
  %20 = bitcast %"class.blink::HeapMojoReceiver"* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %39

25:                                               ; preds = %18
  store %"class.blink::P2PSocketDispatcher"* null, %"class.blink::P2PSocketDispatcher"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap34GetCrossThreadWeakPersistentRegionEv() #11
  %28 = bitcast i8* %26 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = inttoptr i64 %29 to %"class.blink::PersistentNode"*
  %31 = icmp eq i64 %29, 0
  br i1 %31, label %38, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %27, i64 0, i32 0, i32 0
  %34 = bitcast %"class.blink::CrossThreadPersistentRegion"* %27 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = inttoptr i64 %29 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %37, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %33, align 8
  br label %38

38:                                               ; preds = %25, %32
  store atomic i64 0, i64* %28 release, align 8
  br label %39

39:                                               ; preds = %18, %13, %2, %38
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EE12AssignUnsafeEPS1_(%"class.blink::PersistentBase.236"*, %"class.blink::P2PSocketDispatcher"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::PersistentBase.236", %"class.blink::PersistentBase.236"* %0, i64 0, i32 0
  store %"class.blink::P2PSocketDispatcher"* %1, %"class.blink::P2PSocketDispatcher"** %3, align 8
  %4 = ptrtoint %"class.blink::P2PSocketDispatcher"* %1 to i64
  switch i64 %4, label %5 [
    i64 0, label %29
    i64 -1, label %29
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::PersistentBase.236", %"class.blink::PersistentBase.236"* %0, i64 0, i32 1
  %7 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %6 to i64*
  %8 = load atomic i64, i64* %7 acquire, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %46

10:                                               ; preds = %5
  %11 = bitcast %"class.blink::PersistentBase.236"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  switch i64 %12, label %13 [
    i64 0, label %46
    i64 -1, label %46
  ]

13:                                               ; preds = %10
  %14 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %15 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %18, label %21, !prof !2

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %14, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %19) #11
  %20 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  br label %21

21:                                               ; preds = %18, %13
  %22 = phi %"class.blink::PersistentNode"* [ %20, %18 ], [ %16, %13 ]
  %23 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::CrossThreadPersistentRegion"* %14 to i64*
  store i64 %24, i64* %25, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to %"class.blink::PersistentBase.236"**
  store %"class.blink::PersistentBase.236"* %0, %"class.blink::PersistentBase.236"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  %28 = ptrtoint %"class.blink::PersistentNode"* %22 to i64
  store atomic i64 %28, i64* %7 release, align 8
  br label %46

29:                                               ; preds = %2, %2
  %30 = getelementptr inbounds %"class.blink::PersistentBase.236", %"class.blink::PersistentBase.236"* %0, i64 0, i32 1
  %31 = bitcast %"class.blink::CrossThreadPersistentNodePtr.237"* %30 to i64*
  %32 = load atomic i64, i64* %31 acquire, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %46, label %34

34:                                               ; preds = %29
  %35 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %36 = load atomic i64, i64* %31 monotonic, align 8
  %37 = inttoptr i64 %36 to %"class.blink::PersistentNode"*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %35, i64 0, i32 0, i32 0
  %41 = bitcast %"class.blink::CrossThreadPersistentRegion"* %35 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = inttoptr i64 %36 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %37, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %44, align 8
  store %"class.blink::PersistentNode"* %37, %"class.blink::PersistentNode"** %40, align 8
  br label %45

45:                                               ; preds = %39, %34
  store atomic i64 0, i64* %31 release, align 8
  br label %46

46:                                               ; preds = %5, %45, %29, %21, %10, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_19P2PSocketDispatcherELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE1EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::P2PSocketDispatcher"**
  %5 = load %"class.blink::P2PSocketDispatcher"*, %"class.blink::P2PSocketDispatcher"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #11
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #11
  %7 = icmp eq %"class.blink::P2PSocketDispatcher"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::P2PSocketDispatcher"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19P2PSocketDispatcherEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #11
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #11
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19P2PSocketDispatcherEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::P2PSocketDispatcher"*
  %4 = bitcast i8* %1 to void (%"class.blink::P2PSocketDispatcher"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::P2PSocketDispatcher"*, %"class.blink::Visitor"*)**, void (%"class.blink::P2PSocketDispatcher"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::P2PSocketDispatcher"*, %"class.blink::Visitor"*)*, void (%"class.blink::P2PSocketDispatcher"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::P2PSocketDispatcher"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZN5blink19P2PSocketClientImplC1EPNS_19P2PSocketDispatcherERKN3net27NetworkTrafficAnnotationTagE(%"class.blink::P2PSocketClientImpl"*, %"class.blink::P2PSocketDispatcher"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5blink25CrossThreadWeakPersistentINS_19P2PSocketDispatcherEE4LockEv"}
!15 = !{!"branch_weights", i32 2000, i32 1}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNSt3__14listIN5blink12_GLOBAL__N_115IpcPacketSocket20InFlightPacketRecordENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE: argument 0"}
!19 = distinct !{!19, !"_ZNSt3__14listIN5blink12_GLOBAL__N_115IpcPacketSocket20InFlightPacketRecordENS_9allocatorIS4_EEE15__allocate_nodeERNS5_INS_11__list_nodeIS4_PvEEEE"}
!20 = !{!21, !23, !25}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEEJNS6_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS6_18PartitionAllocatorEEEEJNS6_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS4_18PartitionAllocatorEEEEJNS4_17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8BindOnceIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKN3WTF6VectorIN3net9IPAddressELj0ENS4_18PartitionAllocatorEEEEJNS4_17UnretainedWrapperIS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!25 = distinct !{!25, !26, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKNS_6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEEEEJNS_17UnretainedWrapperIS3_EEEFvSA_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!26 = distinct !{!26, !"_ZN3WTF4BindIMN5blink12_GLOBAL__N_124AsyncAddressResolverImplEFvRKNS_6VectorIN3net9IPAddressELj0ENS_18PartitionAllocatorEEEEJNS_17UnretainedWrapperIS3_EEEFvSA_EEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
