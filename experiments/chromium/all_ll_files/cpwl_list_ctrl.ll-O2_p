; ModuleID = '../../third_party/pdfium/fpdfsdk/pwl/cpwl_list_ctrl.cpp'
source_filename = "../../third_party/pdfium/fpdfsdk/pwl/cpwl_list_ctrl.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.CPWL_ListCtrl::NotifyIface" = type { i32 (...)** }
%"class.CPWL_ListCtrl::Item" = type { i8, %class.CFX_FloatRect, %"class.std::__1::unique_ptr" }
%class.CFX_FloatRect = type { float, float, float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CPWL_EditImpl* }
%class.CPWL_EditImpl = type { i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.fxcrt::UnownedPtr.22", %struct.CPVT_WordPlace, %struct.CPVT_WordPlace, %"class.CPWL_EditImpl::SelectState", %class.CFX_PTemplate, %class.CFX_PTemplate, %"class.std::__1::unique_ptr.23", %"class.CPWL_EditImpl::RefreshState", %class.CFX_PTemplate, %"class.CPWL_EditImpl::UndoStack", %class.CFX_FloatRect }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.CPWL_EditImpl::Provider"* }
%"class.CPWL_EditImpl::Provider" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %class.CPVT_VariableText* }
%class.CPVT_VariableText = type { i8, i8, i8, i8, i16, i32, i32, i32, float, float, float, %"class.std::__1::vector", %"class.fxcrt::UnownedPtr", %"class.std::__1::unique_ptr.12", %class.CFX_FloatRect, %class.CPVT_FloatRect }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.7"*, %"class.std::__1::unique_ptr.7"*, %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::unique_ptr.7" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.std::__1::unique_ptr.7"* }
%"class.fxcrt::UnownedPtr" = type { %"class.CPVT_VariableText::Provider"* }
%"class.CPVT_VariableText::Provider" = type { i32 (...)**, %"class.fxcrt::UnownedPtr.11" }
%"class.fxcrt::UnownedPtr.11" = type { %class.IPVT_FontMap* }
%class.IPVT_FontMap = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.CPVT_VariableText::Iterator"* }
%"class.CPVT_VariableText::Iterator" = type { %struct.CPVT_WordPlace, %"class.fxcrt::UnownedPtr.15" }
%"class.fxcrt::UnownedPtr.15" = type { %class.CPVT_VariableText* }
%class.CPVT_FloatRect = type { %class.CFX_FloatRect }
%"class.fxcrt::UnownedPtr.22" = type { %class.CPWL_Edit* }
%class.CPWL_Edit = type opaque
%struct.CPVT_WordPlace = type { i32, i32, i32 }
%"class.CPWL_EditImpl::SelectState" = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPWL_EditImpl::Iterator"* }
%"class.CPWL_EditImpl::Iterator" = type { %"class.fxcrt::UnownedPtr.26", %"class.fxcrt::UnownedPtr.27" }
%"class.fxcrt::UnownedPtr.26" = type { %class.CPWL_EditImpl* }
%"class.fxcrt::UnownedPtr.27" = type { %"class.CPVT_VariableText::Iterator"* }
%"class.CPWL_EditImpl::RefreshState" = type { %"class.std::__1::vector.31", %"class.std::__1::vector.31", %"class.std::__1::vector.38" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"struct.CPWL_EditImpl::RefreshState::LineRect"*, %"class.std::__1::__compressed_pair.33" }
%"struct.CPWL_EditImpl::RefreshState::LineRect" = type { %struct.CPVT_WordRange, %class.CFX_FloatRect }
%struct.CPVT_WordRange = type { %struct.CPVT_WordPlace, %struct.CPVT_WordPlace }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.CPWL_EditImpl::RefreshState::LineRect"* }
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %class.CFX_FloatRect*, %class.CFX_FloatRect*, %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %class.CFX_FloatRect* }
%class.CFX_PTemplate = type { float, float }
%"class.CPWL_EditImpl::UndoStack" = type <{ %"class.std::__1::deque", i64, i8, [7 x i8] }>
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.51" }
%"struct.std::__1::__split_buffer" = type { %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::unique_ptr.45"**, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::unique_ptr.45" = type opaque
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::unique_ptr.45"** }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { i64 }
%"class.CPWL_ListCtrl::SelectState" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%class.CPWL_ListCtrl = type { %class.CFX_FloatRect, %class.CFX_FloatRect, %class.CFX_PTemplate, float, i32, %"class.CPWL_ListCtrl::SelectState", i32, i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.70", %"class.std::__1::vector.71", %"class.fxcrt::UnownedPtr.11" }
%"class.fxcrt::UnownedPtr.70" = type { %"class.CPWL_ListCtrl::NotifyIface"* }
%"class.std::__1::vector.71" = type { %"class.std::__1::__vector_base.72" }
%"class.std::__1::__vector_base.72" = type { %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"*, %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.CPWL_ListCtrl::Item"* }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.std::__1::unique_ptr.73"* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.59" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPVT_Word = type { i16, i32, %struct.CPVT_WordPlace, %class.CFX_PTemplate, float, float, float, i32, float }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type", [4 x i8] }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN13CPWL_ListCtrl4ItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@_ZTVN13CPWL_ListCtrl11NotifyIfaceE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.CPWL_ListCtrl::NotifyIface"*)* @_ZN13CPWL_ListCtrl11NotifyIfaceD2Ev to i8*), i8* bitcast (void (%"class.CPWL_ListCtrl::NotifyIface"*)* @_ZN13CPWL_ListCtrl11NotifyIfaceD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN13CPWL_ListCtrl11NotifyIfaceD1Ev = hidden unnamed_addr alias void (%"class.CPWL_ListCtrl::NotifyIface"*), void (%"class.CPWL_ListCtrl::NotifyIface"*)* @_ZN13CPWL_ListCtrl11NotifyIfaceD2Ev
@_ZN13CPWL_ListCtrl4ItemC1Ev = hidden unnamed_addr alias void (%"class.CPWL_ListCtrl::Item"*), void (%"class.CPWL_ListCtrl::Item"*)* @_ZN13CPWL_ListCtrl4ItemC2Ev
@_ZN13CPWL_ListCtrl4ItemD1Ev = hidden unnamed_addr alias void (%"class.CPWL_ListCtrl::Item"*), void (%"class.CPWL_ListCtrl::Item"*)* @_ZN13CPWL_ListCtrl4ItemD2Ev
@_ZN13CPWL_ListCtrl11SelectStateC1Ev = hidden unnamed_addr alias void (%"class.CPWL_ListCtrl::SelectState"*), void (%"class.CPWL_ListCtrl::SelectState"*)* @_ZN13CPWL_ListCtrl11SelectStateC2Ev
@_ZN13CPWL_ListCtrl11SelectStateD1Ev = hidden unnamed_addr alias void (%"class.CPWL_ListCtrl::SelectState"*), void (%"class.CPWL_ListCtrl::SelectState"*)* @_ZN13CPWL_ListCtrl11SelectStateD2Ev
@_ZN13CPWL_ListCtrlC1Ev = hidden unnamed_addr alias void (%class.CPWL_ListCtrl*), void (%class.CPWL_ListCtrl*)* @_ZN13CPWL_ListCtrlC2Ev
@_ZN13CPWL_ListCtrlD1Ev = hidden unnamed_addr alias void (%class.CPWL_ListCtrl*), void (%class.CPWL_ListCtrl*)* @_ZN13CPWL_ListCtrlD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11NotifyIfaceD2Ev(%"class.CPWL_ListCtrl::NotifyIface"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11NotifyIfaceD0Ev(%"class.CPWL_ListCtrl::NotifyIface"* nocapture readnone) unnamed_addr #1 align 2 {
  tail call void @llvm.trap() #15
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4ItemC2Ev(%"class.CPWL_ListCtrl::Item"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 1
  %4 = bitcast %class.CFX_FloatRect* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %4, i8 0, i64 16, i1 false) #16
  %5 = tail call i8* @_Znwm(i64 272) #17
  %6 = bitcast i8* %5 to %class.CPWL_EditImpl*
  tail call void @_ZN13CPWL_EditImplC1Ev(%class.CPWL_EditImpl* nonnull %6) #16
  %7 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = bitcast %class.CPWL_EditImpl** %7 to i8**
  store i8* %5, i8** %8, align 8
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl* nonnull %6, i32 1, i1 zeroext true) #16
  %9 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %7, align 8
  tail call void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl* %9) #16
  ret void
}

declare void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl*, i32, i1 zeroext) local_unnamed_addr #4

declare void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4ItemD2Ev(%"class.CPWL_ListCtrl::Item"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %2, align 8
  %4 = icmp eq %class.CPWL_EditImpl* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %3) #16
  %6 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %3, i64 0, i32 0
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4Item10SetFontMapEP12IPVT_FontMap(%"class.CPWL_ListCtrl::Item"* nocapture readonly, %class.IPVT_FontMap*) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl* %4, %class.IPVT_FontMap* %1) #16
  ret void
}

declare void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl*, %class.IPVT_FontMap*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4Item7SetTextERKN5fxcrt10WideStringE(%"class.CPWL_ListCtrl::Item"* nocapture readonly, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl* %4, %"class.fxcrt::WideString"* dereferenceable(8) %1) #16
  ret void
}

declare void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4Item11SetFontSizeEf(%"class.CPWL_ListCtrl::Item"* nocapture readonly, float) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl* %4, float %1) #16
  ret void
}

declare void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl*, float) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK13CPWL_ListCtrl4Item13GetItemHeightEv(%"class.CPWL_ListCtrl::Item"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %2, align 8
  %4 = tail call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* %3) #16
  %5 = extractvalue { <2 x float>, <2 x float> } %4, 0
  %6 = extractvalue { <2 x float>, <2 x float> } %4, 1
  %7 = extractelement <2 x float> %6, i32 1
  %8 = extractelement <2 x float> %5, i32 1
  %9 = fsub float %7, %8
  ret float %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZNK13CPWL_ListCtrl4Item12GetFirstCharEv(%"class.CPWL_ListCtrl::Item"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = alloca %class.CPVT_Word, align 16
  %3 = bitcast %class.CPVT_Word* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %3) #16
  %4 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 0
  %5 = bitcast %class.CPVT_Word* %2 to <4 x i32>*
  store <4 x i32> <i32 -1431655766, i32 0, i32 -1, i32 -1>, <4 x i32>* %5, align 16
  store i16 0, i16* %4, align 16
  %6 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 2, i32 2
  store i32 -1, i32* %6, align 8
  %7 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 3, i32 0
  %8 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 7
  %9 = bitcast float* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %9, i8 0, i64 20, i1 false) #16
  store i32 -1, i32* %8, align 8
  %10 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %2, i64 0, i32 8
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %11, align 8
  %13 = tail call %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl* %12) #16
  tail call void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"* %13, i32 1) #16
  %14 = call zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"* %13, %class.CPVT_Word* nonnull dereferenceable(48) %2) #16
  %15 = load i16, i16* %4, align 16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %3) #16
  ret i16 %15
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

declare %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl*) local_unnamed_addr #4

declare void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"*, %class.CPVT_Word* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl4Item7GetTextEv(%"class.fxcrt::WideString"* noalias sret, %"class.CPWL_ListCtrl::Item"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %3, align 8
  tail call void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %4) #16
  ret void
}

declare void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret, %class.CPWL_EditImpl*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectStateC2Ev(%"class.CPWL_ListCtrl::SelectState"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_node_base"** %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %3, %"class.std::__1::__tree_end_node"** %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectStateD2Ev(%"class.CPWL_ListCtrl::SelectState"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %2, %"class.std::__1::__tree_node"* %5) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState3AddEi(%"class.CPWL_ListCtrl::SelectState"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %35, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %31, %7
  %10 = phi %"class.std::__1::__tree_node"* [ %34, %31 ], [ %5, %7 ]
  %11 = phi %"class.std::__1::__tree_node_base"** [ %33, %31 ], [ %8, %7 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 1, i32 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp sgt i32 %13, %1
  br i1 %14, label %15, label %21

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %18, label %19, label %31

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  br label %37

21:                                               ; preds = %9
  %22 = icmp slt i32 %13, %1
  br i1 %22, label %23, label %29

23:                                               ; preds = %21
  %24 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 1
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %31

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  br label %37

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %10, i64 0, i32 0, i32 0
  br label %37

31:                                               ; preds = %23, %15
  %32 = phi %"class.std::__1::__tree_node_base"* [ %17, %15 ], [ %25, %23 ]
  %33 = phi %"class.std::__1::__tree_node_base"** [ %16, %15 ], [ %24, %23 ]
  %34 = bitcast %"class.std::__1::__tree_node_base"* %32 to %"class.std::__1::__tree_node"*
  br label %9

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %37

37:                                               ; preds = %35, %29, %27, %19
  %38 = phi %"class.std::__1::__tree_end_node"* [ %3, %35 ], [ %20, %19 ], [ %28, %27 ], [ %30, %29 ]
  %39 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %16, %19 ], [ %24, %27 ], [ %11, %29 ]
  %40 = bitcast %"class.std::__1::__tree_node_base"** %39 to %"class.std::__1::__tree_node"**
  %41 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node"* %41, null
  br i1 %42, label %43, label %70

43:                                               ; preds = %37
  %44 = tail call i8* @_Znwm(i64 40) #17, !noalias !2
  %45 = getelementptr inbounds i8, i8* %44, i64 28
  %46 = bitcast i8* %45 to i32*
  store i32 %1, i32* %46, align 4, !noalias !2
  %47 = getelementptr inbounds i8, i8* %44, i64 32
  %48 = bitcast i8* %47 to i32*
  store i32 0, i32* %48, align 4, !noalias !2
  %49 = bitcast i8* %44 to %"class.std::__1::__tree_node"*
  %50 = bitcast i8* %44 to %"class.std::__1::__tree_node_base"*
  %51 = getelementptr inbounds i8, i8* %44, i64 16
  %52 = bitcast i8* %51 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %38, %"class.std::__1::__tree_end_node"** %52, align 8
  %53 = bitcast %"class.std::__1::__tree_node_base"** %39 to i8**
  store i8* %44, i8** %53, align 8
  %54 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, null
  br i1 %58, label %63, label %59

59:                                               ; preds = %43
  %60 = ptrtoint %"class.std::__1::__tree_node_base"* %57 to i64
  %61 = bitcast %"class.CPWL_ListCtrl::SelectState"* %0 to i64*
  store i64 %60, i64* %61, align 8
  %62 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  br label %63

63:                                               ; preds = %59, %43
  %64 = phi %"class.std::__1::__tree_node_base"* [ %50, %43 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %66, %"class.std::__1::__tree_node_base"* %64) #16
  %67 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, 1
  store i64 %69, i64* %67, align 8
  br label %70

70:                                               ; preds = %37, %63
  %71 = phi %"class.std::__1::__tree_node"* [ %49, %63 ], [ %41, %37 ]
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %71, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %72, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState3AddEii(%"class.CPWL_ListCtrl::SelectState"*, i32, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp sgt i32 %1, %2
  %5 = select i1 %4, i32 %2, i32 %1
  %6 = select i1 %4, i32 %1, i32 %2
  %7 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  %9 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 0, i32 0
  %11 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.CPWL_ListCtrl::SelectState"* %0 to i64*
  %13 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %15

14:                                               ; preds = %74
  ret void

15:                                               ; preds = %74, %3
  %16 = phi i32 [ %5, %3 ], [ %77, %74 ]
  %17 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %18 = icmp eq %"class.std::__1::__tree_node"* %17, null
  br i1 %18, label %45, label %19

19:                                               ; preds = %15, %41
  %20 = phi %"class.std::__1::__tree_node"* [ %44, %41 ], [ %17, %15 ]
  %21 = phi %"class.std::__1::__tree_node_base"** [ %43, %41 ], [ %9, %15 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp sgt i32 %23, %16
  br i1 %24, label %25, label %31

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %26, align 8
  %28 = icmp eq %"class.std::__1::__tree_node_base"* %27, null
  br i1 %28, label %29, label %41

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %45

31:                                               ; preds = %19
  %32 = icmp slt i32 %23, %16
  br i1 %32, label %33, label %39

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 1
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, null
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %45

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %20, i64 0, i32 0, i32 0
  br label %45

41:                                               ; preds = %33, %25
  %42 = phi %"class.std::__1::__tree_node_base"* [ %27, %25 ], [ %35, %33 ]
  %43 = phi %"class.std::__1::__tree_node_base"** [ %26, %25 ], [ %34, %33 ]
  %44 = bitcast %"class.std::__1::__tree_node_base"* %42 to %"class.std::__1::__tree_node"*
  br label %19

45:                                               ; preds = %15, %39, %37, %29
  %46 = phi %"class.std::__1::__tree_end_node"* [ %30, %29 ], [ %38, %37 ], [ %40, %39 ], [ %7, %15 ]
  %47 = phi %"class.std::__1::__tree_node_base"** [ %26, %29 ], [ %34, %37 ], [ %21, %39 ], [ %10, %15 ]
  %48 = bitcast %"class.std::__1::__tree_node_base"** %47 to %"class.std::__1::__tree_node"**
  %49 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %48, align 8
  %50 = icmp eq %"class.std::__1::__tree_node"* %49, null
  br i1 %50, label %51, label %74

51:                                               ; preds = %45
  %52 = tail call i8* @_Znwm(i64 40) #17, !noalias !5
  %53 = getelementptr inbounds i8, i8* %52, i64 28
  %54 = bitcast i8* %53 to i32*
  store i32 %16, i32* %54, align 4, !noalias !5
  %55 = getelementptr inbounds i8, i8* %52, i64 32
  %56 = bitcast i8* %55 to i32*
  store i32 0, i32* %56, align 4, !noalias !5
  %57 = bitcast i8* %52 to %"class.std::__1::__tree_node"*
  %58 = bitcast i8* %52 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds i8, i8* %52, i64 16
  %60 = bitcast i8* %59 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %52, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %46, %"class.std::__1::__tree_end_node"** %60, align 8
  %61 = bitcast %"class.std::__1::__tree_node_base"** %47 to i8**
  store i8* %52, i8** %61, align 8
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %11, align 8
  %63 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 0, i32 0
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %63, align 8
  %65 = icmp eq %"class.std::__1::__tree_node_base"* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %51
  %67 = ptrtoint %"class.std::__1::__tree_node_base"* %64 to i64
  store i64 %67, i64* %12, align 8
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  br label %69

69:                                               ; preds = %66, %51
  %70 = phi %"class.std::__1::__tree_node_base"* [ %58, %51 ], [ %68, %66 ]
  %71 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %71, %"class.std::__1::__tree_node_base"* %70) #16
  %72 = load i64, i64* %13, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %13, align 8
  br label %74

74:                                               ; preds = %45, %69
  %75 = phi %"class.std::__1::__tree_node"* [ %57, %69 ], [ %49, %45 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %75, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %76, align 4
  %77 = add nsw i32 %16, 1
  %78 = icmp slt i32 %16, %6
  br i1 %78, label %15, label %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState3SubEi(%"class.CPWL_ListCtrl::SelectState"*, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %2, %7
  %8 = phi %"class.std::__1::__tree_end_node"* [ %18, %7 ], [ %3, %2 ]
  %9 = phi %"class.std::__1::__tree_node"* [ %19, %7 ], [ %5, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 1, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %1
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::__tree_node_base"** %13 to %"class.std::__1::__tree_node"**
  %15 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %9, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::__tree_node"* %9 to %"class.std::__1::__tree_node"**
  %17 = select i1 %12, %"class.std::__1::__tree_node"** %14, %"class.std::__1::__tree_node"** %16
  %18 = select i1 %12, %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"* %15
  %19 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %17, align 8
  %20 = icmp eq %"class.std::__1::__tree_node"* %19, null
  br i1 %20, label %21, label %7

21:                                               ; preds = %7
  %22 = icmp eq %"class.std::__1::__tree_end_node"* %18, %3
  br i1 %22, label %31, label %23

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = icmp sgt i32 %26, %1
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 4
  %30 = bitcast %"class.std::__1::__tree_end_node"* %29 to i32*
  store i32 -1, i32* %30, align 4
  br label %31

31:                                               ; preds = %23, %21, %2, %28
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState3SubEii(%"class.CPWL_ListCtrl::SelectState"*, i32, i32) local_unnamed_addr #6 align 2 {
  %4 = icmp sgt i32 %1, %2
  %5 = select i1 %4, i32 %2, i32 %1
  %6 = select i1 %4, i32 %1, i32 %2
  %7 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node"**
  br label %10

9:                                                ; preds = %38
  ret void

10:                                               ; preds = %38, %3
  %11 = phi i32 [ %5, %3 ], [ %39, %38 ]
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  %13 = icmp eq %"class.std::__1::__tree_node"* %12, null
  br i1 %13, label %38, label %14

14:                                               ; preds = %10, %14
  %15 = phi %"class.std::__1::__tree_end_node"* [ %25, %14 ], [ %7, %10 ]
  %16 = phi %"class.std::__1::__tree_node"* [ %26, %14 ], [ %12, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %11
  %20 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::__tree_node_base"** %20 to %"class.std::__1::__tree_node"**
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %16, i64 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node"* %16 to %"class.std::__1::__tree_node"**
  %24 = select i1 %19, %"class.std::__1::__tree_node"** %21, %"class.std::__1::__tree_node"** %23
  %25 = select i1 %19, %"class.std::__1::__tree_end_node"* %15, %"class.std::__1::__tree_end_node"* %22
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %24, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %28, label %14

28:                                               ; preds = %14
  %29 = icmp eq %"class.std::__1::__tree_end_node"* %25, %7
  br i1 %29, label %38, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_node"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 1, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, %11
  br i1 %34, label %38, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %25, i64 4
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to i32*
  store i32 -1, i32* %37, align 4
  br label %38

38:                                               ; preds = %10, %28, %30, %35
  %39 = add nsw i32 %11, 1
  %40 = icmp slt i32 %11, %6
  br i1 %40, label %10, label %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState11DeselectAllEv(%"class.CPWL_ListCtrl::SelectState"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %38, %1
  ret void

7:                                                ; preds = %1, %38
  %8 = phi %"class.std::__1::__tree_end_node"* [ %39, %38 ], [ %3, %1 ]
  %9 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 4
  %10 = bitcast %"class.std::__1::__tree_end_node"* %9 to i32*
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 1, i32 0
  %12 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %11, align 8
  %13 = icmp eq %"class.std::__1::__tree_node_base"* %12, null
  br i1 %13, label %14, label %22

14:                                               ; preds = %7
  %15 = bitcast %"class.std::__1::__tree_end_node"* %8 to %"class.std::__1::__tree_node_base"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %8, i64 2
  %17 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_end_node"**
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %18, i64 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, %15
  br i1 %21, label %38, label %29

22:                                               ; preds = %7, %22
  %23 = phi %"class.std::__1::__tree_node_base"* [ %25, %22 ], [ %12, %7 ]
  %24 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0, i32 0
  %25 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %24, align 8
  %26 = icmp eq %"class.std::__1::__tree_node_base"* %25, null
  br i1 %26, label %27, label %22

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 0
  br label %38

29:                                               ; preds = %14, %29
  %30 = phi %"class.std::__1::__tree_end_node"** [ %33, %29 ], [ %17, %14 ]
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to %"class.std::__1::__tree_node_base"**
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 2
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, %32
  br i1 %37, label %38, label %29

38:                                               ; preds = %29, %14, %27
  %39 = phi %"class.std::__1::__tree_end_node"* [ %28, %27 ], [ %18, %14 ], [ %34, %29 ]
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %39, %4
  br i1 %40, label %6, label %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %86, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.CPWL_ListCtrl::SelectState"* %0 to i64*
  %8 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %9 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %10

10:                                               ; preds = %6, %83
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %6 ], [ %84, %83 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 4
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, -1
  %16 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 1, i32 0
  %17 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %16, align 8
  %18 = icmp eq %"class.std::__1::__tree_node_base"* %17, null
  br i1 %15, label %19, label %56

19:                                               ; preds = %10
  br i1 %18, label %20, label %28

20:                                               ; preds = %19
  %21 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %19, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %17, %19 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %33, %20
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %47 = icmp eq %"class.std::__1::__tree_end_node"* %46, %11
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = ptrtoint %"class.std::__1::__tree_end_node"* %45 to i64
  store i64 %49, i64* %7, align 8
  br label %50

50:                                               ; preds = %44, %48
  %51 = load i64, i64* %8, align 8
  %52 = add i64 %51, -1
  store i64 %52, i64* %8, align 8
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %54 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %53, %"class.std::__1::__tree_node_base"* %54) #16
  %55 = bitcast %"class.std::__1::__tree_end_node"* %11 to i8*
  tail call void @_ZdlPv(i8* %55) #17
  br label %83

56:                                               ; preds = %10
  br i1 %18, label %57, label %65

57:                                               ; preds = %56
  %58 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node_base"*
  %59 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 2
  %60 = bitcast %"class.std::__1::__tree_end_node"* %59 to %"class.std::__1::__tree_end_node"**
  %61 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %61, i64 0, i32 0
  %63 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %62, align 8
  %64 = icmp eq %"class.std::__1::__tree_node_base"* %63, %58
  br i1 %64, label %81, label %72

65:                                               ; preds = %56, %65
  %66 = phi %"class.std::__1::__tree_node_base"* [ %68, %65 ], [ %17, %56 ]
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  %69 = icmp eq %"class.std::__1::__tree_node_base"* %68, null
  br i1 %69, label %70, label %65

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 0
  br label %81

72:                                               ; preds = %57, %72
  %73 = phi %"class.std::__1::__tree_end_node"** [ %76, %72 ], [ %60, %57 ]
  %74 = bitcast %"class.std::__1::__tree_end_node"** %73 to %"class.std::__1::__tree_node_base"**
  %75 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %74, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %75, i64 0, i32 2
  %77 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %77, i64 0, i32 0
  %79 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %78, align 8
  %80 = icmp eq %"class.std::__1::__tree_node_base"* %79, %75
  br i1 %80, label %81, label %72

81:                                               ; preds = %72, %57, %70
  %82 = phi %"class.std::__1::__tree_end_node"* [ %71, %70 ], [ %61, %57 ], [ %77, %72 ]
  store i32 0, i32* %13, align 4
  br label %83

83:                                               ; preds = %81, %50
  %84 = phi %"class.std::__1::__tree_end_node"* [ %45, %50 ], [ %82, %81 ]
  %85 = icmp eq %"class.std::__1::__tree_end_node"* %84, %4
  br i1 %85, label %86, label %10

86:                                               ; preds = %83, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrlC2Ev(%class.CPWL_ListCtrl*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 4
  %3 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 44, i1 false)
  store i32 -1, i32* %2, align 4
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %7 = bitcast %"class.std::__1::__tree_node_base"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %5, %"class.std::__1::__tree_end_node"** %6, align 8
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  store i32 -1, i32* %8, align 8
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 7
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 8
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  store i8 0, i8* %12, align 2
  %13 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %14 = bitcast %"class.CPWL_ListCtrl::NotifyIface"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 40, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrlD2Ev(%class.CPWL_ListCtrl*) unnamed_addr #3 align 2 {
  %2 = alloca %class.CFX_FloatRect, align 4
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.73"* %6, %4
  br i1 %7, label %24, label %8

8:                                                ; preds = %1, %22
  %9 = phi %"class.std::__1::unique_ptr.73"* [ %10, %22 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %9, i64 -1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %11, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %11, align 8
  %13 = icmp eq %"class.CPWL_ListCtrl::Item"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %15, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %15, align 8
  %17 = icmp eq %class.CPWL_EditImpl* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %16) #16
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 0
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %20, %8
  %23 = icmp eq %"class.std::__1::unique_ptr.73"* %10, %4
  br i1 %23, label %24, label %8

24:                                               ; preds = %22, %1
  store %"class.std::__1::unique_ptr.73"* %4, %"class.std::__1::unique_ptr.73"** %5, align 8
  %25 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %26 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %25, align 8
  %27 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %30 = load i8, i8* %29, align 2, !range !8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  store i8 1, i8* %29, align 2
  %33 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #16
  %34 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 8 %34, i64 16, i1 false) #16
  %35 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %26 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %36 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %36, i64 4
  %38 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %37, align 8
  call void %38(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %26, %class.CFX_FloatRect* nonnull dereferenceable(16) %2) #16
  store i8 0, i8* %29, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #16
  br label %39

39:                                               ; preds = %24, %28, %32
  %40 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %41 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %40, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %41, align 8
  %43 = icmp eq %"class.std::__1::unique_ptr.73"* %42, null
  br i1 %43, label %69, label %44

44:                                               ; preds = %39
  %45 = bitcast %"class.std::__1::unique_ptr.73"* %42 to i8*
  %46 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %5, align 8
  %47 = icmp eq %"class.std::__1::unique_ptr.73"* %46, %42
  br i1 %47, label %67, label %48

48:                                               ; preds = %44, %62
  %49 = phi %"class.std::__1::unique_ptr.73"* [ %50, %62 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %49, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %50, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %51, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %51, align 8
  %53 = icmp eq %"class.CPWL_ListCtrl::Item"* %52, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %52, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %55, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %55, align 8
  %57 = icmp eq %class.CPWL_EditImpl* %56, null
  br i1 %57, label %60, label %58

58:                                               ; preds = %54
  call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %56) #16
  %59 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %56, i64 0, i32 0
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %58, %54
  %61 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %52, i64 0, i32 0
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %60, %48
  %63 = icmp eq %"class.std::__1::unique_ptr.73"* %50, %42
  br i1 %63, label %64, label %48

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::vector.71"* %40 to i8**
  %66 = load i8*, i8** %65, align 8
  br label %67

67:                                               ; preds = %64, %44
  %68 = phi i8* [ %66, %64 ], [ %45, %44 ]
  store %"class.std::__1::unique_ptr.73"* %42, %"class.std::__1::unique_ptr.73"** %5, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %39, %67
  %70 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0
  %71 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %72 = bitcast %"class.std::__1::__tree_end_node"* %71 to %"class.std::__1::__tree_node"**
  %73 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %72, align 8
  call void @_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %70, %"class.std::__1::__tree_node"* %73) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl5ClearEv(%class.CPWL_ListCtrl* nocapture) local_unnamed_addr #3 align 2 {
  %2 = alloca %class.CFX_FloatRect, align 4
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %4 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %5, align 8
  %7 = icmp eq %"class.std::__1::unique_ptr.73"* %6, %4
  br i1 %7, label %24, label %8

8:                                                ; preds = %1, %22
  %9 = phi %"class.std::__1::unique_ptr.73"* [ %10, %22 ], [ %6, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %9, i64 -1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %11, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %11, align 8
  %13 = icmp eq %"class.CPWL_ListCtrl::Item"* %12, null
  br i1 %13, label %22, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 2, i32 0, i32 0, i32 0
  %16 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %15, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %15, align 8
  %17 = icmp eq %class.CPWL_EditImpl* %16, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %16) #16
  %19 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %16, i64 0, i32 0
  tail call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %18, %14
  %21 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 0
  tail call void @_ZdlPv(i8* %21) #17
  br label %22

22:                                               ; preds = %20, %8
  %23 = icmp eq %"class.std::__1::unique_ptr.73"* %10, %4
  br i1 %23, label %24, label %8

24:                                               ; preds = %22, %1
  store %"class.std::__1::unique_ptr.73"* %4, %"class.std::__1::unique_ptr.73"** %5, align 8
  %25 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %26 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %25, align 8
  %27 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %30 = load i8, i8* %29, align 2, !range !8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %39

32:                                               ; preds = %28
  store i8 1, i8* %29, align 2
  %33 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #16
  %34 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* align 8 %34, i64 16, i1 false) #16
  %35 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %26 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %36 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %36, i64 4
  %38 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %37, align 8
  call void %38(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %26, %class.CFX_FloatRect* nonnull dereferenceable(16) %2) #16
  store i8 0, i8* %29, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #16
  br label %39

39:                                               ; preds = %28, %24, %32
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_ListCtrl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 8
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 3
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 2, i32 0
  %11 = load float, float* %10, align 8
  %12 = fsub float %11, %5
  %13 = fsub float %9, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = fsub float %17, %7
  %19 = fsub float %15, %18
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %13, float* %20, align 4
  %21 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %19, float* %21, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_ListCtrl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #6 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 0
  %5 = load float, float* %4, align 8
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 3
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 2, i32 0
  %11 = load float, float* %10, align 8
  %12 = fsub float %11, %5
  %13 = fadd float %9, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 2, i32 1
  %17 = load float, float* %16, align 4
  %18 = fsub float %17, %7
  %19 = fadd float %15, %18
  %20 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %13, float* %20, align 4
  %21 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %19, float* %21, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl7InToOutERK13CFX_FloatRect(%class.CPWL_ListCtrl* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %3 = bitcast %class.CFX_FloatRect* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 8, !noalias !9
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %8 = load float, float* %7, align 4, !noalias !9
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %10 = bitcast float* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8, !noalias !9
  %12 = insertelement <2 x float> undef, float %6, i32 0
  %13 = insertelement <2 x float> %12, float %8, i32 1
  %14 = fsub <2 x float> %11, %13
  %15 = fsub <2 x float> %4, %14
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fsub <2 x float> %18, %14
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %15, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %19, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl7OutToInERK13CFX_FloatRect(%class.CPWL_ListCtrl* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %3 = bitcast %class.CFX_FloatRect* %1 to <2 x float>*
  %4 = load <2 x float>, <2 x float>* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %6 = load float, float* %5, align 8, !noalias !12
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %8 = load float, float* %7, align 4, !noalias !12
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %10 = bitcast float* %9 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 8, !noalias !12
  %12 = insertelement <2 x float> undef, float %6, i32 0
  %13 = insertelement <2 x float> %12, float %8, i32 1
  %14 = fsub <2 x float> %11, %13
  %15 = fadd <2 x float> %4, %14
  %16 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %17 = bitcast float* %16 to <2 x float>*
  %18 = load <2 x float>, <2 x float>* %17, align 4
  %19 = fadd <2 x float> %14, %18
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %15, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %19, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_ListCtrl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 8, !noalias !15
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 3
  %9 = fadd float %5, %7
  %10 = load float, float* %8, align 4, !noalias !18
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %9, float* %14, align 4
  %15 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %13, float* %15, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl12OuterToInnerERK13CFX_PTemplateIfE(%class.CFX_PTemplate* noalias nocapture sret, %class.CPWL_ListCtrl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 0
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 8, !noalias !21
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 0, i32 3
  %9 = fsub float %5, %7
  %10 = load float, float* %8, align 4, !noalias !24
  %11 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %2, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = fsub float %10, %12
  %14 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 0
  store float %9, float* %14, align 4
  %15 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %0, i64 0, i32 1
  store float %13, float* %15, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_FloatRect(%class.CPWL_ListCtrl* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 8, !noalias !27
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %10 = fadd float %4, %8
  %11 = load float, float* %9, align 4, !noalias !32
  %12 = fsub float %11, %6
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fadd float %8, %14
  %18 = fsub float %11, %16
  %19 = insertelement <2 x float> undef, float %10, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = insertelement <2 x float> undef, float %17, i32 0
  %22 = insertelement <2 x float> %21, float %12, i32 1
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl12OuterToInnerERK13CFX_FloatRect(%class.CPWL_ListCtrl* nocapture readonly, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 0
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %8 = load float, float* %7, align 8, !noalias !35
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %10 = fsub float %4, %8
  %11 = load float, float* %9, align 4, !noalias !40
  %12 = fsub float %11, %6
  %13 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 2
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 1
  %16 = load float, float* %15, align 4
  %17 = fsub float %14, %8
  %18 = fsub float %11, %16
  %19 = insertelement <2 x float> undef, float %10, i32 0
  %20 = insertelement <2 x float> %19, float %18, i32 1
  %21 = insertelement <2 x float> undef, float %17, i32 0
  %22 = insertelement <2 x float> %21, float %12, i32 1
  %23 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %20, 0
  %24 = insertvalue { <2 x float>, <2 x float> } %23, <2 x float> %22, 1
  ret { <2 x float>, <2 x float> } %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11OnMouseDownERK13CFX_PTemplateIfEbb(%class.CPWL_ListCtrl*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %6 = load float, float* %5, align 4, !noalias !43
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %8 = load float, float* %7, align 4, !noalias !43
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %10 = load float, float* %9, align 4, !noalias !43
  %11 = fsub float %10, %6
  %12 = fadd float %8, %11
  %13 = fsub float %6, %12
  %14 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %14, align 8
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.73"* %15, %17
  %19 = ptrtoint %"class.std::__1::unique_ptr.73"* %17 to i64
  %20 = ptrtoint %"class.std::__1::unique_ptr.73"* %15 to i64
  br i1 %18, label %77, label %21

21:                                               ; preds = %4, %54
  %22 = phi i8 [ %55, %54 ], [ 1, %4 ]
  %23 = phi i8 [ %43, %54 ], [ 1, %4 ]
  %24 = phi %"class.std::__1::unique_ptr.73"* [ %56, %54 ], [ %15, %4 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %25, align 8
  %27 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1
  %28 = bitcast %class.CFX_FloatRect* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1, i32 2
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = extractelement <2 x float> %32, i32 1
  %34 = fcmp ogt float %13, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %21
  %36 = fsub float %13, %33
  %37 = fpext float %36 to double
  %38 = fcmp olt double %37, 1.000000e-04
  %39 = fcmp ogt double %37, -1.000000e-04
  %40 = and i1 %38, %39
  %41 = select i1 %40, i8 %23, i8 0
  br label %42

42:                                               ; preds = %35, %21
  %43 = phi i8 [ %23, %21 ], [ %41, %35 ]
  %44 = extractelement <2 x float> %29, i32 1
  %45 = fcmp olt float %13, %44
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = fsub float %13, %44
  %48 = fpext float %47 to double
  %49 = fcmp olt double %48, 1.000000e-04
  %50 = fcmp ogt double %48, -1.000000e-04
  %51 = and i1 %49, %50
  %52 = select i1 %51, i8 %22, i8 0
  %53 = fcmp ult float %13, %33
  br i1 %53, label %54, label %58

54:                                               ; preds = %46, %42
  %55 = phi i8 [ %52, %46 ], [ %22, %42 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %24, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr.73"* %56, %17
  br i1 %57, label %63, label %21

58:                                               ; preds = %46
  %59 = ptrtoint %"class.std::__1::unique_ptr.73"* %24 to i64
  %60 = sub i64 %59, %20
  %61 = lshr exact i64 %60, 3
  %62 = trunc i64 %61 to i32
  br label %77

63:                                               ; preds = %54
  %64 = and i8 %43, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %63
  %67 = and i8 %55, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66
  %70 = sub i64 %19, %20
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 2147483648
  br i1 %72, label %74, label %73, !prof !46

73:                                               ; preds = %69
  tail call void @llvm.trap() #16
  unreachable

74:                                               ; preds = %69
  %75 = trunc i64 %71 to i32
  %76 = add nsw i32 %75, -1
  br label %77

77:                                               ; preds = %4, %58, %63, %66, %74
  %78 = phi i32 [ %76, %74 ], [ %62, %58 ], [ 0, %63 ], [ -1, %66 ], [ 0, %4 ]
  %79 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %80 = load i8, i8* %79, align 1, !range !8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %505, label %82

82:                                               ; preds = %77
  br i1 %3, label %83, label %300

83:                                               ; preds = %82
  %84 = icmp sgt i32 %78, -1
  br i1 %84, label %85, label %93

85:                                               ; preds = %83
  %86 = sub i64 %19, %20
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %87, 2147483648
  br i1 %88, label %90, label %89, !prof !46

89:                                               ; preds = %85
  tail call void @llvm.trap() #16
  unreachable

90:                                               ; preds = %85
  %91 = trunc i64 %87 to i32
  %92 = icmp slt i32 %78, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %90, %83
  %94 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  br label %178

95:                                               ; preds = %90
  %96 = sext i32 %78 to i64
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %15, i64 %96, i32 0, i32 0, i32 0
  %98 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %97, align 8
  %99 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %98, i64 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !8
  %101 = icmp eq i8 %100, 0
  %102 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  br i1 %101, label %178, label %103

103:                                              ; preds = %95
  %104 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %105 = bitcast %"class.std::__1::__tree_end_node"* %104 to %"class.std::__1::__tree_node"**
  %106 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %105, align 8
  %107 = icmp eq %"class.std::__1::__tree_node"* %106, null
  br i1 %107, label %132, label %108

108:                                              ; preds = %103, %108
  %109 = phi %"class.std::__1::__tree_end_node"* [ %119, %108 ], [ %104, %103 ]
  %110 = phi %"class.std::__1::__tree_node"* [ %120, %108 ], [ %106, %103 ]
  %111 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 1, i32 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp slt i32 %112, %78
  %114 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 1
  %115 = bitcast %"class.std::__1::__tree_node_base"** %114 to %"class.std::__1::__tree_node"**
  %116 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %110, i64 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::__tree_node"* %110 to %"class.std::__1::__tree_node"**
  %118 = select i1 %113, %"class.std::__1::__tree_node"** %115, %"class.std::__1::__tree_node"** %117
  %119 = select i1 %113, %"class.std::__1::__tree_end_node"* %109, %"class.std::__1::__tree_end_node"* %116
  %120 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %118, align 8
  %121 = icmp eq %"class.std::__1::__tree_node"* %120, null
  br i1 %121, label %122, label %108

122:                                              ; preds = %108
  %123 = icmp eq %"class.std::__1::__tree_end_node"* %119, %104
  br i1 %123, label %132, label %124

124:                                              ; preds = %122
  %125 = bitcast %"class.std::__1::__tree_end_node"* %119 to %"class.std::__1::__tree_node"*
  %126 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %125, i64 0, i32 1, i32 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, %78
  br i1 %128, label %132, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %119, i64 4
  %131 = bitcast %"class.std::__1::__tree_end_node"* %130 to i32*
  store i32 -1, i32* %131, align 4
  br label %132

132:                                              ; preds = %103, %122, %124, %129
  %133 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %102, i64 0, i32 0, i32 0, i32 0
  %134 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_end_node"* %134, %104
  br i1 %135, label %295, label %136

136:                                              ; preds = %132, %175
  %137 = phi %"class.std::__1::__tree_end_node"* [ %176, %175 ], [ %134, %132 ]
  %138 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 4
  %139 = bitcast %"class.std::__1::__tree_end_node"* %138 to i32*
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %147, label %142

142:                                              ; preds = %136
  %143 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::__tree_node"*
  %144 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %143, i64 0, i32 1, i32 0, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = icmp eq i32 %140, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %145, i1 zeroext %146) #16
  br label %147

147:                                              ; preds = %142, %136
  %148 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 1, i32 0
  %149 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %148, align 8
  %150 = icmp eq %"class.std::__1::__tree_node_base"* %149, null
  br i1 %150, label %151, label %159

151:                                              ; preds = %147
  %152 = bitcast %"class.std::__1::__tree_end_node"* %137 to %"class.std::__1::__tree_node_base"*
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %137, i64 2
  %154 = bitcast %"class.std::__1::__tree_end_node"* %153 to %"class.std::__1::__tree_end_node"**
  %155 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %154, align 8
  %156 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %155, i64 0, i32 0
  %157 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %156, align 8
  %158 = icmp eq %"class.std::__1::__tree_node_base"* %157, %152
  br i1 %158, label %175, label %166

159:                                              ; preds = %147, %159
  %160 = phi %"class.std::__1::__tree_node_base"* [ %162, %159 ], [ %149, %147 ]
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 0, i32 0
  %162 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node_base"* %162, null
  br i1 %163, label %164, label %159

164:                                              ; preds = %159
  %165 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %160, i64 0, i32 0
  br label %175

166:                                              ; preds = %151, %166
  %167 = phi %"class.std::__1::__tree_end_node"** [ %170, %166 ], [ %154, %151 ]
  %168 = bitcast %"class.std::__1::__tree_end_node"** %167 to %"class.std::__1::__tree_node_base"**
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %169, i64 0, i32 2
  %171 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %171, i64 0, i32 0
  %173 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %172, align 8
  %174 = icmp eq %"class.std::__1::__tree_node_base"* %173, %169
  br i1 %174, label %175, label %166

175:                                              ; preds = %166, %164, %151
  %176 = phi %"class.std::__1::__tree_end_node"* [ %165, %164 ], [ %155, %151 ], [ %171, %166 ]
  %177 = icmp eq %"class.std::__1::__tree_end_node"* %176, %104
  br i1 %177, label %295, label %136

178:                                              ; preds = %95, %93
  %179 = phi %"class.CPWL_ListCtrl::SelectState"* [ %94, %93 ], [ %102, %95 ]
  %180 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %181 = bitcast %"class.std::__1::__tree_end_node"* %180 to %"class.std::__1::__tree_node"**
  %182 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %181, align 8
  %183 = icmp eq %"class.std::__1::__tree_node"* %182, null
  br i1 %183, label %212, label %184

184:                                              ; preds = %178
  %185 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %186

186:                                              ; preds = %208, %184
  %187 = phi %"class.std::__1::__tree_node"* [ %211, %208 ], [ %182, %184 ]
  %188 = phi %"class.std::__1::__tree_node_base"** [ %210, %208 ], [ %185, %184 ]
  %189 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 1, i32 0, i32 0
  %190 = load i32, i32* %189, align 4
  %191 = icmp sgt i32 %190, %78
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 0, i32 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, null
  br i1 %195, label %196, label %208

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 0, i32 0
  br label %214

198:                                              ; preds = %186
  %199 = icmp slt i32 %190, %78
  br i1 %199, label %200, label %206

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 0, i32 1
  %202 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %201, align 8
  %203 = icmp eq %"class.std::__1::__tree_node_base"* %202, null
  br i1 %203, label %204, label %208

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 0, i32 0
  br label %214

206:                                              ; preds = %198
  %207 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %187, i64 0, i32 0, i32 0
  br label %214

208:                                              ; preds = %200, %192
  %209 = phi %"class.std::__1::__tree_node_base"* [ %194, %192 ], [ %202, %200 ]
  %210 = phi %"class.std::__1::__tree_node_base"** [ %193, %192 ], [ %201, %200 ]
  %211 = bitcast %"class.std::__1::__tree_node_base"* %209 to %"class.std::__1::__tree_node"*
  br label %186

212:                                              ; preds = %178
  %213 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %180, i64 0, i32 0
  br label %214

214:                                              ; preds = %212, %206, %204, %196
  %215 = phi %"class.std::__1::__tree_end_node"* [ %180, %212 ], [ %197, %196 ], [ %205, %204 ], [ %207, %206 ]
  %216 = phi %"class.std::__1::__tree_node_base"** [ %213, %212 ], [ %193, %196 ], [ %201, %204 ], [ %188, %206 ]
  %217 = bitcast %"class.std::__1::__tree_node_base"** %216 to %"class.std::__1::__tree_node"**
  %218 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %217, align 8
  %219 = icmp eq %"class.std::__1::__tree_node"* %218, null
  br i1 %219, label %220, label %247

220:                                              ; preds = %214
  %221 = tail call i8* @_Znwm(i64 40) #17, !noalias !47
  %222 = getelementptr inbounds i8, i8* %221, i64 28
  %223 = bitcast i8* %222 to i32*
  store i32 %78, i32* %223, align 4, !noalias !47
  %224 = getelementptr inbounds i8, i8* %221, i64 32
  %225 = bitcast i8* %224 to i32*
  store i32 0, i32* %225, align 4, !noalias !47
  %226 = bitcast i8* %221 to %"class.std::__1::__tree_node"*
  %227 = bitcast i8* %221 to %"class.std::__1::__tree_node_base"*
  %228 = getelementptr inbounds i8, i8* %221, i64 16
  %229 = bitcast i8* %228 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %221, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %215, %"class.std::__1::__tree_end_node"** %229, align 8
  %230 = bitcast %"class.std::__1::__tree_node_base"** %216 to i8**
  store i8* %221, i8** %230, align 8
  %231 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %232 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %232, i64 0, i32 0
  %234 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %233, align 8
  %235 = icmp eq %"class.std::__1::__tree_node_base"* %234, null
  br i1 %235, label %240, label %236

236:                                              ; preds = %220
  %237 = ptrtoint %"class.std::__1::__tree_node_base"* %234 to i64
  %238 = bitcast %"class.CPWL_ListCtrl::SelectState"* %179 to i64*
  store i64 %237, i64* %238, align 8
  %239 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %216, align 8
  br label %240

240:                                              ; preds = %236, %220
  %241 = phi %"class.std::__1::__tree_node_base"* [ %227, %220 ], [ %239, %236 ]
  %242 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %243 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %242, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %243, %"class.std::__1::__tree_node_base"* %241) #16
  %244 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %245 = load i64, i64* %244, align 8
  %246 = add i64 %245, 1
  store i64 %246, i64* %244, align 8
  br label %247

247:                                              ; preds = %214, %240
  %248 = phi %"class.std::__1::__tree_node"* [ %226, %240 ], [ %218, %214 ]
  %249 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %248, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %249, align 4
  %250 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %251 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %250, align 8
  %252 = icmp eq %"class.std::__1::__tree_end_node"* %251, %180
  br i1 %252, label %295, label %253

253:                                              ; preds = %247, %292
  %254 = phi %"class.std::__1::__tree_end_node"* [ %293, %292 ], [ %251, %247 ]
  %255 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %254, i64 4
  %256 = bitcast %"class.std::__1::__tree_end_node"* %255 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %264, label %259

259:                                              ; preds = %253
  %260 = bitcast %"class.std::__1::__tree_end_node"* %254 to %"class.std::__1::__tree_node"*
  %261 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %260, i64 0, i32 1, i32 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %257, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %262, i1 zeroext %263) #16
  br label %264

264:                                              ; preds = %259, %253
  %265 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %254, i64 1, i32 0
  %266 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %265, align 8
  %267 = icmp eq %"class.std::__1::__tree_node_base"* %266, null
  br i1 %267, label %268, label %276

268:                                              ; preds = %264
  %269 = bitcast %"class.std::__1::__tree_end_node"* %254 to %"class.std::__1::__tree_node_base"*
  %270 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %254, i64 2
  %271 = bitcast %"class.std::__1::__tree_end_node"* %270 to %"class.std::__1::__tree_end_node"**
  %272 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %271, align 8
  %273 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  %275 = icmp eq %"class.std::__1::__tree_node_base"* %274, %269
  br i1 %275, label %292, label %283

276:                                              ; preds = %264, %276
  %277 = phi %"class.std::__1::__tree_node_base"* [ %279, %276 ], [ %266, %264 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %281, label %276

281:                                              ; preds = %276
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  br label %292

283:                                              ; preds = %268, %283
  %284 = phi %"class.std::__1::__tree_end_node"** [ %287, %283 ], [ %271, %268 ]
  %285 = bitcast %"class.std::__1::__tree_end_node"** %284 to %"class.std::__1::__tree_node_base"**
  %286 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %285, align 8
  %287 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %286, i64 0, i32 2
  %288 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %287, align 8
  %289 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %288, i64 0, i32 0
  %290 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %289, align 8
  %291 = icmp eq %"class.std::__1::__tree_node_base"* %290, %286
  br i1 %291, label %292, label %283

292:                                              ; preds = %283, %281, %268
  %293 = phi %"class.std::__1::__tree_end_node"* [ %282, %281 ], [ %272, %268 ], [ %288, %283 ]
  %294 = icmp eq %"class.std::__1::__tree_end_node"* %293, %180
  br i1 %294, label %295, label %253

295:                                              ; preds = %175, %292, %247, %132
  %296 = phi %"class.CPWL_ListCtrl::SelectState"* [ %102, %132 ], [ %179, %247 ], [ %179, %292 ], [ %102, %175 ]
  %297 = phi i8 [ 0, %132 ], [ 1, %247 ], [ 1, %292 ], [ 0, %175 ]
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %296) #16
  %298 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 8
  store i8 %297, i8* %298, align 8
  %299 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  store i32 %78, i32* %299, align 8
  br label %504

300:                                              ; preds = %82
  %301 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %302 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %301, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %302, align 8
  %304 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %305 = icmp eq %"class.std::__1::__tree_end_node"* %303, %304
  br i1 %305, label %340, label %306

306:                                              ; preds = %300, %337
  %307 = phi %"class.std::__1::__tree_end_node"* [ %338, %337 ], [ %303, %300 ]
  %308 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %307, i64 4
  %309 = bitcast %"class.std::__1::__tree_end_node"* %308 to i32*
  store i32 -1, i32* %309, align 4
  %310 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %307, i64 1, i32 0
  %311 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %310, align 8
  %312 = icmp eq %"class.std::__1::__tree_node_base"* %311, null
  br i1 %312, label %313, label %321

313:                                              ; preds = %306
  %314 = bitcast %"class.std::__1::__tree_end_node"* %307 to %"class.std::__1::__tree_node_base"*
  %315 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %307, i64 2
  %316 = bitcast %"class.std::__1::__tree_end_node"* %315 to %"class.std::__1::__tree_end_node"**
  %317 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %316, align 8
  %318 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %317, i64 0, i32 0
  %319 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %318, align 8
  %320 = icmp eq %"class.std::__1::__tree_node_base"* %319, %314
  br i1 %320, label %337, label %328

321:                                              ; preds = %306, %321
  %322 = phi %"class.std::__1::__tree_node_base"* [ %324, %321 ], [ %311, %306 ]
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %322, i64 0, i32 0, i32 0
  %324 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %323, align 8
  %325 = icmp eq %"class.std::__1::__tree_node_base"* %324, null
  br i1 %325, label %326, label %321

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %322, i64 0, i32 0
  br label %337

328:                                              ; preds = %313, %328
  %329 = phi %"class.std::__1::__tree_end_node"** [ %332, %328 ], [ %316, %313 ]
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to %"class.std::__1::__tree_node_base"**
  %331 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %330, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %331, i64 0, i32 2
  %333 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %332, align 8
  %334 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %333, i64 0, i32 0
  %335 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %334, align 8
  %336 = icmp eq %"class.std::__1::__tree_node_base"* %335, %331
  br i1 %336, label %337, label %328

337:                                              ; preds = %328, %326, %313
  %338 = phi %"class.std::__1::__tree_end_node"* [ %327, %326 ], [ %317, %313 ], [ %333, %328 ]
  %339 = icmp eq %"class.std::__1::__tree_end_node"* %338, %304
  br i1 %339, label %340, label %306

340:                                              ; preds = %337, %300
  br i1 %2, label %341, label %389

341:                                              ; preds = %340
  %342 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  %343 = load i32, i32* %342, align 8
  tail call void @_ZN13CPWL_ListCtrl11SelectState3AddEii(%"class.CPWL_ListCtrl::SelectState"* %301, i32 %343, i32 %78)
  %344 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %302, align 8
  %345 = icmp eq %"class.std::__1::__tree_end_node"* %344, %304
  br i1 %345, label %388, label %346

346:                                              ; preds = %341, %385
  %347 = phi %"class.std::__1::__tree_end_node"* [ %386, %385 ], [ %344, %341 ]
  %348 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 4
  %349 = bitcast %"class.std::__1::__tree_end_node"* %348 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %357, label %352

352:                                              ; preds = %346
  %353 = bitcast %"class.std::__1::__tree_end_node"* %347 to %"class.std::__1::__tree_node"*
  %354 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %353, i64 0, i32 1, i32 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = icmp eq i32 %350, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %355, i1 zeroext %356) #16
  br label %357

357:                                              ; preds = %352, %346
  %358 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 1, i32 0
  %359 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %358, align 8
  %360 = icmp eq %"class.std::__1::__tree_node_base"* %359, null
  br i1 %360, label %361, label %369

361:                                              ; preds = %357
  %362 = bitcast %"class.std::__1::__tree_end_node"* %347 to %"class.std::__1::__tree_node_base"*
  %363 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %347, i64 2
  %364 = bitcast %"class.std::__1::__tree_end_node"* %363 to %"class.std::__1::__tree_end_node"**
  %365 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %364, align 8
  %366 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %365, i64 0, i32 0
  %367 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %366, align 8
  %368 = icmp eq %"class.std::__1::__tree_node_base"* %367, %362
  br i1 %368, label %385, label %376

369:                                              ; preds = %357, %369
  %370 = phi %"class.std::__1::__tree_node_base"* [ %372, %369 ], [ %359, %357 ]
  %371 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %370, i64 0, i32 0, i32 0
  %372 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %371, align 8
  %373 = icmp eq %"class.std::__1::__tree_node_base"* %372, null
  br i1 %373, label %374, label %369

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %370, i64 0, i32 0
  br label %385

376:                                              ; preds = %361, %376
  %377 = phi %"class.std::__1::__tree_end_node"** [ %380, %376 ], [ %364, %361 ]
  %378 = bitcast %"class.std::__1::__tree_end_node"** %377 to %"class.std::__1::__tree_node_base"**
  %379 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %378, align 8
  %380 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %379, i64 0, i32 2
  %381 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %380, align 8
  %382 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %381, i64 0, i32 0
  %383 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %382, align 8
  %384 = icmp eq %"class.std::__1::__tree_node_base"* %383, %379
  br i1 %384, label %385, label %376

385:                                              ; preds = %376, %374, %361
  %386 = phi %"class.std::__1::__tree_end_node"* [ %375, %374 ], [ %365, %361 ], [ %381, %376 ]
  %387 = icmp eq %"class.std::__1::__tree_end_node"* %386, %304
  br i1 %387, label %388, label %346

388:                                              ; preds = %385, %341
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %301) #16
  br label %504

389:                                              ; preds = %340
  %390 = bitcast %"class.std::__1::__tree_end_node"* %304 to %"class.std::__1::__tree_node"**
  %391 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %390, align 8
  %392 = icmp eq %"class.std::__1::__tree_node"* %391, null
  br i1 %392, label %421, label %393

393:                                              ; preds = %389
  %394 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %395

395:                                              ; preds = %417, %393
  %396 = phi %"class.std::__1::__tree_node"* [ %420, %417 ], [ %391, %393 ]
  %397 = phi %"class.std::__1::__tree_node_base"** [ %419, %417 ], [ %394, %393 ]
  %398 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 1, i32 0, i32 0
  %399 = load i32, i32* %398, align 4
  %400 = icmp sgt i32 %399, %78
  br i1 %400, label %401, label %407

401:                                              ; preds = %395
  %402 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 0, i32 0, i32 0
  %403 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %402, align 8
  %404 = icmp eq %"class.std::__1::__tree_node_base"* %403, null
  br i1 %404, label %405, label %417

405:                                              ; preds = %401
  %406 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 0, i32 0
  br label %423

407:                                              ; preds = %395
  %408 = icmp slt i32 %399, %78
  br i1 %408, label %409, label %415

409:                                              ; preds = %407
  %410 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 0, i32 1
  %411 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %410, align 8
  %412 = icmp eq %"class.std::__1::__tree_node_base"* %411, null
  br i1 %412, label %413, label %417

413:                                              ; preds = %409
  %414 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 0, i32 0
  br label %423

415:                                              ; preds = %407
  %416 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %396, i64 0, i32 0, i32 0
  br label %423

417:                                              ; preds = %409, %401
  %418 = phi %"class.std::__1::__tree_node_base"* [ %403, %401 ], [ %411, %409 ]
  %419 = phi %"class.std::__1::__tree_node_base"** [ %402, %401 ], [ %410, %409 ]
  %420 = bitcast %"class.std::__1::__tree_node_base"* %418 to %"class.std::__1::__tree_node"*
  br label %395

421:                                              ; preds = %389
  %422 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %304, i64 0, i32 0
  br label %423

423:                                              ; preds = %421, %415, %413, %405
  %424 = phi %"class.std::__1::__tree_end_node"* [ %304, %421 ], [ %406, %405 ], [ %414, %413 ], [ %416, %415 ]
  %425 = phi %"class.std::__1::__tree_node_base"** [ %422, %421 ], [ %402, %405 ], [ %410, %413 ], [ %397, %415 ]
  %426 = bitcast %"class.std::__1::__tree_node_base"** %425 to %"class.std::__1::__tree_node"**
  %427 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %426, align 8
  %428 = icmp eq %"class.std::__1::__tree_node"* %427, null
  br i1 %428, label %429, label %455

429:                                              ; preds = %423
  %430 = tail call i8* @_Znwm(i64 40) #17, !noalias !50
  %431 = getelementptr inbounds i8, i8* %430, i64 28
  %432 = bitcast i8* %431 to i32*
  store i32 %78, i32* %432, align 4, !noalias !50
  %433 = getelementptr inbounds i8, i8* %430, i64 32
  %434 = bitcast i8* %433 to i32*
  store i32 0, i32* %434, align 4, !noalias !50
  %435 = bitcast i8* %430 to %"class.std::__1::__tree_node"*
  %436 = bitcast i8* %430 to %"class.std::__1::__tree_node_base"*
  %437 = getelementptr inbounds i8, i8* %430, i64 16
  %438 = bitcast i8* %437 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %430, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %424, %"class.std::__1::__tree_end_node"** %438, align 8
  %439 = bitcast %"class.std::__1::__tree_node_base"** %425 to i8**
  store i8* %430, i8** %439, align 8
  %440 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %302, align 8
  %441 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %440, i64 0, i32 0
  %442 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %441, align 8
  %443 = icmp eq %"class.std::__1::__tree_node_base"* %442, null
  br i1 %443, label %448, label %444

444:                                              ; preds = %429
  %445 = ptrtoint %"class.std::__1::__tree_node_base"* %442 to i64
  %446 = bitcast %"class.CPWL_ListCtrl::SelectState"* %301 to i64*
  store i64 %445, i64* %446, align 8
  %447 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %425, align 8
  br label %448

448:                                              ; preds = %444, %429
  %449 = phi %"class.std::__1::__tree_node_base"* [ %436, %429 ], [ %447, %444 ]
  %450 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %451 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %450, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %451, %"class.std::__1::__tree_node_base"* %449) #16
  %452 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %453 = load i64, i64* %452, align 8
  %454 = add i64 %453, 1
  store i64 %454, i64* %452, align 8
  br label %455

455:                                              ; preds = %423, %448
  %456 = phi %"class.std::__1::__tree_node"* [ %435, %448 ], [ %427, %423 ]
  %457 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %456, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %457, align 4
  %458 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %302, align 8
  %459 = icmp eq %"class.std::__1::__tree_end_node"* %458, %304
  br i1 %459, label %502, label %460

460:                                              ; preds = %455, %499
  %461 = phi %"class.std::__1::__tree_end_node"* [ %500, %499 ], [ %458, %455 ]
  %462 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %461, i64 4
  %463 = bitcast %"class.std::__1::__tree_end_node"* %462 to i32*
  %464 = load i32, i32* %463, align 4
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %471, label %466

466:                                              ; preds = %460
  %467 = bitcast %"class.std::__1::__tree_end_node"* %461 to %"class.std::__1::__tree_node"*
  %468 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %467, i64 0, i32 1, i32 0, i32 0
  %469 = load i32, i32* %468, align 4
  %470 = icmp eq i32 %464, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %469, i1 zeroext %470) #16
  br label %471

471:                                              ; preds = %466, %460
  %472 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %461, i64 1, i32 0
  %473 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %472, align 8
  %474 = icmp eq %"class.std::__1::__tree_node_base"* %473, null
  br i1 %474, label %475, label %483

475:                                              ; preds = %471
  %476 = bitcast %"class.std::__1::__tree_end_node"* %461 to %"class.std::__1::__tree_node_base"*
  %477 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %461, i64 2
  %478 = bitcast %"class.std::__1::__tree_end_node"* %477 to %"class.std::__1::__tree_end_node"**
  %479 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %478, align 8
  %480 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %479, i64 0, i32 0
  %481 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %480, align 8
  %482 = icmp eq %"class.std::__1::__tree_node_base"* %481, %476
  br i1 %482, label %499, label %490

483:                                              ; preds = %471, %483
  %484 = phi %"class.std::__1::__tree_node_base"* [ %486, %483 ], [ %473, %471 ]
  %485 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %484, i64 0, i32 0, i32 0
  %486 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %485, align 8
  %487 = icmp eq %"class.std::__1::__tree_node_base"* %486, null
  br i1 %487, label %488, label %483

488:                                              ; preds = %483
  %489 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %484, i64 0, i32 0
  br label %499

490:                                              ; preds = %475, %490
  %491 = phi %"class.std::__1::__tree_end_node"** [ %494, %490 ], [ %478, %475 ]
  %492 = bitcast %"class.std::__1::__tree_end_node"** %491 to %"class.std::__1::__tree_node_base"**
  %493 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %492, align 8
  %494 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %493, i64 0, i32 2
  %495 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %494, align 8
  %496 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %495, i64 0, i32 0
  %497 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %496, align 8
  %498 = icmp eq %"class.std::__1::__tree_node_base"* %497, %493
  br i1 %498, label %499, label %490

499:                                              ; preds = %490, %488, %475
  %500 = phi %"class.std::__1::__tree_end_node"* [ %489, %488 ], [ %479, %475 ], [ %495, %490 ]
  %501 = icmp eq %"class.std::__1::__tree_end_node"* %500, %304
  br i1 %501, label %502, label %460

502:                                              ; preds = %499, %455
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %301) #16
  %503 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  store i32 %78, i32* %503, align 8
  br label %504

504:                                              ; preds = %388, %502, %295
  tail call void @_ZN13CPWL_ListCtrl8SetCaretEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %506

505:                                              ; preds = %77
  tail call void @_ZN13CPWL_ListCtrl15SetSingleSelectEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %506

506:                                              ; preds = %505, %504
  %507 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %508 = load float, float* %507, align 4
  %509 = load float, float* %5, align 4
  %510 = icmp sgt i32 %78, -1
  br i1 %510, label %511, label %550

511:                                              ; preds = %506
  %512 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %513 = bitcast %"class.std::__1::unique_ptr.73"** %16 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.std::__1::vector.71"* %512 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = sub i64 %514, %516
  %518 = ashr exact i64 %517, 3
  %519 = icmp ult i64 %518, 2147483648
  %520 = inttoptr i64 %516 to %"class.std::__1::unique_ptr.73"*
  br i1 %519, label %522, label %521, !prof !46

521:                                              ; preds = %511
  tail call void @llvm.trap() #16
  unreachable

522:                                              ; preds = %511
  %523 = trunc i64 %518 to i32
  %524 = icmp slt i32 %78, %523
  br i1 %524, label %525, label %550

525:                                              ; preds = %522
  %526 = sext i32 %78 to i64
  %527 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %520, i64 %526, i32 0, i32 0, i32 0
  %528 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %527, align 8
  %529 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %528, i64 0, i32 1
  %530 = bitcast %class.CFX_FloatRect* %529 to <2 x float>*
  %531 = load <2 x float>, <2 x float>* %530, align 4
  %532 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %528, i64 0, i32 1, i32 2
  %533 = bitcast float* %532 to <2 x float>*
  %534 = load <2 x float>, <2 x float>* %533, align 4
  %535 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %536 = load float, float* %535, align 4
  %537 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %538 = load float, float* %537, align 4
  %539 = fsub float %536, %538
  %540 = extractelement <2 x float> %534, i32 1
  %541 = fadd float %538, 0.000000e+00
  %542 = fsub float %509, %540
  %543 = extractelement <2 x float> %531, i32 1
  %544 = fadd float %538, %539
  %545 = fsub float %509, %543
  %546 = insertelement <2 x float> undef, float %541, i32 0
  %547 = insertelement <2 x float> %546, float %545, i32 1
  %548 = insertelement <2 x float> undef, float %544, i32 0
  %549 = insertelement <2 x float> %548, float %542, i32 1
  br label %550

550:                                              ; preds = %506, %522, %525
  %551 = phi <2 x float> [ %549, %525 ], [ zeroinitializer, %522 ], [ zeroinitializer, %506 ]
  %552 = phi <2 x float> [ %547, %525 ], [ zeroinitializer, %522 ], [ zeroinitializer, %506 ]
  %553 = extractelement <2 x float> %552, i32 1
  %554 = load float, float* %9, align 4, !noalias !53
  %555 = fsub float %554, %509
  %556 = fsub float %553, %555
  %557 = extractelement <2 x float> %551, i32 1
  %558 = fsub float %557, %555
  %559 = fcmp oge float %556, %508
  %560 = fcmp ole float %558, %509
  %561 = and i1 %560, %559
  br i1 %561, label %563, label %562

562:                                              ; preds = %550
  tail call void @_ZN13CPWL_ListCtrl16ScrollToListItemEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %563

563:                                              ; preds = %562, %550
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl12GetItemIndexERK13CFX_PTemplateIfE(%class.CPWL_ListCtrl* nocapture readonly, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %4 = load float, float* %3, align 4, !noalias !56
  %5 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %6 = load float, float* %5, align 4, !noalias !56
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %8 = load float, float* %7, align 4, !noalias !56
  %9 = fsub float %8, %4
  %10 = fadd float %6, %9
  %11 = fsub float %4, %10
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %13 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %12, align 8
  %14 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %15 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %14, align 8
  %16 = icmp eq %"class.std::__1::unique_ptr.73"* %13, %15
  %17 = ptrtoint %"class.std::__1::unique_ptr.73"* %15 to i64
  %18 = ptrtoint %"class.std::__1::unique_ptr.73"* %13 to i64
  br i1 %16, label %75, label %19

19:                                               ; preds = %2, %52
  %20 = phi i8 [ %53, %52 ], [ 1, %2 ]
  %21 = phi i8 [ %41, %52 ], [ 1, %2 ]
  %22 = phi %"class.std::__1::unique_ptr.73"* [ %54, %52 ], [ %13, %2 ]
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %23, align 8
  %25 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %24, i64 0, i32 1
  %26 = bitcast %class.CFX_FloatRect* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %24, i64 0, i32 1, i32 2
  %29 = bitcast float* %28 to <2 x float>*
  %30 = load <2 x float>, <2 x float>* %29, align 4
  %31 = extractelement <2 x float> %30, i32 1
  %32 = fcmp ogt float %11, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %19
  %34 = fsub float %11, %31
  %35 = fpext float %34 to double
  %36 = fcmp olt double %35, 1.000000e-04
  %37 = fcmp ogt double %35, -1.000000e-04
  %38 = and i1 %36, %37
  %39 = select i1 %38, i8 %21, i8 0
  br label %40

40:                                               ; preds = %33, %19
  %41 = phi i8 [ %21, %19 ], [ %39, %33 ]
  %42 = extractelement <2 x float> %27, i32 1
  %43 = fcmp olt float %11, %42
  br i1 %43, label %44, label %52

44:                                               ; preds = %40
  %45 = fsub float %11, %42
  %46 = fpext float %45 to double
  %47 = fcmp olt double %46, 1.000000e-04
  %48 = fcmp ogt double %46, -1.000000e-04
  %49 = and i1 %47, %48
  %50 = select i1 %49, i8 %20, i8 0
  %51 = fcmp ult float %11, %31
  br i1 %51, label %52, label %56

52:                                               ; preds = %44, %40
  %53 = phi i8 [ %50, %44 ], [ %20, %40 ]
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %22, i64 1
  %55 = icmp eq %"class.std::__1::unique_ptr.73"* %54, %15
  br i1 %55, label %61, label %19

56:                                               ; preds = %44
  %57 = ptrtoint %"class.std::__1::unique_ptr.73"* %22 to i64
  %58 = sub i64 %57, %18
  %59 = lshr exact i64 %58, 3
  %60 = trunc i64 %59 to i32
  br label %75

61:                                               ; preds = %52
  %62 = and i8 %41, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %75

64:                                               ; preds = %61
  %65 = and i8 %53, 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %75, label %67

67:                                               ; preds = %64
  %68 = sub i64 %17, %18
  %69 = ashr exact i64 %68, 3
  %70 = icmp ult i64 %69, 2147483648
  br i1 %70, label %72, label %71, !prof !46

71:                                               ; preds = %67
  tail call void @llvm.trap() #16
  unreachable

72:                                               ; preds = %67
  %73 = trunc i64 %69 to i32
  %74 = add nsw i32 %73, -1
  br label %75

75:                                               ; preds = %2, %56, %64, %61, %72
  %76 = phi i32 [ %74, %72 ], [ %60, %56 ], [ 0, %61 ], [ -1, %64 ], [ 0, %2 ]
  ret i32 %76
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_ListCtrl14IsItemSelectedEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  br i1 %13, label %16, label %15, !prof !46

15:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

16:                                               ; preds = %4
  %17 = trunc i64 %12 to i32
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %26

19:                                               ; preds = %16
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %14, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 0
  %24 = load i8, i8* %23, align 8, !range !8
  %25 = icmp ne i8 %24, 0
  br label %26

26:                                               ; preds = %2, %19, %16
  %27 = phi i1 [ false, %16 ], [ %25, %19 ], [ false, %2 ]
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11SelectItemsEv(%class.CPWL_ListCtrl*) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %47, %1
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %2)
  ret void

8:                                                ; preds = %1, %47
  %9 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %4, %1 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %8
  %15 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node"*
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %15, i64 0, i32 1, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %12, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %17, i1 zeroext %18)
  br label %19

19:                                               ; preds = %8, %14
  %20 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %26 = bitcast %"class.std::__1::__tree_end_node"* %25 to %"class.std::__1::__tree_end_node"**
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, %24
  br i1 %30, label %47, label %38

31:                                               ; preds = %19, %31
  %32 = phi %"class.std::__1::__tree_node_base"* [ %34, %31 ], [ %21, %19 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0, i32 0
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %33, align 8
  %35 = icmp eq %"class.std::__1::__tree_node_base"* %34, null
  br i1 %35, label %36, label %31

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %32, i64 0, i32 0
  br label %47

38:                                               ; preds = %23, %38
  %39 = phi %"class.std::__1::__tree_end_node"** [ %42, %38 ], [ %26, %23 ]
  %40 = bitcast %"class.std::__1::__tree_end_node"** %39 to %"class.std::__1::__tree_node_base"**
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %41, i64 0, i32 2
  %43 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %43, i64 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, %41
  br i1 %46, label %47, label %38

47:                                               ; preds = %38, %23, %36
  %48 = phi %"class.std::__1::__tree_end_node"* [ %37, %36 ], [ %27, %23 ], [ %43, %38 ]
  %49 = icmp eq %"class.std::__1::__tree_end_node"* %48, %5
  br i1 %49, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl8SetCaretEi(%class.CPWL_ListCtrl*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = alloca <4 x float>, align 16
  %5 = alloca <4 x float>, align 16
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %172

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.73"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.71"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  br i1 %16, label %18, label %17, !prof !46

17:                                               ; preds = %7
  tail call void @llvm.trap() #16
  unreachable

18:                                               ; preds = %7
  %19 = trunc i64 %15 to i32
  %20 = icmp sgt i32 %19, %1
  br i1 %20, label %21, label %172

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %23 = load i8, i8* %22, align 1, !range !8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %172, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 7
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %1
  br i1 %28, label %172, label %29

29:                                               ; preds = %25
  store i32 %1, i32* %26, align 4
  %30 = bitcast <4 x float>* %4 to %class.CFX_FloatRect*
  %31 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %32 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %31, align 8
  %33 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %32, null
  br i1 %33, label %172, label %34

34:                                               ; preds = %29
  %35 = icmp eq i32 %27, -1
  %36 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %37 = load i8, i8* %36, align 2, !range !8
  %38 = icmp ne i8 %37, 0
  br i1 %35, label %39, label %47

39:                                               ; preds = %34
  br i1 %38, label %102, label %40

40:                                               ; preds = %39
  store i8 1, i8* %36, align 2
  %41 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #16
  %42 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %41, i8* align 8 %42, i64 16, i1 false) #16
  %43 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %32 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %44 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %43, align 8
  %45 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %44, i64 4
  %46 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %45, align 8
  call void %46(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %32, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #16
  store i8 0, i8* %36, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #16
  br label %102

47:                                               ; preds = %34
  br i1 %38, label %102, label %48

48:                                               ; preds = %47
  store i8 1, i8* %36, align 2
  %49 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #16
  %50 = icmp sgt i32 %27, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %49, i8 -1, i64 16, i1 false) #16
  %51 = icmp slt i32 %27, %19
  %52 = and i1 %50, %51
  br i1 %52, label %53, label %81

53:                                               ; preds = %48
  %54 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.73"*
  %55 = sext i32 %27 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %54, i64 %55, i32 0, i32 0, i32 0
  %57 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %56, align 8
  %58 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %57, i64 0, i32 1
  %59 = bitcast %class.CFX_FloatRect* %58 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 4
  %61 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %57, i64 0, i32 1, i32 2
  %62 = bitcast float* %61 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 4
  %64 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fsub float %65, %67
  %69 = extractelement <2 x float> %63, i32 1
  %70 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %71 = fadd float %67, 0.000000e+00
  %72 = load float, float* %70, align 4, !noalias !59
  %73 = fsub float %72, %69
  %74 = extractelement <2 x float> %60, i32 1
  %75 = fadd float %67, %68
  %76 = fsub float %72, %74
  %77 = insertelement <2 x float> undef, float %71, i32 0
  %78 = insertelement <2 x float> %77, float %76, i32 1
  %79 = insertelement <2 x float> undef, float %75, i32 0
  %80 = insertelement <2 x float> %79, float %73, i32 1
  br label %81

81:                                               ; preds = %53, %48
  %82 = phi <2 x float> [ %80, %53 ], [ zeroinitializer, %48 ]
  %83 = phi <2 x float> [ %78, %53 ], [ zeroinitializer, %48 ]
  %84 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %85 = load float, float* %84, align 8, !noalias !64
  %86 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %87 = load float, float* %86, align 4, !noalias !64
  %88 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %89 = bitcast float* %88 to <2 x float>*
  %90 = load <2 x float>, <2 x float>* %89, align 8, !noalias !64
  %91 = insertelement <2 x float> undef, float %85, i32 0
  %92 = insertelement <2 x float> %91, float %87, i32 1
  %93 = fsub <2 x float> %90, %92
  %94 = shufflevector <2 x float> %93, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %95 = shufflevector <2 x float> %83, <2 x float> %82, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %96 = fsub <4 x float> %95, %94
  %97 = fadd <4 x float> %96, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %97, <4 x float>* %4, align 16
  %98 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %32 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %99 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %98, align 8
  %100 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %99, i64 4
  %101 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %100, align 8
  call void %101(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %32, %class.CFX_FloatRect* nonnull dereferenceable(16) %30) #16
  store i8 0, i8* %36, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #16
  br label %102

102:                                              ; preds = %39, %40, %47, %81
  %103 = phi i1 [ false, %39 ], [ true, %40 ], [ false, %47 ], [ true, %81 ]
  %104 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %31, align 8
  %105 = bitcast <4 x float>* %5 to %class.CFX_FloatRect*
  %106 = icmp ne %"class.CPWL_ListCtrl::NotifyIface"* %104, null
  %107 = and i1 %106, %103
  br i1 %107, label %108, label %172

108:                                              ; preds = %102
  store i8 1, i8* %36, align 2
  %109 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %109, i8 -1, i64 16, i1 false) #16
  %110 = load i64, i64* %10, align 8
  %111 = load i64, i64* %12, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = icmp ult i64 %113, 2147483648
  %115 = inttoptr i64 %111 to %"class.std::__1::unique_ptr.73"*
  br i1 %114, label %117, label %116, !prof !46

116:                                              ; preds = %108
  call void @llvm.trap() #16
  unreachable

117:                                              ; preds = %108
  %118 = trunc i64 %113 to i32
  %119 = icmp sgt i32 %118, %1
  br i1 %119, label %127, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %122 = load float, float* %121, align 8, !noalias !67
  %123 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %124 = load float, float* %123, align 4, !noalias !67
  %125 = insertelement <2 x float> undef, float %122, i32 0
  %126 = insertelement <2 x float> %125, float %124, i32 1
  br label %156

127:                                              ; preds = %117
  %128 = sext i32 %1 to i64
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %115, i64 %128, i32 0, i32 0, i32 0
  %130 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %129, align 8
  %131 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %130, i64 0, i32 1
  %132 = bitcast %class.CFX_FloatRect* %131 to <2 x float>*
  %133 = load <2 x float>, <2 x float>* %132, align 4
  %134 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %130, i64 0, i32 1, i32 2
  %135 = bitcast float* %134 to <2 x float>*
  %136 = load <2 x float>, <2 x float>* %135, align 4
  %137 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %138 = load float, float* %137, align 4
  %139 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %140 = load float, float* %139, align 4
  %141 = fsub float %138, %140
  %142 = extractelement <2 x float> %136, i32 1
  %143 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %144 = fadd float %140, 0.000000e+00
  %145 = load float, float* %143, align 4, !noalias !70
  %146 = fsub float %145, %142
  %147 = extractelement <2 x float> %133, i32 1
  %148 = fadd float %140, %141
  %149 = fsub float %145, %147
  %150 = insertelement <2 x float> undef, float %144, i32 0
  %151 = insertelement <2 x float> %150, float %149, i32 1
  %152 = insertelement <2 x float> undef, float %148, i32 0
  %153 = insertelement <2 x float> %152, float %146, i32 1
  %154 = insertelement <2 x float> undef, float %140, i32 0
  %155 = insertelement <2 x float> %154, float %145, i32 1
  br label %156

156:                                              ; preds = %120, %127
  %157 = phi <2 x float> [ %153, %127 ], [ zeroinitializer, %120 ]
  %158 = phi <2 x float> [ %151, %127 ], [ zeroinitializer, %120 ]
  %159 = phi <2 x float> [ %155, %127 ], [ %126, %120 ]
  %160 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %161 = bitcast float* %160 to <2 x float>*
  %162 = load <2 x float>, <2 x float>* %161, align 8, !noalias !67
  %163 = fsub <2 x float> %162, %159
  %164 = shufflevector <2 x float> %163, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %165 = shufflevector <2 x float> %158, <2 x float> %157, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %166 = fsub <4 x float> %165, %164
  %167 = fadd <4 x float> %166, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %167, <4 x float>* %5, align 16
  %168 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %104 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %169 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %169, i64 4
  %171 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %170, align 8
  call void %171(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %104, %class.CFX_FloatRect* nonnull dereferenceable(16) %105) #16
  store i8 0, i8* %36, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #16
  br label %172

172:                                              ; preds = %102, %21, %29, %2, %156, %25, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl15SetSingleSelectEi(%class.CPWL_ListCtrl*, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = alloca <4 x float>, align 16
  %5 = alloca <4 x float>, align 16
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %208

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.73"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.71"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  br i1 %16, label %18, label %17, !prof !46

17:                                               ; preds = %7
  tail call void @llvm.trap() #16
  unreachable

18:                                               ; preds = %7
  %19 = trunc i64 %15 to i32
  %20 = icmp sgt i32 %19, %1
  br i1 %20, label %21, label %208

21:                                               ; preds = %18
  %22 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 4
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, %1
  br i1 %24, label %208, label %25

25:                                               ; preds = %21
  %26 = icmp sgt i32 %23, -1
  br i1 %26, label %27, label %118

27:                                               ; preds = %25
  %28 = icmp slt i32 %23, %19
  br i1 %28, label %29, label %36

29:                                               ; preds = %27
  %30 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.73"*
  %31 = sext i32 %23 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %30, i64 %31, i32 0, i32 0, i32 0
  %33 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %32, align 8
  %34 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %33, i64 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = load i32, i32* %22, align 4
  br label %36

36:                                               ; preds = %27, %29
  %37 = phi i32 [ %23, %27 ], [ %35, %29 ]
  %38 = bitcast <4 x float>* %4 to %class.CFX_FloatRect*
  %39 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %40 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %39, align 8
  %41 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %40, null
  br i1 %41, label %118, label %42

42:                                               ; preds = %36
  %43 = icmp eq i32 %37, -1
  %44 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %45 = load i8, i8* %44, align 2, !range !8
  %46 = icmp ne i8 %45, 0
  br i1 %43, label %47, label %55

47:                                               ; preds = %42
  br i1 %46, label %118, label %48

48:                                               ; preds = %47
  store i8 1, i8* %44, align 2
  %49 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %49) #16
  %50 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %49, i8* align 8 %50, i64 16, i1 false) #16
  %51 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %40 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %52 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %52, i64 4
  %54 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %53, align 8
  call void %54(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %40, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #16
  store i8 0, i8* %44, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %49) #16
  br label %118

55:                                               ; preds = %42
  br i1 %46, label %118, label %56

56:                                               ; preds = %55
  store i8 1, i8* %44, align 2
  %57 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %57) #16
  %58 = icmp sgt i32 %37, -1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %57, i8 -1, i64 16, i1 false) #16
  br i1 %58, label %59, label %97

59:                                               ; preds = %56
  %60 = load i64, i64* %10, align 8
  %61 = load i64, i64* %12, align 8
  %62 = sub i64 %60, %61
  %63 = ashr exact i64 %62, 3
  %64 = icmp ult i64 %63, 2147483648
  %65 = inttoptr i64 %61 to %"class.std::__1::unique_ptr.73"*
  br i1 %64, label %67, label %66, !prof !46

66:                                               ; preds = %59
  tail call void @llvm.trap() #16
  unreachable

67:                                               ; preds = %59
  %68 = trunc i64 %63 to i32
  %69 = icmp slt i32 %37, %68
  br i1 %69, label %70, label %97

70:                                               ; preds = %67
  %71 = sext i32 %37 to i64
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %65, i64 %71, i32 0, i32 0, i32 0
  %73 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %72, align 8
  %74 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %73, i64 0, i32 1
  %75 = bitcast %class.CFX_FloatRect* %74 to <2 x float>*
  %76 = load <2 x float>, <2 x float>* %75, align 4
  %77 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %73, i64 0, i32 1, i32 2
  %78 = bitcast float* %77 to <2 x float>*
  %79 = load <2 x float>, <2 x float>* %78, align 4
  %80 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %81 = load float, float* %80, align 4
  %82 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fsub float %81, %83
  %85 = extractelement <2 x float> %79, i32 1
  %86 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %87 = fadd float %83, 0.000000e+00
  %88 = load float, float* %86, align 4, !noalias !75
  %89 = fsub float %88, %85
  %90 = extractelement <2 x float> %76, i32 1
  %91 = fadd float %83, %84
  %92 = fsub float %88, %90
  %93 = insertelement <2 x float> undef, float %87, i32 0
  %94 = insertelement <2 x float> %93, float %92, i32 1
  %95 = insertelement <2 x float> undef, float %91, i32 0
  %96 = insertelement <2 x float> %95, float %89, i32 1
  br label %97

97:                                               ; preds = %70, %67, %56
  %98 = phi <2 x float> [ %96, %70 ], [ zeroinitializer, %67 ], [ zeroinitializer, %56 ]
  %99 = phi <2 x float> [ %94, %70 ], [ zeroinitializer, %67 ], [ zeroinitializer, %56 ]
  %100 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %101 = load float, float* %100, align 8, !noalias !80
  %102 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %103 = load float, float* %102, align 4, !noalias !80
  %104 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %105 = bitcast float* %104 to <2 x float>*
  %106 = load <2 x float>, <2 x float>* %105, align 8, !noalias !80
  %107 = insertelement <2 x float> undef, float %101, i32 0
  %108 = insertelement <2 x float> %107, float %103, i32 1
  %109 = fsub <2 x float> %106, %108
  %110 = shufflevector <2 x float> %109, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %111 = shufflevector <2 x float> %99, <2 x float> %98, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %112 = fsub <4 x float> %111, %110
  %113 = fadd <4 x float> %112, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %113, <4 x float>* %4, align 16
  %114 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %40 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %115 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %115, i64 4
  %117 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %116, align 8
  call void %117(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %40, %class.CFX_FloatRect* nonnull dereferenceable(16) %38) #16
  store i8 0, i8* %44, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %57) #16
  br label %118

118:                                              ; preds = %25, %36, %47, %48, %55, %97
  %119 = load i64, i64* %10, align 8
  %120 = load i64, i64* %12, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 2147483648
  %124 = inttoptr i64 %120 to %"class.std::__1::unique_ptr.73"*
  br i1 %123, label %126, label %125, !prof !46

125:                                              ; preds = %118
  call void @llvm.trap() #16
  unreachable

126:                                              ; preds = %118
  %127 = trunc i64 %122 to i32
  %128 = icmp sgt i32 %127, %1
  br i1 %128, label %129, label %134

129:                                              ; preds = %126
  %130 = sext i32 %1 to i64
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %124, i64 %130, i32 0, i32 0, i32 0
  %132 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %131, align 8
  %133 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %132, i64 0, i32 0
  store i8 1, i8* %133, align 8
  br label %134

134:                                              ; preds = %126, %129
  %135 = bitcast <4 x float>* %5 to %class.CFX_FloatRect*
  %136 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %137 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %136, align 8
  %138 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %137, null
  br i1 %138, label %207, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %141 = load i8, i8* %140, align 2, !range !8
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %143, label %207

143:                                              ; preds = %139
  store i8 1, i8* %140, align 2
  %144 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %144, i8 -1, i64 16, i1 false) #16
  %145 = load i64, i64* %10, align 8
  %146 = load i64, i64* %12, align 8
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = icmp ult i64 %148, 2147483648
  %150 = inttoptr i64 %146 to %"class.std::__1::unique_ptr.73"*
  br i1 %149, label %152, label %151, !prof !46

151:                                              ; preds = %143
  call void @llvm.trap() #16
  unreachable

152:                                              ; preds = %143
  %153 = trunc i64 %148 to i32
  %154 = icmp sgt i32 %153, %1
  br i1 %154, label %162, label %155

155:                                              ; preds = %152
  %156 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %157 = load float, float* %156, align 8, !noalias !83
  %158 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %159 = load float, float* %158, align 4, !noalias !83
  %160 = insertelement <2 x float> undef, float %157, i32 0
  %161 = insertelement <2 x float> %160, float %159, i32 1
  br label %191

162:                                              ; preds = %152
  %163 = sext i32 %1 to i64
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %150, i64 %163, i32 0, i32 0, i32 0
  %165 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %164, align 8
  %166 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %165, i64 0, i32 1
  %167 = bitcast %class.CFX_FloatRect* %166 to <2 x float>*
  %168 = load <2 x float>, <2 x float>* %167, align 4
  %169 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %165, i64 0, i32 1, i32 2
  %170 = bitcast float* %169 to <2 x float>*
  %171 = load <2 x float>, <2 x float>* %170, align 4
  %172 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %173 = load float, float* %172, align 4
  %174 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %175 = load float, float* %174, align 4
  %176 = fsub float %173, %175
  %177 = extractelement <2 x float> %171, i32 1
  %178 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %179 = fadd float %175, 0.000000e+00
  %180 = load float, float* %178, align 4, !noalias !86
  %181 = fsub float %180, %177
  %182 = extractelement <2 x float> %168, i32 1
  %183 = fadd float %175, %176
  %184 = fsub float %180, %182
  %185 = insertelement <2 x float> undef, float %179, i32 0
  %186 = insertelement <2 x float> %185, float %184, i32 1
  %187 = insertelement <2 x float> undef, float %183, i32 0
  %188 = insertelement <2 x float> %187, float %181, i32 1
  %189 = insertelement <2 x float> undef, float %175, i32 0
  %190 = insertelement <2 x float> %189, float %180, i32 1
  br label %191

191:                                              ; preds = %155, %162
  %192 = phi <2 x float> [ %188, %162 ], [ zeroinitializer, %155 ]
  %193 = phi <2 x float> [ %186, %162 ], [ zeroinitializer, %155 ]
  %194 = phi <2 x float> [ %190, %162 ], [ %161, %155 ]
  %195 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %196 = bitcast float* %195 to <2 x float>*
  %197 = load <2 x float>, <2 x float>* %196, align 8, !noalias !83
  %198 = fsub <2 x float> %197, %194
  %199 = shufflevector <2 x float> %198, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %200 = shufflevector <2 x float> %193, <2 x float> %192, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %201 = fsub <4 x float> %200, %199
  %202 = fadd <4 x float> %201, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %202, <4 x float>* %5, align 16
  %203 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %137 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %204 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %203, align 8
  %205 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %204, i64 4
  %206 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %205, align 8
  call void %206(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %137, %class.CFX_FloatRect* nonnull dereferenceable(16) %135) #16
  store i8 0, i8* %140, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #16
  br label %207

207:                                              ; preds = %139, %134, %191
  store i32 %1, i32* %22, align 4
  br label %208

208:                                              ; preds = %2, %21, %18, %207
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_ListCtrl13IsItemVisibleEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %4 = load float, float* %3, align 4
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %6 = load float, float* %5, align 4
  %7 = icmp sgt i32 %1, -1
  br i1 %7, label %8, label %48

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %10 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.73"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.71"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = ashr exact i64 %15, 3
  %17 = icmp ult i64 %16, 2147483648
  %18 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.73"*
  br i1 %17, label %20, label %19, !prof !46

19:                                               ; preds = %8
  tail call void @llvm.trap() #16
  unreachable

20:                                               ; preds = %8
  %21 = trunc i64 %16 to i32
  %22 = icmp sgt i32 %21, %1
  br i1 %22, label %23, label %48

23:                                               ; preds = %20
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %18, i64 %24, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %25, align 8
  %27 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1
  %28 = bitcast %class.CFX_FloatRect* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1, i32 2
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %34 = load float, float* %33, align 4
  %35 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %36 = load float, float* %35, align 4
  %37 = fsub float %34, %36
  %38 = extractelement <2 x float> %32, i32 1
  %39 = fadd float %36, 0.000000e+00
  %40 = fsub float %6, %38
  %41 = extractelement <2 x float> %29, i32 1
  %42 = fadd float %36, %37
  %43 = fsub float %6, %41
  %44 = insertelement <2 x float> undef, float %39, i32 0
  %45 = insertelement <2 x float> %44, float %43, i32 1
  %46 = insertelement <2 x float> undef, float %42, i32 0
  %47 = insertelement <2 x float> %46, float %40, i32 1
  br label %48

48:                                               ; preds = %2, %20, %23
  %49 = phi <2 x float> [ %47, %23 ], [ zeroinitializer, %20 ], [ zeroinitializer, %2 ]
  %50 = phi <2 x float> [ %45, %23 ], [ zeroinitializer, %20 ], [ zeroinitializer, %2 ]
  %51 = extractelement <2 x float> %50, i32 1
  %52 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %53 = load float, float* %52, align 4, !noalias !91
  %54 = fsub float %53, %6
  %55 = fsub float %51, %54
  %56 = extractelement <2 x float> %49, i32 1
  %57 = fsub float %56, %54
  %58 = fcmp oge float %55, %4
  %59 = fcmp ole float %57, %6
  %60 = and i1 %59, %58
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl16ScrollToListItemEi(%class.CPWL_ListCtrl* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %90

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  br i1 %13, label %15, label %14, !prof !46

14:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

15:                                               ; preds = %4
  %16 = trunc i64 %12 to i32
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %18, label %90

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %22 = load float, float* %21, align 4
  %23 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  %24 = sext i32 %1 to i64
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %23, i64 %24, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %25, align 8
  %27 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1
  %28 = bitcast %class.CFX_FloatRect* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1, i32 2
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = extractelement <2 x float> %32, i32 1
  %34 = fsub float %22, %33
  %35 = extractelement <2 x float> %29, i32 1
  %36 = fsub float %22, %35
  %37 = sext i32 %1 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %23, i64 %37, i32 0, i32 0, i32 0
  %39 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %38, align 8
  %40 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %39, i64 0, i32 1
  %41 = bitcast %class.CFX_FloatRect* %40 to <2 x float>*
  %42 = load <2 x float>, <2 x float>* %41, align 4
  %43 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %39, i64 0, i32 1, i32 2
  %44 = bitcast float* %43 to <2 x float>*
  %45 = load <2 x float>, <2 x float>* %44, align 4
  %46 = extractelement <2 x float> %45, i32 1
  %47 = fsub float %22, %46
  %48 = extractelement <2 x float> %42, i32 1
  %49 = fsub float %22, %48
  %50 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %51 = load float, float* %50, align 4, !noalias !94
  %52 = fsub float %51, %22
  %53 = fsub float %49, %52
  %54 = fsub float %47, %52
  %55 = fcmp olt float %53, %20
  br i1 %55, label %56, label %73

56:                                               ; preds = %18
  %57 = fsub float %53, %20
  %58 = fpext float %57 to double
  %59 = fcmp olt double %58, 1.000000e-04
  %60 = fcmp ogt double %58, -1.000000e-04
  %61 = and i1 %59, %60
  br i1 %61, label %73, label %62

62:                                               ; preds = %56
  %63 = fcmp olt float %54, %22
  br i1 %63, label %64, label %90

64:                                               ; preds = %62
  %65 = fsub float %54, %22
  %66 = fpext float %65 to double
  %67 = fcmp olt double %66, 1.000000e-04
  %68 = fcmp ogt double %66, -1.000000e-04
  %69 = and i1 %67, %68
  br i1 %69, label %90, label %70

70:                                               ; preds = %64
  %71 = fsub float %22, %20
  %72 = fadd float %71, %36
  tail call void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* %0, float %72)
  br label %90

73:                                               ; preds = %56, %18
  %74 = fcmp ogt float %54, %22
  br i1 %74, label %75, label %90

75:                                               ; preds = %73
  %76 = fsub float %54, %22
  %77 = fpext float %76 to double
  %78 = fcmp uge double %77, 1.000000e-04
  %79 = fcmp ule double %77, -1.000000e-04
  %80 = or i1 %79, %78
  %81 = fcmp ogt float %53, %20
  %82 = and i1 %81, %80
  br i1 %82, label %83, label %90

83:                                               ; preds = %75
  %84 = fsub float %53, %20
  %85 = fpext float %84 to double
  %86 = fcmp olt double %85, 1.000000e-04
  %87 = fcmp ogt double %85, -1.000000e-04
  %88 = and i1 %86, %87
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  tail call void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* %0, float %34)
  br label %90

90:                                               ; preds = %75, %2, %70, %62, %89, %73, %64, %83, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl11OnMouseMoveERK13CFX_PTemplateIfEbb(%class.CPWL_ListCtrl*, %class.CFX_PTemplate* nocapture readonly dereferenceable(8), i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %6 = load float, float* %5, align 4, !noalias !97
  %7 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %8 = load float, float* %7, align 4, !noalias !97
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %10 = load float, float* %9, align 4, !noalias !97
  %11 = fsub float %10, %6
  %12 = fadd float %8, %11
  %13 = fsub float %6, %12
  %14 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %15 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %14, align 8
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.73"* %15, %17
  %19 = ptrtoint %"class.std::__1::unique_ptr.73"* %17 to i64
  %20 = ptrtoint %"class.std::__1::unique_ptr.73"* %15 to i64
  br i1 %18, label %77, label %21

21:                                               ; preds = %4, %54
  %22 = phi i8 [ %55, %54 ], [ 1, %4 ]
  %23 = phi i8 [ %43, %54 ], [ 1, %4 ]
  %24 = phi %"class.std::__1::unique_ptr.73"* [ %56, %54 ], [ %15, %4 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %25, align 8
  %27 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1
  %28 = bitcast %class.CFX_FloatRect* %27 to <2 x float>*
  %29 = load <2 x float>, <2 x float>* %28, align 4
  %30 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %26, i64 0, i32 1, i32 2
  %31 = bitcast float* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = extractelement <2 x float> %32, i32 1
  %34 = fcmp ogt float %13, %33
  br i1 %34, label %35, label %42

35:                                               ; preds = %21
  %36 = fsub float %13, %33
  %37 = fpext float %36 to double
  %38 = fcmp olt double %37, 1.000000e-04
  %39 = fcmp ogt double %37, -1.000000e-04
  %40 = and i1 %38, %39
  %41 = select i1 %40, i8 %23, i8 0
  br label %42

42:                                               ; preds = %35, %21
  %43 = phi i8 [ %23, %21 ], [ %41, %35 ]
  %44 = extractelement <2 x float> %29, i32 1
  %45 = fcmp olt float %13, %44
  br i1 %45, label %46, label %54

46:                                               ; preds = %42
  %47 = fsub float %13, %44
  %48 = fpext float %47 to double
  %49 = fcmp olt double %48, 1.000000e-04
  %50 = fcmp ogt double %48, -1.000000e-04
  %51 = and i1 %49, %50
  %52 = select i1 %51, i8 %22, i8 0
  %53 = fcmp ult float %13, %33
  br i1 %53, label %54, label %58

54:                                               ; preds = %46, %42
  %55 = phi i8 [ %52, %46 ], [ %22, %42 ]
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %24, i64 1
  %57 = icmp eq %"class.std::__1::unique_ptr.73"* %56, %17
  br i1 %57, label %63, label %21

58:                                               ; preds = %46
  %59 = ptrtoint %"class.std::__1::unique_ptr.73"* %24 to i64
  %60 = sub i64 %59, %20
  %61 = lshr exact i64 %60, 3
  %62 = trunc i64 %61 to i32
  br label %77

63:                                               ; preds = %54
  %64 = and i8 %43, 1
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %63
  %67 = and i8 %55, 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %77, label %69

69:                                               ; preds = %66
  %70 = sub i64 %19, %20
  %71 = ashr exact i64 %70, 3
  %72 = icmp ult i64 %71, 2147483648
  br i1 %72, label %74, label %73, !prof !46

73:                                               ; preds = %69
  tail call void @llvm.trap() #16
  unreachable

74:                                               ; preds = %69
  %75 = trunc i64 %71 to i32
  %76 = add nsw i32 %75, -1
  br label %77

77:                                               ; preds = %4, %58, %63, %66, %74
  %78 = phi i32 [ %76, %74 ], [ %62, %58 ], [ 0, %63 ], [ -1, %66 ], [ 0, %4 ]
  %79 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %80 = load i8, i8* %79, align 1, !range !8
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %264, label %82

82:                                               ; preds = %77
  br i1 %3, label %83, label %175

83:                                               ; preds = %82
  %84 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 8
  %85 = load i8, i8* %84, align 8, !range !8
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %88 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  %89 = load i32, i32* %88, align 8
  br i1 %86, label %91, label %90

90:                                               ; preds = %83
  tail call void @_ZN13CPWL_ListCtrl11SelectState3AddEii(%"class.CPWL_ListCtrl::SelectState"* %87, i32 %89, i32 %78)
  br label %128

91:                                               ; preds = %83
  %92 = icmp sgt i32 %89, %78
  %93 = select i1 %92, i32 %78, i32 %89
  %94 = select i1 %92, i32 %89, i32 %78
  %95 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %96 = bitcast %"class.std::__1::__tree_end_node"* %95 to %"class.std::__1::__tree_node"**
  br label %97

97:                                               ; preds = %125, %91
  %98 = phi i32 [ %93, %91 ], [ %126, %125 ]
  %99 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %96, align 8
  %100 = icmp eq %"class.std::__1::__tree_node"* %99, null
  br i1 %100, label %125, label %101

101:                                              ; preds = %97, %101
  %102 = phi %"class.std::__1::__tree_end_node"* [ %112, %101 ], [ %95, %97 ]
  %103 = phi %"class.std::__1::__tree_node"* [ %113, %101 ], [ %99, %97 ]
  %104 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 1, i32 0, i32 0
  %105 = load i32, i32* %104, align 4
  %106 = icmp slt i32 %105, %98
  %107 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::__tree_node_base"** %107 to %"class.std::__1::__tree_node"**
  %109 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %103, i64 0, i32 0, i32 0
  %110 = bitcast %"class.std::__1::__tree_node"* %103 to %"class.std::__1::__tree_node"**
  %111 = select i1 %106, %"class.std::__1::__tree_node"** %108, %"class.std::__1::__tree_node"** %110
  %112 = select i1 %106, %"class.std::__1::__tree_end_node"* %102, %"class.std::__1::__tree_end_node"* %109
  %113 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %111, align 8
  %114 = icmp eq %"class.std::__1::__tree_node"* %113, null
  br i1 %114, label %115, label %101

115:                                              ; preds = %101
  %116 = icmp eq %"class.std::__1::__tree_end_node"* %112, %95
  br i1 %116, label %125, label %117

117:                                              ; preds = %115
  %118 = bitcast %"class.std::__1::__tree_end_node"* %112 to %"class.std::__1::__tree_node"*
  %119 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %118, i64 0, i32 1, i32 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, %98
  br i1 %121, label %125, label %122

122:                                              ; preds = %117
  %123 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %112, i64 4
  %124 = bitcast %"class.std::__1::__tree_end_node"* %123 to i32*
  store i32 -1, i32* %124, align 4
  br label %125

125:                                              ; preds = %122, %117, %115, %97
  %126 = add nsw i32 %98, 1
  %127 = icmp slt i32 %98, %94
  br i1 %127, label %97, label %128

128:                                              ; preds = %125, %90
  %129 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %87, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %129, align 8
  %131 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %132 = icmp eq %"class.std::__1::__tree_end_node"* %130, %131
  br i1 %132, label %262, label %133

133:                                              ; preds = %128, %172
  %134 = phi %"class.std::__1::__tree_end_node"* [ %173, %172 ], [ %130, %128 ]
  %135 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 4
  %136 = bitcast %"class.std::__1::__tree_end_node"* %135 to i32*
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %144, label %139

139:                                              ; preds = %133
  %140 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node"*
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %140, i64 0, i32 1, i32 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = icmp eq i32 %137, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %142, i1 zeroext %143) #16
  br label %144

144:                                              ; preds = %139, %133
  %145 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 1, i32 0
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %156

148:                                              ; preds = %144
  %149 = bitcast %"class.std::__1::__tree_end_node"* %134 to %"class.std::__1::__tree_node_base"*
  %150 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %134, i64 2
  %151 = bitcast %"class.std::__1::__tree_end_node"* %150 to %"class.std::__1::__tree_end_node"**
  %152 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %152, i64 0, i32 0
  %154 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %153, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %154, %149
  br i1 %155, label %172, label %163

156:                                              ; preds = %144, %156
  %157 = phi %"class.std::__1::__tree_node_base"* [ %159, %156 ], [ %146, %144 ]
  %158 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0, i32 0
  %159 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %158, align 8
  %160 = icmp eq %"class.std::__1::__tree_node_base"* %159, null
  br i1 %160, label %161, label %156

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %157, i64 0, i32 0
  br label %172

163:                                              ; preds = %148, %163
  %164 = phi %"class.std::__1::__tree_end_node"** [ %167, %163 ], [ %151, %148 ]
  %165 = bitcast %"class.std::__1::__tree_end_node"** %164 to %"class.std::__1::__tree_node_base"**
  %166 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %165, align 8
  %167 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %166, i64 0, i32 2
  %168 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %167, align 8
  %169 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %168, i64 0, i32 0
  %170 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %169, align 8
  %171 = icmp eq %"class.std::__1::__tree_node_base"* %170, %166
  br i1 %171, label %172, label %163

172:                                              ; preds = %163, %161, %148
  %173 = phi %"class.std::__1::__tree_end_node"* [ %162, %161 ], [ %152, %148 ], [ %168, %163 ]
  %174 = icmp eq %"class.std::__1::__tree_end_node"* %173, %131
  br i1 %174, label %262, label %133

175:                                              ; preds = %82
  %176 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %177 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %176, i64 0, i32 0, i32 0, i32 0
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  %179 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %180 = icmp eq %"class.std::__1::__tree_end_node"* %178, %179
  br i1 %180, label %215, label %181

181:                                              ; preds = %175, %212
  %182 = phi %"class.std::__1::__tree_end_node"* [ %213, %212 ], [ %178, %175 ]
  %183 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 4
  %184 = bitcast %"class.std::__1::__tree_end_node"* %183 to i32*
  store i32 -1, i32* %184, align 4
  %185 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 1, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  %187 = icmp eq %"class.std::__1::__tree_node_base"* %186, null
  br i1 %187, label %188, label %196

188:                                              ; preds = %181
  %189 = bitcast %"class.std::__1::__tree_end_node"* %182 to %"class.std::__1::__tree_node_base"*
  %190 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 2
  %191 = bitcast %"class.std::__1::__tree_end_node"* %190 to %"class.std::__1::__tree_end_node"**
  %192 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %192, i64 0, i32 0
  %194 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %193, align 8
  %195 = icmp eq %"class.std::__1::__tree_node_base"* %194, %189
  br i1 %195, label %212, label %203

196:                                              ; preds = %181, %196
  %197 = phi %"class.std::__1::__tree_node_base"* [ %199, %196 ], [ %186, %181 ]
  %198 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0, i32 0
  %199 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %198, align 8
  %200 = icmp eq %"class.std::__1::__tree_node_base"* %199, null
  br i1 %200, label %201, label %196

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %197, i64 0, i32 0
  br label %212

203:                                              ; preds = %188, %203
  %204 = phi %"class.std::__1::__tree_end_node"** [ %207, %203 ], [ %191, %188 ]
  %205 = bitcast %"class.std::__1::__tree_end_node"** %204 to %"class.std::__1::__tree_node_base"**
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %205, align 8
  %207 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %206, i64 0, i32 2
  %208 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %207, align 8
  %209 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %208, i64 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  %211 = icmp eq %"class.std::__1::__tree_node_base"* %210, %206
  br i1 %211, label %212, label %203

212:                                              ; preds = %203, %201, %188
  %213 = phi %"class.std::__1::__tree_end_node"* [ %202, %201 ], [ %192, %188 ], [ %208, %203 ]
  %214 = icmp eq %"class.std::__1::__tree_end_node"* %213, %179
  br i1 %214, label %215, label %181

215:                                              ; preds = %212, %175
  %216 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  %217 = load i32, i32* %216, align 8
  tail call void @_ZN13CPWL_ListCtrl11SelectState3AddEii(%"class.CPWL_ListCtrl::SelectState"* %176, i32 %217, i32 %78)
  %218 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  %219 = icmp eq %"class.std::__1::__tree_end_node"* %218, %179
  br i1 %219, label %262, label %220

220:                                              ; preds = %215, %259
  %221 = phi %"class.std::__1::__tree_end_node"* [ %260, %259 ], [ %218, %215 ]
  %222 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 4
  %223 = bitcast %"class.std::__1::__tree_end_node"* %222 to i32*
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %231, label %226

226:                                              ; preds = %220
  %227 = bitcast %"class.std::__1::__tree_end_node"* %221 to %"class.std::__1::__tree_node"*
  %228 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %227, i64 0, i32 1, i32 0, i32 0
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %224, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %229, i1 zeroext %230) #16
  br label %231

231:                                              ; preds = %226, %220
  %232 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 1, i32 0
  %233 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %232, align 8
  %234 = icmp eq %"class.std::__1::__tree_node_base"* %233, null
  br i1 %234, label %235, label %243

235:                                              ; preds = %231
  %236 = bitcast %"class.std::__1::__tree_end_node"* %221 to %"class.std::__1::__tree_node_base"*
  %237 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %221, i64 2
  %238 = bitcast %"class.std::__1::__tree_end_node"* %237 to %"class.std::__1::__tree_end_node"**
  %239 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %238, align 8
  %240 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %239, i64 0, i32 0
  %241 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %240, align 8
  %242 = icmp eq %"class.std::__1::__tree_node_base"* %241, %236
  br i1 %242, label %259, label %250

243:                                              ; preds = %231, %243
  %244 = phi %"class.std::__1::__tree_node_base"* [ %246, %243 ], [ %233, %231 ]
  %245 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %244, i64 0, i32 0, i32 0
  %246 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %245, align 8
  %247 = icmp eq %"class.std::__1::__tree_node_base"* %246, null
  br i1 %247, label %248, label %243

248:                                              ; preds = %243
  %249 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %244, i64 0, i32 0
  br label %259

250:                                              ; preds = %235, %250
  %251 = phi %"class.std::__1::__tree_end_node"** [ %254, %250 ], [ %238, %235 ]
  %252 = bitcast %"class.std::__1::__tree_end_node"** %251 to %"class.std::__1::__tree_node_base"**
  %253 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %252, align 8
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %253, i64 0, i32 2
  %255 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %254, align 8
  %256 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %255, i64 0, i32 0
  %257 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %256, align 8
  %258 = icmp eq %"class.std::__1::__tree_node_base"* %257, %253
  br i1 %258, label %259, label %250

259:                                              ; preds = %250, %248, %235
  %260 = phi %"class.std::__1::__tree_end_node"* [ %249, %248 ], [ %239, %235 ], [ %255, %250 ]
  %261 = icmp eq %"class.std::__1::__tree_end_node"* %260, %179
  br i1 %261, label %262, label %220

262:                                              ; preds = %259, %172, %215, %128
  %263 = phi %"class.CPWL_ListCtrl::SelectState"* [ %87, %128 ], [ %176, %215 ], [ %87, %172 ], [ %176, %259 ]
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %263) #16
  tail call void @_ZN13CPWL_ListCtrl8SetCaretEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %265

264:                                              ; preds = %77
  tail call void @_ZN13CPWL_ListCtrl15SetSingleSelectEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %265

265:                                              ; preds = %264, %262
  %266 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %267 = load float, float* %266, align 4
  %268 = load float, float* %5, align 4
  %269 = icmp sgt i32 %78, -1
  br i1 %269, label %270, label %309

270:                                              ; preds = %265
  %271 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %272 = bitcast %"class.std::__1::unique_ptr.73"** %16 to i64*
  %273 = load i64, i64* %272, align 8
  %274 = bitcast %"class.std::__1::vector.71"* %271 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = sub i64 %273, %275
  %277 = ashr exact i64 %276, 3
  %278 = icmp ult i64 %277, 2147483648
  %279 = inttoptr i64 %275 to %"class.std::__1::unique_ptr.73"*
  br i1 %278, label %281, label %280, !prof !46

280:                                              ; preds = %270
  tail call void @llvm.trap() #16
  unreachable

281:                                              ; preds = %270
  %282 = trunc i64 %277 to i32
  %283 = icmp slt i32 %78, %282
  br i1 %283, label %284, label %309

284:                                              ; preds = %281
  %285 = sext i32 %78 to i64
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %279, i64 %285, i32 0, i32 0, i32 0
  %287 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %286, align 8
  %288 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %287, i64 0, i32 1
  %289 = bitcast %class.CFX_FloatRect* %288 to <2 x float>*
  %290 = load <2 x float>, <2 x float>* %289, align 4
  %291 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %287, i64 0, i32 1, i32 2
  %292 = bitcast float* %291 to <2 x float>*
  %293 = load <2 x float>, <2 x float>* %292, align 4
  %294 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %295 = load float, float* %294, align 4
  %296 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %297 = load float, float* %296, align 4
  %298 = fsub float %295, %297
  %299 = extractelement <2 x float> %293, i32 1
  %300 = fadd float %297, 0.000000e+00
  %301 = fsub float %268, %299
  %302 = extractelement <2 x float> %290, i32 1
  %303 = fadd float %297, %298
  %304 = fsub float %268, %302
  %305 = insertelement <2 x float> undef, float %300, i32 0
  %306 = insertelement <2 x float> %305, float %304, i32 1
  %307 = insertelement <2 x float> undef, float %303, i32 0
  %308 = insertelement <2 x float> %307, float %301, i32 1
  br label %309

309:                                              ; preds = %265, %281, %284
  %310 = phi <2 x float> [ %308, %284 ], [ zeroinitializer, %281 ], [ zeroinitializer, %265 ]
  %311 = phi <2 x float> [ %306, %284 ], [ zeroinitializer, %281 ], [ zeroinitializer, %265 ]
  %312 = extractelement <2 x float> %311, i32 1
  %313 = load float, float* %9, align 4, !noalias !100
  %314 = fsub float %313, %268
  %315 = fsub float %312, %314
  %316 = extractelement <2 x float> %310, i32 1
  %317 = fsub float %316, %314
  %318 = fcmp oge float %315, %267
  %319 = fcmp ole float %317, %268
  %320 = and i1 %319, %318
  br i1 %320, label %322, label %321

321:                                              ; preds = %309
  tail call void @_ZN13CPWL_ListCtrl16ScrollToListItemEi(%class.CPWL_ListCtrl* %0, i32 %78)
  br label %322

322:                                              ; preds = %321, %309
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl*, i32, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %6 = load i8, i8* %5, align 1, !range !8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %240, label %8

8:                                                ; preds = %4
  %9 = icmp sgt i32 %1, -1
  br i1 %9, label %15, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %14 = load float, float* %13, align 4
  br label %291

15:                                               ; preds = %8
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %17 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.73"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.71"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp ult i64 %23, 2147483648
  br i1 %24, label %26, label %25, !prof !46

25:                                               ; preds = %15
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %15
  %27 = trunc i64 %23 to i32
  %28 = icmp sgt i32 %27, %1
  br i1 %28, label %34, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %33 = load float, float* %32, align 4
  br label %258

34:                                               ; preds = %26
  br i1 %3, label %239, label %35

35:                                               ; preds = %34
  %36 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %37 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %36, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %40 = icmp eq %"class.std::__1::__tree_end_node"* %38, %39
  br i1 %40, label %75, label %41

41:                                               ; preds = %35, %72
  %42 = phi %"class.std::__1::__tree_end_node"* [ %73, %72 ], [ %38, %35 ]
  %43 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 4
  %44 = bitcast %"class.std::__1::__tree_end_node"* %43 to i32*
  store i32 -1, i32* %44, align 4
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 1, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %56

48:                                               ; preds = %41
  %49 = bitcast %"class.std::__1::__tree_end_node"* %42 to %"class.std::__1::__tree_node_base"*
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %42, i64 2
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"class.std::__1::__tree_end_node"**
  %52 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %52, i64 0, i32 0
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  %55 = icmp eq %"class.std::__1::__tree_node_base"* %54, %49
  br i1 %55, label %72, label %63

56:                                               ; preds = %41, %56
  %57 = phi %"class.std::__1::__tree_node_base"* [ %59, %56 ], [ %46, %41 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %61, label %56

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %57, i64 0, i32 0
  br label %72

63:                                               ; preds = %48, %63
  %64 = phi %"class.std::__1::__tree_end_node"** [ %67, %63 ], [ %51, %48 ]
  %65 = bitcast %"class.std::__1::__tree_end_node"** %64 to %"class.std::__1::__tree_node_base"**
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %65, align 8
  %67 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %66, i64 0, i32 2
  %68 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %67, align 8
  %69 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %68, i64 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  %71 = icmp eq %"class.std::__1::__tree_node_base"* %70, %66
  br i1 %71, label %72, label %63

72:                                               ; preds = %63, %61, %48
  %73 = phi %"class.std::__1::__tree_end_node"* [ %62, %61 ], [ %52, %48 ], [ %68, %63 ]
  %74 = icmp eq %"class.std::__1::__tree_end_node"* %73, %39
  br i1 %74, label %75, label %41

75:                                               ; preds = %72, %35
  br i1 %2, label %76, label %124

76:                                               ; preds = %75
  %77 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  %78 = load i32, i32* %77, align 8
  tail call void @_ZN13CPWL_ListCtrl11SelectState3AddEii(%"class.CPWL_ListCtrl::SelectState"* %36, i32 %78, i32 %1)
  %79 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %80 = icmp eq %"class.std::__1::__tree_end_node"* %79, %39
  br i1 %80, label %123, label %81

81:                                               ; preds = %76, %120
  %82 = phi %"class.std::__1::__tree_end_node"* [ %121, %120 ], [ %79, %76 ]
  %83 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 4
  %84 = bitcast %"class.std::__1::__tree_end_node"* %83 to i32*
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %92, label %87

87:                                               ; preds = %81
  %88 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node"*
  %89 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %88, i64 0, i32 1, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %85, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %90, i1 zeroext %91) #16
  br label %92

92:                                               ; preds = %87, %81
  %93 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 1, i32 0
  %94 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %93, align 8
  %95 = icmp eq %"class.std::__1::__tree_node_base"* %94, null
  br i1 %95, label %96, label %104

96:                                               ; preds = %92
  %97 = bitcast %"class.std::__1::__tree_end_node"* %82 to %"class.std::__1::__tree_node_base"*
  %98 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %82, i64 2
  %99 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_end_node"**
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %100, i64 0, i32 0
  %102 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %101, align 8
  %103 = icmp eq %"class.std::__1::__tree_node_base"* %102, %97
  br i1 %103, label %120, label %111

104:                                              ; preds = %92, %104
  %105 = phi %"class.std::__1::__tree_node_base"* [ %107, %104 ], [ %94, %92 ]
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0, i32 0
  %107 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %106, align 8
  %108 = icmp eq %"class.std::__1::__tree_node_base"* %107, null
  br i1 %108, label %109, label %104

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %105, i64 0, i32 0
  br label %120

111:                                              ; preds = %96, %111
  %112 = phi %"class.std::__1::__tree_end_node"** [ %115, %111 ], [ %99, %96 ]
  %113 = bitcast %"class.std::__1::__tree_end_node"** %112 to %"class.std::__1::__tree_node_base"**
  %114 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %113, align 8
  %115 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %114, i64 0, i32 2
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %114
  br i1 %119, label %120, label %111

120:                                              ; preds = %111, %109, %96
  %121 = phi %"class.std::__1::__tree_end_node"* [ %110, %109 ], [ %100, %96 ], [ %116, %111 ]
  %122 = icmp eq %"class.std::__1::__tree_end_node"* %121, %39
  br i1 %122, label %123, label %81

123:                                              ; preds = %120, %76
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %36) #16
  br label %239

124:                                              ; preds = %75
  %125 = bitcast %"class.std::__1::__tree_end_node"* %39 to %"class.std::__1::__tree_node"**
  %126 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %125, align 8
  %127 = icmp eq %"class.std::__1::__tree_node"* %126, null
  br i1 %127, label %156, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %130

130:                                              ; preds = %152, %128
  %131 = phi %"class.std::__1::__tree_node"* [ %155, %152 ], [ %126, %128 ]
  %132 = phi %"class.std::__1::__tree_node_base"** [ %154, %152 ], [ %129, %128 ]
  %133 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 1, i32 0, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = icmp sgt i32 %134, %1
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0, i32 0
  %138 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %137, align 8
  %139 = icmp eq %"class.std::__1::__tree_node_base"* %138, null
  br i1 %139, label %140, label %152

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0
  br label %158

142:                                              ; preds = %130
  %143 = icmp slt i32 %134, %1
  br i1 %143, label %144, label %150

144:                                              ; preds = %142
  %145 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 1
  %146 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %145, align 8
  %147 = icmp eq %"class.std::__1::__tree_node_base"* %146, null
  br i1 %147, label %148, label %152

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0
  br label %158

150:                                              ; preds = %142
  %151 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %131, i64 0, i32 0, i32 0
  br label %158

152:                                              ; preds = %144, %136
  %153 = phi %"class.std::__1::__tree_node_base"* [ %138, %136 ], [ %146, %144 ]
  %154 = phi %"class.std::__1::__tree_node_base"** [ %137, %136 ], [ %145, %144 ]
  %155 = bitcast %"class.std::__1::__tree_node_base"* %153 to %"class.std::__1::__tree_node"*
  br label %130

156:                                              ; preds = %124
  %157 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  br label %158

158:                                              ; preds = %156, %150, %148, %140
  %159 = phi %"class.std::__1::__tree_end_node"* [ %39, %156 ], [ %141, %140 ], [ %149, %148 ], [ %151, %150 ]
  %160 = phi %"class.std::__1::__tree_node_base"** [ %157, %156 ], [ %137, %140 ], [ %145, %148 ], [ %132, %150 ]
  %161 = bitcast %"class.std::__1::__tree_node_base"** %160 to %"class.std::__1::__tree_node"**
  %162 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %161, align 8
  %163 = icmp eq %"class.std::__1::__tree_node"* %162, null
  br i1 %163, label %164, label %190

164:                                              ; preds = %158
  %165 = tail call i8* @_Znwm(i64 40) #17, !noalias !103
  %166 = getelementptr inbounds i8, i8* %165, i64 28
  %167 = bitcast i8* %166 to i32*
  store i32 %1, i32* %167, align 4, !noalias !103
  %168 = getelementptr inbounds i8, i8* %165, i64 32
  %169 = bitcast i8* %168 to i32*
  store i32 0, i32* %169, align 4, !noalias !103
  %170 = bitcast i8* %165 to %"class.std::__1::__tree_node"*
  %171 = bitcast i8* %165 to %"class.std::__1::__tree_node_base"*
  %172 = getelementptr inbounds i8, i8* %165, i64 16
  %173 = bitcast i8* %172 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %159, %"class.std::__1::__tree_end_node"** %173, align 8
  %174 = bitcast %"class.std::__1::__tree_node_base"** %160 to i8**
  store i8* %165, i8** %174, align 8
  %175 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %175, i64 0, i32 0
  %177 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %176, align 8
  %178 = icmp eq %"class.std::__1::__tree_node_base"* %177, null
  br i1 %178, label %183, label %179

179:                                              ; preds = %164
  %180 = ptrtoint %"class.std::__1::__tree_node_base"* %177 to i64
  %181 = bitcast %"class.CPWL_ListCtrl::SelectState"* %36 to i64*
  store i64 %180, i64* %181, align 8
  %182 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  br label %183

183:                                              ; preds = %179, %164
  %184 = phi %"class.std::__1::__tree_node_base"* [ %171, %164 ], [ %182, %179 ]
  %185 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %186 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %185, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %186, %"class.std::__1::__tree_node_base"* %184) #16
  %187 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %188 = load i64, i64* %187, align 8
  %189 = add i64 %188, 1
  store i64 %189, i64* %187, align 8
  br label %190

190:                                              ; preds = %158, %183
  %191 = phi %"class.std::__1::__tree_node"* [ %170, %183 ], [ %162, %158 ]
  %192 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %191, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %192, align 4
  %193 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %194 = icmp eq %"class.std::__1::__tree_end_node"* %193, %39
  br i1 %194, label %237, label %195

195:                                              ; preds = %190, %234
  %196 = phi %"class.std::__1::__tree_end_node"* [ %235, %234 ], [ %193, %190 ]
  %197 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 4
  %198 = bitcast %"class.std::__1::__tree_end_node"* %197 to i32*
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %206, label %201

201:                                              ; preds = %195
  %202 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.std::__1::__tree_node"*
  %203 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %202, i64 0, i32 1, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = icmp eq i32 %199, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %204, i1 zeroext %205) #16
  br label %206

206:                                              ; preds = %201, %195
  %207 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 1, i32 0
  %208 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %207, align 8
  %209 = icmp eq %"class.std::__1::__tree_node_base"* %208, null
  br i1 %209, label %210, label %218

210:                                              ; preds = %206
  %211 = bitcast %"class.std::__1::__tree_end_node"* %196 to %"class.std::__1::__tree_node_base"*
  %212 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %196, i64 2
  %213 = bitcast %"class.std::__1::__tree_end_node"* %212 to %"class.std::__1::__tree_end_node"**
  %214 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %213, align 8
  %215 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %214, i64 0, i32 0
  %216 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %215, align 8
  %217 = icmp eq %"class.std::__1::__tree_node_base"* %216, %211
  br i1 %217, label %234, label %225

218:                                              ; preds = %206, %218
  %219 = phi %"class.std::__1::__tree_node_base"* [ %221, %218 ], [ %208, %206 ]
  %220 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %219, i64 0, i32 0, i32 0
  %221 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %220, align 8
  %222 = icmp eq %"class.std::__1::__tree_node_base"* %221, null
  br i1 %222, label %223, label %218

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %219, i64 0, i32 0
  br label %234

225:                                              ; preds = %210, %225
  %226 = phi %"class.std::__1::__tree_end_node"** [ %229, %225 ], [ %213, %210 ]
  %227 = bitcast %"class.std::__1::__tree_end_node"** %226 to %"class.std::__1::__tree_node_base"**
  %228 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %227, align 8
  %229 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %228, i64 0, i32 2
  %230 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %229, align 8
  %231 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %230, i64 0, i32 0
  %232 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %231, align 8
  %233 = icmp eq %"class.std::__1::__tree_node_base"* %232, %228
  br i1 %233, label %234, label %225

234:                                              ; preds = %225, %223, %210
  %235 = phi %"class.std::__1::__tree_end_node"* [ %224, %223 ], [ %214, %210 ], [ %230, %225 ]
  %236 = icmp eq %"class.std::__1::__tree_end_node"* %235, %39
  br i1 %236, label %237, label %195

237:                                              ; preds = %234, %190
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %36) #16
  %238 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 6
  store i32 %1, i32* %238, align 8
  br label %239

239:                                              ; preds = %123, %237, %34
  tail call void @_ZN13CPWL_ListCtrl8SetCaretEi(%class.CPWL_ListCtrl* %0, i32 %1)
  br label %241

240:                                              ; preds = %4
  tail call void @_ZN13CPWL_ListCtrl15SetSingleSelectEi(%class.CPWL_ListCtrl* %0, i32 %1)
  br label %241

241:                                              ; preds = %239, %240
  %242 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %243 = load float, float* %242, align 4
  %244 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %245 = load float, float* %244, align 4
  %246 = icmp sgt i32 %1, -1
  br i1 %246, label %247, label %291

247:                                              ; preds = %241
  %248 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %249 = bitcast %"class.std::__1::unique_ptr.73"** %248 to i64*
  %250 = load i64, i64* %249, align 8
  %251 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %252 = bitcast %"class.std::__1::vector.71"* %251 to i64*
  %253 = load i64, i64* %252, align 8
  %254 = sub i64 %250, %253
  %255 = ashr exact i64 %254, 3
  %256 = icmp ult i64 %255, 2147483648
  br i1 %256, label %258, label %257, !prof !46

257:                                              ; preds = %247
  tail call void @llvm.trap() #16
  unreachable

258:                                              ; preds = %29, %247
  %259 = phi i64 [ %21, %29 ], [ %253, %247 ]
  %260 = phi float [ %31, %29 ], [ %243, %247 ]
  %261 = phi float [ %33, %29 ], [ %245, %247 ]
  %262 = phi i64 [ %23, %29 ], [ %255, %247 ]
  %263 = trunc i64 %262 to i32
  %264 = icmp sgt i32 %263, %1
  br i1 %264, label %265, label %291

265:                                              ; preds = %258
  %266 = inttoptr i64 %259 to %"class.std::__1::unique_ptr.73"*
  %267 = sext i32 %1 to i64
  %268 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %266, i64 %267, i32 0, i32 0, i32 0
  %269 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %268, align 8
  %270 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %269, i64 0, i32 1
  %271 = bitcast %class.CFX_FloatRect* %270 to <2 x float>*
  %272 = load <2 x float>, <2 x float>* %271, align 4
  %273 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %269, i64 0, i32 1, i32 2
  %274 = bitcast float* %273 to <2 x float>*
  %275 = load <2 x float>, <2 x float>* %274, align 4
  %276 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %277 = load float, float* %276, align 4
  %278 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %279 = load float, float* %278, align 4
  %280 = fsub float %277, %279
  %281 = extractelement <2 x float> %275, i32 1
  %282 = fadd float %279, 0.000000e+00
  %283 = fsub float %261, %281
  %284 = extractelement <2 x float> %272, i32 1
  %285 = fadd float %279, %280
  %286 = fsub float %261, %284
  %287 = insertelement <2 x float> undef, float %282, i32 0
  %288 = insertelement <2 x float> %287, float %286, i32 1
  %289 = insertelement <2 x float> undef, float %285, i32 0
  %290 = insertelement <2 x float> %289, float %283, i32 1
  br label %291

291:                                              ; preds = %10, %241, %258, %265
  %292 = phi float [ %261, %265 ], [ %261, %258 ], [ %245, %241 ], [ %14, %10 ]
  %293 = phi float [ %260, %265 ], [ %260, %258 ], [ %243, %241 ], [ %12, %10 ]
  %294 = phi <2 x float> [ %290, %265 ], [ zeroinitializer, %258 ], [ zeroinitializer, %241 ], [ zeroinitializer, %10 ]
  %295 = phi <2 x float> [ %288, %265 ], [ zeroinitializer, %258 ], [ zeroinitializer, %241 ], [ zeroinitializer, %10 ]
  %296 = extractelement <2 x float> %295, i32 1
  %297 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %298 = load float, float* %297, align 4, !noalias !106
  %299 = fsub float %298, %292
  %300 = fsub float %296, %299
  %301 = extractelement <2 x float> %294, i32 1
  %302 = fsub float %301, %299
  %303 = fcmp oge float %300, %293
  %304 = fcmp ole float %302, %292
  %305 = and i1 %304, %303
  br i1 %305, label %307, label %306

306:                                              ; preds = %291
  tail call void @_ZN13CPWL_ListCtrl16ScrollToListItemEi(%class.CPWL_ListCtrl* %0, i32 %1)
  br label %307

307:                                              ; preds = %306, %291
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl8GetCountEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.73"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.71"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp ult i64 %9, 2147483648
  br i1 %10, label %12, label %11, !prof !46

11:                                               ; preds = %1
  tail call void @llvm.trap() #16
  unreachable

12:                                               ; preds = %1
  %13 = trunc i64 %9 to i32
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl7OnVK_UPEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 1, !range !8
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 7
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 4
  %9 = select i1 %6, i32* %8, i32* %7
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, -1
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 %11, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl9OnVK_DOWNEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %5 = load i8, i8* %4, align 1, !range !8
  %6 = icmp eq i8 %5, 0
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 7
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 4
  %9 = select i1 %6, i32* %8, i32* %7
  %10 = load i32, i32* %9, align 4
  %11 = add nsw i32 %10, 1
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 %11, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl9OnVK_LEFTEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 0, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl10OnVK_RIGHTEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.73"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.71"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, 2147483648
  br i1 %12, label %14, label %13, !prof !46

13:                                               ; preds = %3
  tail call void @llvm.trap() #16
  unreachable

14:                                               ; preds = %3
  %15 = trunc i64 %11 to i32
  %16 = add nsw i32 %15, -1
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 %16, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl9OnVK_HOMEEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 0, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl8OnVK_ENDEbb(%class.CPWL_ListCtrl*, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.73"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.71"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = icmp ult i64 %11, 2147483648
  br i1 %12, label %14, label %13, !prof !46

13:                                               ; preds = %3
  tail call void @llvm.trap() #16
  unreachable

14:                                               ; preds = %3
  %15 = trunc i64 %11 to i32
  %16 = add nsw i32 %15, -1
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 %16, i1 zeroext %1, i1 zeroext %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN13CPWL_ListCtrl6OnCharEtbb(%class.CPWL_ListCtrl*, i16 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %6 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %5, align 8
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %8 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %7, align 8
  br label %9

9:                                                ; preds = %12, %4
  %10 = phi %"class.std::__1::unique_ptr.73"* [ %6, %4 ], [ %13, %12 ]
  %11 = icmp eq %"class.std::__1::unique_ptr.73"* %10, %8
  br i1 %11, label %25, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 -1
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %14, align 8
  %16 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %15, i64 0, i32 0
  %17 = load i8, i8* %16, align 8, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %9, label %19

19:                                               ; preds = %12
  %20 = ptrtoint %"class.std::__1::unique_ptr.73"* %13 to i64
  %21 = ptrtoint %"class.std::__1::unique_ptr.73"* %8 to i64
  %22 = sub i64 %20, %21
  %23 = lshr exact i64 %22, 3
  %24 = trunc i64 %23 to i32
  br label %25

25:                                               ; preds = %9, %19
  %26 = phi i32 [ %24, %19 ], [ -1, %9 ]
  %27 = zext i16 %1 to i32
  %28 = tail call i32 @_ZNK13CPWL_ListCtrl8FindNextEiw(%class.CPWL_ListCtrl* %0, i32 %26, i32 signext %27)
  %29 = icmp eq i32 %28, %26
  br i1 %29, label %31, label %30

30:                                               ; preds = %25
  tail call void @_ZN13CPWL_ListCtrl4OnVKEibb(%class.CPWL_ListCtrl* %0, i32 %28, i1 zeroext %2, i1 zeroext %3)
  br label %31

31:                                               ; preds = %25, %30
  %32 = phi i1 [ true, %30 ], [ false, %25 ]
  ret i1 %32
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl15GetLastSelectedEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %3 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %4, align 8
  br label %6

6:                                                ; preds = %9, %1
  %7 = phi %"class.std::__1::unique_ptr.73"* [ %3, %1 ], [ %10, %9 ]
  %8 = icmp eq %"class.std::__1::unique_ptr.73"* %7, %5
  br i1 %8, label %22, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %7, i64 -1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %11, align 8
  %13 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %6, label %16

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::unique_ptr.73"* %10 to i64
  %18 = ptrtoint %"class.std::__1::unique_ptr.73"* %5 to i64
  %19 = sub i64 %17, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  br label %22

22:                                               ; preds = %6, %16
  %23 = phi i32 [ %21, %16 ], [ -1, %6 ]
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl8FindNextEiw(%class.CPWL_ListCtrl* nocapture readonly, i32, i32 signext) local_unnamed_addr #3 align 2 {
  %4 = alloca %class.CPVT_Word, align 16
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  br i1 %13, label %16, label %15, !prof !46

15:                                               ; preds = %3
  tail call void @llvm.trap() #16
  unreachable

16:                                               ; preds = %3
  %17 = trunc i64 %12 to i32
  %18 = bitcast %class.CPVT_Word* %4 to i8*
  %19 = icmp sgt i32 %17, 0
  br i1 %19, label %20, label %55

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %5, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 0
  %23 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 2, i32 2
  %24 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 3, i32 0
  %25 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 7
  %26 = bitcast float* %24 to i8*
  %27 = getelementptr inbounds %class.CPVT_Word, %class.CPVT_Word* %4, i64 0, i32 8
  %28 = bitcast %class.CPVT_Word* %4 to <4 x i32>*
  br label %29

29:                                               ; preds = %53, %20
  %30 = phi %"class.std::__1::unique_ptr.73"* [ %14, %20 ], [ %54, %53 ]
  %31 = phi i32 [ 0, %20 ], [ %51, %53 ]
  %32 = phi i32 [ %1, %20 ], [ %35, %53 ]
  %33 = add nsw i32 %32, 1
  %34 = icmp slt i32 %33, %17
  %35 = select i1 %34, i32 %33, i32 0
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %30, i64 %36, i32 0, i32 0, i32 0
  %38 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %37, align 8
  %39 = icmp eq %"class.CPWL_ListCtrl::Item"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %29
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %18) #16
  store <4 x i32> <i32 -1431699456, i32 0, i32 -1, i32 -1>, <4 x i32>* %28, align 16
  store i32 -1, i32* %23, align 8
  call void @llvm.memset.p0i8.i64(i8* align 4 %26, i8 0, i64 20, i1 false) #16
  store i32 -1, i32* %25, align 8
  store float 0.000000e+00, float* %27, align 4
  %41 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %38, i64 0, i32 2, i32 0, i32 0, i32 0
  %42 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %41, align 8
  %43 = call %"class.CPWL_EditImpl::Iterator"* @_ZN13CPWL_EditImpl11GetIteratorEv(%class.CPWL_EditImpl* %42) #16
  call void @_ZN13CPWL_EditImpl8Iterator5SetAtEi(%"class.CPWL_EditImpl::Iterator"* %43, i32 1) #16
  %44 = call zeroext i1 @_ZNK13CPWL_EditImpl8Iterator7GetWordER9CPVT_Word(%"class.CPWL_EditImpl::Iterator"* %43, %class.CPVT_Word* nonnull dereferenceable(48) %4) #16
  %45 = load i16, i16* %22, align 16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %18) #16
  %46 = zext i16 %45 to i32
  %47 = call i32 @u_toupper_69(i32 %46) #16
  %48 = call i32 @u_toupper_69(i32 %2) #16
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %55, label %50

50:                                               ; preds = %40, %29
  %51 = add nuw nsw i32 %31, 1
  %52 = icmp eq i32 %51, %17
  br i1 %52, label %55, label %53

53:                                               ; preds = %50
  %54 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %21, align 8
  br label %29

55:                                               ; preds = %40, %50, %16
  %56 = phi i32 [ %1, %16 ], [ %35, %50 ], [ %35, %40 ]
  ret i32 %56
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl12SetPlateRectERK13CFX_FloatRect(%class.CPWL_ListCtrl* nocapture, %class.CFX_FloatRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  %5 = bitcast %class.CFX_FloatRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 4 %5, i64 16, i1 false)
  %6 = bitcast %class.CFX_FloatRect* %1 to i32*
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2
  %9 = bitcast %class.CFX_PTemplate* %8 to i32*
  store i32 %7, i32* %9, align 8
  %10 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %1, i64 0, i32 3
  %11 = load float, float* %10, align 4
  tail call void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* %0, float %11) #16
  tail call void @_ZN13CPWL_ListCtrl9ReArrangeEi(%class.CPWL_ListCtrl* %0, i32 0)
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %13 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %12, align 8
  %14 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %17 = load i8, i8* %16, align 2, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  store i8 1, i8* %16, align 2
  %20 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #16
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %20, i8* align 8 %4, i64 16, i1 false) #16
  %21 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %13 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %22 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %22, i64 4
  %24 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %23, align 8
  call void %24(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %13, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #16
  store i8 0, i8* %16, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #16
  br label %25

25:                                               ; preds = %15, %2, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl12SetScrollPosERK13CFX_PTemplateIfE(%class.CPWL_ListCtrl* nocapture, %class.CFX_PTemplate* nocapture readonly dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CFX_PTemplate, %class.CFX_PTemplate* %1, i64 0, i32 1
  %4 = load float, float* %3, align 4
  tail call void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* %0, float %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl9ReArrangeEi(%class.CPWL_ListCtrl* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = add nsw i32 %1, -1
  %4 = icmp sgt i32 %1, 0
  br i1 %4, label %10, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %6, align 8
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %8, align 8
  br label %34

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.73"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.71"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.73"*
  %21 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.73"*
  br i1 %19, label %23, label %22, !prof !46

22:                                               ; preds = %10
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %10
  %24 = trunc i64 %18 to i32
  %25 = icmp slt i32 %24, %1
  br i1 %25, label %34, label %26

26:                                               ; preds = %23
  %27 = sext i32 %3 to i64
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %20, i64 %27, i32 0, i32 0, i32 0
  %29 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %28, align 8
  %30 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %29, i64 0, i32 1
  %31 = bitcast %class.CFX_FloatRect* %30 to <2 x float>*
  %32 = load <2 x float>, <2 x float>* %31, align 4
  %33 = extractelement <2 x float> %32, i32 1
  br label %34

34:                                               ; preds = %5, %23, %26
  %35 = phi %"class.std::__1::unique_ptr.73"* [ %21, %26 ], [ %21, %23 ], [ %9, %5 ]
  %36 = phi %"class.std::__1::unique_ptr.73"* [ %20, %26 ], [ %20, %23 ], [ %7, %5 ]
  %37 = phi float [ %33, %26 ], [ 0.000000e+00, %23 ], [ 0.000000e+00, %5 ]
  %38 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %39 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %40 = icmp eq %"class.std::__1::unique_ptr.73"* %36, %35
  br i1 %40, label %41, label %82

41:                                               ; preds = %82, %34
  %42 = phi float [ %37, %34 ], [ %96, %82 ]
  %43 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %43, align 8
  %44 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 1
  store float %42, float* %44, align 4
  %45 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %45, align 8
  %46 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 3
  store float 0.000000e+00, float* %46, align 4
  %47 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %48 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %47, align 8
  %49 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %41
  %51 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %54 = load float, float* %53, align 4
  %55 = fsub float %54, %42
  %56 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %57 = load i8, i8* %56, align 2, !range !8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %81

59:                                               ; preds = %50
  store i8 1, i8* %56, align 2
  %60 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %38, align 8
  %61 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %39, align 8
  %62 = icmp eq %"class.std::__1::unique_ptr.73"* %60, %61
  br i1 %62, label %74, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %60, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %64, align 8
  %66 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %66, align 8
  %68 = tail call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* %67) #16
  %69 = extractvalue { <2 x float>, <2 x float> } %68, 0
  %70 = extractvalue { <2 x float>, <2 x float> } %68, 1
  %71 = extractelement <2 x float> %70, i32 1
  %72 = extractelement <2 x float> %69, i32 1
  %73 = fsub float %71, %72
  br label %74

74:                                               ; preds = %63, %59
  %75 = phi float [ %73, %63 ], [ 1.000000e+00, %59 ]
  %76 = fsub float %54, %52
  %77 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %48 to void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)***
  %78 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)** %78, i64 2
  %80 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)** %79, align 8
  tail call void %80(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %48, float %52, float %54, float %55, float %54, float %75, float %76) #16
  store i8 0, i8* %56, align 2
  br label %81

81:                                               ; preds = %41, %50, %74
  ret void

82:                                               ; preds = %34, %82
  %83 = phi float [ %96, %82 ], [ %37, %34 ]
  %84 = phi %"class.std::__1::unique_ptr.73"* [ %101, %82 ], [ %36, %34 ]
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %85, align 8
  %87 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %86, i64 0, i32 2, i32 0, i32 0, i32 0
  %88 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %87, align 8
  %89 = tail call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* %88) #16
  %90 = extractvalue { <2 x float>, <2 x float> } %89, 0
  %91 = extractvalue { <2 x float>, <2 x float> } %89, 1
  %92 = extractelement <2 x float> %91, i32 1
  %93 = extractelement <2 x float> %90, i32 1
  %94 = fsub float %92, %93
  %95 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %85, align 8
  %96 = fadd float %83, %94
  %97 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %95, i64 0, i32 1, i32 0
  store float 0.000000e+00, float* %97, align 4
  %98 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %95, i64 0, i32 1, i32 1
  store float %96, float* %98, align 4
  %99 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %95, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %99, align 4
  %100 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %95, i64 0, i32 1, i32 3
  store float %83, float* %100, align 4
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %84, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr.73"* %101, %35
  br i1 %102, label %41, label %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl14InvalidateItemEi(%class.CPWL_ListCtrl* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = alloca <4 x float>, align 16
  %5 = bitcast <4 x float>* %4 to %class.CFX_FloatRect*
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %7 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %6, align 8
  %8 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %7, null
  br i1 %8, label %90, label %9

9:                                                ; preds = %2
  %10 = icmp eq i32 %1, -1
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %12 = load i8, i8* %11, align 2, !range !8
  %13 = icmp ne i8 %12, 0
  br i1 %10, label %14, label %22

14:                                               ; preds = %9
  br i1 %13, label %90, label %15

15:                                               ; preds = %14
  store i8 1, i8* %11, align 2
  %16 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 8 %17, i64 16, i1 false)
  %18 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %7 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %19 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %19, i64 4
  %21 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %20, align 8
  call void %21(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #16
  store i8 0, i8* %11, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br label %90

22:                                               ; preds = %9
  br i1 %13, label %90, label %23

23:                                               ; preds = %22
  store i8 1, i8* %11, align 2
  %24 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #16
  %25 = icmp sgt i32 %1, -1
  %26 = bitcast <4 x float>* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %26, i8 -1, i64 16, i1 false)
  br i1 %25, label %27, label %69

27:                                               ; preds = %23
  %28 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %30 = bitcast %"class.std::__1::unique_ptr.73"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.71"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 3
  %36 = icmp ult i64 %35, 2147483648
  %37 = inttoptr i64 %33 to %"class.std::__1::unique_ptr.73"*
  br i1 %36, label %39, label %38, !prof !46

38:                                               ; preds = %27
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %27
  %40 = trunc i64 %35 to i32
  %41 = icmp sgt i32 %40, %1
  br i1 %41, label %42, label %69

42:                                               ; preds = %39
  %43 = sext i32 %1 to i64
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %37, i64 %43, i32 0, i32 0, i32 0
  %45 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %44, align 8
  %46 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %45, i64 0, i32 1
  %47 = bitcast %class.CFX_FloatRect* %46 to <2 x float>*
  %48 = load <2 x float>, <2 x float>* %47, align 4
  %49 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %45, i64 0, i32 1, i32 2
  %50 = bitcast float* %49 to <2 x float>*
  %51 = load <2 x float>, <2 x float>* %50, align 4
  %52 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %53 = load float, float* %52, align 4
  %54 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %55 = load float, float* %54, align 4
  %56 = fsub float %53, %55
  %57 = extractelement <2 x float> %51, i32 1
  %58 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %59 = fadd float %55, 0.000000e+00
  %60 = load float, float* %58, align 4, !noalias !109
  %61 = fsub float %60, %57
  %62 = extractelement <2 x float> %48, i32 1
  %63 = fadd float %55, %56
  %64 = fsub float %60, %62
  %65 = insertelement <2 x float> undef, float %59, i32 0
  %66 = insertelement <2 x float> %65, float %64, i32 1
  %67 = insertelement <2 x float> undef, float %63, i32 0
  %68 = insertelement <2 x float> %67, float %61, i32 1
  br label %69

69:                                               ; preds = %23, %39, %42
  %70 = phi <2 x float> [ %68, %42 ], [ zeroinitializer, %39 ], [ zeroinitializer, %23 ]
  %71 = phi <2 x float> [ %66, %42 ], [ zeroinitializer, %39 ], [ zeroinitializer, %23 ]
  %72 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %73 = load float, float* %72, align 8, !noalias !114
  %74 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %75 = load float, float* %74, align 4, !noalias !114
  %76 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %77 = bitcast float* %76 to <2 x float>*
  %78 = load <2 x float>, <2 x float>* %77, align 8, !noalias !114
  %79 = insertelement <2 x float> undef, float %73, i32 0
  %80 = insertelement <2 x float> %79, float %75, i32 1
  %81 = fsub <2 x float> %78, %80
  %82 = shufflevector <2 x float> %81, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %83 = shufflevector <2 x float> %71, <2 x float> %70, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %84 = fsub <4 x float> %83, %82
  %85 = fadd <4 x float> %84, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %85, <4 x float>* %4, align 16
  %86 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %7 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %87 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %86, align 8
  %88 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %87, i64 4
  %89 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %88, align 8
  call void %89(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %7, %class.CFX_FloatRect* nonnull dereferenceable(16) %5) #16
  store i8 0, i8* %11, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #16
  br label %90

90:                                               ; preds = %2, %15, %14, %69, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl11GetItemRectEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %46

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  br i1 %13, label %16, label %15, !prof !46

15:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

16:                                               ; preds = %4
  %17 = trunc i64 %12 to i32
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %14, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 1
  %24 = bitcast %class.CFX_FloatRect* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 1, i32 2
  %27 = bitcast float* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fsub float %30, %32
  %34 = extractelement <2 x float> %28, i32 1
  %35 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %36 = fadd float %32, 0.000000e+00
  %37 = load float, float* %35, align 4, !noalias !117
  %38 = fsub float %37, %34
  %39 = extractelement <2 x float> %25, i32 1
  %40 = fadd float %32, %33
  %41 = fsub float %37, %39
  %42 = insertelement <2 x float> undef, float %36, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  %44 = insertelement <2 x float> undef, float %40, i32 0
  %45 = insertelement <2 x float> %44, float %38, i32 1
  br label %46

46:                                               ; preds = %2, %16, %19
  %47 = phi <2 x float> [ %45, %19 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ]
  %48 = phi <2 x float> [ %43, %19 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ]
  %49 = extractelement <2 x float> %48, i32 0
  %50 = extractelement <2 x float> %48, i32 1
  %51 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %52 = load float, float* %51, align 8, !noalias !122
  %53 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %54 = load float, float* %53, align 4, !noalias !122
  %55 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %56 = load float, float* %55, align 8, !noalias !122
  %57 = fsub float %56, %52
  %58 = fsub float %49, %57
  %59 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %60 = load float, float* %59, align 4, !noalias !122
  %61 = fsub float %60, %54
  %62 = fsub float %50, %61
  %63 = extractelement <2 x float> %47, i32 0
  %64 = extractelement <2 x float> %47, i32 1
  %65 = fsub float %63, %57
  %66 = fsub float %64, %61
  %67 = insertelement <2 x float> undef, float %58, i32 0
  %68 = insertelement <2 x float> %67, float %62, i32 1
  %69 = insertelement <2 x float> undef, float %65, i32 0
  %70 = insertelement <2 x float> %69, float %66, i32 1
  %71 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %68, 0
  %72 = insertvalue { <2 x float>, <2 x float> } %71, <2 x float> %70, 1
  ret { <2 x float>, <2 x float> } %72
}

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl19GetItemRectInternalEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %46

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  br i1 %13, label %16, label %15, !prof !46

15:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

16:                                               ; preds = %4
  %17 = trunc i64 %12 to i32
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %46

19:                                               ; preds = %16
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %14, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 1
  %24 = bitcast %class.CFX_FloatRect* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 1, i32 2
  %27 = bitcast float* %26 to <2 x float>*
  %28 = load <2 x float>, <2 x float>* %27, align 4
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %30 = load float, float* %29, align 4
  %31 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %32 = load float, float* %31, align 4
  %33 = fsub float %30, %32
  %34 = extractelement <2 x float> %28, i32 1
  %35 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %36 = fadd float %32, 0.000000e+00
  %37 = load float, float* %35, align 4, !noalias !125
  %38 = fsub float %37, %34
  %39 = extractelement <2 x float> %25, i32 1
  %40 = fadd float %32, %33
  %41 = fsub float %37, %39
  %42 = insertelement <2 x float> undef, float %36, i32 0
  %43 = insertelement <2 x float> %42, float %41, i32 1
  %44 = insertelement <2 x float> undef, float %40, i32 0
  %45 = insertelement <2 x float> %44, float %38, i32 1
  br label %46

46:                                               ; preds = %2, %16, %19
  %47 = phi <2 x float> [ %45, %19 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ]
  %48 = phi <2 x float> [ %43, %19 ], [ zeroinitializer, %16 ], [ zeroinitializer, %2 ]
  %49 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %48, 0
  %50 = insertvalue { <2 x float>, <2 x float> } %49, <2 x float> %47, 1
  ret { <2 x float>, <2 x float> } %50
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK13CPWL_ListCtrl7IsValidEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %18

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  br i1 %13, label %15, label %14, !prof !46

14:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

15:                                               ; preds = %4
  %16 = trunc i64 %12 to i32
  %17 = icmp sgt i32 %16, %1
  br label %18

18:                                               ; preds = %2, %15
  %19 = phi i1 [ false, %2 ], [ %17, %15 ]
  ret i1 %19
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl9AddStringERKN5fxcrt10WideStringE(%class.CPWL_ListCtrl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  tail call void @_ZN13CPWL_ListCtrl7AddItemERKN5fxcrt10WideStringE(%class.CPWL_ListCtrl* %0, %"class.fxcrt::WideString"* dereferenceable(8) %1)
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr.73"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.71"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, 2147483648
  br i1 %11, label %13, label %12, !prof !46

12:                                               ; preds = %2
  tail call void @llvm.trap() #16
  unreachable

13:                                               ; preds = %2
  %14 = trunc i64 %10 to i32
  %15 = add nsw i32 %14, -1
  tail call void @_ZN13CPWL_ListCtrl9ReArrangeEi(%class.CPWL_ListCtrl* %0, i32 %15)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl7AddItemERKN5fxcrt10WideStringE(%class.CPWL_ListCtrl*, %"class.fxcrt::WideString"* dereferenceable(8)) local_unnamed_addr #3 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.73", align 8
  %4 = bitcast %"class.std::__1::unique_ptr.73"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 32) #17
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds i8, i8* %6, i64 4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 16, i1 false) #16
  %8 = tail call i8* @_Znwm(i64 272) #17
  %9 = bitcast i8* %8 to %class.CPWL_EditImpl*
  tail call void @_ZN13CPWL_EditImplC1Ev(%class.CPWL_EditImpl* nonnull %9) #16
  %10 = getelementptr inbounds i8, i8* %6, i64 24
  %11 = bitcast i8* %10 to i8**
  store i8* %8, i8** %11, align 8
  tail call void @_ZN13CPWL_EditImpl13SetAlignmentVEib(%class.CPWL_EditImpl* nonnull %9, i32 1, i1 zeroext true) #16
  tail call void @_ZN13CPWL_EditImpl10InitializeEv(%class.CPWL_EditImpl* nonnull %9) #16
  %12 = bitcast %"class.std::__1::unique_ptr.73"* %3 to i8**
  store i8* %6, i8** %12, align 8
  %13 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 13, i32 0
  %14 = load %class.IPVT_FontMap*, %class.IPVT_FontMap** %13, align 8
  tail call void @_ZN13CPWL_EditImpl10SetFontMapEP12IPVT_FontMap(%class.CPWL_EditImpl* nonnull %9, %class.IPVT_FontMap* %14) #16
  %15 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 3
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 24
  %18 = bitcast i8* %17 to %class.CPWL_EditImpl**
  %19 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %18, align 8
  tail call void @_ZN13CPWL_EditImpl11SetFontSizeEf(%class.CPWL_EditImpl* %19, float %16) #16
  %20 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %18, align 8
  tail call void @_ZN13CPWL_EditImpl7SetTextERKN5fxcrt10WideStringE(%class.CPWL_EditImpl* %20, %"class.fxcrt::WideString"* dereferenceable(8) %1) #16
  %21 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %22 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %21, align 8
  %23 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 2, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %23, align 8
  %25 = icmp ult %"class.std::__1::unique_ptr.73"* %22, %24
  br i1 %25, label %26, label %32

26:                                               ; preds = %2
  %27 = ptrtoint i8* %6 to i64
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %5, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.73"* %22 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %22, i64 1
  %30 = ptrtoint %"class.std::__1::unique_ptr.73"* %29 to i64
  %31 = bitcast %"class.std::__1::unique_ptr.73"** %21 to i64*
  store i64 %30, i64* %31, align 8
  br label %34

32:                                               ; preds = %2
  %33 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  call void @_ZNSt3__16vectorINS_10unique_ptrIN13CPWL_ListCtrl4ItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.71"* %33, %"class.std::__1::unique_ptr.73"* nonnull dereferenceable(8) %3) #16
  br label %34

34:                                               ; preds = %26, %32
  %35 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %5, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %5, align 8
  %36 = icmp eq %"class.CPWL_ListCtrl::Item"* %35, null
  br i1 %36, label %45, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %35, i64 0, i32 2, i32 0, i32 0, i32 0
  %39 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %38, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %38, align 8
  %40 = icmp eq %class.CPWL_EditImpl* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %37
  call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %39) #16
  %42 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %39, i64 0, i32 0
  call void @_ZdlPv(i8* %42) #17
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %35, i64 0, i32 0
  call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %34, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl*, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = alloca <4 x float>, align 16
  %5 = alloca <4 x float>, align 16
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %180

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %10 = bitcast %"class.std::__1::unique_ptr.73"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.71"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 3
  %16 = icmp ult i64 %15, 2147483648
  br i1 %16, label %18, label %17, !prof !46

17:                                               ; preds = %7
  tail call void @llvm.trap() #16
  unreachable

18:                                               ; preds = %7
  %19 = trunc i64 %15 to i32
  %20 = icmp sgt i32 %19, %1
  br i1 %20, label %21, label %180

21:                                               ; preds = %18
  %22 = inttoptr i64 %13 to %"class.std::__1::unique_ptr.73"*
  %23 = sext i32 %1 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %22, i64 %23, i32 0, i32 0, i32 0
  %25 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %24, align 8
  %26 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %25, i64 0, i32 0
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp ne i8 %27, 0
  %29 = xor i1 %28, %2
  br i1 %29, label %30, label %180

30:                                               ; preds = %21
  br i1 %2, label %31, label %108

31:                                               ; preds = %30
  %32 = sext i32 %1 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %22, i64 %32, i32 0, i32 0, i32 0
  %34 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %33, align 8
  %35 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %34, i64 0, i32 0
  store i8 1, i8* %35, align 8
  %36 = bitcast <4 x float>* %4 to %class.CFX_FloatRect*
  %37 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %38 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %37, align 8
  %39 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %38, null
  br i1 %39, label %180, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %42 = load i8, i8* %41, align 2, !range !8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %180

44:                                               ; preds = %40
  store i8 1, i8* %41, align 2
  %45 = bitcast <4 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %45, i8 -1, i64 16, i1 false) #16
  %46 = load i64, i64* %10, align 8
  %47 = load i64, i64* %12, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 3
  %50 = icmp ult i64 %49, 2147483648
  %51 = inttoptr i64 %47 to %"class.std::__1::unique_ptr.73"*
  br i1 %50, label %53, label %52, !prof !46

52:                                               ; preds = %44
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %44
  %54 = trunc i64 %49 to i32
  %55 = icmp sgt i32 %54, %1
  br i1 %55, label %63, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %58 = load float, float* %57, align 8, !noalias !130
  %59 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %60 = load float, float* %59, align 4, !noalias !130
  %61 = insertelement <2 x float> undef, float %58, i32 0
  %62 = insertelement <2 x float> %61, float %60, i32 1
  br label %92

63:                                               ; preds = %53
  %64 = sext i32 %1 to i64
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %51, i64 %64, i32 0, i32 0, i32 0
  %66 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %65, align 8
  %67 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %66, i64 0, i32 1
  %68 = bitcast %class.CFX_FloatRect* %67 to <2 x float>*
  %69 = load <2 x float>, <2 x float>* %68, align 4
  %70 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %66, i64 0, i32 1, i32 2
  %71 = bitcast float* %70 to <2 x float>*
  %72 = load <2 x float>, <2 x float>* %71, align 4
  %73 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %76 = load float, float* %75, align 4
  %77 = fsub float %74, %76
  %78 = extractelement <2 x float> %72, i32 1
  %79 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %80 = fadd float %76, 0.000000e+00
  %81 = load float, float* %79, align 4, !noalias !133
  %82 = fsub float %81, %78
  %83 = extractelement <2 x float> %69, i32 1
  %84 = fadd float %76, %77
  %85 = fsub float %81, %83
  %86 = insertelement <2 x float> undef, float %80, i32 0
  %87 = insertelement <2 x float> %86, float %85, i32 1
  %88 = insertelement <2 x float> undef, float %84, i32 0
  %89 = insertelement <2 x float> %88, float %82, i32 1
  %90 = insertelement <2 x float> undef, float %76, i32 0
  %91 = insertelement <2 x float> %90, float %81, i32 1
  br label %92

92:                                               ; preds = %56, %63
  %93 = phi <2 x float> [ %89, %63 ], [ zeroinitializer, %56 ]
  %94 = phi <2 x float> [ %87, %63 ], [ zeroinitializer, %56 ]
  %95 = phi <2 x float> [ %91, %63 ], [ %62, %56 ]
  %96 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %97 = bitcast float* %96 to <2 x float>*
  %98 = load <2 x float>, <2 x float>* %97, align 8, !noalias !130
  %99 = fsub <2 x float> %98, %95
  %100 = shufflevector <2 x float> %99, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %101 = shufflevector <2 x float> %94, <2 x float> %93, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %102 = fsub <4 x float> %101, %100
  %103 = fadd <4 x float> %102, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %103, <4 x float>* %4, align 16
  %104 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %38 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %105 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %104, align 8
  %106 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %105, i64 4
  %107 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %106, align 8
  call void %107(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %38, %class.CFX_FloatRect* nonnull dereferenceable(16) %36) #16
  store i8 0, i8* %41, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #16
  br label %180

108:                                              ; preds = %30
  store i8 0, i8* %26, align 8
  %109 = bitcast <4 x float>* %5 to %class.CFX_FloatRect*
  %110 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %111 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %110, align 8
  %112 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %111, null
  br i1 %112, label %180, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %115 = load i8, i8* %114, align 2, !range !8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %180

117:                                              ; preds = %113
  store i8 1, i8* %114, align 2
  %118 = bitcast <4 x float>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %118) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %118, i8 -1, i64 16, i1 false) #16
  %119 = load i64, i64* %10, align 8
  %120 = load i64, i64* %12, align 8
  %121 = sub i64 %119, %120
  %122 = ashr exact i64 %121, 3
  %123 = icmp ult i64 %122, 2147483648
  %124 = inttoptr i64 %120 to %"class.std::__1::unique_ptr.73"*
  br i1 %123, label %126, label %125, !prof !46

125:                                              ; preds = %117
  tail call void @llvm.trap() #16
  unreachable

126:                                              ; preds = %117
  %127 = trunc i64 %122 to i32
  %128 = icmp sgt i32 %127, %1
  br i1 %128, label %136, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %131 = load float, float* %130, align 8, !noalias !138
  %132 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %133 = load float, float* %132, align 4, !noalias !138
  %134 = insertelement <2 x float> undef, float %131, i32 0
  %135 = insertelement <2 x float> %134, float %133, i32 1
  br label %164

136:                                              ; preds = %126
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %124, i64 %23, i32 0, i32 0, i32 0
  %138 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %137, align 8
  %139 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %138, i64 0, i32 1
  %140 = bitcast %class.CFX_FloatRect* %139 to <2 x float>*
  %141 = load <2 x float>, <2 x float>* %140, align 4
  %142 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %138, i64 0, i32 1, i32 2
  %143 = bitcast float* %142 to <2 x float>*
  %144 = load <2 x float>, <2 x float>* %143, align 4
  %145 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %146 = load float, float* %145, align 4
  %147 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %148 = load float, float* %147, align 4
  %149 = fsub float %146, %148
  %150 = extractelement <2 x float> %144, i32 1
  %151 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %152 = fadd float %148, 0.000000e+00
  %153 = load float, float* %151, align 4, !noalias !141
  %154 = fsub float %153, %150
  %155 = extractelement <2 x float> %141, i32 1
  %156 = fadd float %148, %149
  %157 = fsub float %153, %155
  %158 = insertelement <2 x float> undef, float %152, i32 0
  %159 = insertelement <2 x float> %158, float %157, i32 1
  %160 = insertelement <2 x float> undef, float %156, i32 0
  %161 = insertelement <2 x float> %160, float %154, i32 1
  %162 = insertelement <2 x float> undef, float %148, i32 0
  %163 = insertelement <2 x float> %162, float %153, i32 1
  br label %164

164:                                              ; preds = %129, %136
  %165 = phi <2 x float> [ %161, %136 ], [ zeroinitializer, %129 ]
  %166 = phi <2 x float> [ %159, %136 ], [ zeroinitializer, %129 ]
  %167 = phi <2 x float> [ %163, %136 ], [ %135, %129 ]
  %168 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %169 = bitcast float* %168 to <2 x float>*
  %170 = load <2 x float>, <2 x float>* %169, align 8, !noalias !138
  %171 = fsub <2 x float> %170, %167
  %172 = shufflevector <2 x float> %171, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %173 = shufflevector <2 x float> %166, <2 x float> %165, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %174 = fsub <4 x float> %173, %172
  %175 = fadd <4 x float> %174, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %175, <4 x float>* %5, align 16
  %176 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %111 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %177 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %176, align 8
  %178 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %177, i64 4
  %179 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %178, align 8
  call void %179(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %111, %class.CFX_FloatRect* nonnull dereferenceable(16) %109) #16
  store i8 0, i8* %114, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %118) #16
  br label %180

180:                                              ; preds = %113, %40, %3, %164, %108, %92, %31, %18, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl13SetItemSelectEib(%class.CPWL_ListCtrl* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %4 = icmp sgt i32 %1, -1
  br i1 %4, label %5, label %26

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.73"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.71"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, 2147483648
  %15 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.73"*
  br i1 %14, label %17, label %16, !prof !46

16:                                               ; preds = %5
  tail call void @llvm.trap() #16
  unreachable

17:                                               ; preds = %5
  %18 = trunc i64 %13 to i32
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = sext i32 %1 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %15, i64 %21, i32 0, i32 0, i32 0
  %23 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %22, align 8
  %24 = zext i1 %2 to i8
  %25 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %23, i64 0, i32 0
  store i8 %24, i8* %25, align 8
  br label %26

26:                                               ; preds = %3, %20, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl6SelectEi(%class.CPWL_ListCtrl*, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %141

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  br i1 %13, label %15, label %14, !prof !46

14:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

15:                                               ; preds = %4
  %16 = trunc i64 %12 to i32
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %18, label %141

18:                                               ; preds = %15
  %19 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %20 = load i8, i8* %19, align 1, !range !8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %140, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5
  %24 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %56, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %30

30:                                               ; preds = %52, %28
  %31 = phi %"class.std::__1::__tree_node"* [ %55, %52 ], [ %26, %28 ]
  %32 = phi %"class.std::__1::__tree_node_base"** [ %54, %52 ], [ %29, %28 ]
  %33 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 1, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %1
  br i1 %35, label %36, label %42

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = icmp eq %"class.std::__1::__tree_node_base"* %38, null
  br i1 %39, label %40, label %52

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

42:                                               ; preds = %30
  %43 = icmp slt i32 %34, %1
  br i1 %43, label %44, label %50

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 1
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %52

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %31, i64 0, i32 0, i32 0
  br label %58

52:                                               ; preds = %44, %36
  %53 = phi %"class.std::__1::__tree_node_base"* [ %38, %36 ], [ %46, %44 ]
  %54 = phi %"class.std::__1::__tree_node_base"** [ %37, %36 ], [ %45, %44 ]
  %55 = bitcast %"class.std::__1::__tree_node_base"* %53 to %"class.std::__1::__tree_node"*
  br label %30

56:                                               ; preds = %22
  %57 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  br label %58

58:                                               ; preds = %56, %50, %48, %40
  %59 = phi %"class.std::__1::__tree_end_node"* [ %24, %56 ], [ %41, %40 ], [ %49, %48 ], [ %51, %50 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %57, %56 ], [ %37, %40 ], [ %45, %48 ], [ %32, %50 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %64, label %91

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 40) #17, !noalias !146
  %66 = getelementptr inbounds i8, i8* %65, i64 28
  %67 = bitcast i8* %66 to i32*
  store i32 %1, i32* %67, align 4, !noalias !146
  %68 = getelementptr inbounds i8, i8* %65, i64 32
  %69 = bitcast i8* %68 to i32*
  store i32 0, i32* %69, align 4, !noalias !146
  %70 = bitcast i8* %65 to %"class.std::__1::__tree_node"*
  %71 = bitcast i8* %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds i8, i8* %65, i64 16
  %73 = bitcast i8* %72 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %73, align 8
  %74 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8**
  store i8* %65, i8** %74, align 8
  %75 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %23, i64 0, i32 0, i32 0, i32 0
  %76 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %76, i64 0, i32 0
  %78 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %77, align 8
  %79 = icmp eq %"class.std::__1::__tree_node_base"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %64
  %81 = ptrtoint %"class.std::__1::__tree_node_base"* %78 to i64
  %82 = bitcast %"class.CPWL_ListCtrl::SelectState"* %23 to i64*
  store i64 %81, i64* %82, align 8
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  br label %84

84:                                               ; preds = %80, %64
  %85 = phi %"class.std::__1::__tree_node_base"* [ %71, %64 ], [ %83, %80 ]
  %86 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %87 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %86, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %87, %"class.std::__1::__tree_node_base"* %85) #16
  %88 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  store i64 %90, i64* %88, align 8
  br label %91

91:                                               ; preds = %58, %84
  %92 = phi %"class.std::__1::__tree_node"* [ %70, %84 ], [ %62, %58 ]
  %93 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %92, i64 0, i32 1, i32 0, i32 1
  store i32 1, i32* %93, align 4
  %94 = getelementptr inbounds %"class.CPWL_ListCtrl::SelectState", %"class.CPWL_ListCtrl::SelectState"* %23, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %96 = icmp eq %"class.std::__1::__tree_end_node"* %95, %24
  br i1 %96, label %139, label %97

97:                                               ; preds = %91, %136
  %98 = phi %"class.std::__1::__tree_end_node"* [ %137, %136 ], [ %95, %91 ]
  %99 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 4
  %100 = bitcast %"class.std::__1::__tree_end_node"* %99 to i32*
  %101 = load i32, i32* %100, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %108, label %103

103:                                              ; preds = %97
  %104 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node"*
  %105 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %104, i64 0, i32 1, i32 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %101, 1
  tail call void @_ZN13CPWL_ListCtrl17SetMultipleSelectEib(%class.CPWL_ListCtrl* %0, i32 %106, i1 zeroext %107) #16
  br label %108

108:                                              ; preds = %103, %97
  %109 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 1, i32 0
  %110 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %109, align 8
  %111 = icmp eq %"class.std::__1::__tree_node_base"* %110, null
  br i1 %111, label %112, label %120

112:                                              ; preds = %108
  %113 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 2
  %115 = bitcast %"class.std::__1::__tree_end_node"* %114 to %"class.std::__1::__tree_end_node"**
  %116 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %116, i64 0, i32 0
  %118 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %117, align 8
  %119 = icmp eq %"class.std::__1::__tree_node_base"* %118, %113
  br i1 %119, label %136, label %127

120:                                              ; preds = %108, %120
  %121 = phi %"class.std::__1::__tree_node_base"* [ %123, %120 ], [ %110, %108 ]
  %122 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 0, i32 0
  %123 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %122, align 8
  %124 = icmp eq %"class.std::__1::__tree_node_base"* %123, null
  br i1 %124, label %125, label %120

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %121, i64 0, i32 0
  br label %136

127:                                              ; preds = %112, %127
  %128 = phi %"class.std::__1::__tree_end_node"** [ %131, %127 ], [ %115, %112 ]
  %129 = bitcast %"class.std::__1::__tree_end_node"** %128 to %"class.std::__1::__tree_node_base"**
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %130, i64 0, i32 2
  %132 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %131, align 8
  %133 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %132, i64 0, i32 0
  %134 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %133, align 8
  %135 = icmp eq %"class.std::__1::__tree_node_base"* %134, %130
  br i1 %135, label %136, label %127

136:                                              ; preds = %127, %125, %112
  %137 = phi %"class.std::__1::__tree_end_node"* [ %126, %125 ], [ %116, %112 ], [ %132, %127 ]
  %138 = icmp eq %"class.std::__1::__tree_end_node"* %137, %24
  br i1 %138, label %139, label %97

139:                                              ; preds = %136, %91
  tail call void @_ZN13CPWL_ListCtrl11SelectState4DoneEv(%"class.CPWL_ListCtrl::SelectState"* %23) #16
  br label %141

140:                                              ; preds = %18
  tail call void @_ZN13CPWL_ListCtrl15SetSingleSelectEi(%class.CPWL_ListCtrl* %0, i32 %1)
  br label %141

141:                                              ; preds = %2, %15, %140, %139
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl8DeselectEi(%class.CPWL_ListCtrl* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = alloca <4 x float>, align 16
  %4 = icmp sgt i32 %1, -1
  br i1 %4, label %5, label %105

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.73"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.71"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, 2147483648
  %15 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.73"*
  br i1 %14, label %17, label %16, !prof !46

16:                                               ; preds = %5
  tail call void @llvm.trap() #16
  unreachable

17:                                               ; preds = %5
  %18 = trunc i64 %13 to i32
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %20, label %105

20:                                               ; preds = %17
  %21 = sext i32 %1 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %15, i64 %21, i32 0, i32 0, i32 0
  %23 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %22, align 8
  %24 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %23, i64 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %105, label %27

27:                                               ; preds = %20
  store i8 0, i8* %24, align 8
  %28 = bitcast <4 x float>* %3 to %class.CFX_FloatRect*
  %29 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %30 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %29, align 8
  %31 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %30, null
  br i1 %31, label %99, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %34 = load i8, i8* %33, align 2, !range !8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %99

36:                                               ; preds = %32
  store i8 1, i8* %33, align 2
  %37 = bitcast <4 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 -1, i64 16, i1 false) #16
  %38 = load i64, i64* %8, align 8
  %39 = load i64, i64* %10, align 8
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = icmp ult i64 %41, 2147483648
  %43 = inttoptr i64 %39 to %"class.std::__1::unique_ptr.73"*
  br i1 %42, label %45, label %44, !prof !46

44:                                               ; preds = %36
  tail call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %36
  %46 = trunc i64 %41 to i32
  %47 = icmp sgt i32 %46, %1
  br i1 %47, label %55, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %50 = load float, float* %49, align 8, !noalias !149
  %51 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %52 = load float, float* %51, align 4, !noalias !149
  %53 = insertelement <2 x float> undef, float %50, i32 0
  %54 = insertelement <2 x float> %53, float %52, i32 1
  br label %83

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %43, i64 %21, i32 0, i32 0, i32 0
  %57 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %56, align 8
  %58 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %57, i64 0, i32 1
  %59 = bitcast %class.CFX_FloatRect* %58 to <2 x float>*
  %60 = load <2 x float>, <2 x float>* %59, align 4
  %61 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %57, i64 0, i32 1, i32 2
  %62 = bitcast float* %61 to <2 x float>*
  %63 = load <2 x float>, <2 x float>* %62, align 4
  %64 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %65 = load float, float* %64, align 4
  %66 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %67 = load float, float* %66, align 4
  %68 = fsub float %65, %67
  %69 = extractelement <2 x float> %63, i32 1
  %70 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %71 = fadd float %67, 0.000000e+00
  %72 = load float, float* %70, align 4, !noalias !152
  %73 = fsub float %72, %69
  %74 = extractelement <2 x float> %60, i32 1
  %75 = fadd float %67, %68
  %76 = fsub float %72, %74
  %77 = insertelement <2 x float> undef, float %71, i32 0
  %78 = insertelement <2 x float> %77, float %76, i32 1
  %79 = insertelement <2 x float> undef, float %75, i32 0
  %80 = insertelement <2 x float> %79, float %73, i32 1
  %81 = insertelement <2 x float> undef, float %67, i32 0
  %82 = insertelement <2 x float> %81, float %72, i32 1
  br label %83

83:                                               ; preds = %55, %48
  %84 = phi <2 x float> [ %80, %55 ], [ zeroinitializer, %48 ]
  %85 = phi <2 x float> [ %78, %55 ], [ zeroinitializer, %48 ]
  %86 = phi <2 x float> [ %82, %55 ], [ %54, %48 ]
  %87 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %88 = bitcast float* %87 to <2 x float>*
  %89 = load <2 x float>, <2 x float>* %88, align 8, !noalias !149
  %90 = fsub <2 x float> %89, %86
  %91 = shufflevector <2 x float> %90, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  %92 = shufflevector <2 x float> %85, <2 x float> %84, <4 x i32> <i32 0, i32 1, i32 2, i32 3>
  %93 = fsub <4 x float> %92, %91
  %94 = fadd <4 x float> %93, <float -1.000000e+00, float -1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  store <4 x float> %94, <4 x float>* %3, align 16
  %95 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %30 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %96 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %96, i64 4
  %98 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %97, align 8
  call void %98(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %30, %class.CFX_FloatRect* nonnull dereferenceable(16) %28) #16
  store i8 0, i8* %33, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #16
  br label %99

99:                                               ; preds = %27, %32, %83
  %100 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 9
  %101 = load i8, i8* %100, align 1, !range !8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 4
  store i32 -1, i32* %104, align 4
  br label %105

105:                                              ; preds = %99, %20, %2, %17, %103
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* nocapture, float) local_unnamed_addr #3 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 4
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %5 = load float, float* %4, align 4
  %6 = fsub float %5, %1
  %7 = fpext float %6 to double
  %8 = fcmp olt double %7, 1.000000e-04
  %9 = fcmp ogt double %7, -1.000000e-04
  %10 = and i1 %8, %9
  br i1 %10, label %73, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 3
  %17 = load float, float* %16, align 4
  %18 = fsub float %15, %17
  %19 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 1
  %20 = load float, float* %19, align 4
  %21 = fsub float %15, %20
  %22 = fsub float %15, %13
  %23 = fsub float %18, %21
  %24 = fcmp ogt float %22, %23
  br i1 %24, label %45, label %25

25:                                               ; preds = %11
  %26 = fsub float %1, %22
  %27 = fcmp olt float %26, %21
  br i1 %27, label %28, label %36

28:                                               ; preds = %25
  %29 = fsub float %26, %21
  %30 = fpext float %29 to double
  %31 = fcmp olt double %30, 1.000000e-04
  %32 = fcmp ogt double %30, -1.000000e-04
  %33 = and i1 %31, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %28
  %35 = fadd float %22, %21
  br label %45

36:                                               ; preds = %28, %25
  %37 = fcmp olt float %18, %1
  br i1 %37, label %38, label %45

38:                                               ; preds = %36
  %39 = fsub float %1, %18
  %40 = fpext float %39 to double
  %41 = fcmp olt double %40, 1.000000e-04
  %42 = fcmp ogt double %40, -1.000000e-04
  %43 = and i1 %41, %42
  %44 = select i1 %43, float %1, float %18
  br label %45

45:                                               ; preds = %11, %38, %34, %36
  %46 = phi float [ %1, %36 ], [ %35, %34 ], [ %44, %38 ], [ %15, %11 ]
  store float %46, float* %4, align 4
  %47 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %48 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %47, align 8
  %49 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %48, null
  br i1 %49, label %73, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %52 = load i8, i8* %51, align 2, !range !8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %63

54:                                               ; preds = %50
  store i8 1, i8* %51, align 2
  %55 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #16
  %56 = bitcast %class.CPWL_ListCtrl* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 8 %56, i64 16, i1 false) #16
  %57 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %48 to void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)***
  %58 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %58, i64 4
  %60 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, %class.CFX_FloatRect*)** %59, align 8
  call void %60(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %48, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #16
  store i8 0, i8* %51, align 2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #16
  %61 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %47, align 8
  %62 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %61, null
  br i1 %62, label %73, label %63

63:                                               ; preds = %50, %54
  %64 = phi %"class.CPWL_ListCtrl::NotifyIface"* [ %61, %54 ], [ %48, %50 ]
  %65 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %66 = load i8, i8* %65, align 2, !range !8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %73

68:                                               ; preds = %63
  store i8 1, i8* %65, align 2
  %69 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %64 to void (%"class.CPWL_ListCtrl::NotifyIface"*, float)***
  %70 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, float)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float)** %70, i64 3
  %72 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float)** %71, align 8
  call void %72(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %64, float %46) #16
  store i8 0, i8* %65, align 2
  br label %73

73:                                               ; preds = %45, %54, %68, %63, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl13SetScrollInfoEv(%class.CPWL_ListCtrl* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 11, i32 0
  %3 = load %"class.CPWL_ListCtrl::NotifyIface"*, %"class.CPWL_ListCtrl::NotifyIface"** %2, align 8
  %4 = icmp eq %"class.CPWL_ListCtrl::NotifyIface"* %3, null
  br i1 %4, label %43, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %7 = load float, float* %6, align 4
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %9 = load float, float* %8, align 4
  %10 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 3
  %11 = load float, float* %10, align 4
  %12 = fsub float %9, %11
  %13 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 1
  %14 = load float, float* %13, align 4
  %15 = fsub float %9, %14
  %16 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 10
  %17 = load i8, i8* %16, align 2, !range !8
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %43

19:                                               ; preds = %5
  store i8 1, i8* %16, align 2
  %20 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %21 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %20, align 8
  %22 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %23 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %22, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr.73"* %21, %23
  br i1 %24, label %36, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %21, i64 0, i32 0, i32 0, i32 0
  %27 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %26, align 8
  %28 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %27, i64 0, i32 2, i32 0, i32 0, i32 0
  %29 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %28, align 8
  %30 = tail call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* %29) #16
  %31 = extractvalue { <2 x float>, <2 x float> } %30, 0
  %32 = extractvalue { <2 x float>, <2 x float> } %30, 1
  %33 = extractelement <2 x float> %32, i32 1
  %34 = extractelement <2 x float> %31, i32 1
  %35 = fsub float %33, %34
  br label %36

36:                                               ; preds = %19, %25
  %37 = phi float [ %35, %25 ], [ 1.000000e+00, %19 ]
  %38 = fsub float %9, %7
  %39 = bitcast %"class.CPWL_ListCtrl::NotifyIface"* %3 to void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)***
  %40 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)**, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)** %40, i64 2
  %42 = load void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)*, void (%"class.CPWL_ListCtrl::NotifyIface"*, float, float, float, float, float, float)** %41, align 8
  tail call void %42(%"class.CPWL_ListCtrl::NotifyIface"* nonnull %3, float %7, float %9, float %15, float %12, float %37, float %38) #16
  store i8 0, i8* %16, align 2
  br label %43

43:                                               ; preds = %1, %36, %5
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl22GetContentRectInternalEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 0
  %3 = load float, float* %2, align 4
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 3
  %5 = load float, float* %4, align 4
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %7 = load float, float* %6, align 8, !noalias !157
  %8 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %9 = fadd float %3, %7
  %10 = load float, float* %8, align 4, !noalias !162
  %11 = fsub float %10, %5
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 2
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = fadd float %7, %13
  %17 = fsub float %10, %15
  %18 = insertelement <2 x float> undef, float %9, i32 0
  %19 = insertelement <2 x float> %18, float %17, i32 1
  %20 = insertelement <2 x float> undef, float %16, i32 0
  %21 = insertelement <2 x float> %20, float %11, i32 1
  %22 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %23 = insertvalue { <2 x float>, <2 x float> } %22, <2 x float> %21, 1
  ret { <2 x float>, <2 x float> } %23
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK13CPWL_ListCtrl14GetFirstHeightEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.73"* %3, %5
  br i1 %6, label %18, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %8, align 8
  %10 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %9, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %10, align 8
  %12 = tail call { <2 x float>, <2 x float> } @_ZNK13CPWL_EditImpl14GetContentRectEv(%class.CPWL_EditImpl* %11) #16
  %13 = extractvalue { <2 x float>, <2 x float> } %12, 0
  %14 = extractvalue { <2 x float>, <2 x float> } %12, 1
  %15 = extractelement <2 x float> %14, i32 1
  %16 = extractelement <2 x float> %13, i32 1
  %17 = fsub float %15, %16
  br label %18

18:                                               ; preds = %1, %7
  %19 = phi float [ %17, %7 ], [ 1.000000e+00, %1 ]
  ret float %19
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK13CPWL_ListCtrl14GetContentRectEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %4 = load float, float* %3, align 8, !noalias !165
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %6 = load float, float* %5, align 4, !noalias !170
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 1, i32 2
  %8 = bitcast float* %7 to <2 x float>*
  %9 = load <2 x float>, <2 x float>* %8, align 4
  %10 = bitcast float* %2 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4
  %12 = insertelement <2 x float> undef, float %4, i32 0
  %13 = insertelement <2 x float> %12, float %6, i32 1
  %14 = fadd <2 x float> %13, %9
  %15 = fsub <2 x float> %13, %9
  %16 = shufflevector <2 x float> %14, <2 x float> %15, <2 x i32> <i32 0, i32 3>
  %17 = fadd <2 x float> %13, %11
  %18 = fsub <2 x float> %13, %11
  %19 = shufflevector <2 x float> %17, <2 x float> %18, <2 x i32> <i32 0, i32 3>
  %20 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 0
  %21 = bitcast float* %20 to <2 x float>*
  %22 = load <2 x float>, <2 x float>* %21, align 8, !noalias !173
  %23 = fsub <2 x float> %22, %13
  %24 = fsub <2 x float> %19, %23
  %25 = fsub <2 x float> %16, %23
  %26 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %24, 0
  %27 = insertvalue { <2 x float>, <2 x float> } %26, <2 x float> %25, 1
  ret { <2 x float>, <2 x float> } %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl10SetTopItemEi(%class.CPWL_ListCtrl* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %30

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  br i1 %13, label %15, label %14, !prof !46

14:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

15:                                               ; preds = %4
  %16 = trunc i64 %12 to i32
  %17 = icmp sgt i32 %16, %1
  br i1 %17, label %18, label %30

18:                                               ; preds = %15
  %19 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %19, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 1, i32 2
  %24 = bitcast float* %23 to <2 x float>*
  %25 = load <2 x float>, <2 x float>* %24, align 4
  %26 = extractelement <2 x float> %25, i32 1
  %27 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %28 = load float, float* %27, align 4, !noalias !176
  %29 = fsub float %28, %26
  tail call void @_ZN13CPWL_ListCtrl13SetScrollPosYEf(%class.CPWL_ListCtrl* %0, float %29)
  br label %30

30:                                               ; preds = %2, %18, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl10GetTopItemEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 3
  %3 = load float, float* %2, align 4, !noalias !181
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 2, i32 1
  %5 = load float, float* %4, align 4, !noalias !182
  %6 = fsub float %5, %3
  %7 = fadd float %3, %6
  %8 = fsub float %3, %7
  %9 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %10 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %9, align 8
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %12 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.73"* %10, %12
  %14 = ptrtoint %"class.std::__1::unique_ptr.73"* %12 to i64
  %15 = ptrtoint %"class.std::__1::unique_ptr.73"* %10 to i64
  br i1 %13, label %75, label %16

16:                                               ; preds = %1, %49
  %17 = phi i8 [ %50, %49 ], [ 1, %1 ]
  %18 = phi i8 [ %38, %49 ], [ 1, %1 ]
  %19 = phi %"class.std::__1::unique_ptr.73"* [ %51, %49 ], [ %10, %1 ]
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %20, align 8
  %22 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %21, i64 0, i32 1
  %23 = bitcast %class.CFX_FloatRect* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %21, i64 0, i32 1, i32 2
  %26 = bitcast float* %25 to <2 x float>*
  %27 = load <2 x float>, <2 x float>* %26, align 4
  %28 = extractelement <2 x float> %27, i32 1
  %29 = fcmp ogt float %8, %28
  br i1 %29, label %30, label %37

30:                                               ; preds = %16
  %31 = fsub float %8, %28
  %32 = fpext float %31 to double
  %33 = fcmp olt double %32, 1.000000e-04
  %34 = fcmp ogt double %32, -1.000000e-04
  %35 = and i1 %33, %34
  %36 = select i1 %35, i8 %18, i8 0
  br label %37

37:                                               ; preds = %30, %16
  %38 = phi i8 [ %18, %16 ], [ %36, %30 ]
  %39 = extractelement <2 x float> %24, i32 1
  %40 = fcmp olt float %8, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %37
  %42 = fsub float %8, %39
  %43 = fpext float %42 to double
  %44 = fcmp olt double %43, 1.000000e-04
  %45 = fcmp ogt double %43, -1.000000e-04
  %46 = and i1 %44, %45
  %47 = select i1 %46, i8 %17, i8 0
  %48 = fcmp ult float %8, %28
  br i1 %48, label %49, label %53

49:                                               ; preds = %41, %37
  %50 = phi i8 [ %47, %41 ], [ %17, %37 ]
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %19, i64 1
  %52 = icmp eq %"class.std::__1::unique_ptr.73"* %51, %12
  br i1 %52, label %58, label %16

53:                                               ; preds = %41
  %54 = ptrtoint %"class.std::__1::unique_ptr.73"* %19 to i64
  %55 = sub i64 %54, %15
  %56 = lshr exact i64 %55, 3
  %57 = trunc i64 %56 to i32
  br label %78

58:                                               ; preds = %49
  %59 = and i8 %38, 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %75

61:                                               ; preds = %58
  %62 = and i8 %50, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %66 = load float, float* %65, align 4
  br label %118

67:                                               ; preds = %61
  %68 = sub i64 %14, %15
  %69 = ashr exact i64 %68, 3
  %70 = icmp ult i64 %69, 2147483648
  br i1 %70, label %72, label %71, !prof !46

71:                                               ; preds = %67
  tail call void @llvm.trap() #16
  unreachable

72:                                               ; preds = %67
  %73 = trunc i64 %69 to i32
  %74 = add nsw i32 %73, -1
  br label %78

75:                                               ; preds = %58, %1
  %76 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %77 = load float, float* %76, align 4
  br label %83

78:                                               ; preds = %53, %72
  %79 = phi i32 [ %74, %72 ], [ %57, %53 ]
  %80 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 1
  %81 = load float, float* %80, align 4
  %82 = icmp sgt i32 %79, -1
  br i1 %82, label %83, label %118

83:                                               ; preds = %75, %78
  %84 = phi float [ %77, %75 ], [ %81, %78 ]
  %85 = phi i32 [ 0, %75 ], [ %79, %78 ]
  %86 = sub i64 %14, %15
  %87 = ashr exact i64 %86, 3
  %88 = icmp ult i64 %87, 2147483648
  br i1 %88, label %90, label %89, !prof !46

89:                                               ; preds = %83
  tail call void @llvm.trap() #16
  unreachable

90:                                               ; preds = %83
  %91 = trunc i64 %87 to i32
  %92 = icmp slt i32 %85, %91
  br i1 %92, label %93, label %118

93:                                               ; preds = %90
  %94 = sext i32 %85 to i64
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 %94, i32 0, i32 0, i32 0
  %96 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %95, align 8
  %97 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %96, i64 0, i32 1
  %98 = bitcast %class.CFX_FloatRect* %97 to <2 x float>*
  %99 = load <2 x float>, <2 x float>* %98, align 4
  %100 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %96, i64 0, i32 1, i32 2
  %101 = bitcast float* %100 to <2 x float>*
  %102 = load <2 x float>, <2 x float>* %101, align 4
  %103 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %104 = load float, float* %103, align 4
  %105 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %106 = load float, float* %105, align 4
  %107 = fsub float %104, %106
  %108 = extractelement <2 x float> %102, i32 1
  %109 = fadd float %106, 0.000000e+00
  %110 = fsub float %3, %108
  %111 = extractelement <2 x float> %99, i32 1
  %112 = fadd float %106, %107
  %113 = fsub float %3, %111
  %114 = insertelement <2 x float> undef, float %109, i32 0
  %115 = insertelement <2 x float> %114, float %113, i32 1
  %116 = insertelement <2 x float> undef, float %112, i32 0
  %117 = insertelement <2 x float> %116, float %110, i32 1
  br label %118

118:                                              ; preds = %64, %78, %90, %93
  %119 = phi float [ %84, %93 ], [ %84, %90 ], [ %81, %78 ], [ %66, %64 ]
  %120 = phi i32 [ %85, %93 ], [ %85, %90 ], [ %79, %78 ], [ -1, %64 ]
  %121 = phi <2 x float> [ %117, %93 ], [ zeroinitializer, %90 ], [ zeroinitializer, %78 ], [ zeroinitializer, %64 ]
  %122 = phi <2 x float> [ %115, %93 ], [ zeroinitializer, %90 ], [ zeroinitializer, %78 ], [ zeroinitializer, %64 ]
  %123 = extractelement <2 x float> %122, i32 1
  %124 = fsub float %123, %6
  %125 = extractelement <2 x float> %121, i32 1
  %126 = fsub float %125, %6
  %127 = fcmp oge float %124, %119
  %128 = fcmp ole float %126, %3
  %129 = and i1 %128, %127
  br i1 %129, label %177, label %130

130:                                              ; preds = %118
  %131 = add nsw i32 %120, 1
  %132 = icmp sgt i32 %120, -2
  br i1 %132, label %133, label %166

133:                                              ; preds = %130
  %134 = sub i64 %14, %15
  %135 = ashr exact i64 %134, 3
  %136 = icmp ult i64 %135, 2147483648
  br i1 %136, label %138, label %137, !prof !46

137:                                              ; preds = %133
  tail call void @llvm.trap() #16
  unreachable

138:                                              ; preds = %133
  %139 = trunc i64 %135 to i32
  %140 = icmp slt i32 %131, %139
  br i1 %140, label %141, label %166

141:                                              ; preds = %138
  %142 = sext i32 %131 to i64
  %143 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 %142, i32 0, i32 0, i32 0
  %144 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %143, align 8
  %145 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %144, i64 0, i32 1
  %146 = bitcast %class.CFX_FloatRect* %145 to <2 x float>*
  %147 = load <2 x float>, <2 x float>* %146, align 4
  %148 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %144, i64 0, i32 1, i32 2
  %149 = bitcast float* %148 to <2 x float>*
  %150 = load <2 x float>, <2 x float>* %149, align 4
  %151 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 2
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 0, i32 0
  %154 = load float, float* %153, align 4
  %155 = fsub float %152, %154
  %156 = extractelement <2 x float> %150, i32 1
  %157 = fadd float %154, 0.000000e+00
  %158 = fsub float %3, %156
  %159 = extractelement <2 x float> %147, i32 1
  %160 = fadd float %154, %155
  %161 = fsub float %3, %159
  %162 = insertelement <2 x float> undef, float %157, i32 0
  %163 = insertelement <2 x float> %162, float %161, i32 1
  %164 = insertelement <2 x float> undef, float %160, i32 0
  %165 = insertelement <2 x float> %164, float %158, i32 1
  br label %166

166:                                              ; preds = %130, %138, %141
  %167 = phi <2 x float> [ %165, %141 ], [ zeroinitializer, %138 ], [ zeroinitializer, %130 ]
  %168 = phi <2 x float> [ %163, %141 ], [ zeroinitializer, %138 ], [ zeroinitializer, %130 ]
  %169 = extractelement <2 x float> %168, i32 1
  %170 = fsub float %169, %6
  %171 = extractelement <2 x float> %167, i32 1
  %172 = fsub float %171, %6
  %173 = fcmp oge float %170, %119
  %174 = fcmp ole float %172, %3
  %175 = and i1 %174, %173
  %176 = select i1 %175, i32 %131, i32 %120
  ret i32 %176

177:                                              ; preds = %118
  ret i32 %120
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN13CPWL_ListCtrl6CancelEv(%class.CPWL_ListCtrl* readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 5, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = icmp eq %"class.std::__1::__tree_end_node"* %3, %4
  br i1 %5, label %40, label %6

6:                                                ; preds = %1, %37
  %7 = phi %"class.std::__1::__tree_end_node"* [ %38, %37 ], [ %3, %1 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 4
  %9 = bitcast %"class.std::__1::__tree_end_node"* %8 to i32*
  store i32 -1, i32* %9, align 4
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 1, i32 0
  %11 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %10, align 8
  %12 = icmp eq %"class.std::__1::__tree_node_base"* %11, null
  br i1 %12, label %13, label %21

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::__tree_end_node"* %7 to %"class.std::__1::__tree_node_base"*
  %15 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %7, i64 2
  %16 = bitcast %"class.std::__1::__tree_end_node"* %15 to %"class.std::__1::__tree_end_node"**
  %17 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %17, i64 0, i32 0
  %19 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %18, align 8
  %20 = icmp eq %"class.std::__1::__tree_node_base"* %19, %14
  br i1 %20, label %37, label %28

21:                                               ; preds = %6, %21
  %22 = phi %"class.std::__1::__tree_node_base"* [ %24, %21 ], [ %11, %6 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %23, align 8
  %25 = icmp eq %"class.std::__1::__tree_node_base"* %24, null
  br i1 %25, label %26, label %21

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 0
  br label %37

28:                                               ; preds = %13, %28
  %29 = phi %"class.std::__1::__tree_end_node"** [ %32, %28 ], [ %16, %13 ]
  %30 = bitcast %"class.std::__1::__tree_end_node"** %29 to %"class.std::__1::__tree_node_base"**
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %31, i64 0, i32 2
  %33 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %32, align 8
  %34 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 0, i32 0
  %35 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %34, align 8
  %36 = icmp eq %"class.std::__1::__tree_node_base"* %35, %31
  br i1 %36, label %37, label %28

37:                                               ; preds = %28, %26, %13
  %38 = phi %"class.std::__1::__tree_end_node"* [ %27, %26 ], [ %17, %13 ], [ %33, %28 ]
  %39 = icmp eq %"class.std::__1::__tree_end_node"* %38, %4
  br i1 %39, label %40, label %6

40:                                               ; preds = %37, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl7GetTextEv(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 9
  %4 = load i8, i8* %3, align 1, !range !8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 7
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %8, -1
  br i1 %9, label %10, label %31

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12
  %12 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12, i32 0, i32 1
  %13 = bitcast %"class.std::__1::unique_ptr.73"** %12 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !185
  %15 = bitcast %"class.std::__1::vector.71"* %11 to i64*
  %16 = load i64, i64* %15, align 8, !noalias !185
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = icmp ult i64 %18, 2147483648
  %20 = inttoptr i64 %16 to %"class.std::__1::unique_ptr.73"*
  br i1 %19, label %22, label %21, !prof !46

21:                                               ; preds = %10
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %10
  %23 = trunc i64 %18 to i32
  %24 = icmp slt i32 %8, %23
  br i1 %24, label %25, label %31

25:                                               ; preds = %22
  %26 = sext i32 %8 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %20, i64 %26, i32 0, i32 0, i32 0
  %28 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %27, align 8
  %29 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %28, i64 0, i32 2, i32 0, i32 0, i32 0
  %30 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %29, align 8, !noalias !188
  tail call void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %30) #16
  br label %58

31:                                               ; preds = %22, %6
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #16
  br label %58

32:                                               ; preds = %2
  %33 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, -1
  br i1 %35, label %36, label %57

36:                                               ; preds = %32
  %37 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12
  %38 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12, i32 0, i32 1
  %39 = bitcast %"class.std::__1::unique_ptr.73"** %38 to i64*
  %40 = load i64, i64* %39, align 8, !noalias !191
  %41 = bitcast %"class.std::__1::vector.71"* %37 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !191
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, 2147483648
  %46 = inttoptr i64 %42 to %"class.std::__1::unique_ptr.73"*
  br i1 %45, label %48, label %47, !prof !46

47:                                               ; preds = %36
  tail call void @llvm.trap() #16
  unreachable

48:                                               ; preds = %36
  %49 = trunc i64 %44 to i32
  %50 = icmp slt i32 %34, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %48
  %52 = sext i32 %34 to i64
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %46, i64 %52, i32 0, i32 0, i32 0
  %54 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %53, align 8
  %55 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %54, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %55, align 8, !noalias !194
  tail call void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %56) #16
  br label %58

57:                                               ; preds = %48, %32
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #16
  br label %58

58:                                               ; preds = %57, %51, %31, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK13CPWL_ListCtrl11GetItemTextEi(%"class.fxcrt::WideString"* noalias sret, %class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %4 = icmp sgt i32 %2, -1
  br i1 %4, label %5, label %26

5:                                                ; preds = %3
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12
  %7 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %1, i64 0, i32 12, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.73"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.71"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ult i64 %13, 2147483648
  %15 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.73"*
  br i1 %14, label %17, label %16, !prof !46

16:                                               ; preds = %5
  tail call void @llvm.trap() #16
  unreachable

17:                                               ; preds = %5
  %18 = trunc i64 %13 to i32
  %19 = icmp sgt i32 %18, %2
  br i1 %19, label %20, label %26

20:                                               ; preds = %17
  %21 = sext i32 %2 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %15, i64 %21, i32 0, i32 0, i32 0
  %23 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %22, align 8
  %24 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %23, i64 0, i32 2, i32 0, i32 0, i32 0
  %25 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %24, align 8, !noalias !197
  tail call void @_ZNK13CPWL_EditImpl7GetTextEv(%"class.fxcrt::WideString"* sret %0, %class.CPWL_EditImpl* %25) #16
  br label %27

26:                                               ; preds = %3, %17
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #16
  br label %27

27:                                               ; preds = %26, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CPWL_EditImpl* @_ZNK13CPWL_ListCtrl11GetItemEditEi(%class.CPWL_ListCtrl* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = icmp sgt i32 %1, -1
  br i1 %3, label %4, label %25

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12
  %6 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.73"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.71"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = ashr exact i64 %11, 3
  %13 = icmp ult i64 %12, 2147483648
  %14 = inttoptr i64 %10 to %"class.std::__1::unique_ptr.73"*
  br i1 %13, label %16, label %15, !prof !46

15:                                               ; preds = %4
  tail call void @llvm.trap() #16
  unreachable

16:                                               ; preds = %4
  %17 = trunc i64 %12 to i32
  %18 = icmp sgt i32 %17, %1
  br i1 %18, label %19, label %25

19:                                               ; preds = %16
  %20 = sext i32 %1 to i64
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %14, i64 %20, i32 0, i32 0, i32 0
  %22 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %21, align 8
  %23 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %22, i64 0, i32 2, i32 0, i32 0, i32 0
  %24 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %23, align 8
  br label %25

25:                                               ; preds = %2, %16, %19
  %26 = phi %class.CPWL_EditImpl* [ %24, %19 ], [ null, %16 ], [ null, %2 ]
  ret %class.CPWL_EditImpl* %26
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK13CPWL_ListCtrl16GetFirstSelectedEv(%class.CPWL_ListCtrl* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %2, align 8
  %4 = getelementptr inbounds %class.CPWL_ListCtrl, %class.CPWL_ListCtrl* %0, i64 0, i32 12, i32 0, i32 1
  %5 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %4, align 8
  %6 = icmp eq %"class.std::__1::unique_ptr.73"* %3, %5
  br i1 %6, label %22, label %7

7:                                                ; preds = %1, %18
  %8 = phi i32 [ %16, %18 ], [ undef, %1 ]
  %9 = phi i32 [ %19, %18 ], [ 0, %1 ]
  %10 = phi %"class.std::__1::unique_ptr.73"* [ %20, %18 ], [ %3, %1 ]
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 0, i32 0, i32 0, i32 0
  %12 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %11, align 8
  %13 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %12, i64 0, i32 0
  %14 = load i8, i8* %13, align 8, !range !8
  %15 = icmp eq i8 %14, 0
  %16 = select i1 %15, i32 %8, i32 %9
  %17 = icmp eq i8 %14, 0
  br i1 %17, label %18, label %22

18:                                               ; preds = %7
  %19 = add nuw nsw i32 %9, 1
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %10, i64 1
  %21 = icmp eq %"class.std::__1::unique_ptr.73"* %20, %5
  br i1 %21, label %22, label %7

22:                                               ; preds = %7, %18, %1
  %23 = phi i32 [ -1, %1 ], [ -1, %18 ], [ %16, %7 ]
  ret i32 %23
}

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #4

declare void @__cxa_pure_virtual() unnamed_addr

declare i32 @u_toupper_69(i32) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

declare void @_ZN13CPWL_EditImplC1Ev(%class.CPWL_EditImpl*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl*) unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #3 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE7destroyEPNS_11__tree_nodeIS5_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #3 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !8
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !8
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !8
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !8
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !8
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !8
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !8
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !8
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !8
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN13CPWL_ListCtrl4ItemENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.71"*, %"class.std::__1::unique_ptr.73"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.73"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.71"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.71"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #15
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.73"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #15
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.73"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.73"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.73"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.73"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.73"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.73"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.71", %"class.std::__1::vector.71"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.73"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.73"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.CPWL_ListCtrl::Item"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.73"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.73"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.73"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.73"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !200

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.73"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.73"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.73"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.73"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.73"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.73"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.73"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.73"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.73"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.73"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.73"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.73"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.73"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.73"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.73"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.73"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.73"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.73"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.73"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.73"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.73"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.73"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.73"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.73"*, %"class.std::__1::unique_ptr.73"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.73"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.73"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.73"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.73"*
  %138 = icmp eq %"class.std::__1::unique_ptr.73"* %133, %137
  br i1 %138, label %155, label %139

139:                                              ; preds = %132, %153
  %140 = phi %"class.std::__1::unique_ptr.73"* [ %141, %153 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.CPWL_ListCtrl::Item"*, %"class.CPWL_ListCtrl::Item"** %142, align 8
  store %"class.CPWL_ListCtrl::Item"* null, %"class.CPWL_ListCtrl::Item"** %142, align 8
  %144 = icmp eq %"class.CPWL_ListCtrl::Item"* %143, null
  br i1 %144, label %153, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %143, i64 0, i32 2, i32 0, i32 0, i32 0
  %147 = load %class.CPWL_EditImpl*, %class.CPWL_EditImpl** %146, align 8
  store %class.CPWL_EditImpl* null, %class.CPWL_EditImpl** %146, align 8
  %148 = icmp eq %class.CPWL_EditImpl* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %145
  tail call void @_ZN13CPWL_EditImplD1Ev(%class.CPWL_EditImpl* nonnull %147) #16
  %150 = getelementptr inbounds %class.CPWL_EditImpl, %class.CPWL_EditImpl* %147, i64 0, i32 0
  tail call void @_ZdlPv(i8* %150) #17
  br label %151

151:                                              ; preds = %149, %145
  %152 = getelementptr inbounds %"class.CPWL_ListCtrl::Item", %"class.CPWL_ListCtrl::Item"* %143, i64 0, i32 0
  tail call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %151, %139
  %154 = icmp eq %"class.std::__1::unique_ptr.73"* %141, %137
  br i1 %154, label %155, label %139

155:                                              ; preds = %153, %132
  %156 = icmp eq i64 %135, 0
  br i1 %156, label %159, label %157

157:                                              ; preds = %155
  %158 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %158) #17
  br label %159

159:                                              ; preds = %155, %157
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { cold noreturn nounwind }
attributes #3 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!11 = distinct !{!11, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE: argument 0"}
!14 = distinct !{!14, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!17 = distinct !{!17, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!20 = distinct !{!20, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!23 = distinct !{!23, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!26 = distinct !{!26, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!27 = !{!28, !30}
!28 = distinct !{!28, !29, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!29 = distinct !{!29, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!30 = distinct !{!30, !31, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!31 = distinct !{!31, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!32 = !{!33, !30}
!33 = distinct !{!33, !34, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!34 = distinct !{!34, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!35 = !{!36, !38}
!36 = distinct !{!36, !37, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!37 = distinct !{!37, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!38 = distinct !{!38, !39, !"_ZNK13CPWL_ListCtrl12OuterToInnerERK13CFX_PTemplateIfE: argument 0"}
!39 = distinct !{!39, !"_ZNK13CPWL_ListCtrl12OuterToInnerERK13CFX_PTemplateIfE"}
!40 = !{!41, !38}
!41 = distinct !{!41, !42, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!42 = distinct !{!42, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE: argument 0"}
!45 = distinct !{!45, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE"}
!46 = !{!"branch_weights", i32 2000, i32 1}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!49 = distinct !{!49, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!52 = distinct !{!52, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!55 = distinct !{!55, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE: argument 0"}
!58 = distinct !{!58, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE"}
!59 = !{!60, !62}
!60 = distinct !{!60, !61, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!61 = distinct !{!61, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!62 = distinct !{!62, !63, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!63 = distinct !{!63, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!66 = distinct !{!66, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!69 = distinct !{!69, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!70 = !{!71, !73}
!71 = distinct !{!71, !72, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!72 = distinct !{!72, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!73 = distinct !{!73, !74, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!74 = distinct !{!74, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!75 = !{!76, !78}
!76 = distinct !{!76, !77, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!77 = distinct !{!77, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!78 = distinct !{!78, !79, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!79 = distinct !{!79, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!82 = distinct !{!82, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!85 = distinct !{!85, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!86 = !{!87, !89}
!87 = distinct !{!87, !88, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!88 = distinct !{!88, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!89 = distinct !{!89, !90, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!90 = distinct !{!90, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!93 = distinct !{!93, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!96 = distinct !{!96, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE: argument 0"}
!99 = distinct !{!99, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!102 = distinct !{!102, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!105 = distinct !{!105, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!108 = distinct !{!108, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!109 = !{!110, !112}
!110 = distinct !{!110, !111, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!111 = distinct !{!111, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!112 = distinct !{!112, !113, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!113 = distinct !{!113, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!114 = !{!115}
!115 = distinct !{!115, !116, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!116 = distinct !{!116, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!117 = !{!118, !120}
!118 = distinct !{!118, !119, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!119 = distinct !{!119, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!120 = distinct !{!120, !121, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!121 = distinct !{!121, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!124 = distinct !{!124, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!125 = !{!126, !128}
!126 = distinct !{!126, !127, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!127 = distinct !{!127, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!128 = distinct !{!128, !129, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!129 = distinct !{!129, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!130 = !{!131}
!131 = distinct !{!131, !132, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!132 = distinct !{!132, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!133 = !{!134, !136}
!134 = distinct !{!134, !135, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!135 = distinct !{!135, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!136 = distinct !{!136, !137, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!137 = distinct !{!137, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!138 = !{!139}
!139 = distinct !{!139, !140, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!140 = distinct !{!140, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!141 = !{!142, !144}
!142 = distinct !{!142, !143, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!143 = distinct !{!143, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!144 = distinct !{!144, !145, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!145 = distinct !{!145, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!146 = !{!147}
!147 = distinct !{!147, !148, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_: argument 0"}
!148 = distinct !{!148, !"_ZNSt3__16__treeINS_12__value_typeIiN13CPWL_ListCtrl11SelectState5StateEEENS_19__map_value_compareIiS5_NS_4lessIiEELb1EEENS_9allocatorIS5_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKiEEENSH_IJEEEEEENS_10unique_ptrINS_11__tree_nodeIS5_PvEENS_22__tree_node_destructorINSA_ISP_EEEEEEDpOT_"}
!149 = !{!150}
!150 = distinct !{!150, !151, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!151 = distinct !{!151, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!152 = !{!153, !155}
!153 = distinct !{!153, !154, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!154 = distinct !{!154, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!155 = distinct !{!155, !156, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!156 = distinct !{!156, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!157 = !{!158, !160}
!158 = distinct !{!158, !159, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!159 = distinct !{!159, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!160 = distinct !{!160, !161, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!161 = distinct !{!161, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!162 = !{!163, !160}
!163 = distinct !{!163, !164, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!164 = distinct !{!164, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!165 = !{!166, !168}
!166 = distinct !{!166, !167, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!167 = distinct !{!167, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!168 = distinct !{!168, !169, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!169 = distinct !{!169, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!170 = !{!171, !168}
!171 = distinct !{!171, !172, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!172 = distinct !{!172, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!173 = !{!174}
!174 = distinct !{!174, !175, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE: argument 0"}
!175 = distinct !{!175, !"_ZNK13CPWL_ListCtrl7InToOutERK13CFX_PTemplateIfE"}
!176 = !{!177, !179}
!177 = distinct !{!177, !178, !"_ZNK13CPWL_ListCtrl10GetBTPointEv: argument 0"}
!178 = distinct !{!178, !"_ZNK13CPWL_ListCtrl10GetBTPointEv"}
!179 = distinct !{!179, !180, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE: argument 0"}
!180 = distinct !{!180, !"_ZNK13CPWL_ListCtrl12InnerToOuterERK13CFX_PTemplateIfE"}
!181 = !{}
!182 = !{!183}
!183 = distinct !{!183, !184, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE: argument 0"}
!184 = distinct !{!184, !"_ZNK13CPWL_ListCtrl7OutToInERK13CFX_PTemplateIfE"}
!185 = !{!186}
!186 = distinct !{!186, !187, !"_ZNK13CPWL_ListCtrl11GetItemTextEi: argument 0"}
!187 = distinct !{!187, !"_ZNK13CPWL_ListCtrl11GetItemTextEi"}
!188 = !{!189}
!189 = distinct !{!189, !190, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv: argument 0"}
!190 = distinct !{!190, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv"}
!191 = !{!192}
!192 = distinct !{!192, !193, !"_ZNK13CPWL_ListCtrl11GetItemTextEi: argument 0"}
!193 = distinct !{!193, !"_ZNK13CPWL_ListCtrl11GetItemTextEi"}
!194 = !{!195}
!195 = distinct !{!195, !196, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv: argument 0"}
!196 = distinct !{!196, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv"}
!197 = !{!198}
!198 = distinct !{!198, !199, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv: argument 0"}
!199 = distinct !{!199, !"_ZNK13CPWL_ListCtrl4Item7GetTextEv"}
!200 = distinct !{!200, !201}
!201 = !{!"llvm.loop.unroll.disable"}
