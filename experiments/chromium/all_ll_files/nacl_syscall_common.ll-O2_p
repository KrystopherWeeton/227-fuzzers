; ModuleID = '../../native_client/src/trusted/service_runtime/nacl_syscall_common.c'
source_filename = "../../native_client/src/trusted/service_runtime/nacl_syscall_common.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClAppThread = type { %struct.NaClThreadContext, %struct.NaClMutex, %struct.NaClApp*, i32, i32, %struct.NaClThread, %struct.NaClMutex, i32, %struct.NaClAppThreadSuspendedRegisters*, i32, i64, i8*, i32, i32, i32, %struct.NaClListNode, i32, %struct.NaClCondVar }
%struct.NaClThreadContext = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, i32, i16, i16, i64, i32, i32 }
%struct.NaClApp = type { i8, i64, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, i32, %struct.NaClMutex, %struct.NaClCondVar, [151 x %struct.NaClSyscallTableEntry], %struct.NaClResourceNaClApp, i32, i32, %struct.NaClVmmap, %struct.NaClIntervalMultiset*, %struct.NaClDescEffector*, i32, i32, %struct.NaClDesc*, %struct.NaClMutex, i8*, %struct.NaClDynamicRegion*, i32, i32, i32, i32, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationCache*, i32, i32, i32, i32, i32, i64, %struct.NaClMutex, %struct.DynArray, i32, %struct.NaClFastMutex, %struct.DynArray, %struct.NaClDebugCallbacks*, %struct.NaClDesc*, %struct.NaClDesc*, %struct.NaClMutex, i32, i32, i32, i32, i32, i32, i32, %struct.NaClValidatorInterface* }
%struct.NaClSyscallTableEntry = type { {}* }
%struct.NaClResourceNaClApp = type { %struct.NaClResource, %struct.NaClApp* }
%struct.NaClResource = type { %struct.NaClResourceSchemes*, i64 }
%struct.NaClResourceSchemes = type { i8*, i32, %struct.NaClDesc* (%struct.NaClResource*, i8*, i32, i32, i32)* }
%struct.NaClVmmap = type { %struct.NaClVmmapEntry**, i64, i64, i32 }
%struct.NaClVmmapEntry = type { i64, i64, i32, i32, i32, %struct.NaClDesc*, i64, i64 }
%struct.NaClIntervalMultiset = type { %struct.NaClIntervalMultisetVtbl* }
%struct.NaClIntervalMultisetVtbl = type { void (%struct.NaClIntervalMultiset*)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, void (%struct.NaClIntervalMultiset*, i32, i32)*, i32 (%struct.NaClIntervalMultiset*, i32, i32)* }
%struct.NaClDescEffector = type opaque
%struct.NaClDynamicRegion = type opaque
%struct.NaClCPUFeaturesAbstract = type opaque
%struct.NaClValidationCache = type opaque
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.DynArray = type { i64, i8**, i64, i32*, i64 }
%struct.NaClDebugCallbacks = type { void (%struct.NaClAppThread*)*, void (%struct.NaClAppThread*)*, void ()* }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClValidatorInterface = type { i32, i32, i32, i32 (i64, i8*, i64, i32, i32, i32, %struct.NaClCPUFeaturesAbstract*, %struct.NaClValidationMetadata*, %struct.NaClValidationCache*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*, i32 (i8*, i8*, i8)*)*, i32 (i64, i8*, i8*, i64, %struct.NaClCPUFeaturesAbstract*)*, i64, void (%struct.NaClCPUFeaturesAbstract*)*, void (%struct.NaClCPUFeaturesAbstract*)*, i32 (i64, i64, i8*, i64, %struct.NaClCPUFeaturesAbstract*)* }
%struct.NaClValidationMetadata = type opaque
%struct.NaClThread = type { i64 }
%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%struct.NaClAppThreadSuspendedRegisters = type opaque
%struct.NaClListNode = type { %struct.NaClListNode*, %struct.NaClListNode* }
%struct.NaClCondVar = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%struct.NaClDescMutex = type { %struct.NaClDesc, %struct.NaClIntrMutex }
%struct.NaClIntrMutex = type { i32, %struct.NaClMutex, %struct.NaClCondVar }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.nacl_abi_stat = type { i64, i64, i32, i32, i32, i32, i64, i64, i32, i32, i64, i64, i64, i64, i64, i64 }
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }
%struct.NaClDescCondVar = type { %struct.NaClDesc, %struct.NaClIntrCondVar }
%struct.NaClIntrCondVar = type { %struct.NaClCondVar }
%struct.NaClDescSemaphore = type { %struct.NaClDesc, %struct.NaClSemaphore }
%struct.NaClSemaphore = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%struct.cpu_feature_struct_X86 = type { [39 x i8] }
%union.fxsave = type { %struct.anon.2, [96 x i8] }
%struct.anon.2 = type { i16, i16, i16, i16, %union.anon.3, i32, i32, [8 x %struct.anon.6], [64 x i32] }
%union.anon.3 = type { %struct.anon.4 }
%struct.anon.4 = type { i64, i64 }
%struct.anon.6 = type { [10 x i8], [6 x i8] }
%struct.nacl_abi_timeval = type { i64, i32 }

@.str = private unnamed_addr constant [40 x i8] c"Fatal error in file %s, line %d: !(%s)\0A\00", align 1
@.str.1 = private unnamed_addr constant [70 x i8] c"../../native_client/src/trusted/service_runtime/nacl_syscall_common.c\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"num < NACL_MAX_SYSCALLS\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"Duplicate syscall number %d\0A\00", align 1
@NaClAclBypassChecks = hidden local_unnamed_addr global i32 0, align 4
@.str.4 = private unnamed_addr constant [26 x i8] c"BYPASSING ALL ACL CHECKS\0A\00", align 1
@NaClRootDir = hidden local_unnamed_addr global i8* null, align 8
@NaClRootDirLen = hidden local_unnamed_addr global i64 0, align 8
@.str.5 = private unnamed_addr constant [36 x i8] c"Could not sanitize mount directory\0A\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"NaClSysGetpid: returning %d\0A\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"Exit syscall handler: %d\0A\00", align 1
@.str.8 = private unnamed_addr constant [35 x i8] c"NaClSysThreadExit(0x%08lx, 0x%08x\0A\00", align 1
@.str.9 = private unnamed_addr constant [53 x i8] c"NaClSysThreadExit: ignoring invalid stack_flag_addr\0A\00", align 1
@.str.10 = private unnamed_addr constant [42 x i8] c"Entered NaClSysTlsInit(0x%08lx, 0x%08lx)\0A\00", align 1
@.str.11 = private unnamed_addr constant [48 x i8] c"NaClSysTlsInit: thread_ptr 0x%x, sys_tls 0x%lx\0A\00", align 1
@.str.12 = private unnamed_addr constant [78 x i8] c"Entered NaClSysThreadCreate(0x%08lx pc=0x%08x, sp=0x%08x, thread_ptr=0x%08x)\0A\00", align 1
@.str.13 = private unnamed_addr constant [43 x i8] c"NaClSysThreadCreate: Bad function pointer\0A\00", align 1
@.str.14 = private unnamed_addr constant [11 x i8] c"bad stack\0A\00", align 1
@.str.15 = private unnamed_addr constant [17 x i8] c"bad TLS pointer\0A\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"Entered NaClSysMutexCreate(0x%08lx)\0A\00", align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"NaClSysMutexCreate(0x%08lx) = %d\0A\00", align 1
@.str.18 = private unnamed_addr constant [39 x i8] c"Entered NaClSysMutexLock(0x%08lx, %d)\0A\00", align 1
@.str.19 = private unnamed_addr constant [41 x i8] c"Entered NaClSysMutexUnlock(0x%08lx, %d)\0A\00", align 1
@.str.20 = private unnamed_addr constant [42 x i8] c"Entered NaClSysMutexTrylock(0x%08lx, %d)\0A\00", align 1
@.str.21 = private unnamed_addr constant [36 x i8] c"Entered NaClSysCondCreate(0x%08lx)\0A\00", align 1
@.str.22 = private unnamed_addr constant [33 x i8] c"NaClSysCondCreate(0x%08lx) = %d\0A\00", align 1
@.str.23 = private unnamed_addr constant [42 x i8] c"Entered NaClSysCondWait(0x%08lx, %d, %d)\0A\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"Entered NaClSysCondSignal(0x%08lx, %d)\0A\00", align 1
@.str.25 = private unnamed_addr constant [43 x i8] c"Entered NaClSysCondBroadcast(0x%08lx, %d)\0A\00", align 1
@.str.26 = private unnamed_addr constant [58 x i8] c"Entered NaClSysCondTimedWaitAbs(0x%08lx, %d, %d, 0x%08x)\0A\00", align 1
@.str.27 = private unnamed_addr constant [39 x i8] c"Entered NaClSysSemCreate(0x%08lx, %d)\0A\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"Entered NaClSysSemWait(0x%08lx, %d)\0A\00", align 1
@.str.29 = private unnamed_addr constant [37 x i8] c"Entered NaClSysSemPost(0x%08lx, %d)\0A\00", align 1
@.str.30 = private unnamed_addr constant [41 x i8] c"Entered NaClSysSemGetValue(0x%08lx, %d)\0A\00", align 1
@.str.31 = private unnamed_addr constant [52 x i8] c"Entered NaClSysNanosleep(0x%08lx, 0x%08x, 0x%08xx)\0A\00", align 1
@.str.32 = private unnamed_addr constant [38 x i8] c"NaClSysNanosleep(time = %ld.%09ld S)\0A\00", align 1
@.str.33 = private unnamed_addr constant [27 x i8] c"NaClNanosleep returned %d\0A\00", align 1
@.str.34 = private unnamed_addr constant [47 x i8] c"NaClSysNanosleep: check rem failed at copyout\0A\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"nanosleep done.\0A\00", align 1
@.str.36 = private unnamed_addr constant [44 x i8] c"Entered NaClSysSysconf(%08lxx, %d, 0x%08x)\0A\00", align 1
@NaClSysTestInfoLeak.tenbytes = internal unnamed_addr constant [10 x i8] c"SecretBit\00", align 1
@NaClSysTestInfoLeak.manybytes = internal unnamed_addr constant [256 x i8] c"Highly sensitive information must not be leaked to untrusted code!\0Axyzzy\0Aplugh\0AYou are likely to be eaten by a grue.\0AWhen in the Course of human events it becomes necessary for one people to dissolve the political bands which have connected them with ...\0A\00", align 16
@.str.37 = private unnamed_addr constant [40 x i8] c"NaClSysTestCrash: This is a test error\0A\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.39 = private unnamed_addr constant [44 x i8] c"Entered NaClSysGetTimeOfDay(%08lx, 0x%08x)\0A\00", align 1
@.str.40 = private unnamed_addr constant [26 x i8] c"now.nacl_abi_tv_usec >= 0\00", align 1
@.str.41 = private unnamed_addr constant [44 x i8] c"now.nacl_abi_tv_usec < NACL_MICROS_PER_UNIT\00", align 1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @NaClSysNotImplementedDecoder(%struct.NaClAppThread* nocapture readnone) #0 {
  ret i32 -38
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClAddSyscall(%struct.NaClApp* nocapture, i32, i32 (%struct.NaClAppThread*)*) local_unnamed_addr #1 {
  %4 = icmp ult i32 %1, 151
  br i1 %4, label %6, label %5

5:                                                ; preds = %3
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #8
  br label %6

6:                                                ; preds = %3, %5
  %7 = zext i32 %1 to i64
  %8 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %0, i64 0, i32 19, i64 %7, i32 0
  %9 = bitcast {}** %8 to i32 (%struct.NaClAppThread*)**
  %10 = load i32 (%struct.NaClAppThread*)*, i32 (%struct.NaClAppThread*)** %9, align 8
  %11 = icmp eq i32 (%struct.NaClAppThread*)* %10, @NaClSysNotImplementedDecoder
  br i1 %11, label %13, label %12

12:                                               ; preds = %6
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i32 %1) #8
  br label %13

13:                                               ; preds = %6, %12
  store i32 (%struct.NaClAppThread*)* %2, i32 (%struct.NaClAppThread*)** %9, align 8
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @NaClSysNull(%struct.NaClAppThread* nocapture readnone) local_unnamed_addr #0 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClInsecurelyBypassAllAclChecks() local_unnamed_addr #1 {
  tail call void (i32, i8*, ...) @NaClLog(i32 -2, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0)) #8
  store i32 1, i32* @NaClAclBypassChecks, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClMountRootDir(i8* nocapture readonly) local_unnamed_addr #1 {
  %2 = tail call i8* @realpath(i8* %0, i8* null) #8
  store i8* %2, i8** @NaClRootDir, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %4, label %6

4:                                                ; preds = %1
  tail call void (i32, i8*, ...) @NaClLog(i32 -1, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)) #8
  %5 = load i8*, i8** @NaClRootDir, align 8
  br label %10

6:                                                ; preds = %1
  %7 = tail call i64 @strlen(i8* nonnull %2) #9
  store i64 %7, i64* @NaClRootDirLen, align 8
  %8 = add i64 %7, -2
  %9 = icmp ugt i64 %8, 1021
  br i1 %9, label %10, label %12

10:                                               ; preds = %6, %4
  %11 = phi i8* [ %2, %6 ], [ %5, %4 ]
  tail call void @free(i8* %11) #8
  store i8* null, i8** @NaClRootDir, align 8
  store i64 0, i64* @NaClRootDirLen, align 8
  br label %12

12:                                               ; preds = %6, %10
  %13 = phi i32 [ 0, %10 ], [ 1, %6 ]
  ret i32 %13
}

; Function Attrs: nofree nounwind
declare i8* @realpath(i8* nocapture readonly, i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClFileAccessEnabled() local_unnamed_addr #6 {
  %1 = load i32, i32* @NaClAclBypassChecks, align 4
  %2 = icmp ne i32 %1, 0
  %3 = load i8*, i8** @NaClRootDir, align 8
  %4 = icmp ne i8* %3, null
  %5 = or i1 %2, %4
  %6 = zext i1 %5 to i32
  ret i32 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @NaClHighResolutionTimerEnabled() local_unnamed_addr #6 {
  %1 = load i32, i32* @NaClAclBypassChecks, align 4
  ret i32 %1
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysGetpid(%struct.NaClAppThread* nocapture readnone) local_unnamed_addr #1 {
  %2 = load i32, i32* @NaClAclBypassChecks, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @getpid() #8
  br label %6

6:                                                ; preds = %1, %4
  %7 = phi i32 [ %5, %4 ], [ -38, %1 ]
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i32 %7) #8
  ret i32 %7
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind
declare i32 @getpid() local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysExit(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i32 %1) #8
  %5 = shl i32 %1, 8
  %6 = and i32 %5, 65280
  %7 = tail call i32 @NaClReportExitStatus(%struct.NaClApp* %4, i32 %6) #8
  tail call void @NaClAppThreadTeardown(%struct.NaClAppThread* %0) #8
  ret i32 -22
}

declare i32 @NaClReportExitStatus(%struct.NaClApp*, i32) local_unnamed_addr #2

declare void @NaClAppThreadTeardown(%struct.NaClAppThread*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysThreadExit(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %3, align 4
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.8, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = icmp eq i32 %1, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %9 = load %struct.NaClApp*, %struct.NaClApp** %8, align 8
  %10 = zext i32 %1 to i64
  %11 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %9, i64 %10, i8* nonnull %4, i64 4) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.9, i64 0, i64 0)) #8
  br label %14

14:                                               ; preds = %7, %2, %13
  call void @NaClAppThreadTeardown(%struct.NaClAppThread* %0) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret i32 -22
}

declare i32 @NaClCopyOutToUser(%struct.NaClApp*, i64, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysTlsInit(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = ptrtoint %struct.NaClAppThread* %0 to i64
  %4 = zext i32 %1 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.10, i64 0, i64 0), i64 %3, i64 %4) #8
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = icmp eq i32 %1, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = add nuw nsw i64 %4, 4
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 0
  %11 = load i8, i8* %10, align 8
  %12 = zext i8 %11 to i64
  %13 = shl i64 1, %12
  %14 = icmp ult i64 %13, %9
  br i1 %14, label %15, label %16

15:                                               ; preds = %2, %8
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i32 %1, i64 -1) #8
  br label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 3
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %18, %4
  tail call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([48 x i8], [48 x i8]* @.str.11, i64 0, i64 0), i32 %1, i64 %19) #8
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %16
  tail call void @NaClTlsSetTlsValue1(%struct.NaClAppThread* %0, i32 %1) #8
  br label %22

22:                                               ; preds = %15, %16, %21
  %23 = phi i32 [ 0, %21 ], [ -14, %16 ], [ -14, %15 ]
  ret i32 %23
}

declare void @NaClTlsSetTlsValue1(%struct.NaClAppThread*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysThreadCreate(%struct.NaClAppThread*, i32, i32, i32, i32) local_unnamed_addr #1 {
  %6 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %7 = load %struct.NaClApp*, %struct.NaClApp** %6, align 8
  %8 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.12, i64 0, i64 0), i64 %8, i32 %1, i32 %2, i32 %3) #8
  %9 = zext i32 %1 to i64
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 15
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = add nuw nsw i64 %12, 4294967295
  %14 = and i64 %13, %9
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %5
  %17 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 9
  %18 = load i64, i64* %17, align 8
  %19 = icmp ugt i64 %18, %9
  br i1 %19, label %21, label %20

20:                                               ; preds = %16, %5
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.13, i64 0, i64 0)) #8
  br label %50

21:                                               ; preds = %16
  %22 = add i32 %2, 8
  %23 = and i32 %22, -16
  %24 = add i32 %23, -8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 0
  %27 = load i8, i8* %26, align 8
  %28 = zext i8 %27 to i64
  %29 = lshr i64 %25, %28
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %21
  %32 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 3
  %33 = load i64, i64* %32, align 8
  %34 = add i64 %33, %25
  %35 = icmp eq i64 %34, -1
  br i1 %35, label %36, label %37

36:                                               ; preds = %21, %31
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.14, i64 0, i64 0)) #8
  br label %50

37:                                               ; preds = %31
  %38 = zext i32 %3 to i64
  %39 = icmp eq i32 %3, 0
  br i1 %39, label %47, label %40

40:                                               ; preds = %37
  %41 = add nuw nsw i64 %38, 4
  %42 = shl i64 1, %28
  %43 = icmp ult i64 %42, %41
  %44 = add i64 %33, %38
  %45 = icmp eq i64 %44, -1
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48

47:                                               ; preds = %40, %37
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.15, i64 0, i64 0)) #8
  br label %50

48:                                               ; preds = %40
  tail call void @NaClVmHoleWaitToStartThread(%struct.NaClApp* %7) #8
  %49 = tail call i32 @NaClCreateAdditionalThread(%struct.NaClApp* %7, i64 %9, i64 %34, i32 %3, i32 %4) #8
  br label %50

50:                                               ; preds = %48, %47, %36, %20
  %51 = phi i32 [ -14, %36 ], [ -14, %47 ], [ %49, %48 ], [ -14, %20 ]
  ret i32 %51
}

declare void @NaClVmHoleWaitToStartThread(%struct.NaClApp*) local_unnamed_addr #2

declare i32 @NaClCreateAdditionalThread(%struct.NaClApp*, i64, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysTlsGet(%struct.NaClAppThread*) local_unnamed_addr #1 {
  %2 = tail call i32 @NaClTlsGetTlsValue1(%struct.NaClAppThread* %0) #8
  ret i32 %2
}

declare i32 @NaClTlsGetTlsValue1(%struct.NaClAppThread*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSecondTlsSet(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  tail call void @NaClTlsSetTlsValue2(%struct.NaClAppThread* %0, i32 %1) #8
  ret i32 0
}

declare void @NaClTlsSetTlsValue2(%struct.NaClAppThread*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSecondTlsGet(%struct.NaClAppThread*) local_unnamed_addr #1 {
  %2 = tail call i32 @NaClTlsGetTlsValue2(%struct.NaClAppThread* %0) #8
  ret i32 %2
}

declare i32 @NaClTlsGetTlsValue2(%struct.NaClAppThread*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysThreadNice(%struct.NaClAppThread* nocapture readnone, i32) local_unnamed_addr #1 {
  %3 = tail call i32 @nacl_thread_nice(i32 %1) #8
  ret i32 %3
}

declare i32 @nacl_thread_nice(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysMutexCreate(%struct.NaClAppThread*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %3 = load %struct.NaClApp*, %struct.NaClApp** %2, align 8
  %4 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0), i64 %4) #8
  %5 = tail call noalias i8* @malloc(i64 184) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast i8* %5 to %struct.NaClDescMutex*
  %9 = tail call i32 @NaClDescMutexCtor(%struct.NaClDescMutex* nonnull %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast i8* %5 to %struct.NaClDesc*
  %13 = tail call i32 @NaClAppSetDescAvail(%struct.NaClApp* %3, %struct.NaClDesc* nonnull %12) #8
  br label %14

14:                                               ; preds = %1, %7, %11
  %15 = phi i32 [ %13, %11 ], [ -12, %7 ], [ -12, %1 ]
  %16 = phi i8* [ null, %11 ], [ %5, %7 ], [ null, %1 ]
  tail call void @free(i8* %16) #8
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0), i64 %4, i32 %15) #8
  ret i32 %15
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #3

declare i32 @NaClDescMutexCtor(%struct.NaClDescMutex*) local_unnamed_addr #2

declare i32 @NaClAppSetDescAvail(%struct.NaClApp*, %struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysMutexLock(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.18, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 16
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

declare %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp*, i32) local_unnamed_addr #2

declare void @NaClDescUnref(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysMutexUnlock(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.19, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 18
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysMutexTrylock(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.20, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 17
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysCondCreate(%struct.NaClAppThread*) local_unnamed_addr #1 {
  %2 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %3 = load %struct.NaClApp*, %struct.NaClApp** %2, align 8
  %4 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.21, i64 0, i64 0), i64 %4) #8
  %5 = tail call noalias i8* @malloc(i64 128) #8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %14, label %7

7:                                                ; preds = %1
  %8 = bitcast i8* %5 to %struct.NaClDescCondVar*
  %9 = tail call i32 @NaClDescCondVarCtor(%struct.NaClDescCondVar* nonnull %8) #8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %7
  %12 = bitcast i8* %5 to %struct.NaClDesc*
  %13 = tail call i32 @NaClAppSetDescAvail(%struct.NaClApp* %3, %struct.NaClDesc* nonnull %12) #8
  br label %14

14:                                               ; preds = %1, %7, %11
  %15 = phi i32 [ %13, %11 ], [ -12, %7 ], [ -12, %1 ]
  %16 = phi i8* [ null, %11 ], [ %5, %7 ], [ null, %1 ]
  tail call void @free(i8* %16) #8
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.22, i64 0, i64 0), i64 %4, i32 %15) #8
  ret i32 %15
}

declare i32 @NaClDescCondVarCtor(%struct.NaClDescCondVar*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysCondWait(%struct.NaClAppThread*, i32, i32) local_unnamed_addr #1 {
  %4 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %5 = load %struct.NaClApp*, %struct.NaClApp** %4, align 8
  %6 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.23, i64 0, i64 0), i64 %6, i32 %1, i32 %2) #8
  %7 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %5, i32 %1) #8
  %8 = icmp eq %struct.NaClDesc* %7, null
  br i1 %8, label %21, label %9

9:                                                ; preds = %3
  %10 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %5, i32 %2) #8
  %11 = icmp eq %struct.NaClDesc* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = bitcast %struct.NaClDesc* %7 to %struct.NaClDescVtbl**
  %14 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %13, align 8
  %15 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %14, i64 0, i32 19
  %16 = load i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)** %15, align 8
  %17 = tail call i32 %16(%struct.NaClDesc* nonnull %7, %struct.NaClDesc* nonnull %10) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %7) #8
  br label %18

18:                                               ; preds = %9, %12
  %19 = phi %struct.NaClDesc* [ %10, %12 ], [ %7, %9 ]
  %20 = phi i32 [ %17, %12 ], [ -9, %9 ]
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %19) #8
  br label %21

21:                                               ; preds = %18, %3
  %22 = phi i32 [ -9, %3 ], [ %20, %18 ]
  ret i32 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysCondSignal(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 21
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysCondBroadcast(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.25, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 22
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysCondTimedWaitAbs(%struct.NaClAppThread*, i32, i32, i32) local_unnamed_addr #1 {
  %5 = alloca %struct.nacl_abi_timespec, align 8
  %6 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %7 = load %struct.NaClApp*, %struct.NaClApp** %6, align 8
  %8 = bitcast %struct.nacl_abi_timespec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.26, i64 0, i64 0), i64 %9, i32 %1, i32 %2, i32 %3) #8
  %10 = zext i32 %3 to i64
  %11 = call i32 @NaClCopyInFromUser(%struct.NaClApp* %7, i8* nonnull %8, i64 %10, i64 16) #8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %4
  %14 = call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %7, i32 %1) #8
  %15 = icmp eq %struct.NaClDesc* %14, null
  br i1 %15, label %26, label %16

16:                                               ; preds = %13
  %17 = call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %7, i32 %2) #8
  %18 = icmp eq %struct.NaClDesc* %17, null
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %14) #8
  br label %26

20:                                               ; preds = %16
  %21 = bitcast %struct.NaClDesc* %14 to %struct.NaClDescVtbl**
  %22 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %21, align 8
  %23 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %22, i64 0, i32 20
  %24 = load i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)** %23, align 8
  %25 = call i32 %24(%struct.NaClDesc* nonnull %14, %struct.NaClDesc* nonnull %17, %struct.nacl_abi_timespec* nonnull %5) #8
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %14) #8
  call void @NaClDescUnref(%struct.NaClDesc* nonnull %17) #8
  br label %26

26:                                               ; preds = %13, %4, %20, %19
  %27 = phi i32 [ -9, %19 ], [ %25, %20 ], [ -14, %4 ], [ -9, %13 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i32 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #7

declare i32 @NaClCopyInFromUser(%struct.NaClApp*, i8*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSemCreate(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.27, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call noalias i8* @malloc(i64 112) #8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = bitcast i8* %6 to %struct.NaClDescSemaphore*
  %10 = tail call i32 @NaClDescSemaphoreCtor(%struct.NaClDescSemaphore* nonnull %9, i32 %1) #8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %8
  %13 = bitcast i8* %6 to %struct.NaClDesc*
  %14 = tail call i32 @NaClAppSetDescAvail(%struct.NaClApp* %4, %struct.NaClDesc* nonnull %13) #8
  br label %15

15:                                               ; preds = %2, %8, %12
  %16 = phi i32 [ %14, %12 ], [ -12, %8 ], [ -12, %2 ]
  %17 = phi i8* [ null, %12 ], [ %6, %8 ], [ null, %2 ]
  tail call void @free(i8* %17) #8
  ret i32 %16
}

declare i32 @NaClDescSemaphoreCtor(%struct.NaClDescSemaphore*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSemWait(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 30
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSemPost(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.29, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 29
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSemGetValue(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %4 = load %struct.NaClApp*, %struct.NaClApp** %3, align 8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.30, i64 0, i64 0), i64 %5, i32 %1) #8
  %6 = tail call %struct.NaClDesc* @NaClAppGetDesc(%struct.NaClApp* %4, i32 %1) #8
  %7 = icmp eq %struct.NaClDesc* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %struct.NaClDesc* %6 to %struct.NaClDescVtbl**
  %10 = load %struct.NaClDescVtbl*, %struct.NaClDescVtbl** %9, align 8
  %11 = getelementptr inbounds %struct.NaClDescVtbl, %struct.NaClDescVtbl* %10, i64 0, i32 31
  %12 = load i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)** %11, align 8
  %13 = tail call i32 %12(%struct.NaClDesc* nonnull %6) #8
  tail call void @NaClDescUnref(%struct.NaClDesc* nonnull %6) #8
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi i32 [ %13, %8 ], [ -9, %2 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysNanosleep(%struct.NaClAppThread*, i32, i32) local_unnamed_addr #1 {
  %4 = alloca %struct.nacl_abi_timespec, align 8
  %5 = alloca %struct.nacl_abi_timespec, align 8
  %6 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %7 = load %struct.NaClApp*, %struct.NaClApp** %6, align 8
  %8 = bitcast %struct.nacl_abi_timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %struct.nacl_abi_timespec* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.31, i64 0, i64 0), i64 %10, i32 %1, i32 %2) #8
  %11 = icmp ne i32 %2, 0
  br i1 %11, label %12, label %25

12:                                               ; preds = %3
  %13 = zext i32 %2 to i64
  %14 = add nuw nsw i64 %13, 16
  %15 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 0
  %16 = load i8, i8* %15, align 8
  %17 = zext i8 %16 to i64
  %18 = shl i64 1, %17
  %19 = icmp ult i64 %18, %14
  br i1 %19, label %46, label %20

20:                                               ; preds = %12
  %21 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %7, i64 0, i32 3
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, %13
  %24 = icmp eq i64 %23, -1
  br i1 %24, label %46, label %25

25:                                               ; preds = %20, %3
  %26 = zext i32 %1 to i64
  %27 = call i32 @NaClCopyInFromUser(%struct.NaClApp* %7, i8* nonnull %8, i64 %26, i64 16) #8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %46, label %29

29:                                               ; preds = %25
  %30 = icmp eq i32 %2, 0
  %31 = select i1 %30, %struct.nacl_abi_timespec* null, %struct.nacl_abi_timespec* %5
  %32 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %4, i64 0, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.nacl_abi_timespec, %struct.nacl_abi_timespec* %4, i64 0, i32 1
  %35 = load i32, i32* %34, align 8
  %36 = sext i32 %35 to i64
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.32, i64 0, i64 0), i64 %33, i64 %36) #8
  %37 = call i32 @NaClNanosleep(%struct.nacl_abi_timespec* nonnull %4, %struct.nacl_abi_timespec* %31) #8
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.33, i64 0, i64 0), i32 %37) #8
  %38 = icmp eq i32 %37, -4
  %39 = and i1 %11, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %29
  %41 = zext i32 %2 to i64
  %42 = bitcast %struct.nacl_abi_timespec* %31 to i8*
  %43 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %7, i64 %41, i8* %42, i64 16) #8
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %40
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.34, i64 0, i64 0)) #8
  br label %46

46:                                               ; preds = %12, %25, %20, %40, %29, %45
  %47 = phi i32 [ -4, %40 ], [ -4, %45 ], [ %37, %29 ], [ -14, %20 ], [ -14, %25 ], [ -14, %12 ]
  call void (i32, i8*, ...) @NaClLog(i32 4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i64 0, i64 0)) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret i32 %47
}

declare i32 @NaClNanosleep(%struct.nacl_abi_timespec*, %struct.nacl_abi_timespec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSchedYield(%struct.NaClAppThread* nocapture readnone) local_unnamed_addr #1 {
  tail call void @NaClThreadYield() #8
  ret i32 0
}

declare void @NaClThreadYield() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysSysconf(%struct.NaClAppThread*, i32, i32) local_unnamed_addr #1 {
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #8
  store i32 -1431655766, i32* %4, align 4
  %8 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.36, i64 0, i64 0), i64 %8, i32 %1, i32 %2) #8
  switch i32 %1, label %54 [
    i32 1, label %9
    i32 2, label %14
    i32 16777216, label %15
    i32 16777217, label %22
    i32 16777218, label %25
    i32 65536, label %28
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 63
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9
  store i32 %11, i32* %4, align 4
  br label %49

14:                                               ; preds = %3
  store i32 65536, i32* %4, align 4
  br label %49

15:                                               ; preds = %3
  %16 = load i32, i32* @NaClAclBypassChecks, align 4
  %17 = icmp ne i32 %16, 0
  %18 = load i8*, i8** @NaClRootDir, align 8
  %19 = icmp ne i8* %18, null
  %20 = or i1 %17, %19
  %21 = zext i1 %20 to i32
  store i32 %21, i32* %4, align 4
  br label %49

22:                                               ; preds = %3
  %23 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 45
  %24 = load i32, i32* %23, align 4
  store i32 %24, i32* %4, align 4
  br label %49

25:                                               ; preds = %3
  %26 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 46
  %27 = load i32, i32* %26, align 8
  store i32 %27, i32* %4, align 4
  br label %49

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 40
  %30 = bitcast %struct.NaClCPUFeaturesAbstract** %29 to %struct.cpu_feature_struct_X86**
  %31 = load %struct.cpu_feature_struct_X86*, %struct.cpu_feature_struct_X86** %30, align 8
  %32 = getelementptr inbounds %struct.NaClApp, %struct.NaClApp* %6, i64 0, i32 46
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %54

35:                                               ; preds = %28
  %36 = getelementptr inbounds %struct.cpu_feature_struct_X86, %struct.cpu_feature_struct_X86* %31, i64 0, i32 0, i64 37
  %37 = load i8, i8* %36, align 1
  %38 = sext i8 %37 to i32
  %39 = getelementptr inbounds %struct.cpu_feature_struct_X86, %struct.cpu_feature_struct_X86* %31, i64 0, i32 0, i64 28
  %40 = load i8, i8* %39, align 1
  %41 = sext i8 %40 to i32
  %42 = shl nsw i32 %41, 1
  %43 = or i32 %42, %38
  %44 = getelementptr inbounds %struct.cpu_feature_struct_X86, %struct.cpu_feature_struct_X86* %31, i64 0, i32 0, i64 4
  %45 = load i8, i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = shl nsw i32 %46, 2
  %48 = or i32 %43, %47
  store i32 %48, i32* %4, align 4
  br label %49

49:                                               ; preds = %35, %25, %22, %15, %14, %13
  %50 = zext i32 %2 to i64
  %51 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %6, i64 %50, i8* nonnull %7, i64 4) #8
  %52 = icmp eq i32 %51, 0
  %53 = select i1 %52, i32 -14, i32 0
  br label %54

54:                                               ; preds = %28, %9, %3, %49
  %55 = phi i32 [ -22, %9 ], [ -22, %3 ], [ %53, %49 ], [ -22, %28 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #8
  ret i32 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysTestInfoLeak(%struct.NaClAppThread* nocapture readnone) local_unnamed_addr #1 {
  %2 = alloca %union.fxsave, align 16
  %3 = bitcast %union.fxsave* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %3) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 512, i1 false)
  call void asm "fxsave $0", "=*m,~{dirflag},~{fpsr},~{flags}"(%union.fxsave* nonnull %2) #8, !srcloc !2
  %4 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 0, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %4, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %5 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 1, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %5, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %6 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 2, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %6, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %7 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 3, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %7, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %8 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 4, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %8, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %9 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 5, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %9, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %10 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 6, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %10, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %11 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 7, i64 7, i32 0, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %11, i8* align 1 getelementptr inbounds ([10 x i8], [10 x i8]* @NaClSysTestInfoLeak.tenbytes, i64 0, i64 0), i64 10, i1 false)
  %12 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 8, i64 0
  %13 = bitcast i32* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %13, i8* align 16 getelementptr inbounds ([256 x i8], [256 x i8]* @NaClSysTestInfoLeak.manybytes, i64 0, i64 0), i64 256, i1 false)
  %14 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 6
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %union.fxsave, %union.fxsave* %2, i64 0, i32 0, i32 5
  store i32 %15, i32* %16, align 8
  call void asm sideeffect "fxrstor $0", "*m,~{dirflag},~{fpsr},~{flags}"(%union.fxsave* nonnull %2) #8, !srcloc !3
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %3) #8
  ret i32 -38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysTestCrash(%struct.NaClAppThread* nocapture readnone, i32) local_unnamed_addr #1 {
  %3 = alloca i32*, align 8
  %4 = bitcast i32** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4)
  store volatile i32* inttoptr (i64 -6148914691236517206 to i32*), i32** %3, align 8
  store volatile i32* null, i32** %3, align 8
  switch i32 %1, label %9 [
    i32 1, label %5
    i32 2, label %7
    i32 3, label %8
  ]

5:                                                ; preds = %2
  %6 = load volatile i32*, i32** %3, align 8
  store volatile i32 0, i32* %6, align 4
  br label %9

7:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.37, i64 0, i64 0)) #8
  br label %9

8:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 956, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0)) #8
  br label %9

9:                                                ; preds = %2, %8, %7, %5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4)
  ret i32 -22
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysGetTimeOfDay(%struct.NaClAppThread*, i32) local_unnamed_addr #1 {
  %3 = alloca %struct.nacl_abi_timeval, align 8
  %4 = bitcast %struct.nacl_abi_timeval* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #8
  %5 = ptrtoint %struct.NaClAppThread* %0 to i64
  tail call void (i32, i8*, ...) @NaClLog(i32 3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.39, i64 0, i64 0), i64 %5, i32 %1) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 16, i1 false)
  %6 = call i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval* nonnull %3) #8
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %33

8:                                                ; preds = %2
  %9 = load i32, i32* @NaClAclBypassChecks, align 4
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %struct.nacl_abi_timeval, %struct.nacl_abi_timeval* %3, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  br i1 %10, label %13, label %16

13:                                               ; preds = %8
  %14 = srem i32 %12, 10
  %15 = sub i32 %12, %14
  store i32 %15, i32* %11, align 8
  br label %16

16:                                               ; preds = %8, %13
  %17 = phi i32 [ %15, %13 ], [ %12, %8 ]
  %18 = icmp sgt i32 %17, -1
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.nacl_abi_timeval, %struct.nacl_abi_timeval* %3, i64 0, i32 1
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 992, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.40, i64 0, i64 0)) #8
  %21 = load i32, i32* %20, align 8
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi i32 [ %17, %16 ], [ %21, %19 ]
  %24 = icmp slt i32 %23, 1000000
  br i1 %24, label %26, label %25

25:                                               ; preds = %22
  call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.1, i64 0, i64 0), i32 993, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.41, i64 0, i64 0)) #8
  br label %26

26:                                               ; preds = %25, %22
  %27 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %28 = load %struct.NaClApp*, %struct.NaClApp** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %28, i64 %29, i8* nonnull %4, i64 16) #8
  %31 = icmp eq i32 %30, 0
  %32 = select i1 %31, i32 -14, i32 0
  br label %33

33:                                               ; preds = %26, %2
  %34 = phi i32 [ %6, %2 ], [ %32, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #8
  ret i32 %34
}

declare i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysClockGetRes(%struct.NaClAppThread* nocapture readonly, i32, i32) local_unnamed_addr #1 {
  %4 = alloca %struct.nacl_abi_timespec, align 8
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = bitcast %struct.nacl_abi_timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #8
  %8 = icmp ugt i32 %1, 3
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #8
  %10 = call i32 @NaClClockGetRes(i32 %1, %struct.nacl_abi_timespec* nonnull %4) #8, !callees !4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = icmp eq i32 %2, 0
  br i1 %13, label %19, label %14

14:                                               ; preds = %12
  %15 = zext i32 %2 to i64
  %16 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %6, i64 %15, i8* nonnull %7, i64 16) #8
  %17 = icmp eq i32 %16, 0
  %18 = select i1 %17, i32 -14, i32 0
  br label %19

19:                                               ; preds = %14, %12, %3, %9
  %20 = phi i32 [ %10, %9 ], [ -22, %3 ], [ 0, %12 ], [ %18, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret i32 %20
}

declare i32 @NaClClockGetRes(i32, %struct.nacl_abi_timespec*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClSysClockGetTime(%struct.NaClAppThread* nocapture readonly, i32, i32) local_unnamed_addr #1 {
  %4 = alloca %struct.nacl_abi_timespec, align 8
  %5 = getelementptr inbounds %struct.NaClAppThread, %struct.NaClAppThread* %0, i64 0, i32 2
  %6 = load %struct.NaClApp*, %struct.NaClApp** %5, align 8
  %7 = bitcast %struct.nacl_abi_timespec* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #8
  %8 = icmp ugt i32 %1, 3
  br i1 %8, label %19, label %9

9:                                                ; preds = %3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #8
  %10 = call i32 @NaClClockGetTime(i32 %1, %struct.nacl_abi_timespec* nonnull %4) #8, !callees !4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %9
  %13 = icmp eq i32 %2, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = zext i32 %2 to i64
  %16 = call i32 @NaClCopyOutToUser(%struct.NaClApp* %6, i64 %15, i8* nonnull %7, i64 16) #8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %12, %14
  br label %19

19:                                               ; preds = %3, %9, %14, %18
  %20 = phi i32 [ -14, %18 ], [ 0, %14 ], [ %10, %9 ], [ -22, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #8
  ret i32 %20
}

declare i32 @NaClClockGetTime(i32, %struct.nacl_abi_timespec*) local_unnamed_addr #2

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nounwind }
attributes #8 = { nounwind }
attributes #9 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 23565}
!3 = !{i32 24396}
!4 = !{i32 (i32, %struct.nacl_abi_timespec*)* @NaClClockGetRes, i32 (i32, %struct.nacl_abi_timespec*)* @NaClClockGetTime}
