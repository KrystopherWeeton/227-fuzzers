; ModuleID = '../../third_party/angle/src/libANGLE/ProgramExecutable.cpp'
source_filename = "../../third_party/angle/src/libANGLE/ProgramExecutable.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.angle::BitSetT.141" = type { i8 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT.166" = type { i64 }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"class.angle::BitSetT.168" = type { i64 }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.angle::BitSetT.201" = type { i64 }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gl::BinaryInputStream" = type { i8, i64, i8*, i64 }
%"struct.gl::ActiveVariable" = type <{ i32 (...)**, %"class.angle::BitSetT.141", [7 x i8] }>
%"class.gl::BinaryOutputStream" = type { %"class.std::__1::vector.615" }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { i8*, i8*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { i8* }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.rx::Serial" = type { i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.682" }
%"struct.std::__1::pair.682" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.angle::BitSetT.147" = type { i8 }
%"class.angle::BitSetT" = type { i32 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::BitSetT.168", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %"class.std::__1::vector.337", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.373", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.374", %"class.gl::Program"*, %"class.gl::BindingPointer.376", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.378", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.337", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type opaque
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair.680" }
%"struct.std::__1::pair.680" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.684" }
%"struct.std::__1::pair.684" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.686" }
%"struct.std::__1::pair.686" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.688" }
%"struct.std::__1::pair.688" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.316" }
%"class.absl::flat_hash_map.316" = type { %"class.absl::container_internal::raw_hash_map.317" }
%"class.absl::container_internal::raw_hash_map.317" = type { %"class.absl::container_internal::raw_hash_set.318" }
%"class.absl::container_internal::raw_hash_set.318" = type { i8*, %"union.absl::container_internal::map_slot_type.319"*, i64, i64, %"class.absl::container_internal::CompressedTuple.320" }
%"union.absl::container_internal::map_slot_type.319" = type { %"struct.std::__1::pair.690" }
%"struct.std::__1::pair.690" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.320" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.321" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.325" }
%"class.gl::TypedResourceManager.325" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.326" }
%"class.gl::ResourceMap.326" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.344" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.328", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.329", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.337", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.328" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.329" = type { %"class.std::__1::__compressed_pair.330" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.331" }
%"struct.std::__1::__compressed_pair_elem.331" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.335", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.335" = type { %"struct.std::__1::array.336" }
%"struct.std::__1::array.336" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.344" = type { %"class.absl::container_internal::raw_hash_map.345" }
%"class.absl::container_internal::raw_hash_map.345" = type { %"class.absl::container_internal::raw_hash_set.346" }
%"class.absl::container_internal::raw_hash_set.346" = type { i8*, %"union.absl::container_internal::map_slot_type.347"*, i64, i64, %"class.absl::container_internal::CompressedTuple.348" }
%"union.absl::container_internal::map_slot_type.347" = type { %"struct.std::__1::pair.692" }
%"struct.std::__1::pair.692" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.348" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.349" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.353" }
%"class.gl::ResourceMap.353" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.354" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.354" = type { %"class.absl::container_internal::raw_hash_map.355" }
%"class.absl::container_internal::raw_hash_map.355" = type { %"class.absl::container_internal::raw_hash_set.356" }
%"class.absl::container_internal::raw_hash_set.356" = type { i8*, %"union.absl::container_internal::map_slot_type.357"*, i64, i64, %"class.absl::container_internal::CompressedTuple.358" }
%"union.absl::container_internal::map_slot_type.357" = type opaque
%"class.absl::container_internal::CompressedTuple.358" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.363" }
%"class.gl::ResourceMap.363" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.364" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.364" = type { %"class.absl::container_internal::raw_hash_map.365" }
%"class.absl::container_internal::raw_hash_map.365" = type { %"class.absl::container_internal::raw_hash_set.366" }
%"class.absl::container_internal::raw_hash_set.366" = type { i8*, %"union.absl::container_internal::map_slot_type.367"*, i64, i64, %"class.absl::container_internal::CompressedTuple.368" }
%"union.absl::container_internal::map_slot_type.367" = type opaque
%"class.absl::container_internal::CompressedTuple.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.373" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type opaque
%"class.gl::BindingPointer.374" = type { %"class.angle::BindingPointer.375" }
%"class.angle::BindingPointer.375" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.376" = type { %"class.angle::BindingPointer.377" }
%"class.angle::BindingPointer.377" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.std::__1::vector.378" = type { %"class.std::__1::__vector_base.379" }
%"class.std::__1::__vector_base.379" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.381" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.380, i32 }
%union.anon.380 = type { [4 x float] }
%"class.std::__1::__compressed_pair.381" = type { %"struct.std::__1::__compressed_pair_elem.382" }
%"struct.std::__1::__compressed_pair_elem.382" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.400", %"struct.std::__1::array.401", %"struct.std::__1::array.403", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.337", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.386", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.393", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.386" = type { %"class.std::__1::__vector_base.387" }
%"class.std::__1::__vector_base.387" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.388" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.393" = type { %"class.std::__1::__vector_base.394" }
%"class.std::__1::__vector_base.394" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.395" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.395" = type { %"struct.std::__1::__compressed_pair_elem.396" }
%"struct.std::__1::__compressed_pair_elem.396" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.400" = type { i64 }
%"struct.std::__1::array.401" = type { [16 x %"class.angle::BitSetT.402"] }
%"class.angle::BitSetT.402" = type { i64 }
%"struct.std::__1::array.403" = type { [16 x %"class.angle::BitSetT.404"] }
%"class.angle::BitSetT.404" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.400" }
%"class.rx::VertexArrayImpl" = type opaque
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type opaque
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.536" = type { i64 }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.std::__1::vector.337" = type { %"class.std::__1::__vector_base.338" }
%"class.std::__1::__vector_base.338" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"*, %"class.std::__1::__compressed_pair.634" }
%"struct.gl::ProgramVaryingRef" = type <{ %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"struct.gl::ProgramVaryingRef"* }
%"class.gl::ProgramVaryingPacking" = type <{ [8 x i8], %"class.angle::PackedEnumMap.639", %"class.angle::PackedEnumMap.664", [2 x i8] }>
%"class.angle::PackedEnumMap.639" = type { %"struct.std::__1::array.640" }
%"struct.std::__1::array.640" = type { [6 x %"class.gl::VaryingPacking"] }
%"class.gl::VaryingPacking" = type { %"class.std::__1::vector.641", %"class.std::__1::vector.648", %"class.std::__1::vector.655", %"class.angle::PackedEnumMap.662", %"class.angle::PackedEnumMap.662" }
%"class.std::__1::vector.641" = type { %"class.std::__1::__vector_base.642" }
%"class.std::__1::__vector_base.642" = type { %"struct.gl::VaryingPacking::Register"*, %"struct.gl::VaryingPacking::Register"*, %"class.std::__1::__compressed_pair.643" }
%"struct.gl::VaryingPacking::Register" = type { [4 x i8] }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"struct.gl::VaryingPacking::Register"* }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"struct.gl::PackedVaryingRegister"*, %"struct.gl::PackedVaryingRegister"*, %"class.std::__1::__compressed_pair.650" }
%"struct.gl::PackedVaryingRegister" = type { %"struct.gl::PackedVarying"*, i32, i32, i32, i32 }
%"struct.gl::PackedVarying" = type <{ [8 x i8], %"struct.gl::VaryingInShaderRef", %"struct.gl::VaryingInShaderRef", i32, i32, i8, [3 x i8], i32, i32, [4 x i8] }>
%"struct.gl::VaryingInShaderRef" = type { %"struct.sh::ShaderVariable"*, i8, %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"struct.gl::PackedVaryingRegister"* }
%"class.std::__1::vector.655" = type { %"class.std::__1::__vector_base.656" }
%"class.std::__1::__vector_base.656" = type { %"struct.gl::PackedVarying"*, %"struct.gl::PackedVarying"*, %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.gl::PackedVarying"* }
%"class.angle::PackedEnumMap.662" = type { %"struct.std::__1::array.663" }
%"struct.std::__1::array.663" = type { [6 x %"class.std::__1::vector.125"] }
%"class.angle::PackedEnumMap.664" = type { %"struct.std::__1::array.665" }
%"struct.std::__1::array.665" = type { [6 x i8] }
%"class.std::__1::set.667" = type { %"class.std::__1::__tree.668" }
%"class.std::__1::__tree.668" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.669", %"class.std::__1::__compressed_pair.673" }
%"class.std::__1::__compressed_pair.669" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.673" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.gl::InfoLog::StreamHelper" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.std::__1::basic_string" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }

$_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEEC2ERKS5_ = comdat any

$_ZN2gl14InterfaceBlockD2Ev = comdat any

$_ZN2gl7InfoLog12StreamHelperD2Ev = comdat any

$_ZNSt3__15arrayINS_6vectorIN2sh14ShaderVariableENS_9allocatorIS3_EEEELm6EED2Ev = comdat any

$_ZN2gl14InterfaceBlockD0Ev = comdat any

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2gl13LinkedUniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2gl20ShaderVariableBufferENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_ = comdat any

$_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN2sh14ShaderVariableERjEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2gl14SamplerBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRNS1_11TextureTypeERjRNS1_13SamplerFormatERmEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRS2_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE = comdat any

$_ZN2gl7InfoLog17ensureInitializedEv = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_ = comdat any

$_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableEjEEEvDpOT_ = comdat any

$_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableESA_EEEvDpOT_ = comdat any

$_ZN2gl24TransformFeedbackVaryingC2ERKN2sh14ShaderVariableES4_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZTVN2gl14InterfaceBlockE = comdat any

@_ZTVN2gl17ProgramExecutableE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gl::ProgramExecutable"*)* @_ZN2gl17ProgramExecutableD2Ev to i8*), i8* bitcast (void (%"class.gl::ProgramExecutable"*)* @_ZN2gl17ProgramExecutableD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [58 x i8] c"Capture of array elements is undefined and not supported.\00", align 1
@.str.5 = private unnamed_addr constant [65 x i8] c"Two transform feedback varyings include the same array element (\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.7 = private unnamed_addr constant [67 x i8] c"Two transform feedback varyings specify the same output variable (\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Transform feedback varying \00", align 1
@.str.9 = private unnamed_addr constant [38 x i8] c" does not exist in the vertex shader.\00", align 1
@.str.10 = private unnamed_addr constant [37 x i8] c"Struct cannot be captured directly (\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"Capture of arrays is undefined and not supported.\00", align 1
@.str.12 = private unnamed_addr constant [40 x i8] c"Cannot capture outbound array element '\00", align 1
@.str.13 = private unnamed_addr constant [3 x i8] c"'.\00", align 1
@.str.14 = private unnamed_addr constant [10 x i8] c"Varying '\00", align 1
@.str.15 = private unnamed_addr constant [45 x i8] c"' is not an array to be captured by element.\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c" components (\00", align 1
@.str.17 = private unnamed_addr constant [43 x i8] c") exceed the maximum separate components (\00", align 1
@.str.18 = private unnamed_addr constant [46 x i8] c"Transform feedback varying total components (\00", align 1
@.str.19 = private unnamed_addr constant [46 x i8] c") exceed the maximum interleaved components (\00", align 1
@.str.20 = private unnamed_addr constant [69 x i8] c"Samplers of conflicting types refer to the same texture image unit (\00", align 1
@_ZTVN2gl14InterfaceBlockE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD2Ev to i8*), i8* bitcast (void (%"struct.gl::InterfaceBlock"*)* @_ZN2gl14InterfaceBlockD0Ev to i8*)] }, comdat, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [5 x i8*], [5 x i8*], [5 x i8*] }, align 8
@_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant [10 x i8*], align 8
@_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE = external unnamed_addr constant { [16 x i8*] }, align 8
@.str.23 = private unnamed_addr constant [2 x i8] c".\00", align 1

@_ZN2gl17ProgramExecutableC1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramExecutable"*), void (%"class.gl::ProgramExecutable"*)* @_ZN2gl17ProgramExecutableC2Ev
@_ZN2gl17ProgramExecutableC1ERKS0_ = hidden unnamed_addr alias void (%"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"*), void (%"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"*)* @_ZN2gl17ProgramExecutableC2ERKS0_
@_ZN2gl17ProgramExecutableD1Ev = hidden unnamed_addr alias void (%"class.gl::ProgramExecutable"*), void (%"class.gl::ProgramExecutable"*)* @_ZN2gl17ProgramExecutableD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutableC2Ev(%"class.gl::ProgramExecutable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0
  tail call void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"* %2) #16
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl17ProgramExecutableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  tail call void @_ZN2gl7InfoLogC1Ev(%"class.gl::InfoLog"* %4) #16
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3, i32 0
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 8, i32 0
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13
  %11 = bitcast %"class.angle::BitSetArray"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20
  %14 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  %16 = bitcast i64* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 416, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 0, i64 209, i1 false)
  %17 = bitcast %"class.std::__1::vector.70"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 73, i1 false)
  %18 = bitcast %"class.std::__1::vector.70"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 72, i1 false)
  store i32 35980, i32* %15, align 8
  %19 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30
  %20 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 60
  %22 = bitcast %"class.std::__1::vector.187"* %19 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 245, i1 false)
  %23 = bitcast %"class.angle::PackedEnumMap.223"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 288, i1 false)
  store i8 4, i8* %21, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 61
  store i8 5, i8* %24, align 1
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 63
  store i32 1, i32* %25, align 4
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 64
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 26, i1 false)
  tail call void @_ZN2gl17ProgramExecutable5resetEv(%"class.gl::ProgramExecutable"* %0)
  ret void
}

declare void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"*) unnamed_addr #1

declare void @_ZN2gl7InfoLogC1Ev(%"class.gl::InfoLog"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable5resetEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  tail call void @_ZN2gl7InfoLog5resetEv(%"class.gl::InfoLog"* %2) #16
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 8, i32 0
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 6
  store i32 0, i32* %5, align 8
  %6 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 32, i1 false)
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 11
  %8 = bitcast %"struct.std::__1::array.169"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 384, i1 false)
  %9 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %9, i8 11, i64 96, i1 false)
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13
  %11 = bitcast %"class.angle::BitSetArray"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #16
  %12 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 14, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %12, i8 4, i64 96, i1 false)
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 16
  %14 = bitcast %"class.angle::BitSetArray"* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #16
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 0
  %16 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %15, align 8
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 1
  %18 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %17, align 8
  %19 = icmp eq %"struct.sh::ShaderVariable"* %18, %16
  br i1 %19, label %24, label %20

20:                                               ; preds = %1, %20
  %21 = phi %"struct.sh::ShaderVariable"* [ %22, %20 ], [ %18, %1 ]
  %22 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %21, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %22) #16
  %23 = icmp eq %"struct.sh::ShaderVariable"* %22, %16
  br i1 %23, label %24, label %20

24:                                               ; preds = %20, %1
  store %"struct.sh::ShaderVariable"* %16, %"struct.sh::ShaderVariable"** %17, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 0
  %26 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %25, align 8
  %27 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %28 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %27, align 8
  %29 = icmp eq %"struct.gl::TransformFeedbackVarying"* %28, %26
  br i1 %29, label %35, label %30

30:                                               ; preds = %24, %30
  %31 = phi %"struct.gl::TransformFeedbackVarying"* [ %32, %30 ], [ %28, %24 ]
  %32 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %31, i64 -1
  %33 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %32, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %33) #16
  %34 = icmp eq %"struct.gl::TransformFeedbackVarying"* %32, %26
  br i1 %34, label %35, label %30

35:                                               ; preds = %30, %24
  store %"struct.gl::TransformFeedbackVarying"* %26, %"struct.gl::TransformFeedbackVarying"** %27, align 8
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27
  %37 = bitcast %"class.std::__1::vector.180"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 1
  %40 = bitcast i32** %39 to i64*
  store i64 %38, i64* %40, align 8
  %41 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 0
  %42 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %41, align 8
  %43 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 1
  %44 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %43, align 8
  %45 = icmp eq %"struct.gl::LinkedUniform"* %44, %42
  br i1 %45, label %53, label %46

46:                                               ; preds = %35, %46
  %47 = phi %"struct.gl::LinkedUniform"* [ %48, %46 ], [ %44, %35 ]
  %48 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %47, i64 -1
  %49 = bitcast %"struct.gl::LinkedUniform"* %48 to void (%"struct.gl::LinkedUniform"*)***
  %50 = load void (%"struct.gl::LinkedUniform"*)**, void (%"struct.gl::LinkedUniform"*)*** %49, align 8
  %51 = load void (%"struct.gl::LinkedUniform"*)*, void (%"struct.gl::LinkedUniform"*)** %50, align 8
  tail call void %51(%"struct.gl::LinkedUniform"* %48) #16
  %52 = icmp eq %"struct.gl::LinkedUniform"* %48, %42
  br i1 %52, label %53, label %46

53:                                               ; preds = %46, %35
  store %"struct.gl::LinkedUniform"* %42, %"struct.gl::LinkedUniform"** %43, align 8
  %54 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 0
  %55 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %54, align 8
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 1
  %57 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %56, align 8
  %58 = icmp eq %"struct.gl::InterfaceBlock"* %57, %55
  br i1 %58, label %66, label %59

59:                                               ; preds = %53, %59
  %60 = phi %"struct.gl::InterfaceBlock"* [ %61, %59 ], [ %57, %53 ]
  %61 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %60, i64 -1
  %62 = bitcast %"struct.gl::InterfaceBlock"* %61 to void (%"struct.gl::InterfaceBlock"*)***
  %63 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %62, align 8
  %64 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %63, align 8
  tail call void %64(%"struct.gl::InterfaceBlock"* %61) #16
  %65 = icmp eq %"struct.gl::InterfaceBlock"* %61, %55
  br i1 %65, label %66, label %59

66:                                               ; preds = %59, %53
  store %"struct.gl::InterfaceBlock"* %55, %"struct.gl::InterfaceBlock"** %56, align 8
  %67 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 34, i32 0
  store i64 0, i64* %67, align 8
  %68 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 0
  %69 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %68, align 8
  %70 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 1
  %71 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %70, align 8
  %72 = icmp eq %"struct.gl::InterfaceBlock"* %71, %69
  br i1 %72, label %80, label %73

73:                                               ; preds = %66, %73
  %74 = phi %"struct.gl::InterfaceBlock"* [ %75, %73 ], [ %71, %66 ]
  %75 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %74, i64 -1
  %76 = bitcast %"struct.gl::InterfaceBlock"* %75 to void (%"struct.gl::InterfaceBlock"*)***
  %77 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %76, align 8
  %78 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %77, align 8
  tail call void %78(%"struct.gl::InterfaceBlock"* %75) #16
  %79 = icmp eq %"struct.gl::InterfaceBlock"* %75, %69
  br i1 %79, label %80, label %73

80:                                               ; preds = %73, %66
  store %"struct.gl::InterfaceBlock"* %69, %"struct.gl::InterfaceBlock"** %70, align 8
  %81 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 0
  %82 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %81, align 8
  %83 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 1
  %84 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %83, align 8
  %85 = icmp eq %"struct.gl::InterfaceBlock"* %84, %82
  br i1 %85, label %93, label %86

86:                                               ; preds = %80, %86
  %87 = phi %"struct.gl::InterfaceBlock"* [ %88, %86 ], [ %84, %80 ]
  %88 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %87, i64 -1
  %89 = bitcast %"struct.gl::InterfaceBlock"* %88 to void (%"struct.gl::InterfaceBlock"*)***
  %90 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %89, align 8
  %91 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %90, align 8
  tail call void %91(%"struct.gl::InterfaceBlock"* %88) #16
  %92 = icmp eq %"struct.gl::InterfaceBlock"* %88, %82
  br i1 %92, label %93, label %86

93:                                               ; preds = %86, %80
  store %"struct.gl::InterfaceBlock"* %82, %"struct.gl::InterfaceBlock"** %83, align 8
  %94 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 0
  %95 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %94, align 8
  %96 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %97 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %96, align 8
  %98 = icmp eq %"struct.gl::ShaderVariableBuffer"* %97, %95
  br i1 %98, label %106, label %99

99:                                               ; preds = %93, %99
  %100 = phi %"struct.gl::ShaderVariableBuffer"* [ %101, %99 ], [ %97, %93 ]
  %101 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %100, i64 -1
  %102 = bitcast %"struct.gl::ShaderVariableBuffer"* %101 to void (%"struct.gl::ShaderVariableBuffer"*)***
  %103 = load void (%"struct.gl::ShaderVariableBuffer"*)**, void (%"struct.gl::ShaderVariableBuffer"*)*** %102, align 8
  %104 = load void (%"struct.gl::ShaderVariableBuffer"*)*, void (%"struct.gl::ShaderVariableBuffer"*)** %103, align 8
  tail call void %104(%"struct.gl::ShaderVariableBuffer"* %101) #16
  %105 = icmp eq %"struct.gl::ShaderVariableBuffer"* %101, %95
  br i1 %105, label %106, label %99

106:                                              ; preds = %99, %93
  store %"struct.gl::ShaderVariableBuffer"* %95, %"struct.gl::ShaderVariableBuffer"** %96, align 8
  %107 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 0
  %108 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %107, align 8
  %109 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 1
  %110 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %109, align 8
  %111 = icmp eq %"struct.sh::ShaderVariable"* %110, %108
  br i1 %111, label %116, label %112

112:                                              ; preds = %106, %112
  %113 = phi %"struct.sh::ShaderVariable"* [ %114, %112 ], [ %110, %106 ]
  %114 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %113, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %114) #16
  %115 = icmp eq %"struct.sh::ShaderVariable"* %114, %108
  br i1 %115, label %116, label %112

116:                                              ; preds = %112, %106
  store %"struct.sh::ShaderVariable"* %108, %"struct.sh::ShaderVariable"** %109, align 8
  %117 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21
  %118 = bitcast %"class.std::__1::vector.132"* %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 1
  %121 = bitcast %"struct.gl::VariableLocation"** %120 to i64*
  store i64 %119, i64* %121, align 8
  %122 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22
  %123 = bitcast %"class.std::__1::vector.132"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 1
  %126 = bitcast %"struct.gl::VariableLocation"** %125 to i64*
  store i64 %124, i64* %126, align 8
  %127 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 23
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 0
  %129 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %128, align 8
  %130 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 1
  %131 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %130, align 8
  %132 = icmp eq %"struct.gl::SamplerBinding"* %131, %129
  br i1 %132, label %137, label %133

133:                                              ; preds = %116, %133
  %134 = phi %"struct.gl::SamplerBinding"* [ %135, %133 ], [ %131, %116 ]
  %135 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %134, i64 -1
  tail call void @_ZN2gl14SamplerBindingD1Ev(%"struct.gl::SamplerBinding"* %135) #16
  %136 = icmp eq %"struct.gl::SamplerBinding"* %135, %129
  br i1 %136, label %137, label %133

137:                                              ; preds = %133, %116
  store %"struct.gl::SamplerBinding"* %129, %"struct.gl::SamplerBinding"** %130, align 8
  %138 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 0
  %139 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %138, align 8
  %140 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 1
  %141 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %140, align 8
  %142 = icmp eq %"struct.gl::ImageBinding"* %141, %139
  br i1 %142, label %147, label %143

143:                                              ; preds = %137, %143
  %144 = phi %"struct.gl::ImageBinding"* [ %145, %143 ], [ %141, %137 ]
  %145 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %144, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %145) #16
  %146 = icmp eq %"struct.gl::ImageBinding"* %145, %139
  br i1 %146, label %147, label %143

147:                                              ; preds = %143, %137
  store %"struct.gl::ImageBinding"* %139, %"struct.gl::ImageBinding"** %140, align 8
  %148 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 0
  %149 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %148, align 8
  %150 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 1
  %151 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %150, align 8
  %152 = icmp eq %"struct.gl::ImageBinding"* %151, %149
  br i1 %152, label %157, label %153

153:                                              ; preds = %147, %153
  %154 = phi %"struct.gl::ImageBinding"* [ %155, %153 ], [ %151, %147 ]
  %155 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %154, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %155) #16
  %156 = icmp eq %"struct.gl::ImageBinding"* %155, %149
  br i1 %156, label %157, label %153

157:                                              ; preds = %153, %147
  store %"struct.gl::ImageBinding"* %149, %"struct.gl::ImageBinding"** %150, align 8
  %158 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 43
  %159 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 60
  call void @llvm.memset.p0i8.i64(i8* align 8 %158, i8 0, i64 10, i1 false)
  store i8 4, i8* %159, align 8
  %160 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 61
  store i8 5, i8* %160, align 1
  %161 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 63
  store i32 1, i32* %161, align 4
  %162 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 64
  %163 = bitcast i32* %162 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutableC2ERKS0_(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"* dereferenceable(1728)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0
  tail call void @_ZN5angle7SubjectC2Ev(%"class.angle::Subject"* %3) #16
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl17ProgramExecutableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  tail call void @_ZN2gl7InfoLogC1Ev(%"class.gl::InfoLog"* %5) #16
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 2, i32 0
  %8 = load i8, i8* %7, align 1
  store i8 %8, i8* %6, align 1
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3, i32 0
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 3, i32 0
  %11 = load i8, i8* %10, align 1
  store i8 %11, i8* %9, align 1
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 5, i32 0
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %15 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  store i32 %17, i32* %15, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 8, i32 0
  %19 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 8, i32 0
  %20 = load i64, i64* %19, align 8
  store i64 %20, i64* %18, align 8
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 9, i32 0
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 9, i32 0
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %21, align 8
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10
  %25 = bitcast %"class.angle::BitSetArray"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #16
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"class.angle::BitSetArray", %"class.angle::BitSetArray"* %24, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  %30 = load i64, i64* %29, align 8
  %31 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  store i64 %30, i64* %31, align 8
  %32 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 11
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 11
  %34 = bitcast %"struct.std::__1::array.169"* %32 to i8*
  %35 = bitcast %"struct.std::__1::array.169"* %33 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 384, i1 false)
  %36 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 0
  %37 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 12, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 96, i1 false)
  %38 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13
  %39 = bitcast %"class.angle::BitSetArray"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #16
  %40 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 13, i32 0, i32 0, i64 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.angle::BitSetArray", %"class.angle::BitSetArray"* %38, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 13, i32 0, i32 0, i64 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13, i32 0, i32 0, i64 1, i32 0
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 14, i32 0, i64 0
  %47 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 14, i32 0, i64 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 96, i1 false)
  %48 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 0, i32 0
  %49 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 16, i32 0, i32 0, i64 0
  %50 = bitcast %"class.angle::BitSetT.168"* %49 to i8*
  %51 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 0, i32 0
  %52 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 16, i32 0, i32 0, i64 0
  %53 = bitcast %"class.angle::BitSetT.168"* %52 to i8*
  %54 = icmp ult i8* %48, %53
  %55 = icmp ult i8* %51, %50
  %56 = and i1 %54, %55
  br i1 %56, label %88, label %57

57:                                               ; preds = %2
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 0, i32 0
  %59 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 0, i32 0
  %60 = bitcast i8* %59 to <16 x i8>*
  %61 = load <16 x i8>, <16 x i8>* %60, align 1, !alias.scope !2
  %62 = bitcast i8* %58 to <16 x i8>*
  store <16 x i8> %61, <16 x i8>* %62, align 1, !alias.scope !5, !noalias !2
  %63 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 16, i32 0
  %64 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 16, i32 0
  %65 = bitcast i8* %64 to <16 x i8>*
  %66 = load <16 x i8>, <16 x i8>* %65, align 1, !alias.scope !2
  %67 = bitcast i8* %63 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %67, align 1, !alias.scope !5, !noalias !2
  %68 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 32, i32 0
  %69 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 32, i32 0
  %70 = bitcast i8* %69 to <16 x i8>*
  %71 = load <16 x i8>, <16 x i8>* %70, align 1, !alias.scope !2
  %72 = bitcast i8* %68 to <16 x i8>*
  store <16 x i8> %71, <16 x i8>* %72, align 1, !alias.scope !5, !noalias !2
  %73 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 48, i32 0
  %74 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 48, i32 0
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !2
  %77 = bitcast i8* %73 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %77, align 1, !alias.scope !5, !noalias !2
  %78 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 64, i32 0
  %79 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 64, i32 0
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !2
  %82 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %82, align 1, !alias.scope !5, !noalias !2
  %83 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 80, i32 0
  %84 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 80, i32 0
  %85 = bitcast i8* %84 to <16 x i8>*
  %86 = load <16 x i8>, <16 x i8>* %85, align 1, !alias.scope !2
  %87 = bitcast i8* %83 to <16 x i8>*
  store <16 x i8> %86, <16 x i8>* %87, align 1, !alias.scope !5, !noalias !2
  br label %115

88:                                               ; preds = %2, %88
  %89 = phi i64 [ %113, %88 ], [ 0, %2 ]
  %90 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %89, i32 0
  %91 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %89, i32 0
  %92 = load i8, i8* %91, align 1
  store i8 %92, i8* %90, align 1
  %93 = or i64 %89, 1
  %94 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %93, i32 0
  %95 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %93, i32 0
  %96 = load i8, i8* %95, align 1
  store i8 %96, i8* %94, align 1
  %97 = add nuw nsw i64 %89, 2
  %98 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %97, i32 0
  %99 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %97, i32 0
  %100 = load i8, i8* %99, align 1
  store i8 %100, i8* %98, align 1
  %101 = add nuw nsw i64 %89, 3
  %102 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %101, i32 0
  %103 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %101, i32 0
  %104 = load i8, i8* %103, align 1
  store i8 %104, i8* %102, align 1
  %105 = add nuw nsw i64 %89, 4
  %106 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %105, i32 0
  %107 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %105, i32 0
  %108 = load i8, i8* %107, align 1
  store i8 %108, i8* %106, align 1
  %109 = add nuw nsw i64 %89, 5
  %110 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %109, i32 0
  %111 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 15, i32 0, i64 %109, i32 0
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %110, align 1
  %113 = add nuw nsw i64 %89, 6
  %114 = icmp eq i64 %113, 96
  br i1 %114, label %115, label %88, !llvm.loop !7

115:                                              ; preds = %88, %57
  %116 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 16
  %117 = bitcast %"class.angle::BitSetArray"* %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #16
  %118 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 16, i32 0, i32 0, i64 0, i32 0
  %119 = load i64, i64* %118, align 8
  %120 = getelementptr inbounds %"class.angle::BitSetArray", %"class.angle::BitSetArray"* %116, i64 0, i32 0, i32 0, i64 0, i32 0
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 16, i32 0, i32 0, i64 1, i32 0
  %122 = load i64, i64* %121, align 8
  %123 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 16, i32 0, i32 0, i64 1, i32 0
  store i64 %122, i64* %123, align 8
  %124 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 0, i32 0
  %125 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 18
  %126 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 0, i32 0
  %127 = getelementptr %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 18
  %128 = icmp ult i8* %124, %127
  %129 = icmp ult i8* %126, %125
  %130 = and i1 %128, %129
  br i1 %130, label %162, label %131

131:                                              ; preds = %115
  %132 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 0, i32 0
  %133 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 0, i32 0
  %134 = bitcast i8* %133 to <16 x i8>*
  %135 = load <16 x i8>, <16 x i8>* %134, align 1, !alias.scope !9
  %136 = bitcast i8* %132 to <16 x i8>*
  store <16 x i8> %135, <16 x i8>* %136, align 1, !alias.scope !12, !noalias !9
  %137 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 16, i32 0
  %138 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 16, i32 0
  %139 = bitcast i8* %138 to <16 x i8>*
  %140 = load <16 x i8>, <16 x i8>* %139, align 1, !alias.scope !9
  %141 = bitcast i8* %137 to <16 x i8>*
  store <16 x i8> %140, <16 x i8>* %141, align 1, !alias.scope !12, !noalias !9
  %142 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 32, i32 0
  %143 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 32, i32 0
  %144 = bitcast i8* %143 to <16 x i8>*
  %145 = load <16 x i8>, <16 x i8>* %144, align 1, !alias.scope !9
  %146 = bitcast i8* %142 to <16 x i8>*
  store <16 x i8> %145, <16 x i8>* %146, align 1, !alias.scope !12, !noalias !9
  %147 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 48, i32 0
  %148 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 48, i32 0
  %149 = bitcast i8* %148 to <16 x i8>*
  %150 = load <16 x i8>, <16 x i8>* %149, align 1, !alias.scope !9
  %151 = bitcast i8* %147 to <16 x i8>*
  store <16 x i8> %150, <16 x i8>* %151, align 1, !alias.scope !12, !noalias !9
  %152 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 64, i32 0
  %153 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 64, i32 0
  %154 = bitcast i8* %153 to <16 x i8>*
  %155 = load <16 x i8>, <16 x i8>* %154, align 1, !alias.scope !9
  %156 = bitcast i8* %152 to <16 x i8>*
  store <16 x i8> %155, <16 x i8>* %156, align 1, !alias.scope !12, !noalias !9
  %157 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 80, i32 0
  %158 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 80, i32 0
  %159 = bitcast i8* %158 to <16 x i8>*
  %160 = load <16 x i8>, <16 x i8>* %159, align 1, !alias.scope !9
  %161 = bitcast i8* %157 to <16 x i8>*
  store <16 x i8> %160, <16 x i8>* %161, align 1, !alias.scope !12, !noalias !9
  br label %189

162:                                              ; preds = %115, %162
  %163 = phi i64 [ %187, %162 ], [ 0, %115 ]
  %164 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %163, i32 0
  %165 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %163, i32 0
  %166 = load i8, i8* %165, align 1
  store i8 %166, i8* %164, align 1
  %167 = or i64 %163, 1
  %168 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %167, i32 0
  %169 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %167, i32 0
  %170 = load i8, i8* %169, align 1
  store i8 %170, i8* %168, align 1
  %171 = add nuw nsw i64 %163, 2
  %172 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %171, i32 0
  %173 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %171, i32 0
  %174 = load i8, i8* %173, align 1
  store i8 %174, i8* %172, align 1
  %175 = add nuw nsw i64 %163, 3
  %176 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %175, i32 0
  %177 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %175, i32 0
  %178 = load i8, i8* %177, align 1
  store i8 %178, i8* %176, align 1
  %179 = add nuw nsw i64 %163, 4
  %180 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %179, i32 0
  %181 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %179, i32 0
  %182 = load i8, i8* %181, align 1
  store i8 %182, i8* %180, align 1
  %183 = add nuw nsw i64 %163, 5
  %184 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %183, i32 0
  %185 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 17, i32 0, i64 %183, i32 0
  %186 = load i8, i8* %185, align 1
  store i8 %186, i8* %184, align 1
  %187 = add nuw nsw i64 %163, 6
  %188 = icmp eq i64 %187, 96
  br i1 %188, label %189, label %162, !llvm.loop !14

189:                                              ; preds = %162, %131
  %190 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 18
  %191 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 18
  %192 = load i8, i8* %191, align 8, !range !15
  store i8 %192, i8* %190, align 8
  %193 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20
  %194 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 20
  %195 = bitcast %"class.std::__1::vector.70"* %193 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %195, i8 0, i64 24, i1 false) #16
  %196 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 20, i32 0, i32 1
  %197 = bitcast %"struct.sh::ShaderVariable"** %196 to i64*
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.std::__1::vector.70"* %194 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = sub i64 %198, %200
  %202 = sdiv exact i64 %201, 208
  %203 = icmp eq i64 %201, 0
  br i1 %203, label %232, label %204

204:                                              ; preds = %189
  %205 = icmp ugt i64 %202, 88686269585142075
  br i1 %205, label %206, label %208

206:                                              ; preds = %204
  %207 = bitcast %"class.std::__1::vector.70"* %193 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %207) #17
  unreachable

208:                                              ; preds = %204
  %209 = tail call i8* @_Znwm(i64 %201) #18
  %210 = bitcast i8* %209 to %"struct.sh::ShaderVariable"*
  %211 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 1
  %212 = bitcast %"struct.sh::ShaderVariable"** %211 to i8**
  store i8* %209, i8** %212, align 8
  %213 = bitcast %"class.std::__1::vector.70"* %193 to i8**
  store i8* %209, i8** %213, align 8
  %214 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %210, i64 %202
  %215 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  store %"struct.sh::ShaderVariable"* %214, %"struct.sh::ShaderVariable"** %215, align 8
  %216 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %194, i64 0, i32 0, i32 0
  %217 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %216, align 8
  %218 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %196, align 8
  %219 = bitcast %"struct.sh::ShaderVariable"** %211 to i64*
  %220 = ptrtoint i8* %209 to i64
  %221 = icmp eq %"struct.sh::ShaderVariable"* %217, %218
  br i1 %221, label %230, label %222

222:                                              ; preds = %208, %222
  %223 = phi %"struct.sh::ShaderVariable"* [ %226, %222 ], [ %210, %208 ]
  %224 = phi %"struct.sh::ShaderVariable"* [ %225, %222 ], [ %217, %208 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %223, %"struct.sh::ShaderVariable"* dereferenceable(208) %224) #16
  %225 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %224, i64 1
  %226 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %223, i64 1
  %227 = icmp eq %"struct.sh::ShaderVariable"* %225, %218
  br i1 %227, label %228, label %222

228:                                              ; preds = %222
  %229 = ptrtoint %"struct.sh::ShaderVariable"* %226 to i64
  br label %230

230:                                              ; preds = %228, %208
  %231 = phi i64 [ %220, %208 ], [ %229, %228 ]
  store i64 %231, i64* %219, align 8
  br label %232

232:                                              ; preds = %189, %230
  %233 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21
  %234 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 21
  %235 = bitcast %"class.std::__1::vector.132"* %233 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %235, i8 0, i64 24, i1 false) #16
  %236 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 21, i32 0, i32 1
  %237 = bitcast %"struct.gl::VariableLocation"** %236 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.std::__1::vector.132"* %234 to i64*
  %240 = load i64, i64* %239, align 8
  %241 = sub i64 %238, %240
  %242 = sdiv exact i64 %241, 12
  %243 = icmp eq i64 %241, 0
  br i1 %243, label %271, label %244

244:                                              ; preds = %232
  %245 = icmp ugt i64 %242, 1537228672809129301
  br i1 %245, label %246, label %248

246:                                              ; preds = %244
  %247 = bitcast %"class.std::__1::vector.132"* %233 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %247) #17
  unreachable

248:                                              ; preds = %244
  %249 = tail call i8* @_Znwm(i64 %241) #18
  %250 = bitcast i8* %249 to %"struct.gl::VariableLocation"*
  %251 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 1
  %252 = bitcast %"struct.gl::VariableLocation"** %251 to i8**
  store i8* %249, i8** %252, align 8
  %253 = bitcast %"class.std::__1::vector.132"* %233 to i8**
  store i8* %249, i8** %253, align 8
  %254 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %250, i64 %242
  %255 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::VariableLocation"* %254, %"struct.gl::VariableLocation"** %255, align 8
  %256 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %234, i64 0, i32 0, i32 0
  %257 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %256, align 8
  %258 = load i64, i64* %237, align 8
  %259 = bitcast %"struct.gl::VariableLocation"** %251 to i64*
  %260 = ptrtoint i8* %249 to i64
  %261 = ptrtoint %"struct.gl::VariableLocation"* %257 to i64
  %262 = sub i64 %258, %261
  %263 = icmp sgt i64 %262, 0
  br i1 %263, label %264, label %269

264:                                              ; preds = %248
  %265 = udiv exact i64 %262, 12
  %266 = bitcast %"struct.gl::VariableLocation"* %257 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %249, i8* align 4 %266, i64 %262, i1 false) #16
  %267 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %250, i64 %265
  %268 = ptrtoint %"struct.gl::VariableLocation"* %267 to i64
  br label %269

269:                                              ; preds = %264, %248
  %270 = phi i64 [ %268, %264 ], [ %260, %248 ]
  store i64 %270, i64* %259, align 8
  br label %271

271:                                              ; preds = %232, %269
  %272 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22
  %273 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 22
  %274 = bitcast %"class.std::__1::vector.132"* %272 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %274, i8 0, i64 24, i1 false) #16
  %275 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 22, i32 0, i32 1
  %276 = bitcast %"struct.gl::VariableLocation"** %275 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"class.std::__1::vector.132"* %273 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = sub i64 %277, %279
  %281 = sdiv exact i64 %280, 12
  %282 = icmp eq i64 %280, 0
  br i1 %282, label %310, label %283

283:                                              ; preds = %271
  %284 = icmp ugt i64 %281, 1537228672809129301
  br i1 %284, label %285, label %287

285:                                              ; preds = %283
  %286 = bitcast %"class.std::__1::vector.132"* %272 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %286) #17
  unreachable

287:                                              ; preds = %283
  %288 = tail call i8* @_Znwm(i64 %280) #18
  %289 = bitcast i8* %288 to %"struct.gl::VariableLocation"*
  %290 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 1
  %291 = bitcast %"struct.gl::VariableLocation"** %290 to i8**
  store i8* %288, i8** %291, align 8
  %292 = bitcast %"class.std::__1::vector.132"* %272 to i8**
  store i8* %288, i8** %292, align 8
  %293 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %289, i64 %281
  %294 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::VariableLocation"* %293, %"struct.gl::VariableLocation"** %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %273, i64 0, i32 0, i32 0
  %296 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %295, align 8
  %297 = load i64, i64* %276, align 8
  %298 = bitcast %"struct.gl::VariableLocation"** %290 to i64*
  %299 = ptrtoint i8* %288 to i64
  %300 = ptrtoint %"struct.gl::VariableLocation"* %296 to i64
  %301 = sub i64 %297, %300
  %302 = icmp sgt i64 %301, 0
  br i1 %302, label %303, label %308

303:                                              ; preds = %287
  %304 = udiv exact i64 %301, 12
  %305 = bitcast %"struct.gl::VariableLocation"* %296 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %288, i8* align 4 %305, i64 %301, i1 false) #16
  %306 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %289, i64 %304
  %307 = ptrtoint %"struct.gl::VariableLocation"* %306 to i64
  br label %308

308:                                              ; preds = %303, %287
  %309 = phi i64 [ %307, %303 ], [ %299, %287 ]
  store i64 %309, i64* %298, align 8
  br label %310

310:                                              ; preds = %271, %308
  %311 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 23
  %312 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 23
  %313 = load i8, i8* %312, align 8, !range !15
  store i8 %313, i8* %311, align 8
  %314 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25
  %315 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 25
  %316 = bitcast %"class.std::__1::vector.70"* %314 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %316, i8 0, i64 24, i1 false) #16
  %317 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 25, i32 0, i32 1
  %318 = bitcast %"struct.sh::ShaderVariable"** %317 to i64*
  %319 = load i64, i64* %318, align 8
  %320 = bitcast %"class.std::__1::vector.70"* %315 to i64*
  %321 = load i64, i64* %320, align 8
  %322 = sub i64 %319, %321
  %323 = sdiv exact i64 %322, 208
  %324 = icmp eq i64 %322, 0
  br i1 %324, label %353, label %325

325:                                              ; preds = %310
  %326 = icmp ugt i64 %323, 88686269585142075
  br i1 %326, label %327, label %329

327:                                              ; preds = %325
  %328 = bitcast %"class.std::__1::vector.70"* %314 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %328) #17
  unreachable

329:                                              ; preds = %325
  %330 = tail call i8* @_Znwm(i64 %322) #18
  %331 = bitcast i8* %330 to %"struct.sh::ShaderVariable"*
  %332 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 1
  %333 = bitcast %"struct.sh::ShaderVariable"** %332 to i8**
  store i8* %330, i8** %333, align 8
  %334 = bitcast %"class.std::__1::vector.70"* %314 to i8**
  store i8* %330, i8** %334, align 8
  %335 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %331, i64 %323
  %336 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 2, i32 0, i32 0
  store %"struct.sh::ShaderVariable"* %335, %"struct.sh::ShaderVariable"** %336, align 8
  %337 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %315, i64 0, i32 0, i32 0
  %338 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %337, align 8
  %339 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %317, align 8
  %340 = bitcast %"struct.sh::ShaderVariable"** %332 to i64*
  %341 = ptrtoint i8* %330 to i64
  %342 = icmp eq %"struct.sh::ShaderVariable"* %338, %339
  br i1 %342, label %351, label %343

343:                                              ; preds = %329, %343
  %344 = phi %"struct.sh::ShaderVariable"* [ %347, %343 ], [ %331, %329 ]
  %345 = phi %"struct.sh::ShaderVariable"* [ %346, %343 ], [ %338, %329 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %344, %"struct.sh::ShaderVariable"* dereferenceable(208) %345) #16
  %346 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %345, i64 1
  %347 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %344, i64 1
  %348 = icmp eq %"struct.sh::ShaderVariable"* %346, %339
  br i1 %348, label %349, label %343

349:                                              ; preds = %343
  %350 = ptrtoint %"struct.sh::ShaderVariable"* %347 to i64
  br label %351

351:                                              ; preds = %349, %329
  %352 = phi i64 [ %341, %329 ], [ %350, %349 ]
  store i64 %352, i64* %340, align 8
  br label %353

353:                                              ; preds = %310, %351
  %354 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %355 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 26
  %356 = bitcast %"class.std::__1::vector.173"* %354 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %356, i8 0, i64 24, i1 false) #16
  %357 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 26, i32 0, i32 1
  %358 = bitcast %"struct.gl::TransformFeedbackVarying"** %357 to i64*
  %359 = load i64, i64* %358, align 8
  %360 = bitcast %"class.std::__1::vector.173"* %355 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = sub i64 %359, %361
  %363 = sdiv exact i64 %362, 216
  %364 = icmp eq i64 %362, 0
  br i1 %364, label %398, label %365

365:                                              ; preds = %353
  %366 = icmp ugt i64 %363, 85401592933840516
  br i1 %366, label %367, label %369

367:                                              ; preds = %365
  %368 = bitcast %"class.std::__1::vector.173"* %354 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %368) #17
  unreachable

369:                                              ; preds = %365
  %370 = tail call i8* @_Znwm(i64 %362) #18
  %371 = bitcast i8* %370 to %"struct.gl::TransformFeedbackVarying"*
  %372 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %373 = bitcast %"struct.gl::TransformFeedbackVarying"** %372 to i8**
  store i8* %370, i8** %373, align 8
  %374 = bitcast %"class.std::__1::vector.173"* %354 to i8**
  store i8* %370, i8** %374, align 8
  %375 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %371, i64 %363
  %376 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::TransformFeedbackVarying"* %375, %"struct.gl::TransformFeedbackVarying"** %376, align 8
  %377 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %355, i64 0, i32 0, i32 0
  %378 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %377, align 8
  %379 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %357, align 8
  %380 = bitcast %"struct.gl::TransformFeedbackVarying"** %372 to i64*
  %381 = ptrtoint i8* %370 to i64
  %382 = icmp eq %"struct.gl::TransformFeedbackVarying"* %378, %379
  br i1 %382, label %396, label %383

383:                                              ; preds = %369, %383
  %384 = phi %"struct.gl::TransformFeedbackVarying"* [ %392, %383 ], [ %371, %369 ]
  %385 = phi %"struct.gl::TransformFeedbackVarying"* [ %391, %383 ], [ %378, %369 ]
  %386 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %384, i64 0, i32 0
  %387 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %385, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %386, %"struct.sh::ShaderVariable"* dereferenceable(208) %387) #16
  %388 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %384, i64 0, i32 1
  %389 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %385, i64 0, i32 1
  %390 = load i32, i32* %389, align 8
  store i32 %390, i32* %388, align 8
  %391 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %385, i64 1
  %392 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %384, i64 1
  %393 = icmp eq %"struct.gl::TransformFeedbackVarying"* %391, %379
  br i1 %393, label %394, label %383

394:                                              ; preds = %383
  %395 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %392 to i64
  br label %396

396:                                              ; preds = %394, %369
  %397 = phi i64 [ %381, %369 ], [ %395, %394 ]
  store i64 %397, i64* %380, align 8
  br label %398

398:                                              ; preds = %353, %396
  %399 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27
  %400 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 27
  %401 = bitcast %"class.std::__1::vector.180"* %399 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %401, i8 0, i64 24, i1 false) #16
  %402 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 27, i32 0, i32 1
  %403 = bitcast i32** %402 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.std::__1::vector.180"* %400 to i64*
  %406 = load i64, i64* %405, align 8
  %407 = sub i64 %404, %406
  %408 = ashr exact i64 %407, 2
  %409 = icmp eq i64 %407, 0
  br i1 %409, label %437, label %410

410:                                              ; preds = %398
  %411 = icmp ugt i64 %408, 4611686018427387903
  br i1 %411, label %412, label %414

412:                                              ; preds = %410
  %413 = bitcast %"class.std::__1::vector.180"* %399 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %413) #17
  unreachable

414:                                              ; preds = %410
  %415 = tail call i8* @_Znwm(i64 %407) #18
  %416 = bitcast i8* %415 to i32*
  %417 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 1
  %418 = bitcast i32** %417 to i8**
  store i8* %415, i8** %418, align 8
  %419 = bitcast %"class.std::__1::vector.180"* %399 to i8**
  store i8* %415, i8** %419, align 8
  %420 = getelementptr inbounds i32, i32* %416, i64 %408
  %421 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 2, i32 0, i32 0
  store i32* %420, i32** %421, align 8
  %422 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %400, i64 0, i32 0, i32 0
  %423 = load i32*, i32** %422, align 8
  %424 = load i64, i64* %403, align 8
  %425 = bitcast i32** %417 to i64*
  %426 = ptrtoint i8* %415 to i64
  %427 = ptrtoint i32* %423 to i64
  %428 = sub i64 %424, %427
  %429 = icmp sgt i64 %428, 0
  br i1 %429, label %430, label %435

430:                                              ; preds = %414
  %431 = lshr exact i64 %428, 2
  %432 = bitcast i32* %423 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %415, i8* align 4 %432, i64 %428, i1 false) #16
  %433 = getelementptr inbounds i32, i32* %416, i64 %431
  %434 = ptrtoint i32* %433 to i64
  br label %435

435:                                              ; preds = %430, %414
  %436 = phi i64 [ %434, %430 ], [ %426, %414 ]
  store i64 %436, i64* %425, align 8
  br label %437

437:                                              ; preds = %398, %435
  %438 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  %439 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 28
  %440 = load i32, i32* %439, align 8
  store i32 %440, i32* %438, align 8
  %441 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30
  %442 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30
  %443 = bitcast %"class.std::__1::vector.187"* %441 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %443, i8 0, i64 24, i1 false) #16
  %444 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30, i32 0, i32 1
  %445 = bitcast %"struct.gl::LinkedUniform"** %444 to i64*
  %446 = load i64, i64* %445, align 8
  %447 = bitcast %"class.std::__1::vector.187"* %442 to i64*
  %448 = load i64, i64* %447, align 8
  %449 = sub i64 %446, %448
  %450 = sdiv exact i64 %449, 280
  %451 = icmp eq i64 %449, 0
  br i1 %451, label %480, label %452

452:                                              ; preds = %437
  %453 = icmp ugt i64 %450, 65881228834676970
  br i1 %453, label %454, label %456

454:                                              ; preds = %452
  %455 = bitcast %"class.std::__1::vector.187"* %441 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %455) #17
  unreachable

456:                                              ; preds = %452
  %457 = tail call i8* @_Znwm(i64 %449) #18
  %458 = bitcast i8* %457 to %"struct.gl::LinkedUniform"*
  %459 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 1
  %460 = bitcast %"struct.gl::LinkedUniform"** %459 to i8**
  store i8* %457, i8** %460, align 8
  %461 = bitcast %"class.std::__1::vector.187"* %441 to i8**
  store i8* %457, i8** %461, align 8
  %462 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %458, i64 %450
  %463 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::LinkedUniform"* %462, %"struct.gl::LinkedUniform"** %463, align 8
  %464 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %442, i64 0, i32 0, i32 0
  %465 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %464, align 8
  %466 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %444, align 8
  %467 = bitcast %"struct.gl::LinkedUniform"** %459 to i64*
  %468 = ptrtoint i8* %457 to i64
  %469 = icmp eq %"struct.gl::LinkedUniform"* %465, %466
  br i1 %469, label %478, label %470

470:                                              ; preds = %456, %470
  %471 = phi %"struct.gl::LinkedUniform"* [ %474, %470 ], [ %458, %456 ]
  %472 = phi %"struct.gl::LinkedUniform"* [ %473, %470 ], [ %465, %456 ]
  tail call void @_ZN2gl13LinkedUniformC1ERKS0_(%"struct.gl::LinkedUniform"* %471, %"struct.gl::LinkedUniform"* dereferenceable(280) %472) #16
  %473 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %472, i64 1
  %474 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %471, i64 1
  %475 = icmp eq %"struct.gl::LinkedUniform"* %473, %466
  br i1 %475, label %476, label %470

476:                                              ; preds = %470
  %477 = ptrtoint %"struct.gl::LinkedUniform"* %474 to i64
  br label %478

478:                                              ; preds = %476, %456
  %479 = phi i64 [ %468, %456 ], [ %477, %476 ]
  store i64 %479, i64* %467, align 8
  br label %480

480:                                              ; preds = %437, %478
  %481 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31
  %482 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 31
  %483 = bitcast %"class.gl::Range"* %482 to i64*
  %484 = bitcast %"class.gl::Range"* %481 to i64*
  %485 = load i64, i64* %483, align 8
  store i64 %485, i64* %484, align 8
  %486 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 32
  %487 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 32
  %488 = bitcast %"class.gl::Range"* %487 to i64*
  %489 = bitcast %"class.gl::Range"* %486 to i64*
  %490 = load i64, i64* %488, align 8
  store i64 %490, i64* %489, align 8
  %491 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33
  %492 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 33
  tail call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.194"* %491, %"class.std::__1::vector.194"* dereferenceable(24) %492)
  %493 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 34, i32 0
  %494 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 34, i32 0
  %495 = load i64, i64* %494, align 8
  store i64 %495, i64* %493, align 8
  %496 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35
  %497 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 35
  %498 = bitcast %"class.std::__1::vector.202"* %496 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %498, i8 0, i64 24, i1 false) #16
  %499 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 35, i32 0, i32 1
  %500 = bitcast %"struct.gl::ShaderVariableBuffer"** %499 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = bitcast %"class.std::__1::vector.202"* %497 to i64*
  %503 = load i64, i64* %502, align 8
  %504 = sub i64 %501, %503
  %505 = sdiv exact i64 %504, 48
  %506 = icmp eq i64 %504, 0
  br i1 %506, label %535, label %507

507:                                              ; preds = %480
  %508 = icmp ugt i64 %505, 384307168202282325
  br i1 %508, label %509, label %511

509:                                              ; preds = %507
  %510 = bitcast %"class.std::__1::vector.202"* %496 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %510) #17
  unreachable

511:                                              ; preds = %507
  %512 = tail call i8* @_Znwm(i64 %504) #18
  %513 = bitcast i8* %512 to %"struct.gl::ShaderVariableBuffer"*
  %514 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %515 = bitcast %"struct.gl::ShaderVariableBuffer"** %514 to i8**
  store i8* %512, i8** %515, align 8
  %516 = bitcast %"class.std::__1::vector.202"* %496 to i8**
  store i8* %512, i8** %516, align 8
  %517 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %513, i64 %505
  %518 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::ShaderVariableBuffer"* %517, %"struct.gl::ShaderVariableBuffer"** %518, align 8
  %519 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %497, i64 0, i32 0, i32 0
  %520 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %519, align 8
  %521 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %499, align 8
  %522 = bitcast %"struct.gl::ShaderVariableBuffer"** %514 to i64*
  %523 = ptrtoint i8* %512 to i64
  %524 = icmp eq %"struct.gl::ShaderVariableBuffer"* %520, %521
  br i1 %524, label %533, label %525

525:                                              ; preds = %511, %525
  %526 = phi %"struct.gl::ShaderVariableBuffer"* [ %529, %525 ], [ %513, %511 ]
  %527 = phi %"struct.gl::ShaderVariableBuffer"* [ %528, %525 ], [ %520, %511 ]
  tail call void @_ZN2gl20ShaderVariableBufferC1ERKS0_(%"struct.gl::ShaderVariableBuffer"* %526, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %527) #16
  %528 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %527, i64 1
  %529 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %526, i64 1
  %530 = icmp eq %"struct.gl::ShaderVariableBuffer"* %528, %521
  br i1 %530, label %531, label %525

531:                                              ; preds = %525
  %532 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %529 to i64
  br label %533

533:                                              ; preds = %531, %511
  %534 = phi i64 [ %523, %511 ], [ %532, %531 ]
  store i64 %534, i64* %522, align 8
  br label %535

535:                                              ; preds = %480, %533
  %536 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 36
  %537 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 36
  %538 = bitcast %"class.gl::Range"* %537 to i64*
  %539 = bitcast %"class.gl::Range"* %536 to i64*
  %540 = load i64, i64* %538, align 8
  store i64 %540, i64* %539, align 8
  %541 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37
  %542 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 37
  tail call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.194"* %541, %"class.std::__1::vector.194"* dereferenceable(24) %542)
  %543 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38
  %544 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 38
  tail call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.194"* %543, %"class.std::__1::vector.194"* dereferenceable(24) %544)
  %545 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39
  %546 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 39
  %547 = bitcast %"class.gl::Range"* %546 to i64*
  %548 = bitcast %"class.gl::Range"* %545 to i64*
  %549 = load i64, i64* %547, align 8
  store i64 %549, i64* %548, align 8
  %550 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40
  %551 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 43
  %552 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 43
  %553 = bitcast %"class.std::__1::vector.209"* %550 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %553, i8 0, i64 72, i1 false)
  %554 = load i8, i8* %552, align 8, !range !15
  store i8 %554, i8* %551, align 8
  %555 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 44
  %556 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 44
  %557 = load i8, i8* %556, align 1, !range !15
  store i8 %557, i8* %555, align 1
  %558 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 45
  %559 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 45
  %560 = load i8, i8* %559, align 2, !range !15
  store i8 %560, i8* %558, align 2
  %561 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 46
  %562 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 46
  %563 = load i8, i8* %562, align 1, !range !15
  store i8 %563, i8* %561, align 1
  %564 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 47
  %565 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 47
  %566 = load i8, i8* %565, align 4, !range !15
  store i8 %566, i8* %564, align 4
  %567 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 48
  %568 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 48
  %569 = load i8, i8* %568, align 1, !range !15
  store i8 %569, i8* %567, align 1
  %570 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 49
  %571 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 49
  %572 = load i8, i8* %571, align 2, !range !15
  store i8 %572, i8* %570, align 2
  %573 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 50
  %574 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 50
  %575 = load i8, i8* %574, align 1, !range !15
  store i8 %575, i8* %573, align 1
  %576 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 51
  %577 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 51
  %578 = load i8, i8* %577, align 8, !range !15
  store i8 %578, i8* %576, align 8
  %579 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 52
  %580 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 52
  %581 = load i8, i8* %580, align 1, !range !15
  store i8 %581, i8* %579, align 1
  %582 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 53
  %583 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 53
  %584 = load i8, i8* %583, align 2, !range !15
  store i8 %584, i8* %582, align 2
  %585 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 54
  %586 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 54
  %587 = load i8, i8* %586, align 1, !range !15
  store i8 %587, i8* %585, align 1
  %588 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %589 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 55
  %590 = load i8, i8* %589, align 4, !range !15
  store i8 %590, i8* %588, align 4
  %591 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57
  %592 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 70, i32 0
  store i8 0, i8* %592, align 1
  %593 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 70, i32 1
  store i8 0, i8* %593, align 1
  %594 = bitcast %"class.angle::PackedEnumMap.223"* %591 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %594, i8 0, i64 288, i1 false)
  tail call void @_ZN2gl17ProgramExecutable5resetEv(%"class.gl::ProgramExecutable"* %0)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEEC2ERKS5_(%"class.std::__1::vector.194"*, %"class.std::__1::vector.194"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.std::__1::vector.194"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #16
  %4 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %1, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.gl::InterfaceBlock"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.194"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 112
  %11 = icmp eq i64 %9, 0
  br i1 %11, label %77, label %12

12:                                               ; preds = %2
  %13 = icmp ugt i64 %10, 164703072086692425
  br i1 %13, label %14, label %16

14:                                               ; preds = %12
  %15 = bitcast %"class.std::__1::vector.194"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %15) #17
  unreachable

16:                                               ; preds = %12
  %17 = tail call i8* @_Znwm(i64 %9) #18
  %18 = bitcast i8* %17 to %"struct.gl::InterfaceBlock"*
  %19 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 1
  %20 = bitcast %"struct.gl::InterfaceBlock"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.std::__1::vector.194"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %18, i64 %10
  %23 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.gl::InterfaceBlock"* %22, %"struct.gl::InterfaceBlock"** %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %1, i64 0, i32 0, i32 0
  %25 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %24, align 8
  %26 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %27 = bitcast %"struct.gl::InterfaceBlock"** %19 to i64*
  %28 = ptrtoint i8* %17 to i64
  %29 = icmp eq %"struct.gl::InterfaceBlock"* %25, %26
  br i1 %29, label %75, label %30

30:                                               ; preds = %16
  %31 = bitcast i8* %17 to %"struct.gl::InterfaceBlock"*
  br label %32

32:                                               ; preds = %67, %30
  %33 = phi %"struct.gl::InterfaceBlock"* [ %71, %67 ], [ %31, %30 ]
  %34 = phi %"struct.gl::InterfaceBlock"* [ %70, %67 ], [ %25, %30 ]
  %35 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 0, i32 0
  %36 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %35, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %36) #16
  %37 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %37, align 8
  %38 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %32
  %45 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %46 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* align 8 %46, i64 24, i1 false) #16
  br label %52

47:                                               ; preds = %32
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %38, i8* %49, i64 %51) #16
  br label %52

52:                                               ; preds = %47, %44
  %53 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 0, i32 2
  %54 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %62, label %59

59:                                               ; preds = %52
  %60 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %54 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #16
  br label %67

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %53, i8* %64, i64 %66) #16
  br label %67

67:                                               ; preds = %62, %59
  %68 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 0, i32 3
  %69 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 12, i1 false) #16
  %70 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 1
  %71 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 1
  %72 = icmp eq %"struct.gl::InterfaceBlock"* %70, %26
  br i1 %72, label %73, label %32

73:                                               ; preds = %67
  %74 = ptrtoint %"struct.gl::InterfaceBlock"* %71 to i64
  br label %75

75:                                               ; preds = %16, %73
  %76 = phi i64 [ %28, %16 ], [ %74, %73 ]
  store i64 %76, i64* %27, align 8
  br label %77

77:                                               ; preds = %2, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutableD2Ev(%"class.gl::ProgramExecutable"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl17ProgramExecutableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0
  tail call void @_ZNSt3__15arrayINS_6vectorIN2sh14ShaderVariableENS_9allocatorIS3_EEEELm6EED2Ev(%"struct.std::__1::array.224"* %3) #16
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0
  tail call void @_ZNSt3__15arrayINS_6vectorIN2sh14ShaderVariableENS_9allocatorIS3_EEEELm6EED2Ev(%"struct.std::__1::array.224"* %4) #16
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 0
  %6 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %5, align 8
  %7 = icmp eq %"struct.gl::ImageBinding"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 1
  %10 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %9, align 8
  %11 = icmp eq %"struct.gl::ImageBinding"* %10, %6
  br i1 %11, label %18, label %12

12:                                               ; preds = %8, %12
  %13 = phi %"struct.gl::ImageBinding"* [ %14, %12 ], [ %10, %8 ]
  %14 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %13, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %14) #16
  %15 = icmp eq %"struct.gl::ImageBinding"* %14, %6
  br i1 %15, label %16, label %12

16:                                               ; preds = %12
  %17 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %5, align 8
  br label %18

18:                                               ; preds = %16, %8
  %19 = phi %"struct.gl::ImageBinding"* [ %17, %16 ], [ %6, %8 ]
  store %"struct.gl::ImageBinding"* %6, %"struct.gl::ImageBinding"** %9, align 8
  %20 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %19, i64 0, i32 0
  tail call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %1, %18
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 0
  %23 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %22, align 8
  %24 = icmp eq %"struct.gl::ImageBinding"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 1
  %27 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %26, align 8
  %28 = icmp eq %"struct.gl::ImageBinding"* %27, %23
  br i1 %28, label %35, label %29

29:                                               ; preds = %25, %29
  %30 = phi %"struct.gl::ImageBinding"* [ %31, %29 ], [ %27, %25 ]
  %31 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %30, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %31) #16
  %32 = icmp eq %"struct.gl::ImageBinding"* %31, %23
  br i1 %32, label %33, label %29

33:                                               ; preds = %29
  %34 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %22, align 8
  br label %35

35:                                               ; preds = %33, %25
  %36 = phi %"struct.gl::ImageBinding"* [ %34, %33 ], [ %23, %25 ]
  store %"struct.gl::ImageBinding"* %23, %"struct.gl::ImageBinding"** %26, align 8
  %37 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %36, i64 0, i32 0
  tail call void @_ZdlPv(i8* %37) #18
  br label %38

38:                                               ; preds = %21, %35
  %39 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 0
  %40 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %39, align 8
  %41 = icmp eq %"struct.gl::SamplerBinding"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 1
  %44 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %43, align 8
  %45 = icmp eq %"struct.gl::SamplerBinding"* %44, %40
  br i1 %45, label %52, label %46

46:                                               ; preds = %42, %46
  %47 = phi %"struct.gl::SamplerBinding"* [ %48, %46 ], [ %44, %42 ]
  %48 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %47, i64 -1
  tail call void @_ZN2gl14SamplerBindingD1Ev(%"struct.gl::SamplerBinding"* %48) #16
  %49 = icmp eq %"struct.gl::SamplerBinding"* %48, %40
  br i1 %49, label %50, label %46

50:                                               ; preds = %46
  %51 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %39, align 8
  br label %52

52:                                               ; preds = %50, %42
  %53 = phi %"struct.gl::SamplerBinding"* [ %51, %50 ], [ %40, %42 ]
  store %"struct.gl::SamplerBinding"* %40, %"struct.gl::SamplerBinding"** %43, align 8
  %54 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %53, i64 0, i32 0
  tail call void @_ZdlPv(i8* %54) #18
  br label %55

55:                                               ; preds = %38, %52
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38
  %57 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %56, i64 0, i32 0, i32 0
  %58 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %57, align 8
  %59 = icmp eq %"struct.gl::InterfaceBlock"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %55
  %61 = bitcast %"struct.gl::InterfaceBlock"* %58 to i8*
  %62 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 1
  %63 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %62, align 8
  %64 = icmp eq %"struct.gl::InterfaceBlock"* %63, %58
  br i1 %64, label %75, label %65

65:                                               ; preds = %60, %65
  %66 = phi %"struct.gl::InterfaceBlock"* [ %67, %65 ], [ %63, %60 ]
  %67 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %66, i64 -1
  %68 = bitcast %"struct.gl::InterfaceBlock"* %67 to void (%"struct.gl::InterfaceBlock"*)***
  %69 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %68, align 8
  %70 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %69, align 8
  tail call void %70(%"struct.gl::InterfaceBlock"* %67) #16
  %71 = icmp eq %"struct.gl::InterfaceBlock"* %67, %58
  br i1 %71, label %72, label %65

72:                                               ; preds = %65
  %73 = bitcast %"class.std::__1::vector.194"* %56 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %60
  %76 = phi i8* [ %74, %72 ], [ %61, %60 ]
  store %"struct.gl::InterfaceBlock"* %58, %"struct.gl::InterfaceBlock"** %62, align 8
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %55, %75
  %78 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37
  %79 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %78, i64 0, i32 0, i32 0
  %80 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %79, align 8
  %81 = icmp eq %"struct.gl::InterfaceBlock"* %80, null
  br i1 %81, label %99, label %82

82:                                               ; preds = %77
  %83 = bitcast %"struct.gl::InterfaceBlock"* %80 to i8*
  %84 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 1
  %85 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %84, align 8
  %86 = icmp eq %"struct.gl::InterfaceBlock"* %85, %80
  br i1 %86, label %97, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.gl::InterfaceBlock"* [ %89, %87 ], [ %85, %82 ]
  %89 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %88, i64 -1
  %90 = bitcast %"struct.gl::InterfaceBlock"* %89 to void (%"struct.gl::InterfaceBlock"*)***
  %91 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %90, align 8
  %92 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %91, align 8
  tail call void %92(%"struct.gl::InterfaceBlock"* %89) #16
  %93 = icmp eq %"struct.gl::InterfaceBlock"* %89, %80
  br i1 %93, label %94, label %87

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::vector.194"* %78 to i8**
  %96 = load i8*, i8** %95, align 8
  br label %97

97:                                               ; preds = %94, %82
  %98 = phi i8* [ %96, %94 ], [ %83, %82 ]
  store %"struct.gl::InterfaceBlock"* %80, %"struct.gl::InterfaceBlock"** %84, align 8
  tail call void @_ZdlPv(i8* %98) #18
  br label %99

99:                                               ; preds = %77, %97
  %100 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35
  %101 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %100, i64 0, i32 0, i32 0
  %102 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %101, align 8
  %103 = icmp eq %"struct.gl::ShaderVariableBuffer"* %102, null
  br i1 %103, label %121, label %104

104:                                              ; preds = %99
  %105 = bitcast %"struct.gl::ShaderVariableBuffer"* %102 to i8*
  %106 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %107 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %106, align 8
  %108 = icmp eq %"struct.gl::ShaderVariableBuffer"* %107, %102
  br i1 %108, label %119, label %109

109:                                              ; preds = %104, %109
  %110 = phi %"struct.gl::ShaderVariableBuffer"* [ %111, %109 ], [ %107, %104 ]
  %111 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %110, i64 -1
  %112 = bitcast %"struct.gl::ShaderVariableBuffer"* %111 to void (%"struct.gl::ShaderVariableBuffer"*)***
  %113 = load void (%"struct.gl::ShaderVariableBuffer"*)**, void (%"struct.gl::ShaderVariableBuffer"*)*** %112, align 8
  %114 = load void (%"struct.gl::ShaderVariableBuffer"*)*, void (%"struct.gl::ShaderVariableBuffer"*)** %113, align 8
  tail call void %114(%"struct.gl::ShaderVariableBuffer"* %111) #16
  %115 = icmp eq %"struct.gl::ShaderVariableBuffer"* %111, %102
  br i1 %115, label %116, label %109

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector.202"* %100 to i8**
  %118 = load i8*, i8** %117, align 8
  br label %119

119:                                              ; preds = %116, %104
  %120 = phi i8* [ %118, %116 ], [ %105, %104 ]
  store %"struct.gl::ShaderVariableBuffer"* %102, %"struct.gl::ShaderVariableBuffer"** %106, align 8
  tail call void @_ZdlPv(i8* %120) #18
  br label %121

121:                                              ; preds = %99, %119
  %122 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33
  %123 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %122, i64 0, i32 0, i32 0
  %124 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %123, align 8
  %125 = icmp eq %"struct.gl::InterfaceBlock"* %124, null
  br i1 %125, label %143, label %126

126:                                              ; preds = %121
  %127 = bitcast %"struct.gl::InterfaceBlock"* %124 to i8*
  %128 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 1
  %129 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %128, align 8
  %130 = icmp eq %"struct.gl::InterfaceBlock"* %129, %124
  br i1 %130, label %141, label %131

131:                                              ; preds = %126, %131
  %132 = phi %"struct.gl::InterfaceBlock"* [ %133, %131 ], [ %129, %126 ]
  %133 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %132, i64 -1
  %134 = bitcast %"struct.gl::InterfaceBlock"* %133 to void (%"struct.gl::InterfaceBlock"*)***
  %135 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %134, align 8
  %136 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %135, align 8
  tail call void %136(%"struct.gl::InterfaceBlock"* %133) #16
  %137 = icmp eq %"struct.gl::InterfaceBlock"* %133, %124
  br i1 %137, label %138, label %131

138:                                              ; preds = %131
  %139 = bitcast %"class.std::__1::vector.194"* %122 to i8**
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %138, %126
  %142 = phi i8* [ %140, %138 ], [ %127, %126 ]
  store %"struct.gl::InterfaceBlock"* %124, %"struct.gl::InterfaceBlock"** %128, align 8
  tail call void @_ZdlPv(i8* %142) #18
  br label %143

143:                                              ; preds = %121, %141
  %144 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30
  %145 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %144, i64 0, i32 0, i32 0
  %146 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %145, align 8
  %147 = icmp eq %"struct.gl::LinkedUniform"* %146, null
  br i1 %147, label %165, label %148

148:                                              ; preds = %143
  %149 = bitcast %"struct.gl::LinkedUniform"* %146 to i8*
  %150 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 1
  %151 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %150, align 8
  %152 = icmp eq %"struct.gl::LinkedUniform"* %151, %146
  br i1 %152, label %163, label %153

153:                                              ; preds = %148, %153
  %154 = phi %"struct.gl::LinkedUniform"* [ %155, %153 ], [ %151, %148 ]
  %155 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %154, i64 -1
  %156 = bitcast %"struct.gl::LinkedUniform"* %155 to void (%"struct.gl::LinkedUniform"*)***
  %157 = load void (%"struct.gl::LinkedUniform"*)**, void (%"struct.gl::LinkedUniform"*)*** %156, align 8
  %158 = load void (%"struct.gl::LinkedUniform"*)*, void (%"struct.gl::LinkedUniform"*)** %157, align 8
  tail call void %158(%"struct.gl::LinkedUniform"* %155) #16
  %159 = icmp eq %"struct.gl::LinkedUniform"* %155, %146
  br i1 %159, label %160, label %153

160:                                              ; preds = %153
  %161 = bitcast %"class.std::__1::vector.187"* %144 to i8**
  %162 = load i8*, i8** %161, align 8
  br label %163

163:                                              ; preds = %160, %148
  %164 = phi i8* [ %162, %160 ], [ %149, %148 ]
  store %"struct.gl::LinkedUniform"* %146, %"struct.gl::LinkedUniform"** %150, align 8
  tail call void @_ZdlPv(i8* %164) #18
  br label %165

165:                                              ; preds = %143, %163
  %166 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 0
  %167 = load i32*, i32** %166, align 8
  %168 = icmp eq i32* %167, null
  br i1 %168, label %174, label %169

169:                                              ; preds = %165
  %170 = ptrtoint i32* %167 to i64
  %171 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  store i64 %170, i64* %172, align 8
  %173 = bitcast i32* %167 to i8*
  tail call void @_ZdlPv(i8* %173) #18
  br label %174

174:                                              ; preds = %165, %169
  %175 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %176 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %175, i64 0, i32 0, i32 0
  %177 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %176, align 8
  %178 = icmp eq %"struct.gl::TransformFeedbackVarying"* %177, null
  br i1 %178, label %194, label %179

179:                                              ; preds = %174
  %180 = bitcast %"struct.gl::TransformFeedbackVarying"* %177 to i8*
  %181 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %182 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %181, align 8
  %183 = icmp eq %"struct.gl::TransformFeedbackVarying"* %182, %177
  br i1 %183, label %192, label %184

184:                                              ; preds = %179, %184
  %185 = phi %"struct.gl::TransformFeedbackVarying"* [ %186, %184 ], [ %182, %179 ]
  %186 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %185, i64 -1
  %187 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %186, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %187) #16
  %188 = icmp eq %"struct.gl::TransformFeedbackVarying"* %186, %177
  br i1 %188, label %189, label %184

189:                                              ; preds = %184
  %190 = bitcast %"class.std::__1::vector.173"* %175 to i8**
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %189, %179
  %193 = phi i8* [ %191, %189 ], [ %180, %179 ]
  store %"struct.gl::TransformFeedbackVarying"* %177, %"struct.gl::TransformFeedbackVarying"** %181, align 8
  tail call void @_ZdlPv(i8* %193) #18
  br label %194

194:                                              ; preds = %174, %192
  %195 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25
  %196 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %195, i64 0, i32 0, i32 0
  %197 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %196, align 8
  %198 = icmp eq %"struct.sh::ShaderVariable"* %197, null
  br i1 %198, label %213, label %199

199:                                              ; preds = %194
  %200 = bitcast %"struct.sh::ShaderVariable"* %197 to i8*
  %201 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 1
  %202 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %201, align 8
  %203 = icmp eq %"struct.sh::ShaderVariable"* %202, %197
  br i1 %203, label %211, label %204

204:                                              ; preds = %199, %204
  %205 = phi %"struct.sh::ShaderVariable"* [ %206, %204 ], [ %202, %199 ]
  %206 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %205, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %206) #16
  %207 = icmp eq %"struct.sh::ShaderVariable"* %206, %197
  br i1 %207, label %208, label %204

208:                                              ; preds = %204
  %209 = bitcast %"class.std::__1::vector.70"* %195 to i8**
  %210 = load i8*, i8** %209, align 8
  br label %211

211:                                              ; preds = %208, %199
  %212 = phi i8* [ %210, %208 ], [ %200, %199 ]
  store %"struct.sh::ShaderVariable"* %197, %"struct.sh::ShaderVariable"** %201, align 8
  tail call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %194, %211
  %214 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 0
  %215 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %214, align 8
  %216 = icmp eq %"struct.gl::VariableLocation"* %215, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %213
  %218 = ptrtoint %"struct.gl::VariableLocation"* %215 to i64
  %219 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 1
  %220 = bitcast %"struct.gl::VariableLocation"** %219 to i64*
  store i64 %218, i64* %220, align 8
  %221 = bitcast %"struct.gl::VariableLocation"* %215 to i8*
  tail call void @_ZdlPv(i8* %221) #18
  br label %222

222:                                              ; preds = %213, %217
  %223 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 0
  %224 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %223, align 8
  %225 = icmp eq %"struct.gl::VariableLocation"* %224, null
  br i1 %225, label %231, label %226

226:                                              ; preds = %222
  %227 = ptrtoint %"struct.gl::VariableLocation"* %224 to i64
  %228 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 1
  %229 = bitcast %"struct.gl::VariableLocation"** %228 to i64*
  store i64 %227, i64* %229, align 8
  %230 = bitcast %"struct.gl::VariableLocation"* %224 to i8*
  tail call void @_ZdlPv(i8* %230) #18
  br label %231

231:                                              ; preds = %222, %226
  %232 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20
  %233 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %232, i64 0, i32 0, i32 0
  %234 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %233, align 8
  %235 = icmp eq %"struct.sh::ShaderVariable"* %234, null
  br i1 %235, label %250, label %236

236:                                              ; preds = %231
  %237 = bitcast %"struct.sh::ShaderVariable"* %234 to i8*
  %238 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 1
  %239 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %238, align 8
  %240 = icmp eq %"struct.sh::ShaderVariable"* %239, %234
  br i1 %240, label %248, label %241

241:                                              ; preds = %236, %241
  %242 = phi %"struct.sh::ShaderVariable"* [ %243, %241 ], [ %239, %236 ]
  %243 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %242, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %243) #16
  %244 = icmp eq %"struct.sh::ShaderVariable"* %243, %234
  br i1 %244, label %245, label %241

245:                                              ; preds = %241
  %246 = bitcast %"class.std::__1::vector.70"* %232 to i8**
  %247 = load i8*, i8** %246, align 8
  br label %248

248:                                              ; preds = %245, %236
  %249 = phi i8* [ %247, %245 ], [ %237, %236 ]
  store %"struct.sh::ShaderVariable"* %234, %"struct.sh::ShaderVariable"** %238, align 8
  tail call void @_ZdlPv(i8* %249) #18
  br label %250

250:                                              ; preds = %231, %248
  %251 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  tail call void @_ZN2gl7InfoLogD1Ev(%"class.gl::InfoLog"* %251) #16
  %252 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 0
  tail call void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"* %252) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2gl7InfoLogD1Ev(%"class.gl::InfoLog"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutableD0Ev(%"class.gl::ProgramExecutable"*) unnamed_addr #0 align 2 {
  tail call void @_ZN2gl17ProgramExecutableD2Ev(%"class.gl::ProgramExecutable"* %0) #16
  %2 = bitcast %"class.gl::ProgramExecutable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #18
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable4loadEbPNS_17BinaryInputStreamE(%"class.gl::ProgramExecutable"*, i1 zeroext, %"class.gl::BinaryInputStream"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.sh::ShaderVariable", align 8
  %5 = alloca %"struct.gl::LinkedUniform", align 8
  %6 = alloca %"struct.gl::InterfaceBlock", align 8
  %7 = alloca %"struct.gl::InterfaceBlock", align 8
  %8 = alloca %"struct.gl::ShaderVariableBuffer", align 8
  %9 = alloca %"struct.sh::ShaderVariable", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.sh::ShaderVariable", align 8
  %12 = alloca %"struct.gl::VariableLocation", align 4
  %13 = alloca %"struct.gl::VariableLocation", align 4
  %14 = alloca i8, align 1
  %15 = alloca i32, align 4
  %16 = alloca i8, align 1
  %17 = alloca i64, align 8
  %18 = alloca %"struct.gl::ImageBinding", align 8
  %19 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 4
  %22 = icmp ugt i64 %20, -5
  br i1 %22, label %27, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %25 = load i64, i64* %24, align 8
  %26 = icmp ugt i64 %21, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %23, %3
  %28 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %28, align 8
  br label %35

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %31 = load i8*, i8** %30, align 8
  %32 = getelementptr inbounds i8, i8* %31, i64 %20
  %33 = bitcast i8* %32 to i32*
  %34 = load i32, i32* %33, align 1
  store i64 %21, i64* %19, align 8
  br label %35

35:                                               ; preds = %27, %29
  %36 = phi i32 [ 0, %27 ], [ %34, %29 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 8, i32 0
  store i64 %37, i64* %38, align 8
  %39 = load i64, i64* %19, align 8
  %40 = add i64 %39, 4
  %41 = icmp ugt i64 %39, -5
  br i1 %41, label %46, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %44 = load i64, i64* %43, align 8
  %45 = icmp ugt i64 %40, %44
  br i1 %45, label %46, label %48

46:                                               ; preds = %42, %35
  %47 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %47, align 8
  br label %54

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %39
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 1
  store i64 %40, i64* %19, align 8
  br label %54

54:                                               ; preds = %46, %48
  %55 = phi i32 [ 0, %46 ], [ %53, %48 ]
  %56 = and i32 %55, 65535
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 9, i32 0
  store i64 %57, i64* %58, align 8
  %59 = load i64, i64* %19, align 8
  %60 = add i64 %59, 4
  %61 = icmp ugt i64 %59, -5
  br i1 %61, label %66, label %62

62:                                               ; preds = %54
  %63 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %64 = load i64, i64* %63, align 8
  %65 = icmp ugt i64 %60, %64
  br i1 %65, label %66, label %68

66:                                               ; preds = %62, %54
  %67 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %67, align 8
  br label %74

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %70 = load i8*, i8** %69, align 8
  %71 = getelementptr inbounds i8, i8* %70, i64 %59
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %72, align 1
  store i64 %60, i64* %19, align 8
  br label %74

74:                                               ; preds = %66, %68
  %75 = phi i32 [ 0, %66 ], [ %73, %68 ]
  %76 = and i32 %75, 65535
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  store i64 %77, i64* %78, align 8
  %79 = load i64, i64* %19, align 8
  %80 = add i64 %79, 4
  %81 = icmp ugt i64 %79, -5
  br i1 %81, label %86, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %84 = load i64, i64* %83, align 8
  %85 = icmp ugt i64 %80, %84
  br i1 %85, label %86, label %88

86:                                               ; preds = %82, %74
  %87 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %87, align 8
  br label %94

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %90 = load i8*, i8** %89, align 8
  %91 = getelementptr inbounds i8, i8* %90, i64 %79
  %92 = bitcast i8* %91 to i32*
  %93 = load i32, i32* %92, align 1
  store i64 %80, i64* %19, align 8
  br label %94

94:                                               ; preds = %86, %88
  %95 = phi i32 [ 0, %86 ], [ %93, %88 ]
  %96 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 6
  store i32 %95, i32* %96, align 8
  %97 = load i64, i64* %19, align 8
  %98 = add i64 %97, 4
  %99 = icmp ugt i64 %97, -5
  br i1 %99, label %104, label %100

100:                                              ; preds = %94
  %101 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %102 = load i64, i64* %101, align 8
  %103 = icmp ugt i64 %98, %102
  br i1 %103, label %104, label %106

104:                                              ; preds = %100, %94
  %105 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %105, align 8
  br label %113

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %108 = load i8*, i8** %107, align 8
  %109 = getelementptr inbounds i8, i8* %108, i64 %97
  %110 = bitcast i8* %109 to i32*
  %111 = load i32, i32* %110, align 1
  store i64 %98, i64* %19, align 8
  %112 = add i64 %97, 8
  br label %113

113:                                              ; preds = %104, %106
  %114 = phi i64 [ %98, %104 ], [ %112, %106 ]
  %115 = phi i64 [ %97, %104 ], [ %98, %106 ]
  %116 = phi i32 [ 0, %104 ], [ %111, %106 ]
  %117 = icmp ugt i64 %115, -5
  br i1 %117, label %122, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %120 = load i64, i64* %119, align 8
  %121 = icmp ugt i64 %114, %120
  br i1 %121, label %122, label %124

122:                                              ; preds = %118, %113
  %123 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %123, align 8
  br label %130

124:                                              ; preds = %118
  %125 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %126 = load i8*, i8** %125, align 8
  %127 = getelementptr inbounds i8, i8* %126, i64 %115
  %128 = bitcast i8* %127 to i32*
  %129 = load i32, i32* %128, align 1
  store i64 %114, i64* %19, align 8
  br label %130

130:                                              ; preds = %122, %124
  %131 = phi i32 [ 0, %122 ], [ %129, %124 ]
  %132 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39
  %133 = bitcast %"class.gl::Range"* %132 to i64*
  %134 = zext i32 %131 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %116 to i64
  %137 = or i64 %135, %136
  store i64 %137, i64* %133, align 8
  %138 = load i64, i64* %19, align 8
  %139 = add i64 %138, 4
  %140 = icmp ugt i64 %138, -5
  br i1 %140, label %145, label %141

141:                                              ; preds = %130
  %142 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %143 = load i64, i64* %142, align 8
  %144 = icmp ugt i64 %139, %143
  br i1 %144, label %145, label %147

145:                                              ; preds = %141, %130
  %146 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %146, align 8
  br label %154

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %149 = load i8*, i8** %148, align 8
  %150 = getelementptr inbounds i8, i8* %149, i64 %138
  %151 = bitcast i8* %150 to i32*
  %152 = load i32, i32* %151, align 1
  store i64 %139, i64* %19, align 8
  %153 = trunc i32 %152 to i8
  br label %154

154:                                              ; preds = %145, %147
  %155 = phi i8 [ 0, %145 ], [ %153, %147 ]
  %156 = and i8 %155, 63
  %157 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  store i8 %156, i8* %157, align 1
  %158 = load i64, i64* %19, align 8
  %159 = add i64 %158, 4
  %160 = icmp ugt i64 %158, -5
  br i1 %160, label %165, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %163 = load i64, i64* %162, align 8
  %164 = icmp ugt i64 %159, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %161, %154
  %166 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %166, align 8
  br label %174

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %169 = load i8*, i8** %168, align 8
  %170 = getelementptr inbounds i8, i8* %169, i64 %158
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 1
  store i64 %159, i64* %19, align 8
  %173 = trunc i32 %172 to i8
  br label %174

174:                                              ; preds = %165, %167
  %175 = phi i8 [ 0, %165 ], [ %173, %167 ]
  %176 = and i8 %175, 63
  %177 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3, i32 0
  store i8 %176, i8* %177, align 1
  %178 = load i64, i64* %19, align 8
  %179 = add i64 %178, 4
  %180 = icmp ugt i64 %178, -5
  br i1 %180, label %185, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %183 = load i64, i64* %182, align 8
  %184 = icmp ugt i64 %179, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %181, %174
  %186 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %186, align 8
  br label %194

187:                                              ; preds = %181
  %188 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %189 = load i8*, i8** %188, align 8
  %190 = getelementptr inbounds i8, i8* %189, i64 %178
  %191 = bitcast i8* %190 to i32*
  %192 = load i32, i32* %191, align 1
  store i64 %179, i64* %19, align 8
  %193 = icmp sgt i32 %192, 0
  br label %194

194:                                              ; preds = %185, %187
  %195 = phi i1 [ false, %185 ], [ %193, %187 ]
  %196 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %197 = zext i1 %195 to i8
  store i8 %197, i8* %196, align 4
  %198 = load i64, i64* %19, align 8
  %199 = add i64 %198, 4
  %200 = icmp ugt i64 %198, -5
  br i1 %200, label %205, label %201

201:                                              ; preds = %194
  %202 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %203 = load i64, i64* %202, align 8
  %204 = icmp ugt i64 %199, %203
  br i1 %204, label %205, label %207

205:                                              ; preds = %201, %194
  %206 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %206, align 8
  br label %214

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %209 = load i8*, i8** %208, align 8
  %210 = getelementptr inbounds i8, i8* %209, i64 %198
  %211 = bitcast i8* %210 to i32*
  %212 = load i32, i32* %211, align 1
  store i64 %199, i64* %19, align 8
  %213 = icmp sgt i32 %212, 0
  br label %214

214:                                              ; preds = %205, %207
  %215 = phi i1 [ false, %205 ], [ %213, %207 ]
  %216 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 43
  %217 = zext i1 %215 to i8
  store i8 %217, i8* %216, align 8
  %218 = load i64, i64* %19, align 8
  %219 = add i64 %218, 4
  %220 = icmp ugt i64 %218, -5
  br i1 %220, label %225, label %221

221:                                              ; preds = %214
  %222 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %223 = load i64, i64* %222, align 8
  %224 = icmp ugt i64 %219, %223
  br i1 %224, label %225, label %227

225:                                              ; preds = %221, %214
  %226 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %226, align 8
  br label %234

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds i8, i8* %229, i64 %218
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 1
  store i64 %219, i64* %19, align 8
  %233 = icmp sgt i32 %232, 0
  br label %234

234:                                              ; preds = %225, %227
  %235 = phi i1 [ false, %225 ], [ %233, %227 ]
  %236 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 44
  %237 = zext i1 %235 to i8
  store i8 %237, i8* %236, align 1
  %238 = load i64, i64* %19, align 8
  %239 = add i64 %238, 4
  %240 = icmp ugt i64 %238, -5
  br i1 %240, label %245, label %241

241:                                              ; preds = %234
  %242 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %243 = load i64, i64* %242, align 8
  %244 = icmp ugt i64 %239, %243
  br i1 %244, label %245, label %247

245:                                              ; preds = %241, %234
  %246 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %246, align 8
  br label %254

247:                                              ; preds = %241
  %248 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %249 = load i8*, i8** %248, align 8
  %250 = getelementptr inbounds i8, i8* %249, i64 %238
  %251 = bitcast i8* %250 to i32*
  %252 = load i32, i32* %251, align 1
  store i64 %239, i64* %19, align 8
  %253 = icmp sgt i32 %252, 0
  br label %254

254:                                              ; preds = %245, %247
  %255 = phi i1 [ false, %245 ], [ %253, %247 ]
  %256 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 45
  %257 = zext i1 %255 to i8
  store i8 %257, i8* %256, align 2
  %258 = load i64, i64* %19, align 8
  %259 = add i64 %258, 4
  %260 = icmp ugt i64 %258, -5
  br i1 %260, label %265, label %261

261:                                              ; preds = %254
  %262 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %263 = load i64, i64* %262, align 8
  %264 = icmp ugt i64 %259, %263
  br i1 %264, label %265, label %267

265:                                              ; preds = %261, %254
  %266 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %266, align 8
  br label %274

267:                                              ; preds = %261
  %268 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %269 = load i8*, i8** %268, align 8
  %270 = getelementptr inbounds i8, i8* %269, i64 %258
  %271 = bitcast i8* %270 to i32*
  %272 = load i32, i32* %271, align 1
  store i64 %259, i64* %19, align 8
  %273 = icmp sgt i32 %272, 0
  br label %274

274:                                              ; preds = %265, %267
  %275 = phi i1 [ false, %265 ], [ %273, %267 ]
  %276 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 46
  %277 = zext i1 %275 to i8
  store i8 %277, i8* %276, align 1
  %278 = load i64, i64* %19, align 8
  %279 = add i64 %278, 4
  %280 = icmp ugt i64 %278, -5
  br i1 %280, label %285, label %281

281:                                              ; preds = %274
  %282 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %283 = load i64, i64* %282, align 8
  %284 = icmp ugt i64 %279, %283
  br i1 %284, label %285, label %287

285:                                              ; preds = %281, %274
  %286 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %286, align 8
  br label %294

287:                                              ; preds = %281
  %288 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %289 = load i8*, i8** %288, align 8
  %290 = getelementptr inbounds i8, i8* %289, i64 %278
  %291 = bitcast i8* %290 to i32*
  %292 = load i32, i32* %291, align 1
  store i64 %279, i64* %19, align 8
  %293 = icmp sgt i32 %292, 0
  br label %294

294:                                              ; preds = %285, %287
  %295 = phi i1 [ false, %285 ], [ %293, %287 ]
  %296 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 47
  %297 = zext i1 %295 to i8
  store i8 %297, i8* %296, align 4
  %298 = load i64, i64* %19, align 8
  %299 = add i64 %298, 4
  %300 = icmp ugt i64 %298, -5
  br i1 %300, label %305, label %301

301:                                              ; preds = %294
  %302 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %303 = load i64, i64* %302, align 8
  %304 = icmp ugt i64 %299, %303
  br i1 %304, label %305, label %307

305:                                              ; preds = %301, %294
  %306 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %306, align 8
  br label %314

307:                                              ; preds = %301
  %308 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %309 = load i8*, i8** %308, align 8
  %310 = getelementptr inbounds i8, i8* %309, i64 %298
  %311 = bitcast i8* %310 to i32*
  %312 = load i32, i32* %311, align 1
  store i64 %299, i64* %19, align 8
  %313 = icmp sgt i32 %312, 0
  br label %314

314:                                              ; preds = %305, %307
  %315 = phi i1 [ false, %305 ], [ %313, %307 ]
  %316 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 48
  %317 = zext i1 %315 to i8
  store i8 %317, i8* %316, align 1
  %318 = load i64, i64* %19, align 8
  %319 = add i64 %318, 4
  %320 = icmp ugt i64 %318, -5
  br i1 %320, label %325, label %321

321:                                              ; preds = %314
  %322 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %323 = load i64, i64* %322, align 8
  %324 = icmp ugt i64 %319, %323
  br i1 %324, label %325, label %327

325:                                              ; preds = %321, %314
  %326 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %326, align 8
  br label %334

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %329 = load i8*, i8** %328, align 8
  %330 = getelementptr inbounds i8, i8* %329, i64 %318
  %331 = bitcast i8* %330 to i32*
  %332 = load i32, i32* %331, align 1
  store i64 %319, i64* %19, align 8
  %333 = icmp sgt i32 %332, 0
  br label %334

334:                                              ; preds = %325, %327
  %335 = phi i1 [ false, %325 ], [ %333, %327 ]
  %336 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 49
  %337 = zext i1 %335 to i8
  store i8 %337, i8* %336, align 2
  %338 = load i64, i64* %19, align 8
  %339 = add i64 %338, 4
  %340 = icmp ugt i64 %338, -5
  br i1 %340, label %345, label %341

341:                                              ; preds = %334
  %342 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %343 = load i64, i64* %342, align 8
  %344 = icmp ugt i64 %339, %343
  br i1 %344, label %345, label %347

345:                                              ; preds = %341, %334
  %346 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %346, align 8
  br label %354

347:                                              ; preds = %341
  %348 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %349 = load i8*, i8** %348, align 8
  %350 = getelementptr inbounds i8, i8* %349, i64 %338
  %351 = bitcast i8* %350 to i32*
  %352 = load i32, i32* %351, align 1
  store i64 %339, i64* %19, align 8
  %353 = icmp sgt i32 %352, 0
  br label %354

354:                                              ; preds = %345, %347
  %355 = phi i1 [ false, %345 ], [ %353, %347 ]
  %356 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 50
  %357 = zext i1 %355 to i8
  store i8 %357, i8* %356, align 1
  %358 = load i64, i64* %19, align 8
  %359 = add i64 %358, 4
  %360 = icmp ugt i64 %358, -5
  br i1 %360, label %365, label %361

361:                                              ; preds = %354
  %362 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %363 = load i64, i64* %362, align 8
  %364 = icmp ugt i64 %359, %363
  br i1 %364, label %365, label %367

365:                                              ; preds = %361, %354
  %366 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %366, align 8
  br label %374

367:                                              ; preds = %361
  %368 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %369 = load i8*, i8** %368, align 8
  %370 = getelementptr inbounds i8, i8* %369, i64 %358
  %371 = bitcast i8* %370 to i32*
  %372 = load i32, i32* %371, align 1
  store i64 %359, i64* %19, align 8
  %373 = icmp sgt i32 %372, 0
  br label %374

374:                                              ; preds = %365, %367
  %375 = phi i1 [ false, %365 ], [ %373, %367 ]
  %376 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 51
  %377 = zext i1 %375 to i8
  store i8 %377, i8* %376, align 8
  %378 = load i64, i64* %19, align 8
  %379 = add i64 %378, 4
  %380 = icmp ugt i64 %378, -5
  br i1 %380, label %385, label %381

381:                                              ; preds = %374
  %382 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %383 = load i64, i64* %382, align 8
  %384 = icmp ugt i64 %379, %383
  br i1 %384, label %385, label %387

385:                                              ; preds = %381, %374
  %386 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %386, align 8
  br label %394

387:                                              ; preds = %381
  %388 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %389 = load i8*, i8** %388, align 8
  %390 = getelementptr inbounds i8, i8* %389, i64 %378
  %391 = bitcast i8* %390 to i32*
  %392 = load i32, i32* %391, align 1
  store i64 %379, i64* %19, align 8
  %393 = icmp sgt i32 %392, 0
  br label %394

394:                                              ; preds = %385, %387
  %395 = phi i1 [ false, %385 ], [ %393, %387 ]
  %396 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 52
  %397 = zext i1 %395 to i8
  store i8 %397, i8* %396, align 1
  %398 = load i64, i64* %19, align 8
  %399 = add i64 %398, 4
  %400 = icmp ugt i64 %398, -5
  br i1 %400, label %405, label %401

401:                                              ; preds = %394
  %402 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %403 = load i64, i64* %402, align 8
  %404 = icmp ugt i64 %399, %403
  br i1 %404, label %405, label %407

405:                                              ; preds = %401, %394
  %406 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %406, align 8
  br label %414

407:                                              ; preds = %401
  %408 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %409 = load i8*, i8** %408, align 8
  %410 = getelementptr inbounds i8, i8* %409, i64 %398
  %411 = bitcast i8* %410 to i32*
  %412 = load i32, i32* %411, align 1
  store i64 %399, i64* %19, align 8
  %413 = trunc i32 %412 to i8
  br label %414

414:                                              ; preds = %405, %407
  %415 = phi i8 [ 0, %405 ], [ %413, %407 ]
  %416 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 60
  store i8 %415, i8* %416, align 8
  %417 = load i64, i64* %19, align 8
  %418 = add i64 %417, 4
  %419 = icmp ugt i64 %417, -5
  br i1 %419, label %424, label %420

420:                                              ; preds = %414
  %421 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %422 = load i64, i64* %421, align 8
  %423 = icmp ugt i64 %418, %422
  br i1 %423, label %424, label %426

424:                                              ; preds = %420, %414
  %425 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %425, align 8
  br label %433

426:                                              ; preds = %420
  %427 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %428 = load i8*, i8** %427, align 8
  %429 = getelementptr inbounds i8, i8* %428, i64 %417
  %430 = bitcast i8* %429 to i32*
  %431 = load i32, i32* %430, align 1
  store i64 %418, i64* %19, align 8
  %432 = trunc i32 %431 to i8
  br label %433

433:                                              ; preds = %424, %426
  %434 = phi i8 [ 0, %424 ], [ %432, %426 ]
  %435 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 61
  store i8 %434, i8* %435, align 1
  %436 = load i64, i64* %19, align 8
  %437 = add i64 %436, 4
  %438 = icmp ugt i64 %436, -5
  br i1 %438, label %443, label %439

439:                                              ; preds = %433
  %440 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %441 = load i64, i64* %440, align 8
  %442 = icmp ugt i64 %437, %441
  br i1 %442, label %443, label %445

443:                                              ; preds = %439, %433
  %444 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %444, align 8
  br label %451

445:                                              ; preds = %439
  %446 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %447 = load i8*, i8** %446, align 8
  %448 = getelementptr inbounds i8, i8* %447, i64 %436
  %449 = bitcast i8* %448 to i32*
  %450 = load i32, i32* %449, align 1
  store i64 %437, i64* %19, align 8
  br label %451

451:                                              ; preds = %443, %445
  %452 = phi i32 [ 0, %443 ], [ %450, %445 ]
  %453 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 63
  store i32 %452, i32* %453, align 4
  %454 = load i64, i64* %19, align 8
  %455 = add i64 %454, 4
  %456 = icmp ugt i64 %454, -5
  br i1 %456, label %461, label %457

457:                                              ; preds = %451
  %458 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %459 = load i64, i64* %458, align 8
  %460 = icmp ugt i64 %455, %459
  br i1 %460, label %461, label %463

461:                                              ; preds = %457, %451
  %462 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %462, align 8
  br label %469

463:                                              ; preds = %457
  %464 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %465 = load i8*, i8** %464, align 8
  %466 = getelementptr inbounds i8, i8* %465, i64 %454
  %467 = bitcast i8* %466 to i32*
  %468 = load i32, i32* %467, align 1
  store i64 %455, i64* %19, align 8
  br label %469

469:                                              ; preds = %461, %463
  %470 = phi i32 [ 0, %461 ], [ %468, %463 ]
  %471 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 64
  store i32 %470, i32* %471, align 8
  %472 = load i64, i64* %19, align 8
  %473 = add i64 %472, 4
  %474 = icmp ugt i64 %472, -5
  br i1 %474, label %479, label %475

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %477 = load i64, i64* %476, align 8
  %478 = icmp ugt i64 %473, %477
  br i1 %478, label %479, label %481

479:                                              ; preds = %475, %469
  %480 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %480, align 8
  br label %487

481:                                              ; preds = %475
  %482 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %483 = load i8*, i8** %482, align 8
  %484 = getelementptr inbounds i8, i8* %483, i64 %472
  %485 = bitcast i8* %484 to i32*
  %486 = load i32, i32* %485, align 1
  store i64 %473, i64* %19, align 8
  br label %487

487:                                              ; preds = %479, %481
  %488 = phi i32 [ 0, %479 ], [ %486, %481 ]
  %489 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 65
  store i32 %488, i32* %489, align 4
  %490 = load i64, i64* %19, align 8
  %491 = add i64 %490, 4
  %492 = icmp ugt i64 %490, -5
  br i1 %492, label %497, label %493

493:                                              ; preds = %487
  %494 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %495 = load i64, i64* %494, align 8
  %496 = icmp ugt i64 %491, %495
  br i1 %496, label %497, label %499

497:                                              ; preds = %493, %487
  %498 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %498, align 8
  br label %505

499:                                              ; preds = %493
  %500 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %501 = load i8*, i8** %500, align 8
  %502 = getelementptr inbounds i8, i8* %501, i64 %490
  %503 = bitcast i8* %502 to i32*
  %504 = load i32, i32* %503, align 1
  store i64 %491, i64* %19, align 8
  br label %505

505:                                              ; preds = %497, %499
  %506 = phi i32 [ 0, %497 ], [ %504, %499 ]
  %507 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 66
  store i32 %506, i32* %507, align 8
  %508 = load i64, i64* %19, align 8
  %509 = add i64 %508, 4
  %510 = icmp ugt i64 %508, -5
  br i1 %510, label %515, label %511

511:                                              ; preds = %505
  %512 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %513 = load i64, i64* %512, align 8
  %514 = icmp ugt i64 %509, %513
  br i1 %514, label %515, label %517

515:                                              ; preds = %511, %505
  %516 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %516, align 8
  br label %523

517:                                              ; preds = %511
  %518 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %519 = load i8*, i8** %518, align 8
  %520 = getelementptr inbounds i8, i8* %519, i64 %508
  %521 = bitcast i8* %520 to i32*
  %522 = load i32, i32* %521, align 1
  store i64 %509, i64* %19, align 8
  br label %523

523:                                              ; preds = %515, %517
  %524 = phi i32 [ 0, %515 ], [ %522, %517 ]
  %525 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 67
  store i32 %524, i32* %525, align 4
  %526 = load i64, i64* %19, align 8
  %527 = add i64 %526, 4
  %528 = icmp ugt i64 %526, -5
  br i1 %528, label %533, label %529

529:                                              ; preds = %523
  %530 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %531 = load i64, i64* %530, align 8
  %532 = icmp ugt i64 %527, %531
  br i1 %532, label %533, label %535

533:                                              ; preds = %529, %523
  %534 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %534, align 8
  br label %541

535:                                              ; preds = %529
  %536 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %537 = load i8*, i8** %536, align 8
  %538 = getelementptr inbounds i8, i8* %537, i64 %526
  %539 = bitcast i8* %538 to i32*
  %540 = load i32, i32* %539, align 1
  store i64 %527, i64* %19, align 8
  br label %541

541:                                              ; preds = %533, %535
  %542 = phi i32 [ 0, %533 ], [ %540, %535 ]
  %543 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 68
  store i32 %542, i32* %543, align 8
  %544 = load i64, i64* %19, align 8
  %545 = add i64 %544, 4
  %546 = icmp ugt i64 %544, -5
  br i1 %546, label %551, label %547

547:                                              ; preds = %541
  %548 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %549 = load i64, i64* %548, align 8
  %550 = icmp ugt i64 %545, %549
  br i1 %550, label %551, label %553

551:                                              ; preds = %547, %541
  %552 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %552, align 8
  br label %559

553:                                              ; preds = %547
  %554 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %555 = load i8*, i8** %554, align 8
  %556 = getelementptr inbounds i8, i8* %555, i64 %544
  %557 = bitcast i8* %556 to i32*
  %558 = load i32, i32* %557, align 1
  store i64 %545, i64* %19, align 8
  br label %559

559:                                              ; preds = %551, %553
  %560 = phi i32 [ 0, %551 ], [ %558, %553 ]
  %561 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 69
  store i32 %560, i32* %561, align 4
  %562 = load i64, i64* %19, align 8
  %563 = add i64 %562, 8
  %564 = icmp ugt i64 %562, -9
  br i1 %564, label %569, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %567 = load i64, i64* %566, align 8
  %568 = icmp ugt i64 %563, %567
  br i1 %568, label %569, label %571

569:                                              ; preds = %559, %565
  %570 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %570, align 8
  br label %590

571:                                              ; preds = %565
  %572 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %573 = load i8*, i8** %572, align 8
  %574 = getelementptr inbounds i8, i8* %573, i64 %562
  %575 = bitcast i8* %574 to i64*
  %576 = load i64, i64* %575, align 1
  store i64 %563, i64* %19, align 8
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %590, label %578

578:                                              ; preds = %571
  %579 = bitcast %"struct.sh::ShaderVariable"* %4 to i8*
  %580 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %581 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %582 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %583 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %4, i64 0, i32 11
  %584 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 1
  %585 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 2, i32 0, i32 0
  %586 = bitcast %"struct.sh::ShaderVariable"** %584 to i64*
  %587 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25
  br label %628

588:                                              ; preds = %651
  %589 = load i64, i64* %19, align 8
  br label %590

590:                                              ; preds = %569, %588, %571
  %591 = phi i64 [ %589, %588 ], [ %563, %571 ], [ %562, %569 ]
  %592 = add i64 %591, 8
  %593 = icmp ugt i64 %591, -9
  br i1 %593, label %598, label %594

594:                                              ; preds = %590
  %595 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %596 = load i64, i64* %595, align 8
  %597 = icmp ugt i64 %592, %596
  br i1 %597, label %598, label %600

598:                                              ; preds = %590, %594
  %599 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %599, align 8
  br label %656

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %602 = load i8*, i8** %601, align 8
  %603 = getelementptr inbounds i8, i8* %602, i64 %591
  %604 = bitcast i8* %603 to i64*
  %605 = load i64, i64* %604, align 1
  store i64 %592, i64* %19, align 8
  %606 = icmp eq i64 %605, 0
  br i1 %606, label %656, label %607

607:                                              ; preds = %600
  %608 = bitcast %"struct.gl::LinkedUniform"* %5 to i8*
  %609 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 1
  %610 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %611 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %612 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %613 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 3
  %614 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 4
  %615 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 5
  %616 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 5, i32 0, i32 1
  %617 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %618 = bitcast i32** %616 to i64*
  %619 = bitcast %"class.std::__1::vector"* %615 to i64*
  %620 = bitcast i32** %617 to i64*
  %621 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %609, i64 0, i32 0
  %622 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %5, i64 0, i32 2
  %623 = bitcast %"struct.gl::LinkedUniform"* %5 to %"struct.gl::ActiveVariable"*
  %624 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 1
  %625 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 2, i32 0, i32 0
  %626 = bitcast %"struct.gl::LinkedUniform"** %624 to i64*
  %627 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30
  br label %696

628:                                              ; preds = %651, %578
  %629 = phi i64 [ 0, %578 ], [ %652, %651 ]
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %579) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %579, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %4) #16
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* nonnull %4) #16
  %630 = load i64, i64* %19, align 8
  %631 = add i64 %630, 4
  %632 = icmp ugt i64 %630, -5
  br i1 %632, label %636, label %633

633:                                              ; preds = %628
  %634 = load i64, i64* %580, align 8
  %635 = icmp ugt i64 %631, %634
  br i1 %635, label %636, label %637

636:                                              ; preds = %633, %628
  store i8 1, i8* %582, align 8
  br label %642

637:                                              ; preds = %633
  %638 = load i8*, i8** %581, align 8
  %639 = getelementptr inbounds i8, i8* %638, i64 %630
  %640 = bitcast i8* %639 to i32*
  %641 = load i32, i32* %640, align 1
  store i64 %631, i64* %19, align 8
  br label %642

642:                                              ; preds = %636, %637
  %643 = phi i32 [ 0, %636 ], [ %641, %637 ]
  store i32 %643, i32* %583, align 4
  %644 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %584, align 8
  %645 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %585, align 8
  %646 = icmp eq %"struct.sh::ShaderVariable"* %644, %645
  br i1 %646, label %650, label %647

647:                                              ; preds = %642
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %644, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %4) #16
  %648 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %644, i64 1
  %649 = ptrtoint %"struct.sh::ShaderVariable"* %648 to i64
  store i64 %649, i64* %586, align 8
  br label %651

650:                                              ; preds = %642
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.70"* %587, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %4) #16
  br label %651

651:                                              ; preds = %647, %650
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %579) #16
  %652 = add nuw i64 %629, 1
  %653 = icmp eq i64 %652, %576
  br i1 %653, label %588, label %628

654:                                              ; preds = %806
  %655 = load i64, i64* %19, align 8
  br label %656

656:                                              ; preds = %598, %654, %600
  %657 = phi i64 [ %655, %654 ], [ %592, %600 ], [ %591, %598 ]
  %658 = add i64 %657, 8
  %659 = icmp ugt i64 %657, -9
  br i1 %659, label %664, label %660

660:                                              ; preds = %656
  %661 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %662 = load i64, i64* %661, align 8
  %663 = icmp ugt i64 %658, %662
  br i1 %663, label %664, label %666

664:                                              ; preds = %656, %660
  %665 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %665, align 8
  br label %826

666:                                              ; preds = %660
  %667 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %668 = load i8*, i8** %667, align 8
  %669 = getelementptr inbounds i8, i8* %668, i64 %657
  %670 = bitcast i8* %669 to i64*
  %671 = load i64, i64* %670, align 1
  store i64 %658, i64* %19, align 8
  %672 = icmp eq i64 %671, 0
  br i1 %672, label %826, label %673

673:                                              ; preds = %666
  %674 = bitcast %"struct.gl::InterfaceBlock"* %6 to i8*
  %675 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 1
  %676 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 2, i32 0, i32 0
  %677 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0
  %678 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 1
  %679 = bitcast %"class.std::__1::basic_string"* %678 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %680 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %679, i64 0, i32 1, i32 0
  %681 = bitcast %"class.std::__1::basic_string"* %678 to i8*
  %682 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %678, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %684 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 2
  %685 = bitcast %"class.std::__1::basic_string"* %684 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %686 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %685, i64 0, i32 1, i32 0
  %687 = bitcast %"class.std::__1::basic_string"* %684 to i8*
  %688 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %684, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %690 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 3
  %691 = bitcast %"struct.gl::InterfaceBlock"** %675 to i64*
  %692 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33
  %693 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0, i32 1
  %694 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 34, i32 0
  %695 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %6, i64 0, i32 0, i32 0, i32 0
  br label %868

696:                                              ; preds = %806, %607
  %697 = phi i64 [ 0, %607 ], [ %807, %806 ]
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %608) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %608, i8 -86, i64 280, i1 false)
  call void @_ZN2gl13LinkedUniformC1Ev(%"struct.gl::LinkedUniform"* nonnull %5) #16
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* %609) #16
  %698 = load i64, i64* %19, align 8
  %699 = add i64 %698, 4
  %700 = icmp ugt i64 %698, -5
  br i1 %700, label %704, label %701

701:                                              ; preds = %696
  %702 = load i64, i64* %610, align 8
  %703 = icmp ugt i64 %699, %702
  br i1 %703, label %704, label %705

704:                                              ; preds = %701, %696
  store i8 1, i8* %612, align 8
  br label %710

705:                                              ; preds = %701
  %706 = load i8*, i8** %611, align 8
  %707 = getelementptr inbounds i8, i8* %706, i64 %698
  %708 = bitcast i8* %707 to i32*
  %709 = load i32, i32* %708, align 1
  store i64 %699, i64* %19, align 8
  br label %710

710:                                              ; preds = %704, %705
  %711 = phi i32 [ 0, %704 ], [ %709, %705 ]
  store i32 %711, i32* %613, align 8
  call void @_ZN2gl19LoadBlockMemberInfoEPNS_17BinaryInputStreamEPN2sh15BlockMemberInfoE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::BlockMemberInfo"* %614) #16
  %712 = load i64, i64* %19, align 8
  %713 = add i64 %712, 8
  %714 = icmp ugt i64 %712, -9
  br i1 %714, label %718, label %715

715:                                              ; preds = %710
  %716 = load i64, i64* %610, align 8
  %717 = icmp ugt i64 %713, %716
  br i1 %717, label %718, label %719

718:                                              ; preds = %715, %710
  store i8 1, i8* %612, align 8
  br label %796

719:                                              ; preds = %715
  %720 = load i8*, i8** %611, align 8
  %721 = getelementptr inbounds i8, i8* %720, i64 %712
  %722 = bitcast i8* %721 to i64*
  %723 = load i64, i64* %722, align 1
  store i64 %713, i64* %19, align 8
  %724 = icmp eq i64 %723, 0
  br i1 %724, label %796, label %725

725:                                              ; preds = %719, %794
  %726 = phi i64 [ %795, %794 ], [ %713, %719 ]
  %727 = phi i64 [ %792, %794 ], [ 0, %719 ]
  %728 = add i64 %726, 4
  %729 = icmp ugt i64 %726, -5
  br i1 %729, label %733, label %730

730:                                              ; preds = %725
  %731 = load i64, i64* %610, align 8
  %732 = icmp ugt i64 %728, %731
  br i1 %732, label %733, label %734

733:                                              ; preds = %730, %725
  store i8 1, i8* %612, align 8
  br label %739

734:                                              ; preds = %730
  %735 = load i8*, i8** %611, align 8
  %736 = getelementptr inbounds i8, i8* %735, i64 %726
  %737 = bitcast i8* %736 to i32*
  %738 = load i32, i32* %737, align 1
  store i64 %728, i64* %19, align 8
  br label %739

739:                                              ; preds = %734, %733
  %740 = phi i32 [ 0, %733 ], [ %738, %734 ]
  %741 = load i32*, i32** %616, align 8
  %742 = load i32*, i32** %617, align 8
  %743 = icmp ult i32* %741, %742
  %744 = ptrtoint i32* %742 to i64
  br i1 %743, label %745, label %748

745:                                              ; preds = %739
  store i32 %740, i32* %741, align 4
  %746 = getelementptr inbounds i32, i32* %741, i64 1
  %747 = ptrtoint i32* %746 to i64
  store i64 %747, i64* %618, align 8
  br label %791

748:                                              ; preds = %739
  %749 = ptrtoint i32* %741 to i64
  %750 = load i64, i64* %619, align 8
  %751 = sub i64 %749, %750
  %752 = ashr exact i64 %751, 2
  %753 = add nsw i64 %752, 1
  %754 = icmp ugt i64 %753, 4611686018427387903
  br i1 %754, label %755, label %757

755:                                              ; preds = %748
  %756 = bitcast %"class.std::__1::vector"* %615 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %756) #17
  unreachable

757:                                              ; preds = %748
  %758 = sub i64 %744, %750
  %759 = ashr exact i64 %758, 2
  %760 = icmp ult i64 %759, 2305843009213693951
  br i1 %760, label %761, label %769

761:                                              ; preds = %757
  %762 = ashr exact i64 %758, 1
  %763 = icmp ult i64 %762, %753
  %764 = select i1 %763, i64 %753, i64 %762
  %765 = icmp eq i64 %764, 0
  br i1 %765, label %774, label %766

766:                                              ; preds = %761
  %767 = icmp ugt i64 %764, 4611686018427387903
  br i1 %767, label %768, label %769

768:                                              ; preds = %766
  call void @abort() #17
  unreachable

769:                                              ; preds = %766, %757
  %770 = phi i64 [ %764, %766 ], [ 4611686018427387903, %757 ]
  %771 = shl i64 %770, 2
  %772 = call i8* @_Znwm(i64 %771) #18
  %773 = bitcast i8* %772 to i32*
  br label %774

774:                                              ; preds = %769, %761
  %775 = phi i64 [ %770, %769 ], [ 0, %761 ]
  %776 = phi i8* [ %772, %769 ], [ null, %761 ]
  %777 = phi i32* [ %773, %769 ], [ null, %761 ]
  %778 = getelementptr inbounds i32, i32* %777, i64 %752
  %779 = getelementptr inbounds i32, i32* %777, i64 %775
  %780 = ptrtoint i32* %779 to i64
  store i32 %740, i32* %778, align 4
  %781 = getelementptr inbounds i32, i32* %778, i64 1
  %782 = ptrtoint i32* %781 to i64
  %783 = ptrtoint i32* %777 to i64
  %784 = icmp sgt i64 %751, 0
  br i1 %784, label %785, label %787

785:                                              ; preds = %774
  %786 = inttoptr i64 %750 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %776, i8* align 4 %786, i64 %751, i1 false) #16
  br label %787

787:                                              ; preds = %785, %774
  store i64 %783, i64* %619, align 8
  store i64 %782, i64* %618, align 8
  store i64 %780, i64* %620, align 8
  %788 = icmp eq i64 %750, 0
  br i1 %788, label %791, label %789

789:                                              ; preds = %787
  %790 = inttoptr i64 %750 to i8*
  call void @_ZdlPv(i8* %790) #18
  br label %791

791:                                              ; preds = %745, %787, %789
  %792 = add nuw i64 %727, 1
  %793 = icmp eq i64 %792, %723
  br i1 %793, label %796, label %794

794:                                              ; preds = %791
  %795 = load i64, i64* %19, align 8
  br label %725

796:                                              ; preds = %791, %718, %719
  %797 = load i32, i32* %621, align 8
  %798 = call dereferenceable(72) %"struct.gl::UniformTypeInfo"* @_ZN2gl18GetUniformTypeInfoEj(i32 %797) #16
  store %"struct.gl::UniformTypeInfo"* %798, %"struct.gl::UniformTypeInfo"** %622, align 8
  %799 = load i64, i64* %19, align 8
  %800 = add i64 %799, 4
  %801 = icmp ugt i64 %799, -5
  br i1 %801, label %812, label %809

802:                                              ; preds = %2290
  call void @_ZN2gl13LinkedUniformC1ERKS0_(%"struct.gl::LinkedUniform"* %2292, %"struct.gl::LinkedUniform"* nonnull dereferenceable(280) %5) #16
  %803 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %2292, i64 1
  %804 = ptrtoint %"struct.gl::LinkedUniform"* %803 to i64
  store i64 %804, i64* %626, align 8
  br label %806

805:                                              ; preds = %2290
  call void @_ZNSt3__16vectorIN2gl13LinkedUniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.187"* %627, %"struct.gl::LinkedUniform"* nonnull dereferenceable(280) %5) #16
  br label %806

806:                                              ; preds = %802, %805
  call void @_ZN2gl13LinkedUniformD1Ev(%"struct.gl::LinkedUniform"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %608) #16
  %807 = add nuw i64 %697, 1
  %808 = icmp eq i64 %807, %605
  br i1 %808, label %654, label %696

809:                                              ; preds = %796
  %810 = load i64, i64* %610, align 8
  %811 = icmp ugt i64 %800, %810
  br i1 %811, label %812, label %813

812:                                              ; preds = %809, %796
  store i8 1, i8* %612, align 8
  br label %819

813:                                              ; preds = %809
  %814 = load i8*, i8** %611, align 8
  %815 = getelementptr inbounds i8, i8* %814, i64 %799
  %816 = bitcast i8* %815 to i32*
  %817 = load i32, i32* %816, align 1
  store i64 %800, i64* %19, align 8
  %818 = icmp sgt i32 %817, 0
  br label %819

819:                                              ; preds = %812, %813
  %820 = phi i1 [ false, %812 ], [ %818, %813 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 0, i1 zeroext %820) #16
  %821 = load i64, i64* %19, align 8
  %822 = add i64 %821, 4
  %823 = icmp ugt i64 %821, -5
  br i1 %823, label %2229, label %2220

824:                                              ; preds = %921
  %825 = load i64, i64* %19, align 8
  br label %826

826:                                              ; preds = %664, %824, %666
  %827 = phi i64 [ %825, %824 ], [ %658, %666 ], [ %657, %664 ]
  %828 = add i64 %827, 8
  %829 = icmp ugt i64 %827, -9
  br i1 %829, label %834, label %830

830:                                              ; preds = %826
  %831 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %832 = load i64, i64* %831, align 8
  %833 = icmp ugt i64 %828, %832
  br i1 %833, label %834, label %836

834:                                              ; preds = %826, %830
  %835 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %835, align 8
  br label %926

836:                                              ; preds = %830
  %837 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %838 = load i8*, i8** %837, align 8
  %839 = getelementptr inbounds i8, i8* %838, i64 %827
  %840 = bitcast i8* %839 to i64*
  %841 = load i64, i64* %840, align 1
  store i64 %828, i64* %19, align 8
  %842 = icmp eq i64 %841, 0
  br i1 %842, label %926, label %843

843:                                              ; preds = %836
  %844 = bitcast %"struct.gl::InterfaceBlock"* %7 to i8*
  %845 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 1
  %846 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 2, i32 0, i32 0
  %847 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 0
  %848 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 1
  %849 = bitcast %"class.std::__1::basic_string"* %848 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %850 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %849, i64 0, i32 1, i32 0
  %851 = bitcast %"class.std::__1::basic_string"* %848 to i8*
  %852 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %848, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %853 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %854 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 2
  %855 = bitcast %"class.std::__1::basic_string"* %854 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %856 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %855, i64 0, i32 1, i32 0
  %857 = bitcast %"class.std::__1::basic_string"* %854 to i8*
  %858 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %854, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %860 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 3
  %861 = bitcast %"struct.gl::InterfaceBlock"** %845 to i64*
  %862 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37
  %863 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 1
  %864 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 2, i32 0, i32 0
  %865 = bitcast %"struct.gl::InterfaceBlock"** %863 to i64*
  %866 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38
  %867 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %7, i64 0, i32 0, i32 0, i32 0
  br label %949

868:                                              ; preds = %921, %673
  %869 = phi i64 [ 0, %673 ], [ %922, %921 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %674) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %674, i8 -86, i64 112, i1 false)
  call void @_ZN2gl14InterfaceBlockC1Ev(%"struct.gl::InterfaceBlock"* nonnull %6) #16
  call void @_ZN2gl18LoadInterfaceBlockEPNS_17BinaryInputStreamEPNS_14InterfaceBlockE(%"class.gl::BinaryInputStream"* %2, %"struct.gl::InterfaceBlock"* nonnull %6) #16
  %870 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %675, align 8
  %871 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %676, align 8
  %872 = icmp eq %"struct.gl::InterfaceBlock"* %870, %871
  br i1 %872, label %897, label %873

873:                                              ; preds = %868
  %874 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 0, i32 0
  call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %874, %"struct.gl::ShaderVariableBuffer"* nonnull dereferenceable(48) %677) #16
  %875 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %875, align 8
  %876 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 0, i32 1
  %877 = load i8, i8* %680, align 1
  %878 = icmp slt i8 %877, 0
  br i1 %878, label %881, label %879

879:                                              ; preds = %873
  %880 = bitcast %"class.std::__1::basic_string"* %876 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %880, i8* align 8 %681, i64 24, i1 false) #16
  br label %884

881:                                              ; preds = %873
  %882 = load i8*, i8** %682, align 8
  %883 = load i64, i64* %683, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %876, i8* %882, i64 %883) #16
  br label %884

884:                                              ; preds = %881, %879
  %885 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 0, i32 2
  %886 = load i8, i8* %686, align 1
  %887 = icmp slt i8 %886, 0
  br i1 %887, label %890, label %888

888:                                              ; preds = %884
  %889 = bitcast %"class.std::__1::basic_string"* %885 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %889, i8* align 8 %687, i64 24, i1 false) #16
  br label %893

890:                                              ; preds = %884
  %891 = load i8*, i8** %688, align 8
  %892 = load i64, i64* %689, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %885, i8* %891, i64 %892) #16
  br label %893

893:                                              ; preds = %890, %888
  %894 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %894, i8* align 8 %690, i64 12, i1 false) #16
  %895 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %870, i64 1
  %896 = ptrtoint %"struct.gl::InterfaceBlock"* %895 to i64
  store i64 %896, i64* %691, align 8
  br label %898

897:                                              ; preds = %868
  call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.194"* %692, %"struct.gl::InterfaceBlock"* nonnull dereferenceable(112) %6) #16
  br label %898

898:                                              ; preds = %893, %897
  %899 = load i32, i32* %693, align 4
  %900 = icmp eq i32 %899, 0
  %901 = shl i64 1, %869
  br i1 %900, label %906, label %902

902:                                              ; preds = %898
  %903 = and i64 %901, 1152921504606846975
  %904 = load i64, i64* %694, align 8
  %905 = or i64 %904, %903
  br label %910

906:                                              ; preds = %898
  %907 = xor i64 %901, -1
  %908 = load i64, i64* %694, align 8
  %909 = and i64 %908, %907
  br label %910

910:                                              ; preds = %902, %906
  %911 = phi i64 [ %905, %902 ], [ %909, %906 ]
  store i64 %911, i64* %694, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %695, align 8
  %912 = load i8, i8* %686, align 1
  %913 = icmp slt i8 %912, 0
  br i1 %913, label %914, label %916

914:                                              ; preds = %910
  %915 = load i8*, i8** %688, align 8
  call void @_ZdlPv(i8* %915) #18
  br label %916

916:                                              ; preds = %914, %910
  %917 = load i8, i8* %680, align 1
  %918 = icmp slt i8 %917, 0
  br i1 %918, label %919, label %921

919:                                              ; preds = %916
  %920 = load i8*, i8** %682, align 8
  call void @_ZdlPv(i8* %920) #18
  br label %921

921:                                              ; preds = %916, %919
  call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* nonnull %677) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %674) #16
  %922 = add nuw i64 %869, 1
  %923 = icmp eq i64 %922, %671
  br i1 %923, label %824, label %868

924:                                              ; preds = %1021
  %925 = load i64, i64* %19, align 8
  br label %926

926:                                              ; preds = %834, %924, %836
  %927 = phi i64 [ %925, %924 ], [ %828, %836 ], [ %827, %834 ]
  %928 = add i64 %927, 8
  %929 = icmp ugt i64 %927, -9
  br i1 %929, label %934, label %930

930:                                              ; preds = %926
  %931 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %932 = load i64, i64* %931, align 8
  %933 = icmp ugt i64 %928, %932
  br i1 %933, label %934, label %936

934:                                              ; preds = %926, %930
  %935 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %935, align 8
  br label %1026

936:                                              ; preds = %930
  %937 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %938 = load i8*, i8** %937, align 8
  %939 = getelementptr inbounds i8, i8* %938, i64 %927
  %940 = bitcast i8* %939 to i64*
  %941 = load i64, i64* %940, align 1
  store i64 %928, i64* %19, align 8
  %942 = icmp eq i64 %941, 0
  br i1 %942, label %1026, label %943

943:                                              ; preds = %936
  %944 = bitcast %"struct.gl::ShaderVariableBuffer"* %8 to i8*
  %945 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %946 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 2, i32 0, i32 0
  %947 = bitcast %"struct.gl::ShaderVariableBuffer"** %945 to i64*
  %948 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35
  br label %1066

949:                                              ; preds = %1021, %843
  %950 = phi i64 [ 0, %843 ], [ %1022, %1021 ]
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %844) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %844, i8 -86, i64 112, i1 false)
  call void @_ZN2gl14InterfaceBlockC1Ev(%"struct.gl::InterfaceBlock"* nonnull %7) #16
  call void @_ZN2gl18LoadInterfaceBlockEPNS_17BinaryInputStreamEPNS_14InterfaceBlockE(%"class.gl::BinaryInputStream"* %2, %"struct.gl::InterfaceBlock"* nonnull %7) #16
  %951 = load i8, i8* %196, align 4, !range !15
  %952 = icmp eq i8 %951, 0
  br i1 %952, label %982, label %953

953:                                              ; preds = %949
  %954 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %845, align 8
  %955 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %846, align 8
  %956 = icmp eq %"struct.gl::InterfaceBlock"* %954, %955
  br i1 %956, label %981, label %957

957:                                              ; preds = %953
  %958 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 0, i32 0
  call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %958, %"struct.gl::ShaderVariableBuffer"* nonnull dereferenceable(48) %847) #16
  %959 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %959, align 8
  %960 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 0, i32 1
  %961 = load i8, i8* %850, align 1
  %962 = icmp slt i8 %961, 0
  br i1 %962, label %965, label %963

963:                                              ; preds = %957
  %964 = bitcast %"class.std::__1::basic_string"* %960 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %964, i8* align 8 %851, i64 24, i1 false) #16
  br label %968

965:                                              ; preds = %957
  %966 = load i8*, i8** %852, align 8
  %967 = load i64, i64* %853, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %960, i8* %966, i64 %967) #16
  br label %968

968:                                              ; preds = %965, %963
  %969 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 0, i32 2
  %970 = load i8, i8* %856, align 1
  %971 = icmp slt i8 %970, 0
  br i1 %971, label %974, label %972

972:                                              ; preds = %968
  %973 = bitcast %"class.std::__1::basic_string"* %969 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %973, i8* align 8 %857, i64 24, i1 false) #16
  br label %977

974:                                              ; preds = %968
  %975 = load i8*, i8** %858, align 8
  %976 = load i64, i64* %859, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %969, i8* %975, i64 %976) #16
  br label %977

977:                                              ; preds = %974, %972
  %978 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %978, i8* align 8 %860, i64 12, i1 false) #16
  %979 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %954, i64 1
  %980 = ptrtoint %"struct.gl::InterfaceBlock"* %979 to i64
  store i64 %980, i64* %861, align 8
  br label %1011

981:                                              ; preds = %953
  call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.194"* %862, %"struct.gl::InterfaceBlock"* nonnull dereferenceable(112) %7) #16
  br label %1011

982:                                              ; preds = %949
  %983 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %863, align 8
  %984 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %864, align 8
  %985 = icmp eq %"struct.gl::InterfaceBlock"* %983, %984
  br i1 %985, label %1010, label %986

986:                                              ; preds = %982
  %987 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 0, i32 0
  call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %987, %"struct.gl::ShaderVariableBuffer"* nonnull dereferenceable(48) %847) #16
  %988 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %988, align 8
  %989 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 0, i32 1
  %990 = load i8, i8* %850, align 1
  %991 = icmp slt i8 %990, 0
  br i1 %991, label %994, label %992

992:                                              ; preds = %986
  %993 = bitcast %"class.std::__1::basic_string"* %989 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %993, i8* align 8 %851, i64 24, i1 false) #16
  br label %997

994:                                              ; preds = %986
  %995 = load i8*, i8** %852, align 8
  %996 = load i64, i64* %853, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %989, i8* %995, i64 %996) #16
  br label %997

997:                                              ; preds = %994, %992
  %998 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 0, i32 2
  %999 = load i8, i8* %856, align 1
  %1000 = icmp slt i8 %999, 0
  br i1 %1000, label %1003, label %1001

1001:                                             ; preds = %997
  %1002 = bitcast %"class.std::__1::basic_string"* %998 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1002, i8* align 8 %857, i64 24, i1 false) #16
  br label %1006

1003:                                             ; preds = %997
  %1004 = load i8*, i8** %858, align 8
  %1005 = load i64, i64* %859, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %998, i8* %1004, i64 %1005) #16
  br label %1006

1006:                                             ; preds = %1003, %1001
  %1007 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 0, i32 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %1007, i8* align 8 %860, i64 12, i1 false) #16
  %1008 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %983, i64 1
  %1009 = ptrtoint %"struct.gl::InterfaceBlock"* %1008 to i64
  store i64 %1009, i64* %865, align 8
  br label %1011

1010:                                             ; preds = %982
  call void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.194"* %866, %"struct.gl::InterfaceBlock"* nonnull dereferenceable(112) %7) #16
  br label %1011

1011:                                             ; preds = %1010, %1006, %981, %977
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %867, align 8
  %1012 = load i8, i8* %856, align 1
  %1013 = icmp slt i8 %1012, 0
  br i1 %1013, label %1014, label %1016

1014:                                             ; preds = %1011
  %1015 = load i8*, i8** %858, align 8
  call void @_ZdlPv(i8* %1015) #18
  br label %1016

1016:                                             ; preds = %1014, %1011
  %1017 = load i8, i8* %850, align 1
  %1018 = icmp slt i8 %1017, 0
  br i1 %1018, label %1019, label %1021

1019:                                             ; preds = %1016
  %1020 = load i8*, i8** %852, align 8
  call void @_ZdlPv(i8* %1020) #18
  br label %1021

1021:                                             ; preds = %1016, %1019
  call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* nonnull %847) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %844) #16
  %1022 = add nuw i64 %950, 1
  %1023 = icmp eq i64 %1022, %841
  br i1 %1023, label %924, label %949

1024:                                             ; preds = %1075
  %1025 = load i64, i64* %19, align 8
  br label %1026

1026:                                             ; preds = %934, %1024, %936
  %1027 = phi i64 [ %1025, %1024 ], [ %928, %936 ], [ %927, %934 ]
  %1028 = add i64 %1027, 8
  %1029 = icmp ugt i64 %1027, -9
  br i1 %1029, label %1034, label %1030

1030:                                             ; preds = %1026
  %1031 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1032 = load i64, i64* %1031, align 8
  %1033 = icmp ugt i64 %1028, %1032
  br i1 %1033, label %1034, label %1036

1034:                                             ; preds = %1026, %1030
  %1035 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1035, align 8
  br label %1080

1036:                                             ; preds = %1030
  %1037 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1038 = load i8*, i8** %1037, align 8
  %1039 = getelementptr inbounds i8, i8* %1038, i64 %1027
  %1040 = bitcast i8* %1039 to i64*
  %1041 = load i64, i64* %1040, align 1
  store i64 %1028, i64* %19, align 8
  %1042 = icmp eq i64 %1041, 0
  br i1 %1042, label %1080, label %1043

1043:                                             ; preds = %1036
  %1044 = bitcast %"struct.sh::ShaderVariable"* %9 to i8*
  %1045 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 4
  %1046 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1047 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1048 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1049 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 4, i32 0, i32 1
  %1050 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %1051 = bitcast i32** %1049 to i64*
  %1052 = bitcast %"class.std::__1::vector"* %1045 to i64*
  %1053 = bitcast i32** %1050 to i64*
  %1054 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 0
  %1055 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 2
  %1056 = bitcast %"class.std::__1::basic_string"* %1055 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1057 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1056, i64 0, i32 1, i32 0
  %1058 = bitcast %"class.std::__1::basic_string"* %1055 to i8*
  %1059 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %1060 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1055, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1061 = bitcast i32* %10 to i8*
  %1062 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %1063 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  %1064 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %1065 = bitcast %"struct.gl::TransformFeedbackVarying"** %1062 to i64*
  br label %1126

1066:                                             ; preds = %1075, %943
  %1067 = phi i64 [ 0, %943 ], [ %1076, %1075 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %944) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %944, i8 -86, i64 48, i1 false)
  call void @_ZN2gl20ShaderVariableBufferC1Ev(%"struct.gl::ShaderVariableBuffer"* nonnull %8) #16
  call void @_ZN2gl24LoadShaderVariableBufferEPNS_17BinaryInputStreamEPNS_20ShaderVariableBufferE(%"class.gl::BinaryInputStream"* %2, %"struct.gl::ShaderVariableBuffer"* nonnull %8) #16
  %1068 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %945, align 8
  %1069 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %946, align 8
  %1070 = icmp eq %"struct.gl::ShaderVariableBuffer"* %1068, %1069
  br i1 %1070, label %1074, label %1071

1071:                                             ; preds = %1066
  call void @_ZN2gl20ShaderVariableBufferC1ERKS0_(%"struct.gl::ShaderVariableBuffer"* %1068, %"struct.gl::ShaderVariableBuffer"* nonnull dereferenceable(48) %8) #16
  %1072 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %1068, i64 1
  %1073 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %1072 to i64
  store i64 %1073, i64* %947, align 8
  br label %1075

1074:                                             ; preds = %1066
  call void @_ZNSt3__16vectorIN2gl20ShaderVariableBufferENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.202"* %948, %"struct.gl::ShaderVariableBuffer"* nonnull dereferenceable(48) %8) #16
  br label %1075

1075:                                             ; preds = %1071, %1074
  call void @_ZN2gl20ShaderVariableBufferD1Ev(%"struct.gl::ShaderVariableBuffer"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %944) #16
  %1076 = add nuw i64 %1067, 1
  %1077 = icmp eq i64 %1076, %941
  br i1 %1077, label %1024, label %1066

1078:                                             ; preds = %1292
  %1079 = load i64, i64* %19, align 8
  br label %1080

1080:                                             ; preds = %1034, %1078, %1036
  %1081 = phi i64 [ %1079, %1078 ], [ %1028, %1036 ], [ %1027, %1034 ]
  %1082 = add i64 %1081, 4
  %1083 = icmp ugt i64 %1081, -5
  br i1 %1083, label %1088, label %1084

1084:                                             ; preds = %1080
  %1085 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1086 = load i64, i64* %1085, align 8
  %1087 = icmp ugt i64 %1082, %1086
  br i1 %1087, label %1088, label %1090

1088:                                             ; preds = %1084, %1080
  %1089 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1089, align 8
  br label %1096

1090:                                             ; preds = %1084
  %1091 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1092 = load i8*, i8** %1091, align 8
  %1093 = getelementptr inbounds i8, i8* %1092, i64 %1081
  %1094 = bitcast i8* %1093 to i32*
  %1095 = load i32, i32* %1094, align 1
  store i64 %1082, i64* %19, align 8
  br label %1096

1096:                                             ; preds = %1088, %1090
  %1097 = phi i32 [ 0, %1088 ], [ %1095, %1090 ]
  %1098 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  store i32 %1097, i32* %1098, align 8
  %1099 = load i64, i64* %19, align 8
  %1100 = add i64 %1099, 8
  %1101 = icmp ugt i64 %1099, -9
  br i1 %1101, label %1106, label %1102

1102:                                             ; preds = %1096
  %1103 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1104 = load i64, i64* %1103, align 8
  %1105 = icmp ugt i64 %1100, %1104
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1096, %1102
  %1107 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1107, align 8
  br label %1297

1108:                                             ; preds = %1102
  %1109 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1110 = load i8*, i8** %1109, align 8
  %1111 = getelementptr inbounds i8, i8* %1110, i64 %1099
  %1112 = bitcast i8* %1111 to i64*
  %1113 = load i64, i64* %1112, align 1
  store i64 %1100, i64* %19, align 8
  %1114 = icmp eq i64 %1113, 0
  br i1 %1114, label %1297, label %1115

1115:                                             ; preds = %1108
  %1116 = bitcast %"struct.sh::ShaderVariable"* %11 to i8*
  %1117 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1118 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1119 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1120 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %11, i64 0, i32 11
  %1121 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %11, i64 0, i32 19
  %1122 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 1
  %1123 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 2, i32 0, i32 0
  %1124 = bitcast %"struct.sh::ShaderVariable"** %1122 to i64*
  %1125 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20
  br label %1330

1126:                                             ; preds = %1292, %1043
  %1127 = phi i64 [ 0, %1043 ], [ %1293, %1292 ]
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %1044) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1044, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %9) #16
  %1128 = load i64, i64* %19, align 8
  %1129 = add i64 %1128, 8
  %1130 = icmp ugt i64 %1128, -9
  br i1 %1130, label %1134, label %1131

1131:                                             ; preds = %1126
  %1132 = load i64, i64* %1046, align 8
  %1133 = icmp ugt i64 %1129, %1132
  br i1 %1133, label %1134, label %1135

1134:                                             ; preds = %1131, %1126
  store i8 1, i8* %1048, align 8
  br label %1211

1135:                                             ; preds = %1131
  %1136 = load i8*, i8** %1047, align 8
  %1137 = getelementptr inbounds i8, i8* %1136, i64 %1128
  %1138 = bitcast i8* %1137 to i64*
  %1139 = load i64, i64* %1138, align 1
  store i64 %1129, i64* %19, align 8
  %1140 = icmp eq i64 %1139, 0
  br i1 %1140, label %1211, label %1141

1141:                                             ; preds = %1135, %1207
  %1142 = phi i64 [ %1210, %1207 ], [ %1129, %1135 ]
  %1143 = phi i64 [ %1208, %1207 ], [ 0, %1135 ]
  %1144 = add i64 %1142, 4
  %1145 = icmp ugt i64 %1142, -5
  br i1 %1145, label %1149, label %1146

1146:                                             ; preds = %1141
  %1147 = load i64, i64* %1046, align 8
  %1148 = icmp ugt i64 %1144, %1147
  br i1 %1148, label %1149, label %1150

1149:                                             ; preds = %1146, %1141
  store i8 1, i8* %1048, align 8
  br label %1155

1150:                                             ; preds = %1146
  %1151 = load i8*, i8** %1047, align 8
  %1152 = getelementptr inbounds i8, i8* %1151, i64 %1142
  %1153 = bitcast i8* %1152 to i32*
  %1154 = load i32, i32* %1153, align 1
  store i64 %1144, i64* %19, align 8
  br label %1155

1155:                                             ; preds = %1150, %1149
  %1156 = phi i32 [ 0, %1149 ], [ %1154, %1150 ]
  %1157 = load i32*, i32** %1049, align 8
  %1158 = load i32*, i32** %1050, align 8
  %1159 = icmp ult i32* %1157, %1158
  %1160 = ptrtoint i32* %1158 to i64
  br i1 %1159, label %1161, label %1164

1161:                                             ; preds = %1155
  store i32 %1156, i32* %1157, align 4
  %1162 = getelementptr inbounds i32, i32* %1157, i64 1
  %1163 = ptrtoint i32* %1162 to i64
  store i64 %1163, i64* %1051, align 8
  br label %1207

1164:                                             ; preds = %1155
  %1165 = ptrtoint i32* %1157 to i64
  %1166 = load i64, i64* %1052, align 8
  %1167 = sub i64 %1165, %1166
  %1168 = ashr exact i64 %1167, 2
  %1169 = add nsw i64 %1168, 1
  %1170 = icmp ugt i64 %1169, 4611686018427387903
  br i1 %1170, label %1171, label %1173

1171:                                             ; preds = %1164
  %1172 = bitcast %"class.std::__1::vector"* %1045 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1172) #17
  unreachable

1173:                                             ; preds = %1164
  %1174 = sub i64 %1160, %1166
  %1175 = ashr exact i64 %1174, 2
  %1176 = icmp ult i64 %1175, 2305843009213693951
  br i1 %1176, label %1177, label %1185

1177:                                             ; preds = %1173
  %1178 = ashr exact i64 %1174, 1
  %1179 = icmp ult i64 %1178, %1169
  %1180 = select i1 %1179, i64 %1169, i64 %1178
  %1181 = icmp eq i64 %1180, 0
  br i1 %1181, label %1190, label %1182

1182:                                             ; preds = %1177
  %1183 = icmp ugt i64 %1180, 4611686018427387903
  br i1 %1183, label %1184, label %1185

1184:                                             ; preds = %1182
  call void @abort() #17
  unreachable

1185:                                             ; preds = %1182, %1173
  %1186 = phi i64 [ %1180, %1182 ], [ 4611686018427387903, %1173 ]
  %1187 = shl i64 %1186, 2
  %1188 = call i8* @_Znwm(i64 %1187) #18
  %1189 = bitcast i8* %1188 to i32*
  br label %1190

1190:                                             ; preds = %1185, %1177
  %1191 = phi i64 [ %1186, %1185 ], [ 0, %1177 ]
  %1192 = phi i8* [ %1188, %1185 ], [ null, %1177 ]
  %1193 = phi i32* [ %1189, %1185 ], [ null, %1177 ]
  %1194 = getelementptr inbounds i32, i32* %1193, i64 %1168
  %1195 = getelementptr inbounds i32, i32* %1193, i64 %1191
  %1196 = ptrtoint i32* %1195 to i64
  store i32 %1156, i32* %1194, align 4
  %1197 = getelementptr inbounds i32, i32* %1194, i64 1
  %1198 = ptrtoint i32* %1197 to i64
  %1199 = ptrtoint i32* %1193 to i64
  %1200 = icmp sgt i64 %1167, 0
  br i1 %1200, label %1201, label %1203

1201:                                             ; preds = %1190
  %1202 = inttoptr i64 %1166 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1192, i8* align 4 %1202, i64 %1167, i1 false) #16
  br label %1203

1203:                                             ; preds = %1201, %1190
  store i64 %1199, i64* %1052, align 8
  store i64 %1198, i64* %1051, align 8
  store i64 %1196, i64* %1053, align 8
  %1204 = icmp eq i64 %1166, 0
  br i1 %1204, label %1207, label %1205

1205:                                             ; preds = %1203
  %1206 = inttoptr i64 %1166 to i8*
  call void @_ZdlPv(i8* %1206) #18
  br label %1207

1207:                                             ; preds = %1161, %1203, %1205
  %1208 = add nuw i64 %1143, 1
  %1209 = icmp eq i64 %1208, %1139
  %1210 = load i64, i64* %19, align 8
  br i1 %1209, label %1211, label %1141

1211:                                             ; preds = %1207, %1134, %1135
  %1212 = phi i64 [ %1129, %1135 ], [ %1128, %1134 ], [ %1210, %1207 ]
  %1213 = add i64 %1212, 4
  %1214 = icmp ugt i64 %1212, -5
  br i1 %1214, label %1218, label %1215

1215:                                             ; preds = %1211
  %1216 = load i64, i64* %1046, align 8
  %1217 = icmp ugt i64 %1213, %1216
  br i1 %1217, label %1218, label %1219

1218:                                             ; preds = %1215, %1211
  store i8 1, i8* %1048, align 8
  br label %1224

1219:                                             ; preds = %1215
  %1220 = load i8*, i8** %1047, align 8
  %1221 = getelementptr inbounds i8, i8* %1220, i64 %1212
  %1222 = bitcast i8* %1221 to i32*
  %1223 = load i32, i32* %1222, align 1
  store i64 %1213, i64* %19, align 8
  br label %1224

1224:                                             ; preds = %1218, %1219
  %1225 = phi i64 [ %1212, %1218 ], [ %1213, %1219 ]
  %1226 = phi i32 [ 0, %1218 ], [ %1223, %1219 ]
  store i32 %1226, i32* %1054, align 8
  %1227 = add i64 %1225, 8
  %1228 = icmp ugt i64 %1225, -9
  br i1 %1228, label %1266, label %1229

1229:                                             ; preds = %1224
  %1230 = load i64, i64* %1046, align 8
  %1231 = icmp ugt i64 %1227, %1230
  br i1 %1231, label %1266, label %1232

1232:                                             ; preds = %1229
  %1233 = load i8*, i8** %1047, align 8
  %1234 = getelementptr inbounds i8, i8* %1233, i64 %1225
  %1235 = bitcast i8* %1234 to i64*
  %1236 = load i64, i64* %1235, align 1
  store i64 %1227, i64* %19, align 8
  %1237 = load i8, i8* %1048, align 8, !range !15
  %1238 = icmp eq i8 %1237, 0
  br i1 %1238, label %1239, label %1268

1239:                                             ; preds = %1232
  %1240 = add i64 %1236, %1227
  %1241 = sub nuw i64 -9, %1225
  %1242 = icmp ugt i64 %1236, %1241
  %1243 = icmp ugt i64 %1240, %1230
  %1244 = or i1 %1242, %1243
  br i1 %1244, label %1266, label %1245

1245:                                             ; preds = %1239
  %1246 = getelementptr inbounds i8, i8* %1233, i64 %1227
  %1247 = call i1 @llvm.is.constant.i64(i64 %1236) #16
  %1248 = icmp ult i64 %1236, 23
  %1249 = and i1 %1248, %1247
  br i1 %1249, label %1250, label %1263

1250:                                             ; preds = %1245
  %1251 = load i8, i8* %1057, align 1
  %1252 = icmp slt i8 %1251, 0
  br i1 %1252, label %1253, label %1255

1253:                                             ; preds = %1250
  store i64 %1236, i64* %1059, align 8
  %1254 = load i8*, i8** %1060, align 8
  br label %1257

1255:                                             ; preds = %1250
  %1256 = trunc i64 %1236 to i8
  store i8 %1256, i8* %1057, align 1
  br label %1257

1257:                                             ; preds = %1255, %1253
  %1258 = phi i8* [ %1254, %1253 ], [ %1058, %1255 ]
  %1259 = icmp eq i64 %1236, 0
  br i1 %1259, label %1261, label %1260

1260:                                             ; preds = %1257
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %1258, i8* align 1 %1246, i64 %1236, i1 false) #16
  br label %1261

1261:                                             ; preds = %1260, %1257
  %1262 = getelementptr inbounds i8, i8* %1258, i64 %1236
  store i8 0, i8* %1262, align 1
  br label %1265

1263:                                             ; preds = %1245
  %1264 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %1055, i8* %1246, i64 %1236) #16
  br label %1265

1265:                                             ; preds = %1263, %1261
  store i64 %1240, i64* %19, align 8
  br label %1268

1266:                                             ; preds = %1239, %1224, %1229
  %1267 = phi i64 [ %1225, %1229 ], [ %1225, %1224 ], [ %1227, %1239 ]
  store i8 1, i8* %1048, align 8
  br label %1268

1268:                                             ; preds = %1266, %1232, %1265
  %1269 = phi i64 [ %1267, %1266 ], [ %1227, %1232 ], [ %1240, %1265 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1061) #16
  store i32 -1431655766, i32* %10, align 4
  %1270 = add i64 %1269, 4
  %1271 = icmp ugt i64 %1269, -5
  br i1 %1271, label %1275, label %1272

1272:                                             ; preds = %1268
  %1273 = load i64, i64* %1046, align 8
  %1274 = icmp ugt i64 %1270, %1273
  br i1 %1274, label %1275, label %1276

1275:                                             ; preds = %1272, %1268
  store i8 1, i8* %1048, align 8
  br label %1281

1276:                                             ; preds = %1272
  %1277 = load i8*, i8** %1047, align 8
  %1278 = getelementptr inbounds i8, i8* %1277, i64 %1269
  %1279 = bitcast i8* %1278 to i32*
  %1280 = load i32, i32* %1279, align 1
  store i64 %1270, i64* %19, align 8
  br label %1281

1281:                                             ; preds = %1275, %1276
  %1282 = phi i32 [ 0, %1275 ], [ %1280, %1276 ]
  store i32 %1282, i32* %10, align 4
  %1283 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %1062, align 8
  %1284 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %1063, align 8
  %1285 = icmp ult %"struct.gl::TransformFeedbackVarying"* %1283, %1284
  br i1 %1285, label %1286, label %1291

1286:                                             ; preds = %1281
  %1287 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %1283, i64 0, i32 0
  call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %1287, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %9) #16
  %1288 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %1283, i64 0, i32 1
  store i32 %1282, i32* %1288, align 8
  %1289 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %1283, i64 1
  %1290 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %1289 to i64
  store i64 %1290, i64* %1065, align 8
  br label %1292

1291:                                             ; preds = %1281
  call void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN2sh14ShaderVariableERjEEEvDpOT_(%"class.std::__1::vector.173"* %1064, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %9, i32* nonnull dereferenceable(4) %10) #16
  br label %1292

1292:                                             ; preds = %1286, %1291
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1061) #16
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %1044) #16
  %1293 = add nuw i64 %1127, 1
  %1294 = icmp eq i64 %1293, %1041
  br i1 %1294, label %1078, label %1126

1295:                                             ; preds = %1368
  %1296 = load i64, i64* %19, align 8
  br label %1297

1297:                                             ; preds = %1106, %1295, %1108
  %1298 = phi i64 [ %1296, %1295 ], [ %1100, %1108 ], [ %1099, %1106 ]
  %1299 = add i64 %1298, 8
  %1300 = icmp ugt i64 %1298, -9
  br i1 %1300, label %1305, label %1301

1301:                                             ; preds = %1297
  %1302 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1303 = load i64, i64* %1302, align 8
  %1304 = icmp ugt i64 %1299, %1303
  br i1 %1304, label %1305, label %1307

1305:                                             ; preds = %1297, %1301
  %1306 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1306, align 8
  br label %1373

1307:                                             ; preds = %1301
  %1308 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1309 = load i8*, i8** %1308, align 8
  %1310 = getelementptr inbounds i8, i8* %1309, i64 %1298
  %1311 = bitcast i8* %1310 to i64*
  %1312 = load i64, i64* %1311, align 1
  store i64 %1299, i64* %19, align 8
  %1313 = icmp eq i64 %1312, 0
  br i1 %1313, label %1373, label %1314

1314:                                             ; preds = %1307
  %1315 = bitcast %"struct.gl::VariableLocation"* %12 to i8*
  %1316 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %12, i64 0, i32 0
  %1317 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %12, i64 0, i32 1
  %1318 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %12, i64 0, i32 2
  %1319 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1320 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1321 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1322 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21
  %1323 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 1
  %1324 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 2, i32 0, i32 0
  %1325 = bitcast %"struct.gl::VariableLocation"** %1323 to i64*
  %1326 = bitcast %"class.std::__1::vector.132"* %1322 to i64*
  %1327 = bitcast %"struct.gl::VariableLocation"** %1324 to i64*
  %1328 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %1322, i64 0, i32 0, i32 0
  %1329 = bitcast %"struct.gl::VariableLocation"* %12 to i8*
  br label %1406

1330:                                             ; preds = %1368, %1115
  %1331 = phi i64 [ 0, %1115 ], [ %1369, %1368 ]
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %1116) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1116, i8 -86, i64 208, i1 false)
  call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* nonnull %11) #16
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* nonnull %11) #16
  %1332 = load i64, i64* %19, align 8
  %1333 = add i64 %1332, 4
  %1334 = icmp ugt i64 %1332, -5
  br i1 %1334, label %1338, label %1335

1335:                                             ; preds = %1330
  %1336 = load i64, i64* %1117, align 8
  %1337 = icmp ugt i64 %1333, %1336
  br i1 %1337, label %1338, label %1339

1338:                                             ; preds = %1335, %1330
  store i8 1, i8* %1119, align 8
  br label %1345

1339:                                             ; preds = %1335
  %1340 = load i8*, i8** %1118, align 8
  %1341 = getelementptr inbounds i8, i8* %1340, i64 %1332
  %1342 = bitcast i8* %1341 to i32*
  %1343 = load i32, i32* %1342, align 1
  store i64 %1333, i64* %19, align 8
  %1344 = add i64 %1332, 8
  br label %1345

1345:                                             ; preds = %1338, %1339
  %1346 = phi i64 [ %1333, %1338 ], [ %1344, %1339 ]
  %1347 = phi i64 [ %1332, %1338 ], [ %1333, %1339 ]
  %1348 = phi i32 [ 0, %1338 ], [ %1343, %1339 ]
  store i32 %1348, i32* %1120, align 4
  %1349 = icmp ugt i64 %1347, -5
  br i1 %1349, label %1353, label %1350

1350:                                             ; preds = %1345
  %1351 = load i64, i64* %1117, align 8
  %1352 = icmp ugt i64 %1346, %1351
  br i1 %1352, label %1353, label %1354

1353:                                             ; preds = %1350, %1345
  store i8 1, i8* %1119, align 8
  br label %1359

1354:                                             ; preds = %1350
  %1355 = load i8*, i8** %1118, align 8
  %1356 = getelementptr inbounds i8, i8* %1355, i64 %1347
  %1357 = bitcast i8* %1356 to i32*
  %1358 = load i32, i32* %1357, align 1
  store i64 %1346, i64* %19, align 8
  br label %1359

1359:                                             ; preds = %1353, %1354
  %1360 = phi i32 [ 0, %1353 ], [ %1358, %1354 ]
  store i32 %1360, i32* %1121, align 4
  %1361 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1122, align 8
  %1362 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1123, align 8
  %1363 = icmp eq %"struct.sh::ShaderVariable"* %1361, %1362
  br i1 %1363, label %1367, label %1364

1364:                                             ; preds = %1359
  call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %1361, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %11) #16
  %1365 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1361, i64 1
  %1366 = ptrtoint %"struct.sh::ShaderVariable"* %1365 to i64
  store i64 %1366, i64* %1124, align 8
  br label %1368

1367:                                             ; preds = %1359
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.70"* %1125, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %11) #16
  br label %1368

1368:                                             ; preds = %1364, %1367
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %1116) #16
  %1369 = add nuw i64 %1331, 1
  %1370 = icmp eq i64 %1369, %1113
  br i1 %1370, label %1295, label %1330

1371:                                             ; preds = %1511
  %1372 = load i64, i64* %19, align 8
  br label %1373

1373:                                             ; preds = %1305, %1371, %1307
  %1374 = phi i64 [ %1372, %1371 ], [ %1299, %1307 ], [ %1298, %1305 ]
  %1375 = add i64 %1374, 8
  %1376 = icmp ugt i64 %1374, -9
  br i1 %1376, label %1381, label %1377

1377:                                             ; preds = %1373
  %1378 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1379 = load i64, i64* %1378, align 8
  %1380 = icmp ugt i64 %1375, %1379
  br i1 %1380, label %1381, label %1383

1381:                                             ; preds = %1373, %1377
  %1382 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1382, align 8
  br label %1516

1383:                                             ; preds = %1377
  %1384 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1385 = load i8*, i8** %1384, align 8
  %1386 = getelementptr inbounds i8, i8* %1385, i64 %1374
  %1387 = bitcast i8* %1386 to i64*
  %1388 = load i64, i64* %1387, align 1
  store i64 %1375, i64* %19, align 8
  %1389 = icmp eq i64 %1388, 0
  br i1 %1389, label %1516, label %1390

1390:                                             ; preds = %1383
  %1391 = bitcast %"struct.gl::VariableLocation"* %13 to i8*
  %1392 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %13, i64 0, i32 0
  %1393 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %13, i64 0, i32 1
  %1394 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %13, i64 0, i32 2
  %1395 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1396 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1397 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1398 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22
  %1399 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 1
  %1400 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 2, i32 0, i32 0
  %1401 = bitcast %"struct.gl::VariableLocation"** %1399 to i64*
  %1402 = bitcast %"class.std::__1::vector.132"* %1398 to i64*
  %1403 = bitcast %"struct.gl::VariableLocation"** %1400 to i64*
  %1404 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %1398, i64 0, i32 0, i32 0
  %1405 = bitcast %"struct.gl::VariableLocation"* %13 to i8*
  br label %1625

1406:                                             ; preds = %1511, %1314
  %1407 = phi i64 [ 0, %1314 ], [ %1512, %1511 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1315) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1329, i8 -86, i64 12, i1 false)
  call void @_ZN2gl16VariableLocationC1Ev(%"struct.gl::VariableLocation"* nonnull %12) #16
  %1408 = load i64, i64* %19, align 8
  %1409 = add i64 %1408, 4
  %1410 = icmp ugt i64 %1408, -5
  br i1 %1410, label %1414, label %1411

1411:                                             ; preds = %1406
  %1412 = load i64, i64* %1319, align 8
  %1413 = icmp ugt i64 %1409, %1412
  br i1 %1413, label %1414, label %1415

1414:                                             ; preds = %1411, %1406
  store i8 1, i8* %1321, align 8
  br label %1421

1415:                                             ; preds = %1411
  %1416 = load i8*, i8** %1320, align 8
  %1417 = getelementptr inbounds i8, i8* %1416, i64 %1408
  %1418 = bitcast i8* %1417 to i32*
  %1419 = load i32, i32* %1418, align 1
  store i64 %1409, i64* %19, align 8
  %1420 = add i64 %1408, 8
  br label %1421

1421:                                             ; preds = %1414, %1415
  %1422 = phi i64 [ %1409, %1414 ], [ %1420, %1415 ]
  %1423 = phi i64 [ %1408, %1414 ], [ %1409, %1415 ]
  %1424 = phi i32 [ 0, %1414 ], [ %1419, %1415 ]
  store i32 %1424, i32* %1316, align 4
  %1425 = icmp ugt i64 %1423, -5
  br i1 %1425, label %1429, label %1426

1426:                                             ; preds = %1421
  %1427 = load i64, i64* %1319, align 8
  %1428 = icmp ugt i64 %1422, %1427
  br i1 %1428, label %1429, label %1430

1429:                                             ; preds = %1426, %1421
  store i8 1, i8* %1321, align 8
  br label %1436

1430:                                             ; preds = %1426
  %1431 = load i8*, i8** %1320, align 8
  %1432 = getelementptr inbounds i8, i8* %1431, i64 %1423
  %1433 = bitcast i8* %1432 to i32*
  %1434 = load i32, i32* %1433, align 1
  store i64 %1422, i64* %19, align 8
  %1435 = add i64 %1422, 4
  br label %1436

1436:                                             ; preds = %1429, %1430
  %1437 = phi i64 [ %1422, %1429 ], [ %1435, %1430 ]
  %1438 = phi i64 [ %1423, %1429 ], [ %1422, %1430 ]
  %1439 = phi i32 [ 0, %1429 ], [ %1434, %1430 ]
  store i32 %1439, i32* %1317, align 4
  %1440 = icmp ugt i64 %1438, -5
  br i1 %1440, label %1444, label %1441

1441:                                             ; preds = %1436
  %1442 = load i64, i64* %1319, align 8
  %1443 = icmp ugt i64 %1437, %1442
  br i1 %1443, label %1444, label %1445

1444:                                             ; preds = %1441, %1436
  store i8 1, i8* %1321, align 8
  br label %1452

1445:                                             ; preds = %1441
  %1446 = load i8*, i8** %1320, align 8
  %1447 = getelementptr inbounds i8, i8* %1446, i64 %1438
  %1448 = bitcast i8* %1447 to i32*
  %1449 = load i32, i32* %1448, align 1
  store i64 %1437, i64* %19, align 8
  %1450 = icmp sgt i32 %1449, 0
  %1451 = zext i1 %1450 to i8
  br label %1452

1452:                                             ; preds = %1444, %1445
  %1453 = phi i8 [ 0, %1444 ], [ %1451, %1445 ]
  store i8 %1453, i8* %1318, align 4
  %1454 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1323, align 8
  %1455 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1324, align 8
  %1456 = icmp eq %"struct.gl::VariableLocation"* %1454, %1455
  %1457 = ptrtoint %"struct.gl::VariableLocation"* %1455 to i64
  br i1 %1456, label %1462, label %1458

1458:                                             ; preds = %1452
  %1459 = bitcast %"struct.gl::VariableLocation"* %1454 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1459, i8* nonnull align 4 %1315, i64 12, i1 false) #16
  %1460 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1454, i64 1
  %1461 = ptrtoint %"struct.gl::VariableLocation"* %1460 to i64
  store i64 %1461, i64* %1325, align 8
  br label %1511

1462:                                             ; preds = %1452
  %1463 = ptrtoint %"struct.gl::VariableLocation"* %1454 to i64
  %1464 = load i64, i64* %1326, align 8
  %1465 = sub i64 %1463, %1464
  %1466 = sdiv exact i64 %1465, 12
  %1467 = add nsw i64 %1466, 1
  %1468 = icmp ugt i64 %1467, 1537228672809129301
  br i1 %1468, label %1469, label %1471

1469:                                             ; preds = %1462
  %1470 = bitcast %"class.std::__1::vector.132"* %1322 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1470) #17
  unreachable

1471:                                             ; preds = %1462
  %1472 = sub i64 %1457, %1464
  %1473 = sdiv exact i64 %1472, 12
  %1474 = icmp ult i64 %1473, 768614336404564650
  br i1 %1474, label %1475, label %1480

1475:                                             ; preds = %1471
  %1476 = shl nsw i64 %1473, 1
  %1477 = icmp ult i64 %1476, %1467
  %1478 = select i1 %1477, i64 %1467, i64 %1476
  %1479 = icmp eq i64 %1478, 0
  br i1 %1479, label %1485, label %1480

1480:                                             ; preds = %1475, %1471
  %1481 = phi i64 [ %1478, %1475 ], [ 1537228672809129301, %1471 ]
  %1482 = mul i64 %1481, 12
  %1483 = call i8* @_Znwm(i64 %1482) #18
  %1484 = bitcast i8* %1483 to %"struct.gl::VariableLocation"*
  br label %1485

1485:                                             ; preds = %1480, %1475
  %1486 = phi i64 [ %1481, %1480 ], [ 0, %1475 ]
  %1487 = phi %"struct.gl::VariableLocation"* [ %1484, %1480 ], [ null, %1475 ]
  %1488 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1487, i64 %1466
  %1489 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1487, i64 %1486
  %1490 = ptrtoint %"struct.gl::VariableLocation"* %1489 to i64
  %1491 = bitcast %"struct.gl::VariableLocation"* %1488 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1491, i8* nonnull align 4 %1315, i64 12, i1 false) #16
  %1492 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1488, i64 1
  %1493 = ptrtoint %"struct.gl::VariableLocation"* %1492 to i64
  %1494 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1328, align 8
  %1495 = load i64, i64* %1325, align 8
  %1496 = ptrtoint %"struct.gl::VariableLocation"* %1494 to i64
  %1497 = sub i64 %1495, %1496
  %1498 = sdiv exact i64 %1497, -12
  %1499 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1488, i64 %1498
  %1500 = ptrtoint %"struct.gl::VariableLocation"* %1499 to i64
  %1501 = icmp sgt i64 %1497, 0
  br i1 %1501, label %1502, label %1506

1502:                                             ; preds = %1485
  %1503 = bitcast %"struct.gl::VariableLocation"* %1499 to i8*
  %1504 = bitcast %"struct.gl::VariableLocation"* %1494 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1503, i8* align 4 %1504, i64 %1497, i1 false) #16
  %1505 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1328, align 8
  br label %1506

1506:                                             ; preds = %1502, %1485
  %1507 = phi %"struct.gl::VariableLocation"* [ %1494, %1485 ], [ %1505, %1502 ]
  store i64 %1500, i64* %1326, align 8
  store i64 %1493, i64* %1325, align 8
  store i64 %1490, i64* %1327, align 8
  %1508 = icmp eq %"struct.gl::VariableLocation"* %1507, null
  br i1 %1508, label %1511, label %1509

1509:                                             ; preds = %1506
  %1510 = bitcast %"struct.gl::VariableLocation"* %1507 to i8*
  call void @_ZdlPv(i8* %1510) #18
  br label %1511

1511:                                             ; preds = %1458, %1506, %1509
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1315) #16
  %1512 = add nuw i64 %1407, 1
  %1513 = icmp eq i64 %1512, %1312
  br i1 %1513, label %1371, label %1406

1514:                                             ; preds = %1730
  %1515 = load i64, i64* %19, align 8
  br label %1516

1516:                                             ; preds = %1381, %1514, %1383
  %1517 = phi i64 [ %1515, %1514 ], [ %1375, %1383 ], [ %1374, %1381 ]
  %1518 = add i64 %1517, 4
  %1519 = icmp ugt i64 %1517, -5
  br i1 %1519, label %1524, label %1520

1520:                                             ; preds = %1516
  %1521 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1522 = load i64, i64* %1521, align 8
  %1523 = icmp ugt i64 %1518, %1522
  br i1 %1523, label %1524, label %1526

1524:                                             ; preds = %1520, %1516
  %1525 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1525, align 8
  br label %1533

1526:                                             ; preds = %1520
  %1527 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1528 = load i8*, i8** %1527, align 8
  %1529 = getelementptr inbounds i8, i8* %1528, i64 %1517
  %1530 = bitcast i8* %1529 to i32*
  %1531 = load i32, i32* %1530, align 1
  store i64 %1518, i64* %19, align 8
  %1532 = add i64 %1517, 8
  br label %1533

1533:                                             ; preds = %1524, %1526
  %1534 = phi i64 [ %1518, %1524 ], [ %1532, %1526 ]
  %1535 = phi i64 [ %1517, %1524 ], [ %1518, %1526 ]
  %1536 = phi i32 [ 0, %1524 ], [ %1531, %1526 ]
  %1537 = icmp ugt i64 %1535, -5
  br i1 %1537, label %1542, label %1538

1538:                                             ; preds = %1533
  %1539 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1540 = load i64, i64* %1539, align 8
  %1541 = icmp ugt i64 %1534, %1540
  br i1 %1541, label %1542, label %1544

1542:                                             ; preds = %1538, %1533
  %1543 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1543, align 8
  br label %1550

1544:                                             ; preds = %1538
  %1545 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1546 = load i8*, i8** %1545, align 8
  %1547 = getelementptr inbounds i8, i8* %1546, i64 %1535
  %1548 = bitcast i8* %1547 to i32*
  %1549 = load i32, i32* %1548, align 1
  store i64 %1534, i64* %19, align 8
  br label %1550

1550:                                             ; preds = %1542, %1544
  %1551 = phi i32 [ 0, %1542 ], [ %1549, %1544 ]
  %1552 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31
  %1553 = bitcast %"class.gl::Range"* %1552 to i64*
  %1554 = zext i32 %1551 to i64
  %1555 = shl nuw i64 %1554, 32
  %1556 = zext i32 %1536 to i64
  %1557 = or i64 %1555, %1556
  store i64 %1557, i64* %1553, align 8
  %1558 = load i64, i64* %19, align 8
  %1559 = add i64 %1558, 4
  %1560 = icmp ugt i64 %1558, -5
  br i1 %1560, label %1565, label %1561

1561:                                             ; preds = %1550
  %1562 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1563 = load i64, i64* %1562, align 8
  %1564 = icmp ugt i64 %1559, %1563
  br i1 %1564, label %1565, label %1567

1565:                                             ; preds = %1561, %1550
  %1566 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1566, align 8
  br label %1575

1567:                                             ; preds = %1561
  %1568 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1569 = load i8*, i8** %1568, align 8
  %1570 = getelementptr inbounds i8, i8* %1569, i64 %1558
  %1571 = bitcast i8* %1570 to i32*
  %1572 = load i32, i32* %1571, align 1
  store i64 %1559, i64* %19, align 8
  %1573 = zext i32 %1572 to i64
  %1574 = add i64 %1558, 8
  br label %1575

1575:                                             ; preds = %1565, %1567
  %1576 = phi i64 [ %1559, %1565 ], [ %1574, %1567 ]
  %1577 = phi i64 [ %1558, %1565 ], [ %1559, %1567 ]
  %1578 = phi i64 [ 0, %1565 ], [ %1573, %1567 ]
  %1579 = icmp ugt i64 %1577, -5
  br i1 %1579, label %1584, label %1580

1580:                                             ; preds = %1575
  %1581 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1582 = load i64, i64* %1581, align 8
  %1583 = icmp ugt i64 %1576, %1582
  br i1 %1583, label %1584, label %1586

1584:                                             ; preds = %1580, %1575
  %1585 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1585, align 8
  br label %1594

1586:                                             ; preds = %1580
  %1587 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1588 = load i8*, i8** %1587, align 8
  %1589 = getelementptr inbounds i8, i8* %1588, i64 %1577
  %1590 = bitcast i8* %1589 to i32*
  %1591 = load i32, i32* %1590, align 1
  store i64 %1576, i64* %19, align 8
  %1592 = zext i32 %1591 to i64
  %1593 = shl nuw i64 %1592, 32
  br label %1594

1594:                                             ; preds = %1584, %1586
  %1595 = phi i64 [ 0, %1584 ], [ %1593, %1586 ]
  %1596 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 32
  %1597 = bitcast %"class.gl::Range"* %1596 to i64*
  %1598 = or i64 %1595, %1578
  store i64 %1598, i64* %1597, align 8
  %1599 = load i64, i64* %19, align 8
  %1600 = add i64 %1599, 8
  %1601 = icmp ugt i64 %1599, -9
  br i1 %1601, label %1606, label %1602

1602:                                             ; preds = %1594
  %1603 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1604 = load i64, i64* %1603, align 8
  %1605 = icmp ugt i64 %1600, %1604
  br i1 %1605, label %1606, label %1608

1606:                                             ; preds = %1594, %1602
  %1607 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1607, align 8
  br label %1733

1608:                                             ; preds = %1602
  %1609 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1610 = load i8*, i8** %1609, align 8
  %1611 = getelementptr inbounds i8, i8* %1610, i64 %1599
  %1612 = bitcast i8* %1611 to i64*
  %1613 = load i64, i64* %1612, align 1
  store i64 %1600, i64* %19, align 8
  %1614 = icmp eq i64 %1613, 0
  br i1 %1614, label %1733, label %1615

1615:                                             ; preds = %1608
  %1616 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1617 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1618 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1619 = bitcast i32* %15 to i8*
  %1620 = bitcast i64* %17 to i8*
  %1621 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 1
  %1622 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 2, i32 0, i32 0
  %1623 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40
  %1624 = bitcast %"struct.gl::SamplerBinding"** %1621 to i64*
  br label %1805

1625:                                             ; preds = %1730, %1390
  %1626 = phi i64 [ 0, %1390 ], [ %1731, %1730 ]
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %1391) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %1405, i8 -86, i64 12, i1 false)
  call void @_ZN2gl16VariableLocationC1Ev(%"struct.gl::VariableLocation"* nonnull %13) #16
  %1627 = load i64, i64* %19, align 8
  %1628 = add i64 %1627, 4
  %1629 = icmp ugt i64 %1627, -5
  br i1 %1629, label %1633, label %1630

1630:                                             ; preds = %1625
  %1631 = load i64, i64* %1395, align 8
  %1632 = icmp ugt i64 %1628, %1631
  br i1 %1632, label %1633, label %1634

1633:                                             ; preds = %1630, %1625
  store i8 1, i8* %1397, align 8
  br label %1640

1634:                                             ; preds = %1630
  %1635 = load i8*, i8** %1396, align 8
  %1636 = getelementptr inbounds i8, i8* %1635, i64 %1627
  %1637 = bitcast i8* %1636 to i32*
  %1638 = load i32, i32* %1637, align 1
  store i64 %1628, i64* %19, align 8
  %1639 = add i64 %1627, 8
  br label %1640

1640:                                             ; preds = %1633, %1634
  %1641 = phi i64 [ %1628, %1633 ], [ %1639, %1634 ]
  %1642 = phi i64 [ %1627, %1633 ], [ %1628, %1634 ]
  %1643 = phi i32 [ 0, %1633 ], [ %1638, %1634 ]
  store i32 %1643, i32* %1392, align 4
  %1644 = icmp ugt i64 %1642, -5
  br i1 %1644, label %1648, label %1645

1645:                                             ; preds = %1640
  %1646 = load i64, i64* %1395, align 8
  %1647 = icmp ugt i64 %1641, %1646
  br i1 %1647, label %1648, label %1649

1648:                                             ; preds = %1645, %1640
  store i8 1, i8* %1397, align 8
  br label %1655

1649:                                             ; preds = %1645
  %1650 = load i8*, i8** %1396, align 8
  %1651 = getelementptr inbounds i8, i8* %1650, i64 %1642
  %1652 = bitcast i8* %1651 to i32*
  %1653 = load i32, i32* %1652, align 1
  store i64 %1641, i64* %19, align 8
  %1654 = add i64 %1641, 4
  br label %1655

1655:                                             ; preds = %1648, %1649
  %1656 = phi i64 [ %1641, %1648 ], [ %1654, %1649 ]
  %1657 = phi i64 [ %1642, %1648 ], [ %1641, %1649 ]
  %1658 = phi i32 [ 0, %1648 ], [ %1653, %1649 ]
  store i32 %1658, i32* %1393, align 4
  %1659 = icmp ugt i64 %1657, -5
  br i1 %1659, label %1663, label %1660

1660:                                             ; preds = %1655
  %1661 = load i64, i64* %1395, align 8
  %1662 = icmp ugt i64 %1656, %1661
  br i1 %1662, label %1663, label %1664

1663:                                             ; preds = %1660, %1655
  store i8 1, i8* %1397, align 8
  br label %1671

1664:                                             ; preds = %1660
  %1665 = load i8*, i8** %1396, align 8
  %1666 = getelementptr inbounds i8, i8* %1665, i64 %1657
  %1667 = bitcast i8* %1666 to i32*
  %1668 = load i32, i32* %1667, align 1
  store i64 %1656, i64* %19, align 8
  %1669 = icmp sgt i32 %1668, 0
  %1670 = zext i1 %1669 to i8
  br label %1671

1671:                                             ; preds = %1663, %1664
  %1672 = phi i8 [ 0, %1663 ], [ %1670, %1664 ]
  store i8 %1672, i8* %1394, align 4
  %1673 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1399, align 8
  %1674 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1400, align 8
  %1675 = icmp eq %"struct.gl::VariableLocation"* %1673, %1674
  %1676 = ptrtoint %"struct.gl::VariableLocation"* %1674 to i64
  br i1 %1675, label %1681, label %1677

1677:                                             ; preds = %1671
  %1678 = bitcast %"struct.gl::VariableLocation"* %1673 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1678, i8* nonnull align 4 %1391, i64 12, i1 false) #16
  %1679 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1673, i64 1
  %1680 = ptrtoint %"struct.gl::VariableLocation"* %1679 to i64
  store i64 %1680, i64* %1401, align 8
  br label %1730

1681:                                             ; preds = %1671
  %1682 = ptrtoint %"struct.gl::VariableLocation"* %1673 to i64
  %1683 = load i64, i64* %1402, align 8
  %1684 = sub i64 %1682, %1683
  %1685 = sdiv exact i64 %1684, 12
  %1686 = add nsw i64 %1685, 1
  %1687 = icmp ugt i64 %1686, 1537228672809129301
  br i1 %1687, label %1688, label %1690

1688:                                             ; preds = %1681
  %1689 = bitcast %"class.std::__1::vector.132"* %1398 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %1689) #17
  unreachable

1690:                                             ; preds = %1681
  %1691 = sub i64 %1676, %1683
  %1692 = sdiv exact i64 %1691, 12
  %1693 = icmp ult i64 %1692, 768614336404564650
  br i1 %1693, label %1694, label %1699

1694:                                             ; preds = %1690
  %1695 = shl nsw i64 %1692, 1
  %1696 = icmp ult i64 %1695, %1686
  %1697 = select i1 %1696, i64 %1686, i64 %1695
  %1698 = icmp eq i64 %1697, 0
  br i1 %1698, label %1704, label %1699

1699:                                             ; preds = %1694, %1690
  %1700 = phi i64 [ %1697, %1694 ], [ 1537228672809129301, %1690 ]
  %1701 = mul i64 %1700, 12
  %1702 = call i8* @_Znwm(i64 %1701) #18
  %1703 = bitcast i8* %1702 to %"struct.gl::VariableLocation"*
  br label %1704

1704:                                             ; preds = %1699, %1694
  %1705 = phi i64 [ %1700, %1699 ], [ 0, %1694 ]
  %1706 = phi %"struct.gl::VariableLocation"* [ %1703, %1699 ], [ null, %1694 ]
  %1707 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1706, i64 %1685
  %1708 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1706, i64 %1705
  %1709 = ptrtoint %"struct.gl::VariableLocation"* %1708 to i64
  %1710 = bitcast %"struct.gl::VariableLocation"* %1707 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1710, i8* nonnull align 4 %1391, i64 12, i1 false) #16
  %1711 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1707, i64 1
  %1712 = ptrtoint %"struct.gl::VariableLocation"* %1711 to i64
  %1713 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1404, align 8
  %1714 = load i64, i64* %1401, align 8
  %1715 = ptrtoint %"struct.gl::VariableLocation"* %1713 to i64
  %1716 = sub i64 %1714, %1715
  %1717 = sdiv exact i64 %1716, -12
  %1718 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %1707, i64 %1717
  %1719 = ptrtoint %"struct.gl::VariableLocation"* %1718 to i64
  %1720 = icmp sgt i64 %1716, 0
  br i1 %1720, label %1721, label %1725

1721:                                             ; preds = %1704
  %1722 = bitcast %"struct.gl::VariableLocation"* %1718 to i8*
  %1723 = bitcast %"struct.gl::VariableLocation"* %1713 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %1722, i8* align 4 %1723, i64 %1716, i1 false) #16
  %1724 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %1404, align 8
  br label %1725

1725:                                             ; preds = %1721, %1704
  %1726 = phi %"struct.gl::VariableLocation"* [ %1713, %1704 ], [ %1724, %1721 ]
  store i64 %1719, i64* %1402, align 8
  store i64 %1712, i64* %1401, align 8
  store i64 %1709, i64* %1403, align 8
  %1727 = icmp eq %"struct.gl::VariableLocation"* %1726, null
  br i1 %1727, label %1730, label %1728

1728:                                             ; preds = %1725
  %1729 = bitcast %"struct.gl::VariableLocation"* %1726 to i8*
  call void @_ZdlPv(i8* %1729) #18
  br label %1730

1730:                                             ; preds = %1677, %1725, %1728
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %1391) #16
  %1731 = add nuw i64 %1626, 1
  %1732 = icmp eq i64 %1731, %1388
  br i1 %1732, label %1514, label %1625

1733:                                             ; preds = %1874, %1606, %1608
  %1734 = phi i64 [ %1600, %1608 ], [ %1599, %1606 ], [ %1877, %1874 ]
  %1735 = add i64 %1734, 4
  %1736 = icmp ugt i64 %1734, -5
  br i1 %1736, label %1741, label %1737

1737:                                             ; preds = %1733
  %1738 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1739 = load i64, i64* %1738, align 8
  %1740 = icmp ugt i64 %1735, %1739
  br i1 %1740, label %1741, label %1743

1741:                                             ; preds = %1737, %1733
  %1742 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1742, align 8
  br label %1751

1743:                                             ; preds = %1737
  %1744 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1745 = load i8*, i8** %1744, align 8
  %1746 = getelementptr inbounds i8, i8* %1745, i64 %1734
  %1747 = bitcast i8* %1746 to i32*
  %1748 = load i32, i32* %1747, align 1
  store i64 %1735, i64* %19, align 8
  %1749 = zext i32 %1748 to i64
  %1750 = add i64 %1734, 8
  br label %1751

1751:                                             ; preds = %1741, %1743
  %1752 = phi i64 [ %1735, %1741 ], [ %1750, %1743 ]
  %1753 = phi i64 [ %1734, %1741 ], [ %1735, %1743 ]
  %1754 = phi i64 [ 0, %1741 ], [ %1749, %1743 ]
  %1755 = icmp ugt i64 %1753, -5
  br i1 %1755, label %1760, label %1756

1756:                                             ; preds = %1751
  %1757 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1758 = load i64, i64* %1757, align 8
  %1759 = icmp ugt i64 %1752, %1758
  br i1 %1759, label %1760, label %1762

1760:                                             ; preds = %1756, %1751
  %1761 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1761, align 8
  br label %1770

1762:                                             ; preds = %1756
  %1763 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1764 = load i8*, i8** %1763, align 8
  %1765 = getelementptr inbounds i8, i8* %1764, i64 %1753
  %1766 = bitcast i8* %1765 to i32*
  %1767 = load i32, i32* %1766, align 1
  store i64 %1752, i64* %19, align 8
  %1768 = zext i32 %1767 to i64
  %1769 = shl nuw i64 %1768, 32
  br label %1770

1770:                                             ; preds = %1760, %1762
  %1771 = phi i64 [ 0, %1760 ], [ %1769, %1762 ]
  %1772 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 36
  %1773 = bitcast %"class.gl::Range"* %1772 to i64*
  %1774 = or i64 %1771, %1754
  store i64 %1774, i64* %1773, align 8
  %1775 = load i64, i64* %19, align 8
  %1776 = add i64 %1775, 8
  %1777 = icmp ugt i64 %1775, -9
  br i1 %1777, label %1782, label %1778

1778:                                             ; preds = %1770
  %1779 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1780 = load i64, i64* %1779, align 8
  %1781 = icmp ugt i64 %1776, %1780
  br i1 %1781, label %1782, label %1784

1782:                                             ; preds = %1770, %1778
  %1783 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  store i8 1, i8* %1783, align 8
  br label %1878

1784:                                             ; preds = %1778
  %1785 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1786 = load i8*, i8** %1785, align 8
  %1787 = getelementptr inbounds i8, i8* %1786, i64 %1775
  %1788 = bitcast i8* %1787 to i64*
  %1789 = load i64, i64* %1788, align 1
  store i64 %1776, i64* %19, align 8
  %1790 = icmp eq i64 %1789, 0
  br i1 %1790, label %1878, label %1791

1791:                                             ; preds = %1784
  %1792 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1793 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1794 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  %1795 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %18, i64 0, i32 0
  %1796 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %18, i64 0, i32 1, i32 0, i32 0
  %1797 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 1
  %1798 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 2, i32 0, i32 0
  %1799 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41
  %1800 = bitcast %"struct.gl::ImageBinding"** %1797 to i64*
  %1801 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 1
  %1802 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 2, i32 0, i32 0
  %1803 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42
  %1804 = bitcast %"struct.gl::ImageBinding"** %1801 to i64*
  br label %1879

1805:                                             ; preds = %1874, %1615
  %1806 = phi i64 [ %1600, %1615 ], [ %1877, %1874 ]
  %1807 = phi i64 [ 0, %1615 ], [ %1875, %1874 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #16
  store i8 -86, i8* %14, align 1
  %1808 = add i64 %1806, 4
  %1809 = icmp ugt i64 %1806, -5
  br i1 %1809, label %1813, label %1810

1810:                                             ; preds = %1805
  %1811 = load i64, i64* %1616, align 8
  %1812 = icmp ugt i64 %1808, %1811
  br i1 %1812, label %1813, label %1814

1813:                                             ; preds = %1810, %1805
  store i8 1, i8* %1618, align 8
  br label %1821

1814:                                             ; preds = %1810
  %1815 = load i8*, i8** %1617, align 8
  %1816 = getelementptr inbounds i8, i8* %1815, i64 %1806
  %1817 = bitcast i8* %1816 to i32*
  %1818 = load i32, i32* %1817, align 1
  store i64 %1808, i64* %19, align 8
  %1819 = trunc i32 %1818 to i8
  %1820 = add i64 %1806, 8
  br label %1821

1821:                                             ; preds = %1813, %1814
  %1822 = phi i64 [ %1808, %1813 ], [ %1820, %1814 ]
  %1823 = phi i64 [ %1806, %1813 ], [ %1808, %1814 ]
  %1824 = phi i8 [ 0, %1813 ], [ %1819, %1814 ]
  store i8 %1824, i8* %14, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %1619) #16
  store i32 -1431655766, i32* %15, align 4
  %1825 = icmp ugt i64 %1823, -5
  br i1 %1825, label %1829, label %1826

1826:                                             ; preds = %1821
  %1827 = load i64, i64* %1616, align 8
  %1828 = icmp ugt i64 %1822, %1827
  br i1 %1828, label %1829, label %1830

1829:                                             ; preds = %1826, %1821
  store i8 1, i8* %1618, align 8
  br label %1836

1830:                                             ; preds = %1826
  %1831 = load i8*, i8** %1617, align 8
  %1832 = getelementptr inbounds i8, i8* %1831, i64 %1823
  %1833 = bitcast i8* %1832 to i32*
  %1834 = load i32, i32* %1833, align 1
  store i64 %1822, i64* %19, align 8
  %1835 = add i64 %1822, 4
  br label %1836

1836:                                             ; preds = %1829, %1830
  %1837 = phi i64 [ %1822, %1829 ], [ %1835, %1830 ]
  %1838 = phi i64 [ %1823, %1829 ], [ %1822, %1830 ]
  %1839 = phi i32 [ 0, %1829 ], [ %1834, %1830 ]
  store i32 %1839, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #16
  store i8 -86, i8* %16, align 1
  %1840 = icmp ugt i64 %1838, -5
  br i1 %1840, label %1844, label %1841

1841:                                             ; preds = %1836
  %1842 = load i64, i64* %1616, align 8
  %1843 = icmp ugt i64 %1837, %1842
  br i1 %1843, label %1844, label %1845

1844:                                             ; preds = %1841, %1836
  store i8 1, i8* %1618, align 8
  br label %1851

1845:                                             ; preds = %1841
  %1846 = load i8*, i8** %1617, align 8
  %1847 = getelementptr inbounds i8, i8* %1846, i64 %1838
  %1848 = bitcast i8* %1847 to i32*
  %1849 = load i32, i32* %1848, align 1
  store i64 %1837, i64* %19, align 8
  %1850 = trunc i32 %1849 to i8
  br label %1851

1851:                                             ; preds = %1844, %1845
  %1852 = phi i64 [ %1838, %1844 ], [ %1837, %1845 ]
  %1853 = phi i8 [ 0, %1844 ], [ %1850, %1845 ]
  store i8 %1853, i8* %16, align 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1620) #16
  store i64 -6148914691236517206, i64* %17, align 8
  %1854 = add i64 %1852, 8
  %1855 = icmp ugt i64 %1852, -9
  br i1 %1855, label %1859, label %1856

1856:                                             ; preds = %1851
  %1857 = load i64, i64* %1616, align 8
  %1858 = icmp ugt i64 %1854, %1857
  br i1 %1858, label %1859, label %1860

1859:                                             ; preds = %1856, %1851
  store i8 1, i8* %1618, align 8
  br label %1865

1860:                                             ; preds = %1856
  %1861 = load i8*, i8** %1617, align 8
  %1862 = getelementptr inbounds i8, i8* %1861, i64 %1852
  %1863 = bitcast i8* %1862 to i64*
  %1864 = load i64, i64* %1863, align 1
  store i64 %1854, i64* %19, align 8
  br label %1865

1865:                                             ; preds = %1859, %1860
  %1866 = phi i64 [ 0, %1859 ], [ %1864, %1860 ]
  store i64 %1866, i64* %17, align 8
  %1867 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %1621, align 8
  %1868 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %1622, align 8
  %1869 = icmp ult %"struct.gl::SamplerBinding"* %1867, %1868
  br i1 %1869, label %1870, label %1873

1870:                                             ; preds = %1865
  call void @_ZN2gl14SamplerBindingC1ENS_11TextureTypeEjNS_13SamplerFormatEm(%"struct.gl::SamplerBinding"* %1867, i8 zeroext %1824, i32 %1839, i8 zeroext %1853, i64 %1866) #16
  %1871 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %1867, i64 1
  %1872 = ptrtoint %"struct.gl::SamplerBinding"* %1871 to i64
  store i64 %1872, i64* %1624, align 8
  br label %1874

1873:                                             ; preds = %1865
  call void @_ZNSt3__16vectorIN2gl14SamplerBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRNS1_11TextureTypeERjRNS1_13SamplerFormatERmEEEvDpOT_(%"class.std::__1::vector.209"* %1623, i8* nonnull dereferenceable(1) %14, i32* nonnull dereferenceable(4) %15, i8* nonnull dereferenceable(1) %16, i64* nonnull dereferenceable(8) %17) #16
  br label %1874

1874:                                             ; preds = %1870, %1873
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1620) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %1619) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #16
  %1875 = add nuw i64 %1807, 1
  %1876 = icmp eq i64 %1875, %1613
  %1877 = load i64, i64* %19, align 8
  br i1 %1876, label %1733, label %1805

1878:                                             ; preds = %1950, %1782, %1784
  br i1 %1, label %1955, label %2219

1879:                                             ; preds = %1953, %1791
  %1880 = phi i64 [ %1776, %1791 ], [ %1954, %1953 ]
  %1881 = phi i64 [ 0, %1791 ], [ %1951, %1953 ]
  %1882 = add i64 %1880, 8
  %1883 = icmp ugt i64 %1880, -9
  br i1 %1883, label %1887, label %1884

1884:                                             ; preds = %1879
  %1885 = load i64, i64* %1792, align 8
  %1886 = icmp ugt i64 %1882, %1885
  br i1 %1886, label %1887, label %1888

1887:                                             ; preds = %1884, %1879
  store i8 1, i8* %1794, align 8
  br label %1893

1888:                                             ; preds = %1884
  %1889 = load i8*, i8** %1793, align 8
  %1890 = getelementptr inbounds i8, i8* %1889, i64 %1880
  %1891 = bitcast i8* %1890 to i64*
  %1892 = load i64, i64* %1891, align 1
  store i64 %1882, i64* %19, align 8
  br label %1893

1893:                                             ; preds = %1887, %1888
  %1894 = phi i64 [ %1880, %1887 ], [ %1882, %1888 ]
  %1895 = phi i64 [ 0, %1887 ], [ %1892, %1888 ]
  %1896 = add i64 %1894, 4
  %1897 = icmp ugt i64 %1894, -5
  br i1 %1897, label %1901, label %1898

1898:                                             ; preds = %1893
  %1899 = load i64, i64* %1792, align 8
  %1900 = icmp ugt i64 %1896, %1899
  br i1 %1900, label %1901, label %1902

1901:                                             ; preds = %1898, %1893
  store i8 1, i8* %1794, align 8
  br label %1907

1902:                                             ; preds = %1898
  %1903 = load i8*, i8** %1793, align 8
  %1904 = getelementptr inbounds i8, i8* %1903, i64 %1894
  %1905 = bitcast i8* %1904 to i32*
  %1906 = load i32, i32* %1905, align 1
  store i64 %1896, i64* %19, align 8
  br label %1907

1907:                                             ; preds = %1901, %1902
  %1908 = phi i32 [ 0, %1901 ], [ %1906, %1902 ]
  %1909 = trunc i32 %1908 to i8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1795) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1795, i8 -86, i64 32, i1 false)
  call void @_ZN2gl12ImageBindingC1EmNS_11TextureTypeE(%"struct.gl::ImageBinding"* nonnull %18, i64 %1895, i8 zeroext %1909) #16
  %1910 = icmp eq i64 %1895, 0
  br i1 %1910, label %1911, label %1914

1911:                                             ; preds = %1928, %1907
  %1912 = load i8, i8* %196, align 4, !range !15
  %1913 = icmp eq i8 %1912, 0
  br i1 %1913, label %1942, label %1934

1914:                                             ; preds = %1907, %1928
  %1915 = phi i64 [ %1932, %1928 ], [ 0, %1907 ]
  %1916 = load i64, i64* %19, align 8
  %1917 = add i64 %1916, 4
  %1918 = icmp ugt i64 %1916, -5
  br i1 %1918, label %1922, label %1919

1919:                                             ; preds = %1914
  %1920 = load i64, i64* %1792, align 8
  %1921 = icmp ugt i64 %1917, %1920
  br i1 %1921, label %1922, label %1923

1922:                                             ; preds = %1919, %1914
  store i8 1, i8* %1794, align 8
  br label %1928

1923:                                             ; preds = %1919
  %1924 = load i8*, i8** %1793, align 8
  %1925 = getelementptr inbounds i8, i8* %1924, i64 %1916
  %1926 = bitcast i8* %1925 to i32*
  %1927 = load i32, i32* %1926, align 1
  store i64 %1917, i64* %19, align 8
  br label %1928

1928:                                             ; preds = %1922, %1923
  %1929 = phi i32 [ 0, %1922 ], [ %1927, %1923 ]
  %1930 = load i32*, i32** %1796, align 8
  %1931 = getelementptr inbounds i32, i32* %1930, i64 %1915
  store i32 %1929, i32* %1931, align 4
  %1932 = add nuw i64 %1915, 1
  %1933 = icmp eq i64 %1932, %1895
  br i1 %1933, label %1911, label %1914

1934:                                             ; preds = %1911
  %1935 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %1797, align 8
  %1936 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %1798, align 8
  %1937 = icmp ult %"struct.gl::ImageBinding"* %1935, %1936
  br i1 %1937, label %1938, label %1941

1938:                                             ; preds = %1934
  call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %1935, %"struct.gl::ImageBinding"* nonnull dereferenceable(32) %18) #16
  %1939 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %1935, i64 1
  %1940 = ptrtoint %"struct.gl::ImageBinding"* %1939 to i64
  store i64 %1940, i64* %1800, align 8
  br label %1950

1941:                                             ; preds = %1934
  call void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRS2_EEEvDpOT_(%"class.std::__1::vector.216"* %1799, %"struct.gl::ImageBinding"* nonnull dereferenceable(32) %18) #16
  br label %1950

1942:                                             ; preds = %1911
  %1943 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %1801, align 8
  %1944 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %1802, align 8
  %1945 = icmp ult %"struct.gl::ImageBinding"* %1943, %1944
  br i1 %1945, label %1946, label %1949

1946:                                             ; preds = %1942
  call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %1943, %"struct.gl::ImageBinding"* nonnull dereferenceable(32) %18) #16
  %1947 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %1943, i64 1
  %1948 = ptrtoint %"struct.gl::ImageBinding"* %1947 to i64
  store i64 %1948, i64* %1804, align 8
  br label %1950

1949:                                             ; preds = %1942
  call void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRS2_EEEvDpOT_(%"class.std::__1::vector.216"* %1803, %"struct.gl::ImageBinding"* nonnull dereferenceable(32) %18) #16
  br label %1950

1950:                                             ; preds = %1949, %1946, %1941, %1938
  call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1795) #16
  %1951 = add nuw i64 %1881, 1
  %1952 = icmp eq i64 %1951, %1789
  br i1 %1952, label %1878, label %1953

1953:                                             ; preds = %1950
  %1954 = load i64, i64* %19, align 8
  br label %1879

1955:                                             ; preds = %1878
  %1956 = load i8, i8* %157, align 1, !noalias !16
  %1957 = icmp eq i8 %1956, 0
  br i1 %1957, label %1964, label %1958

1958:                                             ; preds = %1955
  %1959 = zext i8 %1956 to i32
  %1960 = call i32 @llvm.cttz.i32(i32 %1959, i1 true) #16, !range !19
  %1961 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1962 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1963 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  br label %1973

1964:                                             ; preds = %2081, %1955
  %1965 = load i8, i8* %177, align 1, !noalias !20
  %1966 = icmp eq i8 %1965, 0
  br i1 %1966, label %2219, label %1967

1967:                                             ; preds = %1964
  %1968 = zext i8 %1965 to i32
  %1969 = call i32 @llvm.cttz.i32(i32 %1968, i1 true) #16, !range !19
  %1970 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 3
  %1971 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 2
  %1972 = getelementptr inbounds %"class.gl::BinaryInputStream", %"class.gl::BinaryInputStream"* %2, i64 0, i32 0
  br label %2096

1973:                                             ; preds = %2089, %1958
  %1974 = phi i8 [ %1956, %1958 ], [ %2087, %2089 ]
  %1975 = phi i32 [ %1960, %1958 ], [ %2091, %2089 ]
  %1976 = zext i32 %1975 to i64
  %1977 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %1976
  %1978 = load i64, i64* %19, align 8
  %1979 = add i64 %1978, 8
  %1980 = icmp ugt i64 %1978, -9
  br i1 %1980, label %1984, label %1981

1981:                                             ; preds = %1973
  %1982 = load i64, i64* %1961, align 8
  %1983 = icmp ugt i64 %1979, %1982
  br i1 %1983, label %1984, label %1985

1984:                                             ; preds = %1981, %1973
  store i8 1, i8* %1963, align 8
  br label %1990

1985:                                             ; preds = %1981
  %1986 = load i8*, i8** %1962, align 8
  %1987 = getelementptr inbounds i8, i8* %1986, i64 %1978
  %1988 = bitcast i8* %1987 to i64*
  %1989 = load i64, i64* %1988, align 1
  store i64 %1979, i64* %19, align 8
  br label %1990

1990:                                             ; preds = %1984, %1985
  %1991 = phi i64 [ 0, %1984 ], [ %1989, %1985 ]
  %1992 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %1976, i32 0, i32 1
  %1993 = bitcast %"struct.sh::ShaderVariable"** %1992 to i64*
  %1994 = load i64, i64* %1993, align 8
  %1995 = bitcast %"class.std::__1::vector.70"* %1977 to i64*
  %1996 = load i64, i64* %1995, align 8
  %1997 = sub i64 %1994, %1996
  %1998 = sdiv exact i64 %1997, 208
  %1999 = icmp ugt i64 %1991, %1998
  %2000 = inttoptr i64 %1996 to %"struct.sh::ShaderVariable"*
  %2001 = inttoptr i64 %1994 to %"struct.sh::ShaderVariable"*
  br i1 %1999, label %2002, label %2005

2002:                                             ; preds = %1990
  %2003 = sub i64 %1991, %1998
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.70"* %1977, i64 %2003) #16
  %2004 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1992, align 8
  br label %2015

2005:                                             ; preds = %1990
  %2006 = icmp ult i64 %1991, %1998
  br i1 %2006, label %2007, label %2015

2007:                                             ; preds = %2005
  %2008 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2000, i64 %1991
  %2009 = icmp eq %"struct.sh::ShaderVariable"* %2008, %2001
  br i1 %2009, label %2014, label %2010

2010:                                             ; preds = %2007, %2010
  %2011 = phi %"struct.sh::ShaderVariable"* [ %2012, %2010 ], [ %2001, %2007 ]
  %2012 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2011, i64 -1
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %2012) #16
  %2013 = icmp eq %"struct.sh::ShaderVariable"* %2012, %2008
  br i1 %2013, label %2014, label %2010

2014:                                             ; preds = %2010, %2007
  store %"struct.sh::ShaderVariable"* %2008, %"struct.sh::ShaderVariable"** %1992, align 8
  br label %2015

2015:                                             ; preds = %2002, %2005, %2014
  %2016 = phi %"struct.sh::ShaderVariable"* [ %2004, %2002 ], [ %2001, %2005 ], [ %2008, %2014 ]
  %2017 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1977, i64 0, i32 0, i32 0
  %2018 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2017, align 8
  %2019 = icmp eq %"struct.sh::ShaderVariable"* %2018, %2016
  br i1 %2019, label %2020, label %2064

2020:                                             ; preds = %2064, %2015
  %2021 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %1976
  %2022 = load i64, i64* %19, align 8
  %2023 = add i64 %2022, 8
  %2024 = icmp ugt i64 %2022, -9
  br i1 %2024, label %2028, label %2025

2025:                                             ; preds = %2020
  %2026 = load i64, i64* %1961, align 8
  %2027 = icmp ugt i64 %2023, %2026
  br i1 %2027, label %2028, label %2029

2028:                                             ; preds = %2025, %2020
  store i8 1, i8* %1963, align 8
  br label %2034

2029:                                             ; preds = %2025
  %2030 = load i8*, i8** %1962, align 8
  %2031 = getelementptr inbounds i8, i8* %2030, i64 %2022
  %2032 = bitcast i8* %2031 to i64*
  %2033 = load i64, i64* %2032, align 1
  store i64 %2023, i64* %19, align 8
  br label %2034

2034:                                             ; preds = %2028, %2029
  %2035 = phi i64 [ 0, %2028 ], [ %2033, %2029 ]
  %2036 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %1976, i32 0, i32 1
  %2037 = bitcast %"struct.sh::ShaderVariable"** %2036 to i64*
  %2038 = load i64, i64* %2037, align 8
  %2039 = bitcast %"class.std::__1::vector.70"* %2021 to i64*
  %2040 = load i64, i64* %2039, align 8
  %2041 = sub i64 %2038, %2040
  %2042 = sdiv exact i64 %2041, 208
  %2043 = icmp ugt i64 %2035, %2042
  %2044 = inttoptr i64 %2040 to %"struct.sh::ShaderVariable"*
  %2045 = inttoptr i64 %2038 to %"struct.sh::ShaderVariable"*
  br i1 %2043, label %2046, label %2049

2046:                                             ; preds = %2034
  %2047 = sub i64 %2035, %2042
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.70"* %2021, i64 %2047) #16
  %2048 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2036, align 8
  br label %2059

2049:                                             ; preds = %2034
  %2050 = icmp ult i64 %2035, %2042
  br i1 %2050, label %2051, label %2059

2051:                                             ; preds = %2049
  %2052 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2044, i64 %2035
  %2053 = icmp eq %"struct.sh::ShaderVariable"* %2052, %2045
  br i1 %2053, label %2058, label %2054

2054:                                             ; preds = %2051, %2054
  %2055 = phi %"struct.sh::ShaderVariable"* [ %2056, %2054 ], [ %2045, %2051 ]
  %2056 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2055, i64 -1
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %2056) #16
  %2057 = icmp eq %"struct.sh::ShaderVariable"* %2056, %2052
  br i1 %2057, label %2058, label %2054

2058:                                             ; preds = %2054, %2051
  store %"struct.sh::ShaderVariable"* %2052, %"struct.sh::ShaderVariable"** %2036, align 8
  br label %2059

2059:                                             ; preds = %2046, %2049, %2058
  %2060 = phi %"struct.sh::ShaderVariable"* [ %2048, %2046 ], [ %2045, %2049 ], [ %2052, %2058 ]
  %2061 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2021, i64 0, i32 0, i32 0
  %2062 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2061, align 8
  %2063 = icmp eq %"struct.sh::ShaderVariable"* %2062, %2060
  br i1 %2063, label %2068, label %2092

2064:                                             ; preds = %2015, %2064
  %2065 = phi %"struct.sh::ShaderVariable"* [ %2066, %2064 ], [ %2018, %2015 ]
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* %2065) #16
  %2066 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2065, i64 1
  %2067 = icmp eq %"struct.sh::ShaderVariable"* %2066, %2016
  br i1 %2067, label %2020, label %2064

2068:                                             ; preds = %2092, %2059
  %2069 = load i64, i64* %19, align 8
  %2070 = add i64 %2069, 4
  %2071 = icmp ugt i64 %2069, -5
  br i1 %2071, label %2075, label %2072

2072:                                             ; preds = %2068
  %2073 = load i64, i64* %1961, align 8
  %2074 = icmp ugt i64 %2070, %2073
  br i1 %2074, label %2075, label %2076

2075:                                             ; preds = %2072, %2068
  store i8 1, i8* %1963, align 8
  br label %2081

2076:                                             ; preds = %2072
  %2077 = load i8*, i8** %1962, align 8
  %2078 = getelementptr inbounds i8, i8* %2077, i64 %2069
  %2079 = bitcast i8* %2078 to i32*
  %2080 = load i32, i32* %2079, align 1
  store i64 %2070, i64* %19, align 8
  br label %2081

2081:                                             ; preds = %2075, %2076
  %2082 = phi i32 [ 0, %2075 ], [ %2080, %2076 ]
  %2083 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 59, i32 0, i32 0, i64 %1976
  store i32 %2082, i32* %2083, align 4
  %2084 = shl i32 1, %1975
  %2085 = trunc i32 %2084 to i8
  %2086 = xor i8 %2085, -1
  %2087 = and i8 %1974, %2086
  %2088 = icmp eq i8 %2087, 0
  br i1 %2088, label %1964, label %2089

2089:                                             ; preds = %2081
  %2090 = zext i8 %2087 to i32
  %2091 = call i32 @llvm.cttz.i32(i32 %2090, i1 true) #16, !range !19
  br label %1973

2092:                                             ; preds = %2059, %2092
  %2093 = phi %"struct.sh::ShaderVariable"* [ %2094, %2092 ], [ %2062, %2059 ]
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* %2093) #16
  %2094 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2093, i64 1
  %2095 = icmp eq %"struct.sh::ShaderVariable"* %2094, %2060
  br i1 %2095, label %2068, label %2092

2096:                                             ; preds = %2212, %1967
  %2097 = phi i8 [ %1965, %1967 ], [ %2210, %2212 ]
  %2098 = phi i32 [ %1969, %1967 ], [ %2214, %2212 ]
  %2099 = zext i32 %2098 to i64
  %2100 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %2099
  %2101 = load i64, i64* %19, align 8
  %2102 = add i64 %2101, 8
  %2103 = icmp ugt i64 %2101, -9
  br i1 %2103, label %2107, label %2104

2104:                                             ; preds = %2096
  %2105 = load i64, i64* %1970, align 8
  %2106 = icmp ugt i64 %2102, %2105
  br i1 %2106, label %2107, label %2108

2107:                                             ; preds = %2104, %2096
  store i8 1, i8* %1972, align 8
  br label %2113

2108:                                             ; preds = %2104
  %2109 = load i8*, i8** %1971, align 8
  %2110 = getelementptr inbounds i8, i8* %2109, i64 %2101
  %2111 = bitcast i8* %2110 to i64*
  %2112 = load i64, i64* %2111, align 1
  store i64 %2102, i64* %19, align 8
  br label %2113

2113:                                             ; preds = %2107, %2108
  %2114 = phi i64 [ 0, %2107 ], [ %2112, %2108 ]
  %2115 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %2099, i32 0, i32 1
  %2116 = bitcast %"struct.sh::ShaderVariable"** %2115 to i64*
  %2117 = load i64, i64* %2116, align 8
  %2118 = bitcast %"class.std::__1::vector.70"* %2100 to i64*
  %2119 = load i64, i64* %2118, align 8
  %2120 = sub i64 %2117, %2119
  %2121 = sdiv exact i64 %2120, 208
  %2122 = icmp ugt i64 %2114, %2121
  %2123 = inttoptr i64 %2119 to %"struct.sh::ShaderVariable"*
  %2124 = inttoptr i64 %2117 to %"struct.sh::ShaderVariable"*
  br i1 %2122, label %2125, label %2128

2125:                                             ; preds = %2113
  %2126 = sub i64 %2114, %2121
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.70"* %2100, i64 %2126) #16
  %2127 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2115, align 8
  br label %2138

2128:                                             ; preds = %2113
  %2129 = icmp ult i64 %2114, %2121
  br i1 %2129, label %2130, label %2138

2130:                                             ; preds = %2128
  %2131 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2123, i64 %2114
  %2132 = icmp eq %"struct.sh::ShaderVariable"* %2131, %2124
  br i1 %2132, label %2137, label %2133

2133:                                             ; preds = %2130, %2133
  %2134 = phi %"struct.sh::ShaderVariable"* [ %2135, %2133 ], [ %2124, %2130 ]
  %2135 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2134, i64 -1
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %2135) #16
  %2136 = icmp eq %"struct.sh::ShaderVariable"* %2135, %2131
  br i1 %2136, label %2137, label %2133

2137:                                             ; preds = %2133, %2130
  store %"struct.sh::ShaderVariable"* %2131, %"struct.sh::ShaderVariable"** %2115, align 8
  br label %2138

2138:                                             ; preds = %2125, %2128, %2137
  %2139 = phi %"struct.sh::ShaderVariable"* [ %2127, %2125 ], [ %2124, %2128 ], [ %2131, %2137 ]
  %2140 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2100, i64 0, i32 0, i32 0
  %2141 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2140, align 8
  %2142 = icmp eq %"struct.sh::ShaderVariable"* %2141, %2139
  br i1 %2142, label %2143, label %2187

2143:                                             ; preds = %2187, %2138
  %2144 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %2099
  %2145 = load i64, i64* %19, align 8
  %2146 = add i64 %2145, 8
  %2147 = icmp ugt i64 %2145, -9
  br i1 %2147, label %2151, label %2148

2148:                                             ; preds = %2143
  %2149 = load i64, i64* %1970, align 8
  %2150 = icmp ugt i64 %2146, %2149
  br i1 %2150, label %2151, label %2152

2151:                                             ; preds = %2148, %2143
  store i8 1, i8* %1972, align 8
  br label %2157

2152:                                             ; preds = %2148
  %2153 = load i8*, i8** %1971, align 8
  %2154 = getelementptr inbounds i8, i8* %2153, i64 %2145
  %2155 = bitcast i8* %2154 to i64*
  %2156 = load i64, i64* %2155, align 1
  store i64 %2146, i64* %19, align 8
  br label %2157

2157:                                             ; preds = %2151, %2152
  %2158 = phi i64 [ 0, %2151 ], [ %2156, %2152 ]
  %2159 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %2099, i32 0, i32 1
  %2160 = bitcast %"struct.sh::ShaderVariable"** %2159 to i64*
  %2161 = load i64, i64* %2160, align 8
  %2162 = bitcast %"class.std::__1::vector.70"* %2144 to i64*
  %2163 = load i64, i64* %2162, align 8
  %2164 = sub i64 %2161, %2163
  %2165 = sdiv exact i64 %2164, 208
  %2166 = icmp ugt i64 %2158, %2165
  %2167 = inttoptr i64 %2163 to %"struct.sh::ShaderVariable"*
  %2168 = inttoptr i64 %2161 to %"struct.sh::ShaderVariable"*
  br i1 %2166, label %2169, label %2172

2169:                                             ; preds = %2157
  %2170 = sub i64 %2158, %2165
  call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.70"* %2144, i64 %2170) #16
  %2171 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2159, align 8
  br label %2182

2172:                                             ; preds = %2157
  %2173 = icmp ult i64 %2158, %2165
  br i1 %2173, label %2174, label %2182

2174:                                             ; preds = %2172
  %2175 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2167, i64 %2158
  %2176 = icmp eq %"struct.sh::ShaderVariable"* %2175, %2168
  br i1 %2176, label %2181, label %2177

2177:                                             ; preds = %2174, %2177
  %2178 = phi %"struct.sh::ShaderVariable"* [ %2179, %2177 ], [ %2168, %2174 ]
  %2179 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2178, i64 -1
  call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %2179) #16
  %2180 = icmp eq %"struct.sh::ShaderVariable"* %2179, %2175
  br i1 %2180, label %2181, label %2177

2181:                                             ; preds = %2177, %2174
  store %"struct.sh::ShaderVariable"* %2175, %"struct.sh::ShaderVariable"** %2159, align 8
  br label %2182

2182:                                             ; preds = %2169, %2172, %2181
  %2183 = phi %"struct.sh::ShaderVariable"* [ %2171, %2169 ], [ %2168, %2172 ], [ %2175, %2181 ]
  %2184 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2144, i64 0, i32 0, i32 0
  %2185 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %2184, align 8
  %2186 = icmp eq %"struct.sh::ShaderVariable"* %2185, %2183
  br i1 %2186, label %2191, label %2215

2187:                                             ; preds = %2138, %2187
  %2188 = phi %"struct.sh::ShaderVariable"* [ %2189, %2187 ], [ %2141, %2138 ]
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* %2188) #16
  %2189 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2188, i64 1
  %2190 = icmp eq %"struct.sh::ShaderVariable"* %2189, %2139
  br i1 %2190, label %2143, label %2187

2191:                                             ; preds = %2215, %2182
  %2192 = load i64, i64* %19, align 8
  %2193 = add i64 %2192, 4
  %2194 = icmp ugt i64 %2192, -5
  br i1 %2194, label %2198, label %2195

2195:                                             ; preds = %2191
  %2196 = load i64, i64* %1970, align 8
  %2197 = icmp ugt i64 %2193, %2196
  br i1 %2197, label %2198, label %2199

2198:                                             ; preds = %2195, %2191
  store i8 1, i8* %1972, align 8
  br label %2204

2199:                                             ; preds = %2195
  %2200 = load i8*, i8** %1971, align 8
  %2201 = getelementptr inbounds i8, i8* %2200, i64 %2192
  %2202 = bitcast i8* %2201 to i32*
  %2203 = load i32, i32* %2202, align 1
  store i64 %2193, i64* %19, align 8
  br label %2204

2204:                                             ; preds = %2198, %2199
  %2205 = phi i32 [ 0, %2198 ], [ %2203, %2199 ]
  %2206 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 59, i32 0, i32 0, i64 %2099
  store i32 %2205, i32* %2206, align 4
  %2207 = shl i32 1, %2098
  %2208 = trunc i32 %2207 to i8
  %2209 = xor i8 %2208, -1
  %2210 = and i8 %2097, %2209
  %2211 = icmp eq i8 %2210, 0
  br i1 %2211, label %2219, label %2212

2212:                                             ; preds = %2204
  %2213 = zext i8 %2210 to i32
  %2214 = call i32 @llvm.cttz.i32(i32 %2213, i1 true) #16, !range !19
  br label %2096

2215:                                             ; preds = %2182, %2215
  %2216 = phi %"struct.sh::ShaderVariable"* [ %2217, %2215 ], [ %2185, %2182 ]
  call void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"* %2, %"struct.sh::ShaderVariable"* %2216) #16
  %2217 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2216, i64 1
  %2218 = icmp eq %"struct.sh::ShaderVariable"* %2217, %2183
  br i1 %2218, label %2191, label %2215

2219:                                             ; preds = %2204, %1964, %1878
  ret void

2220:                                             ; preds = %819
  %2221 = load i64, i64* %610, align 8
  %2222 = icmp ugt i64 %822, %2221
  br i1 %2222, label %2229, label %2223

2223:                                             ; preds = %2220
  %2224 = load i8*, i8** %611, align 8
  %2225 = getelementptr inbounds i8, i8* %2224, i64 %821
  %2226 = bitcast i8* %2225 to i32*
  %2227 = load i32, i32* %2226, align 1
  store i64 %822, i64* %19, align 8
  %2228 = icmp sgt i32 %2227, 0
  br label %2230

2229:                                             ; preds = %2220, %819
  store i8 1, i8* %612, align 8
  br label %2230

2230:                                             ; preds = %2229, %2223
  %2231 = phi i1 [ false, %2229 ], [ %2228, %2223 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 1, i1 zeroext %2231) #16
  %2232 = load i64, i64* %19, align 8
  %2233 = add i64 %2232, 4
  %2234 = icmp ugt i64 %2232, -5
  br i1 %2234, label %2244, label %2235

2235:                                             ; preds = %2230
  %2236 = load i64, i64* %610, align 8
  %2237 = icmp ugt i64 %2233, %2236
  br i1 %2237, label %2244, label %2238

2238:                                             ; preds = %2235
  %2239 = load i8*, i8** %611, align 8
  %2240 = getelementptr inbounds i8, i8* %2239, i64 %2232
  %2241 = bitcast i8* %2240 to i32*
  %2242 = load i32, i32* %2241, align 1
  store i64 %2233, i64* %19, align 8
  %2243 = icmp sgt i32 %2242, 0
  br label %2245

2244:                                             ; preds = %2235, %2230
  store i8 1, i8* %612, align 8
  br label %2245

2245:                                             ; preds = %2244, %2238
  %2246 = phi i1 [ false, %2244 ], [ %2243, %2238 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 2, i1 zeroext %2246) #16
  %2247 = load i64, i64* %19, align 8
  %2248 = add i64 %2247, 4
  %2249 = icmp ugt i64 %2247, -5
  br i1 %2249, label %2259, label %2250

2250:                                             ; preds = %2245
  %2251 = load i64, i64* %610, align 8
  %2252 = icmp ugt i64 %2248, %2251
  br i1 %2252, label %2259, label %2253

2253:                                             ; preds = %2250
  %2254 = load i8*, i8** %611, align 8
  %2255 = getelementptr inbounds i8, i8* %2254, i64 %2247
  %2256 = bitcast i8* %2255 to i32*
  %2257 = load i32, i32* %2256, align 1
  store i64 %2248, i64* %19, align 8
  %2258 = icmp sgt i32 %2257, 0
  br label %2260

2259:                                             ; preds = %2250, %2245
  store i8 1, i8* %612, align 8
  br label %2260

2260:                                             ; preds = %2259, %2253
  %2261 = phi i1 [ false, %2259 ], [ %2258, %2253 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 3, i1 zeroext %2261) #16
  %2262 = load i64, i64* %19, align 8
  %2263 = add i64 %2262, 4
  %2264 = icmp ugt i64 %2262, -5
  br i1 %2264, label %2274, label %2265

2265:                                             ; preds = %2260
  %2266 = load i64, i64* %610, align 8
  %2267 = icmp ugt i64 %2263, %2266
  br i1 %2267, label %2274, label %2268

2268:                                             ; preds = %2265
  %2269 = load i8*, i8** %611, align 8
  %2270 = getelementptr inbounds i8, i8* %2269, i64 %2262
  %2271 = bitcast i8* %2270 to i32*
  %2272 = load i32, i32* %2271, align 1
  store i64 %2263, i64* %19, align 8
  %2273 = icmp sgt i32 %2272, 0
  br label %2275

2274:                                             ; preds = %2265, %2260
  store i8 1, i8* %612, align 8
  br label %2275

2275:                                             ; preds = %2274, %2268
  %2276 = phi i1 [ false, %2274 ], [ %2273, %2268 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 4, i1 zeroext %2276) #16
  %2277 = load i64, i64* %19, align 8
  %2278 = add i64 %2277, 4
  %2279 = icmp ugt i64 %2277, -5
  br i1 %2279, label %2289, label %2280

2280:                                             ; preds = %2275
  %2281 = load i64, i64* %610, align 8
  %2282 = icmp ugt i64 %2278, %2281
  br i1 %2282, label %2289, label %2283

2283:                                             ; preds = %2280
  %2284 = load i8*, i8** %611, align 8
  %2285 = getelementptr inbounds i8, i8* %2284, i64 %2277
  %2286 = bitcast i8* %2285 to i32*
  %2287 = load i32, i32* %2286, align 1
  store i64 %2278, i64* %19, align 8
  %2288 = icmp sgt i32 %2287, 0
  br label %2290

2289:                                             ; preds = %2280, %2275
  store i8 1, i8* %612, align 8
  br label %2290

2290:                                             ; preds = %2289, %2283
  %2291 = phi i1 [ false, %2289 ], [ %2288, %2283 ]
  call void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"* nonnull %623, i8 zeroext 5, i1 zeroext %2291) #16
  %2292 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %624, align 8
  %2293 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %625, align 8
  %2294 = icmp eq %"struct.gl::LinkedUniform"* %2292, %2293
  br i1 %2294, label %805, label %802
}

declare void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #1

declare void @_ZN2gl13LoadShaderVarEPNS_17BinaryInputStreamEPN2sh14ShaderVariableE(%"class.gl::BinaryInputStream"*, %"struct.sh::ShaderVariable"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #3

declare void @_ZN2gl13LinkedUniformC1Ev(%"struct.gl::LinkedUniform"*) unnamed_addr #1

declare void @_ZN2gl19LoadBlockMemberInfoEPNS_17BinaryInputStreamEPN2sh15BlockMemberInfoE(%"class.gl::BinaryInputStream"*, %"struct.sh::BlockMemberInfo"*) local_unnamed_addr #1

declare dereferenceable(72) %"struct.gl::UniformTypeInfo"* @_ZN2gl18GetUniformTypeInfoEj(i32) local_unnamed_addr #1

declare void @_ZN2gl14ActiveVariable9setActiveENS_10ShaderTypeEb(%"struct.gl::ActiveVariable"*, i8 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl13LinkedUniformD1Ev(%"struct.gl::LinkedUniform"*) unnamed_addr #3

declare void @_ZN2gl14InterfaceBlockC1Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #1

declare void @_ZN2gl18LoadInterfaceBlockEPNS_17BinaryInputStreamEPNS_14InterfaceBlockE(%"class.gl::BinaryInputStream"*, %"struct.gl::InterfaceBlock"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD2Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %1, %8
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #16
  ret void
}

declare void @_ZN2gl20ShaderVariableBufferC1Ev(%"struct.gl::ShaderVariableBuffer"*) unnamed_addr #1

declare void @_ZN2gl24LoadShaderVariableBufferEPNS_17BinaryInputStreamEPNS_20ShaderVariableBufferE(%"class.gl::BinaryInputStream"*, %"struct.gl::ShaderVariableBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl20ShaderVariableBufferD1Ev(%"struct.gl::ShaderVariableBuffer"*) unnamed_addr #3

declare void @_ZN2gl16VariableLocationC1Ev(%"struct.gl::VariableLocation"*) unnamed_addr #1

declare void @_ZN2gl12ImageBindingC1EmNS_11TextureTypeE(%"struct.gl::ImageBinding"*, i64, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl17ProgramExecutable4saveEbPNS_18BinaryOutputStreamE(%"class.gl::ProgramExecutable"* readonly, i1 zeroext, %"class.gl::BinaryOutputStream"*) local_unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = alloca i32, align 4
  %6 = alloca i64, align 8
  %7 = alloca i64, align 8
  %8 = alloca i64, align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i64, align 8
  %13 = alloca i64, align 8
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i64, align 8
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i64, align 8
  %21 = alloca i32, align 4
  %22 = alloca i64, align 8
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i32, align 4
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i64, align 8
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i64, align 8
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i32, align 4
  %41 = alloca i64, align 8
  %42 = alloca i32, align 4
  %43 = alloca i64, align 8
  %44 = alloca i32, align 4
  %45 = alloca i32, align 4
  %46 = alloca i32, align 4
  %47 = alloca i64, align 8
  %48 = alloca i64, align 8
  %49 = alloca i64, align 8
  %50 = alloca i32, align 4
  %51 = alloca i32, align 4
  %52 = alloca i32, align 4
  %53 = alloca i32, align 4
  %54 = alloca i32, align 4
  %55 = alloca i32, align 4
  %56 = alloca i32, align 4
  %57 = alloca i32, align 4
  %58 = alloca i32, align 4
  %59 = alloca i32, align 4
  %60 = alloca i32, align 4
  %61 = alloca i32, align 4
  %62 = alloca i32, align 4
  %63 = alloca i32, align 4
  %64 = alloca i32, align 4
  %65 = alloca i32, align 4
  %66 = alloca i32, align 4
  %67 = alloca i32, align 4
  %68 = alloca i32, align 4
  %69 = alloca i32, align 4
  %70 = alloca i32, align 4
  %71 = alloca i32, align 4
  %72 = alloca i32, align 4
  %73 = alloca i32, align 4
  %74 = alloca i64, align 8
  %75 = alloca i32, align 4
  %76 = alloca i64, align 8
  %77 = alloca i32, align 4
  %78 = alloca i32, align 4
  %79 = alloca i32, align 4
  %80 = alloca i32, align 4
  %81 = alloca i64, align 8
  %82 = alloca i32, align 4
  %83 = alloca i64, align 8
  %84 = alloca i32, align 4
  %85 = alloca i32, align 4
  %86 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 8, i32 0
  %87 = load i64, i64* %86, align 8
  %88 = trunc i64 %87 to i32
  %89 = bitcast i32* %84 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %89) #16
  store i32 %88, i32* %84, align 4
  %90 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %2, i64 0, i32 0
  %91 = getelementptr inbounds %"class.gl::BinaryOutputStream", %"class.gl::BinaryOutputStream"* %2, i64 0, i32 0, i32 0, i32 1
  %92 = load i8*, i8** %91, align 8
  %93 = getelementptr inbounds i32, i32* %84, i64 1
  %94 = bitcast i32* %93 to i8*
  %95 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %92, i8* nonnull %89, i8* %94) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %89) #16
  %96 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 9, i32 0
  %97 = load i64, i64* %96, align 8
  %98 = trunc i64 %97 to i32
  %99 = bitcast i32* %82 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %99) #16
  store i32 %98, i32* %82, align 4
  %100 = load i8*, i8** %91, align 8
  %101 = getelementptr inbounds i32, i32* %82, i64 1
  %102 = bitcast i32* %101 to i8*
  %103 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %100, i8* nonnull %99, i8* %102) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %99) #16
  %104 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = trunc i64 %105 to i32
  %107 = bitcast i32* %80 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %107) #16
  store i32 %106, i32* %80, align 4
  %108 = load i8*, i8** %91, align 8
  %109 = getelementptr inbounds i32, i32* %80, i64 1
  %110 = bitcast i32* %109 to i8*
  %111 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %108, i8* nonnull %107, i8* %110) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %107) #16
  %112 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 6
  %113 = load i32, i32* %112, align 8
  %114 = bitcast i32* %79 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #16
  store i32 %113, i32* %79, align 4
  %115 = load i8*, i8** %91, align 8
  %116 = getelementptr inbounds i32, i32* %79, i64 1
  %117 = bitcast i32* %116 to i8*
  %118 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %115, i8* nonnull %114, i8* %117) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #16
  %119 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = bitcast i32* %77 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %121) #16
  store i32 %120, i32* %77, align 4
  %122 = load i8*, i8** %91, align 8
  %123 = getelementptr inbounds i32, i32* %77, i64 1
  %124 = bitcast i32* %123 to i8*
  %125 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %122, i8* nonnull %121, i8* %124) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %121) #16
  %126 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = bitcast i32* %75 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %128) #16
  store i32 %127, i32* %75, align 4
  %129 = load i8*, i8** %91, align 8
  %130 = getelementptr inbounds i32, i32* %75, i64 1
  %131 = bitcast i32* %130 to i8*
  %132 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %129, i8* nonnull %128, i8* %131) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %128) #16
  %133 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  %134 = load i8, i8* %133, align 1
  %135 = bitcast i32* %73 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %135) #16
  %136 = zext i8 %134 to i32
  store i32 %136, i32* %73, align 4
  %137 = load i8*, i8** %91, align 8
  %138 = getelementptr inbounds i32, i32* %73, i64 1
  %139 = bitcast i32* %138 to i8*
  %140 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %137, i8* nonnull %135, i8* %139) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %135) #16
  %141 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = bitcast i32* %71 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %143) #16
  %144 = zext i8 %142 to i32
  store i32 %144, i32* %71, align 4
  %145 = load i8*, i8** %91, align 8
  %146 = getelementptr inbounds i32, i32* %71, i64 1
  %147 = bitcast i32* %146 to i8*
  %148 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %145, i8* nonnull %143, i8* %147) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %143) #16
  %149 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %150 = load i8, i8* %149, align 4, !range !15
  %151 = bitcast i32* %70 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %151) #16
  %152 = zext i8 %150 to i32
  store i32 %152, i32* %70, align 4
  %153 = load i8*, i8** %91, align 8
  %154 = getelementptr inbounds i32, i32* %70, i64 1
  %155 = bitcast i32* %154 to i8*
  %156 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %153, i8* nonnull %151, i8* %155) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %151) #16
  %157 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 43
  %158 = load i8, i8* %157, align 8, !range !15
  %159 = bitcast i32* %69 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %159) #16
  %160 = zext i8 %158 to i32
  store i32 %160, i32* %69, align 4
  %161 = load i8*, i8** %91, align 8
  %162 = getelementptr inbounds i32, i32* %69, i64 1
  %163 = bitcast i32* %162 to i8*
  %164 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %161, i8* nonnull %159, i8* %163) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %159) #16
  %165 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 44
  %166 = load i8, i8* %165, align 1, !range !15
  %167 = bitcast i32* %68 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %167) #16
  %168 = zext i8 %166 to i32
  store i32 %168, i32* %68, align 4
  %169 = load i8*, i8** %91, align 8
  %170 = getelementptr inbounds i32, i32* %68, i64 1
  %171 = bitcast i32* %170 to i8*
  %172 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %169, i8* nonnull %167, i8* %171) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %167) #16
  %173 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 45
  %174 = load i8, i8* %173, align 2, !range !15
  %175 = bitcast i32* %67 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %175) #16
  %176 = zext i8 %174 to i32
  store i32 %176, i32* %67, align 4
  %177 = load i8*, i8** %91, align 8
  %178 = getelementptr inbounds i32, i32* %67, i64 1
  %179 = bitcast i32* %178 to i8*
  %180 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %177, i8* nonnull %175, i8* %179) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %175) #16
  %181 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 46
  %182 = load i8, i8* %181, align 1, !range !15
  %183 = bitcast i32* %66 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %183) #16
  %184 = zext i8 %182 to i32
  store i32 %184, i32* %66, align 4
  %185 = load i8*, i8** %91, align 8
  %186 = getelementptr inbounds i32, i32* %66, i64 1
  %187 = bitcast i32* %186 to i8*
  %188 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %185, i8* nonnull %183, i8* %187) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %183) #16
  %189 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 47
  %190 = load i8, i8* %189, align 4, !range !15
  %191 = bitcast i32* %65 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %191) #16
  %192 = zext i8 %190 to i32
  store i32 %192, i32* %65, align 4
  %193 = load i8*, i8** %91, align 8
  %194 = getelementptr inbounds i32, i32* %65, i64 1
  %195 = bitcast i32* %194 to i8*
  %196 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %193, i8* nonnull %191, i8* %195) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %191) #16
  %197 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 48
  %198 = load i8, i8* %197, align 1, !range !15
  %199 = bitcast i32* %64 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %199) #16
  %200 = zext i8 %198 to i32
  store i32 %200, i32* %64, align 4
  %201 = load i8*, i8** %91, align 8
  %202 = getelementptr inbounds i32, i32* %64, i64 1
  %203 = bitcast i32* %202 to i8*
  %204 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %201, i8* nonnull %199, i8* %203) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %199) #16
  %205 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 49
  %206 = load i8, i8* %205, align 2, !range !15
  %207 = bitcast i32* %63 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #16
  %208 = zext i8 %206 to i32
  store i32 %208, i32* %63, align 4
  %209 = load i8*, i8** %91, align 8
  %210 = getelementptr inbounds i32, i32* %63, i64 1
  %211 = bitcast i32* %210 to i8*
  %212 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %209, i8* nonnull %207, i8* %211) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #16
  %213 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 50
  %214 = load i8, i8* %213, align 1, !range !15
  %215 = bitcast i32* %62 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %215) #16
  %216 = zext i8 %214 to i32
  store i32 %216, i32* %62, align 4
  %217 = load i8*, i8** %91, align 8
  %218 = getelementptr inbounds i32, i32* %62, i64 1
  %219 = bitcast i32* %218 to i8*
  %220 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %217, i8* nonnull %215, i8* %219) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %215) #16
  %221 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 51
  %222 = load i8, i8* %221, align 8, !range !15
  %223 = bitcast i32* %61 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %223) #16
  %224 = zext i8 %222 to i32
  store i32 %224, i32* %61, align 4
  %225 = load i8*, i8** %91, align 8
  %226 = getelementptr inbounds i32, i32* %61, i64 1
  %227 = bitcast i32* %226 to i8*
  %228 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %225, i8* nonnull %223, i8* %227) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %223) #16
  %229 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 52
  %230 = load i8, i8* %229, align 1, !range !15
  %231 = bitcast i32* %60 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %231) #16
  %232 = zext i8 %230 to i32
  store i32 %232, i32* %60, align 4
  %233 = load i8*, i8** %91, align 8
  %234 = getelementptr inbounds i32, i32* %60, i64 1
  %235 = bitcast i32* %234 to i8*
  %236 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %233, i8* nonnull %231, i8* %235) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %231) #16
  %237 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 60
  %238 = load i8, i8* %237, align 8
  %239 = bitcast i32* %59 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #16
  %240 = zext i8 %238 to i32
  store i32 %240, i32* %59, align 4
  %241 = load i8*, i8** %91, align 8
  %242 = getelementptr inbounds i32, i32* %59, i64 1
  %243 = bitcast i32* %242 to i8*
  %244 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %241, i8* nonnull %239, i8* %243) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #16
  %245 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 61
  %246 = load i8, i8* %245, align 1
  %247 = bitcast i32* %58 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %247) #16
  %248 = zext i8 %246 to i32
  store i32 %248, i32* %58, align 4
  %249 = load i8*, i8** %91, align 8
  %250 = getelementptr inbounds i32, i32* %58, i64 1
  %251 = bitcast i32* %250 to i8*
  %252 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %249, i8* nonnull %247, i8* %251) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %247) #16
  %253 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 63
  %254 = load i32, i32* %253, align 4
  %255 = bitcast i32* %57 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %255) #16
  store i32 %254, i32* %57, align 4
  %256 = load i8*, i8** %91, align 8
  %257 = getelementptr inbounds i32, i32* %57, i64 1
  %258 = bitcast i32* %257 to i8*
  %259 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %256, i8* nonnull %255, i8* %258) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %255) #16
  %260 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 64
  %261 = load i32, i32* %260, align 8
  %262 = bitcast i32* %56 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %262) #16
  store i32 %261, i32* %56, align 4
  %263 = load i8*, i8** %91, align 8
  %264 = getelementptr inbounds i32, i32* %56, i64 1
  %265 = bitcast i32* %264 to i8*
  %266 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %263, i8* nonnull %262, i8* %265) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %262) #16
  %267 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 65
  %268 = load i32, i32* %267, align 4
  %269 = bitcast i32* %55 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %269) #16
  store i32 %268, i32* %55, align 4
  %270 = load i8*, i8** %91, align 8
  %271 = getelementptr inbounds i32, i32* %55, i64 1
  %272 = bitcast i32* %271 to i8*
  %273 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %270, i8* nonnull %269, i8* %272) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %269) #16
  %274 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 66
  %275 = load i32, i32* %274, align 8
  %276 = bitcast i32* %54 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %276) #16
  store i32 %275, i32* %54, align 4
  %277 = load i8*, i8** %91, align 8
  %278 = getelementptr inbounds i32, i32* %54, i64 1
  %279 = bitcast i32* %278 to i8*
  %280 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %277, i8* nonnull %276, i8* %279) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %276) #16
  %281 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 67
  %282 = load i32, i32* %281, align 4
  %283 = bitcast i32* %53 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %283) #16
  store i32 %282, i32* %53, align 4
  %284 = load i8*, i8** %91, align 8
  %285 = getelementptr inbounds i32, i32* %53, i64 1
  %286 = bitcast i32* %285 to i8*
  %287 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %284, i8* nonnull %283, i8* %286) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %283) #16
  %288 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 68
  %289 = load i32, i32* %288, align 8
  %290 = bitcast i32* %52 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %290) #16
  store i32 %289, i32* %52, align 4
  %291 = load i8*, i8** %91, align 8
  %292 = getelementptr inbounds i32, i32* %52, i64 1
  %293 = bitcast i32* %292 to i8*
  %294 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %291, i8* nonnull %290, i8* %293) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %290) #16
  %295 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 69
  %296 = load i32, i32* %295, align 4
  %297 = bitcast i32* %51 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %297) #16
  store i32 %296, i32* %51, align 4
  %298 = load i8*, i8** %91, align 8
  %299 = getelementptr inbounds i32, i32* %51, i64 1
  %300 = bitcast i32* %299 to i8*
  %301 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %298, i8* nonnull %297, i8* %300) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %297) #16
  %302 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25
  %303 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 25, i32 0, i32 1
  %304 = bitcast %"struct.sh::ShaderVariable"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = bitcast %"class.std::__1::vector.70"* %302 to i64*
  %307 = load i64, i64* %306, align 8
  %308 = sub i64 %305, %307
  %309 = sdiv exact i64 %308, 208
  %310 = bitcast i64* %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #16
  store i64 %309, i64* %48, align 8
  %311 = load i8*, i8** %91, align 8
  %312 = getelementptr inbounds i64, i64* %48, i64 1
  %313 = bitcast i64* %312 to i8*
  %314 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %311, i8* nonnull %310, i8* %313) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #16
  %315 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %302, i64 0, i32 0, i32 0
  %316 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %315, align 8
  %317 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %303, align 8
  %318 = icmp eq %"struct.sh::ShaderVariable"* %316, %317
  br i1 %318, label %323, label %319

319:                                              ; preds = %3
  %320 = bitcast i32* %36 to i8*
  %321 = getelementptr inbounds i32, i32* %36, i64 1
  %322 = bitcast i32* %321 to i8*
  br label %357

323:                                              ; preds = %357, %3
  %324 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30
  %325 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 30, i32 0, i32 1
  %326 = bitcast %"struct.gl::LinkedUniform"** %325 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = bitcast %"class.std::__1::vector.187"* %324 to i64*
  %329 = load i64, i64* %328, align 8
  %330 = sub i64 %327, %329
  %331 = sdiv exact i64 %330, 280
  %332 = bitcast i64* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %332) #16
  store i64 %331, i64* %41, align 8
  %333 = load i8*, i8** %91, align 8
  %334 = getelementptr inbounds i64, i64* %41, i64 1
  %335 = bitcast i64* %334 to i8*
  %336 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %333, i8* nonnull %332, i8* %335) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #16
  %337 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %324, i64 0, i32 0, i32 0
  %338 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %337, align 8
  %339 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %325, align 8
  %340 = icmp eq %"struct.gl::LinkedUniform"* %338, %339
  br i1 %340, label %365, label %341

341:                                              ; preds = %323
  %342 = bitcast i32* %25 to i8*
  %343 = getelementptr inbounds i32, i32* %25, i64 1
  %344 = bitcast i32* %343 to i8*
  %345 = bitcast i64* %22 to i8*
  %346 = getelementptr inbounds i64, i64* %22, i64 1
  %347 = bitcast i64* %346 to i8*
  %348 = bitcast i32* %23 to i8*
  %349 = getelementptr inbounds i32, i32* %23, i64 1
  %350 = bitcast i32* %349 to i8*
  %351 = bitcast i32* %24 to i8*
  %352 = getelementptr inbounds i32, i32* %24, i64 1
  %353 = bitcast i32* %352 to i8*
  %354 = bitcast i32* %18 to i8*
  %355 = getelementptr inbounds i32, i32* %18, i64 1
  %356 = bitcast i32* %355 to i8*
  br label %383

357:                                              ; preds = %319, %357
  %358 = phi %"struct.sh::ShaderVariable"* [ %316, %319 ], [ %363, %357 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %358) #16
  %359 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %358, i64 0, i32 11
  %360 = load i32, i32* %359, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %320) #16
  store i32 %360, i32* %36, align 4
  %361 = load i8*, i8** %91, align 8
  %362 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %361, i8* nonnull %320, i8* %322) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %320) #16
  %363 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %358, i64 1
  %364 = icmp eq %"struct.sh::ShaderVariable"* %363, %317
  br i1 %364, label %323, label %357

365:                                              ; preds = %419, %323
  %366 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33
  %367 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 1
  %368 = bitcast %"struct.gl::InterfaceBlock"** %367 to i64*
  %369 = load i64, i64* %368, align 8
  %370 = bitcast %"class.std::__1::vector.194"* %366 to i64*
  %371 = load i64, i64* %370, align 8
  %372 = sub i64 %369, %371
  %373 = sdiv exact i64 %372, 112
  %374 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %374) #16
  store i64 %373, i64* %31, align 8
  %375 = load i8*, i8** %91, align 8
  %376 = getelementptr inbounds i64, i64* %31, i64 1
  %377 = bitcast i64* %376 to i8*
  %378 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %375, i8* nonnull %374, i8* %377) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %374) #16
  %379 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %366, i64 0, i32 0, i32 0
  %380 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %379, align 8
  %381 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %367, align 8
  %382 = icmp eq %"struct.gl::InterfaceBlock"* %380, %381
  br i1 %382, label %458, label %484

383:                                              ; preds = %341, %419
  %384 = phi %"struct.gl::LinkedUniform"* [ %338, %341 ], [ %456, %419 ]
  %385 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 1
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %385) #16
  %386 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 3
  %387 = load i32, i32* %386, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %342) #16
  store i32 %387, i32* %25, align 4
  %388 = load i8*, i8** %91, align 8
  %389 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %388, i8* nonnull %342, i8* %344) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %342) #16
  %390 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 4
  call void @_ZN2gl20WriteBlockMemberInfoEPNS_18BinaryOutputStreamERKN2sh15BlockMemberInfoE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::BlockMemberInfo"* dereferenceable(20) %390) #16
  %391 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 5
  %392 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 5, i32 0, i32 1
  %393 = bitcast i32** %392 to i64*
  %394 = load i64, i64* %393, align 8
  %395 = bitcast %"class.std::__1::vector"* %391 to i64*
  %396 = load i64, i64* %395, align 8
  %397 = sub i64 %394, %396
  %398 = ashr exact i64 %397, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %345) #16
  store i64 %398, i64* %22, align 8
  %399 = load i8*, i8** %91, align 8
  %400 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %399, i8* nonnull %345, i8* %347) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %345) #16
  %401 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %391, i64 0, i32 0, i32 0
  %402 = load i32*, i32** %401, align 8
  %403 = load i32*, i32** %392, align 8
  %404 = icmp eq i32* %402, %403
  br i1 %404, label %419, label %405

405:                                              ; preds = %383, %415
  %406 = phi i32* [ %417, %415 ], [ %402, %383 ]
  %407 = load i32, i32* %406, align 4
  %408 = icmp eq i32 %407, -1
  br i1 %408, label %409, label %412

409:                                              ; preds = %405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %351) #16
  store i32 -1, i32* %24, align 4
  %410 = load i8*, i8** %91, align 8
  %411 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %410, i8* nonnull %351, i8* %353) #16
  br label %415

412:                                              ; preds = %405
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %348) #16
  store i32 %407, i32* %23, align 4
  %413 = load i8*, i8** %91, align 8
  %414 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %413, i8* nonnull %348, i8* %350) #16
  br label %415

415:                                              ; preds = %412, %409
  %416 = phi i8* [ %348, %412 ], [ %351, %409 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %416) #16
  %417 = getelementptr inbounds i32, i32* %406, i64 1
  %418 = icmp eq i32* %417, %403
  br i1 %418, label %419, label %405

419:                                              ; preds = %415, %383
  %420 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 0, i32 0, i32 1, i32 0
  %421 = load i8, i8* %420, align 1
  %422 = and i8 %421, 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %423 = zext i8 %422 to i32
  store i32 %423, i32* %18, align 4
  %424 = load i8*, i8** %91, align 8
  %425 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %424, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %426 = load i8, i8* %420, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %427 = lshr i8 %426, 1
  %428 = and i8 %427, 1
  %429 = zext i8 %428 to i32
  store i32 %429, i32* %18, align 4
  %430 = load i8*, i8** %91, align 8
  %431 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %430, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %432 = load i8, i8* %420, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %433 = lshr i8 %432, 2
  %434 = and i8 %433, 1
  %435 = zext i8 %434 to i32
  store i32 %435, i32* %18, align 4
  %436 = load i8*, i8** %91, align 8
  %437 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %436, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %438 = load i8, i8* %420, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %439 = lshr i8 %438, 3
  %440 = and i8 %439, 1
  %441 = zext i8 %440 to i32
  store i32 %441, i32* %18, align 4
  %442 = load i8*, i8** %91, align 8
  %443 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %442, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %444 = load i8, i8* %420, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %445 = lshr i8 %444, 4
  %446 = and i8 %445, 1
  %447 = zext i8 %446 to i32
  store i32 %447, i32* %18, align 4
  %448 = load i8*, i8** %91, align 8
  %449 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %448, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %450 = load i8, i8* %420, align 1
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %354) #16
  %451 = lshr i8 %450, 5
  %452 = and i8 %451, 1
  %453 = zext i8 %452 to i32
  store i32 %453, i32* %18, align 4
  %454 = load i8*, i8** %91, align 8
  %455 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %454, i8* nonnull %354, i8* %356) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %354) #16
  %456 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %384, i64 1
  %457 = icmp eq %"struct.gl::LinkedUniform"* %456, %339
  br i1 %457, label %365, label %383

458:                                              ; preds = %484, %365
  %459 = load i8, i8* %149, align 4, !range !15
  %460 = icmp eq i8 %459, 0
  %461 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37
  %462 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38
  %463 = select i1 %460, %"class.std::__1::vector.194"* %462, %"class.std::__1::vector.194"* %461
  %464 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %463, i64 0, i32 0, i32 1
  %465 = bitcast %"struct.gl::InterfaceBlock"** %464 to i64*
  %466 = load i64, i64* %465, align 8
  %467 = bitcast %"class.std::__1::vector.194"* %463 to i64*
  %468 = load i64, i64* %467, align 8
  %469 = sub i64 %466, %468
  %470 = sdiv exact i64 %469, 112
  %471 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %471) #16
  store i64 %470, i64* %13, align 8
  %472 = load i8*, i8** %91, align 8
  %473 = getelementptr inbounds i64, i64* %13, i64 1
  %474 = bitcast i64* %473 to i8*
  %475 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %472, i8* nonnull %471, i8* %474) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %471) #16
  %476 = load i8, i8* %149, align 4, !range !15
  %477 = icmp eq i8 %476, 0
  %478 = select i1 %477, %"class.std::__1::vector.194"* %462, %"class.std::__1::vector.194"* %461
  %479 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %478, i64 0, i32 0, i32 0
  %480 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %479, align 8
  %481 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %478, i64 0, i32 0, i32 1
  %482 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %481, align 8
  %483 = icmp eq %"struct.gl::InterfaceBlock"* %480, %482
  br i1 %483, label %488, label %506

484:                                              ; preds = %365, %484
  %485 = phi %"struct.gl::InterfaceBlock"* [ %486, %484 ], [ %380, %365 ]
  call void @_ZN2gl19WriteInterfaceBlockEPNS_18BinaryOutputStreamERKNS_14InterfaceBlockE(%"class.gl::BinaryOutputStream"* %2, %"struct.gl::InterfaceBlock"* dereferenceable(112) %485) #16
  %486 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %485, i64 1
  %487 = icmp eq %"struct.gl::InterfaceBlock"* %486, %381
  br i1 %487, label %458, label %484

488:                                              ; preds = %506, %458
  %489 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35
  %490 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %491 = bitcast %"struct.gl::ShaderVariableBuffer"** %490 to i64*
  %492 = load i64, i64* %491, align 8
  %493 = bitcast %"class.std::__1::vector.202"* %489 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = sub i64 %492, %494
  %496 = sdiv exact i64 %495, 48
  %497 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %497) #16
  store i64 %496, i64* %6, align 8
  %498 = load i8*, i8** %91, align 8
  %499 = getelementptr inbounds i64, i64* %6, i64 1
  %500 = bitcast i64* %499 to i8*
  %501 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %498, i8* nonnull %497, i8* %500) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %497) #16
  %502 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %489, i64 0, i32 0, i32 0
  %503 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %502, align 8
  %504 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %490, align 8
  %505 = icmp eq %"struct.gl::ShaderVariableBuffer"* %503, %504
  br i1 %505, label %510, label %550

506:                                              ; preds = %458, %506
  %507 = phi %"struct.gl::InterfaceBlock"* [ %508, %506 ], [ %480, %458 ]
  call void @_ZN2gl19WriteInterfaceBlockEPNS_18BinaryOutputStreamERKNS_14InterfaceBlockE(%"class.gl::BinaryOutputStream"* %2, %"struct.gl::InterfaceBlock"* dereferenceable(112) %507) #16
  %508 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %507, i64 1
  %509 = icmp eq %"struct.gl::InterfaceBlock"* %508, %482
  br i1 %509, label %488, label %506

510:                                              ; preds = %550, %488
  %511 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %512 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %513 = bitcast %"struct.gl::TransformFeedbackVarying"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.std::__1::vector.173"* %511 to i64*
  %516 = load i64, i64* %515, align 8
  %517 = sub i64 %514, %516
  %518 = sdiv exact i64 %517, 216
  %519 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %519) #16
  store i64 %518, i64* %4, align 8
  %520 = load i8*, i8** %91, align 8
  %521 = getelementptr inbounds i64, i64* %4, i64 1
  %522 = bitcast i64* %521 to i8*
  %523 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %520, i8* nonnull %519, i8* %522) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %519) #16
  %524 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %511, i64 0, i32 0, i32 0
  %525 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %524, align 8
  %526 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %512, align 8
  %527 = icmp eq %"struct.gl::TransformFeedbackVarying"* %525, %526
  br i1 %527, label %554, label %528

528:                                              ; preds = %510
  %529 = bitcast i64* %8 to i8*
  %530 = getelementptr inbounds i64, i64* %8, i64 1
  %531 = bitcast i64* %530 to i8*
  %532 = bitcast i32* %9 to i8*
  %533 = getelementptr inbounds i32, i32* %9, i64 1
  %534 = bitcast i32* %533 to i8*
  %535 = bitcast i32* %10 to i8*
  %536 = getelementptr inbounds i32, i32* %10, i64 1
  %537 = bitcast i32* %536 to i8*
  %538 = bitcast i32* %11 to i8*
  %539 = getelementptr inbounds i32, i32* %11, i64 1
  %540 = bitcast i32* %539 to i8*
  %541 = bitcast i64* %12 to i8*
  %542 = getelementptr inbounds i64, i64* %12, i64 1
  %543 = bitcast i64* %542 to i8*
  %544 = bitcast i32* %14 to i8*
  %545 = getelementptr inbounds i32, i32* %14, i64 1
  %546 = bitcast i32* %545 to i8*
  %547 = bitcast i32* %15 to i8*
  %548 = getelementptr inbounds i32, i32* %15, i64 1
  %549 = bitcast i32* %548 to i8*
  br label %586

550:                                              ; preds = %488, %550
  %551 = phi %"struct.gl::ShaderVariableBuffer"* [ %552, %550 ], [ %503, %488 ]
  call void @_ZN2gl25WriteShaderVariableBufferEPNS_18BinaryOutputStreamERKNS_20ShaderVariableBufferE(%"class.gl::BinaryOutputStream"* %2, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %551) #16
  %552 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %551, i64 1
  %553 = icmp eq %"struct.gl::ShaderVariableBuffer"* %552, %504
  br i1 %553, label %510, label %550

554:                                              ; preds = %653, %510
  %555 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  %556 = load i32, i32* %555, align 8
  %557 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %557) #16
  store i32 %556, i32* %5, align 4
  %558 = load i8*, i8** %91, align 8
  %559 = getelementptr inbounds i32, i32* %5, i64 1
  %560 = bitcast i32* %559 to i8*
  %561 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %558, i8* nonnull %557, i8* %560) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %557) #16
  %562 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20
  %563 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 20, i32 0, i32 1
  %564 = bitcast %"struct.sh::ShaderVariable"** %563 to i64*
  %565 = load i64, i64* %564, align 8
  %566 = bitcast %"class.std::__1::vector.70"* %562 to i64*
  %567 = load i64, i64* %566, align 8
  %568 = sub i64 %565, %567
  %569 = sdiv exact i64 %568, 208
  %570 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %570) #16
  store i64 %569, i64* %7, align 8
  %571 = load i8*, i8** %91, align 8
  %572 = getelementptr inbounds i64, i64* %7, i64 1
  %573 = bitcast i64* %572 to i8*
  %574 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %571, i8* nonnull %570, i8* %573) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %570) #16
  %575 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %562, i64 0, i32 0, i32 0
  %576 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %575, align 8
  %577 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %563, align 8
  %578 = icmp eq %"struct.sh::ShaderVariable"* %576, %577
  br i1 %578, label %657, label %579

579:                                              ; preds = %554
  %580 = bitcast i32* %17 to i8*
  %581 = getelementptr inbounds i32, i32* %17, i64 1
  %582 = bitcast i32* %581 to i8*
  %583 = bitcast i32* %19 to i8*
  %584 = getelementptr inbounds i32, i32* %19, i64 1
  %585 = bitcast i32* %584 to i8*
  br label %688

586:                                              ; preds = %528, %653
  %587 = phi %"struct.gl::TransformFeedbackVarying"* [ %525, %528 ], [ %655, %653 ]
  %588 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 0, i32 4
  %589 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 0, i32 4, i32 0, i32 1
  %590 = bitcast i32** %589 to i64*
  %591 = load i64, i64* %590, align 8
  %592 = bitcast %"class.std::__1::vector"* %588 to i64*
  %593 = load i64, i64* %592, align 8
  %594 = sub i64 %591, %593
  %595 = ashr exact i64 %594, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %529) #16
  store i64 %595, i64* %8, align 8
  %596 = load i8*, i8** %91, align 8
  %597 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %596, i8* nonnull %529, i8* %531) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %529) #16
  %598 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %588, i64 0, i32 0, i32 0
  %599 = load i32*, i32** %598, align 8
  %600 = load i32*, i32** %589, align 8
  %601 = icmp eq i32* %599, %600
  br i1 %601, label %616, label %602

602:                                              ; preds = %586, %612
  %603 = phi i32* [ %614, %612 ], [ %599, %586 ]
  %604 = load i32, i32* %603, align 4
  %605 = icmp eq i32 %604, -1
  br i1 %605, label %606, label %609

606:                                              ; preds = %602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %535) #16
  store i32 -1, i32* %10, align 4
  %607 = load i8*, i8** %91, align 8
  %608 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %607, i8* nonnull %535, i8* %537) #16
  br label %612

609:                                              ; preds = %602
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %532) #16
  store i32 %604, i32* %9, align 4
  %610 = load i8*, i8** %91, align 8
  %611 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %610, i8* nonnull %532, i8* %534) #16
  br label %612

612:                                              ; preds = %609, %606
  %613 = phi i8* [ %532, %609 ], [ %535, %606 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %613) #16
  %614 = getelementptr inbounds i32, i32* %603, i64 1
  %615 = icmp eq i32* %614, %600
  br i1 %615, label %616, label %602

616:                                              ; preds = %612, %586
  %617 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 0, i32 0
  %618 = load i32, i32* %617, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %538) #16
  store i32 %618, i32* %11, align 4
  %619 = load i8*, i8** %91, align 8
  %620 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %619, i8* nonnull %538, i8* %540) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %538) #16
  %621 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 0, i32 2
  %622 = bitcast %"class.std::__1::basic_string"* %621 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %623 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %622, i64 0, i32 1, i32 0
  %624 = load i8, i8* %623, align 1
  %625 = icmp slt i8 %624, 0
  %626 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %627 = load i64, i64* %626, align 8
  %628 = zext i8 %624 to i64
  %629 = select i1 %625, i64 %627, i64 %628
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %541) #16
  store i64 %629, i64* %12, align 8
  %630 = load i8*, i8** %91, align 8
  %631 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %630, i8* nonnull %541, i8* %543) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %541) #16
  %632 = load i8, i8* %623, align 1
  %633 = icmp slt i8 %632, 0
  %634 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %621, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load i8*, i8** %634, align 8
  %636 = load i64, i64* %626, align 8
  %637 = bitcast %"class.std::__1::basic_string"* %621 to i8*
  %638 = zext i8 %632 to i64
  %639 = select i1 %633, i8* %635, i8* %637
  %640 = select i1 %633, i64 %636, i64 %638
  %641 = load i8*, i8** %91, align 8
  %642 = getelementptr inbounds i8, i8* %639, i64 %640
  %643 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %641, i8* %639, i8* %642) #16
  %644 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 0, i32 1
  %645 = load i32, i32* %644, align 8
  %646 = icmp eq i32 %645, -1
  br i1 %646, label %647, label %650

647:                                              ; preds = %616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %547) #16
  store i32 -1, i32* %15, align 4
  %648 = load i8*, i8** %91, align 8
  %649 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %648, i8* nonnull %547, i8* %549) #16
  br label %653

650:                                              ; preds = %616
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %544) #16
  store i32 %645, i32* %14, align 4
  %651 = load i8*, i8** %91, align 8
  %652 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %651, i8* nonnull %544, i8* %546) #16
  br label %653

653:                                              ; preds = %647, %650
  %654 = phi i8* [ %547, %647 ], [ %544, %650 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %654) #16
  %655 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %587, i64 1
  %656 = icmp eq %"struct.gl::TransformFeedbackVarying"* %655, %526
  br i1 %656, label %554, label %586

657:                                              ; preds = %688, %554
  %658 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21
  %659 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 21, i32 0, i32 1
  %660 = bitcast %"struct.gl::VariableLocation"** %659 to i64*
  %661 = load i64, i64* %660, align 8
  %662 = bitcast %"class.std::__1::vector.132"* %658 to i64*
  %663 = load i64, i64* %662, align 8
  %664 = sub i64 %661, %663
  %665 = sdiv exact i64 %664, 12
  %666 = bitcast i64* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %666) #16
  store i64 %665, i64* %16, align 8
  %667 = load i8*, i8** %91, align 8
  %668 = getelementptr inbounds i64, i64* %16, i64 1
  %669 = bitcast i64* %668 to i8*
  %670 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %667, i8* nonnull %666, i8* %669) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %666) #16
  %671 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %658, i64 0, i32 0, i32 0
  %672 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %671, align 8
  %673 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %659, align 8
  %674 = icmp eq %"struct.gl::VariableLocation"* %672, %673
  br i1 %674, label %700, label %675

675:                                              ; preds = %657
  %676 = bitcast i32* %21 to i8*
  %677 = getelementptr inbounds i32, i32* %21, i64 1
  %678 = bitcast i32* %677 to i8*
  %679 = bitcast i32* %26 to i8*
  %680 = getelementptr inbounds i32, i32* %26, i64 1
  %681 = bitcast i32* %680 to i8*
  %682 = bitcast i32* %27 to i8*
  %683 = getelementptr inbounds i32, i32* %27, i64 1
  %684 = bitcast i32* %683 to i8*
  %685 = bitcast i32* %28 to i8*
  %686 = getelementptr inbounds i32, i32* %28, i64 1
  %687 = bitcast i32* %686 to i8*
  br label %731

688:                                              ; preds = %579, %688
  %689 = phi %"struct.sh::ShaderVariable"* [ %576, %579 ], [ %698, %688 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %689) #16
  %690 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %689, i64 0, i32 11
  %691 = load i32, i32* %690, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %580) #16
  store i32 %691, i32* %17, align 4
  %692 = load i8*, i8** %91, align 8
  %693 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %692, i8* nonnull %580, i8* %582) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %580) #16
  %694 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %689, i64 0, i32 19
  %695 = load i32, i32* %694, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %583) #16
  store i32 %695, i32* %19, align 4
  %696 = load i8*, i8** %91, align 8
  %697 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %696, i8* nonnull %583, i8* %585) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %583) #16
  %698 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %689, i64 1
  %699 = icmp eq %"struct.sh::ShaderVariable"* %698, %577
  br i1 %699, label %657, label %688

700:                                              ; preds = %746, %657
  %701 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22
  %702 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 22, i32 0, i32 1
  %703 = bitcast %"struct.gl::VariableLocation"** %702 to i64*
  %704 = load i64, i64* %703, align 8
  %705 = bitcast %"class.std::__1::vector.132"* %701 to i64*
  %706 = load i64, i64* %705, align 8
  %707 = sub i64 %704, %706
  %708 = sdiv exact i64 %707, 12
  %709 = bitcast i64* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %709) #16
  store i64 %708, i64* %20, align 8
  %710 = load i8*, i8** %91, align 8
  %711 = getelementptr inbounds i64, i64* %20, i64 1
  %712 = bitcast i64* %711 to i8*
  %713 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %710, i8* nonnull %709, i8* %712) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %709) #16
  %714 = getelementptr inbounds %"class.std::__1::vector.132", %"class.std::__1::vector.132"* %701, i64 0, i32 0, i32 0
  %715 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %714, align 8
  %716 = load %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"** %702, align 8
  %717 = icmp eq %"struct.gl::VariableLocation"* %715, %716
  br i1 %717, label %755, label %718

718:                                              ; preds = %700
  %719 = bitcast i32* %35 to i8*
  %720 = getelementptr inbounds i32, i32* %35, i64 1
  %721 = bitcast i32* %720 to i8*
  %722 = bitcast i32* %37 to i8*
  %723 = getelementptr inbounds i32, i32* %37, i64 1
  %724 = bitcast i32* %723 to i8*
  %725 = bitcast i32* %38 to i8*
  %726 = getelementptr inbounds i32, i32* %38, i64 1
  %727 = bitcast i32* %726 to i8*
  %728 = bitcast i32* %39 to i8*
  %729 = getelementptr inbounds i32, i32* %39, i64 1
  %730 = bitcast i32* %729 to i8*
  br label %814

731:                                              ; preds = %675, %746
  %732 = phi %"struct.gl::VariableLocation"* [ %672, %675 ], [ %753, %746 ]
  %733 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %732, i64 0, i32 0
  %734 = load i32, i32* %733, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %676) #16
  store i32 %734, i32* %21, align 4
  %735 = load i8*, i8** %91, align 8
  %736 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %735, i8* nonnull %676, i8* %678) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %676) #16
  %737 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %732, i64 0, i32 1
  %738 = load i32, i32* %737, align 4
  %739 = icmp eq i32 %738, -1
  br i1 %739, label %740, label %743

740:                                              ; preds = %731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %682) #16
  store i32 -1, i32* %27, align 4
  %741 = load i8*, i8** %91, align 8
  %742 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %741, i8* nonnull %682, i8* %684) #16
  br label %746

743:                                              ; preds = %731
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %679) #16
  store i32 %738, i32* %26, align 4
  %744 = load i8*, i8** %91, align 8
  %745 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %744, i8* nonnull %679, i8* %681) #16
  br label %746

746:                                              ; preds = %740, %743
  %747 = phi i8* [ %682, %740 ], [ %679, %743 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %747) #16
  %748 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %732, i64 0, i32 2
  %749 = load i8, i8* %748, align 4, !range !15
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %685) #16
  %750 = zext i8 %749 to i32
  store i32 %750, i32* %28, align 4
  %751 = load i8*, i8** %91, align 8
  %752 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %751, i8* nonnull %685, i8* %687) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %685) #16
  %753 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %732, i64 1
  %754 = icmp eq %"struct.gl::VariableLocation"* %753, %673
  br i1 %754, label %700, label %731

755:                                              ; preds = %829, %700
  %756 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31, i32 0
  %757 = load i32, i32* %756, align 4
  %758 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %758) #16
  store i32 %757, i32* %29, align 4
  %759 = load i8*, i8** %91, align 8
  %760 = getelementptr inbounds i32, i32* %29, i64 1
  %761 = bitcast i32* %760 to i8*
  %762 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %759, i8* nonnull %758, i8* %761) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %758) #16
  %763 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31, i32 1
  %764 = load i32, i32* %763, align 4
  %765 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %765) #16
  store i32 %764, i32* %30, align 4
  %766 = load i8*, i8** %91, align 8
  %767 = getelementptr inbounds i32, i32* %30, i64 1
  %768 = bitcast i32* %767 to i8*
  %769 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %766, i8* nonnull %765, i8* %768) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %765) #16
  %770 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 32, i32 0
  %771 = load i32, i32* %770, align 4
  %772 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %772) #16
  store i32 %771, i32* %32, align 4
  %773 = load i8*, i8** %91, align 8
  %774 = getelementptr inbounds i32, i32* %32, i64 1
  %775 = bitcast i32* %774 to i8*
  %776 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %773, i8* nonnull %772, i8* %775) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %772) #16
  %777 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 32, i32 1
  %778 = load i32, i32* %777, align 4
  %779 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %779) #16
  store i32 %778, i32* %33, align 4
  %780 = load i8*, i8** %91, align 8
  %781 = getelementptr inbounds i32, i32* %33, i64 1
  %782 = bitcast i32* %781 to i8*
  %783 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %780, i8* nonnull %779, i8* %782) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %779) #16
  %784 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40
  %785 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 1
  %786 = bitcast %"struct.gl::SamplerBinding"** %785 to i64*
  %787 = load i64, i64* %786, align 8
  %788 = bitcast %"class.std::__1::vector.209"* %784 to i64*
  %789 = load i64, i64* %788, align 8
  %790 = sub i64 %787, %789
  %791 = sdiv exact i64 %790, 40
  %792 = bitcast i64* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %792) #16
  store i64 %791, i64* %34, align 8
  %793 = load i8*, i8** %91, align 8
  %794 = getelementptr inbounds i64, i64* %34, i64 1
  %795 = bitcast i64* %794 to i8*
  %796 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %793, i8* nonnull %792, i8* %795) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %792) #16
  %797 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %784, i64 0, i32 0, i32 0
  %798 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %797, align 8
  %799 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %785, align 8
  %800 = icmp eq %"struct.gl::SamplerBinding"* %798, %799
  br i1 %800, label %838, label %801

801:                                              ; preds = %755
  %802 = bitcast i32* %44 to i8*
  %803 = getelementptr inbounds i32, i32* %44, i64 1
  %804 = bitcast i32* %803 to i8*
  %805 = bitcast i32* %45 to i8*
  %806 = getelementptr inbounds i32, i32* %45, i64 1
  %807 = bitcast i32* %806 to i8*
  %808 = bitcast i32* %46 to i8*
  %809 = getelementptr inbounds i32, i32* %46, i64 1
  %810 = bitcast i32* %809 to i8*
  %811 = bitcast i64* %47 to i8*
  %812 = getelementptr inbounds i64, i64* %47, i64 1
  %813 = bitcast i64* %812 to i8*
  br label %888

814:                                              ; preds = %718, %829
  %815 = phi %"struct.gl::VariableLocation"* [ %715, %718 ], [ %836, %829 ]
  %816 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %815, i64 0, i32 0
  %817 = load i32, i32* %816, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %719) #16
  store i32 %817, i32* %35, align 4
  %818 = load i8*, i8** %91, align 8
  %819 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %818, i8* nonnull %719, i8* %721) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %719) #16
  %820 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %815, i64 0, i32 1
  %821 = load i32, i32* %820, align 4
  %822 = icmp eq i32 %821, -1
  br i1 %822, label %823, label %826

823:                                              ; preds = %814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %725) #16
  store i32 -1, i32* %38, align 4
  %824 = load i8*, i8** %91, align 8
  %825 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %824, i8* nonnull %725, i8* %727) #16
  br label %829

826:                                              ; preds = %814
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %722) #16
  store i32 %821, i32* %37, align 4
  %827 = load i8*, i8** %91, align 8
  %828 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %827, i8* nonnull %722, i8* %724) #16
  br label %829

829:                                              ; preds = %823, %826
  %830 = phi i8* [ %725, %823 ], [ %722, %826 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %830) #16
  %831 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %815, i64 0, i32 2
  %832 = load i8, i8* %831, align 4, !range !15
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %728) #16
  %833 = zext i8 %832 to i32
  store i32 %833, i32* %39, align 4
  %834 = load i8*, i8** %91, align 8
  %835 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %834, i8* nonnull %728, i8* %730) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %728) #16
  %836 = getelementptr inbounds %"struct.gl::VariableLocation", %"struct.gl::VariableLocation"* %815, i64 1
  %837 = icmp eq %"struct.gl::VariableLocation"* %836, %716
  br i1 %837, label %755, label %814

838:                                              ; preds = %888, %755
  %839 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 36, i32 0
  %840 = load i32, i32* %839, align 4
  %841 = bitcast i32* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %841) #16
  store i32 %840, i32* %40, align 4
  %842 = load i8*, i8** %91, align 8
  %843 = getelementptr inbounds i32, i32* %40, i64 1
  %844 = bitcast i32* %843 to i8*
  %845 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %842, i8* nonnull %841, i8* %844) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %841) #16
  %846 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 36, i32 1
  %847 = load i32, i32* %846, align 4
  %848 = bitcast i32* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %848) #16
  store i32 %847, i32* %42, align 4
  %849 = load i8*, i8** %91, align 8
  %850 = getelementptr inbounds i32, i32* %42, i64 1
  %851 = bitcast i32* %850 to i8*
  %852 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %849, i8* nonnull %848, i8* %851) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %848) #16
  %853 = load i8, i8* %149, align 4, !range !15
  %854 = icmp eq i8 %853, 0
  %855 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41
  %856 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42
  %857 = select i1 %854, %"class.std::__1::vector.216"* %856, %"class.std::__1::vector.216"* %855
  %858 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %857, i64 0, i32 0, i32 1
  %859 = bitcast %"struct.gl::ImageBinding"** %858 to i64*
  %860 = load i64, i64* %859, align 8
  %861 = bitcast %"class.std::__1::vector.216"* %857 to i64*
  %862 = load i64, i64* %861, align 8
  %863 = sub i64 %860, %862
  %864 = ashr exact i64 %863, 5
  %865 = bitcast i64* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %865) #16
  store i64 %864, i64* %43, align 8
  %866 = load i8*, i8** %91, align 8
  %867 = getelementptr inbounds i64, i64* %43, i64 1
  %868 = bitcast i64* %867 to i8*
  %869 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %866, i8* nonnull %865, i8* %868) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %865) #16
  %870 = load i8, i8* %149, align 4, !range !15
  %871 = icmp eq i8 %870, 0
  %872 = select i1 %871, %"class.std::__1::vector.216"* %856, %"class.std::__1::vector.216"* %855
  %873 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %872, i64 0, i32 0, i32 0
  %874 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %873, align 8
  %875 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %872, i64 0, i32 0, i32 1
  %876 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %875, align 8
  %877 = icmp eq %"struct.gl::ImageBinding"* %874, %876
  br i1 %877, label %916, label %878

878:                                              ; preds = %838
  %879 = bitcast i64* %49 to i8*
  %880 = getelementptr inbounds i64, i64* %49, i64 1
  %881 = bitcast i64* %880 to i8*
  %882 = bitcast i32* %50 to i8*
  %883 = getelementptr inbounds i32, i32* %50, i64 1
  %884 = bitcast i32* %883 to i8*
  %885 = bitcast i32* %72 to i8*
  %886 = getelementptr inbounds i32, i32* %72, i64 1
  %887 = bitcast i32* %886 to i8*
  br label %917

888:                                              ; preds = %801, %888
  %889 = phi %"struct.gl::SamplerBinding"* [ %798, %801 ], [ %914, %888 ]
  %890 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 0, i32 0
  %891 = load i8, i8* %890, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %802) #16
  %892 = zext i8 %891 to i32
  store i32 %892, i32* %44, align 4
  %893 = load i8*, i8** %91, align 8
  %894 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %893, i8* nonnull %802, i8* %804) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %802) #16
  %895 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 0, i32 1
  %896 = load i32, i32* %895, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %805) #16
  store i32 %896, i32* %45, align 4
  %897 = load i8*, i8** %91, align 8
  %898 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %897, i8* nonnull %805, i8* %807) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %805) #16
  %899 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 0, i32 2
  %900 = load i8, i8* %899, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %808) #16
  %901 = zext i8 %900 to i32
  store i32 %901, i32* %46, align 4
  %902 = load i8*, i8** %91, align 8
  %903 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %902, i8* nonnull %808, i8* %810) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %808) #16
  %904 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 0, i32 3
  %905 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 0, i32 3, i32 0, i32 1
  %906 = bitcast i32** %905 to i64*
  %907 = load i64, i64* %906, align 8
  %908 = bitcast %"class.std::__1::vector"* %904 to i64*
  %909 = load i64, i64* %908, align 8
  %910 = sub i64 %907, %909
  %911 = ashr exact i64 %910, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %811) #16
  store i64 %911, i64* %47, align 8
  %912 = load i8*, i8** %91, align 8
  %913 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %912, i8* nonnull %811, i8* %813) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %811) #16
  %914 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %889, i64 1
  %915 = icmp eq %"struct.gl::SamplerBinding"* %914, %799
  br i1 %915, label %838, label %888

916:                                              ; preds = %937, %838
  br i1 %1, label %954, label %1092

917:                                              ; preds = %878, %937
  %918 = phi %"struct.gl::ImageBinding"* [ %874, %878 ], [ %938, %937 ]
  %919 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %918, i64 0, i32 1
  %920 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %918, i64 0, i32 1, i32 0, i32 1
  %921 = bitcast i32** %920 to i64*
  %922 = load i64, i64* %921, align 8
  %923 = bitcast %"class.std::__1::vector"* %919 to i64*
  %924 = load i64, i64* %923, align 8
  %925 = sub i64 %922, %924
  %926 = ashr exact i64 %925, 2
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %879) #16
  store i64 %926, i64* %49, align 8
  %927 = load i8*, i8** %91, align 8
  %928 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %927, i8* nonnull %879, i8* %881) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %879) #16
  %929 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %918, i64 0, i32 0
  %930 = load i8, i8* %929, align 8
  %931 = zext i8 %930 to i32
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %882) #16
  store i32 %931, i32* %50, align 4
  %932 = load i8*, i8** %91, align 8
  %933 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %932, i8* nonnull %882, i8* %884) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %882) #16
  %934 = load i64, i64* %921, align 8
  %935 = load i64, i64* %923, align 8
  %936 = icmp eq i64 %934, %935
  br i1 %936, label %937, label %940

937:                                              ; preds = %940, %917
  %938 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %918, i64 1
  %939 = icmp eq %"struct.gl::ImageBinding"* %938, %876
  br i1 %939, label %916, label %917

940:                                              ; preds = %917, %940
  %941 = phi i64 [ %950, %940 ], [ %935, %917 ]
  %942 = phi i64 [ %948, %940 ], [ 0, %917 ]
  %943 = inttoptr i64 %941 to i32*
  %944 = getelementptr inbounds i32, i32* %943, i64 %942
  %945 = load i32, i32* %944, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %885) #16
  store i32 %945, i32* %72, align 4
  %946 = load i8*, i8** %91, align 8
  %947 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %946, i8* nonnull %885, i8* %887) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %885) #16
  %948 = add nuw i64 %942, 1
  %949 = load i64, i64* %921, align 8
  %950 = load i64, i64* %923, align 8
  %951 = sub i64 %949, %950
  %952 = ashr exact i64 %951, 2
  %953 = icmp ult i64 %948, %952
  br i1 %953, label %940, label %937

954:                                              ; preds = %916
  %955 = load i8, i8* %133, align 1, !noalias !23
  %956 = icmp eq i8 %955, 0
  br i1 %956, label %969, label %957

957:                                              ; preds = %954
  %958 = zext i8 %955 to i32
  %959 = call i32 @llvm.cttz.i32(i32 %958, i1 true) #16, !range !19
  %960 = bitcast i64* %74 to i8*
  %961 = getelementptr inbounds i64, i64* %74, i64 1
  %962 = bitcast i64* %961 to i8*
  %963 = bitcast i64* %76 to i8*
  %964 = getelementptr inbounds i64, i64* %76, i64 1
  %965 = bitcast i64* %964 to i8*
  %966 = bitcast i32* %78 to i8*
  %967 = getelementptr inbounds i32, i32* %78, i64 1
  %968 = bitcast i32* %967 to i8*
  br label %984

969:                                              ; preds = %1021, %954
  %970 = load i8, i8* %141, align 1, !noalias !26
  %971 = icmp eq i8 %970, 0
  br i1 %971, label %1092, label %972

972:                                              ; preds = %969
  %973 = zext i8 %970 to i32
  %974 = call i32 @llvm.cttz.i32(i32 %973, i1 true) #16, !range !19
  %975 = bitcast i64* %81 to i8*
  %976 = getelementptr inbounds i64, i64* %81, i64 1
  %977 = bitcast i64* %976 to i8*
  %978 = bitcast i64* %83 to i8*
  %979 = getelementptr inbounds i64, i64* %83, i64 1
  %980 = bitcast i64* %979 to i8*
  %981 = bitcast i32* %85 to i8*
  %982 = getelementptr inbounds i32, i32* %85, i64 1
  %983 = bitcast i32* %982 to i8*
  br label %1038

984:                                              ; preds = %1031, %957
  %985 = phi i8 [ %955, %957 ], [ %1029, %1031 ]
  %986 = phi i32 [ %959, %957 ], [ %1033, %1031 ]
  %987 = zext i32 %986 to i64
  %988 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %987
  %989 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %987, i32 0, i32 1
  %990 = bitcast %"struct.sh::ShaderVariable"** %989 to i64*
  %991 = load i64, i64* %990, align 8
  %992 = bitcast %"class.std::__1::vector.70"* %988 to i64*
  %993 = load i64, i64* %992, align 8
  %994 = sub i64 %991, %993
  %995 = sdiv exact i64 %994, 208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %960) #16
  store i64 %995, i64* %74, align 8
  %996 = load i8*, i8** %91, align 8
  %997 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %996, i8* nonnull %960, i8* %962) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %960) #16
  %998 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %988, i64 0, i32 0, i32 0
  %999 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %998, align 8
  %1000 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %989, align 8
  %1001 = icmp eq %"struct.sh::ShaderVariable"* %999, %1000
  br i1 %1001, label %1002, label %1017

1002:                                             ; preds = %1017, %984
  %1003 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %987
  %1004 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %987, i32 0, i32 1
  %1005 = bitcast %"struct.sh::ShaderVariable"** %1004 to i64*
  %1006 = load i64, i64* %1005, align 8
  %1007 = bitcast %"class.std::__1::vector.70"* %1003 to i64*
  %1008 = load i64, i64* %1007, align 8
  %1009 = sub i64 %1006, %1008
  %1010 = sdiv exact i64 %1009, 208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %963) #16
  store i64 %1010, i64* %76, align 8
  %1011 = load i8*, i8** %91, align 8
  %1012 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %1011, i8* nonnull %963, i8* %965) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %963) #16
  %1013 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1003, i64 0, i32 0, i32 0
  %1014 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1013, align 8
  %1015 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1004, align 8
  %1016 = icmp eq %"struct.sh::ShaderVariable"* %1014, %1015
  br i1 %1016, label %1021, label %1034

1017:                                             ; preds = %984, %1017
  %1018 = phi %"struct.sh::ShaderVariable"* [ %1019, %1017 ], [ %999, %984 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %1018) #16
  %1019 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1018, i64 1
  %1020 = icmp eq %"struct.sh::ShaderVariable"* %1019, %1000
  br i1 %1020, label %1002, label %1017

1021:                                             ; preds = %1034, %1002
  %1022 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 59, i32 0, i32 0, i64 %987
  %1023 = load i32, i32* %1022, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %966) #16
  store i32 %1023, i32* %78, align 4
  %1024 = load i8*, i8** %91, align 8
  %1025 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %1024, i8* nonnull %966, i8* %968) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %966) #16
  %1026 = shl i32 1, %986
  %1027 = trunc i32 %1026 to i8
  %1028 = xor i8 %1027, -1
  %1029 = and i8 %985, %1028
  %1030 = icmp eq i8 %1029, 0
  br i1 %1030, label %969, label %1031

1031:                                             ; preds = %1021
  %1032 = zext i8 %1029 to i32
  %1033 = call i32 @llvm.cttz.i32(i32 %1032, i1 true) #16, !range !19
  br label %984

1034:                                             ; preds = %1002, %1034
  %1035 = phi %"struct.sh::ShaderVariable"* [ %1036, %1034 ], [ %1014, %1002 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %1035) #16
  %1036 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1035, i64 1
  %1037 = icmp eq %"struct.sh::ShaderVariable"* %1036, %1015
  br i1 %1037, label %1021, label %1034

1038:                                             ; preds = %1085, %972
  %1039 = phi i8 [ %970, %972 ], [ %1083, %1085 ]
  %1040 = phi i32 [ %974, %972 ], [ %1087, %1085 ]
  %1041 = zext i32 %1040 to i64
  %1042 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %1041
  %1043 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %1041, i32 0, i32 1
  %1044 = bitcast %"struct.sh::ShaderVariable"** %1043 to i64*
  %1045 = load i64, i64* %1044, align 8
  %1046 = bitcast %"class.std::__1::vector.70"* %1042 to i64*
  %1047 = load i64, i64* %1046, align 8
  %1048 = sub i64 %1045, %1047
  %1049 = sdiv exact i64 %1048, 208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %975) #16
  store i64 %1049, i64* %81, align 8
  %1050 = load i8*, i8** %91, align 8
  %1051 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %1050, i8* nonnull %975, i8* %977) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %975) #16
  %1052 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1042, i64 0, i32 0, i32 0
  %1053 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1052, align 8
  %1054 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1043, align 8
  %1055 = icmp eq %"struct.sh::ShaderVariable"* %1053, %1054
  br i1 %1055, label %1056, label %1071

1056:                                             ; preds = %1071, %1038
  %1057 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %1041
  %1058 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %1041, i32 0, i32 1
  %1059 = bitcast %"struct.sh::ShaderVariable"** %1058 to i64*
  %1060 = load i64, i64* %1059, align 8
  %1061 = bitcast %"class.std::__1::vector.70"* %1057 to i64*
  %1062 = load i64, i64* %1061, align 8
  %1063 = sub i64 %1060, %1062
  %1064 = sdiv exact i64 %1063, 208
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %978) #16
  store i64 %1064, i64* %83, align 8
  %1065 = load i8*, i8** %91, align 8
  %1066 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %1065, i8* nonnull %978, i8* %980) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %978) #16
  %1067 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %1057, i64 0, i32 0, i32 0
  %1068 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1067, align 8
  %1069 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %1058, align 8
  %1070 = icmp eq %"struct.sh::ShaderVariable"* %1068, %1069
  br i1 %1070, label %1075, label %1088

1071:                                             ; preds = %1038, %1071
  %1072 = phi %"struct.sh::ShaderVariable"* [ %1073, %1071 ], [ %1053, %1038 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %1072) #16
  %1073 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1072, i64 1
  %1074 = icmp eq %"struct.sh::ShaderVariable"* %1073, %1054
  br i1 %1074, label %1056, label %1071

1075:                                             ; preds = %1088, %1056
  %1076 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 59, i32 0, i32 0, i64 %1041
  %1077 = load i32, i32* %1076, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %981) #16
  store i32 %1077, i32* %85, align 4
  %1078 = load i8*, i8** %91, align 8
  %1079 = call i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"* %90, i8* %1078, i8* nonnull %981, i8* %983) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %981) #16
  %1080 = shl i32 1, %1040
  %1081 = trunc i32 %1080 to i8
  %1082 = xor i8 %1081, -1
  %1083 = and i8 %1039, %1082
  %1084 = icmp eq i8 %1083, 0
  br i1 %1084, label %1092, label %1085

1085:                                             ; preds = %1075
  %1086 = zext i8 %1083 to i32
  %1087 = call i32 @llvm.cttz.i32(i32 %1086, i1 true) #16, !range !19
  br label %1038

1088:                                             ; preds = %1056, %1088
  %1089 = phi %"struct.sh::ShaderVariable"* [ %1090, %1088 ], [ %1068, %1056 ]
  call void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"* %2, %"struct.sh::ShaderVariable"* dereferenceable(208) %1089) #16
  %1090 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1089, i64 1
  %1091 = icmp eq %"struct.sh::ShaderVariable"* %1090, %1069
  br i1 %1091, label %1075, label %1088

1092:                                             ; preds = %1075, %969, %916
  ret void
}

declare void @_ZN2gl14WriteShaderVarEPNS_18BinaryOutputStreamERKN2sh14ShaderVariableE(%"class.gl::BinaryOutputStream"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #1

declare void @_ZN2gl20WriteBlockMemberInfoEPNS_18BinaryOutputStreamERKN2sh15BlockMemberInfoE(%"class.gl::BinaryOutputStream"*, %"struct.sh::BlockMemberInfo"* dereferenceable(20)) local_unnamed_addr #1

declare void @_ZN2gl19WriteInterfaceBlockEPNS_18BinaryOutputStreamERKNS_14InterfaceBlockE(%"class.gl::BinaryOutputStream"*, %"struct.gl::InterfaceBlock"* dereferenceable(112)) local_unnamed_addr #1

declare void @_ZN2gl25WriteShaderVariableBufferEPNS_18BinaryOutputStreamERKNS_20ShaderVariableBufferE(%"class.gl::BinaryOutputStream"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2gl17ProgramExecutable16getInfoLogLengthEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  %3 = tail call i64 @_ZNK2gl7InfoLog9getLengthEv(%"class.gl::InfoLog"* %2) #16
  %4 = trunc i64 %3 to i32
  ret i32 %4
}

declare i64 @_ZNK2gl7InfoLog9getLengthEv(%"class.gl::InfoLog"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl17ProgramExecutable10getInfoLogEiPiPc(%"class.gl::ProgramExecutable"*, i32, i32*, i8*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  tail call void @_ZNK2gl7InfoLog6getLogEiPiPc(%"class.gl::InfoLog"* %5, i32 %1, i32* %2, i8* %3) #16
  ret void
}

declare void @_ZNK2gl7InfoLog6getLogEiPiPc(%"class.gl::InfoLog"*, i32, i32*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2gl17ProgramExecutable16getInfoLogStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %3, align 8, !noalias !29
  %5 = icmp eq %"class.std::__1::basic_stringstream"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %4, i64 0, i32 1
  tail call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret %0, %"class.std::__1::basic_stringbuf"* %7) #16
  br label %12

8:                                                ; preds = %2
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  store i8 0, i8* %10, align 1, !alias.scope !29
  %11 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  store i8 0, i8* %11, align 8, !alias.scope !29
  br label %12

12:                                               ; preds = %6, %8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable22isAttribLocationActiveEm(%"class.gl::ProgramExecutable"* nocapture readonly, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 5, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = shl i64 1, %1
  %6 = and i64 %4, %5
  %7 = icmp ne i64 %6, 0
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK2gl17ProgramExecutable17getAttributesMaskEv(%"class.angle::BitSetT.166"* noalias nocapture sret, %"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 9, i32 0
  %5 = load i64, i64* %4, align 8
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable18hasDefaultUniformsEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 31, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ugt i32 %3, %5
  br i1 %6, label %19, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %9 = load i8, i8* %8, align 4, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 50
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 49
  %17 = load i8, i8* %16, align 2, !range !15
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %1, %11, %15
  %20 = phi i1 [ true, %1 ], [ %14, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable11hasTexturesEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 0
  %3 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 40, i32 0, i32 1
  %5 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %4, align 8
  %6 = icmp eq %"struct.gl::SamplerBinding"* %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %9 = load i8, i8* %8, align 4, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 52
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 51
  %17 = load i8, i8* %16, align 8, !range !15
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %11, %15, %1
  %20 = phi i1 [ true, %1 ], [ %14, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable17hasUniformBuffersEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 0
  %3 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 33, i32 0, i32 1
  %5 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %6 = icmp eq %"struct.gl::InterfaceBlock"* %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %9 = load i8, i8* %8, align 4, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 44
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 43
  %17 = load i8, i8* %16, align 8, !range !15
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %11, %15, %1
  %20 = phi i1 [ true, %1 ], [ %14, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable17hasStorageBuffersEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %3 = load i8, i8* %2, align 4, !range !15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 0
  %7 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 1
  %9 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %8, align 8
  %10 = icmp eq %"struct.gl::InterfaceBlock"* %7, %9
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 46
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %25

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 0
  %17 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 1
  %19 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %18, align 8
  %20 = icmp eq %"struct.gl::InterfaceBlock"* %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 45
  %23 = load i8, i8* %22, align 2, !range !15
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %21, %15, %11, %5
  %26 = phi i1 [ true, %5 ], [ %14, %11 ], [ true, %15 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable24hasComputeStorageBuffersEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 0
  %3 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 37, i32 0, i32 1
  %5 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %6 = icmp eq %"struct.gl::InterfaceBlock"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 46
  %9 = load i8, i8* %8, align 1, !range !15
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ true, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable25hasGraphicsStorageBuffersEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 0
  %3 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 38, i32 0, i32 1
  %5 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %4, align 8
  %6 = icmp eq %"struct.gl::InterfaceBlock"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 45
  %9 = load i8, i8* %8, align 2, !range !15
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ true, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable23hasAtomicCounterBuffersEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 0
  %3 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 35, i32 0, i32 1
  %5 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %4, align 8
  %6 = icmp eq %"struct.gl::ShaderVariableBuffer"* %3, %5
  br i1 %6, label %7, label %19

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %9 = load i8, i8* %8, align 4, !range !15
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 48
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %19

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 47
  %17 = load i8, i8* %16, align 4, !range !15
  %18 = icmp ne i8 %17, 0
  br label %19

19:                                               ; preds = %11, %15, %1
  %20 = phi i1 [ true, %1 ], [ %14, %11 ], [ %18, %15 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable9hasImagesEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %3 = load i8, i8* %2, align 4, !range !15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 0
  %7 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 1
  %9 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %8, align 8
  %10 = icmp eq %"struct.gl::ImageBinding"* %7, %9
  br i1 %10, label %11, label %25

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 54
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp ne i8 %13, 0
  br label %25

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 0
  %17 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 1
  %19 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %18, align 8
  %20 = icmp eq %"struct.gl::ImageBinding"* %17, %19
  br i1 %20, label %21, label %25

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 53
  %23 = load i8, i8* %22, align 2, !range !15
  %24 = icmp ne i8 %23, 0
  br label %25

25:                                               ; preds = %21, %15, %11, %5
  %26 = phi i1 [ true, %5 ], [ %14, %11 ], [ true, %15 ], [ %24, %21 ]
  ret i1 %26
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable16hasComputeImagesEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 0
  %3 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41, i32 0, i32 1
  %5 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %4, align 8
  %6 = icmp eq %"struct.gl::ImageBinding"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 54
  %9 = load i8, i8* %8, align 1, !range !15
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ true, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable17hasGraphicsImagesEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 0
  %3 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %2, align 8
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42, i32 0, i32 1
  %5 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %4, align 8
  %6 = icmp eq %"struct.gl::ImageBinding"* %3, %5
  br i1 %6, label %7, label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 53
  %9 = load i8, i8* %8, align 2, !range !15
  %10 = icmp ne i8 %9, 0
  br label %11

11:                                               ; preds = %7, %1
  %12 = phi i1 [ true, %1 ], [ %10, %7 ]
  ret i1 %12
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable20usesFramebufferFetchEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 39, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = tail call i32 @llvm.usub.sat.i32(i32 %3, i32 %5) #16
  %7 = icmp ne i32 %6, 0
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2gl17ProgramExecutable29getUniformIndexFromImageIndexEj(%"class.gl::ProgramExecutable"* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 36, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, %1
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable20updateActiveSamplersERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramState"* dereferenceable(304)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramState", %"class.gl::ProgramState"* %1, i64 0, i32 23, i32 0
  %4 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 40
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %4, i64 0, i32 40, i32 0, i32 1
  %7 = bitcast %"struct.gl::SamplerBinding"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.209"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %8, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %33, %2
  ret void

13:                                               ; preds = %2, %33
  %14 = phi i64 [ %37, %33 ], [ %10, %2 ]
  %15 = phi i64 [ %35, %33 ], [ 0, %2 ]
  %16 = phi i32 [ %34, %33 ], [ 0, %2 ]
  %17 = inttoptr i64 %14 to %"struct.gl::SamplerBinding"*
  %18 = tail call i32 @_ZNK2gl12ProgramState31getUniformIndexFromSamplerIndexEj(%"class.gl::ProgramState"* %1, i32 %16) #16
  %19 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %17, i64 %15, i32 3, i32 0, i32 0
  %20 = load i32*, i32** %19, align 8
  %21 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %17, i64 %15, i32 3, i32 0, i32 1
  %22 = load i32*, i32** %21, align 8
  %23 = icmp eq i32* %20, %22
  br i1 %23, label %33, label %24

24:                                               ; preds = %13
  %25 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %3, align 8
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %25, i64 0, i32 30, i32 0, i32 0
  %27 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %26, align 8
  %28 = zext i32 %18 to i64
  %29 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %17, i64 %15, i32 0
  %30 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %17, i64 %15, i32 1
  %31 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %17, i64 %15, i32 2
  %32 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %27, i64 %28, i32 0, i32 1, i32 0
  br label %41

33:                                               ; preds = %99, %13
  %34 = add i32 %16, 1
  %35 = zext i32 %34 to i64
  %36 = load i64, i64* %7, align 8
  %37 = load i64, i64* %9, align 8
  %38 = sub i64 %36, %37
  %39 = sdiv exact i64 %38, 40
  %40 = icmp ugt i64 %39, %35
  br i1 %40, label %13, label %12

41:                                               ; preds = %24, %99
  %42 = phi i32* [ %20, %24 ], [ %105, %99 ]
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 11, i32 0, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = add i32 %46, 1
  store i32 %47, i32* %45, align 4
  %48 = icmp eq i32 %46, 0
  br i1 %48, label %49, label %72

49:                                               ; preds = %41
  %50 = load i8, i8* %29, align 8
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 %44
  store i8 %50, i8* %51, align 1
  %52 = load i32, i32* %30, align 4
  %53 = tail call zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32 %52) #16
  %54 = lshr i64 %44, 6
  %55 = and i64 %44, 63
  %56 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13, i32 0, i32 0, i64 %54
  %57 = shl i64 1, %55
  br i1 %53, label %58, label %62

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %56, i64 0, i32 0
  %60 = load i64, i64* %59, align 8
  %61 = or i64 %60, %57
  store i64 %61, i64* %59, align 8
  br label %67

62:                                               ; preds = %49
  %63 = xor i64 %57, -1
  %64 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %56, i64 0, i32 0
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, %63
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %58, %62
  %68 = load i8, i8* %31, align 8
  %69 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 14, i32 0, i64 %44
  store i8 %68, i8* %69, align 1
  %70 = load i8, i8* %32, align 1, !noalias !32
  %71 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 15, i32 0, i64 %44, i32 0
  store i8 %70, i8* %71, align 1
  br label %99

72:                                               ; preds = %41
  %73 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 %44
  %74 = load i8, i8* %73, align 1
  %75 = load i8, i8* %29, align 8
  %76 = icmp eq i8 %74, %75
  br i1 %76, label %78, label %77

77:                                               ; preds = %72
  store i8 11, i8* %73, align 1
  br label %78

78:                                               ; preds = %72, %77
  %79 = lshr i64 %44, 6
  %80 = and i64 %44, 63
  %81 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13, i32 0, i32 0, i64 %79, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = shl i64 1, %80
  %84 = and i64 %82, %83
  %85 = icmp ne i64 %84, 0
  %86 = load i32, i32* %30, align 4
  %87 = tail call zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32 %86) #16
  %88 = xor i1 %85, %87
  br i1 %88, label %89, label %93

89:                                               ; preds = %78
  %90 = xor i64 %83, -1
  %91 = load i64, i64* %81, align 8
  %92 = and i64 %91, %90
  store i64 %92, i64* %81, align 8
  br label %93

93:                                               ; preds = %89, %78
  %94 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 14, i32 0, i64 %44
  %95 = load i8, i8* %94, align 1
  %96 = load i8, i8* %31, align 8
  %97 = icmp eq i8 %95, %96
  br i1 %97, label %99, label %98

98:                                               ; preds = %93
  store i8 4, i8* %94, align 1
  br label %99

99:                                               ; preds = %93, %98, %67
  %100 = phi i64 [ %83, %93 ], [ %83, %98 ], [ %57, %67 ]
  %101 = phi i64 [ %79, %93 ], [ %79, %98 ], [ %54, %67 ]
  %102 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10, i32 0, i32 0, i64 %101, i32 0
  %103 = load i64, i64* %102, align 8
  %104 = or i64 %103, %100
  store i64 %104, i64* %102, align 8
  %105 = getelementptr inbounds i32, i32* %42, i64 1
  %106 = icmp eq i32* %105, %22
  br i1 %106, label %33, label %41
}

declare i32 @_ZNK2gl12ProgramState31getUniformIndexFromSamplerIndexEj(%"class.gl::ProgramState"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable18updateActiveImagesERKS0_(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"* nocapture readonly dereferenceable(1728)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %4 = load i8, i8* %3, align 4, !range !15
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 41
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 42
  %8 = select i1 %5, %"class.std::__1::vector.216"* %7, %"class.std::__1::vector.216"* %6
  %9 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %8, i64 0, i32 0, i32 1
  %10 = bitcast %"struct.gl::ImageBinding"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.216"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %11, %13
  br i1 %14, label %18, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 36, i32 0
  %17 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %1, i64 0, i32 30, i32 0, i32 0
  br label %19

18:                                               ; preds = %39, %2
  ret void

19:                                               ; preds = %15, %39
  %20 = phi i64 [ %13, %15 ], [ %40, %39 ]
  %21 = phi i64 [ %11, %15 ], [ %41, %39 ]
  %22 = phi i64 [ 0, %15 ], [ %43, %39 ]
  %23 = phi i32 [ 0, %15 ], [ %42, %39 ]
  %24 = inttoptr i64 %20 to %"struct.gl::ImageBinding"*
  %25 = load i32, i32* %16, align 4
  %26 = add i32 %25, %23
  %27 = zext i32 %26 to i64
  %28 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %17, align 8
  %29 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %28, i64 %27, i32 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1, !noalias !35
  %31 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %24, i64 %22, i32 1, i32 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %24, i64 %22, i32 1, i32 0, i32 1
  %34 = load i32*, i32** %33, align 8
  %35 = icmp eq i32* %32, %34
  br i1 %35, label %39, label %47

36:                                               ; preds = %47
  %37 = load i64, i64* %10, align 8
  %38 = load i64, i64* %12, align 8
  br label %39

39:                                               ; preds = %36, %19
  %40 = phi i64 [ %38, %36 ], [ %20, %19 ]
  %41 = phi i64 [ %37, %36 ], [ %21, %19 ]
  %42 = add i32 %23, 1
  %43 = zext i32 %42 to i64
  %44 = sub i64 %41, %40
  %45 = ashr exact i64 %44, 5
  %46 = icmp ugt i64 %45, %43
  br i1 %46, label %19, label %18

47:                                               ; preds = %19, %47
  %48 = phi i32* [ %63, %47 ], [ %32, %19 ]
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = lshr i64 %50, 6
  %52 = and i64 %50, 63
  %53 = shl i64 1, %52
  %54 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 16, i32 0, i32 0, i64 %51, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = or i64 %53, %55
  store i64 %56, i64* %54, align 8
  %57 = load i8, i8* %3, align 4, !range !15
  %58 = icmp eq i8 %57, 0
  %59 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 17, i32 0, i64 %50, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = select i1 %58, i8 %30, i8 32
  %62 = or i8 %61, %60
  store i8 %62, i8* %59, align 1
  %63 = getelementptr inbounds i32, i32* %48, i64 1
  %64 = icmp eq i32* %63, %34
  br i1 %64, label %36, label %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable37setSamplerUniformTextureTypeAndFormatEmRNSt3__16vectorINS_14SamplerBindingENS1_9allocatorIS3_EEEE(%"class.gl::ProgramExecutable"*, i64, %"class.std::__1::vector.209"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %2, i64 0, i32 0, i32 0
  %5 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %2, i64 0, i32 0, i32 1
  %7 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %6, align 8
  %8 = icmp eq %"struct.gl::SamplerBinding"* %5, %7
  br i1 %8, label %9, label %31

9:                                                ; preds = %46, %3
  %10 = phi i8 [ 4, %3 ], [ %47, %46 ]
  %11 = phi i8 [ 0, %3 ], [ %48, %46 ]
  %12 = phi i8 [ 11, %3 ], [ %49, %46 ]
  %13 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 %1
  store i8 %12, i8* %13, align 1
  %14 = and i8 %11, 1
  %15 = icmp eq i8 %14, 0
  %16 = lshr i64 %1, 6
  %17 = and i64 %1, 63
  %18 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 13, i32 0, i32 0, i64 %16
  %19 = shl i64 1, %17
  br i1 %15, label %24, label %20

20:                                               ; preds = %9
  %21 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %18, i64 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = or i64 %22, %19
  store i64 %23, i64* %21, align 8
  br label %29

24:                                               ; preds = %9
  %25 = xor i64 %19, -1
  %26 = getelementptr inbounds %"class.angle::BitSetT.168", %"class.angle::BitSetT.168"* %18, i64 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = and i64 %27, %25
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %20, %24
  %30 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 14, i32 0, i64 %1
  store i8 %10, i8* %30, align 1
  ret void

31:                                               ; preds = %3, %46
  %32 = phi i8 [ %50, %46 ], [ 0, %3 ]
  %33 = phi i8 [ %49, %46 ], [ 11, %3 ]
  %34 = phi i8 [ %48, %46 ], [ 0, %3 ]
  %35 = phi i8 [ %47, %46 ], [ 4, %3 ]
  %36 = phi %"struct.gl::SamplerBinding"* [ %51, %46 ], [ %5, %3 ]
  %37 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 0, i32 3, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 0, i32 3, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %38, %40
  br i1 %41, label %46, label %42

42:                                               ; preds = %31
  %43 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 0, i32 0
  %44 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 0, i32 2
  br label %53

46:                                               ; preds = %84, %31
  %47 = phi i8 [ %35, %31 ], [ %85, %84 ]
  %48 = phi i8 [ %34, %31 ], [ %86, %84 ]
  %49 = phi i8 [ %33, %31 ], [ %87, %84 ]
  %50 = phi i8 [ %32, %31 ], [ %88, %84 ]
  %51 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 1
  %52 = icmp eq %"struct.gl::SamplerBinding"* %51, %7
  br i1 %52, label %9, label %31

53:                                               ; preds = %42, %84
  %54 = phi i8 [ %32, %42 ], [ %88, %84 ]
  %55 = phi i8 [ %33, %42 ], [ %87, %84 ]
  %56 = phi i8 [ %34, %42 ], [ %86, %84 ]
  %57 = phi i8 [ %35, %42 ], [ %85, %84 ]
  %58 = phi i32* [ %38, %42 ], [ %89, %84 ]
  %59 = load i32, i32* %58, align 4
  %60 = zext i32 %59 to i64
  %61 = icmp eq i64 %60, %1
  br i1 %61, label %62, label %84

62:                                               ; preds = %53
  %63 = and i8 %54, 1
  %64 = icmp eq i8 %63, 0
  %65 = load i8, i8* %43, align 8
  br i1 %64, label %66, label %71

66:                                               ; preds = %62
  %67 = load i32, i32* %44, align 4
  %68 = tail call zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32 %67) #16
  %69 = zext i1 %68 to i8
  %70 = load i8, i8* %45, align 8
  br label %84

71:                                               ; preds = %62
  %72 = icmp eq i8 %55, %65
  %73 = select i1 %72, i8 %55, i8 11
  %74 = and i8 %56, 1
  %75 = zext i8 %74 to i32
  %76 = load i32, i32* %44, align 4
  %77 = tail call zeroext i1 @_ZN2gl16IsSamplerYUVTypeEj(i32 %76) #16
  %78 = zext i1 %77 to i32
  %79 = icmp eq i32 %75, %78
  %80 = select i1 %79, i8 %56, i8 0
  %81 = load i8, i8* %45, align 8
  %82 = icmp eq i8 %57, %81
  %83 = select i1 %82, i8 %57, i8 4
  br label %84

84:                                               ; preds = %71, %66, %53
  %85 = phi i8 [ %70, %66 ], [ %57, %53 ], [ %83, %71 ]
  %86 = phi i8 [ %69, %66 ], [ %56, %53 ], [ %80, %71 ]
  %87 = phi i8 [ %65, %66 ], [ %55, %53 ], [ %73, %71 ]
  %88 = phi i8 [ 1, %66 ], [ %54, %53 ], [ %54, %71 ]
  %89 = getelementptr inbounds i32, i32* %58, i64 1
  %90 = icmp eq i32* %89, %40
  br i1 %90, label %46, label %53
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable17updateCanDrawWithEv(%"class.gl::ProgramExecutable"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  %3 = load i8, i8* %2, align 1
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  %6 = lshr i8 %3, 4
  %7 = and i8 %6, 1
  %8 = select i1 %5, i8 0, i8 %7
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 18
  store i8 %8, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable19saveLinkedStateInfoERKNS_12ProgramStateE(%"class.gl::ProgramExecutable"*, %"class.gl::ProgramState"* dereferenceable(304)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %4 = load i8, i8* %3, align 4, !range !15
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2
  %8 = select i1 %5, %"class.angle::BitSetT.141"* %7, %"class.angle::BitSetT.141"* %6
  %9 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %8, i64 0, i32 0
  %10 = load i8, i8* %9, align 1, !noalias !38
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %37, %2
  ret void

13:                                               ; preds = %2, %37
  %14 = phi i8 [ %43, %37 ], [ %10, %2 ]
  %15 = zext i8 %14 to i32
  %16 = tail call i32 @llvm.cttz.i32(i32 %15, i1 true) #16, !range !19
  %17 = zext i32 %16 to i64
  %18 = trunc i32 %16 to i8
  %19 = tail call %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"* %1, i8 zeroext %18) #16
  %20 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZN2gl6Shader17getOutputVaryingsEv(%"class.gl::Shader"* %19) #16
  %21 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 57, i32 0, i32 0, i64 %17
  %22 = icmp eq %"class.std::__1::vector.70"* %21, %20
  br i1 %22, label %28, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %20, i64 0, i32 0, i32 0
  %25 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %24, align 8
  %26 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %20, i64 0, i32 0, i32 1
  %27 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %26, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %21, %"struct.sh::ShaderVariable"* %25, %"struct.sh::ShaderVariable"* %27) #16
  br label %28

28:                                               ; preds = %13, %23
  %29 = tail call dereferenceable(24) %"class.std::__1::vector.70"* @_ZN2gl6Shader16getInputVaryingsEv(%"class.gl::Shader"* %19) #16
  %30 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 58, i32 0, i32 0, i64 %17
  %31 = icmp eq %"class.std::__1::vector.70"* %30, %29
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %29, i64 0, i32 0, i32 0
  %34 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %29, i64 0, i32 0, i32 1
  %36 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %35, align 8
  tail call void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"* %30, %"struct.sh::ShaderVariable"* %34, %"struct.sh::ShaderVariable"* %36) #16
  br label %37

37:                                               ; preds = %28, %32
  %38 = tail call i32 @_ZN2gl6Shader16getShaderVersionEv(%"class.gl::Shader"* %19) #16
  %39 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 59, i32 0, i32 0, i64 %17
  store i32 %38, i32* %39, align 4
  %40 = shl i32 1, %16
  %41 = trunc i32 %40 to i8
  %42 = xor i8 %41, -1
  %43 = and i8 %14, %42
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %12, label %13
}

declare %"class.gl::Shader"* @_ZNK2gl12ProgramState17getAttachedShaderENS_10ShaderTypeE(%"class.gl::ProgramState"*, i8 zeroext) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.70"* @_ZN2gl6Shader17getOutputVaryingsEv(%"class.gl::Shader"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector.70"* @_ZN2gl6Shader16getInputVaryingsEv(%"class.gl::Shader"*) local_unnamed_addr #1

declare i32 @_ZN2gl6Shader16getShaderVersionEv(%"class.gl::Shader"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable11isYUVOutputEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %3 = load i8, i8* %2, align 4, !range !15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 23
  %7 = load i8, i8* %6, align 8, !range !15
  %8 = icmp ne i8 %7, 0
  br label %9

9:                                                ; preds = %1, %5
  %10 = phi i1 [ false, %1 ], [ %8, %5 ]
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK2gl17ProgramExecutable31getLinkedTransformFeedbackStageEv(%"class.gl::ProgramExecutable"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.angle::BitSetT.141", align 1
  %3 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %2, i64 0, i32 0
  %4 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2, i32 0
  %5 = load i8, i8* %4, align 1
  store i8 %5, i8* %3, align 1
  %6 = call zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"* nonnull %2) #16
  ret i8 %6
}

declare zeroext i8 @_ZN2gl23GetLastPreFragmentStageEN5angle7BitSetTILm6EhNS_10ShaderTypeEEE(%"class.angle::BitSetT.141"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl17ProgramExecutable18linkMergedVaryingsEPKNS_7ContextERKNS_18HasAttachedShadersERKNSt3__16vectorINS_17ProgramVaryingRefENS7_9allocatorIS9_EEEERKNS8_INS7_12basic_stringIcNS7_11char_traitsIcEENSA_IcEEEENSA_ISJ_EEEEbPNS_21ProgramVaryingPackingE(%"class.gl::ProgramExecutable"*, %"class.gl::Context"*, %"class.gl::HasAttachedShaders"* dereferenceable(8), %"class.std::__1::vector.632"* dereferenceable(24), %"class.std::__1::vector.125"* dereferenceable(24), i1 zeroext, %"class.gl::ProgramVaryingPacking"*) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.angle::BitSetT.141", align 1
  %9 = tail call zeroext i8 @_ZNK2gl18HasAttachedShaders25getTransformFeedbackStageEv(%"class.gl::HasAttachedShaders"* %2) #16
  %10 = tail call zeroext i1 @_ZN2gl17ProgramExecutable29linkValidateTransformFeedbackEPKNS_7ContextERKNSt3__16vectorINS_17ProgramVaryingRefENS4_9allocatorIS6_EEEENS_10ShaderTypeERKNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS7_IcEEEENS7_ISH_EEEE(%"class.gl::ProgramExecutable"* %0, %"class.gl::Context"* %1, %"class.std::__1::vector.632"* dereferenceable(24) %3, i8 zeroext %9, %"class.std::__1::vector.125"* dereferenceable(24) %4)
  br i1 %10, label %11, label %49

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 8, i32 6
  %13 = load i8, i8* %12, align 1, !range !15
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %20

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 7, i32 121
  %17 = load i8, i8* %16, align 1, !range !15
  %18 = xor i8 %17, 1
  %19 = zext i8 %18 to i32
  br label %20

20:                                               ; preds = %15, %11
  %21 = phi i32 [ 2, %11 ], [ %19, %15 ]
  %22 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #16
  store i8 0, i8* %22, align 1
  %23 = bitcast %"class.gl::HasAttachedShaders"* %2 to %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)***
  %24 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 55
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 3
  %26 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 2
  %27 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)**, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*** %23, align 8
  %28 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)** %27, align 8
  %29 = tail call %"class.gl::Shader"* %28(%"class.gl::HasAttachedShaders"* %2, i8 zeroext 0) #16
  %30 = icmp eq %"class.gl::Shader"* %29, null
  br i1 %30, label %31, label %39

31:                                               ; preds = %20
  %32 = load i8, i8* %24, align 4, !range !15
  %33 = icmp eq i8 %32, 0
  %34 = select i1 %33, %"class.angle::BitSetT.141"* %26, %"class.angle::BitSetT.141"* %25
  %35 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %34, i64 0, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = and i8 %36, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %31, %20
  store i8 1, i8* %22, align 1
  br label %40

40:                                               ; preds = %31, %39
  %41 = phi i8 [ 0, %31 ], [ 1, %39 ]
  %42 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)**, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*** %23, align 8
  %43 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)** %42, align 8
  %44 = tail call %"class.gl::Shader"* %43(%"class.gl::HasAttachedShaders"* %2, i8 zeroext 1) #16
  %45 = icmp eq %"class.gl::Shader"* %44, null
  br i1 %45, label %51, label %59

46:                                               ; preds = %109
  call void @_ZN2gl17ProgramExecutable31gatherTransformFeedbackVaryingsERKNSt3__16vectorINS_17ProgramVaryingRefENS1_9allocatorIS3_EEEENS_10ShaderTypeERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISE_EEEE(%"class.gl::ProgramExecutable"* %0, %"class.std::__1::vector.632"* dereferenceable(24) %3, i8 zeroext %9, %"class.std::__1::vector.125"* dereferenceable(24) %4)
  call void @_ZN2gl17ProgramExecutable30updateTransformFeedbackStridesEv(%"class.gl::ProgramExecutable"* %0)
  br label %47

47:                                               ; preds = %109, %46
  %48 = phi i1 [ true, %46 ], [ false, %109 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #16
  br label %49

49:                                               ; preds = %7, %47
  %50 = phi i1 [ %48, %47 ], [ false, %7 ]
  ret i1 %50

51:                                               ; preds = %40
  %52 = load i8, i8* %24, align 4, !range !15
  %53 = icmp eq i8 %52, 0
  %54 = select i1 %53, %"class.angle::BitSetT.141"* %26, %"class.angle::BitSetT.141"* %25
  %55 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %54, i64 0, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = and i8 %56, 2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %51, %40
  %60 = or i8 %41, 2
  store i8 %60, i8* %22, align 1
  br label %61

61:                                               ; preds = %59, %51
  %62 = phi i8 [ %60, %59 ], [ %41, %51 ]
  %63 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)**, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*** %23, align 8
  %64 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)** %63, align 8
  %65 = tail call %"class.gl::Shader"* %64(%"class.gl::HasAttachedShaders"* %2, i8 zeroext 2) #16
  %66 = icmp eq %"class.gl::Shader"* %65, null
  br i1 %66, label %67, label %75

67:                                               ; preds = %61
  %68 = load i8, i8* %24, align 4, !range !15
  %69 = icmp eq i8 %68, 0
  %70 = select i1 %69, %"class.angle::BitSetT.141"* %26, %"class.angle::BitSetT.141"* %25
  %71 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %70, i64 0, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = and i8 %72, 4
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %77, label %75

75:                                               ; preds = %67, %61
  %76 = or i8 %62, 4
  store i8 %76, i8* %22, align 1
  br label %77

77:                                               ; preds = %75, %67
  %78 = phi i8 [ %76, %75 ], [ %62, %67 ]
  %79 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)**, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*** %23, align 8
  %80 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)** %79, align 8
  %81 = tail call %"class.gl::Shader"* %80(%"class.gl::HasAttachedShaders"* %2, i8 zeroext 3) #16
  %82 = icmp eq %"class.gl::Shader"* %81, null
  br i1 %82, label %83, label %91

83:                                               ; preds = %77
  %84 = load i8, i8* %24, align 4, !range !15
  %85 = icmp eq i8 %84, 0
  %86 = select i1 %85, %"class.angle::BitSetT.141"* %26, %"class.angle::BitSetT.141"* %25
  %87 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %86, i64 0, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = and i8 %88, 8
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %93, label %91

91:                                               ; preds = %83, %77
  %92 = or i8 %78, 8
  store i8 %92, i8* %22, align 1
  br label %93

93:                                               ; preds = %91, %83
  %94 = phi i8 [ %92, %91 ], [ %78, %83 ]
  %95 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)**, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*** %23, align 8
  %96 = load %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)*, %"class.gl::Shader"* (%"class.gl::HasAttachedShaders"*, i8)** %95, align 8
  %97 = tail call %"class.gl::Shader"* %96(%"class.gl::HasAttachedShaders"* %2, i8 zeroext 4) #16
  %98 = icmp eq %"class.gl::Shader"* %97, null
  br i1 %98, label %99, label %107

99:                                               ; preds = %93
  %100 = load i8, i8* %24, align 4, !range !15
  %101 = icmp eq i8 %100, 0
  %102 = select i1 %101, %"class.angle::BitSetT.141"* %26, %"class.angle::BitSetT.141"* %25
  %103 = getelementptr inbounds %"class.angle::BitSetT.141", %"class.angle::BitSetT.141"* %102, i64 0, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = and i8 %104, 16
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %109, label %107

107:                                              ; preds = %99, %93
  %108 = or i8 %94, 16
  store i8 %108, i8* %22, align 1
  br label %109

109:                                              ; preds = %107, %99
  %110 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  %111 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5
  %112 = call zeroext i1 @_ZN2gl21ProgramVaryingPacking26collectAndPackUserVaryingsERNS_7InfoLogERKNS_4CapsENS_8PackModeERKN5angle7BitSetTILm6EhNS_10ShaderTypeEEERKNSt3__16vectorINS_17ProgramVaryingRefENSD_9allocatorISF_EEEERKNSE_INSD_12basic_stringIcNSD_11char_traitsIcEENSG_IcEEEENSG_ISP_EEEEb(%"class.gl::ProgramVaryingPacking"* %6, %"class.gl::InfoLog"* dereferenceable(8) %110, %"struct.gl::Caps"* dereferenceable(872) %111, i32 %21, %"class.angle::BitSetT.141"* nonnull dereferenceable(1) %8, %"class.std::__1::vector.632"* dereferenceable(24) %3, %"class.std::__1::vector.125"* dereferenceable(24) %4, i1 zeroext %5) #16
  br i1 %112, label %46, label %47
}

declare zeroext i8 @_ZNK2gl18HasAttachedShaders25getTransformFeedbackStageEv(%"class.gl::HasAttachedShaders"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2gl17ProgramExecutable29linkValidateTransformFeedbackEPKNS_7ContextERKNSt3__16vectorINS_17ProgramVaryingRefENS4_9allocatorIS6_EEEENS_10ShaderTypeERKNS5_INS4_12basic_stringIcNS4_11char_traitsIcEENS7_IcEEEENS7_ISH_EEEE(%"class.gl::ProgramExecutable"*, %"class.gl::Context"* nocapture readonly, %"class.std::__1::vector.632"* nocapture readonly dereferenceable(24), i8 zeroext, %"class.std::__1::vector.125"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.std::__1::vector", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::set.667", align 8
  %12 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %13 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %14 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %15 = alloca %"class.std::__1::vector", align 8
  %16 = alloca %"class.std::__1::basic_string", align 8
  %17 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %18 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %19 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %20 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %21 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %22 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %23 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %24 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3
  %25 = bitcast %"class.std::__1::set.667"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.std::__1::set.667", %"class.std::__1::set.667"* %11, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.std::__1::set.667", %"class.std::__1::set.667"* %11, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.std::__1::set.667", %"class.std::__1::set.667"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_node_base"** %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #16
  store %"class.std::__1::__tree_end_node"* %28, %"class.std::__1::__tree_end_node"** %26, align 8
  %30 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %4, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %4, i64 0, i32 0, i32 1
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %34 = icmp eq %"class.std::__1::basic_string"* %31, %33
  br i1 %34, label %626, label %35

35:                                               ; preds = %5
  %36 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %24, i64 0, i32 0
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %38 = bitcast %"class.std::__1::vector"* %7 to i8*
  %39 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %40 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::vector"* %9 to i8*
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = bitcast i32** %46 to i64*
  %55 = bitcast i32** %40 to i64*
  %56 = getelementptr inbounds %"class.std::__1::set.667", %"class.std::__1::set.667"* %11, i64 0, i32 0
  br label %57

57:                                               ; preds = %35, %265
  %58 = phi %"class.std::__1::basic_string"* [ %31, %35 ], [ %267, %265 ]
  %59 = load i32, i32* %36, align 4
  %60 = icmp ult i32 %59, 3
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = icmp eq i32 %59, 3
  br i1 %62, label %63, label %86

63:                                               ; preds = %61
  %64 = load i32, i32* %37, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %86

66:                                               ; preds = %57, %63
  %67 = call i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"* %58, i8 signext 91, i64 0) #16
  %68 = icmp eq i64 %67, -1
  br i1 %68, label %78, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %70) #16, !noalias !41
  %71 = bitcast %"class.gl::InfoLog"* %70 to i64*
  %72 = load i64, i64* %71, align 8, !noalias !41
  %73 = bitcast %"class.gl::InfoLog::StreamHelper"* %12 to i64*
  store i64 %72, i64* %73, align 8, !alias.scope !41
  %74 = inttoptr i64 %72 to i8*
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast i8* %75 to %"class.std::__1::basic_ostream"*
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %76, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str, i64 0, i64 0), i64 57) #16, !noalias !41
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %12) #16
  br label %626

78:                                               ; preds = %66
  %79 = load i32, i32* %36, align 4
  %80 = icmp ult i32 %79, 3
  br i1 %80, label %238, label %81

81:                                               ; preds = %78
  %82 = icmp eq i32 %79, 3
  br i1 %82, label %83, label %86

83:                                               ; preds = %81
  %84 = load i32, i32* %37, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %238, label %86

86:                                               ; preds = %81, %63, %61, %83
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 24, i1 false) #16
  call void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* nonnull sret %8, %"class.std::__1::basic_string"* dereferenceable(24) %58, %"class.std::__1::vector"* nonnull %7) #16
  %87 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %88 = icmp eq %"class.std::__1::__tree_end_node"* %87, %28
  br i1 %88, label %201, label %89

89:                                               ; preds = %86, %198
  %90 = phi %"class.std::__1::__tree_end_node"* [ %199, %198 ], [ %87, %86 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 4
  %92 = bitcast %"class.std::__1::__tree_end_node"* %91 to %"class.std::__1::basic_string"*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false) #16
  call void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.std::__1::basic_string"* dereferenceable(24) %92, %"class.std::__1::vector"* nonnull %9) #16
  %93 = load i8, i8* %51, align 1
  %94 = icmp slt i8 %93, 0
  %95 = load i64, i64* %43, align 8
  %96 = zext i8 %93 to i64
  %97 = select i1 %94, i64 %95, i64 %96
  %98 = load i8, i8* %53, align 1
  %99 = icmp slt i8 %98, 0
  %100 = load i64, i64* %49, align 8
  %101 = zext i8 %98 to i64
  %102 = select i1 %99, i64 %100, i64 %101
  %103 = icmp eq i64 %97, %102
  br i1 %103, label %104, label %158

104:                                              ; preds = %89
  %105 = load i8*, i8** %42, align 8
  %106 = select i1 %94, i8* %105, i8* %41
  %107 = load i8*, i8** %48, align 8
  %108 = select i1 %99, i8* %107, i8* %47
  %109 = icmp eq i64 %97, 0
  br i1 %94, label %116, label %110

110:                                              ; preds = %104
  br i1 %109, label %132, label %111

111:                                              ; preds = %110
  %112 = ptrtoint i8* %105 to i64
  %113 = trunc i64 %112 to i8
  %114 = load i8, i8* %108, align 1
  %115 = icmp eq i8 %114, %113
  br i1 %115, label %117, label %158

116:                                              ; preds = %104
  br i1 %109, label %132, label %129

117:                                              ; preds = %111, %124
  %118 = phi i64 [ %121, %124 ], [ %96, %111 ]
  %119 = phi i8* [ %122, %124 ], [ %41, %111 ]
  %120 = phi i8* [ %125, %124 ], [ %108, %111 ]
  %121 = add i64 %118, -1
  %122 = getelementptr inbounds i8, i8* %119, i64 1
  %123 = icmp eq i64 %121, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %117
  %125 = getelementptr inbounds i8, i8* %120, i64 1
  %126 = load i8, i8* %122, align 1
  %127 = load i8, i8* %125, align 1
  %128 = icmp eq i8 %126, %127
  br i1 %128, label %117, label %158

129:                                              ; preds = %116
  %130 = call i32 @bcmp(i8* %106, i8* %108, i64 %97) #16
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %158

132:                                              ; preds = %117, %129, %116, %110
  %133 = load i32*, i32** %39, align 8
  %134 = load i32*, i32** %40, align 8
  %135 = icmp eq i32* %133, %134
  %136 = ptrtoint i32* %134 to i64
  %137 = ptrtoint i32* %133 to i64
  br i1 %135, label %158, label %138

138:                                              ; preds = %132
  %139 = load i32*, i32** %45, align 8
  %140 = load i32*, i32** %46, align 8
  %141 = icmp eq i32* %139, %140
  br i1 %141, label %158, label %142

142:                                              ; preds = %138
  %143 = ptrtoint i32* %139 to i64
  %144 = ptrtoint i32* %140 to i64
  %145 = sub i64 %136, %137
  %146 = sub i64 %144, %143
  %147 = icmp eq i64 %145, %146
  br i1 %147, label %148, label %158

148:                                              ; preds = %142, %154
  %149 = phi i32* [ %156, %154 ], [ %139, %142 ]
  %150 = phi i32* [ %155, %154 ], [ %133, %142 ]
  %151 = load i32, i32* %150, align 4
  %152 = load i32, i32* %149, align 4
  %153 = icmp eq i32 %151, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %148
  %155 = getelementptr inbounds i32, i32* %150, i64 1
  %156 = getelementptr inbounds i32, i32* %149, i64 1
  %157 = icmp eq i32* %155, %134
  br i1 %157, label %158, label %148

158:                                              ; preds = %124, %154, %148, %111, %142, %138, %132, %129, %89
  %159 = phi i32 [ 1, %138 ], [ 1, %132 ], [ 0, %142 ], [ 0, %129 ], [ 0, %89 ], [ 0, %111 ], [ 0, %148 ], [ 1, %154 ], [ 0, %124 ]
  br i1 %99, label %160, label %162

160:                                              ; preds = %158
  %161 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %161) #18
  br label %162

162:                                              ; preds = %160, %158
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #16
  %163 = load i32*, i32** %45, align 8
  %164 = icmp eq i32* %163, null
  br i1 %164, label %168, label %165

165:                                              ; preds = %162
  %166 = ptrtoint i32* %163 to i64
  store i64 %166, i64* %54, align 8
  %167 = bitcast i32* %163 to i8*
  call void @_ZdlPv(i8* %167) #18
  br label %168

168:                                              ; preds = %165, %162
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #16
  %169 = icmp eq i32 %159, 0
  br i1 %169, label %170, label %201

170:                                              ; preds = %168
  %171 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 1, i32 0
  %172 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %171, align 8
  %173 = icmp eq %"class.std::__1::__tree_node_base"* %172, null
  br i1 %173, label %174, label %182

174:                                              ; preds = %170
  %175 = bitcast %"class.std::__1::__tree_end_node"* %90 to %"class.std::__1::__tree_node_base"*
  %176 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %90, i64 2
  %177 = bitcast %"class.std::__1::__tree_end_node"* %176 to %"class.std::__1::__tree_end_node"**
  %178 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %177, align 8
  %179 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %178, i64 0, i32 0
  %180 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %179, align 8
  %181 = icmp eq %"class.std::__1::__tree_node_base"* %180, %175
  br i1 %181, label %198, label %189

182:                                              ; preds = %170, %182
  %183 = phi %"class.std::__1::__tree_node_base"* [ %185, %182 ], [ %172, %170 ]
  %184 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %183, i64 0, i32 0, i32 0
  %185 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %184, align 8
  %186 = icmp eq %"class.std::__1::__tree_node_base"* %185, null
  br i1 %186, label %187, label %182

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %183, i64 0, i32 0
  br label %198

189:                                              ; preds = %174, %189
  %190 = phi %"class.std::__1::__tree_end_node"** [ %193, %189 ], [ %177, %174 ]
  %191 = bitcast %"class.std::__1::__tree_end_node"** %190 to %"class.std::__1::__tree_node_base"**
  %192 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %191, align 8
  %193 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %192, i64 0, i32 2
  %194 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %193, align 8
  %195 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %194, i64 0, i32 0
  %196 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %195, align 8
  %197 = icmp eq %"class.std::__1::__tree_node_base"* %196, %192
  br i1 %197, label %198, label %189

198:                                              ; preds = %189, %187, %174
  %199 = phi %"class.std::__1::__tree_end_node"* [ %188, %187 ], [ %178, %174 ], [ %194, %189 ]
  %200 = icmp eq %"class.std::__1::__tree_end_node"* %199, %28
  br i1 %200, label %201, label %89

201:                                              ; preds = %198, %168, %86
  %202 = phi i1 [ false, %86 ], [ true, %168 ], [ false, %198 ]
  %203 = load i8, i8* %51, align 1
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %201
  %206 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %206) #18
  br label %207

207:                                              ; preds = %205, %201
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #16
  %208 = load i32*, i32** %39, align 8
  %209 = icmp eq i32* %208, null
  br i1 %209, label %213, label %210

210:                                              ; preds = %207
  %211 = ptrtoint i32* %208 to i64
  store i64 %211, i64* %55, align 8
  %212 = bitcast i32* %208 to i8*
  call void @_ZdlPv(i8* %212) #18
  br label %213

213:                                              ; preds = %207, %210
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #16
  br i1 %202, label %214, label %265

214:                                              ; preds = %213
  %215 = bitcast %"class.gl::InfoLog::StreamHelper"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215) #16
  %216 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %216) #16, !noalias !44
  %217 = bitcast %"class.gl::InfoLog"* %216 to i64*
  %218 = load i64, i64* %217, align 8, !noalias !44
  %219 = bitcast %"class.gl::InfoLog::StreamHelper"* %13 to i64*
  store i64 %218, i64* %219, align 8, !alias.scope !44
  %220 = inttoptr i64 %218 to i8*
  %221 = getelementptr inbounds i8, i8* %220, i64 16
  %222 = bitcast i8* %221 to %"class.std::__1::basic_ostream"*
  %223 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %222, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.5, i64 0, i64 0), i64 64) #16, !noalias !44
  %224 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %225 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %224, i64 0, i32 1, i32 0
  %226 = load i8, i8* %225, align 1
  %227 = icmp slt i8 %226, 0
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %233 = zext i8 %226 to i64
  %234 = select i1 %227, i8* %229, i8* %232
  %235 = select i1 %227, i64 %231, i64 %233
  %236 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %222, i8* %234, i64 %235) #16
  %237 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %222, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215) #16
  br label %626

238:                                              ; preds = %83, %78
  %239 = call i64 @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_(%"class.std::__1::__tree.668"* nonnull %56, %"class.std::__1::basic_string"* dereferenceable(24) %58) #16
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %265, label %241

241:                                              ; preds = %238
  %242 = bitcast %"class.gl::InfoLog::StreamHelper"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #16
  %243 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %243) #16, !noalias !47
  %244 = bitcast %"class.gl::InfoLog"* %243 to i64*
  %245 = load i64, i64* %244, align 8, !noalias !47
  %246 = bitcast %"class.gl::InfoLog::StreamHelper"* %14 to i64*
  store i64 %245, i64* %246, align 8, !alias.scope !47
  %247 = inttoptr i64 %245 to i8*
  %248 = getelementptr inbounds i8, i8* %247, i64 16
  %249 = bitcast i8* %248 to %"class.std::__1::basic_ostream"*
  %250 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %249, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.7, i64 0, i64 0), i64 66) #16, !noalias !47
  %251 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %252 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %251, i64 0, i32 1, i32 0
  %253 = load i8, i8* %252, align 1
  %254 = icmp slt i8 %253, 0
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  %257 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  %259 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %260 = zext i8 %253 to i64
  %261 = select i1 %254, i8* %256, i8* %259
  %262 = select i1 %254, i64 %258, i64 %260
  %263 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %249, i8* %261, i64 %262) #16
  %264 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %249, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #16
  br label %626

265:                                              ; preds = %238, %213
  %266 = call { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.668"* nonnull %56, %"class.std::__1::basic_string"* dereferenceable(24) %58, %"class.std::__1::basic_string"* dereferenceable(24) %58) #16
  %267 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 1
  %268 = icmp eq %"class.std::__1::basic_string"* %267, %33
  br i1 %268, label %269, label %57

269:                                              ; preds = %265
  %270 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %30, align 8
  %271 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %32, align 8
  %272 = icmp eq %"class.std::__1::basic_string"* %270, %271
  br i1 %272, label %626, label %273

273:                                              ; preds = %269
  %274 = bitcast %"class.std::__1::vector"* %15 to i8*
  %275 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 0
  %276 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %15, i64 0, i32 0, i32 1
  %277 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %278 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %280 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %2, i64 0, i32 0, i32 0
  %281 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %2, i64 0, i32 0, i32 1
  %282 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %283 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %282, i64 0, i32 1, i32 0
  %284 = bitcast i32* %6 to i8*
  %285 = bitcast %"class.gl::InfoLog::StreamHelper"* %18 to i8*
  %286 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 1
  %287 = bitcast %"class.gl::InfoLog"* %286 to i64*
  %288 = bitcast %"class.gl::InfoLog::StreamHelper"* %18 to i64*
  %289 = bitcast %"class.gl::InfoLog::StreamHelper"* %18 to i8**
  %290 = getelementptr inbounds %"struct.gl::Version", %"struct.gl::Version"* %24, i64 0, i32 0
  %291 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 3, i32 1
  %292 = bitcast %"class.gl::InfoLog::StreamHelper"* %20 to i8*
  %293 = bitcast %"class.gl::InfoLog::StreamHelper"* %20 to i64*
  %294 = bitcast %"class.gl::InfoLog::StreamHelper"* %20 to i8**
  %295 = bitcast %"class.gl::InfoLog::StreamHelper"* %19 to i64*
  %296 = bitcast %"class.gl::InfoLog::StreamHelper"* %21 to i8*
  %297 = bitcast %"class.gl::InfoLog::StreamHelper"* %21 to i64*
  %298 = bitcast %"class.gl::InfoLog::StreamHelper"* %21 to i8**
  %299 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  %300 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5, i32 89
  %301 = bitcast %"class.gl::InfoLog::StreamHelper"* %23 to i8*
  %302 = bitcast %"class.gl::InfoLog::StreamHelper"* %23 to i64*
  %303 = bitcast %"class.gl::InfoLog::StreamHelper"* %23 to i8**
  %304 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 5, i32 91
  %305 = bitcast %"class.gl::InfoLog::StreamHelper"* %22 to i8*
  %306 = bitcast %"class.gl::InfoLog::StreamHelper"* %22 to i64*
  %307 = bitcast %"class.gl::InfoLog::StreamHelper"* %22 to i8**
  %308 = bitcast %"class.gl::InfoLog::StreamHelper"* %17 to i8*
  %309 = bitcast %"class.gl::InfoLog::StreamHelper"* %17 to i64*
  %310 = bitcast %"class.gl::InfoLog::StreamHelper"* %17 to i8**
  %311 = bitcast i32** %276 to i64*
  %312 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  br label %315

313:                                              ; preds = %623
  %314 = icmp eq %"class.std::__1::basic_string"* %625, %271
  br i1 %314, label %626, label %315

315:                                              ; preds = %273, %313
  %316 = phi %"class.std::__1::basic_string"* [ %270, %273 ], [ %625, %313 ]
  %317 = phi i64 [ 0, %273 ], [ %611, %313 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %274) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %274, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %312, i8 -86, i64 24, i1 false)
  call void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* nonnull sret %16, %"class.std::__1::basic_string"* dereferenceable(24) %316, %"class.std::__1::vector"* nonnull %15) #16
  %318 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %280, align 8
  %319 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %281, align 8
  %320 = icmp eq %"struct.gl::ProgramVaryingRef"* %318, %319
  br i1 %320, label %382, label %321

321:                                              ; preds = %315, %377
  %322 = phi %"struct.gl::ProgramVaryingRef"* [ %378, %377 ], [ %318, %315 ]
  %323 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %322, i64 0, i32 2
  %324 = load i8, i8* %323, align 8
  %325 = icmp eq i8 %324, %3
  br i1 %325, label %326, label %377

326:                                              ; preds = %321
  %327 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %322, i64 0, i32 0
  %328 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %327, align 8
  %329 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %328, i64 0, i32 2
  %330 = bitcast %"class.std::__1::basic_string"* %329 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %331 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %330, i64 0, i32 1, i32 0
  %332 = load i8, i8* %331, align 1
  %333 = icmp slt i8 %332, 0
  %334 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %335 = load i64, i64* %334, align 8
  %336 = zext i8 %332 to i64
  %337 = select i1 %333, i64 %335, i64 %336
  %338 = load i8, i8* %283, align 1
  %339 = icmp slt i8 %338, 0
  %340 = load i64, i64* %279, align 8
  %341 = zext i8 %338 to i64
  %342 = select i1 %339, i64 %340, i64 %341
  %343 = icmp eq i64 %337, %342
  br i1 %343, label %344, label %374

344:                                              ; preds = %326
  %345 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %329, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load i8*, i8** %345, align 8
  %347 = bitcast %"class.std::__1::basic_string"* %329 to i8*
  %348 = select i1 %333, i8* %346, i8* %347
  %349 = load i8*, i8** %278, align 8
  %350 = select i1 %339, i8* %349, i8* %277
  %351 = icmp eq i64 %337, 0
  br i1 %333, label %358, label %352

352:                                              ; preds = %344
  br i1 %351, label %380, label %353

353:                                              ; preds = %352
  %354 = ptrtoint i8* %346 to i64
  %355 = trunc i64 %354 to i8
  %356 = load i8, i8* %350, align 1
  %357 = icmp eq i8 %356, %355
  br i1 %357, label %359, label %374

358:                                              ; preds = %344
  br i1 %351, label %380, label %371

359:                                              ; preds = %353, %366
  %360 = phi i64 [ %363, %366 ], [ %336, %353 ]
  %361 = phi i8* [ %364, %366 ], [ %347, %353 ]
  %362 = phi i8* [ %367, %366 ], [ %350, %353 ]
  %363 = add i64 %360, -1
  %364 = getelementptr inbounds i8, i8* %361, i64 1
  %365 = icmp eq i64 %363, 0
  br i1 %365, label %380, label %366

366:                                              ; preds = %359
  %367 = getelementptr inbounds i8, i8* %362, i64 1
  %368 = load i8, i8* %364, align 1
  %369 = load i8, i8* %367, align 1
  %370 = icmp eq i8 %368, %369
  br i1 %370, label %359, label %374

371:                                              ; preds = %358
  %372 = call i32 @bcmp(i8* %348, i8* %350, i64 %337) #16
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %380, label %374

374:                                              ; preds = %366, %353, %371, %326
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %284) #16
  store i32 0, i32* %6, align 4
  %375 = call %"struct.sh::ShaderVariable"* @_ZNK2sh14ShaderVariable9findFieldERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPj(%"struct.sh::ShaderVariable"* %328, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %16, i32* nonnull %6) #16
  %376 = icmp eq %"struct.sh::ShaderVariable"* %375, null
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %284) #16
  br i1 %376, label %377, label %408

377:                                              ; preds = %374, %321
  %378 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %322, i64 1
  %379 = icmp eq %"struct.gl::ProgramVaryingRef"* %378, %319
  br i1 %379, label %382, label %321

380:                                              ; preds = %352, %358, %371, %359
  %381 = icmp eq %"struct.sh::ShaderVariable"* %328, null
  br i1 %381, label %382, label %408

382:                                              ; preds = %377, %315, %380
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %308) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !50
  %383 = load i64, i64* %287, align 8, !noalias !50
  store i64 %383, i64* %309, align 8, !alias.scope !50
  %384 = inttoptr i64 %383 to i8*
  %385 = getelementptr inbounds i8, i8* %384, i64 16
  %386 = bitcast i8* %385 to %"class.std::__1::basic_ostream"*
  %387 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %386, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27) #16, !noalias !50
  %388 = load i8*, i8** %310, align 8
  %389 = getelementptr inbounds i8, i8* %388, i64 16
  %390 = bitcast i8* %389 to %"class.std::__1::basic_ostream"*
  %391 = bitcast %"class.std::__1::basic_string"* %316 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %392 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %391, i64 0, i32 1, i32 0
  %393 = load i8, i8* %392, align 1
  %394 = icmp slt i8 %393, 0
  %395 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load i8*, i8** %395, align 8
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %398 = load i64, i64* %397, align 8
  %399 = bitcast %"class.std::__1::basic_string"* %316 to i8*
  %400 = zext i8 %393 to i64
  %401 = select i1 %394, i8* %396, i8* %399
  %402 = select i1 %394, i64 %398, i64 %400
  %403 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %390, i8* %401, i64 %402) #16
  %404 = load i8*, i8** %310, align 8
  %405 = getelementptr inbounds i8, i8* %404, i64 16
  %406 = bitcast i8* %405 to %"class.std::__1::basic_ostream"*
  %407 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %406, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.9, i64 0, i64 0), i64 37) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %308) #16
  br label %610

408:                                              ; preds = %374, %380
  %409 = phi %"struct.sh::ShaderVariable"* [ %328, %380 ], [ %375, %374 ]
  %410 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %409, i64 0, i32 7, i32 0, i32 0
  %411 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %410, align 8
  %412 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %409, i64 0, i32 7, i32 0, i32 1
  %413 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %412, align 8
  %414 = icmp eq %"struct.sh::ShaderVariable"* %411, %413
  br i1 %414, label %436, label %415

415:                                              ; preds = %408
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %285) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !53
  %416 = load i64, i64* %287, align 8, !noalias !53
  store i64 %416, i64* %288, align 8, !alias.scope !53
  %417 = inttoptr i64 %416 to i8*
  %418 = getelementptr inbounds i8, i8* %417, i64 16
  %419 = bitcast i8* %418 to %"class.std::__1::basic_ostream"*
  %420 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %419, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.10, i64 0, i64 0), i64 36) #16, !noalias !53
  %421 = load i8*, i8** %289, align 8
  %422 = getelementptr inbounds i8, i8* %421, i64 16
  %423 = bitcast i8* %422 to %"class.std::__1::basic_ostream"*
  %424 = load i8, i8* %283, align 1
  %425 = icmp slt i8 %424, 0
  %426 = load i8*, i8** %278, align 8
  %427 = load i64, i64* %279, align 8
  %428 = zext i8 %424 to i64
  %429 = select i1 %425, i8* %426, i8* %277
  %430 = select i1 %425, i64 %427, i64 %428
  %431 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %423, i8* %429, i64 %430) #16
  %432 = load i8*, i8** %289, align 8
  %433 = getelementptr inbounds i8, i8* %432, i64 16
  %434 = bitcast i8* %433 to %"class.std::__1::basic_ostream"*
  %435 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %434, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %18) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %285) #16
  br label %610

436:                                              ; preds = %408
  %437 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %409, i64 0, i32 4, i32 0, i32 0
  %438 = load i32*, i32** %437, align 8
  %439 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %409, i64 0, i32 4, i32 0, i32 1
  %440 = load i32*, i32** %439, align 8
  %441 = icmp eq i32* %438, %440
  br i1 %441, label %497, label %442

442:                                              ; preds = %436
  %443 = load i32, i32* %290, align 4
  %444 = icmp ult i32 %443, 3
  br i1 %444, label %450, label %445

445:                                              ; preds = %442
  %446 = icmp eq i32 %443, 3
  br i1 %446, label %447, label %456

447:                                              ; preds = %445
  %448 = load i32, i32* %291, align 4
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %456

450:                                              ; preds = %442, %447
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !56
  %451 = load i64, i64* %287, align 8, !noalias !56
  store i64 %451, i64* %295, align 8, !alias.scope !56
  %452 = inttoptr i64 %451 to i8*
  %453 = getelementptr inbounds i8, i8* %452, i64 16
  %454 = bitcast i8* %453 to %"class.std::__1::basic_ostream"*
  %455 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %454, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0), i64 49) #16, !noalias !56
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %19) #16
  br label %610

456:                                              ; preds = %445, %447
  %457 = load i32*, i32** %275, align 8
  %458 = load i32*, i32** %276, align 8
  %459 = icmp eq i32* %457, %458
  br i1 %459, label %491, label %460

460:                                              ; preds = %456
  %461 = load i32, i32* %457, align 4
  %462 = getelementptr inbounds i32, i32* %440, i64 -1
  %463 = load i32, i32* %462, align 4
  %464 = icmp ult i32 %461, %463
  br i1 %464, label %494, label %465

465:                                              ; preds = %460
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !59
  %466 = load i64, i64* %287, align 8, !noalias !59
  store i64 %466, i64* %293, align 8, !alias.scope !59
  %467 = inttoptr i64 %466 to i8*
  %468 = getelementptr inbounds i8, i8* %467, i64 16
  %469 = bitcast i8* %468 to %"class.std::__1::basic_ostream"*
  %470 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %469, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.12, i64 0, i64 0), i64 39) #16, !noalias !59
  %471 = load i8*, i8** %294, align 8
  %472 = getelementptr inbounds i8, i8* %471, i64 16
  %473 = bitcast i8* %472 to %"class.std::__1::basic_ostream"*
  %474 = bitcast %"class.std::__1::basic_string"* %316 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %474, i64 0, i32 1, i32 0
  %476 = load i8, i8* %475, align 1
  %477 = icmp slt i8 %476, 0
  %478 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load i8*, i8** %478, align 8
  %480 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %481 = load i64, i64* %480, align 8
  %482 = bitcast %"class.std::__1::basic_string"* %316 to i8*
  %483 = zext i8 %476 to i64
  %484 = select i1 %477, i8* %479, i8* %482
  %485 = select i1 %477, i64 %481, i64 %483
  %486 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %473, i8* %484, i64 %485) #16
  %487 = load i8*, i8** %294, align 8
  %488 = getelementptr inbounds i8, i8* %487, i64 16
  %489 = bitcast i8* %488 to %"class.std::__1::basic_ostream"*
  %490 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %489, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.13, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %20) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %292) #16
  br label %610

491:                                              ; preds = %456
  %492 = getelementptr inbounds i32, i32* %440, i64 -1
  %493 = load i32, i32* %492, align 4
  br label %494

494:                                              ; preds = %491, %460
  %495 = phi i32 [ 1, %460 ], [ %493, %491 ]
  %496 = zext i32 %495 to i64
  br label %522

497:                                              ; preds = %436
  %498 = load i32*, i32** %275, align 8
  %499 = load i32*, i32** %276, align 8
  %500 = icmp eq i32* %498, %499
  br i1 %500, label %522, label %501

501:                                              ; preds = %497
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %296) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !62
  %502 = load i64, i64* %287, align 8, !noalias !62
  store i64 %502, i64* %297, align 8, !alias.scope !62
  %503 = inttoptr i64 %502 to i8*
  %504 = getelementptr inbounds i8, i8* %503, i64 16
  %505 = bitcast i8* %504 to %"class.std::__1::basic_ostream"*
  %506 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %505, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.14, i64 0, i64 0), i64 9) #16, !noalias !62
  %507 = load i8*, i8** %298, align 8
  %508 = getelementptr inbounds i8, i8* %507, i64 16
  %509 = bitcast i8* %508 to %"class.std::__1::basic_ostream"*
  %510 = load i8, i8* %283, align 1
  %511 = icmp slt i8 %510, 0
  %512 = load i8*, i8** %278, align 8
  %513 = load i64, i64* %279, align 8
  %514 = zext i8 %510 to i64
  %515 = select i1 %511, i8* %512, i8* %277
  %516 = select i1 %511, i64 %513, i64 %514
  %517 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %509, i8* %515, i64 %516) #16
  %518 = load i8*, i8** %298, align 8
  %519 = getelementptr inbounds i8, i8* %518, i64 16
  %520 = bitcast i8* %519 to %"class.std::__1::basic_ostream"*
  %521 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %520, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.15, i64 0, i64 0), i64 44) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %296) #16
  br label %610

522:                                              ; preds = %497, %494
  %523 = phi i64 [ %496, %494 ], [ 1, %497 ]
  %524 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %409, i64 0, i32 0
  %525 = load i32, i32* %524, align 8
  %526 = call i32 @_ZN2gl22VariableComponentCountEj(i32 %525) #16
  %527 = sext i32 %526 to i64
  %528 = mul nsw i64 %523, %527
  %529 = load i32, i32* %299, align 8
  %530 = icmp eq i32 %529, 35981
  br i1 %530, label %531, label %580

531:                                              ; preds = %522
  %532 = load i32, i32* %304, align 8
  %533 = zext i32 %532 to i64
  %534 = icmp ugt i64 %528, %533
  br i1 %534, label %537, label %535

535:                                              ; preds = %531
  %536 = add i64 %528, %317
  br label %610

537:                                              ; preds = %531
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !65
  %538 = load i64, i64* %287, align 8, !noalias !65
  store i64 %538, i64* %306, align 8, !alias.scope !65
  %539 = inttoptr i64 %538 to i8*
  %540 = getelementptr inbounds i8, i8* %539, i64 16
  %541 = bitcast i8* %540 to %"class.std::__1::basic_ostream"*
  %542 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %541, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i64 27) #16, !noalias !65
  %543 = load i8*, i8** %307, align 8
  %544 = getelementptr inbounds i8, i8* %543, i64 16
  %545 = bitcast i8* %544 to %"class.std::__1::basic_ostream"*
  %546 = bitcast %"class.std::__1::basic_string"* %316 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %547 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %546, i64 0, i32 1, i32 0
  %548 = load i8, i8* %547, align 1
  %549 = icmp slt i8 %548, 0
  %550 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %551 = load i8*, i8** %550, align 8
  %552 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %553 = load i64, i64* %552, align 8
  %554 = bitcast %"class.std::__1::basic_string"* %316 to i8*
  %555 = zext i8 %548 to i64
  %556 = select i1 %549, i8* %551, i8* %554
  %557 = select i1 %549, i64 %553, i64 %555
  %558 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %545, i8* %556, i64 %557) #16
  %559 = load i8*, i8** %307, align 8
  %560 = getelementptr inbounds i8, i8* %559, i64 16
  %561 = bitcast i8* %560 to %"class.std::__1::basic_ostream"*
  %562 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %561, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i64 0, i64 0), i64 13) #16
  %563 = load i8*, i8** %307, align 8
  %564 = getelementptr inbounds i8, i8* %563, i64 16
  %565 = bitcast i8* %564 to %"class.std::__1::basic_ostream"*
  %566 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %565, i64 %528) #16
  %567 = load i8*, i8** %307, align 8
  %568 = getelementptr inbounds i8, i8* %567, i64 16
  %569 = bitcast i8* %568 to %"class.std::__1::basic_ostream"*
  %570 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %569, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.17, i64 0, i64 0), i64 42) #16
  %571 = load i8*, i8** %307, align 8
  %572 = getelementptr inbounds i8, i8* %571, i64 16
  %573 = bitcast i8* %572 to %"class.std::__1::basic_ostream"*
  %574 = load i32, i32* %304, align 4
  %575 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %573, i32 %574) #16
  %576 = load i8*, i8** %307, align 8
  %577 = getelementptr inbounds i8, i8* %576, i64 16
  %578 = bitcast i8* %577 to %"class.std::__1::basic_ostream"*
  %579 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %578, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %22) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #16
  br label %610

580:                                              ; preds = %522
  %581 = add i64 %528, %317
  %582 = icmp eq i32 %529, 35980
  br i1 %582, label %583, label %610

583:                                              ; preds = %580
  %584 = load i32, i32* %300, align 8
  %585 = zext i32 %584 to i64
  %586 = icmp ugt i64 %581, %585
  br i1 %586, label %587, label %610

587:                                              ; preds = %583
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %301) #16
  call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* %286) #16, !noalias !68
  %588 = load i64, i64* %287, align 8, !noalias !68
  store i64 %588, i64* %302, align 8, !alias.scope !68
  %589 = inttoptr i64 %588 to i8*
  %590 = getelementptr inbounds i8, i8* %589, i64 16
  %591 = bitcast i8* %590 to %"class.std::__1::basic_ostream"*
  %592 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %591, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.18, i64 0, i64 0), i64 45) #16, !noalias !68
  %593 = load i8*, i8** %303, align 8
  %594 = getelementptr inbounds i8, i8* %593, i64 16
  %595 = bitcast i8* %594 to %"class.std::__1::basic_ostream"*
  %596 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %595, i64 %581) #16
  %597 = load i8*, i8** %303, align 8
  %598 = getelementptr inbounds i8, i8* %597, i64 16
  %599 = bitcast i8* %598 to %"class.std::__1::basic_ostream"*
  %600 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %599, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.19, i64 0, i64 0), i64 45) #16
  %601 = load i8*, i8** %303, align 8
  %602 = getelementptr inbounds i8, i8* %601, i64 16
  %603 = bitcast i8* %602 to %"class.std::__1::basic_ostream"*
  %604 = load i32, i32* %300, align 4
  %605 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %603, i32 %604) #16
  %606 = load i8*, i8** %303, align 8
  %607 = getelementptr inbounds i8, i8* %606, i64 16
  %608 = bitcast i8* %607 to %"class.std::__1::basic_ostream"*
  %609 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %608, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %301) #16
  br label %610

610:                                              ; preds = %450, %465, %501, %580, %583, %587, %537, %535, %415, %382
  %611 = phi i64 [ %317, %382 ], [ %317, %415 ], [ %317, %450 ], [ %317, %537 ], [ %581, %587 ], [ %581, %583 ], [ %581, %580 ], [ %317, %465 ], [ %317, %501 ], [ %536, %535 ]
  %612 = phi i32 [ 1, %382 ], [ 1, %415 ], [ 1, %450 ], [ 1, %537 ], [ 1, %587 ], [ 0, %583 ], [ 0, %580 ], [ 1, %465 ], [ 1, %501 ], [ 0, %535 ]
  %613 = load i8, i8* %283, align 1
  %614 = icmp slt i8 %613, 0
  br i1 %614, label %615, label %617

615:                                              ; preds = %610
  %616 = load i8*, i8** %278, align 8
  call void @_ZdlPv(i8* %616) #18
  br label %617

617:                                              ; preds = %610, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #16
  %618 = load i32*, i32** %275, align 8
  %619 = icmp eq i32* %618, null
  br i1 %619, label %623, label %620

620:                                              ; preds = %617
  %621 = ptrtoint i32* %618 to i64
  store i64 %621, i64* %311, align 8
  %622 = bitcast i32* %618 to i8*
  call void @_ZdlPv(i8* %622) #18
  br label %623

623:                                              ; preds = %617, %620
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %274) #16
  %624 = icmp eq i32 %612, 0
  %625 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %316, i64 1
  br i1 %624, label %313, label %626

626:                                              ; preds = %623, %313, %5, %269, %241, %214, %69
  %627 = phi i1 [ false, %69 ], [ false, %214 ], [ false, %241 ], [ true, %269 ], [ true, %5 ], [ false, %623 ], [ true, %313 ]
  %628 = getelementptr inbounds %"class.std::__1::set.667", %"class.std::__1::set.667"* %11, i64 0, i32 0
  %629 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %630 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %629, align 8
  call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.668"* nonnull %628, %"class.std::__1::__tree_node"* %630) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  ret i1 %627
}

declare zeroext i1 @_ZN2gl21ProgramVaryingPacking26collectAndPackUserVaryingsERNS_7InfoLogERKNS_4CapsENS_8PackModeERKN5angle7BitSetTILm6EhNS_10ShaderTypeEEERKNSt3__16vectorINS_17ProgramVaryingRefENSD_9allocatorISF_EEEERKNSE_INSD_12basic_stringIcNSD_11char_traitsIcEENSG_IcEEEENSG_ISP_EEEEb(%"class.gl::ProgramVaryingPacking"*, %"class.gl::InfoLog"* dereferenceable(8), %"struct.gl::Caps"* dereferenceable(872), i32, %"class.angle::BitSetT.141"* dereferenceable(1), %"class.std::__1::vector.632"* dereferenceable(24), %"class.std::__1::vector.125"* dereferenceable(24), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable31gatherTransformFeedbackVaryingsERKNSt3__16vectorINS_17ProgramVaryingRefENS1_9allocatorIS3_EEEENS_10ShaderTypeERKNS2_INS1_12basic_stringIcNS1_11char_traitsIcEENS4_IcEEEENS4_ISE_EEEE(%"class.gl::ProgramExecutable"*, %"class.std::__1::vector.632"* nocapture readonly dereferenceable(24), i8 zeroext, %"class.std::__1::vector.125"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::vector", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca i32, align 4
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %10 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %9, i64 0, i32 0, i32 0
  %11 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %13 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %12, align 8
  %14 = icmp eq %"struct.gl::TransformFeedbackVarying"* %13, %11
  br i1 %14, label %20, label %15

15:                                               ; preds = %4, %15
  %16 = phi %"struct.gl::TransformFeedbackVarying"* [ %17, %15 ], [ %13, %4 ]
  %17 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %16, i64 -1
  %18 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %17, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %18) #16
  %19 = icmp eq %"struct.gl::TransformFeedbackVarying"* %17, %11
  br i1 %19, label %20, label %15

20:                                               ; preds = %15, %4
  store %"struct.gl::TransformFeedbackVarying"* %11, %"struct.gl::TransformFeedbackVarying"** %12, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %3, i64 0, i32 0, i32 0
  %22 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector.125", %"class.std::__1::vector.125"* %3, i64 0, i32 0, i32 1
  %24 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %23, align 8
  %25 = icmp eq %"class.std::__1::basic_string"* %22, %24
  br i1 %25, label %43, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.std::__1::vector"* %5 to i8*
  %28 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %5, i64 0, i32 0, i32 1
  %30 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %1, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.std::__1::vector.632", %"class.std::__1::vector.632"* %1, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = bitcast i32* %8 to i8*
  %38 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 2, i32 0, i32 0
  %39 = bitcast %"struct.gl::TransformFeedbackVarying"** %12 to i64*
  %40 = bitcast i32* %7 to i8*
  %41 = bitcast i32** %29 to i64*
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %44

43:                                               ; preds = %154, %20
  ret void

44:                                               ; preds = %26, %154
  %45 = phi %"class.std::__1::basic_string"* [ %22, %26 ], [ %155, %154 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %42, i8 -86, i64 24, i1 false)
  call void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.std::__1::basic_string"* dereferenceable(24) %45, %"class.std::__1::vector"* nonnull %5) #16
  %46 = load i32*, i32** %28, align 8
  %47 = load i32*, i32** %29, align 8
  %48 = icmp eq i32* %46, %47
  br i1 %48, label %52, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds i32, i32* %47, i64 -1
  %51 = load i32, i32* %50, align 4
  br label %52

52:                                               ; preds = %49, %44
  %53 = phi i32 [ -1, %44 ], [ %51, %49 ]
  %54 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %33, align 8
  %55 = load %"struct.gl::ProgramVaryingRef"*, %"struct.gl::ProgramVaryingRef"** %34, align 8
  %56 = icmp eq %"struct.gl::ProgramVaryingRef"* %54, %55
  br i1 %56, label %143, label %57

57:                                               ; preds = %52, %140
  %58 = phi %"struct.gl::ProgramVaryingRef"* [ %141, %140 ], [ %54, %52 ]
  %59 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %58, i64 0, i32 2
  %60 = load i8, i8* %59, align 8
  %61 = icmp eq i8 %60, %2
  br i1 %61, label %62, label %140

62:                                               ; preds = %57
  %63 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %58, i64 0, i32 0
  %64 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %63, align 8
  %65 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %64, i64 0, i32 2
  %66 = load i8, i8* %36, align 1
  %67 = icmp slt i8 %66, 0
  %68 = load i64, i64* %32, align 8
  %69 = zext i8 %66 to i64
  %70 = select i1 %67, i64 %68, i64 %69
  %71 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  %75 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = zext i8 %73 to i64
  %78 = select i1 %74, i64 %76, i64 %77
  %79 = icmp eq i64 %70, %78
  br i1 %79, label %80, label %121

80:                                               ; preds = %62
  %81 = load i8*, i8** %31, align 8
  %82 = select i1 %67, i8* %81, i8* %30
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %86 = select i1 %74, i8* %84, i8* %85
  %87 = icmp eq i64 %70, 0
  br i1 %67, label %94, label %88

88:                                               ; preds = %80
  br i1 %87, label %110, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %81 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %86, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %95, label %121

94:                                               ; preds = %80
  br i1 %87, label %110, label %107

95:                                               ; preds = %89, %102
  %96 = phi i64 [ %99, %102 ], [ %69, %89 ]
  %97 = phi i8* [ %100, %102 ], [ %30, %89 ]
  %98 = phi i8* [ %103, %102 ], [ %86, %89 ]
  %99 = add i64 %96, -1
  %100 = getelementptr inbounds i8, i8* %97, i64 1
  %101 = icmp eq i64 %99, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %95
  %103 = getelementptr inbounds i8, i8* %98, i64 1
  %104 = load i8, i8* %100, align 1
  %105 = load i8, i8* %103, align 1
  %106 = icmp eq i8 %104, %105
  br i1 %106, label %95, label %121

107:                                              ; preds = %94
  %108 = call i32 @bcmp(i8* %82, i8* %86, i64 %70) #16
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %121

110:                                              ; preds = %88, %94, %107, %95
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #16
  store i32 %53, i32* %7, align 4
  %111 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %12, align 8
  %112 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %38, align 8
  %113 = icmp ult %"struct.gl::TransformFeedbackVarying"* %111, %112
  br i1 %113, label %114, label %119

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %111, i64 0, i32 0
  call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %115, %"struct.sh::ShaderVariable"* dereferenceable(208) %64) #16
  %116 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %111, i64 0, i32 1
  store i32 %53, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %111, i64 1
  %118 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %117 to i64
  store i64 %118, i64* %39, align 8
  br label %120

119:                                              ; preds = %110
  call void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableEjEEEvDpOT_(%"class.std::__1::vector.173"* %9, %"struct.sh::ShaderVariable"* dereferenceable(208) %64, i32* nonnull dereferenceable(4) %7) #16
  br label %120

120:                                              ; preds = %114, %119
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #16
  br label %143

121:                                              ; preds = %102, %89, %62, %107
  %122 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %64, i64 0, i32 7, i32 0, i32 0
  %123 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %122, align 8
  %124 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %64, i64 0, i32 7, i32 0, i32 1
  %125 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %124, align 8
  %126 = icmp eq %"struct.sh::ShaderVariable"* %123, %125
  br i1 %126, label %140, label %127

127:                                              ; preds = %121
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #16
  store i32 0, i32* %8, align 4
  %128 = call %"struct.sh::ShaderVariable"* @_ZNK2sh14ShaderVariable9findFieldERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPj(%"struct.sh::ShaderVariable"* %64, %"class.std::__1::basic_string"* dereferenceable(24) %45, i32* nonnull %8) #16
  %129 = icmp eq %"struct.sh::ShaderVariable"* %128, null
  br i1 %129, label %139, label %130

130:                                              ; preds = %127
  %131 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %12, align 8
  %132 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %38, align 8
  %133 = icmp ult %"struct.gl::TransformFeedbackVarying"* %131, %132
  br i1 %133, label %134, label %137

134:                                              ; preds = %130
  call void @_ZN2gl24TransformFeedbackVaryingC2ERKN2sh14ShaderVariableES4_(%"struct.gl::TransformFeedbackVarying"* %131, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %128, %"struct.sh::ShaderVariable"* dereferenceable(208) %64) #16
  %135 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %131, i64 1
  %136 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %135 to i64
  store i64 %136, i64* %39, align 8
  br label %138

137:                                              ; preds = %130
  call void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableESA_EEEvDpOT_(%"class.std::__1::vector.173"* %9, %"struct.sh::ShaderVariable"* nonnull dereferenceable(208) %128, %"struct.sh::ShaderVariable"* dereferenceable(208) %64) #16
  br label %138

138:                                              ; preds = %134, %137
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #16
  br label %143

139:                                              ; preds = %127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #16
  br label %140

140:                                              ; preds = %121, %139, %57
  %141 = getelementptr inbounds %"struct.gl::ProgramVaryingRef", %"struct.gl::ProgramVaryingRef"* %58, i64 1
  %142 = icmp eq %"struct.gl::ProgramVaryingRef"* %141, %55
  br i1 %142, label %143, label %57

143:                                              ; preds = %140, %52, %138, %120
  %144 = load i8, i8* %36, align 1
  %145 = icmp slt i8 %144, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %147) #18
  br label %148

148:                                              ; preds = %143, %146
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #16
  %149 = load i32*, i32** %28, align 8
  %150 = icmp eq i32* %149, null
  br i1 %150, label %154, label %151

151:                                              ; preds = %148
  %152 = ptrtoint i32* %149 to i64
  store i64 %152, i64* %41, align 8
  %153 = bitcast i32* %149 to i8*
  call void @_ZdlPv(i8* %153) #18
  br label %154

154:                                              ; preds = %148, %151
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %45, i64 1
  %156 = icmp eq %"class.std::__1::basic_string"* %155, %24
  br i1 %156, label %43, label %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2gl17ProgramExecutable30updateTransformFeedbackStridesEv(%"class.gl::ProgramExecutable"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 28
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 35980
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27
  br i1 %4, label %6, label %59

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.180"* %5 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 2
  %14 = icmp eq i64 %12, 0
  %15 = inttoptr i64 %11 to i32*
  br i1 %14, label %16, label %18

16:                                               ; preds = %6
  %17 = sub nuw nsw i64 1, %13
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.180"* %5, i64 %17) #16
  br label %22

18:                                               ; preds = %6
  %19 = icmp ugt i64 %13, 1
  br i1 %19, label %20, label %22

20:                                               ; preds = %18
  %21 = getelementptr inbounds i32, i32* %15, i64 1
  store i32* %21, i32** %7, align 8
  br label %22

22:                                               ; preds = %16, %18, %20
  %23 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 0
  %24 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %23, align 8
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %26 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %25, align 8
  %27 = icmp eq %"struct.gl::TransformFeedbackVarying"* %24, %26
  br i1 %27, label %30, label %34

28:                                               ; preds = %49
  %29 = trunc i64 %56 to i32
  br label %30

30:                                               ; preds = %28, %22
  %31 = phi i32 [ 0, %22 ], [ %29, %28 ]
  %32 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 0
  %33 = load i32*, i32** %32, align 8
  store i32 %31, i32* %33, align 4
  br label %125

34:                                               ; preds = %22, %49
  %35 = phi i64 [ %56, %49 ], [ 0, %22 ]
  %36 = phi %"struct.gl::TransformFeedbackVarying"* [ %57, %49 ], [ %24, %22 ]
  %37 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %36, i64 0, i32 0, i32 4, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %36, i64 0, i32 0, i32 4, i32 0, i32 1
  %40 = load i32*, i32** %39, align 8
  %41 = icmp eq i32* %38, %40
  br i1 %41, label %49, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %36, i64 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %46, label %49

46:                                               ; preds = %42
  %47 = getelementptr inbounds i32, i32* %40, i64 -1
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %34, %42, %46
  %50 = phi i32 [ %48, %46 ], [ 1, %42 ], [ 1, %34 ]
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %36, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 8
  %54 = tail call i64 @_ZN2gl20VariableExternalSizeEj(i32 %53) #16
  %55 = mul i64 %54, %51
  %56 = add i64 %55, %35
  %57 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %36, i64 1
  %58 = icmp eq %"struct.gl::TransformFeedbackVarying"* %57, %26
  br i1 %58, label %28, label %34

59:                                               ; preds = %1
  %60 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26
  %61 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 26, i32 0, i32 1
  %62 = bitcast %"struct.gl::TransformFeedbackVarying"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.std::__1::vector.173"* %60 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = sub i64 %63, %65
  %67 = sdiv exact i64 %66, 216
  %68 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 27, i32 0, i32 1
  %69 = bitcast i32** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.180"* %5 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = sub i64 %70, %72
  %74 = ashr exact i64 %73, 2
  %75 = icmp ugt i64 %67, %74
  %76 = inttoptr i64 %72 to i32*
  %77 = inttoptr i64 %65 to %"struct.gl::TransformFeedbackVarying"*
  br i1 %75, label %78, label %83

78:                                               ; preds = %59
  %79 = sub nsw i64 %67, %74
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.180"* %5, i64 %79) #16
  %80 = load i64, i64* %62, align 8
  %81 = load i64, i64* %64, align 8
  %82 = inttoptr i64 %81 to %"struct.gl::TransformFeedbackVarying"*
  br label %87

83:                                               ; preds = %59
  %84 = icmp ult i64 %67, %74
  br i1 %84, label %85, label %87

85:                                               ; preds = %83
  %86 = getelementptr inbounds i32, i32* %76, i64 %67
  store i32* %86, i32** %68, align 8
  br label %87

87:                                               ; preds = %78, %83, %85
  %88 = phi %"struct.gl::TransformFeedbackVarying"* [ %82, %78 ], [ %77, %83 ], [ %77, %85 ]
  %89 = phi i64 [ %81, %78 ], [ %65, %83 ], [ %65, %85 ]
  %90 = phi i64 [ %80, %78 ], [ %63, %83 ], [ %63, %85 ]
  %91 = icmp eq i64 %90, %89
  br i1 %91, label %125, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %5, i64 0, i32 0, i32 0
  br label %94

94:                                               ; preds = %92, %109
  %95 = phi %"struct.gl::TransformFeedbackVarying"* [ %88, %92 ], [ %124, %109 ]
  %96 = phi i64 [ 0, %92 ], [ %118, %109 ]
  %97 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %95, i64 %96, i32 0, i32 4, i32 0, i32 0
  %98 = load i32*, i32** %97, align 8
  %99 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %95, i64 %96, i32 0, i32 4, i32 0, i32 1
  %100 = load i32*, i32** %99, align 8
  %101 = icmp eq i32* %98, %100
  br i1 %101, label %109, label %102

102:                                              ; preds = %94
  %103 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %95, i64 %96, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, -1
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = getelementptr inbounds i32, i32* %100, i64 -1
  %108 = load i32, i32* %107, align 4
  br label %109

109:                                              ; preds = %94, %102, %106
  %110 = phi i32 [ %108, %106 ], [ 1, %102 ], [ 1, %94 ]
  %111 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %95, i64 %96, i32 0, i32 0
  %112 = load i32, i32* %111, align 8
  %113 = tail call i64 @_ZN2gl20VariableExternalSizeEj(i32 %112) #16
  %114 = trunc i64 %113 to i32
  %115 = mul i32 %110, %114
  %116 = load i32*, i32** %93, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 %96
  store i32 %115, i32* %117, align 4
  %118 = add nuw i64 %96, 1
  %119 = load i64, i64* %62, align 8
  %120 = load i64, i64* %64, align 8
  %121 = sub i64 %119, %120
  %122 = sdiv exact i64 %121, 216
  %123 = icmp ult i64 %118, %122
  %124 = inttoptr i64 %120 to %"struct.gl::TransformFeedbackVarying"*
  br i1 %123, label %94, label %125

125:                                              ; preds = %109, %87, %30
  ret void
}

; Function Attrs: nounwind
declare i64 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE4findEcm(%"class.std::__1::basic_string"*, i8 signext, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::locale", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.gl::InfoLog::StreamHelper", %"class.gl::InfoLog::StreamHelper"* %0, i64 0, i32 0
  %5 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_stringstream"* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.std::__1::basic_stringstream", %"class.std::__1::basic_stringstream"* %5, i64 0, i32 1
  call void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* nonnull sret %3, %"class.std::__1::basic_stringbuf"* %9) #16
  %10 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = icmp eq i64 %17, 0
  br i1 %13, label %19, label %22

19:                                               ; preds = %7
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #18
  br label %22

22:                                               ; preds = %19, %7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #16
  br i1 %18, label %45, label %23

23:                                               ; preds = %22
  %24 = bitcast %"class.gl::InfoLog::StreamHelper"* %0 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds i8, i8* %25, i64 16
  %27 = bitcast i8* %26 to %"class.std::__1::basic_ostream"*
  %28 = bitcast i8* %26 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr i8, i8* %29, i64 -24
  %31 = bitcast i8* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds i8, i8* %26, i64 %32
  %34 = bitcast %"class.std::__1::locale"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = bitcast i8* %33 to %"class.std::__1::ios_base"*
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %2, %"class.std::__1::ios_base"* %35) #16
  %36 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %2, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %37 = bitcast %"class.std::__1::locale::facet"* %36 to %"class.std::__1::ctype"*
  %38 = bitcast %"class.std::__1::locale::facet"* %36 to i8 (%"class.std::__1::ctype"*, i8)***
  %39 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %38, align 8
  %40 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %39, i64 7
  %41 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %40, align 8
  %42 = call signext i8 %41(%"class.std::__1::ctype"* %37, i8 signext 10) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"* %27, i8 signext %42) #16
  %44 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"* %27) #16
  br label %45

45:                                               ; preds = %22, %1, %23
  ret void
}

declare void @_ZN2gl17ParseResourceNameERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPNS0_6vectorIjNS4_IjEEEE(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector"*) local_unnamed_addr #1

declare i32 @_ZN2gl22VariableComponentCountEj(i32) local_unnamed_addr #1

declare %"struct.sh::ShaderVariable"* @_ZNK2sh14ShaderVariable9findFieldERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPj(%"struct.sh::ShaderVariable"*, %"class.std::__1::basic_string"* dereferenceable(24), i32*) local_unnamed_addr #1

declare i64 @_ZN2gl20VariableExternalSizeEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2gl17ProgramExecutable20validateSamplersImplEPNS_7InfoLogERKNS_4CapsE(%"class.gl::ProgramExecutable"*, %"class.gl::InfoLog"*, %"struct.gl::Caps"* nocapture readnone dereferenceable(872)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.gl::InfoLog::StreamHelper", align 8
  %5 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10, i32 0, i32 0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !71
  %7 = icmp eq i64 %6, 0
  %8 = tail call i64 @llvm.cttz.i64(i64 %6, i1 true) #16, !range !74
  br i1 %7, label %9, label %15

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10, i32 0, i32 0, i64 1, i32 0
  %11 = load i64, i64* %10, align 8, !noalias !71
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %61, label %13

13:                                               ; preds = %9
  %14 = tail call i64 @llvm.cttz.i64(i64 %11, i1 true) #16, !range !74
  br label %15

15:                                               ; preds = %13, %3
  %16 = phi i64 [ 1, %13 ], [ 0, %3 ]
  %17 = phi i64 [ %14, %13 ], [ %8, %3 ]
  %18 = phi i64 [ %11, %13 ], [ %6, %3 ]
  br label %19

19:                                               ; preds = %15, %56
  %20 = phi i64 [ %59, %56 ], [ %16, %15 ]
  %21 = phi i64 [ %58, %56 ], [ %17, %15 ]
  %22 = phi i64 [ %57, %56 ], [ %18, %15 ]
  %23 = shl i64 %20, 6
  %24 = add i64 %23, %21
  %25 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 12, i32 0, i64 %24
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 11
  br i1 %27, label %28, label %41

28:                                               ; preds = %19
  %29 = icmp eq %"class.gl::InfoLog"* %1, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %28
  %31 = bitcast %"class.gl::InfoLog::StreamHelper"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  tail call void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"* nonnull %1) #16, !noalias !75
  %32 = bitcast %"class.gl::InfoLog"* %1 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !75
  %34 = bitcast %"class.gl::InfoLog::StreamHelper"* %4 to i64*
  store i64 %33, i64* %34, align 8, !alias.scope !75
  %35 = inttoptr i64 %33 to i8*
  %36 = getelementptr inbounds i8, i8* %35, i64 16
  %37 = bitcast i8* %36 to %"class.std::__1::basic_ostream"*
  %38 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.20, i64 0, i64 0), i64 68) #16, !noalias !75
  %39 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %37, i64 %24) #16
  %40 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %37, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0), i64 2) #16
  call void @_ZN2gl7InfoLog12StreamHelperD2Ev(%"class.gl::InfoLog::StreamHelper"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %61

41:                                               ; preds = %19
  %42 = shl i64 1, %21
  %43 = xor i64 %42, -1
  %44 = and i64 %22, %43
  %45 = icmp eq i64 %44, 0
  %46 = tail call i64 @llvm.cttz.i64(i64 %44, i1 true) #16, !range !74
  br i1 %45, label %47, label %56

47:                                               ; preds = %41
  %48 = add i64 %20, 1
  %49 = icmp ult i64 %48, 2
  br i1 %49, label %50, label %61

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 10, i32 0, i32 0, i64 %48, i32 0
  %52 = load i64, i64* %51, align 8, !noalias !78
  %53 = icmp eq i64 %52, 0
  %54 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #16, !range !74
  %55 = select i1 %53, i64 0, i64 %54
  br label %56

56:                                               ; preds = %41, %50
  %57 = phi i64 [ %52, %50 ], [ %44, %41 ]
  %58 = phi i64 [ %55, %50 ], [ %46, %41 ]
  %59 = phi i64 [ %48, %50 ], [ %20, %41 ]
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %61, label %19

61:                                               ; preds = %56, %47, %9, %30, %28
  %62 = phi i8 [ 0, %28 ], [ 0, %30 ], [ 1, %9 ], [ 1, %47 ], [ 1, %56 ]
  %63 = phi i1 [ false, %28 ], [ false, %30 ], [ true, %9 ], [ true, %47 ], [ true, %56 ]
  %64 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 70, i32 1
  store i8 %62, i8* %64, align 1
  %65 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %0, i64 0, i32 70, i32 0
  store i8 1, i8* %65, align 1
  ret i1 %63
}

; Function Attrs: nounwind
declare void @_ZN5angle7SubjectD2Ev(%"class.angle::Subject"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15arrayINS_6vectorIN2sh14ShaderVariableENS_9allocatorIS3_EEEELm6EED2Ev(%"struct.std::__1::array.224"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 5
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  %5 = icmp eq %"struct.sh::ShaderVariable"* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %"struct.sh::ShaderVariable"* %4 to i8*
  %8 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 5, i32 0, i32 1
  %9 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %8, align 8
  %10 = icmp eq %"struct.sh::ShaderVariable"* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %"struct.sh::ShaderVariable"* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %12, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %13) #16
  %14 = icmp eq %"struct.sh::ShaderVariable"* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector.70"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %"struct.sh::ShaderVariable"* %4, %"struct.sh::ShaderVariable"** %8, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 4
  %22 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %21, i64 0, i32 0, i32 0
  %23 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %22, align 8
  %24 = icmp eq %"struct.sh::ShaderVariable"* %23, null
  br i1 %24, label %39, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.sh::ShaderVariable"* %23 to i8*
  %27 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 4, i32 0, i32 1
  %28 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %27, align 8
  %29 = icmp eq %"struct.sh::ShaderVariable"* %28, %23
  br i1 %29, label %37, label %30

30:                                               ; preds = %25, %30
  %31 = phi %"struct.sh::ShaderVariable"* [ %32, %30 ], [ %28, %25 ]
  %32 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %31, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %32) #16
  %33 = icmp eq %"struct.sh::ShaderVariable"* %32, %23
  br i1 %33, label %34, label %30

34:                                               ; preds = %30
  %35 = bitcast %"class.std::__1::vector.70"* %21 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %25
  %38 = phi i8* [ %36, %34 ], [ %26, %25 ]
  store %"struct.sh::ShaderVariable"* %23, %"struct.sh::ShaderVariable"** %27, align 8
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %37, %20
  %40 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 3
  %41 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %40, i64 0, i32 0, i32 0
  %42 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %41, align 8
  %43 = icmp eq %"struct.sh::ShaderVariable"* %42, null
  br i1 %43, label %58, label %44

44:                                               ; preds = %39
  %45 = bitcast %"struct.sh::ShaderVariable"* %42 to i8*
  %46 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 3, i32 0, i32 1
  %47 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %46, align 8
  %48 = icmp eq %"struct.sh::ShaderVariable"* %47, %42
  br i1 %48, label %56, label %49

49:                                               ; preds = %44, %49
  %50 = phi %"struct.sh::ShaderVariable"* [ %51, %49 ], [ %47, %44 ]
  %51 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %50, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %51) #16
  %52 = icmp eq %"struct.sh::ShaderVariable"* %51, %42
  br i1 %52, label %53, label %49

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::vector.70"* %40 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %44
  %57 = phi i8* [ %55, %53 ], [ %45, %44 ]
  store %"struct.sh::ShaderVariable"* %42, %"struct.sh::ShaderVariable"** %46, align 8
  tail call void @_ZdlPv(i8* %57) #18
  br label %58

58:                                               ; preds = %56, %39
  %59 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 2
  %60 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %59, i64 0, i32 0, i32 0
  %61 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %60, align 8
  %62 = icmp eq %"struct.sh::ShaderVariable"* %61, null
  br i1 %62, label %77, label %63

63:                                               ; preds = %58
  %64 = bitcast %"struct.sh::ShaderVariable"* %61 to i8*
  %65 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 2, i32 0, i32 1
  %66 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %65, align 8
  %67 = icmp eq %"struct.sh::ShaderVariable"* %66, %61
  br i1 %67, label %75, label %68

68:                                               ; preds = %63, %68
  %69 = phi %"struct.sh::ShaderVariable"* [ %70, %68 ], [ %66, %63 ]
  %70 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %69, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %70) #16
  %71 = icmp eq %"struct.sh::ShaderVariable"* %70, %61
  br i1 %71, label %72, label %68

72:                                               ; preds = %68
  %73 = bitcast %"class.std::__1::vector.70"* %59 to i8**
  %74 = load i8*, i8** %73, align 8
  br label %75

75:                                               ; preds = %72, %63
  %76 = phi i8* [ %74, %72 ], [ %64, %63 ]
  store %"struct.sh::ShaderVariable"* %61, %"struct.sh::ShaderVariable"** %65, align 8
  tail call void @_ZdlPv(i8* %76) #18
  br label %77

77:                                               ; preds = %75, %58
  %78 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 1
  %79 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %78, i64 0, i32 0, i32 0
  %80 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %79, align 8
  %81 = icmp eq %"struct.sh::ShaderVariable"* %80, null
  br i1 %81, label %96, label %82

82:                                               ; preds = %77
  %83 = bitcast %"struct.sh::ShaderVariable"* %80 to i8*
  %84 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 1, i32 0, i32 1
  %85 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %84, align 8
  %86 = icmp eq %"struct.sh::ShaderVariable"* %85, %80
  br i1 %86, label %94, label %87

87:                                               ; preds = %82, %87
  %88 = phi %"struct.sh::ShaderVariable"* [ %89, %87 ], [ %85, %82 ]
  %89 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %88, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %89) #16
  %90 = icmp eq %"struct.sh::ShaderVariable"* %89, %80
  br i1 %90, label %91, label %87

91:                                               ; preds = %87
  %92 = bitcast %"class.std::__1::vector.70"* %78 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %82
  %95 = phi i8* [ %93, %91 ], [ %83, %82 ]
  store %"struct.sh::ShaderVariable"* %80, %"struct.sh::ShaderVariable"** %84, align 8
  tail call void @_ZdlPv(i8* %95) #18
  br label %96

96:                                               ; preds = %94, %77
  %97 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 0, i32 0, i32 0
  %98 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %97, align 8
  %99 = icmp eq %"struct.sh::ShaderVariable"* %98, null
  br i1 %99, label %114, label %100

100:                                              ; preds = %96
  %101 = bitcast %"struct.sh::ShaderVariable"* %98 to i8*
  %102 = getelementptr inbounds %"struct.std::__1::array.224", %"struct.std::__1::array.224"* %0, i64 0, i32 0, i64 0, i32 0, i32 1
  %103 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %102, align 8
  %104 = icmp eq %"struct.sh::ShaderVariable"* %103, %98
  br i1 %104, label %112, label %105

105:                                              ; preds = %100, %105
  %106 = phi %"struct.sh::ShaderVariable"* [ %107, %105 ], [ %103, %100 ]
  %107 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %106, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %107) #16
  %108 = icmp eq %"struct.sh::ShaderVariable"* %107, %98
  br i1 %108, label %109, label %105

109:                                              ; preds = %105
  %110 = bitcast %"struct.std::__1::array.224"* %0 to i8**
  %111 = load i8*, i8** %110, align 8
  br label %112

112:                                              ; preds = %109, %100
  %113 = phi i8* [ %111, %109 ], [ %101, %100 ]
  store %"struct.sh::ShaderVariable"* %98, %"struct.sh::ShaderVariable"** %102, align 8
  tail call void @_ZdlPv(i8* %113) #18
  br label %114

114:                                              ; preds = %112, %96
  ret void
}

declare void @_ZN2gl7InfoLog5resetEv(%"class.gl::InfoLog"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14InterfaceBlockD0Ev(%"struct.gl::InterfaceBlock"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #18
  br label %11

11:                                               ; preds = %8, %1
  %12 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %11, %17
  %21 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %0, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferD2Ev(%"struct.gl::ShaderVariableBuffer"* %21) #16
  %22 = bitcast %"struct.gl::InterfaceBlock"* %0 to i8*
  tail call void @_ZdlPv(i8* %22) #18
  ret void
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #9

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNSt3__16vectorIhNS_9allocatorIhEEE6insertIPKcEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS8_E9referenceEEE5valueENS_11__wrap_iterIPhEEE4typeENSC_IPKhEES8_S8_(%"class.std::__1::vector.615"*, i8*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %1 to i64
  %6 = ptrtoint i8* %2 to i64
  %7 = getelementptr inbounds %"class.std::__1::vector.615", %"class.std::__1::vector.615"* %0, i64 0, i32 0, i32 0
  %8 = ptrtoint i8* %3 to i64
  %9 = sub i64 %8, %6
  %10 = icmp sgt i64 %9, 0
  br i1 %10, label %11, label %618

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.std::__1::vector.615", %"class.std::__1::vector.615"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %13 = bitcast i8** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.615", %"class.std::__1::vector.615"* %0, i64 0, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ptrtoint i8* %16 to i64
  %18 = sub i64 %14, %17
  %19 = icmp sgt i64 %9, %18
  %20 = bitcast i8** %15 to i64*
  br i1 %19, label %368, label %21

21:                                               ; preds = %11
  %22 = sub i64 %17, %5
  %23 = icmp sgt i64 %9, %22
  br i1 %23, label %24, label %141

24:                                               ; preds = %21
  %25 = getelementptr inbounds i8, i8* %2, i64 %22
  %26 = icmp eq i8* %25, %3
  br i1 %26, label %136, label %27

27:                                               ; preds = %24
  %28 = sub i64 %5, %6
  %29 = sub i64 %28, %17
  %30 = getelementptr i8, i8* %3, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = icmp ult i8* %30, inttoptr (i64 32 to i8*)
  br i1 %32, label %123, label %33

33:                                               ; preds = %27
  %34 = sub i64 %5, %6
  %35 = sub i64 %34, %17
  %36 = getelementptr i8, i8* %3, i64 %35
  %37 = ptrtoint i8* %36 to i64
  %38 = getelementptr i8, i8* %16, i64 %37
  %39 = icmp ult i8* %16, %3
  %40 = icmp ult i8* %25, %38
  %41 = and i1 %39, %40
  br i1 %41, label %123, label %42

42:                                               ; preds = %33
  %43 = and i64 %31, -32
  %44 = getelementptr i8, i8* %16, i64 %43
  %45 = getelementptr i8, i8* %25, i64 %43
  %46 = add i64 %43, -32
  %47 = lshr exact i64 %46, 5
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 3
  %50 = icmp ult i64 %46, 96
  br i1 %50, label %102, label %51

51:                                               ; preds = %42
  %52 = sub nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %99, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %100, %53 ]
  %56 = getelementptr i8, i8* %16, i64 %54
  %57 = getelementptr i8, i8* %25, i64 %54
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !81
  %60 = getelementptr i8, i8* %57, i64 16
  %61 = bitcast i8* %60 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !81
  %63 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %59, <16 x i8>* %63, align 1, !alias.scope !84, !noalias !81
  %64 = getelementptr i8, i8* %56, i64 16
  %65 = bitcast i8* %64 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %65, align 1, !alias.scope !84, !noalias !81
  %66 = or i64 %54, 32
  %67 = getelementptr i8, i8* %16, i64 %66
  %68 = getelementptr i8, i8* %25, i64 %66
  %69 = bitcast i8* %68 to <16 x i8>*
  %70 = load <16 x i8>, <16 x i8>* %69, align 1, !alias.scope !81
  %71 = getelementptr i8, i8* %68, i64 16
  %72 = bitcast i8* %71 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !81
  %74 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %70, <16 x i8>* %74, align 1, !alias.scope !84, !noalias !81
  %75 = getelementptr i8, i8* %67, i64 16
  %76 = bitcast i8* %75 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %76, align 1, !alias.scope !84, !noalias !81
  %77 = or i64 %54, 64
  %78 = getelementptr i8, i8* %16, i64 %77
  %79 = getelementptr i8, i8* %25, i64 %77
  %80 = bitcast i8* %79 to <16 x i8>*
  %81 = load <16 x i8>, <16 x i8>* %80, align 1, !alias.scope !81
  %82 = getelementptr i8, i8* %79, i64 16
  %83 = bitcast i8* %82 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !81
  %85 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %81, <16 x i8>* %85, align 1, !alias.scope !84, !noalias !81
  %86 = getelementptr i8, i8* %78, i64 16
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %87, align 1, !alias.scope !84, !noalias !81
  %88 = or i64 %54, 96
  %89 = getelementptr i8, i8* %16, i64 %88
  %90 = getelementptr i8, i8* %25, i64 %88
  %91 = bitcast i8* %90 to <16 x i8>*
  %92 = load <16 x i8>, <16 x i8>* %91, align 1, !alias.scope !81
  %93 = getelementptr i8, i8* %90, i64 16
  %94 = bitcast i8* %93 to <16 x i8>*
  %95 = load <16 x i8>, <16 x i8>* %94, align 1, !alias.scope !81
  %96 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %92, <16 x i8>* %96, align 1, !alias.scope !84, !noalias !81
  %97 = getelementptr i8, i8* %89, i64 16
  %98 = bitcast i8* %97 to <16 x i8>*
  store <16 x i8> %95, <16 x i8>* %98, align 1, !alias.scope !84, !noalias !81
  %99 = add i64 %54, 128
  %100 = add i64 %55, -4
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %102, label %53, !llvm.loop !86

102:                                              ; preds = %53, %42
  %103 = phi i64 [ 0, %42 ], [ %99, %53 ]
  %104 = icmp eq i64 %49, 0
  br i1 %104, label %121, label %105

105:                                              ; preds = %102, %105
  %106 = phi i64 [ %118, %105 ], [ %103, %102 ]
  %107 = phi i64 [ %119, %105 ], [ %49, %102 ]
  %108 = getelementptr i8, i8* %16, i64 %106
  %109 = getelementptr i8, i8* %25, i64 %106
  %110 = bitcast i8* %109 to <16 x i8>*
  %111 = load <16 x i8>, <16 x i8>* %110, align 1, !alias.scope !81
  %112 = getelementptr i8, i8* %109, i64 16
  %113 = bitcast i8* %112 to <16 x i8>*
  %114 = load <16 x i8>, <16 x i8>* %113, align 1, !alias.scope !81
  %115 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %111, <16 x i8>* %115, align 1, !alias.scope !84, !noalias !81
  %116 = getelementptr i8, i8* %108, i64 16
  %117 = bitcast i8* %116 to <16 x i8>*
  store <16 x i8> %114, <16 x i8>* %117, align 1, !alias.scope !84, !noalias !81
  %118 = add i64 %106, 32
  %119 = add i64 %107, -1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %105, !llvm.loop !87

121:                                              ; preds = %105, %102
  %122 = icmp eq i64 %43, %31
  br i1 %122, label %133, label %123

123:                                              ; preds = %121, %33, %27
  %124 = phi i8* [ %16, %33 ], [ %16, %27 ], [ %44, %121 ]
  %125 = phi i8* [ %25, %33 ], [ %25, %27 ], [ %45, %121 ]
  br label %126

126:                                              ; preds = %123, %126
  %127 = phi i8* [ %131, %126 ], [ %124, %123 ]
  %128 = phi i8* [ %130, %126 ], [ %125, %123 ]
  %129 = load i8, i8* %128, align 1
  store i8 %129, i8* %127, align 1
  %130 = getelementptr inbounds i8, i8* %128, i64 1
  %131 = getelementptr inbounds i8, i8* %127, i64 1
  %132 = icmp eq i8* %130, %3
  br i1 %132, label %133, label %126, !llvm.loop !89

133:                                              ; preds = %126, %121
  %134 = phi i8* [ %44, %121 ], [ %131, %126 ]
  %135 = ptrtoint i8* %134 to i64
  br label %136

136:                                              ; preds = %133, %24
  %137 = phi i64 [ %17, %24 ], [ %135, %133 ]
  store i64 %137, i64* %20, align 8
  %138 = icmp sgt i64 %22, 0
  br i1 %138, label %139, label %618

139:                                              ; preds = %136
  %140 = inttoptr i64 %137 to i8*
  br label %141

141:                                              ; preds = %139, %21
  %142 = phi i64 [ %137, %139 ], [ %17, %21 ]
  %143 = phi i8* [ %140, %139 ], [ %16, %21 ]
  %144 = phi i8* [ %25, %139 ], [ %3, %21 ]
  %145 = getelementptr inbounds i8, i8* %1, i64 %9
  %146 = ptrtoint i8* %145 to i64
  %147 = sub i64 %142, %146
  %148 = getelementptr inbounds i8, i8* %1, i64 %147
  %149 = icmp ult i8* %148, %16
  br i1 %149, label %150, label %250

150:                                              ; preds = %141
  %151 = sub i64 %9, %142
  %152 = getelementptr i8, i8* %16, i64 %151
  %153 = ptrtoint i8* %152 to i64
  %154 = icmp ult i8* %152, inttoptr (i64 32 to i8*)
  br i1 %154, label %155, label %158

155:                                              ; preds = %245, %158, %150
  %156 = phi i8* [ %148, %158 ], [ %148, %150 ], [ %168, %245 ]
  %157 = phi i8* [ %143, %158 ], [ %143, %150 ], [ %169, %245 ]
  br label %256

158:                                              ; preds = %150
  %159 = sub i64 %9, %142
  %160 = getelementptr i8, i8* %16, i64 %159
  %161 = ptrtoint i8* %160 to i64
  %162 = getelementptr i8, i8* %143, i64 %161
  %163 = icmp ult i8* %143, %16
  %164 = icmp ult i8* %148, %162
  %165 = and i1 %163, %164
  br i1 %165, label %155, label %166

166:                                              ; preds = %158
  %167 = and i64 %153, -32
  %168 = getelementptr i8, i8* %148, i64 %167
  %169 = getelementptr i8, i8* %143, i64 %167
  %170 = add i64 %167, -32
  %171 = lshr exact i64 %170, 5
  %172 = add nuw nsw i64 %171, 1
  %173 = and i64 %172, 3
  %174 = icmp ult i64 %170, 96
  br i1 %174, label %226, label %175

175:                                              ; preds = %166
  %176 = sub nsw i64 %172, %173
  br label %177

177:                                              ; preds = %177, %175
  %178 = phi i64 [ 0, %175 ], [ %223, %177 ]
  %179 = phi i64 [ %176, %175 ], [ %224, %177 ]
  %180 = getelementptr i8, i8* %148, i64 %178
  %181 = getelementptr i8, i8* %143, i64 %178
  %182 = bitcast i8* %180 to <16 x i8>*
  %183 = load <16 x i8>, <16 x i8>* %182, align 1, !alias.scope !90
  %184 = getelementptr i8, i8* %180, i64 16
  %185 = bitcast i8* %184 to <16 x i8>*
  %186 = load <16 x i8>, <16 x i8>* %185, align 1, !alias.scope !90
  %187 = bitcast i8* %181 to <16 x i8>*
  store <16 x i8> %183, <16 x i8>* %187, align 1, !alias.scope !93, !noalias !90
  %188 = getelementptr i8, i8* %181, i64 16
  %189 = bitcast i8* %188 to <16 x i8>*
  store <16 x i8> %186, <16 x i8>* %189, align 1, !alias.scope !93, !noalias !90
  %190 = or i64 %178, 32
  %191 = getelementptr i8, i8* %148, i64 %190
  %192 = getelementptr i8, i8* %143, i64 %190
  %193 = bitcast i8* %191 to <16 x i8>*
  %194 = load <16 x i8>, <16 x i8>* %193, align 1, !alias.scope !90
  %195 = getelementptr i8, i8* %191, i64 16
  %196 = bitcast i8* %195 to <16 x i8>*
  %197 = load <16 x i8>, <16 x i8>* %196, align 1, !alias.scope !90
  %198 = bitcast i8* %192 to <16 x i8>*
  store <16 x i8> %194, <16 x i8>* %198, align 1, !alias.scope !93, !noalias !90
  %199 = getelementptr i8, i8* %192, i64 16
  %200 = bitcast i8* %199 to <16 x i8>*
  store <16 x i8> %197, <16 x i8>* %200, align 1, !alias.scope !93, !noalias !90
  %201 = or i64 %178, 64
  %202 = getelementptr i8, i8* %148, i64 %201
  %203 = getelementptr i8, i8* %143, i64 %201
  %204 = bitcast i8* %202 to <16 x i8>*
  %205 = load <16 x i8>, <16 x i8>* %204, align 1, !alias.scope !90
  %206 = getelementptr i8, i8* %202, i64 16
  %207 = bitcast i8* %206 to <16 x i8>*
  %208 = load <16 x i8>, <16 x i8>* %207, align 1, !alias.scope !90
  %209 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %205, <16 x i8>* %209, align 1, !alias.scope !93, !noalias !90
  %210 = getelementptr i8, i8* %203, i64 16
  %211 = bitcast i8* %210 to <16 x i8>*
  store <16 x i8> %208, <16 x i8>* %211, align 1, !alias.scope !93, !noalias !90
  %212 = or i64 %178, 96
  %213 = getelementptr i8, i8* %148, i64 %212
  %214 = getelementptr i8, i8* %143, i64 %212
  %215 = bitcast i8* %213 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !90
  %217 = getelementptr i8, i8* %213, i64 16
  %218 = bitcast i8* %217 to <16 x i8>*
  %219 = load <16 x i8>, <16 x i8>* %218, align 1, !alias.scope !90
  %220 = bitcast i8* %214 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !93, !noalias !90
  %221 = getelementptr i8, i8* %214, i64 16
  %222 = bitcast i8* %221 to <16 x i8>*
  store <16 x i8> %219, <16 x i8>* %222, align 1, !alias.scope !93, !noalias !90
  %223 = add i64 %178, 128
  %224 = add i64 %179, -4
  %225 = icmp eq i64 %224, 0
  br i1 %225, label %226, label %177, !llvm.loop !95

226:                                              ; preds = %177, %166
  %227 = phi i64 [ 0, %166 ], [ %223, %177 ]
  %228 = icmp eq i64 %173, 0
  br i1 %228, label %245, label %229

229:                                              ; preds = %226, %229
  %230 = phi i64 [ %242, %229 ], [ %227, %226 ]
  %231 = phi i64 [ %243, %229 ], [ %173, %226 ]
  %232 = getelementptr i8, i8* %148, i64 %230
  %233 = getelementptr i8, i8* %143, i64 %230
  %234 = bitcast i8* %232 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !90
  %236 = getelementptr i8, i8* %232, i64 16
  %237 = bitcast i8* %236 to <16 x i8>*
  %238 = load <16 x i8>, <16 x i8>* %237, align 1, !alias.scope !90
  %239 = bitcast i8* %233 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !93, !noalias !90
  %240 = getelementptr i8, i8* %233, i64 16
  %241 = bitcast i8* %240 to <16 x i8>*
  store <16 x i8> %238, <16 x i8>* %241, align 1, !alias.scope !93, !noalias !90
  %242 = add i64 %230, 32
  %243 = add i64 %231, -1
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %229, !llvm.loop !96

245:                                              ; preds = %229, %226
  %246 = icmp eq i64 %167, %153
  br i1 %246, label %247, label %155

247:                                              ; preds = %256, %245
  %248 = phi i8* [ %169, %245 ], [ %261, %256 ]
  %249 = ptrtoint i8* %248 to i64
  br label %250

250:                                              ; preds = %247, %141
  %251 = phi i64 [ %249, %247 ], [ %142, %141 ]
  store i64 %251, i64* %20, align 8
  %252 = icmp eq i64 %147, 0
  br i1 %252, label %263, label %253

253:                                              ; preds = %250
  %254 = sub i64 0, %147
  %255 = getelementptr inbounds i8, i8* %143, i64 %254
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %255, i8* align 1 %1, i64 %147, i1 false) #16
  br label %263

256:                                              ; preds = %155, %256
  %257 = phi i8* [ %260, %256 ], [ %156, %155 ]
  %258 = phi i8* [ %261, %256 ], [ %157, %155 ]
  %259 = load i8, i8* %257, align 1
  store i8 %259, i8* %258, align 1
  %260 = getelementptr inbounds i8, i8* %257, i64 1
  %261 = getelementptr inbounds i8, i8* %258, i64 1
  %262 = icmp eq i8* %260, %16
  br i1 %262, label %247, label %256, !llvm.loop !97

263:                                              ; preds = %250, %253
  %264 = icmp eq i8* %144, %2
  br i1 %264, label %618, label %265

265:                                              ; preds = %263
  %266 = sub i64 0, %6
  %267 = getelementptr i8, i8* %144, i64 %266
  %268 = ptrtoint i8* %267 to i64
  %269 = icmp ult i8* %267, inttoptr (i64 32 to i8*)
  br i1 %269, label %358, label %270

270:                                              ; preds = %265
  %271 = ptrtoint i8* %1 to i64
  %272 = sub i64 %271, %6
  %273 = getelementptr i8, i8* %144, i64 %272
  %274 = icmp ugt i8* %144, %1
  %275 = icmp ugt i8* %273, %2
  %276 = and i1 %274, %275
  br i1 %276, label %358, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -32
  %279 = getelementptr i8, i8* %1, i64 %278
  %280 = getelementptr i8, i8* %2, i64 %278
  %281 = add i64 %278, -32
  %282 = lshr exact i64 %281, 5
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 96
  br i1 %285, label %337, label %286

286:                                              ; preds = %277
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i8, i8* %1, i64 %289
  %292 = getelementptr i8, i8* %2, i64 %289
  %293 = bitcast i8* %292 to <16 x i8>*
  %294 = load <16 x i8>, <16 x i8>* %293, align 1, !alias.scope !98
  %295 = getelementptr i8, i8* %292, i64 16
  %296 = bitcast i8* %295 to <16 x i8>*
  %297 = load <16 x i8>, <16 x i8>* %296, align 1, !alias.scope !98
  %298 = bitcast i8* %291 to <16 x i8>*
  store <16 x i8> %294, <16 x i8>* %298, align 1, !alias.scope !101, !noalias !98
  %299 = getelementptr i8, i8* %291, i64 16
  %300 = bitcast i8* %299 to <16 x i8>*
  store <16 x i8> %297, <16 x i8>* %300, align 1, !alias.scope !101, !noalias !98
  %301 = or i64 %289, 32
  %302 = getelementptr i8, i8* %1, i64 %301
  %303 = getelementptr i8, i8* %2, i64 %301
  %304 = bitcast i8* %303 to <16 x i8>*
  %305 = load <16 x i8>, <16 x i8>* %304, align 1, !alias.scope !98
  %306 = getelementptr i8, i8* %303, i64 16
  %307 = bitcast i8* %306 to <16 x i8>*
  %308 = load <16 x i8>, <16 x i8>* %307, align 1, !alias.scope !98
  %309 = bitcast i8* %302 to <16 x i8>*
  store <16 x i8> %305, <16 x i8>* %309, align 1, !alias.scope !101, !noalias !98
  %310 = getelementptr i8, i8* %302, i64 16
  %311 = bitcast i8* %310 to <16 x i8>*
  store <16 x i8> %308, <16 x i8>* %311, align 1, !alias.scope !101, !noalias !98
  %312 = or i64 %289, 64
  %313 = getelementptr i8, i8* %1, i64 %312
  %314 = getelementptr i8, i8* %2, i64 %312
  %315 = bitcast i8* %314 to <16 x i8>*
  %316 = load <16 x i8>, <16 x i8>* %315, align 1, !alias.scope !98
  %317 = getelementptr i8, i8* %314, i64 16
  %318 = bitcast i8* %317 to <16 x i8>*
  %319 = load <16 x i8>, <16 x i8>* %318, align 1, !alias.scope !98
  %320 = bitcast i8* %313 to <16 x i8>*
  store <16 x i8> %316, <16 x i8>* %320, align 1, !alias.scope !101, !noalias !98
  %321 = getelementptr i8, i8* %313, i64 16
  %322 = bitcast i8* %321 to <16 x i8>*
  store <16 x i8> %319, <16 x i8>* %322, align 1, !alias.scope !101, !noalias !98
  %323 = or i64 %289, 96
  %324 = getelementptr i8, i8* %1, i64 %323
  %325 = getelementptr i8, i8* %2, i64 %323
  %326 = bitcast i8* %325 to <16 x i8>*
  %327 = load <16 x i8>, <16 x i8>* %326, align 1, !alias.scope !98
  %328 = getelementptr i8, i8* %325, i64 16
  %329 = bitcast i8* %328 to <16 x i8>*
  %330 = load <16 x i8>, <16 x i8>* %329, align 1, !alias.scope !98
  %331 = bitcast i8* %324 to <16 x i8>*
  store <16 x i8> %327, <16 x i8>* %331, align 1, !alias.scope !101, !noalias !98
  %332 = getelementptr i8, i8* %324, i64 16
  %333 = bitcast i8* %332 to <16 x i8>*
  store <16 x i8> %330, <16 x i8>* %333, align 1, !alias.scope !101, !noalias !98
  %334 = add i64 %289, 128
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !103

337:                                              ; preds = %288, %277
  %338 = phi i64 [ 0, %277 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i8, i8* %1, i64 %341
  %344 = getelementptr i8, i8* %2, i64 %341
  %345 = bitcast i8* %344 to <16 x i8>*
  %346 = load <16 x i8>, <16 x i8>* %345, align 1, !alias.scope !98
  %347 = getelementptr i8, i8* %344, i64 16
  %348 = bitcast i8* %347 to <16 x i8>*
  %349 = load <16 x i8>, <16 x i8>* %348, align 1, !alias.scope !98
  %350 = bitcast i8* %343 to <16 x i8>*
  store <16 x i8> %346, <16 x i8>* %350, align 1, !alias.scope !101, !noalias !98
  %351 = getelementptr i8, i8* %343, i64 16
  %352 = bitcast i8* %351 to <16 x i8>*
  store <16 x i8> %349, <16 x i8>* %352, align 1, !alias.scope !101, !noalias !98
  %353 = add i64 %341, 32
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !104

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %278, %268
  br i1 %357, label %618, label %358

358:                                              ; preds = %356, %270, %265
  %359 = phi i8* [ %1, %270 ], [ %1, %265 ], [ %279, %356 ]
  %360 = phi i8* [ %2, %270 ], [ %2, %265 ], [ %280, %356 ]
  br label %361

361:                                              ; preds = %358, %361
  %362 = phi i8* [ %366, %361 ], [ %359, %358 ]
  %363 = phi i8* [ %365, %361 ], [ %360, %358 ]
  %364 = load i8, i8* %363, align 1
  store i8 %364, i8* %362, align 1
  %365 = getelementptr inbounds i8, i8* %363, i64 1
  %366 = getelementptr inbounds i8, i8* %362, i64 1
  %367 = icmp eq i8* %365, %144
  br i1 %367, label %618, label %361, !llvm.loop !105

368:                                              ; preds = %11
  %369 = bitcast %"class.std::__1::vector.615"* %0 to i64*
  %370 = load i64, i64* %369, align 8
  %371 = sub i64 %17, %370
  %372 = add i64 %371, %9
  %373 = icmp slt i64 %372, 0
  br i1 %373, label %374, label %376

374:                                              ; preds = %368
  %375 = bitcast %"class.std::__1::vector.615"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %375) #17
  unreachable

376:                                              ; preds = %368
  %377 = sub i64 %14, %370
  %378 = icmp ult i64 %377, 4611686018427387903
  br i1 %378, label %381, label %379

379:                                              ; preds = %376
  %380 = sub i64 %5, %370
  br label %387

381:                                              ; preds = %376
  %382 = shl i64 %377, 1
  %383 = icmp ult i64 %382, %372
  %384 = select i1 %383, i64 %372, i64 %382
  %385 = sub i64 %5, %370
  %386 = icmp eq i64 %384, 0
  br i1 %386, label %391, label %387

387:                                              ; preds = %379, %381
  %388 = phi i64 [ %380, %379 ], [ %385, %381 ]
  %389 = phi i64 [ 9223372036854775807, %379 ], [ %384, %381 ]
  %390 = tail call i8* @_Znwm(i64 %389) #18
  br label %391

391:                                              ; preds = %381, %387
  %392 = phi i64 [ %388, %387 ], [ %385, %381 ]
  %393 = phi i64 [ %389, %387 ], [ 0, %381 ]
  %394 = phi i8* [ %390, %387 ], [ null, %381 ]
  %395 = getelementptr inbounds i8, i8* %394, i64 %392
  %396 = getelementptr inbounds i8, i8* %394, i64 %393
  %397 = getelementptr inbounds i8, i8* %395, i64 %9
  %398 = icmp ult i64 %9, 32
  br i1 %398, label %484, label %399

399:                                              ; preds = %391
  %400 = icmp ult i8* %395, %3
  %401 = icmp ugt i8* %397, %2
  %402 = and i1 %400, %401
  br i1 %402, label %484, label %403

403:                                              ; preds = %399
  %404 = and i64 %9, -32
  %405 = getelementptr i8, i8* %395, i64 %404
  %406 = getelementptr i8, i8* %2, i64 %404
  %407 = add i64 %404, -32
  %408 = lshr exact i64 %407, 5
  %409 = add nuw nsw i64 %408, 1
  %410 = and i64 %409, 3
  %411 = icmp ult i64 %407, 96
  br i1 %411, label %463, label %412

412:                                              ; preds = %403
  %413 = sub nsw i64 %409, %410
  br label %414

414:                                              ; preds = %414, %412
  %415 = phi i64 [ 0, %412 ], [ %460, %414 ]
  %416 = phi i64 [ %413, %412 ], [ %461, %414 ]
  %417 = getelementptr i8, i8* %395, i64 %415
  %418 = getelementptr i8, i8* %2, i64 %415
  %419 = bitcast i8* %418 to <16 x i8>*
  %420 = load <16 x i8>, <16 x i8>* %419, align 1, !alias.scope !106
  %421 = getelementptr i8, i8* %418, i64 16
  %422 = bitcast i8* %421 to <16 x i8>*
  %423 = load <16 x i8>, <16 x i8>* %422, align 1, !alias.scope !106
  %424 = bitcast i8* %417 to <16 x i8>*
  store <16 x i8> %420, <16 x i8>* %424, align 1, !alias.scope !109, !noalias !106
  %425 = getelementptr i8, i8* %417, i64 16
  %426 = bitcast i8* %425 to <16 x i8>*
  store <16 x i8> %423, <16 x i8>* %426, align 1, !alias.scope !109, !noalias !106
  %427 = or i64 %415, 32
  %428 = getelementptr i8, i8* %395, i64 %427
  %429 = getelementptr i8, i8* %2, i64 %427
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !106
  %432 = getelementptr i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !106
  %435 = bitcast i8* %428 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %435, align 1, !alias.scope !109, !noalias !106
  %436 = getelementptr i8, i8* %428, i64 16
  %437 = bitcast i8* %436 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %437, align 1, !alias.scope !109, !noalias !106
  %438 = or i64 %415, 64
  %439 = getelementptr i8, i8* %395, i64 %438
  %440 = getelementptr i8, i8* %2, i64 %438
  %441 = bitcast i8* %440 to <16 x i8>*
  %442 = load <16 x i8>, <16 x i8>* %441, align 1, !alias.scope !106
  %443 = getelementptr i8, i8* %440, i64 16
  %444 = bitcast i8* %443 to <16 x i8>*
  %445 = load <16 x i8>, <16 x i8>* %444, align 1, !alias.scope !106
  %446 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %442, <16 x i8>* %446, align 1, !alias.scope !109, !noalias !106
  %447 = getelementptr i8, i8* %439, i64 16
  %448 = bitcast i8* %447 to <16 x i8>*
  store <16 x i8> %445, <16 x i8>* %448, align 1, !alias.scope !109, !noalias !106
  %449 = or i64 %415, 96
  %450 = getelementptr i8, i8* %395, i64 %449
  %451 = getelementptr i8, i8* %2, i64 %449
  %452 = bitcast i8* %451 to <16 x i8>*
  %453 = load <16 x i8>, <16 x i8>* %452, align 1, !alias.scope !106
  %454 = getelementptr i8, i8* %451, i64 16
  %455 = bitcast i8* %454 to <16 x i8>*
  %456 = load <16 x i8>, <16 x i8>* %455, align 1, !alias.scope !106
  %457 = bitcast i8* %450 to <16 x i8>*
  store <16 x i8> %453, <16 x i8>* %457, align 1, !alias.scope !109, !noalias !106
  %458 = getelementptr i8, i8* %450, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %456, <16 x i8>* %459, align 1, !alias.scope !109, !noalias !106
  %460 = add i64 %415, 128
  %461 = add i64 %416, -4
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %414, !llvm.loop !111

463:                                              ; preds = %414, %403
  %464 = phi i64 [ 0, %403 ], [ %460, %414 ]
  %465 = icmp eq i64 %410, 0
  br i1 %465, label %482, label %466

466:                                              ; preds = %463, %466
  %467 = phi i64 [ %479, %466 ], [ %464, %463 ]
  %468 = phi i64 [ %480, %466 ], [ %410, %463 ]
  %469 = getelementptr i8, i8* %395, i64 %467
  %470 = getelementptr i8, i8* %2, i64 %467
  %471 = bitcast i8* %470 to <16 x i8>*
  %472 = load <16 x i8>, <16 x i8>* %471, align 1, !alias.scope !106
  %473 = getelementptr i8, i8* %470, i64 16
  %474 = bitcast i8* %473 to <16 x i8>*
  %475 = load <16 x i8>, <16 x i8>* %474, align 1, !alias.scope !106
  %476 = bitcast i8* %469 to <16 x i8>*
  store <16 x i8> %472, <16 x i8>* %476, align 1, !alias.scope !109, !noalias !106
  %477 = getelementptr i8, i8* %469, i64 16
  %478 = bitcast i8* %477 to <16 x i8>*
  store <16 x i8> %475, <16 x i8>* %478, align 1, !alias.scope !109, !noalias !106
  %479 = add i64 %467, 32
  %480 = add i64 %468, -1
  %481 = icmp eq i64 %480, 0
  br i1 %481, label %482, label %466, !llvm.loop !112

482:                                              ; preds = %466, %463
  %483 = icmp eq i64 %9, %404
  br i1 %483, label %494, label %484

484:                                              ; preds = %482, %399, %391
  %485 = phi i8* [ %395, %399 ], [ %395, %391 ], [ %405, %482 ]
  %486 = phi i8* [ %2, %399 ], [ %2, %391 ], [ %406, %482 ]
  br label %487

487:                                              ; preds = %484, %487
  %488 = phi i8* [ %491, %487 ], [ %485, %484 ]
  %489 = phi i8* [ %492, %487 ], [ %486, %484 ]
  %490 = load i8, i8* %489, align 1
  store i8 %490, i8* %488, align 1
  %491 = getelementptr inbounds i8, i8* %488, i64 1
  %492 = getelementptr inbounds i8, i8* %489, i64 1
  %493 = icmp eq i8* %397, %491
  br i1 %493, label %494, label %487, !llvm.loop !113

494:                                              ; preds = %487, %482
  %495 = ptrtoint i8* %396 to i64
  %496 = load i8*, i8** %7, align 8
  %497 = ptrtoint i8* %496 to i64
  %498 = sub i64 %5, %497
  %499 = sub i64 0, %498
  %500 = getelementptr inbounds i8, i8* %395, i64 %499
  %501 = ptrtoint i8* %500 to i64
  %502 = icmp sgt i64 %498, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %494
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %500, i8* align 1 %496, i64 %498, i1 false) #16
  br label %504

504:                                              ; preds = %503, %494
  %505 = load i8*, i8** %15, align 8
  %506 = icmp eq i8* %505, %1
  br i1 %506, label %612, label %507

507:                                              ; preds = %504
  %508 = ptrtoint i8* %505 to i64
  %509 = sub i64 %508, %5
  %510 = icmp ult i64 %509, 32
  br i1 %510, label %602, label %511

511:                                              ; preds = %507
  %512 = add i64 %392, %8
  %513 = sub i64 %512, %5
  %514 = sub i64 %513, %6
  %515 = getelementptr i8, i8* %505, i64 %514
  %516 = ptrtoint i8* %515 to i64
  %517 = getelementptr i8, i8* %394, i64 %516
  %518 = icmp ult i8* %397, %505
  %519 = icmp ugt i8* %517, %1
  %520 = and i1 %518, %519
  br i1 %520, label %602, label %521

521:                                              ; preds = %511
  %522 = and i64 %509, -32
  %523 = getelementptr i8, i8* %397, i64 %522
  %524 = getelementptr i8, i8* %1, i64 %522
  %525 = add i64 %522, -32
  %526 = lshr exact i64 %525, 5
  %527 = add nuw nsw i64 %526, 1
  %528 = and i64 %527, 3
  %529 = icmp ult i64 %525, 96
  br i1 %529, label %581, label %530

530:                                              ; preds = %521
  %531 = sub nsw i64 %527, %528
  br label %532

532:                                              ; preds = %532, %530
  %533 = phi i64 [ 0, %530 ], [ %578, %532 ]
  %534 = phi i64 [ %531, %530 ], [ %579, %532 ]
  %535 = getelementptr i8, i8* %397, i64 %533
  %536 = getelementptr i8, i8* %1, i64 %533
  %537 = bitcast i8* %536 to <16 x i8>*
  %538 = load <16 x i8>, <16 x i8>* %537, align 1, !alias.scope !114
  %539 = getelementptr i8, i8* %536, i64 16
  %540 = bitcast i8* %539 to <16 x i8>*
  %541 = load <16 x i8>, <16 x i8>* %540, align 1, !alias.scope !114
  %542 = bitcast i8* %535 to <16 x i8>*
  store <16 x i8> %538, <16 x i8>* %542, align 1, !alias.scope !117, !noalias !114
  %543 = getelementptr i8, i8* %535, i64 16
  %544 = bitcast i8* %543 to <16 x i8>*
  store <16 x i8> %541, <16 x i8>* %544, align 1, !alias.scope !117, !noalias !114
  %545 = or i64 %533, 32
  %546 = getelementptr i8, i8* %397, i64 %545
  %547 = getelementptr i8, i8* %1, i64 %545
  %548 = bitcast i8* %547 to <16 x i8>*
  %549 = load <16 x i8>, <16 x i8>* %548, align 1, !alias.scope !114
  %550 = getelementptr i8, i8* %547, i64 16
  %551 = bitcast i8* %550 to <16 x i8>*
  %552 = load <16 x i8>, <16 x i8>* %551, align 1, !alias.scope !114
  %553 = bitcast i8* %546 to <16 x i8>*
  store <16 x i8> %549, <16 x i8>* %553, align 1, !alias.scope !117, !noalias !114
  %554 = getelementptr i8, i8* %546, i64 16
  %555 = bitcast i8* %554 to <16 x i8>*
  store <16 x i8> %552, <16 x i8>* %555, align 1, !alias.scope !117, !noalias !114
  %556 = or i64 %533, 64
  %557 = getelementptr i8, i8* %397, i64 %556
  %558 = getelementptr i8, i8* %1, i64 %556
  %559 = bitcast i8* %558 to <16 x i8>*
  %560 = load <16 x i8>, <16 x i8>* %559, align 1, !alias.scope !114
  %561 = getelementptr i8, i8* %558, i64 16
  %562 = bitcast i8* %561 to <16 x i8>*
  %563 = load <16 x i8>, <16 x i8>* %562, align 1, !alias.scope !114
  %564 = bitcast i8* %557 to <16 x i8>*
  store <16 x i8> %560, <16 x i8>* %564, align 1, !alias.scope !117, !noalias !114
  %565 = getelementptr i8, i8* %557, i64 16
  %566 = bitcast i8* %565 to <16 x i8>*
  store <16 x i8> %563, <16 x i8>* %566, align 1, !alias.scope !117, !noalias !114
  %567 = or i64 %533, 96
  %568 = getelementptr i8, i8* %397, i64 %567
  %569 = getelementptr i8, i8* %1, i64 %567
  %570 = bitcast i8* %569 to <16 x i8>*
  %571 = load <16 x i8>, <16 x i8>* %570, align 1, !alias.scope !114
  %572 = getelementptr i8, i8* %569, i64 16
  %573 = bitcast i8* %572 to <16 x i8>*
  %574 = load <16 x i8>, <16 x i8>* %573, align 1, !alias.scope !114
  %575 = bitcast i8* %568 to <16 x i8>*
  store <16 x i8> %571, <16 x i8>* %575, align 1, !alias.scope !117, !noalias !114
  %576 = getelementptr i8, i8* %568, i64 16
  %577 = bitcast i8* %576 to <16 x i8>*
  store <16 x i8> %574, <16 x i8>* %577, align 1, !alias.scope !117, !noalias !114
  %578 = add i64 %533, 128
  %579 = add i64 %534, -4
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %581, label %532, !llvm.loop !119

581:                                              ; preds = %532, %521
  %582 = phi i64 [ 0, %521 ], [ %578, %532 ]
  %583 = icmp eq i64 %528, 0
  br i1 %583, label %600, label %584

584:                                              ; preds = %581, %584
  %585 = phi i64 [ %597, %584 ], [ %582, %581 ]
  %586 = phi i64 [ %598, %584 ], [ %528, %581 ]
  %587 = getelementptr i8, i8* %397, i64 %585
  %588 = getelementptr i8, i8* %1, i64 %585
  %589 = bitcast i8* %588 to <16 x i8>*
  %590 = load <16 x i8>, <16 x i8>* %589, align 1, !alias.scope !114
  %591 = getelementptr i8, i8* %588, i64 16
  %592 = bitcast i8* %591 to <16 x i8>*
  %593 = load <16 x i8>, <16 x i8>* %592, align 1, !alias.scope !114
  %594 = bitcast i8* %587 to <16 x i8>*
  store <16 x i8> %590, <16 x i8>* %594, align 1, !alias.scope !117, !noalias !114
  %595 = getelementptr i8, i8* %587, i64 16
  %596 = bitcast i8* %595 to <16 x i8>*
  store <16 x i8> %593, <16 x i8>* %596, align 1, !alias.scope !117, !noalias !114
  %597 = add i64 %585, 32
  %598 = add i64 %586, -1
  %599 = icmp eq i64 %598, 0
  br i1 %599, label %600, label %584, !llvm.loop !120

600:                                              ; preds = %584, %581
  %601 = icmp eq i64 %509, %522
  br i1 %601, label %612, label %602

602:                                              ; preds = %600, %511, %507
  %603 = phi i8* [ %397, %511 ], [ %397, %507 ], [ %523, %600 ]
  %604 = phi i8* [ %1, %511 ], [ %1, %507 ], [ %524, %600 ]
  br label %605

605:                                              ; preds = %602, %605
  %606 = phi i8* [ %610, %605 ], [ %603, %602 ]
  %607 = phi i8* [ %609, %605 ], [ %604, %602 ]
  %608 = load i8, i8* %607, align 1
  store i8 %608, i8* %606, align 1
  %609 = getelementptr inbounds i8, i8* %607, i64 1
  %610 = getelementptr inbounds i8, i8* %606, i64 1
  %611 = icmp eq i8* %609, %505
  br i1 %611, label %612, label %605, !llvm.loop !121

612:                                              ; preds = %605, %600, %504
  %613 = phi i8* [ %397, %504 ], [ %523, %600 ], [ %610, %605 ]
  %614 = ptrtoint i8* %613 to i64
  %615 = load i8*, i8** %7, align 8
  store i64 %501, i64* %369, align 8
  store i64 %614, i64* %20, align 8
  store i64 %495, i64* %13, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %618, label %617

617:                                              ; preds = %612
  tail call void @_ZdlPv(i8* nonnull %615) #18
  br label %618

618:                                              ; preds = %361, %356, %617, %612, %136, %263, %4
  %619 = phi i8* [ %1, %4 ], [ %1, %263 ], [ %1, %136 ], [ %395, %612 ], [ %395, %617 ], [ %1, %356 ], [ %1, %361 ]
  ret i8* %619
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZNKSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEE3strEv(%"class.std::__1::basic_string"* sret, %"class.std::__1::basic_stringbuf"*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #10

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE3putEc(%"class.std::__1::basic_ostream"*, i8 signext) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE5flushEv(%"class.std::__1::basic_ostream"*) local_unnamed_addr #1

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::__tree_end_node"*, i8 } @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE25__emplace_unique_key_argsIS6_JRKS6_EEENS_4pairINS_15__tree_iteratorIS6_PNS_11__tree_nodeIS6_PvEElEEbEERKT_DpOT0_(%"class.std::__1::__tree.668"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %5 = bitcast %"class.std::__1::__tree_end_node"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %4, align 8
  %6 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.668"* %0, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %4, %"class.std::__1::basic_string"* dereferenceable(24) %1)
  %7 = bitcast %"class.std::__1::__tree_node_base"** %6 to %"class.std::__1::__tree_node"**
  %8 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node"* %8, null
  br i1 %9, label %10, label %49

10:                                               ; preds = %3
  %11 = call i8* @_Znwm(i64 56) #18, !noalias !122
  %12 = getelementptr inbounds i8, i8* %11, i64 32
  %13 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1, !noalias !122
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %19, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %12, i8* align 8 %18, i64 24, i1 false) #16, !noalias !122
  br label %25

19:                                               ; preds = %10
  %20 = bitcast i8* %12 to %"class.std::__1::basic_string"*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8, !noalias !122
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8, !noalias !122
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %20, i8* %22, i64 %24) #16, !noalias !122
  br label %25

25:                                               ; preds = %17, %19
  %26 = bitcast %"class.std::__1::__tree_end_node"** %4 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast i8* %11 to %"class.std::__1::__tree_node"*
  %29 = bitcast i8* %11 to %"class.std::__1::__tree_node_base"*
  %30 = getelementptr inbounds i8, i8* %11, i64 16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 16, i1 false) #16
  %31 = bitcast i8* %30 to i64*
  store i64 %27, i64* %31, align 8
  %32 = bitcast %"class.std::__1::__tree_node_base"** %6 to i8**
  store i8* %11, i8** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 0
  %34 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %34, i64 0, i32 0
  %36 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %35, align 8
  %37 = icmp eq %"class.std::__1::__tree_node_base"* %36, null
  br i1 %37, label %42, label %38

38:                                               ; preds = %25
  %39 = ptrtoint %"class.std::__1::__tree_node_base"* %36 to i64
  %40 = bitcast %"class.std::__1::__tree.668"* %0 to i64*
  store i64 %39, i64* %40, align 8
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %6, align 8
  br label %42

42:                                               ; preds = %38, %25
  %43 = phi %"class.std::__1::__tree_node_base"* [ %29, %25 ], [ %41, %38 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %45, %"class.std::__1::__tree_node_base"* %43) #16
  %46 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 2, i32 0, i32 0
  %47 = load i64, i64* %46, align 8
  %48 = add i64 %47, 1
  store i64 %48, i64* %46, align 8
  br label %49

49:                                               ; preds = %42, %3
  %50 = phi i8 [ 1, %42 ], [ 0, %3 ]
  %51 = phi %"class.std::__1::__tree_node"* [ %28, %42 ], [ %8, %3 ]
  %52 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %51, i64 0, i32 0, i32 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %53 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } undef, %"class.std::__1::__tree_end_node"* %52, 0
  %54 = insertvalue { %"class.std::__1::__tree_end_node"*, i8 } %53, i8 %50, 1
  ret { %"class.std::__1::__tree_end_node"*, i8 } %54
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE12__find_equalIS6_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISF_EERKT_(%"class.std::__1::__tree.668"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %79, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %21 = select i1 %13, i8* %19, i8* %20
  br label %22

22:                                               ; preds = %8, %75
  %23 = phi %"class.std::__1::__tree_node"* [ %78, %75 ], [ %6, %8 ]
  %24 = phi %"class.std::__1::__tree_node_base"** [ %77, %75 ], [ %9, %8 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = icmp ult i64 %33, %17
  %35 = select i1 %34, i64 %33, i64 %17
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %44, label %37

37:                                               ; preds = %22
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %41 = select i1 %29, i8* %39, i8* %40
  %42 = tail call i32 @memcmp(i8* %21, i8* %41, i64 %35) #16
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %37, %22
  %45 = icmp ult i64 %17, %33
  br i1 %45, label %48, label %54

46:                                               ; preds = %37
  %47 = icmp slt i32 %42, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44, %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %75

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %53, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

54:                                               ; preds = %44
  br i1 %36, label %64, label %55

55:                                               ; preds = %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %59 = select i1 %29, i8* %57, i8* %58
  br label %60

60:                                               ; preds = %55, %46
  %61 = phi i8* [ %59, %55 ], [ %41, %46 ]
  %62 = tail call i32 @memcmp(i8* %61, i8* %21, i64 %35) #16
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %54
  br i1 %34, label %67, label %73

65:                                               ; preds = %60
  %66 = icmp slt i32 %62, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %64, %65
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %71, label %75

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

73:                                               ; preds = %64, %65
  %74 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %23, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %74, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %81

75:                                               ; preds = %67, %48
  %76 = phi %"class.std::__1::__tree_node_base"* [ %50, %48 ], [ %69, %67 ]
  %77 = phi %"class.std::__1::__tree_node_base"** [ %49, %48 ], [ %68, %67 ]
  %78 = bitcast %"class.std::__1::__tree_node_base"* %76 to %"class.std::__1::__tree_node"*
  br label %22

79:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %80 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %81

81:                                               ; preds = %79, %73, %71, %52
  %82 = phi %"class.std::__1::__tree_node_base"** [ %49, %52 ], [ %68, %71 ], [ %24, %73 ], [ %80, %79 ]
  ret %"class.std::__1::__tree_node_base"** %82
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !15
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !15
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !15
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2gl14SamplerBindingD1Ev(%"struct.gl::SamplerBinding"*) unnamed_addr #3

declare void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #1

declare void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #1

declare void @_ZN2gl13LinkedUniformC1ERKS0_(%"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"* dereferenceable(280)) unnamed_addr #1

declare void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN2gl20ShaderVariableBufferC1ERKS0_(%"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.70"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.sh::ShaderVariable"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 208
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 88686269585142075
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.sh::ShaderVariable"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 208
  %20 = icmp ult i64 %19, 44343134792571037
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 88686269585142075, %14 ]
  %28 = mul i64 %27, 208
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"struct.sh::ShaderVariable"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.sh::ShaderVariable"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %33, i64 %32
  %36 = ptrtoint %"struct.sh::ShaderVariable"* %35 to i64
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %34, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #16
  %37 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %34, i64 1
  %38 = ptrtoint %"struct.sh::ShaderVariable"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %39, align 8
  %41 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  %42 = icmp eq %"struct.sh::ShaderVariable"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.sh::ShaderVariable"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.sh::ShaderVariable"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.sh::ShaderVariable"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %47, i64 -1
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %48, %"struct.sh::ShaderVariable"* dereferenceable(208) %49) #16
  %50 = icmp eq %"struct.sh::ShaderVariable"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.sh::ShaderVariable"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.sh::ShaderVariable"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.sh::ShaderVariable"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.sh::ShaderVariable"*
  %60 = icmp eq %"struct.sh::ShaderVariable"* %55, %59
  br i1 %60, label %65, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.sh::ShaderVariable"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %62, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %63) #16
  %64 = icmp eq %"struct.sh::ShaderVariable"* %63, %59
  br i1 %64, label %65, label %61

65:                                               ; preds = %61, %54
  %66 = icmp eq i64 %57, 0
  br i1 %66, label %69, label %67

67:                                               ; preds = %65
  %68 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %65, %67
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl13LinkedUniformENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.187"*, %"struct.gl::LinkedUniform"* dereferenceable(280)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::LinkedUniform"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.187"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 280
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 65881228834676970
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.187"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::LinkedUniform"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 280
  %20 = icmp ult i64 %19, 32940614417338485
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 65881228834676970, %14 ]
  %28 = mul i64 %27, 280
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"struct.gl::LinkedUniform"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.gl::LinkedUniform"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %33, i64 %32
  %36 = ptrtoint %"struct.gl::LinkedUniform"* %35 to i64
  tail call void @_ZN2gl13LinkedUniformC1ERKS0_(%"struct.gl::LinkedUniform"* %34, %"struct.gl::LinkedUniform"* dereferenceable(280) %1) #16
  %37 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %34, i64 1
  %38 = ptrtoint %"struct.gl::LinkedUniform"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.187", %"class.std::__1::vector.187"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %39, align 8
  %41 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %3, align 8
  %42 = icmp eq %"struct.gl::LinkedUniform"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.gl::LinkedUniform"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.gl::LinkedUniform"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.gl::LinkedUniform"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %47, i64 -1
  tail call void @_ZN2gl13LinkedUniformC1ERKS0_(%"struct.gl::LinkedUniform"* %48, %"struct.gl::LinkedUniform"* dereferenceable(280) %49) #16
  %50 = icmp eq %"struct.gl::LinkedUniform"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.gl::LinkedUniform"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.gl::LinkedUniform"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.gl::LinkedUniform"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.gl::LinkedUniform"*
  %60 = icmp eq %"struct.gl::LinkedUniform"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.gl::LinkedUniform"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.gl::LinkedUniform", %"struct.gl::LinkedUniform"* %62, i64 -1
  %64 = bitcast %"struct.gl::LinkedUniform"* %63 to void (%"struct.gl::LinkedUniform"*)***
  %65 = load void (%"struct.gl::LinkedUniform"*)**, void (%"struct.gl::LinkedUniform"*)*** %64, align 8
  %66 = load void (%"struct.gl::LinkedUniform"*)*, void (%"struct.gl::LinkedUniform"*)** %65, align 8
  tail call void %66(%"struct.gl::LinkedUniform"* %63) #16
  %67 = icmp eq %"struct.gl::LinkedUniform"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl14InterfaceBlockENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.194"*, %"struct.gl::InterfaceBlock"* dereferenceable(112)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::InterfaceBlock"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.194"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 112
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 164703072086692425
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.194"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::InterfaceBlock"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 112
  %20 = icmp ult i64 %19, 82351536043346212
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 164703072086692425, %14 ]
  %28 = mul i64 %27, 112
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"struct.gl::InterfaceBlock"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.gl::InterfaceBlock"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %32
  %36 = ptrtoint %"struct.gl::InterfaceBlock"* %35 to i64
  %37 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 0
  %38 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %37, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %38) #16
  %39 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 1
  %41 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %31
  %47 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #16
  br label %54

49:                                               ; preds = %31
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %40, i8* %51, i64 %53) #16
  br label %54

54:                                               ; preds = %49, %46
  %55 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 2
  %56 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %54
  %62 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #16
  br label %69

64:                                               ; preds = %54
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %55, i8* %66, i64 %68) #16
  br label %69

69:                                               ; preds = %61, %64
  %70 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %33, i64 %9, i32 3
  %71 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %1, i64 0, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %70, i8* align 8 %71, i64 12, i1 false) #16
  %72 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %34, i64 1
  %73 = ptrtoint %"struct.gl::InterfaceBlock"* %72 to i64
  %74 = getelementptr inbounds %"class.std::__1::vector.194", %"class.std::__1::vector.194"* %0, i64 0, i32 0, i32 0
  %75 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %74, align 8
  %76 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %3, align 8
  %77 = icmp eq %"struct.gl::InterfaceBlock"* %76, %75
  br i1 %77, label %78, label %80

78:                                               ; preds = %69
  %79 = ptrtoint %"struct.gl::InterfaceBlock"* %75 to i64
  br label %102

80:                                               ; preds = %69, %80
  %81 = phi %"struct.gl::InterfaceBlock"* [ %83, %80 ], [ %34, %69 ]
  %82 = phi %"struct.gl::InterfaceBlock"* [ %84, %80 ], [ %76, %69 ]
  %83 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1
  %84 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1
  %85 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %83, i64 0, i32 0
  %86 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %84, i64 0, i32 0
  tail call void @_ZN2gl20ShaderVariableBufferC2ERKS0_(%"struct.gl::ShaderVariableBuffer"* %85, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %86) #16
  %87 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %83, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14InterfaceBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 1
  %89 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 1
  %90 = bitcast %"class.std::__1::basic_string"* %88 to i8*
  %91 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %90, i8* align 8 %91, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 24, i1 false) #16
  %92 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 2
  %93 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 2
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #16
  %96 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %81, i64 -1, i32 3
  %97 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %82, i64 -1, i32 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 12, i1 false) #16
  %98 = icmp eq %"struct.gl::InterfaceBlock"* %84, %75
  br i1 %98, label %99, label %80

99:                                               ; preds = %80
  %100 = load i64, i64* %6, align 8
  %101 = load %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"** %3, align 8
  br label %102

102:                                              ; preds = %78, %99
  %103 = phi %"struct.gl::InterfaceBlock"* [ %75, %78 ], [ %101, %99 ]
  %104 = phi %"struct.gl::InterfaceBlock"* [ %34, %78 ], [ %83, %99 ]
  %105 = phi i64 [ %79, %78 ], [ %100, %99 ]
  %106 = ptrtoint %"struct.gl::InterfaceBlock"* %104 to i64
  store i64 %106, i64* %6, align 8
  store i64 %73, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %107 = inttoptr i64 %105 to %"struct.gl::InterfaceBlock"*
  %108 = icmp eq %"struct.gl::InterfaceBlock"* %103, %107
  br i1 %108, label %116, label %109

109:                                              ; preds = %102, %109
  %110 = phi %"struct.gl::InterfaceBlock"* [ %111, %109 ], [ %103, %102 ]
  %111 = getelementptr inbounds %"struct.gl::InterfaceBlock", %"struct.gl::InterfaceBlock"* %110, i64 -1
  %112 = bitcast %"struct.gl::InterfaceBlock"* %111 to void (%"struct.gl::InterfaceBlock"*)***
  %113 = load void (%"struct.gl::InterfaceBlock"*)**, void (%"struct.gl::InterfaceBlock"*)*** %112, align 8
  %114 = load void (%"struct.gl::InterfaceBlock"*)*, void (%"struct.gl::InterfaceBlock"*)** %113, align 8
  tail call void %114(%"struct.gl::InterfaceBlock"* %111) #16
  %115 = icmp eq %"struct.gl::InterfaceBlock"* %111, %107
  br i1 %115, label %116, label %109

116:                                              ; preds = %109, %102
  %117 = icmp eq i64 %105, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %105 to i8*
  tail call void @_ZdlPv(i8* %119) #18
  br label %120

120:                                              ; preds = %116, %118
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl20ShaderVariableBufferENS_9allocatorIS2_EEE21__push_back_slow_pathIRKS2_EEvOT_(%"class.std::__1::vector.202"*, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::ShaderVariableBuffer"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.202"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 48
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 384307168202282325
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.202"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::ShaderVariableBuffer"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 48
  %20 = icmp ult i64 %19, 192153584101141162
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 384307168202282325, %14 ]
  %28 = mul i64 %27, 48
  %29 = tail call i8* @_Znwm(i64 %28) #18
  %30 = bitcast i8* %29 to %"struct.gl::ShaderVariableBuffer"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"struct.gl::ShaderVariableBuffer"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %33, i64 %9
  %35 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %33, i64 %32
  %36 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %35 to i64
  tail call void @_ZN2gl20ShaderVariableBufferC1ERKS0_(%"struct.gl::ShaderVariableBuffer"* %34, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %1) #16
  %37 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %34, i64 1
  %38 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %37 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.202", %"class.std::__1::vector.202"* %0, i64 0, i32 0, i32 0
  %40 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %39, align 8
  %41 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %3, align 8
  %42 = icmp eq %"struct.gl::ShaderVariableBuffer"* %41, %40
  br i1 %42, label %43, label %45

43:                                               ; preds = %31
  %44 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %40 to i64
  br label %54

45:                                               ; preds = %31, %45
  %46 = phi %"struct.gl::ShaderVariableBuffer"* [ %48, %45 ], [ %34, %31 ]
  %47 = phi %"struct.gl::ShaderVariableBuffer"* [ %49, %45 ], [ %41, %31 ]
  %48 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %46, i64 -1
  %49 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %47, i64 -1
  tail call void @_ZN2gl20ShaderVariableBufferC1ERKS0_(%"struct.gl::ShaderVariableBuffer"* %48, %"struct.gl::ShaderVariableBuffer"* dereferenceable(48) %49) #16
  %50 = icmp eq %"struct.gl::ShaderVariableBuffer"* %49, %40
  br i1 %50, label %51, label %45

51:                                               ; preds = %45
  %52 = load i64, i64* %6, align 8
  %53 = load %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"** %3, align 8
  br label %54

54:                                               ; preds = %43, %51
  %55 = phi %"struct.gl::ShaderVariableBuffer"* [ %40, %43 ], [ %53, %51 ]
  %56 = phi %"struct.gl::ShaderVariableBuffer"* [ %34, %43 ], [ %48, %51 ]
  %57 = phi i64 [ %44, %43 ], [ %52, %51 ]
  %58 = ptrtoint %"struct.gl::ShaderVariableBuffer"* %56 to i64
  store i64 %58, i64* %6, align 8
  store i64 %38, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %59 = inttoptr i64 %57 to %"struct.gl::ShaderVariableBuffer"*
  %60 = icmp eq %"struct.gl::ShaderVariableBuffer"* %55, %59
  br i1 %60, label %68, label %61

61:                                               ; preds = %54, %61
  %62 = phi %"struct.gl::ShaderVariableBuffer"* [ %63, %61 ], [ %55, %54 ]
  %63 = getelementptr inbounds %"struct.gl::ShaderVariableBuffer", %"struct.gl::ShaderVariableBuffer"* %62, i64 -1
  %64 = bitcast %"struct.gl::ShaderVariableBuffer"* %63 to void (%"struct.gl::ShaderVariableBuffer"*)***
  %65 = load void (%"struct.gl::ShaderVariableBuffer"*)**, void (%"struct.gl::ShaderVariableBuffer"*)*** %64, align 8
  %66 = load void (%"struct.gl::ShaderVariableBuffer"*)*, void (%"struct.gl::ShaderVariableBuffer"*)** %65, align 8
  tail call void %66(%"struct.gl::ShaderVariableBuffer"* %63) #16
  %67 = icmp eq %"struct.gl::ShaderVariableBuffer"* %63, %59
  br i1 %67, label %68, label %61

68:                                               ; preds = %61, %54
  %69 = icmp eq i64 %57, 0
  br i1 %69, label %72, label %70

70:                                               ; preds = %68
  %71 = inttoptr i64 %57 to i8*
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %68, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRN2sh14ShaderVariableERjEEEvDpOT_(%"class.std::__1::vector.173"*, %"struct.sh::ShaderVariable"* dereferenceable(208), i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.gl::TransformFeedbackVarying"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.173"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 216
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 85401592933840516
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.173"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.gl::TransformFeedbackVarying"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 216
  %21 = icmp ult i64 %20, 42700796466920258
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 85401592933840516, %15 ]
  %29 = mul i64 %28, 216
  %30 = tail call i8* @_Znwm(i64 %29) #18
  %31 = bitcast i8* %30 to %"struct.gl::TransformFeedbackVarying"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.gl::TransformFeedbackVarying"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %33
  %37 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %36 to i64
  %38 = load i32, i32* %2, align 4
  %39 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %35, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %39, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #16
  %40 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %10, i32 1
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %35, i64 1
  %42 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 0
  %44 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %43, align 8
  %45 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  %46 = icmp eq %"struct.gl::TransformFeedbackVarying"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %32
  %48 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %44 to i64
  br label %63

49:                                               ; preds = %32, %49
  %50 = phi %"struct.gl::TransformFeedbackVarying"* [ %58, %49 ], [ %35, %32 ]
  %51 = phi %"struct.gl::TransformFeedbackVarying"* [ %52, %49 ], [ %45, %32 ]
  %52 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1, i32 0
  %54 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %52, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %53, %"struct.sh::ShaderVariable"* dereferenceable(208) %54) #16
  %55 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1, i32 1
  %56 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %51, i64 -1, i32 1
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1
  %59 = icmp eq %"struct.gl::TransformFeedbackVarying"* %52, %44
  br i1 %59, label %60, label %49

60:                                               ; preds = %49
  %61 = load i64, i64* %7, align 8
  %62 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  br label %63

63:                                               ; preds = %47, %60
  %64 = phi %"struct.gl::TransformFeedbackVarying"* [ %44, %47 ], [ %62, %60 ]
  %65 = phi %"struct.gl::TransformFeedbackVarying"* [ %35, %47 ], [ %58, %60 ]
  %66 = phi i64 [ %48, %47 ], [ %61, %60 ]
  %67 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %65 to i64
  store i64 %67, i64* %7, align 8
  store i64 %42, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %68 = inttoptr i64 %66 to %"struct.gl::TransformFeedbackVarying"*
  %69 = icmp eq %"struct.gl::TransformFeedbackVarying"* %64, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %63, %70
  %71 = phi %"struct.gl::TransformFeedbackVarying"* [ %72, %70 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %71, i64 -1
  %73 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %72, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %73) #16
  %74 = icmp eq %"struct.gl::TransformFeedbackVarying"* %72, %68
  br i1 %74, label %75, label %70

75:                                               ; preds = %70, %63
  %76 = icmp eq i64 %66, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %75, %77
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl14SamplerBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRNS1_11TextureTypeERjRNS1_13SamplerFormatERmEEEvDpOT_(%"class.std::__1::vector.209"*, i8* dereferenceable(1), i32* dereferenceable(4), i8* dereferenceable(1), i64* dereferenceable(8)) local_unnamed_addr #5 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.gl::SamplerBinding"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.std::__1::vector.209"* %0 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 40
  %13 = add nsw i64 %12, 1
  %14 = icmp ugt i64 %13, 461168601842738790
  br i1 %14, label %15, label %17

15:                                               ; preds = %5
  %16 = bitcast %"class.std::__1::vector.209"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %16) #17
  unreachable

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"struct.gl::SamplerBinding"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %10
  %22 = sdiv exact i64 %21, 40
  %23 = icmp ult i64 %22, 230584300921369395
  br i1 %23, label %24, label %29

24:                                               ; preds = %17
  %25 = shl nsw i64 %22, 1
  %26 = icmp ult i64 %25, %13
  %27 = select i1 %26, i64 %13, i64 %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %34, label %29

29:                                               ; preds = %17, %24
  %30 = phi i64 [ %27, %24 ], [ 461168601842738790, %17 ]
  %31 = mul i64 %30, 40
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"struct.gl::SamplerBinding"*
  br label %34

34:                                               ; preds = %24, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %24 ]
  %36 = phi %"struct.gl::SamplerBinding"* [ %33, %29 ], [ null, %24 ]
  %37 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 %12
  %38 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %36, i64 %35
  %39 = ptrtoint %"struct.gl::SamplerBinding"* %38 to i64
  %40 = load i8, i8* %1, align 1
  %41 = load i32, i32* %2, align 4
  %42 = load i8, i8* %3, align 1
  %43 = load i64, i64* %4, align 8
  tail call void @_ZN2gl14SamplerBindingC1ENS_11TextureTypeEjNS_13SamplerFormatEm(%"struct.gl::SamplerBinding"* %37, i8 zeroext %40, i32 %41, i8 zeroext %42, i64 %43) #16
  %44 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %37, i64 1
  %45 = ptrtoint %"struct.gl::SamplerBinding"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.209", %"class.std::__1::vector.209"* %0, i64 0, i32 0, i32 0
  %47 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %46, align 8
  %48 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %6, align 8
  %49 = icmp eq %"struct.gl::SamplerBinding"* %48, %47
  br i1 %49, label %50, label %52

50:                                               ; preds = %34
  %51 = ptrtoint %"struct.gl::SamplerBinding"* %37 to i64
  store i64 %51, i64* %9, align 8
  store i64 %45, i64* %7, align 8
  store i64 %39, i64* %19, align 8
  br label %67

52:                                               ; preds = %34, %52
  %53 = phi %"struct.gl::SamplerBinding"* [ %55, %52 ], [ %37, %34 ]
  %54 = phi %"struct.gl::SamplerBinding"* [ %56, %52 ], [ %48, %34 ]
  %55 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %53, i64 -1
  %56 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %54, i64 -1
  tail call void @_ZN2gl14SamplerBindingC1ERKS0_(%"struct.gl::SamplerBinding"* %55, %"struct.gl::SamplerBinding"* dereferenceable(40) %56) #16
  %57 = icmp eq %"struct.gl::SamplerBinding"* %56, %47
  br i1 %57, label %58, label %52

58:                                               ; preds = %52
  %59 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %46, align 8
  %60 = load %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"** %6, align 8
  %61 = ptrtoint %"struct.gl::SamplerBinding"* %55 to i64
  store i64 %61, i64* %9, align 8
  store i64 %45, i64* %7, align 8
  store i64 %39, i64* %19, align 8
  %62 = icmp eq %"struct.gl::SamplerBinding"* %60, %59
  br i1 %62, label %67, label %63

63:                                               ; preds = %58, %63
  %64 = phi %"struct.gl::SamplerBinding"* [ %65, %63 ], [ %60, %58 ]
  %65 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %64, i64 -1
  tail call void @_ZN2gl14SamplerBindingD1Ev(%"struct.gl::SamplerBinding"* %65) #16
  %66 = icmp eq %"struct.gl::SamplerBinding"* %65, %59
  br i1 %66, label %67, label %63

67:                                               ; preds = %63, %50, %58
  %68 = phi %"struct.gl::SamplerBinding"* [ %47, %50 ], [ %59, %58 ], [ %59, %63 ]
  %69 = icmp eq %"struct.gl::SamplerBinding"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.gl::SamplerBinding", %"struct.gl::SamplerBinding"* %68, i64 0, i32 0
  tail call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %67, %70
  ret void
}

declare void @_ZN2gl14SamplerBindingC1ENS_11TextureTypeEjNS_13SamplerFormatEm(%"struct.gl::SamplerBinding"*, i8 zeroext, i32, i8 zeroext, i64) unnamed_addr #1

declare void @_ZN2gl14SamplerBindingC1ERKS0_(%"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl12ImageBindingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRS2_EEEvDpOT_(%"class.std::__1::vector.216"*, %"struct.gl::ImageBinding"* dereferenceable(32)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"struct.gl::ImageBinding"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.216"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 5
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 576460752303423487
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.216"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #17
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"struct.gl::ImageBinding"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 5
  %20 = icmp ult i64 %19, 288230376151711743
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 4
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 576460752303423487
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #17
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 576460752303423487, %14 ]
  %31 = shl i64 %30, 5
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"struct.gl::ImageBinding"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"struct.gl::ImageBinding"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %36, i64 %9
  %38 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %36, i64 %35
  %39 = ptrtoint %"struct.gl::ImageBinding"* %38 to i64
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %37, %"struct.gl::ImageBinding"* dereferenceable(32) %1) #16
  %40 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %37, i64 1
  %41 = ptrtoint %"struct.gl::ImageBinding"* %40 to i64
  %42 = getelementptr inbounds %"class.std::__1::vector.216", %"class.std::__1::vector.216"* %0, i64 0, i32 0, i32 0
  %43 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %42, align 8
  %44 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %3, align 8
  %45 = icmp eq %"struct.gl::ImageBinding"* %44, %43
  br i1 %45, label %46, label %48

46:                                               ; preds = %34
  %47 = ptrtoint %"struct.gl::ImageBinding"* %37 to i64
  store i64 %47, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  br label %63

48:                                               ; preds = %34, %48
  %49 = phi %"struct.gl::ImageBinding"* [ %51, %48 ], [ %37, %34 ]
  %50 = phi %"struct.gl::ImageBinding"* [ %52, %48 ], [ %44, %34 ]
  %51 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %49, i64 -1
  %52 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %50, i64 -1
  tail call void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"* %51, %"struct.gl::ImageBinding"* dereferenceable(32) %52) #16
  %53 = icmp eq %"struct.gl::ImageBinding"* %52, %43
  br i1 %53, label %54, label %48

54:                                               ; preds = %48
  %55 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %42, align 8
  %56 = load %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"** %3, align 8
  %57 = ptrtoint %"struct.gl::ImageBinding"* %51 to i64
  store i64 %57, i64* %6, align 8
  store i64 %41, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %58 = icmp eq %"struct.gl::ImageBinding"* %56, %55
  br i1 %58, label %63, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.gl::ImageBinding"* [ %61, %59 ], [ %56, %54 ]
  %61 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %60, i64 -1
  tail call void @_ZN2gl12ImageBindingD1Ev(%"struct.gl::ImageBinding"* %61) #16
  %62 = icmp eq %"struct.gl::ImageBinding"* %61, %55
  br i1 %62, label %63, label %59

63:                                               ; preds = %59, %46, %54
  %64 = phi %"struct.gl::ImageBinding"* [ %43, %46 ], [ %55, %54 ], [ %55, %59 ]
  %65 = icmp eq %"struct.gl::ImageBinding"* %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"struct.gl::ImageBinding", %"struct.gl::ImageBinding"* %64, i64 0, i32 0
  tail call void @_ZdlPv(i8* %67) #18
  br label %68

68:                                               ; preds = %63, %66
  ret void
}

declare void @_ZN2gl12ImageBindingC1ERKS0_(%"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.70"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.sh::ShaderVariable"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.sh::ShaderVariable"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 208
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %24, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.sh::ShaderVariable"*
  %14 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %13, i64 %1
  %15 = icmp eq i64 %1, 0
  br i1 %15, label %22, label %18

16:                                               ; preds = %18
  %17 = ptrtoint %"struct.sh::ShaderVariable"* %14 to i64
  br label %22

18:                                               ; preds = %12, %18
  %19 = phi %"struct.sh::ShaderVariable"* [ %20, %18 ], [ %13, %12 ]
  tail call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* %19) #16
  %20 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %19, i64 1
  %21 = icmp eq %"struct.sh::ShaderVariable"* %20, %14
  br i1 %21, label %16, label %18

22:                                               ; preds = %12, %16
  %23 = phi i64 [ %17, %16 ], [ %8, %12 ]
  store i64 %23, i64* %7, align 8
  br label %90

24:                                               ; preds = %2
  %25 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %8, %26
  %28 = sdiv exact i64 %27, 208
  %29 = add i64 %28, %1
  %30 = icmp ugt i64 %29, 88686269585142075
  br i1 %30, label %31, label %33

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #17
  unreachable

33:                                               ; preds = %24
  %34 = sub i64 %5, %26
  %35 = sdiv exact i64 %34, 208
  %36 = icmp ult i64 %35, 44343134792571037
  br i1 %36, label %37, label %42

37:                                               ; preds = %33
  %38 = shl nsw i64 %35, 1
  %39 = icmp ult i64 %38, %29
  %40 = select i1 %39, i64 %29, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %33, %37
  %43 = phi i64 [ %40, %37 ], [ 88686269585142075, %33 ]
  %44 = mul i64 %43, 208
  %45 = tail call i8* @_Znwm(i64 %44) #18
  %46 = bitcast i8* %45 to %"struct.sh::ShaderVariable"*
  br label %47

47:                                               ; preds = %37, %42
  %48 = phi i64 [ %43, %42 ], [ 0, %37 ]
  %49 = phi %"struct.sh::ShaderVariable"* [ %46, %42 ], [ null, %37 ]
  %50 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %49, i64 %28
  %51 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %49, i64 %48
  %52 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %50, i64 %1
  br label %53

53:                                               ; preds = %47, %53
  %54 = phi %"struct.sh::ShaderVariable"* [ %55, %53 ], [ %50, %47 ]
  tail call void @_ZN2sh14ShaderVariableC1Ev(%"struct.sh::ShaderVariable"* %54) #16
  %55 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %54, i64 1
  %56 = icmp eq %"struct.sh::ShaderVariable"* %52, %55
  br i1 %56, label %57, label %53

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.sh::ShaderVariable"* %51 to i64
  %59 = ptrtoint %"struct.sh::ShaderVariable"* %52 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 0
  %61 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %60, align 8
  %62 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %6, align 8
  %63 = icmp eq %"struct.sh::ShaderVariable"* %62, %61
  br i1 %63, label %64, label %66

64:                                               ; preds = %57
  %65 = ptrtoint %"struct.sh::ShaderVariable"* %61 to i64
  br label %75

66:                                               ; preds = %57, %66
  %67 = phi %"struct.sh::ShaderVariable"* [ %69, %66 ], [ %50, %57 ]
  %68 = phi %"struct.sh::ShaderVariable"* [ %70, %66 ], [ %62, %57 ]
  %69 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %67, i64 -1
  %70 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %68, i64 -1
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %69, %"struct.sh::ShaderVariable"* dereferenceable(208) %70) #16
  %71 = icmp eq %"struct.sh::ShaderVariable"* %70, %61
  br i1 %71, label %72, label %66

72:                                               ; preds = %66
  %73 = load i64, i64* %25, align 8
  %74 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %6, align 8
  br label %75

75:                                               ; preds = %64, %72
  %76 = phi %"struct.sh::ShaderVariable"* [ %61, %64 ], [ %74, %72 ]
  %77 = phi %"struct.sh::ShaderVariable"* [ %50, %64 ], [ %69, %72 ]
  %78 = phi i64 [ %65, %64 ], [ %73, %72 ]
  %79 = ptrtoint %"struct.sh::ShaderVariable"* %77 to i64
  store i64 %79, i64* %25, align 8
  store i64 %59, i64* %7, align 8
  store i64 %58, i64* %4, align 8
  %80 = inttoptr i64 %78 to %"struct.sh::ShaderVariable"*
  %81 = icmp eq %"struct.sh::ShaderVariable"* %76, %80
  br i1 %81, label %86, label %82

82:                                               ; preds = %75, %82
  %83 = phi %"struct.sh::ShaderVariable"* [ %84, %82 ], [ %76, %75 ]
  %84 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %83, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %84) #16
  %85 = icmp eq %"struct.sh::ShaderVariable"* %84, %80
  br i1 %85, label %86, label %82

86:                                               ; preds = %82, %75
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %78 to i8*
  tail call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %88, %86, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2sh14ShaderVariableENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.70"*, %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.sh::ShaderVariable"* %2 to i64
  %5 = ptrtoint %"struct.sh::ShaderVariable"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 208
  %8 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.sh::ShaderVariable"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.70"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 208
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.sh::ShaderVariable"*
  br i1 %15, label %59, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.sh::ShaderVariable"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 208
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %1, i64 %22
  %25 = select i1 %23, %"struct.sh::ShaderVariable"* %24, %"struct.sh::ShaderVariable"* %2
  %26 = icmp eq %"struct.sh::ShaderVariable"* %25, %1
  br i1 %26, label %34, label %27

27:                                               ; preds = %17, %27
  %28 = phi %"struct.sh::ShaderVariable"* [ %32, %27 ], [ %16, %17 ]
  %29 = phi %"struct.sh::ShaderVariable"* [ %31, %27 ], [ %1, %17 ]
  %30 = tail call dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"* %28, %"struct.sh::ShaderVariable"* dereferenceable(208) %29) #16
  %31 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %29, i64 1
  %32 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %28, i64 1
  %33 = icmp eq %"struct.sh::ShaderVariable"* %31, %25
  br i1 %33, label %34, label %27

34:                                               ; preds = %27, %17
  %35 = phi %"struct.sh::ShaderVariable"* [ %16, %17 ], [ %32, %27 ]
  br i1 %23, label %36, label %51

36:                                               ; preds = %34
  %37 = load i64, i64* %19, align 8
  %38 = icmp eq %"struct.sh::ShaderVariable"* %25, %2
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to %"struct.sh::ShaderVariable"*
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi %"struct.sh::ShaderVariable"* [ %45, %41 ], [ %40, %39 ]
  %43 = phi %"struct.sh::ShaderVariable"* [ %44, %41 ], [ %24, %39 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %42, %"struct.sh::ShaderVariable"* dereferenceable(208) %43) #16
  %44 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %43, i64 1
  %45 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %42, i64 1
  %46 = icmp eq %"struct.sh::ShaderVariable"* %44, %2
  br i1 %46, label %47, label %41

47:                                               ; preds = %41
  %48 = ptrtoint %"struct.sh::ShaderVariable"* %45 to i64
  br label %49

49:                                               ; preds = %36, %47
  %50 = phi i64 [ %37, %36 ], [ %48, %47 ]
  store i64 %50, i64* %19, align 8
  br label %110

51:                                               ; preds = %34
  %52 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %18, align 8
  %53 = icmp eq %"struct.sh::ShaderVariable"* %52, %35
  br i1 %53, label %58, label %54

54:                                               ; preds = %51, %54
  %55 = phi %"struct.sh::ShaderVariable"* [ %56, %54 ], [ %52, %51 ]
  %56 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %55, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %56) #16
  %57 = icmp eq %"struct.sh::ShaderVariable"* %56, %35
  br i1 %57, label %58, label %54

58:                                               ; preds = %54, %51
  store %"struct.sh::ShaderVariable"* %35, %"struct.sh::ShaderVariable"** %18, align 8
  br label %110

59:                                               ; preds = %3
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %76, label %61

61:                                               ; preds = %59
  %62 = inttoptr i64 %12 to i8*
  %63 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %64 = load %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"** %63, align 8
  %65 = icmp eq %"struct.sh::ShaderVariable"* %64, %16
  br i1 %65, label %73, label %66

66:                                               ; preds = %61, %66
  %67 = phi %"struct.sh::ShaderVariable"* [ %68, %66 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %67, i64 -1
  tail call void @_ZN2sh14ShaderVariableD1Ev(%"struct.sh::ShaderVariable"* %68) #16
  %69 = icmp eq %"struct.sh::ShaderVariable"* %68, %16
  br i1 %69, label %70, label %66

70:                                               ; preds = %66
  %71 = bitcast %"class.std::__1::vector.70"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %70, %61
  %74 = phi i8* [ %72, %70 ], [ %62, %61 ]
  store %"struct.sh::ShaderVariable"* %16, %"struct.sh::ShaderVariable"** %63, align 8
  tail call void @_ZdlPv(i8* %74) #18
  %75 = bitcast %"class.std::__1::vector.70"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 24, i1 false) #16
  br label %76

76:                                               ; preds = %59, %73
  %77 = phi i64 [ %10, %59 ], [ 0, %73 ]
  %78 = icmp ugt i64 %7, 88686269585142075
  br i1 %78, label %79, label %81

79:                                               ; preds = %76
  %80 = bitcast %"class.std::__1::vector.70"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %80) #17
  unreachable

81:                                               ; preds = %76
  %82 = sdiv exact i64 %77, 208
  %83 = icmp ult i64 %82, 44343134792571037
  br i1 %83, label %84, label %88

84:                                               ; preds = %81
  %85 = shl nsw i64 %82, 1
  %86 = icmp ult i64 %85, %7
  %87 = select i1 %86, i64 %7, i64 %85
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i64 [ %87, %84 ], [ 88686269585142075, %81 ]
  %90 = mul i64 %89, 208
  %91 = tail call i8* @_Znwm(i64 %90) #18
  %92 = bitcast i8* %91 to %"struct.sh::ShaderVariable"*
  %93 = getelementptr inbounds %"class.std::__1::vector.70", %"class.std::__1::vector.70"* %0, i64 0, i32 0, i32 1
  %94 = bitcast %"struct.sh::ShaderVariable"** %93 to i8**
  store i8* %91, i8** %94, align 8
  %95 = bitcast %"class.std::__1::vector.70"* %0 to i8**
  store i8* %91, i8** %95, align 8
  %96 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %92, i64 %89
  store %"struct.sh::ShaderVariable"* %96, %"struct.sh::ShaderVariable"** %8, align 8
  %97 = bitcast %"struct.sh::ShaderVariable"** %93 to i64*
  %98 = ptrtoint i8* %91 to i64
  %99 = icmp eq %"struct.sh::ShaderVariable"* %1, %2
  br i1 %99, label %108, label %100

100:                                              ; preds = %88, %100
  %101 = phi %"struct.sh::ShaderVariable"* [ %104, %100 ], [ %92, %88 ]
  %102 = phi %"struct.sh::ShaderVariable"* [ %103, %100 ], [ %1, %88 ]
  tail call void @_ZN2sh14ShaderVariableC1ERKS0_(%"struct.sh::ShaderVariable"* %101, %"struct.sh::ShaderVariable"* dereferenceable(208) %102) #16
  %103 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %102, i64 1
  %104 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %101, i64 1
  %105 = icmp eq %"struct.sh::ShaderVariable"* %103, %2
  br i1 %105, label %106, label %100

106:                                              ; preds = %100
  %107 = ptrtoint %"struct.sh::ShaderVariable"* %104 to i64
  br label %108

108:                                              ; preds = %88, %106
  %109 = phi i64 [ %98, %88 ], [ %107, %106 ]
  store i64 %109, i64* %97, align 8
  br label %110

110:                                              ; preds = %49, %58, %108
  ret void
}

declare dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.668"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.668"* %0, %"class.std::__1::__tree_node"* %6) #16
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE7destroyEPNS_11__tree_nodeIS6_PvEE(%"class.std::__1::__tree.668"* %0, %"class.std::__1::__tree_node"* %9) #16
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZdlPv(i8* %17) #18
  br label %18

18:                                               ; preds = %4, %15
  %19 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl7InfoLog17ensureInitializedEv(%"class.gl::InfoLog"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.gl::InfoLog", %"class.gl::InfoLog"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %2, align 8
  %4 = icmp eq %"class.std::__1::basic_stringstream"* %3, null
  br i1 %4, label %5, label %65

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 280) #18
  %7 = getelementptr inbounds i8, i8* %6, i64 128
  %8 = bitcast i8* %7 to i32 (...)***
  %9 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  %10 = getelementptr inbounds i8, i8* %6, i64 16
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 24
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  %14 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 2) to i64*), align 8
  %15 = bitcast i8* %6 to i64*
  store i64 %14, i64* %15, align 8
  %16 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 3) to i64*), align 8
  %17 = bitcast i8* %6 to i8**
  %18 = inttoptr i64 %14 to i8*
  %19 = getelementptr i8, i8* %18, i64 -24
  %20 = bitcast i8* %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 %21
  %23 = bitcast i8* %22 to i64*
  store i64 %16, i64* %23, align 8
  %24 = getelementptr inbounds i8, i8* %6, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  %26 = load i8*, i8** %17, align 8
  %27 = getelementptr i8, i8* %26, i64 -24
  %28 = bitcast i8* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds i8, i8* %6, i64 %29
  %31 = bitcast i8* %30 to %"class.std::__1::ios_base"*
  tail call void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"* %31, i8* %12) #16
  %32 = getelementptr inbounds i8, i8* %30, i64 136
  %33 = bitcast i8* %32 to %"class.std::__1::basic_ostream"**
  store %"class.std::__1::basic_ostream"* null, %"class.std::__1::basic_ostream"** %33, align 8
  %34 = getelementptr inbounds i8, i8* %30, i64 144
  %35 = bitcast i8* %34 to i32*
  store i32 -1, i32* %35, align 8
  %36 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 4) to i64*), align 8
  %37 = bitcast i8* %10 to i64*
  store i64 %36, i64* %37, align 8
  %38 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 5) to i64*), align 8
  %39 = inttoptr i64 %36 to i8*
  %40 = getelementptr i8, i8* %39, i64 -24
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds i8, i8* %10, i64 %42
  %44 = bitcast i8* %43 to i64*
  store i64 %38, i64* %44, align 8
  %45 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 1) to i64*), align 8
  store i64 %45, i64* %15, align 8
  %46 = load i64, i64* bitcast (i8** getelementptr inbounds ([10 x i8*], [10 x i8*]* @_ZTTNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, i64 6) to i64*), align 8
  %47 = inttoptr i64 %45 to i8*
  %48 = getelementptr i8, i8* %47, i64 -24
  %49 = bitcast i8* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds i8, i8* %6, i64 %50
  %52 = bitcast i8* %51 to i64*
  store i64 %46, i64* %52, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 3) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 2, i64 3) to i32 (...)**), i32 (...)*** %8, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*], [5 x i8*] }* @_ZTVNSt3__118basic_stringstreamIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 1, i64 3) to i32 (...)**), i32 (...)*** %11, align 8
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"* %13) #16
  %53 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVNSt3__115basic_stringbufIcNS_11char_traitsIcEENS_9allocatorIcEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %54 = getelementptr inbounds i8, i8* %6, i64 88
  %55 = getelementptr inbounds i8, i8* %6, i64 120
  %56 = bitcast i8* %55 to i32*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 32, i1 false) #16
  store i32 24, i32* %56, align 8
  %57 = load %"class.std::__1::basic_stringstream"*, %"class.std::__1::basic_stringstream"** %2, align 8
  %58 = bitcast %"class.gl::InfoLog"* %0 to i8**
  store i8* %6, i8** %58, align 8
  %59 = icmp eq %"class.std::__1::basic_stringstream"* %57, null
  br i1 %59, label %65, label %60

60:                                               ; preds = %5
  %61 = bitcast %"class.std::__1::basic_stringstream"* %57 to void (%"class.std::__1::basic_stringstream"*)***
  %62 = load void (%"class.std::__1::basic_stringstream"*)**, void (%"class.std::__1::basic_stringstream"*)*** %61, align 8
  %63 = getelementptr inbounds void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %62, i64 1
  %64 = load void (%"class.std::__1::basic_stringstream"*)*, void (%"class.std::__1::basic_stringstream"*)** %63, align 8
  tail call void %64(%"class.std::__1::basic_stringstream"* nonnull %57) #16
  br label %65

65:                                               ; preds = %1, %60, %5
  ret void
}

declare void @_ZNSt3__18ios_base4initEPv(%"class.std::__1::ios_base"*, i8*) local_unnamed_addr #1

declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEEC2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !15
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #18
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #18
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNKSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE14__count_uniqueIS6_EEmRKT_(%"class.std::__1::__tree.668"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.668", %"class.std::__1::__tree.668"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %67, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %7, %63
  %21 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %65, %63 ]
  %22 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = icmp ult i64 %30, %15
  %32 = select i1 %31, i64 %30, i64 %15
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %20
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %38 = select i1 %26, i8* %36, i8* %37
  %39 = tail call i32 @memcmp(i8* %19, i8* %38, i64 %32) #16
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %34, %20
  %42 = icmp ult i64 %15, %30
  br i1 %42, label %45, label %47

43:                                               ; preds = %34
  %44 = icmp slt i32 %39, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %41, %43
  %46 = bitcast %"class.std::__1::__tree_node"* %21 to %"class.std::__1::__tree_node"**
  br label %63

47:                                               ; preds = %41
  br i1 %33, label %57, label %48

48:                                               ; preds = %47
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %52 = select i1 %26, i8* %50, i8* %51
  br label %53

53:                                               ; preds = %48, %43
  %54 = phi i8* [ %52, %48 ], [ %38, %43 ]
  %55 = tail call i32 @memcmp(i8* %54, i8* %19, i64 %32) #16
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %53, %47
  br i1 %31, label %60, label %67

58:                                               ; preds = %53
  %59 = icmp slt i32 %55, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %57, %58
  %61 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %21, i64 0, i32 0, i32 1
  %62 = bitcast %"class.std::__1::__tree_node_base"** %61 to %"class.std::__1::__tree_node"**
  br label %63

63:                                               ; preds = %60, %45
  %64 = phi %"class.std::__1::__tree_node"** [ %46, %45 ], [ %62, %60 ]
  %65 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node"* %65, null
  br i1 %66, label %67, label %20

67:                                               ; preds = %58, %63, %57, %2
  %68 = phi i64 [ 0, %2 ], [ 1, %57 ], [ 0, %63 ], [ 1, %58 ]
  ret i64 %68
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableEjEEEvDpOT_(%"class.std::__1::vector.173"*, %"struct.sh::ShaderVariable"* dereferenceable(208), i32* dereferenceable(4)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.gl::TransformFeedbackVarying"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.173"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 216
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 85401592933840516
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.173"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.gl::TransformFeedbackVarying"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 216
  %21 = icmp ult i64 %20, 42700796466920258
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 85401592933840516, %15 ]
  %29 = mul i64 %28, 216
  %30 = tail call i8* @_Znwm(i64 %29) #18
  %31 = bitcast i8* %30 to %"struct.gl::TransformFeedbackVarying"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.gl::TransformFeedbackVarying"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %33
  %37 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %36 to i64
  %38 = load i32, i32* %2, align 4
  %39 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %35, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %39, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #16
  %40 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %10, i32 1
  store i32 %38, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %35, i64 1
  %42 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %41 to i64
  %43 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 0
  %44 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %43, align 8
  %45 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  %46 = icmp eq %"struct.gl::TransformFeedbackVarying"* %45, %44
  br i1 %46, label %47, label %49

47:                                               ; preds = %32
  %48 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %44 to i64
  br label %63

49:                                               ; preds = %32, %49
  %50 = phi %"struct.gl::TransformFeedbackVarying"* [ %58, %49 ], [ %35, %32 ]
  %51 = phi %"struct.gl::TransformFeedbackVarying"* [ %52, %49 ], [ %45, %32 ]
  %52 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %51, i64 -1
  %53 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1, i32 0
  %54 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %52, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %53, %"struct.sh::ShaderVariable"* dereferenceable(208) %54) #16
  %55 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1, i32 1
  %56 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %51, i64 -1, i32 1
  %57 = load i32, i32* %56, align 8
  store i32 %57, i32* %55, align 8
  %58 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %50, i64 -1
  %59 = icmp eq %"struct.gl::TransformFeedbackVarying"* %52, %44
  br i1 %59, label %60, label %49

60:                                               ; preds = %49
  %61 = load i64, i64* %7, align 8
  %62 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  br label %63

63:                                               ; preds = %47, %60
  %64 = phi %"struct.gl::TransformFeedbackVarying"* [ %44, %47 ], [ %62, %60 ]
  %65 = phi %"struct.gl::TransformFeedbackVarying"* [ %35, %47 ], [ %58, %60 ]
  %66 = phi i64 [ %48, %47 ], [ %61, %60 ]
  %67 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %65 to i64
  store i64 %67, i64* %7, align 8
  store i64 %42, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %68 = inttoptr i64 %66 to %"struct.gl::TransformFeedbackVarying"*
  %69 = icmp eq %"struct.gl::TransformFeedbackVarying"* %64, %68
  br i1 %69, label %75, label %70

70:                                               ; preds = %63, %70
  %71 = phi %"struct.gl::TransformFeedbackVarying"* [ %72, %70 ], [ %64, %63 ]
  %72 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %71, i64 -1
  %73 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %72, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %73) #16
  %74 = icmp eq %"struct.gl::TransformFeedbackVarying"* %72, %68
  br i1 %74, label %75, label %70

75:                                               ; preds = %70, %63
  %76 = icmp eq i64 %66, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %75
  %78 = inttoptr i64 %66 to i8*
  tail call void @_ZdlPv(i8* %78) #18
  br label %79

79:                                               ; preds = %75, %77
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN2gl24TransformFeedbackVaryingENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJRKN2sh14ShaderVariableESA_EEEvDpOT_(%"class.std::__1::vector.173"*, %"struct.sh::ShaderVariable"* dereferenceable(208), %"struct.sh::ShaderVariable"* dereferenceable(208)) local_unnamed_addr #5 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"struct.gl::TransformFeedbackVarying"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.173"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 216
  %11 = add nsw i64 %10, 1
  %12 = icmp ugt i64 %11, 85401592933840516
  br i1 %12, label %13, label %15

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::vector.173"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #17
  unreachable

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"struct.gl::TransformFeedbackVarying"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %8
  %20 = sdiv exact i64 %19, 216
  %21 = icmp ult i64 %20, 42700796466920258
  br i1 %21, label %22, label %27

22:                                               ; preds = %15
  %23 = shl nsw i64 %20, 1
  %24 = icmp ult i64 %23, %11
  %25 = select i1 %24, i64 %11, i64 %23
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %32, label %27

27:                                               ; preds = %15, %22
  %28 = phi i64 [ %25, %22 ], [ 85401592933840516, %15 ]
  %29 = mul i64 %28, 216
  %30 = tail call i8* @_Znwm(i64 %29) #18
  %31 = bitcast i8* %30 to %"struct.gl::TransformFeedbackVarying"*
  br label %32

32:                                               ; preds = %22, %27
  %33 = phi i64 [ %28, %27 ], [ 0, %22 ]
  %34 = phi %"struct.gl::TransformFeedbackVarying"* [ %31, %27 ], [ null, %22 ]
  %35 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %10
  %36 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %34, i64 %33
  %37 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %36 to i64
  tail call void @_ZN2gl24TransformFeedbackVaryingC2ERKN2sh14ShaderVariableES4_(%"struct.gl::TransformFeedbackVarying"* %35, %"struct.sh::ShaderVariable"* dereferenceable(208) %1, %"struct.sh::ShaderVariable"* dereferenceable(208) %2) #16
  %38 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %35, i64 1
  %39 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::vector.173", %"class.std::__1::vector.173"* %0, i64 0, i32 0, i32 0
  %41 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %40, align 8
  %42 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  %43 = icmp eq %"struct.gl::TransformFeedbackVarying"* %42, %41
  br i1 %43, label %44, label %46

44:                                               ; preds = %32
  %45 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %41 to i64
  br label %60

46:                                               ; preds = %32, %46
  %47 = phi %"struct.gl::TransformFeedbackVarying"* [ %55, %46 ], [ %35, %32 ]
  %48 = phi %"struct.gl::TransformFeedbackVarying"* [ %49, %46 ], [ %42, %32 ]
  %49 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %48, i64 -1
  %50 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 -1, i32 0
  %51 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %49, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2ERKS0_(%"struct.sh::ShaderVariable"* %50, %"struct.sh::ShaderVariable"* dereferenceable(208) %51) #16
  %52 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 -1, i32 1
  %53 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %48, i64 -1, i32 1
  %54 = load i32, i32* %53, align 8
  store i32 %54, i32* %52, align 8
  %55 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %47, i64 -1
  %56 = icmp eq %"struct.gl::TransformFeedbackVarying"* %49, %41
  br i1 %56, label %57, label %46

57:                                               ; preds = %46
  %58 = load i64, i64* %7, align 8
  %59 = load %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"** %4, align 8
  br label %60

60:                                               ; preds = %44, %57
  %61 = phi %"struct.gl::TransformFeedbackVarying"* [ %41, %44 ], [ %59, %57 ]
  %62 = phi %"struct.gl::TransformFeedbackVarying"* [ %35, %44 ], [ %55, %57 ]
  %63 = phi i64 [ %45, %44 ], [ %58, %57 ]
  %64 = ptrtoint %"struct.gl::TransformFeedbackVarying"* %62 to i64
  store i64 %64, i64* %7, align 8
  store i64 %39, i64* %5, align 8
  store i64 %37, i64* %17, align 8
  %65 = inttoptr i64 %63 to %"struct.gl::TransformFeedbackVarying"*
  %66 = icmp eq %"struct.gl::TransformFeedbackVarying"* %61, %65
  br i1 %66, label %72, label %67

67:                                               ; preds = %60, %67
  %68 = phi %"struct.gl::TransformFeedbackVarying"* [ %69, %67 ], [ %61, %60 ]
  %69 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %68, i64 -1
  %70 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %69, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableD2Ev(%"struct.sh::ShaderVariable"* %70) #16
  %71 = icmp eq %"struct.gl::TransformFeedbackVarying"* %69, %65
  br i1 %71, label %72, label %67

72:                                               ; preds = %67, %60
  %73 = icmp eq i64 %63, 0
  br i1 %73, label %76, label %74

74:                                               ; preds = %72
  %75 = inttoptr i64 %63 to i8*
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %72, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl24TransformFeedbackVaryingC2ERKN2sh14ShaderVariableES4_(%"struct.gl::TransformFeedbackVarying"*, %"struct.sh::ShaderVariable"* dereferenceable(208), %"struct.sh::ShaderVariable"* dereferenceable(208)) unnamed_addr #0 comdat align 2 {
  %4 = alloca [15 x i8], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca [15 x i8], align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0
  tail call void @_ZN2sh14ShaderVariableC2Ev(%"struct.sh::ShaderVariable"* %8) #16
  %9 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 1
  store i32 -1, i32* %9, align 8
  %10 = tail call dereferenceable(208) %"struct.sh::ShaderVariable"* @_ZN2sh14ShaderVariableaSERKS0_(%"struct.sh::ShaderVariable"* %8, %"struct.sh::ShaderVariable"* dereferenceable(208) %1) #16
  %11 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 21
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 21
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 22
  %15 = load i8, i8* %14, align 8, !range !15
  %16 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 22
  store i8 %15, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %171, label %27

27:                                               ; preds = %3
  %28 = getelementptr inbounds [15 x i8], [15 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %28)
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #16, !alias.scope !125
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %36 = select i1 %21, i8* %34, i8* %35
  %37 = add i64 %25, 1
  %38 = icmp ugt i64 %37, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %27
  %40 = bitcast %"class.std::__1::basic_string"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #17
  unreachable

41:                                               ; preds = %27
  %42 = icmp ult i64 %37, 23
  br i1 %42, label %43, label %47

43:                                               ; preds = %41
  %44 = trunc i64 %25 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1, !alias.scope !125
  br label %52

47:                                               ; preds = %41
  %48 = add nuw i64 %25, 17
  %49 = and i64 %48, -16
  %50 = tail call i8* @_Znwm(i64 %49) #18
  store i8* %50, i8** %30, align 8, !alias.scope !125
  %51 = or i64 %49, -9223372036854775808
  store i64 %51, i64* %32, align 8, !alias.scope !125
  store i64 %25, i64* %31, align 8, !alias.scope !125
  br label %52

52:                                               ; preds = %47, %43
  %53 = phi i8* [ %29, %43 ], [ %50, %47 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %53, i8* align 1 %36, i64 %25, i1 false) #16
  %54 = getelementptr inbounds i8, i8* %53, i64 %25
  store i8 0, i8* %54, align 1
  %55 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #16
  %56 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 2
  %57 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1, !noalias !128
  %60 = icmp slt i8 %59, 0
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load i8*, i8** %61, align 8, !noalias !128
  %63 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8, !noalias !128
  %65 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %66 = zext i8 %59 to i64
  %67 = select i1 %60, i8* %62, i8* %65
  %68 = select i1 %60, i64 %64, i64 %66
  %69 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %5, i8* %67, i64 %68) #16, !noalias !128
  %70 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  %71 = bitcast %"class.std::__1::basic_string"* %69 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = bitcast i64* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* align 8 %74, i64 15, i1 false)
  %75 = getelementptr inbounds i8, i8* %70, i64 23
  %76 = load i8, i8* %75, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #16, !noalias !128
  %77 = load i8, i8* %58, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %81

79:                                               ; preds = %52
  %80 = load i8*, i8** %61, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %79, %52
  %82 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = bitcast i8** %82 to i64*
  store i64 %72, i64* %83, align 8
  %84 = bitcast i64* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* nonnull align 8 %28, i64 15, i1 false)
  %85 = bitcast %"struct.gl::TransformFeedbackVarying"* %0 to i8*
  %86 = getelementptr inbounds i8, i8* %85, i64 31
  store i8 %76, i8* %86, align 1
  %87 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %93

91:                                               ; preds = %81
  %92 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %92) #18
  br label %93

93:                                               ; preds = %81, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %28)
  %94 = getelementptr inbounds [15 x i8], [15 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 15, i8* nonnull %94)
  %95 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #16
  %96 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 3
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #16, !alias.scope !131
  %100 = bitcast %"class.std::__1::basic_string"* %96 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1, !noalias !131
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  %108 = zext i8 %102 to i64
  %109 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %110 = select i1 %103, i64 %105, i64 %108
  %111 = select i1 %103, i8* %107, i8* %109
  %112 = add i64 %110, 1
  %113 = icmp ugt i64 %112, -17
  br i1 %113, label %114, label %116

114:                                              ; preds = %93
  %115 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %115) #17
  unreachable

116:                                              ; preds = %93
  %117 = icmp ult i64 %112, 23
  br i1 %117, label %123, label %118

118:                                              ; preds = %116
  %119 = add nuw i64 %110, 17
  %120 = and i64 %119, -16
  %121 = call i8* @_Znwm(i64 %120) #18
  store i8* %121, i8** %97, align 8, !alias.scope !131
  %122 = or i64 %120, -9223372036854775808
  store i64 %122, i64* %99, align 8, !alias.scope !131
  store i64 %110, i64* %98, align 8, !alias.scope !131
  br label %128

123:                                              ; preds = %116
  %124 = trunc i64 %110 to i8
  %125 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %125, i64 0, i32 1, i32 0
  store i8 %124, i8* %126, align 1, !alias.scope !131
  %127 = icmp eq i64 %110, 0
  br i1 %127, label %130, label %128

128:                                              ; preds = %118, %123
  %129 = phi i8* [ %121, %118 ], [ %95, %123 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 %111, i64 %110, i1 false) #16
  br label %130

130:                                              ; preds = %123, %128
  %131 = phi i8* [ %95, %123 ], [ %129, %128 ]
  %132 = getelementptr inbounds i8, i8* %131, i64 %110
  store i8 0, i8* %132, align 1
  %133 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #16
  %134 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 3
  %135 = bitcast %"class.std::__1::basic_string"* %134 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %136 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %135, i64 0, i32 1, i32 0
  %137 = load i8, i8* %136, align 1, !noalias !134
  %138 = icmp slt i8 %137, 0
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %134, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i8*, i8** %139, align 8, !noalias !134
  %141 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8, !noalias !134
  %143 = bitcast %"class.std::__1::basic_string"* %134 to i8*
  %144 = zext i8 %137 to i64
  %145 = select i1 %138, i8* %140, i8* %143
  %146 = select i1 %138, i64 %142, i64 %144
  %147 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %7, i8* %145, i64 %146) #16, !noalias !134
  %148 = bitcast %"class.std::__1::basic_string"* %147 to i8*
  %149 = bitcast %"class.std::__1::basic_string"* %147 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %152 = bitcast i64* %151 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* align 8 %152, i64 15, i1 false)
  %153 = getelementptr inbounds i8, i8* %148, i64 23
  %154 = load i8, i8* %153, align 1
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 24, i1 false) #16, !noalias !134
  %155 = load i8, i8* %136, align 1
  %156 = icmp slt i8 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %130
  %158 = load i8*, i8** %139, align 8
  call void @_ZdlPv(i8* %158) #18
  br label %159

159:                                              ; preds = %157, %130
  %160 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = bitcast i8** %160 to i64*
  store i64 %150, i64* %161, align 8
  %162 = bitcast i64* %141 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* nonnull align 8 %94, i64 15, i1 false)
  %163 = getelementptr inbounds i8, i8* %85, i64 55
  store i8 %154, i8* %163, align 1
  %164 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %170

168:                                              ; preds = %159
  %169 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %169) #18
  br label %170

170:                                              ; preds = %159, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #16
  call void @llvm.lifetime.end.p0i8(i64 15, i8* nonnull %94)
  br label %171

171:                                              ; preds = %170, %3
  %172 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 8
  %173 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 8
  %174 = icmp eq %"class.std::__1::basic_string"* %173, %172
  br i1 %174, label %204, label %175

175:                                              ; preds = %171
  %176 = bitcast %"class.std::__1::basic_string"* %173 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = bitcast %"class.std::__1::basic_string"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %181 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %180, i64 0, i32 1, i32 0
  %182 = load i8, i8* %181, align 1
  %183 = icmp slt i8 %182, 0
  br i1 %179, label %194, label %184

184:                                              ; preds = %175
  br i1 %183, label %188, label %185

185:                                              ; preds = %184
  %186 = bitcast %"class.std::__1::basic_string"* %173 to i8*
  %187 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %186, i8* align 8 %187, i64 24, i1 false) #16
  br label %204

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load i8*, i8** %189, align 8
  %191 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %192 = load i64, i64* %191, align 8
  %193 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %173, i8* %190, i64 %192) #16
  br label %204

194:                                              ; preds = %175
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load i8*, i8** %195, align 8
  %197 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %198 = load i64, i64* %197, align 8
  %199 = bitcast %"class.std::__1::basic_string"* %172 to i8*
  %200 = zext i8 %182 to i64
  %201 = select i1 %183, i8* %196, i8* %199
  %202 = select i1 %183, i64 %198, i64 %200
  %203 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %173, i8* %201, i64 %202) #16
  br label %204

204:                                              ; preds = %171, %185, %188, %194
  %205 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 9
  %206 = getelementptr inbounds %"struct.gl::TransformFeedbackVarying", %"struct.gl::TransformFeedbackVarying"* %0, i64 0, i32 0, i32 9
  %207 = icmp eq %"class.std::__1::basic_string"* %206, %205
  br i1 %207, label %237, label %208

208:                                              ; preds = %204
  %209 = bitcast %"class.std::__1::basic_string"* %206 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %210 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %209, i64 0, i32 1, i32 0
  %211 = load i8, i8* %210, align 1
  %212 = icmp slt i8 %211, 0
  %213 = bitcast %"class.std::__1::basic_string"* %205 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %214 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %213, i64 0, i32 1, i32 0
  %215 = load i8, i8* %214, align 1
  %216 = icmp slt i8 %215, 0
  br i1 %212, label %227, label %217

217:                                              ; preds = %208
  br i1 %216, label %221, label %218

218:                                              ; preds = %217
  %219 = bitcast %"class.std::__1::basic_string"* %206 to i8*
  %220 = bitcast %"class.std::__1::basic_string"* %205 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %219, i8* align 8 %220, i64 24, i1 false) #16
  br label %237

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load i8*, i8** %222, align 8
  %224 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %225 = load i64, i64* %224, align 8
  %226 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %206, i8* %223, i64 %225) #16
  br label %237

227:                                              ; preds = %208
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %205, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %229 = load i8*, i8** %228, align 8
  %230 = getelementptr inbounds %"struct.sh::ShaderVariable", %"struct.sh::ShaderVariable"* %2, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %231 = load i64, i64* %230, align 8
  %232 = bitcast %"class.std::__1::basic_string"* %205 to i8*
  %233 = zext i8 %215 to i64
  %234 = select i1 %216, i8* %229, i8* %232
  %235 = select i1 %216, i64 %231, i64 %233
  %236 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %206, i8* %234, i64 %235) #16
  br label %237

237:                                              ; preds = %204, %218, %221, %227
  ret void
}

declare void @_ZN2sh14ShaderVariableC2Ev(%"struct.sh::ShaderVariable"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector.180"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #16
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.180"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.180"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #17
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #17
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #18
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #16
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.180", %"class.std::__1::vector.180"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #16
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #18
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.usub.sat.i32(i32, i32) #14

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { nofree nounwind readonly }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }
attributes #18 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = !{!10}
!10 = distinct !{!10, !11}
!11 = distinct !{!11, !"LVerDomain"}
!12 = !{!13}
!13 = distinct !{!13, !11}
!14 = distinct !{!14, !8}
!15 = !{i8 0, i8 2}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!19 = !{i32 0, i32 33}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!22 = distinct !{!22, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK2gl7InfoLog3strEv: argument 0"}
!31 = distinct !{!31, !"_ZNK2gl7InfoLog3strEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK2gl14ActiveVariable13activeShadersEv: argument 0"}
!34 = distinct !{!34, !"_ZNK2gl14ActiveVariable13activeShadersEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK2gl14ActiveVariable13activeShadersEv: argument 0"}
!37 = distinct !{!37, !"_ZNK2gl14ActiveVariable13activeShadersEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5angle7BitSetTILm6EhN2gl10ShaderTypeEE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN2gl7InfoLoglsIA58_cEENS0_12StreamHelperERKT_: argument 0"}
!43 = distinct !{!43, !"_ZN2gl7InfoLoglsIA58_cEENS0_12StreamHelperERKT_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN2gl7InfoLoglsIA65_cEENS0_12StreamHelperERKT_: argument 0"}
!46 = distinct !{!46, !"_ZN2gl7InfoLoglsIA65_cEENS0_12StreamHelperERKT_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN2gl7InfoLoglsIA67_cEENS0_12StreamHelperERKT_: argument 0"}
!49 = distinct !{!49, !"_ZN2gl7InfoLoglsIA67_cEENS0_12StreamHelperERKT_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN2gl7InfoLoglsIA28_cEENS0_12StreamHelperERKT_: argument 0"}
!52 = distinct !{!52, !"_ZN2gl7InfoLoglsIA28_cEENS0_12StreamHelperERKT_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN2gl7InfoLoglsIA37_cEENS0_12StreamHelperERKT_: argument 0"}
!55 = distinct !{!55, !"_ZN2gl7InfoLoglsIA37_cEENS0_12StreamHelperERKT_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN2gl7InfoLoglsIA50_cEENS0_12StreamHelperERKT_: argument 0"}
!58 = distinct !{!58, !"_ZN2gl7InfoLoglsIA50_cEENS0_12StreamHelperERKT_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN2gl7InfoLoglsIA40_cEENS0_12StreamHelperERKT_: argument 0"}
!61 = distinct !{!61, !"_ZN2gl7InfoLoglsIA40_cEENS0_12StreamHelperERKT_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN2gl7InfoLoglsIA10_cEENS0_12StreamHelperERKT_: argument 0"}
!64 = distinct !{!64, !"_ZN2gl7InfoLoglsIA10_cEENS0_12StreamHelperERKT_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN2gl7InfoLoglsIA28_cEENS0_12StreamHelperERKT_: argument 0"}
!67 = distinct !{!67, !"_ZN2gl7InfoLoglsIA28_cEENS0_12StreamHelperERKT_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN2gl7InfoLoglsIA46_cEENS0_12StreamHelperERKT_: argument 0"}
!70 = distinct !{!70, !"_ZN2gl7InfoLoglsIA46_cEENS0_12StreamHelperERKT_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK5angle11BitSetArrayILm96EE5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZNK5angle11BitSetArrayILm96EE5beginEv"}
!74 = !{i64 0, i64 65}
!75 = !{!76}
!76 = distinct !{!76, !77, !"_ZN2gl7InfoLoglsIA69_cEENS0_12StreamHelperERKT_: argument 0"}
!77 = distinct !{!77, !"_ZN2gl7InfoLoglsIA69_cEENS0_12StreamHelperERKT_"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZNK5angle7BitSetTILm64EmmE5beginEv: argument 0"}
!80 = distinct !{!80, !"_ZNK5angle7BitSetTILm64EmmE5beginEv"}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !8}
!87 = distinct !{!87, !88}
!88 = !{!"llvm.loop.unroll.disable"}
!89 = distinct !{!89, !8}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !8}
!96 = distinct !{!96, !88}
!97 = distinct !{!97, !8}
!98 = !{!99}
!99 = distinct !{!99, !100}
!100 = distinct !{!100, !"LVerDomain"}
!101 = !{!102}
!102 = distinct !{!102, !100}
!103 = distinct !{!103, !8}
!104 = distinct !{!104, !88}
!105 = distinct !{!105, !8}
!106 = !{!107}
!107 = distinct !{!107, !108}
!108 = distinct !{!108, !"LVerDomain"}
!109 = !{!110}
!110 = distinct !{!110, !108}
!111 = distinct !{!111, !8}
!112 = distinct !{!112, !88}
!113 = distinct !{!113, !8}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !8}
!120 = distinct !{!120, !88}
!121 = distinct !{!121, !8}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_: argument 0"}
!124 = distinct !{!124, !"_ZNSt3__16__treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_4lessIS6_EENS4_IS6_EEE16__construct_nodeIJRKS6_EEENS_10unique_ptrINS_11__tree_nodeIS6_PvEENS_22__tree_node_destructorINS4_ISH_EEEEEEDpOT_"}
!125 = !{!126}
!126 = distinct !{!126, !127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!127 = distinct !{!127, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!128 = !{!129}
!129 = distinct !{!129, !130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!130 = distinct !{!130, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!131 = !{!132}
!132 = distinct !{!132, !133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_: argument 0"}
!133 = distinct !{!133, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EERKS9_PKS6_"}
!134 = !{!135}
!135 = distinct !{!135, !136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!136 = distinct !{!136, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
