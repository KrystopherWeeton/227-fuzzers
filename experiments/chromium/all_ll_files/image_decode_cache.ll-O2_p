; ModuleID = '../../cc/tiles/image_decode_cache.cc'
source_filename = "../../cc/tiles/image_decode_cache.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.cc::ImageDecodeCache::TaskResult" = type <{ %class.scoped_refptr, i8, i8, i8, [5 x i8] }>
%class.scoped_refptr = type { %"class.cc::TileTask"* }
%"class.cc::TileTask" = type <{ %"class.cc::Task", i32, i32, %"class.std::__1::vector", i8, [7 x i8] }>
%"class.cc::Task" = type { i32 (...)**, %"class.base::RefCountedThreadSafe", %"class.cc::TaskState", i64 }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.cc::TaskState" = type { i16 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.scoped_refptr*, %class.scoped_refptr*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.scoped_refptr* }

@_ZN2cc16ImageDecodeCache10TaskResultC1Ebbb = hidden unnamed_addr alias void (%"struct.cc::ImageDecodeCache::TaskResult"*, i1, i1, i1), void (%"struct.cc::ImageDecodeCache::TaskResult"*, i1, i1, i1)* @_ZN2cc16ImageDecodeCache10TaskResultC2Ebbb
@_ZN2cc16ImageDecodeCache10TaskResultC1E13scoped_refptrINS_8TileTaskEEb = hidden unnamed_addr alias void (%"struct.cc::ImageDecodeCache::TaskResult"*, %"class.cc::TileTask"*, i1), void (%"struct.cc::ImageDecodeCache::TaskResult"*, %"class.cc::TileTask"*, i1)* @_ZN2cc16ImageDecodeCache10TaskResultC2E13scoped_refptrINS_8TileTaskEEb
@_ZN2cc16ImageDecodeCache10TaskResultC1ERKS1_ = hidden unnamed_addr alias void (%"struct.cc::ImageDecodeCache::TaskResult"*, %"struct.cc::ImageDecodeCache::TaskResult"*), void (%"struct.cc::ImageDecodeCache::TaskResult"*, %"struct.cc::ImageDecodeCache::TaskResult"*)* @_ZN2cc16ImageDecodeCache10TaskResultC2ERKS1_
@_ZN2cc16ImageDecodeCache10TaskResultD1Ev = hidden unnamed_addr alias void (%"struct.cc::ImageDecodeCache::TaskResult"*), void (%"struct.cc::ImageDecodeCache::TaskResult"*)* @_ZN2cc16ImageDecodeCache10TaskResultD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2cc16ImageDecodeCache10TaskResultC2Ebbb(%"struct.cc::ImageDecodeCache::TaskResult"* nocapture, i1 zeroext, i1 zeroext, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %1 to i8
  %6 = zext i1 %2 to i8
  %7 = zext i1 %3 to i8
  %8 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 0, i32 0
  store %"class.cc::TileTask"* null, %"class.cc::TileTask"** %8, align 8
  %9 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 1
  store i8 %5, i8* %9, align 8
  %10 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 2
  store i8 %6, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 3
  store i8 %7, i8* %11, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImageDecodeCache10TaskResultC2E13scoped_refptrINS_8TileTaskEEb(%"struct.cc::ImageDecodeCache::TaskResult"* nocapture, %"class.cc::TileTask"*, i1 zeroext) unnamed_addr #1 align 2 {
  %4 = ptrtoint %"class.cc::TileTask"* %1 to i64
  %5 = zext i1 %2 to i8
  %6 = bitcast %"struct.cc::ImageDecodeCache::TaskResult"* %0 to i64*
  store i64 %4, i64* %6, align 8
  %7 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 1
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 2
  store i8 0, i8* %8, align 1
  %9 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 3
  store i8 %5, i8* %9, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImageDecodeCache10TaskResultC2ERKS1_(%"struct.cc::ImageDecodeCache::TaskResult"* nocapture, %"struct.cc::ImageDecodeCache::TaskResult"* nocapture readonly dereferenceable(16)) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.cc::TileTask"*, %"class.cc::TileTask"** %3, align 8
  %5 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 0, i32 0
  store %"class.cc::TileTask"* %4, %"class.cc::TileTask"** %5, align 8
  %6 = icmp eq %"class.cc::TileTask"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.cc::TileTask", %"class.cc::TileTask"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 3, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2cc16ImageDecodeCache10TaskResultD2Ev(%"struct.cc::ImageDecodeCache::TaskResult"* nocapture readonly) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.cc::ImageDecodeCache::TaskResult", %"struct.cc::ImageDecodeCache::TaskResult"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.cc::TileTask"*, %"class.cc::TileTask"** %2, align 8
  %4 = icmp eq %"class.cc::TileTask"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.cc::TileTask", %"class.cc::TileTask"* %3, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %17

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 -2
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.cc::Task"*
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %11 to void (%"class.cc::Task"*)***
  %14 = load void (%"class.cc::Task"*)**, void (%"class.cc::Task"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %14, i64 2
  %16 = load void (%"class.cc::Task"*)*, void (%"class.cc::Task"*)** %15, align 8
  tail call void %16(%"class.cc::Task"* nonnull %12) #3
  br label %17

17:                                               ; preds = %1, %5, %10
  ret void
}

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
