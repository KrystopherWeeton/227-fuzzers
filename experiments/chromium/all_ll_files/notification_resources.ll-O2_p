; ModuleID = '../../third_party/blink/common/notifications/notification_resources.cc'
source_filename = "../../third_party/blink/common/notifications/notification_resources.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.blink::NotificationResources" = type { %class.SkBitmap, %class.SkBitmap, %class.SkBitmap, %"class.std::__1::vector" }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.SkBitmap*, %class.SkBitmap*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkBitmap* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN5blink21NotificationResourcesC1Ev = hidden unnamed_addr alias void (%"struct.blink::NotificationResources"*), void (%"struct.blink::NotificationResources"*)* @_ZN5blink21NotificationResourcesC2Ev
@_ZN5blink21NotificationResourcesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.blink::NotificationResources"*, %"struct.blink::NotificationResources"*), void (%"struct.blink::NotificationResources"*, %"struct.blink::NotificationResources"*)* @_ZN5blink21NotificationResourcesC2ERKS0_
@_ZN5blink21NotificationResourcesD1Ev = hidden unnamed_addr alias void (%"struct.blink::NotificationResources"*), void (%"struct.blink::NotificationResources"*)* @_ZN5blink21NotificationResourcesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NotificationResourcesC2Ev(%"struct.blink::NotificationResources"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %2) #7
  %3 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %4) #7
  %5 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #7
  ret void
}

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NotificationResourcesC2ERKS0_(%"struct.blink::NotificationResources"*, %"struct.blink::NotificationResources"* dereferenceable(192)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %1, i64 0, i32 0
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %3, %class.SkBitmap* dereferenceable(56) %4) #7
  %5 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %1, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %5, %class.SkBitmap* dereferenceable(56) %6) #7
  %7 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %1, i64 0, i32 2
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %7, %class.SkBitmap* dereferenceable(56) %8) #7
  %9 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3
  %10 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %1, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #7
  %12 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %1, i64 0, i32 3, i32 0, i32 1
  %13 = bitcast %class.SkBitmap** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 56
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %48, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %18, 329406144173384850
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #8
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #9
  %26 = bitcast i8* %25 to %class.SkBitmap*
  %27 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = bitcast %class.SkBitmap** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %26, i64 %18
  %31 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  store %class.SkBitmap* %30, %class.SkBitmap** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %33 = load %class.SkBitmap*, %class.SkBitmap** %32, align 8
  %34 = load %class.SkBitmap*, %class.SkBitmap** %12, align 8
  %35 = bitcast %class.SkBitmap** %27 to i64*
  %36 = ptrtoint i8* %25 to i64
  %37 = icmp eq %class.SkBitmap* %33, %34
  br i1 %37, label %46, label %38

38:                                               ; preds = %24, %38
  %39 = phi %class.SkBitmap* [ %42, %38 ], [ %26, %24 ]
  %40 = phi %class.SkBitmap* [ %41, %38 ], [ %33, %24 ]
  tail call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* %39, %class.SkBitmap* dereferenceable(56) %40) #7
  %41 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %40, i64 1
  %42 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %39, i64 1
  %43 = icmp eq %class.SkBitmap* %41, %34
  br i1 %43, label %44, label %38

44:                                               ; preds = %38
  %45 = ptrtoint %class.SkBitmap* %42 to i64
  br label %46

46:                                               ; preds = %44, %24
  %47 = phi i64 [ %36, %24 ], [ %45, %44 ]
  store i64 %47, i64* %35, align 8
  br label %48

48:                                               ; preds = %2, %46
  ret void
}

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21NotificationResourcesD2Ev(%"struct.blink::NotificationResources"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %class.SkBitmap*, %class.SkBitmap** %3, align 8
  %5 = icmp eq %class.SkBitmap* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = bitcast %class.SkBitmap* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = load %class.SkBitmap*, %class.SkBitmap** %8, align 8
  %10 = icmp eq %class.SkBitmap* %9, %4
  br i1 %10, label %18, label %11

11:                                               ; preds = %6, %11
  %12 = phi %class.SkBitmap* [ %13, %11 ], [ %9, %6 ]
  %13 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %12, i64 -1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %13) #7
  %14 = icmp eq %class.SkBitmap* %13, %4
  br i1 %14, label %15, label %11

15:                                               ; preds = %11
  %16 = bitcast %"class.std::__1::vector"* %2 to i8**
  %17 = load i8*, i8** %16, align 8
  br label %18

18:                                               ; preds = %15, %6
  %19 = phi i8* [ %17, %15 ], [ %7, %6 ]
  store %class.SkBitmap* %4, %class.SkBitmap** %8, align 8
  tail call void @_ZdlPv(i8* %19) #9
  br label %20

20:                                               ; preds = %1, %18
  %21 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 2
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %21) #7
  %22 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %22) #7
  %23 = getelementptr inbounds %"struct.blink::NotificationResources", %"struct.blink::NotificationResources"* %0, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %23) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nounwind }
attributes #8 = { noreturn nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
