; ModuleID = 'gen/ui/gfx/x/xvmc.cc'
source_filename = "gen/ui/gfx/x/xvmc.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.x11::XvMC" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"struct.x11::QueryExtensionReply" = type { i16, i8, i8, i8, i8 }
%"class.x11::Connection" = type { %"class.x11::XProto", %"class.x11::ExtensionManager", %"class.std::__1::unique_ptr.175", %struct.xcb_connection_t*, %"class.std::__1::unique_ptr.188", i8, i8, i32, %"class.std::__1::basic_string", i32, %"struct.x11::Setup", %"struct.x11::Screen"*, %"struct.x11::Depth"*, %"struct.x11::VisualType"*, %"class.base::flat_map", %"class.std::__1::unique_ptr.234", %"class.base::circular_deque", %"class.base::ObserverList.240", %"class.x11::Event"*, %"class.base::circular_deque.244", i32, %"class.absl::optional", %"struct.std::__1::array", %"class.base::RepeatingCallback", %"class.base::OnceCallback.256" }
%"class.x11::XProto" = type { %"class.x11::Connection"* }
%"class.x11::ExtensionManager" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.1", %"class.std::__1::unique_ptr.7", %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.25", %"class.std::__1::unique_ptr.31", %"class.std::__1::unique_ptr.37", %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.115", %"class.std::__1::unique_ptr.121", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.133", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.151", %"class.std::__1::unique_ptr.157", %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.x11::BigRequests"* }
%"class.x11::BigRequests" = type opaque
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.x11::Composite"* }
%"class.x11::Composite" = type opaque
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.x11::Damage"* }
%"class.x11::Damage" = type opaque
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.x11::Dpms"* }
%"class.x11::Dpms" = type opaque
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %"class.x11::Dri2"* }
%"class.x11::Dri2" = type opaque
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.x11::Dri3"* }
%"class.x11::Dri3" = type opaque
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.x11::GenericEvent"* }
%"class.x11::GenericEvent" = type opaque
%"class.std::__1::unique_ptr.37" = type { %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.x11::Glx"* }
%"class.x11::Glx" = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"class.x11::Present"* }
%"class.x11::Present" = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.x11::RandR"* }
%"class.x11::RandR" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.x11::Record"* }
%"class.x11::Record" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.x11::Render"* }
%"class.x11::Render" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.x11::Res"* }
%"class.x11::Res" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.x11::ScreenSaver"* }
%"class.x11::ScreenSaver" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.x11::Shape"* }
%"class.x11::Shape" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.x11::Shm"* }
%"class.x11::Shm" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.x11::Sync"* }
%"class.x11::Sync" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.x11::XCMisc"* }
%"class.x11::XCMisc" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.x11::Xevie"* }
%"class.x11::Xevie" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.x11::XF86Dri"* }
%"class.x11::XF86Dri" = type opaque
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.x11::XF86VidMode"* }
%"class.x11::XF86VidMode" = type opaque
%"class.std::__1::unique_ptr.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.123" }
%"struct.std::__1::__compressed_pair_elem.123" = type { %"class.x11::XFixes"* }
%"class.x11::XFixes" = type opaque
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.x11::Xinerama"* }
%"class.x11::Xinerama" = type opaque
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.x11::Input"* }
%"class.x11::Input" = type opaque
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.x11::Xkb"* }
%"class.x11::Xkb" = type opaque
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.x11::XPrint"* }
%"class.x11::XPrint" = type opaque
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.x11::SELinux"* }
%"class.x11::SELinux" = type opaque
%"class.std::__1::unique_ptr.157" = type { %"class.std::__1::__compressed_pair.158" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { %"class.x11::Test"* }
%"class.x11::Test" = type opaque
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.x11::Xv"* }
%"class.x11::Xv" = type <{ %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply", [2 x i8] }>
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.x11::XvMC"* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.ui::PlatformEventSource"* }
%"class.ui::PlatformEventSource" = type { i32 (...)**, %"class.base::ObserverList", %"class.ui::PlatformEventDispatcher"*, i8, [7 x i8], %"class.base::ObserverList.181" }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.178" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::PlatformEventDispatcher" = type opaque
%"class.base::ObserverList.181" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.182", i64, i32, [4 x i8] }>
%"class.base::LinkedList.182" = type { %"class.base::LinkNode.183" }
%"class.base::LinkNode.183" = type { %"class.base::internal::LinkNodeBase" }
%struct.xcb_connection_t = type opaque
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.x11::XlibDisplay"* }
%"class.x11::XlibDisplay" = type { %struct._XDisplay* }
%struct._XDisplay = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.x11::Setup" = type { i8, i16, i16, i16, i32, i32, i32, i32, i16, i32, i32, i8, i8, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.199", %"class.std::__1::vector.206" }
%"class.std::__1::vector.199" = type { %"class.std::__1::__vector_base.200" }
%"class.std::__1::__vector_base.200" = type { %"struct.x11::Format"*, %"struct.x11::Format"*, %"class.std::__1::__compressed_pair.201" }
%"struct.x11::Format" = type { i8, i8, i8 }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.x11::Format"* }
%"class.std::__1::vector.206" = type { %"class.std::__1::__vector_base.207" }
%"class.std::__1::__vector_base.207" = type { %"struct.x11::Screen"*, %"struct.x11::Screen"*, %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.x11::Screen"* }
%"struct.x11::Screen" = type { i32, i32, i32, i32, i32, i16, i16, i16, i16, i16, i16, i32, i32, i8, i8, %"class.std::__1::vector.208" }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.x11::Depth"*, %"struct.x11::Depth"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.x11::Depth"* }
%"struct.x11::Depth" = type { i8, %"class.std::__1::vector.210" }
%"class.std::__1::vector.210" = type { %"class.std::__1::__vector_base.211" }
%"class.std::__1::__vector_base.211" = type { %"struct.x11::VisualType"*, %"struct.x11::VisualType"*, %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"struct.x11::VisualType"* }
%"struct.x11::VisualType" = type { i32, i32, i8, i16, i32, i32, i32 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.227" }
%"class.std::__1::vector.227" = type { %"class.std::__1::__vector_base.228" }
%"class.std::__1::__vector_base.228" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.229" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.x11::KeyboardState"* }
%"class.x11::KeyboardState" = type opaque
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.x11::Event"*, i64 }
%"class.base::ObserverList.240" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.241", i64, i32, [4 x i8] }>
%"class.base::LinkedList.241" = type { %"class.base::LinkNode.242" }
%"class.base::LinkNode.242" = type { %"class.base::internal::LinkNodeBase" }
%"class.x11::Event" = type opaque
%"class.base::circular_deque.244" = type { %"class.base::internal::VectorBuffer.245", i64, i64 }
%"class.base::internal::VectorBuffer.245" = type { %"struct.x11::Connection::Request"*, i64 }
%"struct.x11::Connection::Request" = type { %"class.base::OnceCallback", i8, %class.scoped_refptr.247, %"class.std::__1::unique_ptr.249" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.246" }
%"struct.std::__1::__atomic_base.246" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.scoped_refptr.247 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.248", [4 x i8] }>
%"class.base::RefCountedThreadSafe.248" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.x11::Error"* }
%"class.x11::Error" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.255 }
%union.anon.255 = type { i32 }
%"struct.std::__1::array" = type { [256 x %"class.x11::Error"* (%"class.base::RefCountedMemory"*)*] }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.256" = type { %"class.base::internal::CallbackBase" }
%"class.x11::Connection::FutureImpl" = type { %"class.x11::Connection"*, i32, i8, i8* }
%"struct.x11::XvMC::QueryVersionRequest" = type { i8 }
%"class.std::__1::back_insert_iterator" = type { %"class.std::__1::vector.270"* }
%"class.std::__1::vector.270" = type { %"class.std::__1::__vector_base.271" }
%"class.std::__1::__vector_base.271" = type { i8*, i8*, %"class.std::__1::__compressed_pair.272" }
%"class.std::__1::__compressed_pair.272" = type { %"struct.std::__1::__compressed_pair_elem.273" }
%"struct.std::__1::__compressed_pair_elem.273" = type { i8* }
%"class.x11::WriteBuffer" = type { %"class.std::__1::vector.263", %"class.std::__1::vector.270", i64, %"class.std::__1::vector.277" }
%"class.std::__1::vector.263" = type { %"class.std::__1::__vector_base.264" }
%"class.std::__1::__vector_base.264" = type { %class.scoped_refptr.247*, %class.scoped_refptr.247*, %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %class.scoped_refptr.247* }
%"class.std::__1::vector.277" = type { %"class.std::__1::__vector_base.278" }
%"class.std::__1::__vector_base.278" = type { i32*, i32*, %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280" }
%"struct.std::__1::__compressed_pair_elem.280" = type { i32* }
%"struct.x11::XvMC::QueryVersionReply" = type { i16, i32, i32 }
%"struct.x11::ReadBuffer" = type { %class.scoped_refptr.247, i64, i32* }
%"struct.x11::XvMC::ListSurfaceTypesRequest" = type { i32 }
%"struct.x11::XvMC::ListSurfaceTypesReply" = type { i16, %"class.std::__1::vector.294" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"struct.x11::XvMC::SurfaceInfo"*, %"struct.x11::XvMC::SurfaceInfo"*, %"class.std::__1::__compressed_pair.296" }
%"struct.x11::XvMC::SurfaceInfo" = type { i32, i16, i16, i16, i16, i16, i16, i32, i32 }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"struct.x11::XvMC::SurfaceInfo"* }
%"struct.x11::XvMC::CreateContextRequest" = type { i32, i32, i32, i16, i16, i32 }
%"struct.x11::XvMC::CreateContextReply" = type { i16, i16, i16, i32, %"class.std::__1::vector.308" }
%"class.std::__1::vector.308" = type { %"class.std::__1::__vector_base.309" }
%"class.std::__1::__vector_base.309" = type { i32*, i32*, %"class.std::__1::__compressed_pair.310" }
%"class.std::__1::__compressed_pair.310" = type { %"struct.std::__1::__compressed_pair_elem.311" }
%"struct.std::__1::__compressed_pair_elem.311" = type { i32* }
%"struct.x11::XvMC::DestroyContextRequest" = type { i32 }
%"struct.x11::XvMC::CreateSurfaceRequest" = type { i32, i32 }
%"struct.x11::XvMC::CreateSurfaceReply" = type { i16, %"class.std::__1::vector.308" }
%"struct.x11::XvMC::DestroySurfaceRequest" = type { i32 }
%"struct.x11::XvMC::CreateSubpictureRequest" = type { i32, i32, i32, i16, i16 }
%"struct.x11::XvMC::CreateSubpictureReply" = type { i16, i16, i16, i16, i16, %"struct.std::__1::array.331", %"class.std::__1::vector.308" }
%"struct.std::__1::array.331" = type { [4 x i8] }
%"struct.x11::XvMC::DestroySubpictureRequest" = type { i32 }
%"struct.x11::XvMC::ListSubpictureTypesRequest" = type { i32, i32 }
%"struct.x11::XvMC::ListSubpictureTypesReply" = type { i16, %"class.std::__1::vector.339" }
%"class.std::__1::vector.339" = type { %"class.std::__1::__vector_base.340" }
%"class.std::__1::__vector_base.340" = type { %"struct.x11::Xv::ImageFormatInfo"*, %"struct.x11::Xv::ImageFormatInfo"*, %"class.std::__1::__compressed_pair.343" }
%"struct.x11::Xv::ImageFormatInfo" = type { i32, i32, i32, %"struct.std::__1::array.341", i8, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.342", i32 }
%"struct.std::__1::array.341" = type { [16 x i8] }
%"struct.std::__1::array.342" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.x11::Xv::ImageFormatInfo"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh = comdat any

$_ZNSt3__16vectorIN3x114XvMC11SurfaceInfoENS_9allocatorIS3_EEE8__appendEm = comdat any

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorIN3x112Xv15ImageFormatInfoENS_9allocatorIS3_EEE8__appendEm = comdat any

@.str = private unnamed_addr constant [19 x i8] c"XvMC::QueryVersion\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"XvMC::ListSurfaceTypes\00", align 1
@.str.2 = private unnamed_addr constant [20 x i8] c"XvMC::CreateContext\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"XvMC::DestroyContext\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"XvMC::CreateSurface\00", align 1
@.str.5 = private unnamed_addr constant [21 x i8] c"XvMC::DestroySurface\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"XvMC::CreateSubpicture\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"XvMC::DestroySubpicture\00", align 1
@.str.8 = private unnamed_addr constant [26 x i8] c"XvMC::ListSubpictureTypes\00", align 1

@_ZN3x114XvMCC1EPNS_10ConnectionERKNS_19QueryExtensionReplyE = hidden unnamed_addr alias void (%"class.x11::XvMC"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*), void (%"class.x11::XvMC"*, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"*)* @_ZN3x114XvMCC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3x114XvMCC2EPNS_10ConnectionERKNS_19QueryExtensionReplyE(%"class.x11::XvMC"* nocapture, %"class.x11::Connection"*, %"struct.x11::QueryExtensionReply"* nocapture readonly dereferenceable(6)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  store %"class.x11::Connection"* %1, %"class.x11::Connection"** %4, align 8
  %5 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1
  %6 = bitcast %"struct.x11::QueryExtensionReply"* %5 to i8*
  %7 = bitcast %"struct.x11::QueryExtensionReply"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 2 %7, i64 6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::QueryVersionRequest"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca i8, align 1
  %9 = alloca %"class.x11::WriteBuffer", align 8
  %10 = alloca i8, align 1
  %11 = alloca i8, align 1
  %12 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %13 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %14 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %13) #8
  br i1 %14, label %15, label %59

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %59, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.x11::WriteBuffer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %20) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  %21 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %22 = load i8, i8* %21, align 1
  store i8 %22, i8* %10, align 1
  %23 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 1
  %24 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #8
  %25 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %25, align 8
  %26 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %10) #8
  %27 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %9, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #8
  %28 = load i64, i64* %27, align 8
  %29 = add i64 %28, 1
  store i64 %29, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  store i8 0, i8* %11, align 1
  %30 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #8
  %31 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %31, align 8
  %32 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #8
  %33 = load i64, i64* %27, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #8
  store i8 0, i8* %4, align 1
  %35 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  %36 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %37 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %38 = load i64, i64* %27, align 8
  %39 = add i64 %38, 1
  store i64 %39, i64* %27, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %36, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* nonnull dereferenceable(1) %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  %41 = load i64, i64* %27, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #8
  %43 = and i64 %41, 3
  %44 = xor i64 %43, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %8) #8
  store i8 0, i8* %8, align 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %19
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  br label %49

49:                                               ; preds = %49, %46
  %50 = phi i64 [ 0, %46 ], [ %54, %49 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  store %"class.std::__1::vector.270"* %23, %"class.std::__1::vector.270"** %48, align 8
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %8) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %52 = load i64, i64* %27, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %27, align 8
  %54 = add nuw nsw i64 %50, 1
  %55 = icmp eq i64 %54, %44
  br i1 %55, label %56, label %49

56:                                               ; preds = %49, %19
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %8) #8
  %57 = load %"class.x11::Connection"*, %"class.x11::Connection"** %12, align 8
  %58 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %57, %"class.x11::WriteBuffer"* nonnull %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %20) #8
  br label %59

59:                                               ; preds = %2, %15, %56
  %60 = phi %"class.x11::Connection::FutureImpl"* [ %58, %56 ], [ null, %15 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %60
}

declare zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC12QueryVersionEv(%"class.x11::XvMC"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC12QueryVersionERKNS0_19QueryVersionRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::QueryVersionRequest"* dereferenceable(1) undef)
  ret %"class.x11::Connection::FutureImpl"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::QueryVersionReply"* @_ZN3x116detail9ReadReplyINS_4XvMC17QueryVersionReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 12) #9
  %3 = bitcast i8* %2 to %"struct.x11::XvMC::QueryVersionReply"*
  %4 = bitcast i8* %2 to i32*
  store i32 0, i32* %4, align 4
  %5 = bitcast i8* %2 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i32*
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to i32*
  %10 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %13 = bitcast %"class.base::RefCountedMemory"* %12 to i8* (%"class.base::RefCountedMemory"*)***
  %14 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %13, align 8
  %15 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %14, align 8
  %16 = tail call i8* %15(%"class.base::RefCountedMemory"* %12) #8
  %17 = load i64, i64* %10, align 8
  %18 = add i64 %17, 2
  store i64 %18, i64* %10, align 8
  %19 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %20 = bitcast %"class.base::RefCountedMemory"* %19 to i8* (%"class.base::RefCountedMemory"*)***
  %21 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %20, align 8
  %22 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %21, align 8
  %23 = tail call i8* %22(%"class.base::RefCountedMemory"* %19) #8
  %24 = load i64, i64* %10, align 8
  %25 = getelementptr inbounds i8, i8* %23, i64 %24
  %26 = bitcast i8* %25 to i16*
  %27 = load i16, i16* %26, align 1
  store i16 %27, i16* %5, align 2
  %28 = add i64 %24, 2
  store i64 %28, i64* %10, align 8
  %29 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %30 = bitcast %"class.base::RefCountedMemory"* %29 to i8* (%"class.base::RefCountedMemory"*)***
  %31 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %30, align 8
  %32 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %31, align 8
  %33 = tail call i8* %32(%"class.base::RefCountedMemory"* %29) #8
  %34 = load i64, i64* %10, align 8
  %35 = add i64 %34, 4
  store i64 %35, i64* %10, align 8
  %36 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %37 = bitcast %"class.base::RefCountedMemory"* %36 to i8* (%"class.base::RefCountedMemory"*)***
  %38 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %37, align 8
  %39 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %38, align 8
  %40 = tail call i8* %39(%"class.base::RefCountedMemory"* %36) #8
  %41 = load i64, i64* %10, align 8
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  store i32 %44, i32* %7, align 4
  %45 = add i64 %41, 4
  store i64 %45, i64* %10, align 8
  %46 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %11, align 8
  %47 = bitcast %"class.base::RefCountedMemory"* %46 to i8* (%"class.base::RefCountedMemory"*)***
  %48 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %47, align 8
  %49 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %48, align 8
  %50 = tail call i8* %49(%"class.base::RefCountedMemory"* %46) #8
  %51 = load i64, i64* %10, align 8
  %52 = getelementptr inbounds i8, i8* %50, i64 %51
  %53 = bitcast i8* %52 to i32*
  %54 = load i32, i32* %53, align 1
  store i32 %54, i32* %9, align 4
  %55 = add i64 %51, 4
  %56 = sub i64 0, %51
  %57 = and i64 %56, 3
  %58 = add i64 %55, %57
  store i64 %58, i64* %10, align 8
  ret %"struct.x11::XvMC::QueryVersionReply"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16ListSurfaceTypesERKNS0_23ListSurfaceTypesRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::ListSurfaceTypesRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 1, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XvMC::ListSurfaceTypesRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16ListSurfaceTypesERKNS_2Xv4PortE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XvMC::ListSurfaceTypesRequest", align 4
  %4 = bitcast %"struct.x11::XvMC::ListSurfaceTypesRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XvMC::ListSurfaceTypesRequest", %"struct.x11::XvMC::ListSurfaceTypesRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16ListSurfaceTypesERKNS0_23ListSurfaceTypesRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::ListSurfaceTypesRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::ListSurfaceTypesReply"* @_ZN3x116detail9ReadReplyINS_4XvMC21ListSurfaceTypesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::XvMC::ListSurfaceTypesReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::XvMC::SurfaceInfo"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.294"*
  tail call void @_ZNSt3__16vectorIN3x114XvMC11SurfaceInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.294"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::XvMC::SurfaceInfo"**
  %49 = load %"struct.x11::XvMC::SurfaceInfo"*, %"struct.x11::XvMC::SurfaceInfo"** %48, align 8
  %50 = load %"struct.x11::XvMC::SurfaceInfo"*, %"struct.x11::XvMC::SurfaceInfo"** %46, align 8
  %51 = icmp eq %"struct.x11::XvMC::SurfaceInfo"* %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %1, %43
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %59, %52
  %55 = phi i64 [ %53, %52 ], [ %168, %59 ]
  %56 = sub i64 0, %55
  %57 = and i64 %56, 3
  %58 = add i64 %57, %55
  store i64 %58, i64* %6, align 8
  ret %"struct.x11::XvMC::ListSurfaceTypesReply"* %3

59:                                               ; preds = %43, %59
  %60 = phi %"struct.x11::XvMC::SurfaceInfo"* [ %169, %59 ], [ %49, %43 ]
  %61 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 2
  %64 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 3
  %65 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 4
  %66 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 5
  %67 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 6
  %68 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 7
  %69 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 0, i32 8
  %70 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %71 = bitcast %"class.base::RefCountedMemory"* %70 to i8* (%"class.base::RefCountedMemory"*)***
  %72 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %71, align 8
  %73 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %72, align 8
  %74 = tail call i8* %73(%"class.base::RefCountedMemory"* %70) #8
  %75 = load i64, i64* %6, align 8
  %76 = getelementptr inbounds i8, i8* %74, i64 %75
  %77 = bitcast i8* %76 to i32*
  %78 = load i32, i32* %77, align 1
  store i32 %78, i32* %61, align 4
  %79 = load i64, i64* %6, align 8
  %80 = add i64 %79, 4
  store i64 %80, i64* %6, align 8
  %81 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %82 = bitcast %"class.base::RefCountedMemory"* %81 to i8* (%"class.base::RefCountedMemory"*)***
  %83 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %82, align 8
  %84 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %83, align 8
  %85 = tail call i8* %84(%"class.base::RefCountedMemory"* %81) #8
  %86 = load i64, i64* %6, align 8
  %87 = getelementptr inbounds i8, i8* %85, i64 %86
  %88 = bitcast i8* %87 to i16*
  %89 = load i16, i16* %88, align 1
  store i16 %89, i16* %62, align 2
  %90 = load i64, i64* %6, align 8
  %91 = add i64 %90, 2
  store i64 %91, i64* %6, align 8
  %92 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %93 = bitcast %"class.base::RefCountedMemory"* %92 to i8* (%"class.base::RefCountedMemory"*)***
  %94 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %93, align 8
  %95 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %94, align 8
  %96 = tail call i8* %95(%"class.base::RefCountedMemory"* %92) #8
  %97 = load i64, i64* %6, align 8
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = bitcast i8* %98 to i16*
  %100 = load i16, i16* %99, align 1
  store i16 %100, i16* %63, align 2
  %101 = load i64, i64* %6, align 8
  %102 = add i64 %101, 2
  store i64 %102, i64* %6, align 8
  %103 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %104 = bitcast %"class.base::RefCountedMemory"* %103 to i8* (%"class.base::RefCountedMemory"*)***
  %105 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %104, align 8
  %106 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %105, align 8
  %107 = tail call i8* %106(%"class.base::RefCountedMemory"* %103) #8
  %108 = load i64, i64* %6, align 8
  %109 = getelementptr inbounds i8, i8* %107, i64 %108
  %110 = bitcast i8* %109 to i16*
  %111 = load i16, i16* %110, align 1
  store i16 %111, i16* %64, align 2
  %112 = load i64, i64* %6, align 8
  %113 = add i64 %112, 2
  store i64 %113, i64* %6, align 8
  %114 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %115 = bitcast %"class.base::RefCountedMemory"* %114 to i8* (%"class.base::RefCountedMemory"*)***
  %116 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %115, align 8
  %117 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %116, align 8
  %118 = tail call i8* %117(%"class.base::RefCountedMemory"* %114) #8
  %119 = load i64, i64* %6, align 8
  %120 = getelementptr inbounds i8, i8* %118, i64 %119
  %121 = bitcast i8* %120 to i16*
  %122 = load i16, i16* %121, align 1
  store i16 %122, i16* %65, align 2
  %123 = load i64, i64* %6, align 8
  %124 = add i64 %123, 2
  store i64 %124, i64* %6, align 8
  %125 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %126 = bitcast %"class.base::RefCountedMemory"* %125 to i8* (%"class.base::RefCountedMemory"*)***
  %127 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %126, align 8
  %128 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %127, align 8
  %129 = tail call i8* %128(%"class.base::RefCountedMemory"* %125) #8
  %130 = load i64, i64* %6, align 8
  %131 = getelementptr inbounds i8, i8* %129, i64 %130
  %132 = bitcast i8* %131 to i16*
  %133 = load i16, i16* %132, align 1
  store i16 %133, i16* %66, align 2
  %134 = load i64, i64* %6, align 8
  %135 = add i64 %134, 2
  store i64 %135, i64* %6, align 8
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #8
  %141 = load i64, i64* %6, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = bitcast i8* %142 to i16*
  %144 = load i16, i16* %143, align 1
  store i16 %144, i16* %67, align 2
  %145 = load i64, i64* %6, align 8
  %146 = add i64 %145, 2
  store i64 %146, i64* %6, align 8
  %147 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %148 = bitcast %"class.base::RefCountedMemory"* %147 to i8* (%"class.base::RefCountedMemory"*)***
  %149 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %148, align 8
  %150 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %149, align 8
  %151 = tail call i8* %150(%"class.base::RefCountedMemory"* %147) #8
  %152 = load i64, i64* %6, align 8
  %153 = getelementptr inbounds i8, i8* %151, i64 %152
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 1
  store i32 %155, i32* %68, align 4
  %156 = load i64, i64* %6, align 8
  %157 = add i64 %156, 4
  store i64 %157, i64* %6, align 8
  %158 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %159 = bitcast %"class.base::RefCountedMemory"* %158 to i8* (%"class.base::RefCountedMemory"*)***
  %160 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %159, align 8
  %161 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %160, align 8
  %162 = tail call i8* %161(%"class.base::RefCountedMemory"* %158) #8
  %163 = load i64, i64* %6, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 1
  store i32 %166, i32* %69, align 4
  %167 = load i64, i64* %6, align 8
  %168 = add i64 %167, 4
  store i64 %168, i64* %6, align 8
  %169 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %60, i64 1
  %170 = icmp eq %"struct.x11::XvMC::SurfaceInfo"* %169, %50
  br i1 %170, label %54, label %59
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateContextERKNS0_20CreateContextRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::CreateContextRequest"* dereferenceable(20)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca %"class.std::__1::back_insert_iterator", align 8
  %14 = alloca i8, align 1
  %15 = alloca %"class.x11::WriteBuffer", align 8
  %16 = alloca i8, align 1
  %17 = alloca i8, align 1
  %18 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %19 = load %"class.x11::Connection"*, %"class.x11::Connection"** %18, align 8
  %20 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %19) #8
  br i1 %20, label %21, label %134

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %134, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.x11::WriteBuffer"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %26) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %15) #8
  %27 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %1, i64 0, i32 2
  %28 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %1, i64 0, i32 4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #8
  %29 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %30 = load i8, i8* %29, align 1
  store i8 %30, i8* %16, align 1
  %31 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %16) #8
  %35 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %15, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %36 = load i64, i64* %35, align 8
  %37 = add i64 %36, 1
  store i64 %37, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %17) #8
  store i8 2, i8* %17, align 1
  %38 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #8
  %39 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %39, align 8
  %40 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %17) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #8
  %41 = load i64, i64* %35, align 8
  %42 = add i64 %41, 1
  store i64 %42, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %43 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %44 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %45 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %46 = load i64, i64* %35, align 8
  %47 = add i64 %46, 1
  store i64 %47, i64* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %44, align 8
  %48 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %49 = load i64, i64* %35, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %35, align 8
  %51 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %1, i64 0, i32 3
  %53 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %1, i64 0, i32 5
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %54 = bitcast %"struct.x11::XvMC::CreateContextRequest"* %1 to i8*
  %55 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #8
  %56 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %56, align 8
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %54) #8
  %58 = getelementptr inbounds i8, i8* %54, i64 1
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %58) #8
  %60 = getelementptr inbounds i8, i8* %54, i64 2
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %60) #8
  %62 = getelementptr inbounds i8, i8* %54, i64 3
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* dereferenceable(1) %62) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #8
  %64 = load i64, i64* %35, align 8
  %65 = add i64 %64, 4
  store i64 %65, i64* %35, align 8
  %66 = bitcast i32* %51 to i8*
  %67 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #8
  %68 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %68, align 8
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %66) #8
  %70 = getelementptr inbounds i8, i8* %66, i64 1
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %70) #8
  %72 = getelementptr inbounds i8, i8* %66, i64 2
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %72) #8
  %74 = getelementptr inbounds i8, i8* %66, i64 3
  %75 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %74) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #8
  %76 = load i64, i64* %35, align 8
  %77 = add i64 %76, 4
  store i64 %77, i64* %35, align 8
  %78 = bitcast i32* %27 to i8*
  %79 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #8
  %80 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %80, align 8
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %78) #8
  %82 = getelementptr inbounds i8, i8* %78, i64 1
  %83 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %82) #8
  %84 = getelementptr inbounds i8, i8* %78, i64 2
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %84) #8
  %86 = getelementptr inbounds i8, i8* %78, i64 3
  %87 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %86) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #8
  %88 = load i64, i64* %35, align 8
  %89 = add i64 %88, 4
  store i64 %89, i64* %35, align 8
  %90 = bitcast i16* %52 to i8*
  %91 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #8
  %92 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %92, align 8
  %93 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %90) #8
  %94 = getelementptr inbounds i8, i8* %90, i64 1
  %95 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %94) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #8
  %96 = load i64, i64* %35, align 8
  %97 = add i64 %96, 2
  store i64 %97, i64* %35, align 8
  %98 = bitcast i16* %28 to i8*
  %99 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #8
  %100 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %100, align 8
  %101 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %98) #8
  %102 = getelementptr inbounds i8, i8* %98, i64 1
  %103 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %102) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #8
  %104 = load i64, i64* %35, align 8
  %105 = add i64 %104, 2
  store i64 %105, i64* %35, align 8
  %106 = bitcast i32* %53 to i8*
  %107 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #8
  %108 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %108, align 8
  %109 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %106) #8
  %110 = getelementptr inbounds i8, i8* %106, i64 1
  %111 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %110) #8
  %112 = getelementptr inbounds i8, i8* %106, i64 2
  %113 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %112) #8
  %114 = getelementptr inbounds i8, i8* %106, i64 3
  %115 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %114) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #8
  %116 = load i64, i64* %35, align 8
  %117 = add i64 %116, 4
  store i64 %117, i64* %35, align 8
  %118 = sub i64 0, %116
  %119 = and i64 %118, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %14) #8
  store i8 0, i8* %14, align 1
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %25
  %122 = bitcast %"class.std::__1::back_insert_iterator"* %13 to i8*
  %123 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %13, i64 0, i32 0
  br label %124

124:                                              ; preds = %124, %121
  %125 = phi i64 [ 0, %121 ], [ %129, %124 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #8
  store %"class.std::__1::vector.270"* %31, %"class.std::__1::vector.270"** %123, align 8
  %126 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %13, i8* nonnull dereferenceable(1) %14) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #8
  %127 = load i64, i64* %35, align 8
  %128 = add i64 %127, 1
  store i64 %128, i64* %35, align 8
  %129 = add nuw nsw i64 %125, 1
  %130 = icmp eq i64 %129, %119
  br i1 %130, label %131, label %124

131:                                              ; preds = %124, %25
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %14) #8
  %132 = load %"class.x11::Connection"*, %"class.x11::Connection"** %18, align 8
  %133 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %132, %"class.x11::WriteBuffer"* nonnull %15, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.2, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %17) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %26) #8
  br label %134

134:                                              ; preds = %2, %21, %131
  %135 = phi %"class.x11::Connection::FutureImpl"* [ %133, %131 ], [ null, %21 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateContextERKNS0_7ContextERKNS_2Xv4PortERKNS0_7SurfaceERKtSC_RKj(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"struct.x11::XvMC::CreateContextRequest", align 4
  %9 = bitcast %"struct.x11::XvMC::CreateContextRequest"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 0
  %11 = load i32, i32* %1, align 4
  store i32 %11, i32* %10, align 4
  %12 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 1
  %13 = load i32, i32* %2, align 4
  store i32 %13, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 2
  %15 = load i32, i32* %3, align 4
  store i32 %15, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 3
  %17 = load i16, i16* %4, align 2
  store i16 %17, i16* %16, align 4
  %18 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 4
  %19 = load i16, i16* %5, align 2
  store i16 %19, i16* %18, align 2
  %20 = getelementptr inbounds %"struct.x11::XvMC::CreateContextRequest", %"struct.x11::XvMC::CreateContextRequest"* %8, i64 0, i32 5
  %21 = load i32, i32* %6, align 4
  store i32 %21, i32* %20, align 4
  %22 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateContextERKNS0_20CreateContextRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::CreateContextRequest"* nonnull dereferenceable(20) %8)
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %9) #8
  ret %"class.x11::Connection::FutureImpl"* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::CreateContextReply"* @_ZN3x116detail9ReadReplyINS_4XvMC18CreateContextReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  %3 = bitcast i8* %2 to %"struct.x11::XvMC::CreateContextReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 2
  %6 = bitcast i8* %5 to i16*
  %7 = getelementptr inbounds i8, i8* %2, i64 4
  %8 = bitcast i8* %7 to i16*
  %9 = getelementptr inbounds i8, i8* %2, i64 8
  %10 = bitcast i8* %9 to i32*
  %11 = getelementptr inbounds i8, i8* %2, i64 16
  %12 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %14 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %15 = bitcast %"class.base::RefCountedMemory"* %14 to i8* (%"class.base::RefCountedMemory"*)***
  %16 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %15, align 8
  %17 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %16, align 8
  %18 = tail call i8* %17(%"class.base::RefCountedMemory"* %14) #8
  %19 = load i64, i64* %12, align 8
  %20 = add i64 %19, 2
  store i64 %20, i64* %12, align 8
  %21 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %22 = bitcast %"class.base::RefCountedMemory"* %21 to i8* (%"class.base::RefCountedMemory"*)***
  %23 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %22, align 8
  %24 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %23, align 8
  %25 = tail call i8* %24(%"class.base::RefCountedMemory"* %21) #8
  %26 = load i64, i64* %12, align 8
  %27 = getelementptr inbounds i8, i8* %25, i64 %26
  %28 = bitcast i8* %27 to i16*
  %29 = load i16, i16* %28, align 1
  store i16 %29, i16* %4, align 2
  %30 = add i64 %26, 2
  store i64 %30, i64* %12, align 8
  %31 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %32 = bitcast %"class.base::RefCountedMemory"* %31 to i8* (%"class.base::RefCountedMemory"*)***
  %33 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %32, align 8
  %34 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %33, align 8
  %35 = tail call i8* %34(%"class.base::RefCountedMemory"* %31) #8
  %36 = load i64, i64* %12, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 %36
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 1
  %40 = add i64 %36, 4
  store i64 %40, i64* %12, align 8
  %41 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %42 = bitcast %"class.base::RefCountedMemory"* %41 to i8* (%"class.base::RefCountedMemory"*)***
  %43 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %42, align 8
  %44 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %43, align 8
  %45 = tail call i8* %44(%"class.base::RefCountedMemory"* %41) #8
  %46 = load i64, i64* %12, align 8
  %47 = getelementptr inbounds i8, i8* %45, i64 %46
  %48 = bitcast i8* %47 to i16*
  %49 = load i16, i16* %48, align 1
  store i16 %49, i16* %6, align 2
  %50 = add i64 %46, 2
  store i64 %50, i64* %12, align 8
  %51 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %52 = bitcast %"class.base::RefCountedMemory"* %51 to i8* (%"class.base::RefCountedMemory"*)***
  %53 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %52, align 8
  %54 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %53, align 8
  %55 = tail call i8* %54(%"class.base::RefCountedMemory"* %51) #8
  %56 = load i64, i64* %12, align 8
  %57 = getelementptr inbounds i8, i8* %55, i64 %56
  %58 = bitcast i8* %57 to i16*
  %59 = load i16, i16* %58, align 1
  store i16 %59, i16* %8, align 2
  %60 = add i64 %56, 2
  store i64 %60, i64* %12, align 8
  %61 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %62 = bitcast %"class.base::RefCountedMemory"* %61 to i8* (%"class.base::RefCountedMemory"*)***
  %63 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %62, align 8
  %64 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %63, align 8
  %65 = tail call i8* %64(%"class.base::RefCountedMemory"* %61) #8
  %66 = load i64, i64* %12, align 8
  %67 = getelementptr inbounds i8, i8* %65, i64 %66
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  store i32 %69, i32* %10, align 4
  %70 = add i64 %66, 24
  store i64 %70, i64* %12, align 8
  %71 = icmp eq i32 %39, 0
  br i1 %71, label %81, label %72

72:                                               ; preds = %1
  %73 = zext i32 %39 to i64
  %74 = getelementptr inbounds i8, i8* %2, i64 24
  %75 = bitcast i8* %74 to i32**
  %76 = bitcast i8* %11 to %"class.std::__1::vector.308"*
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.308"* %76, i64 %73) #8
  %77 = bitcast i8* %11 to i32**
  %78 = load i32*, i32** %77, align 8
  %79 = load i32*, i32** %75, align 8
  %80 = icmp eq i32* %78, %79
  br i1 %80, label %81, label %88

81:                                               ; preds = %1, %72
  %82 = load i64, i64* %12, align 8
  br label %83

83:                                               ; preds = %88, %81
  %84 = phi i64 [ %82, %81 ], [ %100, %88 ]
  %85 = sub i64 0, %84
  %86 = and i64 %85, 3
  %87 = add i64 %86, %84
  store i64 %87, i64* %12, align 8
  ret %"struct.x11::XvMC::CreateContextReply"* %3

88:                                               ; preds = %72, %88
  %89 = phi i32* [ %101, %88 ], [ %78, %72 ]
  %90 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %13, align 8
  %91 = bitcast %"class.base::RefCountedMemory"* %90 to i8* (%"class.base::RefCountedMemory"*)***
  %92 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %91, align 8
  %93 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %92, align 8
  %94 = tail call i8* %93(%"class.base::RefCountedMemory"* %90) #8
  %95 = load i64, i64* %12, align 8
  %96 = getelementptr inbounds i8, i8* %94, i64 %95
  %97 = bitcast i8* %96 to i32*
  %98 = load i32, i32* %97, align 1
  store i32 %98, i32* %89, align 4
  %99 = load i64, i64* %12, align 8
  %100 = add i64 %99, 4
  store i64 %100, i64* %12, align 8
  %101 = getelementptr inbounds i32, i32* %89, i64 1
  %102 = icmp eq i32* %101, %79
  br i1 %102, label %83, label %88
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroyContextERKNS0_21DestroyContextRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::DestroyContextRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 3, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XvMC::DestroyContextRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroyContextERKNS0_7ContextE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XvMC::DestroyContextRequest", align 4
  %4 = bitcast %"struct.x11::XvMC::DestroyContextRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XvMC::DestroyContextRequest", %"struct.x11::XvMC::DestroyContextRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroyContextERKNS0_21DestroyContextRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::DestroyContextRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateSurfaceERKNS0_20CreateSurfaceRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::CreateSurfaceRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 4, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XvMC::CreateSurfaceRequest", %"struct.x11::XvMC::CreateSurfaceRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XvMC::CreateSurfaceRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateSurfaceERKNS0_7SurfaceERKNS0_7ContextE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XvMC::CreateSurfaceRequest", align 4
  %5 = bitcast %"struct.x11::XvMC::CreateSurfaceRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XvMC::CreateSurfaceRequest", %"struct.x11::XvMC::CreateSurfaceRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XvMC::CreateSurfaceRequest", %"struct.x11::XvMC::CreateSurfaceRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC13CreateSurfaceERKNS0_20CreateSurfaceRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::CreateSurfaceRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::CreateSurfaceReply"* @_ZN3x116detail9ReadReplyINS_4XvMC18CreateSurfaceReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"* nocapture) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::XvMC::CreateSurfaceReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = getelementptr inbounds i8, i8* %29, i64 %30
  %32 = bitcast i8* %31 to i32*
  %33 = load i32, i32* %32, align 1
  %34 = add i64 %30, 28
  store i64 %34, i64* %6, align 8
  %35 = icmp eq i32 %33, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %1
  %37 = zext i32 %33 to i64
  %38 = getelementptr inbounds i8, i8* %2, i64 16
  %39 = bitcast i8* %38 to i32**
  %40 = bitcast i8* %5 to %"class.std::__1::vector.308"*
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.308"* %40, i64 %37) #8
  %41 = bitcast i8* %5 to i32**
  %42 = load i32*, i32** %41, align 8
  %43 = load i32*, i32** %39, align 8
  %44 = icmp eq i32* %42, %43
  br i1 %44, label %45, label %52

45:                                               ; preds = %1, %36
  %46 = load i64, i64* %6, align 8
  br label %47

47:                                               ; preds = %52, %45
  %48 = phi i64 [ %46, %45 ], [ %64, %52 ]
  %49 = sub i64 0, %48
  %50 = and i64 %49, 3
  %51 = add i64 %50, %48
  store i64 %51, i64* %6, align 8
  ret %"struct.x11::XvMC::CreateSurfaceReply"* %3

52:                                               ; preds = %36, %52
  %53 = phi i32* [ %65, %52 ], [ %42, %36 ]
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %55 = bitcast %"class.base::RefCountedMemory"* %54 to i8* (%"class.base::RefCountedMemory"*)***
  %56 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %55, align 8
  %57 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %56, align 8
  %58 = tail call i8* %57(%"class.base::RefCountedMemory"* %54) #8
  %59 = load i64, i64* %6, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = bitcast i8* %60 to i32*
  %62 = load i32, i32* %61, align 1
  store i32 %62, i32* %53, align 4
  %63 = load i64, i64* %6, align 8
  %64 = add i64 %63, 4
  store i64 %64, i64* %6, align 8
  %65 = getelementptr inbounds i32, i32* %53, i64 1
  %66 = icmp eq i32* %65, %43
  br i1 %66, label %47, label %52
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroySurfaceERKNS0_21DestroySurfaceRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::DestroySurfaceRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 5, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XvMC::DestroySurfaceRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.5, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroySurfaceERKNS0_7SurfaceE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XvMC::DestroySurfaceRequest", align 4
  %4 = bitcast %"struct.x11::XvMC::DestroySurfaceRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XvMC::DestroySurfaceRequest", %"struct.x11::XvMC::DestroySurfaceRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC14DestroySurfaceERKNS0_21DestroySurfaceRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::DestroySurfaceRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16CreateSubpictureERKNS0_23CreateSubpictureRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::CreateSubpictureRequest"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.std::__1::back_insert_iterator", align 8
  %11 = alloca %"class.std::__1::back_insert_iterator", align 8
  %12 = alloca %"class.std::__1::back_insert_iterator", align 8
  %13 = alloca i8, align 1
  %14 = alloca %"class.x11::WriteBuffer", align 8
  %15 = alloca i8, align 1
  %16 = alloca i8, align 1
  %17 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %18 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %19 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %18) #8
  br i1 %19, label %20, label %120

20:                                               ; preds = %2
  %21 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %120, label %24

24:                                               ; preds = %20
  %25 = bitcast %"class.x11::WriteBuffer"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %25) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %14) #8
  %26 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %1, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %1, i64 0, i32 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %15) #8
  %28 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %29 = load i8, i8* %28, align 1
  store i8 %29, i8* %15, align 1
  %30 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %14, i64 0, i32 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %11, i8* nonnull dereferenceable(1) %15) #8
  %34 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %14, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %35 = load i64, i64* %34, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #8
  store i8 6, i8* %16, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %10, i8* nonnull dereferenceable(1) %16) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %34, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %42 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %43 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %43, align 8
  %44 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  %45 = load i64, i64* %34, align 8
  %46 = add i64 %45, 1
  store i64 %46, i64* %34, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #8
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %43, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #8
  %48 = load i64, i64* %34, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %34, align 8
  %50 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %1, i64 0, i32 2
  %51 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %1, i64 0, i32 4
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %52 = bitcast %"struct.x11::XvMC::CreateSubpictureRequest"* %1 to i8*
  %53 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #8
  %54 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %54, align 8
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %52) #8
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %56) #8
  %58 = getelementptr inbounds i8, i8* %52, i64 2
  %59 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %58) #8
  %60 = getelementptr inbounds i8, i8* %52, i64 3
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* dereferenceable(1) %60) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #8
  %62 = load i64, i64* %34, align 8
  %63 = add i64 %62, 4
  store i64 %63, i64* %34, align 8
  %64 = bitcast i32* %26 to i8*
  %65 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #8
  %66 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %66, align 8
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %64) #8
  %68 = getelementptr inbounds i8, i8* %64, i64 1
  %69 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %68) #8
  %70 = getelementptr inbounds i8, i8* %64, i64 2
  %71 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %70) #8
  %72 = getelementptr inbounds i8, i8* %64, i64 3
  %73 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* dereferenceable(1) %72) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #8
  %74 = load i64, i64* %34, align 8
  %75 = add i64 %74, 4
  store i64 %75, i64* %34, align 8
  %76 = bitcast i32* %50 to i8*
  %77 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #8
  %78 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %78, align 8
  %79 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %76) #8
  %80 = getelementptr inbounds i8, i8* %76, i64 1
  %81 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %80) #8
  %82 = getelementptr inbounds i8, i8* %76, i64 2
  %83 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %82) #8
  %84 = getelementptr inbounds i8, i8* %76, i64 3
  %85 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* dereferenceable(1) %84) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #8
  %86 = load i64, i64* %34, align 8
  %87 = add i64 %86, 4
  store i64 %87, i64* %34, align 8
  %88 = bitcast i16* %27 to i8*
  %89 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #8
  %90 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %90, align 8
  %91 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %88) #8
  %92 = getelementptr inbounds i8, i8* %88, i64 1
  %93 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %92) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #8
  %94 = load i64, i64* %34, align 8
  %95 = add i64 %94, 2
  store i64 %95, i64* %34, align 8
  %96 = bitcast i16* %51 to i8*
  %97 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97) #8
  %98 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %98, align 8
  %99 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %96) #8
  %100 = getelementptr inbounds i8, i8* %96, i64 1
  %101 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %100) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97) #8
  %102 = load i64, i64* %34, align 8
  %103 = add i64 %102, 2
  store i64 %103, i64* %34, align 8
  %104 = sub i64 2, %102
  %105 = and i64 %104, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 0, i8* %13, align 1
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %117, label %107

107:                                              ; preds = %24
  %108 = bitcast %"class.std::__1::back_insert_iterator"* %12 to i8*
  %109 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %12, i64 0, i32 0
  br label %110

110:                                              ; preds = %110, %107
  %111 = phi i64 [ 0, %107 ], [ %115, %110 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #8
  store %"class.std::__1::vector.270"* %30, %"class.std::__1::vector.270"** %109, align 8
  %112 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %12, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #8
  %113 = load i64, i64* %34, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %34, align 8
  %115 = add nuw nsw i64 %111, 1
  %116 = icmp eq i64 %115, %105
  br i1 %116, label %117, label %110

117:                                              ; preds = %110, %24
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  %118 = load %"class.x11::Connection"*, %"class.x11::Connection"** %17, align 8
  %119 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %118, %"class.x11::WriteBuffer"* nonnull %14, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %15) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %14) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %25) #8
  br label %120

120:                                              ; preds = %2, %20, %117
  %121 = phi %"class.x11::Connection::FutureImpl"* [ %119, %117 ], [ null, %20 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %121
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16CreateSubpictureERKNS0_10SubPictureERKNS0_7ContextERKjRKtSA_(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4), i16* nocapture readonly dereferenceable(2), i16* nocapture readonly dereferenceable(2)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"struct.x11::XvMC::CreateSubpictureRequest", align 4
  %8 = bitcast %"struct.x11::XvMC::CreateSubpictureRequest"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #8
  %9 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %7, i64 0, i32 0
  %10 = load i32, i32* %1, align 4
  store i32 %10, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %7, i64 0, i32 1
  %12 = load i32, i32* %2, align 4
  store i32 %12, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %7, i64 0, i32 2
  %14 = load i32, i32* %3, align 4
  store i32 %14, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %7, i64 0, i32 3
  %16 = load i16, i16* %4, align 2
  store i16 %16, i16* %15, align 4
  %17 = getelementptr inbounds %"struct.x11::XvMC::CreateSubpictureRequest", %"struct.x11::XvMC::CreateSubpictureRequest"* %7, i64 0, i32 4
  %18 = load i16, i16* %5, align 2
  store i16 %18, i16* %17, align 2
  %19 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC16CreateSubpictureERKNS0_23CreateSubpictureRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::CreateSubpictureRequest"* nonnull dereferenceable(16) %7)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #8
  ret %"class.x11::Connection::FutureImpl"* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::CreateSubpictureReply"* @_ZN3x116detail9ReadReplyINS_4XvMC21CreateSubpictureReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 40) #9
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 40, i1 false) #8
  %3 = bitcast i8* %2 to i16*
  %4 = getelementptr inbounds i8, i8* %2, i64 2
  %5 = bitcast i8* %4 to i16*
  %6 = getelementptr inbounds i8, i8* %2, i64 4
  %7 = bitcast i8* %6 to i16*
  %8 = getelementptr inbounds i8, i8* %2, i64 6
  %9 = bitcast i8* %8 to i16*
  %10 = getelementptr inbounds i8, i8* %2, i64 8
  %11 = bitcast i8* %10 to i16*
  %12 = getelementptr inbounds i8, i8* %2, i64 16
  %13 = getelementptr inbounds i8, i8* %2, i64 24
  %14 = bitcast i8* %13 to i64*
  %15 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %17 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %18 = bitcast %"class.base::RefCountedMemory"* %17 to i8* (%"class.base::RefCountedMemory"*)***
  %19 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %18, align 8
  %20 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %19, align 8
  %21 = tail call i8* %20(%"class.base::RefCountedMemory"* %17) #8
  %22 = load i64, i64* %15, align 8
  %23 = add i64 %22, 2
  store i64 %23, i64* %15, align 8
  %24 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %25 = bitcast %"class.base::RefCountedMemory"* %24 to i8* (%"class.base::RefCountedMemory"*)***
  %26 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %25, align 8
  %27 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %26, align 8
  %28 = tail call i8* %27(%"class.base::RefCountedMemory"* %24) #8
  %29 = load i64, i64* %15, align 8
  %30 = getelementptr inbounds i8, i8* %28, i64 %29
  %31 = bitcast i8* %30 to i16*
  %32 = load i16, i16* %31, align 1
  store i16 %32, i16* %3, align 2
  %33 = add i64 %29, 2
  store i64 %33, i64* %15, align 8
  %34 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %35 = bitcast %"class.base::RefCountedMemory"* %34 to i8* (%"class.base::RefCountedMemory"*)***
  %36 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %35, align 8
  %37 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %36, align 8
  %38 = tail call i8* %37(%"class.base::RefCountedMemory"* %34) #8
  %39 = load i64, i64* %15, align 8
  %40 = getelementptr inbounds i8, i8* %38, i64 %39
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 1
  %43 = add i64 %39, 4
  store i64 %43, i64* %15, align 8
  %44 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %45 = bitcast %"class.base::RefCountedMemory"* %44 to i8* (%"class.base::RefCountedMemory"*)***
  %46 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %45, align 8
  %47 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %46, align 8
  %48 = tail call i8* %47(%"class.base::RefCountedMemory"* %44) #8
  %49 = load i64, i64* %15, align 8
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 1
  store i16 %52, i16* %5, align 2
  %53 = add i64 %49, 2
  store i64 %53, i64* %15, align 8
  %54 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %55 = bitcast %"class.base::RefCountedMemory"* %54 to i8* (%"class.base::RefCountedMemory"*)***
  %56 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %55, align 8
  %57 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %56, align 8
  %58 = tail call i8* %57(%"class.base::RefCountedMemory"* %54) #8
  %59 = load i64, i64* %15, align 8
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = bitcast i8* %60 to i16*
  %62 = load i16, i16* %61, align 1
  store i16 %62, i16* %7, align 2
  %63 = add i64 %59, 2
  store i64 %63, i64* %15, align 8
  %64 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %65 = bitcast %"class.base::RefCountedMemory"* %64 to i8* (%"class.base::RefCountedMemory"*)***
  %66 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %65, align 8
  %67 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %66, align 8
  %68 = tail call i8* %67(%"class.base::RefCountedMemory"* %64) #8
  %69 = load i64, i64* %15, align 8
  %70 = getelementptr inbounds i8, i8* %68, i64 %69
  %71 = bitcast i8* %70 to i16*
  %72 = load i16, i16* %71, align 1
  store i16 %72, i16* %9, align 2
  %73 = add i64 %69, 2
  store i64 %73, i64* %15, align 8
  %74 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %75 = bitcast %"class.base::RefCountedMemory"* %74 to i8* (%"class.base::RefCountedMemory"*)***
  %76 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %75, align 8
  %77 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %76, align 8
  %78 = tail call i8* %77(%"class.base::RefCountedMemory"* %74) #8
  %79 = load i64, i64* %15, align 8
  %80 = getelementptr inbounds i8, i8* %78, i64 %79
  %81 = bitcast i8* %80 to i16*
  %82 = load i16, i16* %81, align 1
  store i16 %82, i16* %11, align 2
  %83 = add i64 %79, 2
  store i64 %83, i64* %15, align 8
  %84 = getelementptr inbounds i8, i8* %2, i64 10
  %85 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %86 = bitcast %"class.base::RefCountedMemory"* %85 to i8* (%"class.base::RefCountedMemory"*)***
  %87 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %86, align 8
  %88 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %87, align 8
  %89 = tail call i8* %88(%"class.base::RefCountedMemory"* %85) #8
  %90 = load i64, i64* %15, align 8
  %91 = getelementptr inbounds i8, i8* %89, i64 %90
  %92 = load i8, i8* %91, align 1
  store i8 %92, i8* %84, align 1
  %93 = add i64 %90, 1
  store i64 %93, i64* %15, align 8
  %94 = getelementptr inbounds i8, i8* %2, i64 11
  %95 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %96 = bitcast %"class.base::RefCountedMemory"* %95 to i8* (%"class.base::RefCountedMemory"*)***
  %97 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %96, align 8
  %98 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %97, align 8
  %99 = tail call i8* %98(%"class.base::RefCountedMemory"* %95) #8
  %100 = load i64, i64* %15, align 8
  %101 = getelementptr inbounds i8, i8* %99, i64 %100
  %102 = load i8, i8* %101, align 1
  store i8 %102, i8* %94, align 1
  %103 = add i64 %100, 1
  store i64 %103, i64* %15, align 8
  %104 = getelementptr inbounds i8, i8* %2, i64 12
  %105 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %106 = bitcast %"class.base::RefCountedMemory"* %105 to i8* (%"class.base::RefCountedMemory"*)***
  %107 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %106, align 8
  %108 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %107, align 8
  %109 = tail call i8* %108(%"class.base::RefCountedMemory"* %105) #8
  %110 = load i64, i64* %15, align 8
  %111 = getelementptr inbounds i8, i8* %109, i64 %110
  %112 = load i8, i8* %111, align 1
  store i8 %112, i8* %104, align 1
  %113 = add i64 %110, 1
  store i64 %113, i64* %15, align 8
  %114 = getelementptr inbounds i8, i8* %2, i64 13
  %115 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %116 = bitcast %"class.base::RefCountedMemory"* %115 to i8* (%"class.base::RefCountedMemory"*)***
  %117 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %116, align 8
  %118 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %117, align 8
  %119 = tail call i8* %118(%"class.base::RefCountedMemory"* %115) #8
  %120 = load i64, i64* %15, align 8
  %121 = getelementptr inbounds i8, i8* %119, i64 %120
  %122 = load i8, i8* %121, align 1
  store i8 %122, i8* %114, align 1
  %123 = bitcast i8* %2 to %"struct.x11::XvMC::CreateSubpictureReply"*
  %124 = bitcast i8* %13 to i32**
  %125 = bitcast i8* %12 to i64*
  %126 = add i64 %120, 13
  store i64 %126, i64* %15, align 8
  %127 = zext i32 %42 to i64
  %128 = load i64, i64* %14, align 8
  %129 = load i64, i64* %125, align 8
  %130 = sub i64 %128, %129
  %131 = ashr exact i64 %130, 2
  %132 = icmp ult i64 %131, %127
  %133 = inttoptr i64 %129 to i32*
  br i1 %132, label %134, label %140

134:                                              ; preds = %1
  %135 = bitcast i8* %12 to %"class.std::__1::vector.308"*
  %136 = sub nsw i64 %127, %131
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.308"* %135, i64 %136) #8
  %137 = bitcast i8* %12 to i32**
  %138 = load i32*, i32** %137, align 8
  %139 = load i32*, i32** %124, align 8
  br label %145

140:                                              ; preds = %1
  %141 = inttoptr i64 %128 to i32*
  %142 = icmp ugt i64 %131, %127
  br i1 %142, label %143, label %145

143:                                              ; preds = %140
  %144 = getelementptr inbounds i32, i32* %133, i64 %127
  store i32* %144, i32** %124, align 8
  br label %145

145:                                              ; preds = %134, %140, %143
  %146 = phi i32* [ %139, %134 ], [ %141, %140 ], [ %144, %143 ]
  %147 = phi i32* [ %138, %134 ], [ %133, %140 ], [ %133, %143 ]
  %148 = icmp eq i32* %147, %146
  br i1 %148, label %149, label %156

149:                                              ; preds = %145
  %150 = load i64, i64* %15, align 8
  br label %151

151:                                              ; preds = %156, %149
  %152 = phi i64 [ %150, %149 ], [ %168, %156 ]
  %153 = sub i64 0, %152
  %154 = and i64 %153, 3
  %155 = add i64 %154, %152
  store i64 %155, i64* %15, align 8
  ret %"struct.x11::XvMC::CreateSubpictureReply"* %123

156:                                              ; preds = %145, %156
  %157 = phi i32* [ %169, %156 ], [ %147, %145 ]
  %158 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %16, align 8
  %159 = bitcast %"class.base::RefCountedMemory"* %158 to i8* (%"class.base::RefCountedMemory"*)***
  %160 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %159, align 8
  %161 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %160, align 8
  %162 = tail call i8* %161(%"class.base::RefCountedMemory"* %158) #8
  %163 = load i64, i64* %15, align 8
  %164 = getelementptr inbounds i8, i8* %162, i64 %163
  %165 = bitcast i8* %164 to i32*
  %166 = load i32, i32* %165, align 1
  store i32 %166, i32* %157, align 4
  %167 = load i64, i64* %15, align 8
  %168 = add i64 %167, 4
  store i64 %168, i64* %15, align 8
  %169 = getelementptr inbounds i32, i32* %157, i64 1
  %170 = icmp eq i32* %169, %146
  br i1 %170, label %151, label %156
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC17DestroySubpictureERKNS0_24DestroySubpictureRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::DestroySubpictureRequest"* dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca i8, align 1
  %6 = alloca %"class.std::__1::back_insert_iterator", align 8
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca i8, align 1
  %10 = alloca %"class.x11::WriteBuffer", align 8
  %11 = alloca i8, align 1
  %12 = alloca i8, align 1
  %13 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %14 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %15 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %14) #8
  br i1 %15, label %16, label %72

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %72, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.x11::WriteBuffer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %21) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #8
  %22 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %23 = load i8, i8* %22, align 1
  store i8 %23, i8* %11, align 1
  %24 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 1
  %25 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #8
  %26 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %26, align 8
  %27 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %11) #8
  %28 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %10, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #8
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  store i8 7, i8* %12, align 1
  %31 = bitcast %"class.std::__1::back_insert_iterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #8
  %32 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %6, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %32, align 8
  %33 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %6, i8* nonnull dereferenceable(1) %12) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #8
  %34 = load i64, i64* %28, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #8
  store i8 0, i8* %5, align 1
  %36 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  %37 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %38 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %39 = load i64, i64* %28, align 8
  %40 = add i64 %39, 1
  store i64 %40, i64* %28, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %37, align 8
  %41 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* nonnull dereferenceable(1) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #8
  %42 = load i64, i64* %28, align 8
  %43 = add i64 %42, 1
  store i64 %43, i64* %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #8
  %44 = bitcast %"struct.x11::XvMC::DestroySubpictureRequest"* %1 to i8*
  %45 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #8
  %46 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %46, align 8
  %47 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %44) #8
  %48 = getelementptr inbounds i8, i8* %44, i64 1
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %48) #8
  %50 = getelementptr inbounds i8, i8* %44, i64 2
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %44, i64 3
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %52) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #8
  %54 = load i64, i64* %28, align 8
  %55 = add i64 %54, 4
  store i64 %55, i64* %28, align 8
  %56 = sub i64 0, %54
  %57 = and i64 %56, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %9) #8
  store i8 0, i8* %9, align 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %69, label %59

59:                                               ; preds = %20
  %60 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  %61 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  br label %62

62:                                               ; preds = %62, %59
  %63 = phi i64 [ 0, %59 ], [ %67, %62 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #8
  store %"class.std::__1::vector.270"* %24, %"class.std::__1::vector.270"** %61, align 8
  %64 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #8
  %65 = load i64, i64* %28, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %28, align 8
  %67 = add nuw nsw i64 %63, 1
  %68 = icmp eq i64 %67, %57
  br i1 %68, label %69, label %62

69:                                               ; preds = %62, %20
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %9) #8
  %70 = load %"class.x11::Connection"*, %"class.x11::Connection"** %13, align 8
  %71 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %70, %"class.x11::WriteBuffer"* nonnull %10, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0), i1 zeroext false, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %10) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %21) #8
  br label %72

72:                                               ; preds = %2, %16, %69
  %73 = phi %"class.x11::Connection::FutureImpl"* [ %71, %69 ], [ null, %16 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %73
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC17DestroySubpictureERKNS0_10SubPictureE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.x11::XvMC::DestroySubpictureRequest", align 4
  %4 = bitcast %"struct.x11::XvMC::DestroySubpictureRequest"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  %5 = getelementptr inbounds %"struct.x11::XvMC::DestroySubpictureRequest", %"struct.x11::XvMC::DestroySubpictureRequest"* %3, i64 0, i32 0
  %6 = load i32, i32* %1, align 4
  store i32 %6, i32* %5, align 4
  %7 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC17DestroySubpictureERKNS0_24DestroySubpictureRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::DestroySubpictureRequest"* nonnull dereferenceable(4) %3)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret %"class.x11::Connection::FutureImpl"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC19ListSubpictureTypesERKNS0_26ListSubpictureTypesRequestE(%"class.x11::XvMC"* nocapture readonly, %"struct.x11::XvMC::ListSubpictureTypesRequest"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::back_insert_iterator", align 8
  %4 = alloca %"class.std::__1::back_insert_iterator", align 8
  %5 = alloca %"class.std::__1::back_insert_iterator", align 8
  %6 = alloca i8, align 1
  %7 = alloca %"class.std::__1::back_insert_iterator", align 8
  %8 = alloca %"class.std::__1::back_insert_iterator", align 8
  %9 = alloca %"class.std::__1::back_insert_iterator", align 8
  %10 = alloca i8, align 1
  %11 = alloca %"class.x11::WriteBuffer", align 8
  %12 = alloca i8, align 1
  %13 = alloca i8, align 1
  %14 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 0
  %15 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %16 = tail call zeroext i1 @_ZNK3x1110Connection5ReadyEv(%"class.x11::Connection"* %15) #8
  br i1 %16, label %17, label %86

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %86, label %21

21:                                               ; preds = %17
  %22 = bitcast %"class.x11::WriteBuffer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %22) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 80, i1 false)
  call void @_ZN3x1111WriteBufferC1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %12) #8
  %23 = getelementptr inbounds %"class.x11::XvMC", %"class.x11::XvMC"* %0, i64 0, i32 1, i32 2
  %24 = load i8, i8* %23, align 1
  store i8 %24, i8* %12, align 1
  %25 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 1
  %26 = bitcast %"class.std::__1::back_insert_iterator"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #8
  %27 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %8, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %27, align 8
  %28 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %8, i8* nonnull dereferenceable(1) %12) #8
  %29 = getelementptr inbounds %"class.x11::WriteBuffer", %"class.x11::WriteBuffer"* %11, i64 0, i32 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #8
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %13) #8
  store i8 8, i8* %13, align 1
  %32 = bitcast %"class.std::__1::back_insert_iterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %7, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %33, align 8
  %34 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %7, i8* nonnull dereferenceable(1) %13) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  %35 = load i64, i64* %29, align 8
  %36 = add i64 %35, 1
  store i64 %36, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #8
  store i8 0, i8* %6, align 1
  %37 = bitcast %"class.std::__1::back_insert_iterator"* %5 to i8*
  %38 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %39 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %40 = load i64, i64* %29, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %38, align 8
  %42 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %5, i8* nonnull dereferenceable(1) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #8
  %43 = load i64, i64* %29, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %29, align 8
  %45 = getelementptr inbounds %"struct.x11::XvMC::ListSubpictureTypesRequest", %"struct.x11::XvMC::ListSubpictureTypesRequest"* %1, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #8
  %46 = bitcast %"struct.x11::XvMC::ListSubpictureTypesRequest"* %1 to i8*
  %47 = bitcast %"class.std::__1::back_insert_iterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  %48 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %4, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %48, align 8
  %49 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %46) #8
  %50 = getelementptr inbounds i8, i8* %46, i64 1
  %51 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %50) #8
  %52 = getelementptr inbounds i8, i8* %46, i64 2
  %53 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %52) #8
  %54 = getelementptr inbounds i8, i8* %46, i64 3
  %55 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %4, i8* dereferenceable(1) %54) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  %56 = load i64, i64* %29, align 8
  %57 = add i64 %56, 4
  store i64 %57, i64* %29, align 8
  %58 = bitcast i32* %45 to i8*
  %59 = bitcast %"class.std::__1::back_insert_iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #8
  %60 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %3, i64 0, i32 0
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %60, align 8
  %61 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %58) #8
  %62 = getelementptr inbounds i8, i8* %58, i64 1
  %63 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %62) #8
  %64 = getelementptr inbounds i8, i8* %58, i64 2
  %65 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %64) #8
  %66 = getelementptr inbounds i8, i8* %58, i64 3
  %67 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %3, i8* dereferenceable(1) %66) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #8
  %68 = load i64, i64* %29, align 8
  %69 = add i64 %68, 4
  store i64 %69, i64* %29, align 8
  %70 = sub i64 0, %68
  %71 = and i64 %70, 3
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #8
  store i8 0, i8* %10, align 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %83, label %73

73:                                               ; preds = %21
  %74 = bitcast %"class.std::__1::back_insert_iterator"* %9 to i8*
  %75 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %9, i64 0, i32 0
  br label %76

76:                                               ; preds = %76, %73
  %77 = phi i64 [ 0, %73 ], [ %81, %76 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74) #8
  store %"class.std::__1::vector.270"* %25, %"class.std::__1::vector.270"** %75, align 8
  %78 = call dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"* nonnull %9, i8* nonnull dereferenceable(1) %10) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74) #8
  %79 = load i64, i64* %29, align 8
  %80 = add i64 %79, 1
  store i64 %80, i64* %29, align 8
  %81 = add nuw nsw i64 %77, 1
  %82 = icmp eq i64 %81, %71
  br i1 %82, label %83, label %76

83:                                               ; preds = %76, %21
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #8
  %84 = load %"class.x11::Connection"*, %"class.x11::Connection"** %14, align 8
  %85 = call %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"* %84, %"class.x11::WriteBuffer"* nonnull %11, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.8, i64 0, i64 0), i1 zeroext true, i1 zeroext false) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %13) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %12) #8
  call void @_ZN3x1111WriteBufferD1Ev(%"class.x11::WriteBuffer"* nonnull %11) #8
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %22) #8
  br label %86

86:                                               ; preds = %2, %17, %83
  %87 = phi %"class.x11::Connection::FutureImpl"* [ %85, %83 ], [ null, %17 ], [ null, %2 ]
  ret %"class.x11::Connection::FutureImpl"* %87
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC19ListSubpictureTypesERKNS_2Xv4PortERKNS0_7SurfaceE(%"class.x11::XvMC"* nocapture readonly, i32* nocapture readonly dereferenceable(4), i32* nocapture readonly dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.x11::XvMC::ListSubpictureTypesRequest", align 4
  %5 = bitcast %"struct.x11::XvMC::ListSubpictureTypesRequest"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"struct.x11::XvMC::ListSubpictureTypesRequest", %"struct.x11::XvMC::ListSubpictureTypesRequest"* %4, i64 0, i32 0
  %7 = load i32, i32* %1, align 4
  store i32 %7, i32* %6, align 4
  %8 = getelementptr inbounds %"struct.x11::XvMC::ListSubpictureTypesRequest", %"struct.x11::XvMC::ListSubpictureTypesRequest"* %4, i64 0, i32 1
  %9 = load i32, i32* %2, align 4
  store i32 %9, i32* %8, align 4
  %10 = call %"class.x11::Connection::FutureImpl"* @_ZN3x114XvMC19ListSubpictureTypesERKNS0_26ListSubpictureTypesRequestE(%"class.x11::XvMC"* %0, %"struct.x11::XvMC::ListSubpictureTypesRequest"* nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  ret %"class.x11::Connection::FutureImpl"* %10
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.x11::XvMC::ListSubpictureTypesReply"* @_ZN3x116detail9ReadReplyINS_4XvMC24ListSubpictureTypesReplyEEENSt3__110unique_ptrIT_NS4_14default_deleteIS6_EEEEPNS_10ReadBufferE(%"struct.x11::ReadBuffer"*) local_unnamed_addr #0 {
  %2 = tail call i8* @_Znwm(i64 32) #9
  %3 = bitcast i8* %2 to %"struct.x11::XvMC::ListSubpictureTypesReply"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 32, i1 false) #8
  %4 = bitcast i8* %2 to i16*
  %5 = getelementptr inbounds i8, i8* %2, i64 8
  %6 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.x11::ReadBuffer", %"struct.x11::ReadBuffer"* %0, i64 0, i32 0, i32 0
  %8 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %9 = bitcast %"class.base::RefCountedMemory"* %8 to i8* (%"class.base::RefCountedMemory"*)***
  %10 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %9, align 8
  %11 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %10, align 8
  %12 = tail call i8* %11(%"class.base::RefCountedMemory"* %8) #8
  %13 = load i64, i64* %6, align 8
  %14 = add i64 %13, 2
  store i64 %14, i64* %6, align 8
  %15 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %16 = bitcast %"class.base::RefCountedMemory"* %15 to i8* (%"class.base::RefCountedMemory"*)***
  %17 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %16, align 8
  %18 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %17, align 8
  %19 = tail call i8* %18(%"class.base::RefCountedMemory"* %15) #8
  %20 = load i64, i64* %6, align 8
  %21 = getelementptr inbounds i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to i16*
  %23 = load i16, i16* %22, align 1
  store i16 %23, i16* %4, align 2
  %24 = add i64 %20, 2
  store i64 %24, i64* %6, align 8
  %25 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %26 = bitcast %"class.base::RefCountedMemory"* %25 to i8* (%"class.base::RefCountedMemory"*)***
  %27 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %26, align 8
  %28 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %27, align 8
  %29 = tail call i8* %28(%"class.base::RefCountedMemory"* %25) #8
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, 4
  store i64 %31, i64* %6, align 8
  %32 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %33 = bitcast %"class.base::RefCountedMemory"* %32 to i8* (%"class.base::RefCountedMemory"*)***
  %34 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %33, align 8
  %35 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %34, align 8
  %36 = tail call i8* %35(%"class.base::RefCountedMemory"* %32) #8
  %37 = load i64, i64* %6, align 8
  %38 = getelementptr inbounds i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to i32*
  %40 = load i32, i32* %39, align 1
  %41 = add i64 %37, 24
  store i64 %41, i64* %6, align 8
  %42 = icmp eq i32 %40, 0
  br i1 %42, label %52, label %43

43:                                               ; preds = %1
  %44 = zext i32 %40 to i64
  %45 = getelementptr inbounds i8, i8* %2, i64 16
  %46 = bitcast i8* %45 to %"struct.x11::Xv::ImageFormatInfo"**
  %47 = bitcast i8* %5 to %"class.std::__1::vector.339"*
  tail call void @_ZNSt3__16vectorIN3x112Xv15ImageFormatInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.339"* %47, i64 %44) #8
  %48 = bitcast i8* %5 to %"struct.x11::Xv::ImageFormatInfo"**
  %49 = load %"struct.x11::Xv::ImageFormatInfo"*, %"struct.x11::Xv::ImageFormatInfo"** %48, align 8
  %50 = load %"struct.x11::Xv::ImageFormatInfo"*, %"struct.x11::Xv::ImageFormatInfo"** %46, align 8
  %51 = icmp eq %"struct.x11::Xv::ImageFormatInfo"* %49, %50
  br i1 %51, label %52, label %59

52:                                               ; preds = %1, %43
  %53 = load i64, i64* %6, align 8
  br label %54

54:                                               ; preds = %315, %52
  %55 = phi i64 [ %53, %52 ], [ %320, %315 ]
  %56 = sub i64 0, %55
  %57 = and i64 %56, 3
  %58 = add i64 %57, %55
  store i64 %58, i64* %6, align 8
  ret %"struct.x11::XvMC::ListSubpictureTypesReply"* %3

59:                                               ; preds = %43, %315
  %60 = phi %"struct.x11::Xv::ImageFormatInfo"* [ %321, %315 ], [ %49, %43 ]
  %61 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 2
  %64 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 5
  %65 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 7
  %66 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 9
  %67 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 11
  %68 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 13
  %69 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 15
  %70 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 17
  %71 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 19
  %72 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %73 = bitcast %"class.base::RefCountedMemory"* %72 to i8* (%"class.base::RefCountedMemory"*)***
  %74 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %73, align 8
  %75 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %74, align 8
  %76 = tail call i8* %75(%"class.base::RefCountedMemory"* %72) #8
  %77 = load i64, i64* %6, align 8
  %78 = getelementptr inbounds i8, i8* %76, i64 %77
  %79 = bitcast i8* %78 to i32*
  %80 = load i32, i32* %79, align 1
  store i32 %80, i32* %61, align 4
  %81 = load i64, i64* %6, align 8
  %82 = add i64 %81, 4
  store i64 %82, i64* %6, align 8
  %83 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %84 = bitcast %"class.base::RefCountedMemory"* %83 to i8* (%"class.base::RefCountedMemory"*)***
  %85 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %84, align 8
  %86 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %85, align 8
  %87 = tail call i8* %86(%"class.base::RefCountedMemory"* %83) #8
  %88 = load i64, i64* %6, align 8
  %89 = getelementptr inbounds i8, i8* %87, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = add i64 %88, 1
  store i64 %91, i64* %6, align 8
  %92 = zext i8 %90 to i32
  store i32 %92, i32* %62, align 4
  %93 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %94 = bitcast %"class.base::RefCountedMemory"* %93 to i8* (%"class.base::RefCountedMemory"*)***
  %95 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %94, align 8
  %96 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %95, align 8
  %97 = tail call i8* %96(%"class.base::RefCountedMemory"* %93) #8
  %98 = load i64, i64* %6, align 8
  %99 = getelementptr inbounds i8, i8* %97, i64 %98
  %100 = load i8, i8* %99, align 1
  %101 = add i64 %98, 1
  store i64 %101, i64* %6, align 8
  %102 = zext i8 %100 to i32
  store i32 %102, i32* %63, align 4
  %103 = load i64, i64* %6, align 8
  %104 = add i64 %103, 2
  store i64 %104, i64* %6, align 8
  %105 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 3, i32 0, i64 0
  %106 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 3, i32 0, i64 16
  %107 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %108 = bitcast %"class.base::RefCountedMemory"* %107 to i8* (%"class.base::RefCountedMemory"*)***
  %109 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %108, align 8
  %110 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %109, align 8
  %111 = tail call i8* %110(%"class.base::RefCountedMemory"* %107) #8
  %112 = load i64, i64* %6, align 8
  %113 = getelementptr inbounds i8, i8* %111, i64 %112
  %114 = load i8, i8* %113, align 1
  br label %300

115:                                              ; preds = %300
  %116 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 4
  %117 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 6
  %118 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 8
  %119 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 10
  %120 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 12
  %121 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 14
  %122 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 16
  %123 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 18
  store i8 %314, i8* %116, align 1
  %124 = load i64, i64* %6, align 8
  %125 = add i64 %124, 1
  store i64 %125, i64* %6, align 8
  %126 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %127 = bitcast %"class.base::RefCountedMemory"* %126 to i8* (%"class.base::RefCountedMemory"*)***
  %128 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %127, align 8
  %129 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %128, align 8
  %130 = tail call i8* %129(%"class.base::RefCountedMemory"* %126) #8
  %131 = load i64, i64* %6, align 8
  %132 = getelementptr inbounds i8, i8* %130, i64 %131
  %133 = load i8, i8* %132, align 1
  store i8 %133, i8* %64, align 1
  %134 = load i64, i64* %6, align 8
  %135 = add i64 %134, 3
  store i64 %135, i64* %6, align 8
  %136 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %137 = bitcast %"class.base::RefCountedMemory"* %136 to i8* (%"class.base::RefCountedMemory"*)***
  %138 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %137, align 8
  %139 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %138, align 8
  %140 = tail call i8* %139(%"class.base::RefCountedMemory"* %136) #8
  %141 = load i64, i64* %6, align 8
  %142 = getelementptr inbounds i8, i8* %140, i64 %141
  %143 = load i8, i8* %142, align 1
  store i8 %143, i8* %117, align 1
  %144 = load i64, i64* %6, align 8
  %145 = add i64 %144, 4
  store i64 %145, i64* %6, align 8
  %146 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %147 = bitcast %"class.base::RefCountedMemory"* %146 to i8* (%"class.base::RefCountedMemory"*)***
  %148 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %147, align 8
  %149 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %148, align 8
  %150 = tail call i8* %149(%"class.base::RefCountedMemory"* %146) #8
  %151 = load i64, i64* %6, align 8
  %152 = getelementptr inbounds i8, i8* %150, i64 %151
  %153 = bitcast i8* %152 to i32*
  %154 = load i32, i32* %153, align 1
  store i32 %154, i32* %65, align 4
  %155 = load i64, i64* %6, align 8
  %156 = add i64 %155, 4
  store i64 %156, i64* %6, align 8
  %157 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %158 = bitcast %"class.base::RefCountedMemory"* %157 to i8* (%"class.base::RefCountedMemory"*)***
  %159 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %158, align 8
  %160 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %159, align 8
  %161 = tail call i8* %160(%"class.base::RefCountedMemory"* %157) #8
  %162 = load i64, i64* %6, align 8
  %163 = getelementptr inbounds i8, i8* %161, i64 %162
  %164 = bitcast i8* %163 to i32*
  %165 = load i32, i32* %164, align 1
  store i32 %165, i32* %118, align 4
  %166 = load i64, i64* %6, align 8
  %167 = add i64 %166, 4
  store i64 %167, i64* %6, align 8
  %168 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %169 = bitcast %"class.base::RefCountedMemory"* %168 to i8* (%"class.base::RefCountedMemory"*)***
  %170 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %169, align 8
  %171 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %170, align 8
  %172 = tail call i8* %171(%"class.base::RefCountedMemory"* %168) #8
  %173 = load i64, i64* %6, align 8
  %174 = getelementptr inbounds i8, i8* %172, i64 %173
  %175 = bitcast i8* %174 to i32*
  %176 = load i32, i32* %175, align 1
  store i32 %176, i32* %66, align 4
  %177 = load i64, i64* %6, align 8
  %178 = add i64 %177, 4
  store i64 %178, i64* %6, align 8
  %179 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %180 = bitcast %"class.base::RefCountedMemory"* %179 to i8* (%"class.base::RefCountedMemory"*)***
  %181 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %180, align 8
  %182 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %181, align 8
  %183 = tail call i8* %182(%"class.base::RefCountedMemory"* %179) #8
  %184 = load i64, i64* %6, align 8
  %185 = getelementptr inbounds i8, i8* %183, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = add i64 %184, 1
  store i64 %187, i64* %6, align 8
  %188 = zext i8 %186 to i32
  store i32 %188, i32* %119, align 4
  %189 = load i64, i64* %6, align 8
  %190 = add i64 %189, 3
  store i64 %190, i64* %6, align 8
  %191 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %192 = bitcast %"class.base::RefCountedMemory"* %191 to i8* (%"class.base::RefCountedMemory"*)***
  %193 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %192, align 8
  %194 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %193, align 8
  %195 = tail call i8* %194(%"class.base::RefCountedMemory"* %191) #8
  %196 = load i64, i64* %6, align 8
  %197 = getelementptr inbounds i8, i8* %195, i64 %196
  %198 = bitcast i8* %197 to i32*
  %199 = load i32, i32* %198, align 1
  store i32 %199, i32* %67, align 4
  %200 = load i64, i64* %6, align 8
  %201 = add i64 %200, 4
  store i64 %201, i64* %6, align 8
  %202 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %203 = bitcast %"class.base::RefCountedMemory"* %202 to i8* (%"class.base::RefCountedMemory"*)***
  %204 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %203, align 8
  %205 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %204, align 8
  %206 = tail call i8* %205(%"class.base::RefCountedMemory"* %202) #8
  %207 = load i64, i64* %6, align 8
  %208 = getelementptr inbounds i8, i8* %206, i64 %207
  %209 = bitcast i8* %208 to i32*
  %210 = load i32, i32* %209, align 1
  store i32 %210, i32* %120, align 4
  %211 = load i64, i64* %6, align 8
  %212 = add i64 %211, 4
  store i64 %212, i64* %6, align 8
  %213 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %214 = bitcast %"class.base::RefCountedMemory"* %213 to i8* (%"class.base::RefCountedMemory"*)***
  %215 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %214, align 8
  %216 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %215, align 8
  %217 = tail call i8* %216(%"class.base::RefCountedMemory"* %213) #8
  %218 = load i64, i64* %6, align 8
  %219 = getelementptr inbounds i8, i8* %217, i64 %218
  %220 = bitcast i8* %219 to i32*
  %221 = load i32, i32* %220, align 1
  store i32 %221, i32* %68, align 4
  %222 = load i64, i64* %6, align 8
  %223 = add i64 %222, 4
  store i64 %223, i64* %6, align 8
  %224 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %225 = bitcast %"class.base::RefCountedMemory"* %224 to i8* (%"class.base::RefCountedMemory"*)***
  %226 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %225, align 8
  %227 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %226, align 8
  %228 = tail call i8* %227(%"class.base::RefCountedMemory"* %224) #8
  %229 = load i64, i64* %6, align 8
  %230 = getelementptr inbounds i8, i8* %228, i64 %229
  %231 = bitcast i8* %230 to i32*
  %232 = load i32, i32* %231, align 1
  store i32 %232, i32* %121, align 4
  %233 = load i64, i64* %6, align 8
  %234 = add i64 %233, 4
  store i64 %234, i64* %6, align 8
  %235 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %236 = bitcast %"class.base::RefCountedMemory"* %235 to i8* (%"class.base::RefCountedMemory"*)***
  %237 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %236, align 8
  %238 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %237, align 8
  %239 = tail call i8* %238(%"class.base::RefCountedMemory"* %235) #8
  %240 = load i64, i64* %6, align 8
  %241 = getelementptr inbounds i8, i8* %239, i64 %240
  %242 = bitcast i8* %241 to i32*
  %243 = load i32, i32* %242, align 1
  store i32 %243, i32* %69, align 4
  %244 = load i64, i64* %6, align 8
  %245 = add i64 %244, 4
  store i64 %245, i64* %6, align 8
  %246 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %247 = bitcast %"class.base::RefCountedMemory"* %246 to i8* (%"class.base::RefCountedMemory"*)***
  %248 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %247, align 8
  %249 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %248, align 8
  %250 = tail call i8* %249(%"class.base::RefCountedMemory"* %246) #8
  %251 = load i64, i64* %6, align 8
  %252 = getelementptr inbounds i8, i8* %250, i64 %251
  %253 = bitcast i8* %252 to i32*
  %254 = load i32, i32* %253, align 1
  store i32 %254, i32* %122, align 4
  %255 = load i64, i64* %6, align 8
  %256 = add i64 %255, 4
  store i64 %256, i64* %6, align 8
  %257 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %258 = bitcast %"class.base::RefCountedMemory"* %257 to i8* (%"class.base::RefCountedMemory"*)***
  %259 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %258, align 8
  %260 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %259, align 8
  %261 = tail call i8* %260(%"class.base::RefCountedMemory"* %257) #8
  %262 = load i64, i64* %6, align 8
  %263 = getelementptr inbounds i8, i8* %261, i64 %262
  %264 = bitcast i8* %263 to i32*
  %265 = load i32, i32* %264, align 1
  store i32 %265, i32* %70, align 4
  %266 = load i64, i64* %6, align 8
  %267 = add i64 %266, 4
  store i64 %267, i64* %6, align 8
  %268 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %269 = bitcast %"class.base::RefCountedMemory"* %268 to i8* (%"class.base::RefCountedMemory"*)***
  %270 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %269, align 8
  %271 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %270, align 8
  %272 = tail call i8* %271(%"class.base::RefCountedMemory"* %268) #8
  %273 = load i64, i64* %6, align 8
  %274 = getelementptr inbounds i8, i8* %272, i64 %273
  %275 = bitcast i8* %274 to i32*
  %276 = load i32, i32* %275, align 1
  store i32 %276, i32* %123, align 4
  %277 = load i64, i64* %6, align 8
  %278 = add i64 %277, 4
  store i64 %278, i64* %6, align 8
  %279 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %280 = bitcast %"class.base::RefCountedMemory"* %279 to i8* (%"class.base::RefCountedMemory"*)***
  %281 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %280, align 8
  %282 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %281, align 8
  %283 = tail call i8* %282(%"class.base::RefCountedMemory"* %279) #8
  %284 = load i64, i64* %6, align 8
  %285 = getelementptr inbounds i8, i8* %283, i64 %284
  %286 = bitcast i8* %285 to i32*
  %287 = load i32, i32* %286, align 1
  store i32 %287, i32* %71, align 4
  %288 = load i64, i64* %6, align 8
  %289 = add i64 %288, 4
  store i64 %289, i64* %6, align 8
  %290 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 20, i32 0, i64 0
  %291 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 20, i32 0, i64 32
  %292 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %293 = bitcast %"class.base::RefCountedMemory"* %292 to i8* (%"class.base::RefCountedMemory"*)***
  %294 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %293, align 8
  %295 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %294, align 8
  %296 = tail call i8* %295(%"class.base::RefCountedMemory"* %292) #8
  %297 = load i64, i64* %6, align 8
  %298 = getelementptr inbounds i8, i8* %296, i64 %297
  %299 = load i8, i8* %298, align 1
  br label %323

300:                                              ; preds = %59, %300
  %301 = phi i8 [ %114, %59 ], [ %314, %300 ]
  %302 = phi i8* [ %105, %59 ], [ %305, %300 ]
  store i8 %301, i8* %302, align 1
  %303 = load i64, i64* %6, align 8
  %304 = add i64 %303, 1
  store i64 %304, i64* %6, align 8
  %305 = getelementptr inbounds i8, i8* %302, i64 1
  %306 = icmp eq i8* %305, %106
  %307 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %308 = bitcast %"class.base::RefCountedMemory"* %307 to i8* (%"class.base::RefCountedMemory"*)***
  %309 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %308, align 8
  %310 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %309, align 8
  %311 = tail call i8* %310(%"class.base::RefCountedMemory"* %307) #8
  %312 = load i64, i64* %6, align 8
  %313 = getelementptr inbounds i8, i8* %311, i64 %312
  %314 = load i8, i8* %313, align 1
  br i1 %306, label %115, label %300

315:                                              ; preds = %323
  %316 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 0, i32 21
  %317 = add i64 %335, 1
  store i64 %317, i64* %6, align 8
  %318 = zext i8 %337 to i32
  store i32 %318, i32* %316, align 4
  %319 = load i64, i64* %6, align 8
  %320 = add i64 %319, 11
  store i64 %320, i64* %6, align 8
  %321 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %60, i64 1
  %322 = icmp eq %"struct.x11::Xv::ImageFormatInfo"* %321, %50
  br i1 %322, label %54, label %59

323:                                              ; preds = %115, %323
  %324 = phi i8 [ %299, %115 ], [ %337, %323 ]
  %325 = phi i8* [ %290, %115 ], [ %328, %323 ]
  store i8 %324, i8* %325, align 1
  %326 = load i64, i64* %6, align 8
  %327 = add i64 %326, 1
  store i64 %327, i64* %6, align 8
  %328 = getelementptr inbounds i8, i8* %325, i64 1
  %329 = icmp eq i8* %328, %291
  %330 = load %"class.base::RefCountedMemory"*, %"class.base::RefCountedMemory"** %7, align 8
  %331 = bitcast %"class.base::RefCountedMemory"* %330 to i8* (%"class.base::RefCountedMemory"*)***
  %332 = load i8* (%"class.base::RefCountedMemory"*)**, i8* (%"class.base::RefCountedMemory"*)*** %331, align 8
  %333 = load i8* (%"class.base::RefCountedMemory"*)*, i8* (%"class.base::RefCountedMemory"*)** %332, align 8
  %334 = tail call i8* %333(%"class.base::RefCountedMemory"* %330) #8
  %335 = load i64, i64* %6, align 8
  %336 = getelementptr inbounds i8, i8* %334, i64 %335
  %337 = load i8, i8* %336, align 1
  br i1 %329, label %315, label %323
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::back_insert_iterator"* @_ZNSt3__120back_insert_iteratorINS_6vectorIhNS_9allocatorIhEEEEEaSERKh(%"class.std::__1::back_insert_iterator"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::back_insert_iterator", %"class.std::__1::back_insert_iterator"* %0, i64 0, i32 0
  %4 = load %"class.std::__1::vector.270"*, %"class.std::__1::vector.270"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = icmp eq i8* %6, %8
  %10 = ptrtoint i8* %8 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %2
  %12 = load i8, i8* %1, align 1
  store i8 %12, i8* %6, align 1
  %13 = getelementptr inbounds i8, i8* %6, i64 1
  %14 = ptrtoint i8* %13 to i64
  %15 = bitcast i8** %5 to i64*
  store i64 %14, i64* %15, align 8
  br label %62

16:                                               ; preds = %2
  %17 = ptrtoint i8* %6 to i64
  %18 = bitcast i8** %5 to i64*
  %19 = bitcast %"class.std::__1::vector.270"* %4 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = add i64 %21, 1
  %23 = icmp slt i64 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %16
  %25 = bitcast %"class.std::__1::vector.270"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %25) #10
  unreachable

26:                                               ; preds = %16
  %27 = bitcast i8** %7 to i64*
  %28 = sub i64 %10, %20
  %29 = icmp ult i64 %28, 4611686018427387903
  br i1 %29, label %30, label %35

30:                                               ; preds = %26
  %31 = shl i64 %28, 1
  %32 = icmp ult i64 %31, %22
  %33 = select i1 %32, i64 %22, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %30, %26
  %36 = phi i64 [ %33, %30 ], [ 9223372036854775807, %26 ]
  %37 = tail call i8* @_Znwm(i64 %36) #9
  br label %38

38:                                               ; preds = %35, %30
  %39 = phi i64 [ %36, %35 ], [ 0, %30 ]
  %40 = phi i8* [ %37, %35 ], [ null, %30 ]
  %41 = getelementptr inbounds i8, i8* %40, i64 %21
  %42 = getelementptr inbounds i8, i8* %40, i64 %39
  %43 = ptrtoint i8* %42 to i64
  %44 = load i8, i8* %1, align 1
  store i8 %44, i8* %41, align 1
  %45 = getelementptr inbounds i8, i8* %41, i64 1
  %46 = ptrtoint i8* %45 to i64
  %47 = getelementptr inbounds %"class.std::__1::vector.270", %"class.std::__1::vector.270"* %4, i64 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = load i64, i64* %18, align 8
  %50 = ptrtoint i8* %48 to i64
  %51 = sub i64 %49, %50
  %52 = sub i64 0, %51
  %53 = getelementptr inbounds i8, i8* %41, i64 %52
  %54 = ptrtoint i8* %53 to i64
  %55 = icmp sgt i64 %51, 0
  br i1 %55, label %56, label %58

56:                                               ; preds = %38
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %53, i8* align 1 %48, i64 %51, i1 false) #8
  %57 = load i8*, i8** %47, align 8
  br label %58

58:                                               ; preds = %56, %38
  %59 = phi i8* [ %48, %38 ], [ %57, %56 ]
  store i64 %54, i64* %19, align 8
  store i64 %46, i64* %18, align 8
  store i64 %43, i64* %27, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %58
  tail call void @_ZdlPv(i8* nonnull %59) #9
  br label %62

62:                                               ; preds = %11, %58, %61
  ret %"class.std::__1::back_insert_iterator"* %0
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

declare %"class.x11::Connection::FutureImpl"* @_ZN3x1110Connection11SendRequestEPNS_11WriteBufferEPKcbb(%"class.x11::Connection"*, %"class.x11::WriteBuffer"*, i8*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x114XvMC11SurfaceInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.294"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::XvMC::SurfaceInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::XvMC::SurfaceInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 24
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::XvMC::SurfaceInfo"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 24
  %25 = add i64 %23, 24
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #8
  %27 = ptrtoint %"struct.x11::XvMC::SurfaceInfo"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.294"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 24
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 768614336404564650
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.294"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 24
  %42 = icmp ult i64 %41, 384307168202282325
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 768614336404564650, %39 ]
  %50 = mul i64 %49, 24
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.x11::XvMC::SurfaceInfo"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::XvMC::SurfaceInfo"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %55, i64 %34
  %57 = bitcast %"struct.x11::XvMC::SurfaceInfo"* %56 to i8*
  %58 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %56, i64 %1
  %60 = mul nsw i64 %1, 24
  %61 = add i64 %60, -24
  %62 = urem i64 %61, 24
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 24
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.x11::XvMC::SurfaceInfo"* %58 to i64
  %66 = ptrtoint %"struct.x11::XvMC::SurfaceInfo"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.294", %"class.std::__1::vector.294"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.x11::XvMC::SurfaceInfo"*, %"struct.x11::XvMC::SurfaceInfo"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.x11::XvMC::SurfaceInfo"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -24
  %73 = getelementptr inbounds %"struct.x11::XvMC::SurfaceInfo", %"struct.x11::XvMC::SurfaceInfo"* %56, i64 %72
  %74 = ptrtoint %"struct.x11::XvMC::SurfaceInfo"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.x11::XvMC::SurfaceInfo"* %73 to i8*
  %78 = bitcast %"struct.x11::XvMC::SurfaceInfo"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #8
  %79 = load %"struct.x11::XvMC::SurfaceInfo"*, %"struct.x11::XvMC::SurfaceInfo"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.x11::XvMC::SurfaceInfo"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.x11::XvMC::SurfaceInfo"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.x11::XvMC::SurfaceInfo"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.308"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #8
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.308"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.308"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #10
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #10
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #8
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.308", %"class.std::__1::vector.308"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #8
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3x112Xv15ImageFormatInfoENS_9allocatorIS3_EEE8__appendEm(%"class.std::__1::vector.339"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast %"struct.x11::Xv::ImageFormatInfo"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 1
  %7 = bitcast %"struct.x11::Xv::ImageFormatInfo"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = sdiv exact i64 %9, 120
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %30, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to %"struct.x11::Xv::ImageFormatInfo"*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %13, i64 %18, i32 0
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = urem i64 %23, 120
  %25 = add i64 %23, 120
  %26 = sub i64 %25, %24
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %26, i1 false) #8
  %27 = ptrtoint %"struct.x11::Xv::ImageFormatInfo"* %16 to i64
  br label %28

28:                                               ; preds = %12, %15
  %29 = phi i64 [ %27, %15 ], [ %8, %12 ]
  store i64 %29, i64* %7, align 8
  br label %85

30:                                               ; preds = %2
  %31 = bitcast %"class.std::__1::vector.339"* %0 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %8, %32
  %34 = sdiv exact i64 %33, 120
  %35 = add i64 %34, %1
  %36 = icmp ugt i64 %35, 153722867280912930
  br i1 %36, label %37, label %39

37:                                               ; preds = %30
  %38 = bitcast %"class.std::__1::vector.339"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #10
  unreachable

39:                                               ; preds = %30
  %40 = sub i64 %5, %32
  %41 = sdiv exact i64 %40, 120
  %42 = icmp ult i64 %41, 76861433640456465
  br i1 %42, label %43, label %48

43:                                               ; preds = %39
  %44 = shl nsw i64 %41, 1
  %45 = icmp ult i64 %44, %35
  %46 = select i1 %45, i64 %35, i64 %44
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %39, %43
  %49 = phi i64 [ %46, %43 ], [ 153722867280912930, %39 ]
  %50 = mul i64 %49, 120
  %51 = tail call i8* @_Znwm(i64 %50) #9
  %52 = bitcast i8* %51 to %"struct.x11::Xv::ImageFormatInfo"*
  br label %53

53:                                               ; preds = %43, %48
  %54 = phi i64 [ %49, %48 ], [ 0, %43 ]
  %55 = phi %"struct.x11::Xv::ImageFormatInfo"* [ %52, %48 ], [ null, %43 ]
  %56 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %55, i64 %34
  %57 = bitcast %"struct.x11::Xv::ImageFormatInfo"* %56 to i8*
  %58 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %55, i64 %54
  %59 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %56, i64 %1
  %60 = mul nsw i64 %1, 120
  %61 = add i64 %60, -120
  %62 = urem i64 %61, 120
  %63 = sub i64 %61, %62
  %64 = add i64 %63, 120
  call void @llvm.memset.p0i8.i64(i8* align 4 %57, i8 0, i64 %64, i1 false)
  %65 = ptrtoint %"struct.x11::Xv::ImageFormatInfo"* %58 to i64
  %66 = ptrtoint %"struct.x11::Xv::ImageFormatInfo"* %59 to i64
  %67 = getelementptr inbounds %"class.std::__1::vector.339", %"class.std::__1::vector.339"* %0, i64 0, i32 0, i32 0
  %68 = load %"struct.x11::Xv::ImageFormatInfo"*, %"struct.x11::Xv::ImageFormatInfo"** %67, align 8
  %69 = load i64, i64* %7, align 8
  %70 = ptrtoint %"struct.x11::Xv::ImageFormatInfo"* %68 to i64
  %71 = sub i64 %69, %70
  %72 = sdiv exact i64 %71, -120
  %73 = getelementptr inbounds %"struct.x11::Xv::ImageFormatInfo", %"struct.x11::Xv::ImageFormatInfo"* %56, i64 %72
  %74 = ptrtoint %"struct.x11::Xv::ImageFormatInfo"* %73 to i64
  %75 = icmp sgt i64 %71, 0
  br i1 %75, label %76, label %80

76:                                               ; preds = %53
  %77 = bitcast %"struct.x11::Xv::ImageFormatInfo"* %73 to i8*
  %78 = bitcast %"struct.x11::Xv::ImageFormatInfo"* %68 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %77, i8* align 4 %78, i64 %71, i1 false) #8
  %79 = load %"struct.x11::Xv::ImageFormatInfo"*, %"struct.x11::Xv::ImageFormatInfo"** %67, align 8
  br label %80

80:                                               ; preds = %53, %76
  %81 = phi %"struct.x11::Xv::ImageFormatInfo"* [ %68, %53 ], [ %79, %76 ]
  store i64 %74, i64* %31, align 8
  store i64 %66, i64* %7, align 8
  store i64 %65, i64* %4, align 8
  %82 = icmp eq %"struct.x11::Xv::ImageFormatInfo"* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = bitcast %"struct.x11::Xv::ImageFormatInfo"* %81 to i8*
  tail call void @_ZdlPv(i8* %84) #9
  br label %85

85:                                               ; preds = %83, %80, %28
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }
attributes #10 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
