; ModuleID = '../../base/trace_event/heap_profiler_allocation_context.cc'
source_filename = "../../base/trace_event/heap_profiler_allocation_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::Backtrace" = type { [48 x %"struct.base::trace_event::StackFrame"], i64 }
%"struct.base::trace_event::StackFrame" = type { i32, i8* }
%"struct.base::trace_event::AllocationContext" = type { %"struct.base::trace_event::Backtrace", i8* }
%"struct.std::__1::hash" = type { i8 }
%"struct.std::__1::hash.1" = type { i8 }
%"struct.std::__1::hash.2" = type { i8 }

@_ZN4base11trace_event9BacktraceC1Ev = hidden unnamed_addr alias void (%"struct.base::trace_event::Backtrace"*), void (%"struct.base::trace_event::Backtrace"*)* @_ZN4base11trace_event9BacktraceC2Ev
@_ZN4base11trace_event17AllocationContextC1Ev = hidden unnamed_addr alias void (%"struct.base::trace_event::AllocationContext"*), void (%"struct.base::trace_event::AllocationContext"*)* @_ZN4base11trace_event17AllocationContextC2Ev
@_ZN4base11trace_event17AllocationContextC1ERKNS0_9BacktraceEPKc = hidden unnamed_addr alias void (%"struct.base::trace_event::AllocationContext"*, %"struct.base::trace_event::Backtrace"*, i8*), void (%"struct.base::trace_event::AllocationContext"*, %"struct.base::trace_event::Backtrace"*, i8*)* @_ZN4base11trace_event17AllocationContextC2ERKNS0_9BacktraceEPKc

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventltERKNS0_10StackFrameES3_(%"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16), %"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventeqERKNS0_10StackFrameES3_(%"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16), %"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  ret i1 %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventneERKNS0_10StackFrameES3_(%"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16), %"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %1, i64 0, i32 1
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ne i8* %4, %6
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event9BacktraceC2Ev(%"struct.base::trace_event::Backtrace"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 1
  store i64 0, i64* %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventeqERKNS0_9BacktraceES3_(%"struct.base::trace_event::Backtrace"* readonly dereferenceable(776), %"struct.base::trace_event::Backtrace"* nocapture readonly dereferenceable(776)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 0, i64 %4
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 0, i64 0
  br label %14

14:                                               ; preds = %11, %22
  %15 = phi %"struct.base::trace_event::StackFrame"* [ %24, %22 ], [ %12, %11 ]
  %16 = phi %"struct.base::trace_event::StackFrame"* [ %23, %22 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 1
  %24 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 1
  %25 = icmp eq %"struct.base::trace_event::StackFrame"* %23, %9
  br i1 %25, label %26, label %14

26:                                               ; preds = %22, %14, %8, %2
  %27 = phi i1 [ false, %2 ], [ true, %8 ], [ true, %22 ], [ false, %14 ]
  ret i1 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventneERKNS0_9BacktraceES3_(%"struct.base::trace_event::Backtrace"* readonly dereferenceable(776), %"struct.base::trace_event::Backtrace"* nocapture readonly dereferenceable(776)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 0, i64 %4
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 0
  %13 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %0, i64 0, i32 0, i64 0
  br label %14

14:                                               ; preds = %22, %11
  %15 = phi %"struct.base::trace_event::StackFrame"* [ %24, %22 ], [ %12, %11 ]
  %16 = phi %"struct.base::trace_event::StackFrame"* [ %23, %22 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %26

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 1
  %24 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 1
  %25 = icmp eq %"struct.base::trace_event::StackFrame"* %23, %9
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %22, %2, %8
  %27 = phi i1 [ true, %2 ], [ false, %8 ], [ true, %14 ], [ false, %22 ]
  ret i1 %27
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base11trace_event17AllocationContextC2Ev(%"struct.base::trace_event::AllocationContext"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 1
  %3 = bitcast i64* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base11trace_event17AllocationContextC2ERKNS0_9BacktraceEPKc(%"struct.base::trace_event::AllocationContext"* nocapture, %"struct.base::trace_event::Backtrace"* nocapture readonly dereferenceable(776), i8*) unnamed_addr #2 align 2 {
  %4 = bitcast %"struct.base::trace_event::AllocationContext"* %0 to i8*
  %5 = bitcast %"struct.base::trace_event::Backtrace"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 776, i1 false)
  %6 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 1
  store i8* %2, i8** %6, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventeqERKNS0_17AllocationContextES3_(%"struct.base::trace_event::AllocationContext"* readonly dereferenceable(784), %"struct.base::trace_event::AllocationContext"* nocapture readonly dereferenceable(784)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 0, i64 %4
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 0, i64 0
  br label %14

14:                                               ; preds = %22, %11
  %15 = phi %"struct.base::trace_event::StackFrame"* [ %24, %22 ], [ %12, %11 ]
  %16 = phi %"struct.base::trace_event::StackFrame"* [ %23, %22 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 1
  %24 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 1
  %25 = icmp eq %"struct.base::trace_event::StackFrame"* %23, %9
  br i1 %25, label %26, label %14

26:                                               ; preds = %22, %8
  %27 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %28, %30
  br label %32

32:                                               ; preds = %14, %2, %26
  %33 = phi i1 [ %31, %26 ], [ false, %2 ], [ false, %14 ]
  ret i1 %33
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN4base11trace_eventneERKNS0_17AllocationContextES3_(%"struct.base::trace_event::AllocationContext"* readonly dereferenceable(784), %"struct.base::trace_event::AllocationContext"* nocapture readonly dereferenceable(784)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 0, i64 %4
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %26, label %11

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 0
  %13 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 0, i32 0, i64 0
  br label %14

14:                                               ; preds = %22, %11
  %15 = phi %"struct.base::trace_event::StackFrame"* [ %24, %22 ], [ %12, %11 ]
  %16 = phi %"struct.base::trace_event::StackFrame"* [ %23, %22 ], [ %13, %11 ]
  %17 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 0, i32 1
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %18, %20
  br i1 %21, label %22, label %32

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %16, i64 1
  %24 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %15, i64 1
  %25 = icmp eq %"struct.base::trace_event::StackFrame"* %23, %9
  br i1 %25, label %26, label %14

26:                                               ; preds = %22, %8
  %27 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %0, i64 0, i32 1
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 1
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ne i8* %28, %30
  br label %32

32:                                               ; preds = %14, %2, %26
  %33 = phi i1 [ %31, %26 ], [ true, %2 ], [ true, %14 ]
  ret i1 %33
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNKSt3__14hashIN4base11trace_event10StackFrameEEclERKS3_(%"struct.std::__1::hash"* nocapture readnone, %"struct.base::trace_event::StackFrame"* nocapture readonly dereferenceable(16)) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"struct.base::trace_event::StackFrame", %"struct.base::trace_event::StackFrame"* %1, i64 0, i32 1
  %4 = bitcast i8** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  ret i64 %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNKSt3__14hashIN4base11trace_event9BacktraceEEclERKS3_(%"struct.std::__1::hash.1"* nocapture readnone, %"struct.base::trace_event::Backtrace"* nocapture readonly dereferenceable(776)) local_unnamed_addr #2 align 2 {
  %3 = alloca [48 x i8*], align 16
  %4 = bitcast [48 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 384, i1 false)
  %5 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %30, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -1
  %10 = and i64 %6, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = sub i64 %6, %10
  br label %34

14:                                               ; preds = %34, %8
  %15 = phi i64 [ 0, %8 ], [ %60, %34 ]
  %16 = icmp eq i64 %10, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %25, %17 ], [ %15, %14 ]
  %19 = phi i64 [ %26, %17 ], [ %10, %14 ]
  %20 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 %18, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %18
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = add i64 %18, 1
  %26 = add i64 %19, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %17, !llvm.loop !2

28:                                               ; preds = %17, %14
  %29 = shl i64 %6, 3
  br label %30

30:                                               ; preds = %28, %2
  %31 = phi i64 [ 0, %2 ], [ %29, %28 ]
  %32 = call i32 @_ZN4base14PersistentHashEPKvm(i8* nonnull %4, i64 %31) #6
  %33 = zext i32 %32 to i64
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %4) #6
  ret i64 %33

34:                                               ; preds = %34, %12
  %35 = phi i64 [ 0, %12 ], [ %60, %34 ]
  %36 = phi i64 [ %13, %12 ], [ %61, %34 ]
  %37 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 %35, i32 1
  %38 = bitcast i8** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %35
  %41 = bitcast i8** %40 to i64*
  store i64 %39, i64* %41, align 16
  %42 = or i64 %35, 1
  %43 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 %42, i32 1
  %44 = bitcast i8** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %42
  %47 = bitcast i8** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = or i64 %35, 2
  %49 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 %48, i32 1
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %48
  %53 = bitcast i8** %52 to i64*
  store i64 %51, i64* %53, align 16
  %54 = or i64 %35, 3
  %55 = getelementptr inbounds %"struct.base::trace_event::Backtrace", %"struct.base::trace_event::Backtrace"* %1, i64 0, i32 0, i64 %54, i32 1
  %56 = bitcast i8** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %54
  %59 = bitcast i8** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = add i64 %35, 4
  %61 = add i64 %36, -4
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %14, label %34
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZN4base14PersistentHashEPKvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNKSt3__14hashIN4base11trace_event17AllocationContextEEclERKS3_(%"struct.std::__1::hash.2"* nocapture readnone, %"struct.base::trace_event::AllocationContext"* nocapture readonly dereferenceable(784)) local_unnamed_addr #2 align 2 {
  %3 = alloca [48 x i8*], align 16
  %4 = bitcast [48 x i8*]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 384, i8* nonnull %4) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %4, i8 -86, i64 384, i1 false) #6
  %5 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %2
  %9 = add i64 %6, -1
  %10 = and i64 %6, 3
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  %13 = sub i64 %6, %10
  br label %30

14:                                               ; preds = %30, %8
  %15 = phi i64 [ 0, %8 ], [ %56, %30 ]
  %16 = icmp eq i64 %10, 0
  br i1 %16, label %28, label %17

17:                                               ; preds = %14, %17
  %18 = phi i64 [ %25, %17 ], [ %15, %14 ]
  %19 = phi i64 [ %26, %17 ], [ %10, %14 ]
  %20 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 %18, i32 1
  %21 = bitcast i8** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %18
  %24 = bitcast i8** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = add nuw i64 %18, 1
  %26 = add i64 %19, -1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %17, !llvm.loop !4

28:                                               ; preds = %17, %14
  %29 = shl i64 %6, 3
  br label %59

30:                                               ; preds = %30, %12
  %31 = phi i64 [ 0, %12 ], [ %56, %30 ]
  %32 = phi i64 [ %13, %12 ], [ %57, %30 ]
  %33 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 %31, i32 1
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %31
  %37 = bitcast i8** %36 to i64*
  store i64 %35, i64* %37, align 16
  %38 = or i64 %31, 1
  %39 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 %38, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %38
  %43 = bitcast i8** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = or i64 %31, 2
  %45 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 %44, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %44
  %49 = bitcast i8** %48 to i64*
  store i64 %47, i64* %49, align 16
  %50 = or i64 %31, 3
  %51 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 0, i32 0, i64 %50, i32 1
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds [48 x i8*], [48 x i8*]* %3, i64 0, i64 %50
  %55 = bitcast i8** %54 to i64*
  store i64 %53, i64* %55, align 8
  %56 = add nuw i64 %31, 4
  %57 = add i64 %32, -4
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %14, label %30

59:                                               ; preds = %2, %28
  %60 = phi i64 [ 0, %2 ], [ %29, %28 ]
  %61 = call i32 @_ZN4base14PersistentHashEPKvm(i8* nonnull %4, i64 %60) #6
  %62 = zext i32 %61 to i64
  call void @llvm.lifetime.end.p0i8(i64 384, i8* nonnull %4) #6
  %63 = getelementptr inbounds %"struct.base::trace_event::AllocationContext", %"struct.base::trace_event::AllocationContext"* %1, i64 0, i32 1
  %64 = bitcast i8** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = mul i64 %65, 2654435761
  %67 = mul nuw nsw i64 %62, 3
  %68 = add i64 %66, %67
  ret i64 %68
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
