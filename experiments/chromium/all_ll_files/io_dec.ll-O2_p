; ModuleID = '../../third_party/libwebp/src/dec/io_dec.c'
source_filename = "../../third_party/libwebp/src/dec/io_dec.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.WebPDecParams = type { %struct.WebPDecBuffer*, i8*, i8*, i8*, i32, %struct.WebPDecoderOptions*, %struct.WebPRescaler*, %struct.WebPRescaler*, %struct.WebPRescaler*, %struct.WebPRescaler*, i8*, i32 (%struct.VP8Io*, %struct.WebPDecParams*)*, i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)*, i32 (%struct.WebPDecParams*, i32, i32)* }
%struct.WebPDecBuffer = type { i32, i32, i32, i32, %union.anon, [4 x i32], i8* }
%union.anon = type { %struct.WebPYUVABuffer }
%struct.WebPYUVABuffer = type { i8*, i8*, i8*, i8*, i32, i32, i32, i32, i64, i64, i64, i64 }
%struct.WebPDecoderOptions = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [5 x i32] }
%struct.WebPRescaler = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*, i32, i32*, i32* }
%struct.VP8Io = type { i32, i32, i32, i32, i32, i8*, i8*, i8*, i32, i32, i8*, i32 (%struct.VP8Io*)*, i32 (%struct.VP8Io*)*, void (%struct.VP8Io*)*, i32, i64, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8* }

@WebPSamplers = external local_unnamed_addr global [0 x void (i8*, i8*, i8*, i8*, i32)*], align 8
@WebPUpsamplers = external local_unnamed_addr global [0 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], align 8
@WebPApplyAlphaMultiply4444 = external local_unnamed_addr global void (i8*, i32, i32, i32)*, align 8
@WebPDispatchAlpha = external local_unnamed_addr global i32 (i8*, i32, i32, i32, i8*, i32)*, align 8
@WebPApplyAlphaMultiply = external local_unnamed_addr global void (i8*, i32, i32, i32, i32)*, align 8

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @WebPInitCustomIo(%struct.WebPDecParams*, %struct.VP8Io* nocapture) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %1, i64 0, i32 11
  %4 = bitcast i32 (%struct.VP8Io*)** %3 to <2 x i32 (%struct.VP8Io*)*>*
  store <2 x i32 (%struct.VP8Io*)*> <i32 (%struct.VP8Io*)* @CustomPut, i32 (%struct.VP8Io*)* @CustomSetup>, <2 x i32 (%struct.VP8Io*)*>* %4, align 8
  %5 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %1, i64 0, i32 13
  store void (%struct.VP8Io*)* @CustomTeardown, void (%struct.VP8Io*)** %5, align 8
  %6 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %1, i64 0, i32 10
  %7 = bitcast i8** %6 to %struct.WebPDecParams**
  store %struct.WebPDecParams* %0, %struct.WebPDecParams** %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @CustomPut(%struct.VP8Io*) #1 {
  %2 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 10
  %3 = bitcast i8** %2 to %struct.WebPDecParams**
  %4 = load %struct.WebPDecParams*, %struct.WebPDecParams** %3, align 8
  %5 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = icmp slt i32 %6, 1
  %10 = icmp slt i32 %8, 1
  %11 = or i1 %9, %10
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 11
  %14 = load i32 (%struct.VP8Io*, %struct.WebPDecParams*)*, i32 (%struct.VP8Io*, %struct.WebPDecParams*)** %13, align 8
  %15 = tail call i32 %14(%struct.VP8Io* %0, %struct.WebPDecParams* %4) #4
  %16 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 12
  %17 = load i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)*, i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)** %16, align 8
  %18 = icmp eq i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = tail call i32 %17(%struct.VP8Io* %0, %struct.WebPDecParams* %4, i32 %15) #4
  br label %21

21:                                               ; preds = %12, %19
  %22 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 4
  %23 = load i32, i32* %22, align 8
  %24 = add nsw i32 %23, %15
  store i32 %24, i32* %22, align 8
  br label %25

25:                                               ; preds = %1, %21
  %26 = phi i32 [ 1, %21 ], [ 0, %1 ]
  ret i32 %26
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @CustomSetup(%struct.VP8Io*) #1 {
  %2 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 10
  %3 = bitcast i8** %2 to %struct.WebPDecParams**
  %4 = load %struct.WebPDecParams*, %struct.WebPDecParams** %3, align 8
  %5 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 0
  %6 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %5, align 8
  %7 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 11
  %10 = add i32 %8, -1
  %11 = icmp ult i32 %10, 12
  br i1 %11, label %15, label %12

12:                                               ; preds = %15, %1
  %13 = add i32 %8, -7
  %14 = icmp ult i32 %13, 4
  br label %20

15:                                               ; preds = %1
  %16 = trunc i32 %10 to i16
  %17 = lshr i16 2077, %16
  %18 = and i16 %17, 1
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %12, label %20

20:                                               ; preds = %15, %12
  %21 = phi i1 [ %14, %12 ], [ true, %15 ]
  %22 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 10
  %23 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 11
  %24 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 12
  %25 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 5
  %26 = bitcast i8** %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false)
  %27 = load %struct.WebPDecoderOptions*, %struct.WebPDecoderOptions** %25, align 8
  %28 = select i1 %21, i32 11, i32 12
  %29 = tail call i32 @WebPIoInitFromOptions(%struct.WebPDecoderOptions* %27, %struct.VP8Io* %0, i32 %28) #4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %73, label %31

31:                                               ; preds = %20
  %32 = xor i1 %21, true
  %33 = add i32 %8, -7
  %34 = icmp ugt i32 %33, 3
  %35 = or i1 %34, %32
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  tail call void @WebPInitUpsamplers() #4
  br label %37

37:                                               ; preds = %31, %36
  %38 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 23
  %39 = load i32, i32* %38, align 8
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %73

41:                                               ; preds = %37
  br i1 %9, label %42, label %65

42:                                               ; preds = %41
  tail call void @WebPInitSamplers() #4
  store i32 (%struct.VP8Io*, %struct.WebPDecParams*)* @EmitSampledRGB, i32 (%struct.VP8Io*, %struct.WebPDecParams*)** %23, align 8
  %43 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 14
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %66, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = add nsw i32 %48, 1
  %50 = and i32 %49, -2
  %51 = add nsw i32 %50, %48
  %52 = sext i32 %51 to i64
  %53 = tail call i8* @WebPSafeMalloc(i64 1, i64 %52) #4
  store i8* %53, i8** %22, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %73, label %55

55:                                               ; preds = %46
  %56 = ashr i32 %49, 1
  %57 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 1
  store i8* %53, i8** %57, align 8
  %58 = load i32, i32* %47, align 4
  %59 = sext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %53, i64 %59
  %61 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 2
  store i8* %60, i8** %61, align 8
  %62 = sext i32 %56 to i64
  %63 = getelementptr inbounds i8, i8* %60, i64 %62
  %64 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 3
  store i8* %63, i8** %64, align 8
  store i32 (%struct.VP8Io*, %struct.WebPDecParams*)* @EmitFancyRGB, i32 (%struct.VP8Io*, %struct.WebPDecParams*)** %23, align 8
  tail call void @WebPInitUpsamplers() #4
  br label %66

65:                                               ; preds = %41
  store i32 (%struct.VP8Io*, %struct.WebPDecParams*)* @EmitYUV, i32 (%struct.VP8Io*, %struct.WebPDecParams*)** %23, align 8
  br label %66

66:                                               ; preds = %55, %42, %65
  br i1 %21, label %67, label %73

67:                                               ; preds = %66
  switch i32 %8, label %68 [
    i32 10, label %70
    i32 5, label %70
  ]

68:                                               ; preds = %67
  %69 = select i1 %9, i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)* @EmitAlphaRGB, i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)* @EmitAlphaYUV
  br label %70

70:                                               ; preds = %67, %67, %68
  %71 = phi i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)* [ %69, %68 ], [ @EmitAlphaRGBA4444, %67 ], [ @EmitAlphaRGBA4444, %67 ]
  store i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)* %71, i32 (%struct.VP8Io*, %struct.WebPDecParams*, i32)** %24, align 8
  br i1 %9, label %72, label %73

72:                                               ; preds = %70
  tail call void @WebPInitAlphaProcessing() #4
  br label %73

73:                                               ; preds = %70, %72, %66, %46, %37, %20
  %74 = phi i32 [ 0, %20 ], [ 0, %37 ], [ 0, %46 ], [ 1, %66 ], [ 1, %72 ], [ 1, %70 ]
  ret i32 %74
}

; Function Attrs: nounwind ssp uwtable
define internal void @CustomTeardown(%struct.VP8Io* nocapture readonly) #1 {
  %2 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 10
  %3 = bitcast i8** %2 to %struct.WebPDecParams**
  %4 = load %struct.WebPDecParams*, %struct.WebPDecParams** %3, align 8
  %5 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %4, i64 0, i32 10
  %6 = load i8*, i8** %5, align 8
  tail call void @WebPSafeFree(i8* %6) #4
  store i8* null, i8** %5, align 8
  ret void
}

declare i32 @WebPIoInitFromOptions(%struct.WebPDecoderOptions*, %struct.VP8Io*, i32) local_unnamed_addr #2

declare void @WebPInitUpsamplers() local_unnamed_addr #2

declare void @WebPInitSamplers() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitSampledRGB(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %4 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %3, align 8
  %5 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 1
  %11 = bitcast i8** %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = mul nsw i64 %13, %9
  %15 = getelementptr inbounds i8, i8* %6, i64 %14
  %16 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 5
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 8
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 6
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 7
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 9
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %29 = load i32, i32* %28, align 8
  %30 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds [0 x void (i8*, i8*, i8*, i8*, i32)*], [0 x void (i8*, i8*, i8*, i8*, i32)*]* @WebPSamplers, i64 0, i64 %32
  %34 = load void (i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i32)** %33, align 8
  tail call void @WebPSamplerProcessPlane(i8* %17, i32 %19, i8* %21, i8* %23, i32 %25, i8* %15, i32 %12, i32 %27, i32 %29, void (i8*, i8*, i8*, i8*, i32)* %34) #4
  %35 = load i32, i32* %28, align 8
  ret i32 %35
}

declare i8* @WebPSafeMalloc(i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitFancyRGB(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %6 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %5, align 8
  %7 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %6, i64 0, i32 4, i32 0, i32 0
  %8 = load i8*, i8** %7, align 8
  %9 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %10 = load i32, i32* %9, align 8
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %6, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast i8** %12 to i32*
  %14 = load i32, i32* %13, align 8
  %15 = sext i32 %14 to i64
  %16 = mul nsw i64 %15, %11
  %17 = getelementptr inbounds i8, i8* %8, i64 %16
  %18 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [0 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*], [0 x void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*]* @WebPUpsamplers, i64 0, i64 %20
  %22 = load void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)*, void (i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32)** %21, align 8
  %23 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 5
  %24 = load i8*, i8** %23, align 8
  %25 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 6
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 7
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 2
  %30 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 3
  %31 = add nsw i32 %10, %4
  %32 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %33 = load i32, i32* %32, align 4
  %34 = add nsw i32 %33, 1
  %35 = sdiv i32 %34, 2
  %36 = icmp eq i32 %10, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %2
  tail call void %22(i8* %24, i8* null, i8* %26, i8* %28, i8* %26, i8* %28, i8* %17, i8* null, i32 %33) #4
  br label %46

38:                                               ; preds = %2
  %39 = load i8*, i8** %30, align 8
  %40 = load i8*, i8** %29, align 8
  %41 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 1
  %42 = load i8*, i8** %41, align 8
  %43 = sub nsw i64 0, %15
  %44 = getelementptr inbounds i8, i8* %17, i64 %43
  tail call void %22(i8* %42, i8* %24, i8* %40, i8* %39, i8* %26, i8* %28, i8* %44, i8* %17, i32 %33) #4
  %45 = add nsw i32 %4, 1
  br label %46

46:                                               ; preds = %38, %37
  %47 = phi i32 [ %4, %37 ], [ %45, %38 ]
  %48 = add nsw i32 %10, 2
  %49 = icmp slt i32 %48, %31
  br i1 %49, label %50, label %79

50:                                               ; preds = %46
  %51 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 9
  %52 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 8
  br label %53

53:                                               ; preds = %50, %53
  %54 = phi i32 [ %48, %50 ], [ %77, %53 ]
  %55 = phi i8* [ %28, %50 ], [ %62, %53 ]
  %56 = phi i8* [ %26, %50 ], [ %61, %53 ]
  %57 = phi i8* [ %24, %50 ], [ %70, %53 ]
  %58 = phi i8* [ %17, %50 ], [ %66, %53 ]
  %59 = load i32, i32* %51, align 4
  %60 = sext i32 %59 to i64
  %61 = getelementptr inbounds i8, i8* %56, i64 %60
  %62 = getelementptr inbounds i8, i8* %55, i64 %60
  %63 = load i32, i32* %13, align 8
  %64 = shl nsw i32 %63, 1
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, i8* %58, i64 %65
  %67 = load i32, i32* %52, align 8
  %68 = shl nsw i32 %67, 1
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, i8* %57, i64 %69
  %71 = sext i32 %67 to i64
  %72 = sub nsw i64 0, %71
  %73 = getelementptr inbounds i8, i8* %70, i64 %72
  %74 = sext i32 %63 to i64
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds i8, i8* %66, i64 %75
  tail call void %22(i8* %73, i8* %70, i8* %56, i8* %55, i8* %61, i8* %62, i8* %76, i8* %66, i32 %33) #4
  %77 = add nsw i32 %54, 2
  %78 = icmp slt i32 %77, %31
  br i1 %78, label %53, label %79

79:                                               ; preds = %53, %46
  %80 = phi i8* [ %17, %46 ], [ %66, %53 ]
  %81 = phi i8* [ %24, %46 ], [ %70, %53 ]
  %82 = phi i8* [ %26, %46 ], [ %61, %53 ]
  %83 = phi i8* [ %28, %46 ], [ %62, %53 ]
  %84 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 8
  %85 = load i32, i32* %84, align 8
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds i8, i8* %81, i64 %86
  %88 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 21
  %89 = load i32, i32* %88, align 8
  %90 = add nsw i32 %89, %31
  %91 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 22
  %92 = load i32, i32* %91, align 4
  %93 = icmp slt i32 %90, %92
  br i1 %93, label %94, label %102

94:                                               ; preds = %79
  %95 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 1
  %96 = load i8*, i8** %95, align 8
  %97 = sext i32 %33 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %96, i8* align 1 %87, i64 %97, i1 false)
  %98 = load i8*, i8** %29, align 8
  %99 = sext i32 %35 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %98, i8* align 1 %82, i64 %99, i1 false)
  %100 = load i8*, i8** %30, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %100, i8* align 1 %83, i64 %99, i1 false)
  %101 = add nsw i32 %47, -1
  br label %109

102:                                              ; preds = %79
  %103 = and i32 %31, 1
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %102
  %106 = load i32, i32* %13, align 8
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, i8* %80, i64 %107
  tail call void %22(i8* %87, i8* null, i8* %82, i8* %83, i8* %82, i8* %83, i8* %108, i8* null, i32 %33) #4
  br label %109

109:                                              ; preds = %102, %105, %94
  %110 = phi i32 [ %101, %94 ], [ %47, %102 ], [ %47, %105 ]
  ret i32 %110
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitYUV(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly) #1 {
  %3 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %4 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %3, align 8
  %5 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = sext i32 %11 to i64
  %13 = mul nsw i64 %12, %9
  %14 = getelementptr inbounds i8, i8* %6, i64 %13
  %15 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 1
  %16 = load i8*, i8** %15, align 8
  %17 = ashr i32 %8, 1
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 5
  %20 = load i32, i32* %19, align 4
  %21 = sext i32 %20 to i64
  %22 = mul nsw i64 %21, %18
  %23 = getelementptr inbounds i8, i8* %16, i64 %22
  %24 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %4, i64 0, i32 4, i32 0, i32 6
  %27 = load i32, i32* %26, align 8
  %28 = sext i32 %27 to i64
  %29 = mul nsw i64 %28, %18
  %30 = getelementptr inbounds i8, i8* %25, i64 %29
  %31 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = add nsw i32 %32, 1
  %36 = sdiv i32 %35, 2
  %37 = add nsw i32 %34, 1
  %38 = sdiv i32 %37, 2
  %39 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 5
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 8
  %42 = load i32, i32* %41, align 8
  tail call void @WebPCopyPlane(i8* %40, i32 %42, i8* %14, i32 %11, i32 %32, i32 %34) #4
  %43 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 6
  %44 = load i8*, i8** %43, align 8
  %45 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 9
  %46 = load i32, i32* %45, align 4
  %47 = load i32, i32* %19, align 4
  tail call void @WebPCopyPlane(i8* %44, i32 %46, i8* %23, i32 %47, i32 %36, i32 %38) #4
  %48 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 7
  %49 = load i8*, i8** %48, align 8
  %50 = load i32, i32* %45, align 4
  %51 = load i32, i32* %26, align 8
  tail call void @WebPCopyPlane(i8* %49, i32 %50, i8* %30, i32 %51, i32 %36, i32 %38) #4
  %52 = load i32, i32* %33, align 8
  ret i32 %52
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitAlphaRGBA4444(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly, i32) #1 {
  %4 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 26
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %139, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %11 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %10, align 8
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 14
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %7
  %22 = icmp eq i32 %15, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = add nsw i32 %17, -1
  br label %32

25:                                               ; preds = %21
  %26 = add nsw i32 %15, -1
  %27 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = sext i32 %28 to i64
  %30 = sub nsw i64 0, %29
  %31 = getelementptr inbounds i8, i8* %5, i64 %30
  br label %32

32:                                               ; preds = %25, %23
  %33 = phi i8* [ %5, %23 ], [ %31, %25 ]
  %34 = phi i32 [ %24, %23 ], [ %17, %25 ]
  %35 = phi i32 [ 0, %23 ], [ %26, %25 ]
  %36 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 21
  %37 = load i32, i32* %36, align 8
  %38 = add i32 %17, %15
  %39 = add i32 %38, %37
  %40 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 22
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %32
  %44 = add i32 %37, %35
  %45 = sub i32 %39, %44
  br label %46

46:                                               ; preds = %7, %32, %43
  %47 = phi i8* [ %5, %7 ], [ %33, %43 ], [ %33, %32 ]
  %48 = phi i32 [ %17, %7 ], [ %45, %43 ], [ %34, %32 ]
  %49 = phi i32 [ %15, %7 ], [ %35, %43 ], [ %35, %32 ]
  %50 = sext i32 %49 to i64
  %51 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 4, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 4, i32 0, i32 1
  %54 = bitcast i8** %53 to i32*
  %55 = load i32, i32* %54, align 8
  %56 = sext i32 %55 to i64
  %57 = mul nsw i64 %56, %50
  %58 = getelementptr inbounds i8, i8* %52, i64 %57
  %59 = icmp sgt i32 %48, 0
  br i1 %59, label %60, label %139

60:                                               ; preds = %46
  %61 = getelementptr inbounds i8, i8* %58, i64 1
  %62 = icmp sgt i32 %9, 0
  %63 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 0
  %64 = zext i32 %9 to i64
  %65 = and i64 %64, 1
  %66 = icmp eq i32 %9, 1
  %67 = sub nsw i64 %64, %65
  %68 = icmp eq i64 %65, 0
  br label %69

69:                                               ; preds = %122, %60
  %70 = phi i32 [ %55, %60 ], [ %123, %122 ]
  %71 = phi i32 [ 0, %60 ], [ %130, %122 ]
  %72 = phi i32 [ 15, %60 ], [ %124, %122 ]
  %73 = phi i8* [ %61, %60 ], [ %129, %122 ]
  %74 = phi i8* [ %47, %60 ], [ %127, %122 ]
  br i1 %62, label %75, label %122

75:                                               ; preds = %69
  br i1 %66, label %104, label %76

76:                                               ; preds = %75, %76
  %77 = phi i64 [ %101, %76 ], [ 0, %75 ]
  %78 = phi i32 [ %100, %76 ], [ %72, %75 ]
  %79 = phi i64 [ %102, %76 ], [ %67, %75 ]
  %80 = getelementptr inbounds i8, i8* %74, i64 %77
  %81 = load i8, i8* %80, align 1
  %82 = lshr i8 %81, 4
  %83 = zext i8 %82 to i32
  %84 = shl nuw nsw i64 %77, 1
  %85 = getelementptr inbounds i8, i8* %73, i64 %84
  %86 = load i8, i8* %85, align 1
  %87 = and i8 %86, -16
  %88 = or i8 %87, %82
  store i8 %88, i8* %85, align 1
  %89 = and i32 %78, %83
  %90 = or i64 %77, 1
  %91 = getelementptr inbounds i8, i8* %74, i64 %90
  %92 = load i8, i8* %91, align 1
  %93 = lshr i8 %92, 4
  %94 = zext i8 %93 to i32
  %95 = shl nuw nsw i64 %90, 1
  %96 = getelementptr inbounds i8, i8* %73, i64 %95
  %97 = load i8, i8* %96, align 1
  %98 = and i8 %97, -16
  %99 = or i8 %98, %93
  store i8 %99, i8* %96, align 1
  %100 = and i32 %89, %94
  %101 = add nuw nsw i64 %77, 2
  %102 = add i64 %79, -2
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %76

104:                                              ; preds = %76, %75
  %105 = phi i32 [ undef, %75 ], [ %100, %76 ]
  %106 = phi i64 [ 0, %75 ], [ %101, %76 ]
  %107 = phi i32 [ %72, %75 ], [ %100, %76 ]
  br i1 %68, label %119, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds i8, i8* %74, i64 %106
  %110 = load i8, i8* %109, align 1
  %111 = lshr i8 %110, 4
  %112 = shl nuw nsw i64 %106, 1
  %113 = getelementptr inbounds i8, i8* %73, i64 %112
  %114 = load i8, i8* %113, align 1
  %115 = and i8 %114, -16
  %116 = or i8 %115, %111
  store i8 %116, i8* %113, align 1
  %117 = zext i8 %111 to i32
  %118 = and i32 %107, %117
  br label %119

119:                                              ; preds = %104, %108
  %120 = phi i32 [ %105, %104 ], [ %118, %108 ]
  %121 = load i32, i32* %54, align 8
  br label %122

122:                                              ; preds = %119, %69
  %123 = phi i32 [ %70, %69 ], [ %121, %119 ]
  %124 = phi i32 [ %72, %69 ], [ %120, %119 ]
  %125 = load i32, i32* %63, align 8
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %74, i64 %126
  %128 = sext i32 %123 to i64
  %129 = getelementptr inbounds i8, i8* %73, i64 %128
  %130 = add nuw nsw i32 %71, 1
  %131 = icmp eq i32 %130, %48
  br i1 %131, label %132, label %69

132:                                              ; preds = %122
  %133 = icmp eq i32 %124, 15
  %134 = add i32 %13, -7
  %135 = icmp ugt i32 %134, 3
  %136 = or i1 %135, %133
  br i1 %136, label %139, label %137

137:                                              ; preds = %132
  %138 = load void (i8*, i32, i32, i32)*, void (i8*, i32, i32, i32)** @WebPApplyAlphaMultiply4444, align 8
  tail call void %138(i8* %58, i32 %9, i32 %48, i32 %123) #4
  br label %139

139:                                              ; preds = %46, %137, %132, %3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitAlphaRGB(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly, i32) #1 {
  %4 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 26
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %76, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %11 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %10, align 8
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 4
  %15 = icmp eq i32 %13, 9
  %16 = or i1 %14, %15
  %17 = zext i1 %16 to i32
  %18 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 14
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %7
  %26 = icmp eq i32 %19, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = add nsw i32 %21, -1
  br label %36

29:                                               ; preds = %25
  %30 = add nsw i32 %19, -1
  %31 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = sext i32 %32 to i64
  %34 = sub nsw i64 0, %33
  %35 = getelementptr inbounds i8, i8* %5, i64 %34
  br label %36

36:                                               ; preds = %29, %27
  %37 = phi i8* [ %5, %27 ], [ %35, %29 ]
  %38 = phi i32 [ %28, %27 ], [ %21, %29 ]
  %39 = phi i32 [ 0, %27 ], [ %30, %29 ]
  %40 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 21
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %21, %19
  %43 = add i32 %42, %41
  %44 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 22
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %36
  %48 = add i32 %41, %39
  %49 = sub i32 %43, %48
  br label %50

50:                                               ; preds = %7, %36, %47
  %51 = phi i8* [ %5, %7 ], [ %37, %47 ], [ %37, %36 ]
  %52 = phi i32 [ %21, %7 ], [ %49, %47 ], [ %38, %36 ]
  %53 = phi i32 [ %19, %7 ], [ %39, %47 ], [ %39, %36 ]
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 4, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %11, i64 0, i32 4, i32 0, i32 1
  %58 = bitcast i8** %57 to i32*
  %59 = load i32, i32* %58, align 8
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %60, %54
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = select i1 %16, i64 0, i64 3
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = load i32 (i8*, i32, i32, i32, i8*, i32)*, i32 (i8*, i32, i32, i32, i8*, i32)** @WebPDispatchAlpha, align 8
  %66 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = tail call i32 %65(i8* %51, i32 %67, i32 %9, i32 %52, i8* %64, i32 %59) #4
  %69 = icmp eq i32 %68, 0
  %70 = add i32 %13, -7
  %71 = icmp ugt i32 %70, 3
  %72 = or i1 %71, %69
  br i1 %72, label %76, label %73

73:                                               ; preds = %50
  %74 = load void (i8*, i32, i32, i32, i32)*, void (i8*, i32, i32, i32, i32)** @WebPApplyAlphaMultiply, align 8
  %75 = load i32, i32* %58, align 8
  tail call void %74(i8* %62, i32 %17, i32 %9, i32 %52, i32 %75) #4
  br label %76

76:                                               ; preds = %73, %50, %3
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @EmitAlphaYUV(%struct.VP8Io* nocapture readonly, %struct.WebPDecParams* nocapture readonly, i32) #1 {
  %4 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 26
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds %struct.WebPDecParams, %struct.WebPDecParams* %1, i64 0, i32 0
  %7 = load %struct.WebPDecBuffer*, %struct.WebPDecBuffer** %6, align 8
  %8 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %7, i64 0, i32 4, i32 0, i32 3
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds %struct.WebPDecBuffer, %struct.WebPDecBuffer* %7, i64 0, i32 4, i32 0, i32 7
  %18 = load i32, i32* %17, align 4
  %19 = sext i32 %18 to i64
  %20 = mul nsw i64 %19, %16
  %21 = getelementptr inbounds i8, i8* %13, i64 %20
  %22 = icmp eq i8* %5, null
  br i1 %22, label %50, label %23

23:                                               ; preds = %3
  %24 = icmp sgt i32 %11, 0
  br i1 %24, label %25, label %88

25:                                               ; preds = %23
  %26 = sext i32 %9 to i64
  %27 = getelementptr inbounds %struct.VP8Io, %struct.VP8Io* %0, i64 0, i32 0
  %28 = and i32 %11, 1
  %29 = icmp eq i32 %11, 1
  br i1 %29, label %83, label %30

30:                                               ; preds = %25
  %31 = sub i32 %11, %28
  br label %32

32:                                               ; preds = %32, %30
  %33 = phi i8* [ %21, %30 ], [ %47, %32 ]
  %34 = phi i8* [ %5, %30 ], [ %44, %32 ]
  %35 = phi i32 [ %31, %30 ], [ %48, %32 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %34, i64 %26, i1 false)
  %36 = load i32, i32* %27, align 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %34, i64 %37
  %39 = load i32, i32* %17, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i8, i8* %33, i64 %40
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %38, i64 %26, i1 false)
  %42 = load i32, i32* %27, align 8
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %38, i64 %43
  %45 = load i32, i32* %17, align 4
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, i8* %41, i64 %46
  %48 = add i32 %35, -2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %83, label %32

50:                                               ; preds = %3
  %51 = icmp ne i8* %13, null
  %52 = icmp sgt i32 %11, 0
  %53 = and i1 %52, %51
  br i1 %53, label %54, label %88

54:                                               ; preds = %50
  %55 = sext i32 %9 to i64
  %56 = add i32 %11, -1
  %57 = and i32 %11, 7
  %58 = icmp ult i32 %56, 7
  br i1 %58, label %74, label %59

59:                                               ; preds = %54
  %60 = sub i32 %11, %57
  br label %61

61:                                               ; preds = %61, %59
  %62 = phi i8* [ %21, %59 ], [ %71, %61 ]
  %63 = phi i32 [ %60, %59 ], [ %72, %61 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %62, i8 -1, i64 %55, i1 false) #4
  %64 = getelementptr inbounds i8, i8* %62, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %64, i8 -1, i64 %55, i1 false) #4
  %65 = getelementptr inbounds i8, i8* %64, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %65, i8 -1, i64 %55, i1 false) #4
  %66 = getelementptr inbounds i8, i8* %65, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 -1, i64 %55, i1 false) #4
  %67 = getelementptr inbounds i8, i8* %66, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %67, i8 -1, i64 %55, i1 false) #4
  %68 = getelementptr inbounds i8, i8* %67, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -1, i64 %55, i1 false) #4
  %69 = getelementptr inbounds i8, i8* %68, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %69, i8 -1, i64 %55, i1 false) #4
  %70 = getelementptr inbounds i8, i8* %69, i64 %19
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %70, i8 -1, i64 %55, i1 false) #4
  %71 = getelementptr inbounds i8, i8* %70, i64 %19
  %72 = add i32 %63, -8
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %61

74:                                               ; preds = %61, %54
  %75 = phi i8* [ %21, %54 ], [ %71, %61 ]
  %76 = icmp eq i32 %57, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %74, %77
  %78 = phi i8* [ %80, %77 ], [ %75, %74 ]
  %79 = phi i32 [ %81, %77 ], [ %57, %74 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %78, i8 -1, i64 %55, i1 false) #4
  %80 = getelementptr inbounds i8, i8* %78, i64 %19
  %81 = add i32 %79, -1
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %88, label %77, !llvm.loop !2

83:                                               ; preds = %32, %25
  %84 = phi i8* [ %21, %25 ], [ %47, %32 ]
  %85 = phi i8* [ %5, %25 ], [ %44, %32 ]
  %86 = icmp eq i32 %28, 0
  br i1 %86, label %88, label %87

87:                                               ; preds = %83
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %84, i8* align 1 %85, i64 %26, i1 false)
  br label %88

88:                                               ; preds = %87, %83, %74, %77, %23, %50
  ret i32 0
}

declare void @WebPInitAlphaProcessing() local_unnamed_addr #2

declare void @WebPSamplerProcessPlane(i8*, i32, i8*, i8*, i32, i8*, i32, i32, i32, void (i8*, i8*, i8*, i8*, i32)*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @WebPCopyPlane(i8*, i32, i8*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @WebPSafeFree(i8*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
