; ModuleID = '../../sandbox/linux/syscall_broker/broker_permission_list.cc'
source_filename = "../../sandbox/linux/syscall_broker/broker_permission_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%"class.sandbox::syscall_broker::BrokerPermissionList" = type { i32, %"class.std::__1::vector", %"class.sandbox::syscall_broker::BrokerFilePermission"*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.sandbox::syscall_broker::BrokerFilePermission"* }
%"class.sandbox::syscall_broker::BrokerFilePermission" = type <{ %"class.std::__1::basic_string", i8, i8, i8, i8, i8, i8, [2 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@.str = private unnamed_addr constant [34 x i8] c"*file_to_access should be nullptr\00", align 1

@_ZN7sandbox14syscall_broker20BrokerPermissionListC1EiRKNSt3__16vectorINS0_20BrokerFilePermissionENS2_9allocatorIS4_EEEE = hidden unnamed_addr alias void (%"class.sandbox::syscall_broker::BrokerPermissionList"*, i32, %"class.std::__1::vector"*), void (%"class.sandbox::syscall_broker::BrokerPermissionList"*, i32, %"class.std::__1::vector"*)* @_ZN7sandbox14syscall_broker20BrokerPermissionListC2EiRKNSt3__16vectorINS0_20BrokerFilePermissionENS2_9allocatorIS4_EEEE
@_ZN7sandbox14syscall_broker20BrokerPermissionListD1Ev = hidden unnamed_addr alias void (%"class.sandbox::syscall_broker::BrokerPermissionList"*), void (%"class.sandbox::syscall_broker::BrokerPermissionList"*)* @_ZN7sandbox14syscall_broker20BrokerPermissionListD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox14syscall_broker20BrokerPermissionListC2EiRKNSt3__16vectorINS0_20BrokerFilePermissionENS2_9allocatorIS4_EEEE(%"class.sandbox::syscall_broker::BrokerPermissionList"*, i32, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 0
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #6
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %8 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 5
  %14 = icmp eq i64 %12, 0
  br i1 %14, label %61, label %15

15:                                               ; preds = %3
  %16 = icmp ugt i64 %13, 576460752303423487
  br i1 %16, label %17, label %19

17:                                               ; preds = %15
  %18 = bitcast %"class.std::__1::vector"* %5 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %18) #7
  unreachable

19:                                               ; preds = %15
  %20 = tail call i8* @_Znwm(i64 %12) #8
  %21 = bitcast i8* %20 to %"class.sandbox::syscall_broker::BrokerFilePermission"*
  %22 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 1, i32 0, i32 1
  %23 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %22 to i8**
  store i8* %20, i8** %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %5 to i8**
  store i8* %20, i8** %24, align 8
  %25 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %21, i64 %13
  %26 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.sandbox::syscall_broker::BrokerFilePermission"* %25, %"class.sandbox::syscall_broker::BrokerFilePermission"** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %28 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %27, align 8
  %29 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %7, align 8
  %30 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %22 to i64*
  %31 = ptrtoint i8* %20 to i64
  %32 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %28, %29
  br i1 %32, label %57, label %33

33:                                               ; preds = %19, %49
  %34 = phi %"class.sandbox::syscall_broker::BrokerFilePermission"* [ %53, %49 ], [ %21, %19 ]
  %35 = phi %"class.sandbox::syscall_broker::BrokerFilePermission"* [ %52, %49 ], [ %28, %19 ]
  %36 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %43, label %40

40:                                               ; preds = %33
  %41 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %34 to i8*
  %42 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %35 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 24, i1 false) #6
  br label %49

43:                                               ; preds = %33
  %44 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %34, i64 0, i32 0
  %45 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %44, i8* %46, i64 %48) #6
  br label %49

49:                                               ; preds = %43, %40
  %50 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %34, i64 0, i32 1
  %51 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %35, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %50, i8* align 8 %51, i64 6, i1 false) #6
  %52 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %35, i64 1
  %53 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %34, i64 1
  %54 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %52, %29
  br i1 %54, label %55, label %33

55:                                               ; preds = %49
  %56 = ptrtoint %"class.sandbox::syscall_broker::BrokerFilePermission"* %53 to i64
  br label %57

57:                                               ; preds = %55, %19
  %58 = phi i64 [ %31, %19 ], [ %56, %55 ]
  store i64 %58, i64* %30, align 8
  %59 = load i64, i64* %8, align 8
  %60 = load i64, i64* %10, align 8
  br label %61

61:                                               ; preds = %3, %57
  %62 = phi i64 [ %11, %3 ], [ %60, %57 ]
  %63 = phi i64 [ %9, %3 ], [ %59, %57 ]
  %64 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 3
  %65 = sub i64 %63, %62
  %66 = ashr exact i64 %65, 5
  store i64 %66, i64* %64, align 8
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %61
  %69 = bitcast %"class.std::__1::vector"* %5 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 2
  %72 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"** %71 to i64*
  store i64 %70, i64* %72, align 8
  br label %75

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 2
  store %"class.sandbox::syscall_broker::BrokerFilePermission"* null, %"class.sandbox::syscall_broker::BrokerFilePermission"** %74, align 8
  br label %75

75:                                               ; preds = %73, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7sandbox14syscall_broker20BrokerPermissionListD2Ev(%"class.sandbox::syscall_broker::BrokerPermissionList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %3, align 8
  %5 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %4 to i8*
  %8 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %8, align 8
  %10 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.sandbox::syscall_broker::BrokerFilePermission"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %12, i64 -1
  %14 = bitcast %"class.sandbox::syscall_broker::BrokerFilePermission"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #8
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.sandbox::syscall_broker::BrokerFilePermission"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::vector"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.sandbox::syscall_broker::BrokerFilePermission"* %4, %"class.sandbox::syscall_broker::BrokerFilePermission"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #8
  br label %28

28:                                               ; preds = %1, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerPermissionList28GetFileNameIfAllowedToAccessEPKciPS3_(%"class.sandbox::syscall_broker::BrokerPermissionList"* nocapture readonly, i8*, i32, i8**) local_unnamed_addr #0 align 2 {
  %5 = icmp eq i8** %3, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %4
  %7 = load i8*, i8** %3, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %26

9:                                                ; preds = %4, %6
  %10 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %24, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 2
  br label %18

15:                                               ; preds = %18
  %16 = load i64, i64* %10, align 8
  %17 = icmp ult i64 %23, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %13, %15
  %19 = phi i64 [ 0, %13 ], [ %23, %15 ]
  %20 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %14, align 8
  %21 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %20, i64 %19
  %22 = tail call zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission11CheckAccessEPKciPS3_(%"class.sandbox::syscall_broker::BrokerFilePermission"* %21, i8* %1, i32 %2, i8** %3) #6
  %23 = add nuw i64 %19, 1
  br i1 %22, label %24, label %15

24:                                               ; preds = %18, %15, %9
  %25 = phi i1 [ false, %9 ], [ false, %15 ], [ true, %18 ]
  ret i1 %25

26:                                               ; preds = %6
  tail call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #6
  ret i1 false
}

declare zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission11CheckAccessEPKciPS3_(%"class.sandbox::syscall_broker::BrokerFilePermission"*, i8*, i32, i8**) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerPermissionList26GetFileNameIfAllowedToOpenEPKciPS3_Pb(%"class.sandbox::syscall_broker::BrokerPermissionList"* nocapture readonly, i8*, i32, i8**, i8*) local_unnamed_addr #0 align 2 {
  %6 = icmp eq i8** %3, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %5
  %8 = load i8*, i8** %3, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %27

10:                                               ; preds = %5, %7
  %11 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 3
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 2
  br label %19

16:                                               ; preds = %19
  %17 = load i64, i64* %11, align 8
  %18 = icmp ult i64 %24, %17
  br i1 %18, label %19, label %25

19:                                               ; preds = %14, %16
  %20 = phi i64 [ 0, %14 ], [ %24, %16 ]
  %21 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %15, align 8
  %22 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %21, i64 %20
  %23 = tail call zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission9CheckOpenEPKciPS3_Pb(%"class.sandbox::syscall_broker::BrokerFilePermission"* %22, i8* %1, i32 %2, i8** %3, i8* %4) #6
  %24 = add nuw i64 %20, 1
  br i1 %23, label %25, label %16

25:                                               ; preds = %19, %16, %10
  %26 = phi i1 [ false, %10 ], [ false, %16 ], [ true, %19 ]
  ret i1 %26

27:                                               ; preds = %7
  tail call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #6
  ret i1 false
}

declare zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission9CheckOpenEPKciPS3_Pb(%"class.sandbox::syscall_broker::BrokerFilePermission"*, i8*, i32, i8**, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerPermissionList26GetFileNameIfAllowedToStatEPKcPS3_(%"class.sandbox::syscall_broker::BrokerPermissionList"* nocapture readonly, i8*, i8**) local_unnamed_addr #0 align 2 {
  %4 = icmp eq i8** %2, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = load i8*, i8** %2, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %25

8:                                                ; preds = %3, %5
  %9 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 3
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerPermissionList", %"class.sandbox::syscall_broker::BrokerPermissionList"* %0, i64 0, i32 2
  br label %17

14:                                               ; preds = %17
  %15 = load i64, i64* %9, align 8
  %16 = icmp ult i64 %22, %15
  br i1 %16, label %17, label %23

17:                                               ; preds = %12, %14
  %18 = phi i64 [ 0, %12 ], [ %22, %14 ]
  %19 = load %"class.sandbox::syscall_broker::BrokerFilePermission"*, %"class.sandbox::syscall_broker::BrokerFilePermission"** %13, align 8
  %20 = getelementptr inbounds %"class.sandbox::syscall_broker::BrokerFilePermission", %"class.sandbox::syscall_broker::BrokerFilePermission"* %19, i64 %18
  %21 = tail call zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission9CheckStatEPKcPS3_(%"class.sandbox::syscall_broker::BrokerFilePermission"* %20, i8* %1, i8** %2) #6
  %22 = add nuw i64 %18, 1
  br i1 %21, label %23, label %14

23:                                               ; preds = %17, %14, %8
  %24 = phi i1 [ false, %8 ], [ false, %14 ], [ true, %17 ]
  ret i1 %24

25:                                               ; preds = %5
  tail call void @_ZN7logging6RawLogEiPKc(i32 3, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str, i64 0, i64 0)) #6
  ret i1 false
}

declare zeroext i1 @_ZNK7sandbox14syscall_broker20BrokerFilePermission9CheckStatEPKcPS3_(%"class.sandbox::syscall_broker::BrokerFilePermission"*, i8*, i8**) local_unnamed_addr #1

declare void @_ZN7logging6RawLogEiPKc(i32, i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
