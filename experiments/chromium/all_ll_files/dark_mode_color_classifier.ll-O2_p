; ModuleID = '../../third_party/blink/renderer/platform/graphics/dark_mode_color_classifier.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/dark_mode_color_classifier.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::DarkModeColorClassifier" = type { i32 (...)** }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.blink::(anonymous namespace)::SimpleColorClassifier" = type <{ %"class.blink::DarkModeColorClassifier", i8, [7 x i8] }>
%"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier" = type <{ %"class.blink::DarkModeColorClassifier", i32, [4 x i8] }>
%"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier" = type <{ %"class.blink::DarkModeColorClassifier", i32, [4 x i8] }>

@_ZTVN5blink23DarkModeColorClassifierE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD2Ev to i8*), i8* bitcast (void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_121SimpleColorClassifierE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::SimpleColorClassifier"*)* @_ZN5blink12_GLOBAL__N_121SimpleColorClassifierD0Ev to i8*), i8* bitcast (i8 (%"class.blink::(anonymous namespace)::SimpleColorClassifier"*, i32)* @_ZN5blink12_GLOBAL__N_121SimpleColorClassifier17ShouldInvertColorEj to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifierE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"*)* @_ZN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifierD0Ev to i8*), i8* bitcast (i8 (%"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"*, i32)* @_ZN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifier17ShouldInvertColorEj to i8*)] }, align 8
@_ZTVN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifierE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD2Ev to i8*), i8* bitcast (void (%"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"*)* @_ZN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifierD0Ev to i8*), i8* bitcast (i8 (%"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"*, i32)* @_ZN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifier17ShouldInvertColorEj to i8*)] }, align 8

@_ZN5blink23DarkModeColorClassifierD1Ev = hidden unnamed_addr alias void (%"class.blink::DarkModeColorClassifier"*), void (%"class.blink::DarkModeColorClassifier"*)* @_ZN5blink23DarkModeColorClassifierD2Ev

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN5blink23DarkModeColorClassifier24CalculateColorBrightnessEj(i32) local_unnamed_addr #0 align 2 {
  %2 = lshr i32 %0, 16
  %3 = and i32 %2, 255
  %4 = mul nuw nsw i32 %3, 299
  %5 = lshr i32 %0, 8
  %6 = and i32 %5, 255
  %7 = mul nuw nsw i32 %6, 587
  %8 = and i32 %0, 255
  %9 = mul nuw nsw i32 %8, 114
  %10 = add nuw nsw i32 %7, %9
  %11 = add nuw nsw i32 %10, %4
  %12 = udiv i32 %11, 1000
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier23MakeTextColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* nocapture readonly dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.blink::DarkModeSettings", %"struct.blink::DarkModeSettings"* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 255
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 16) #8
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SimpleColorClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 1, i8* %8, align 8
  br label %18

9:                                                ; preds = %1
  %10 = icmp slt i32 %3, 1
  %11 = tail call i8* @_Znwm(i64 16) #8
  %12 = bitcast i8* %11 to i32 (...)***
  br i1 %10, label %13, label %15

13:                                               ; preds = %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SimpleColorClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  store i8 0, i8* %14, align 8
  br label %18

15:                                               ; preds = %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %3, i32* %17, align 8
  br label %18

18:                                               ; preds = %15, %13, %5
  %19 = phi i8* [ %6, %5 ], [ %11, %13 ], [ %11, %15 ]
  %20 = bitcast i8* %19 to %"class.blink::DarkModeColorClassifier"*
  ret %"class.blink::DarkModeColorClassifier"* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::DarkModeColorClassifier"* @_ZN5blink23DarkModeColorClassifier29MakeBackgroundColorClassifierERKNS_16DarkModeSettingsE(%"struct.blink::DarkModeSettings"* nocapture readonly dereferenceable(32)) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.blink::DarkModeSettings", %"struct.blink::DarkModeSettings"* %0, i64 0, i32 7
  %3 = load i32, i32* %2, align 4
  %4 = icmp sgt i32 %3, 255
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call i8* @_Znwm(i64 16) #8
  %7 = bitcast i8* %6 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SimpleColorClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %6, i64 8
  store i8 0, i8* %8, align 8
  br label %18

9:                                                ; preds = %1
  %10 = icmp slt i32 %3, 1
  %11 = tail call i8* @_Znwm(i64 16) #8
  %12 = bitcast i8* %11 to i32 (...)***
  br i1 %10, label %13, label %15

13:                                               ; preds = %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_121SimpleColorClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 8
  store i8 1, i8* %14, align 8
  br label %18

15:                                               ; preds = %9
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifierE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to i32*
  store i32 %3, i32* %17, align 8
  br label %18

18:                                               ; preds = %15, %13, %5
  %19 = phi i8* [ %6, %5 ], [ %11, %13 ], [ %11, %15 ]
  %20 = bitcast i8* %19 to %"class.blink::DarkModeColorClassifier"*
  ret %"class.blink::DarkModeColorClassifier"* %20
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN5blink23DarkModeColorClassifierD0Ev(%"class.blink::DarkModeColorClassifier"* nocapture readnone) unnamed_addr #2 align 2 {
  tail call void @llvm.trap() #9
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #3

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink23DarkModeColorClassifierD2Ev(%"class.blink::DarkModeColorClassifier"* nocapture) unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_121SimpleColorClassifierD0Ev(%"class.blink::(anonymous namespace)::SimpleColorClassifier"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::SimpleColorClassifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i8 @_ZN5blink12_GLOBAL__N_121SimpleColorClassifier17ShouldInvertColorEj(%"class.blink::(anonymous namespace)::SimpleColorClassifier"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::(anonymous namespace)::SimpleColorClassifier", %"class.blink::(anonymous namespace)::SimpleColorClassifier"* %0, i64 0, i32 1
  %4 = load i8, i8* %3, align 8
  ret i8 %4
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifierD0Ev(%"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i8 @_ZN5blink12_GLOBAL__N_135InvertLowBrightnessColorsClassifier17ShouldInvertColorEj(%"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %3, 255
  %5 = mul nuw nsw i32 %4, 299
  %6 = lshr i32 %1, 8
  %7 = and i32 %6, 255
  %8 = mul nuw nsw i32 %7, 587
  %9 = and i32 %1, 255
  %10 = mul nuw nsw i32 %9, 114
  %11 = add nuw nsw i32 %8, %10
  %12 = add nuw nsw i32 %11, %5
  %13 = udiv i32 %12, 1000
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier", %"class.blink::(anonymous namespace)::InvertLowBrightnessColorsClassifier"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp slt i32 %13, %15
  %17 = zext i1 %16 to i8
  ret i8 %17
}

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifierD0Ev(%"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"*) unnamed_addr #5 align 2 {
  %2 = bitcast %"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i8 @_ZN5blink12_GLOBAL__N_136InvertHighBrightnessColorsClassifier17ShouldInvertColorEj(%"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"* nocapture readonly, i32) unnamed_addr #6 align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %3, 255
  %5 = mul nuw nsw i32 %4, 299
  %6 = lshr i32 %1, 8
  %7 = and i32 %6, 255
  %8 = mul nuw nsw i32 %7, 587
  %9 = and i32 %1, 255
  %10 = mul nuw nsw i32 %9, 114
  %11 = add nuw nsw i32 %8, %10
  %12 = add nuw nsw i32 %11, %5
  %13 = udiv i32 %12, 1000
  %14 = getelementptr inbounds %"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier", %"class.blink::(anonymous namespace)::InvertHighBrightnessColorsClassifier"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp sgt i32 %13, %15
  %17 = zext i1 %16 to i8
  ret i8 %17
}

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { cold noreturn nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
