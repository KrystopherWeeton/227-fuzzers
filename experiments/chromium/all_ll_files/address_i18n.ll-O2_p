; ModuleID = '../../components/autofill/core/browser/geo/address_i18n.cc'
source_filename = "../../components/autofill/core/browser/geo/address_i18n.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.i18n::addressinput::AddressData" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.0" }
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::basic_string.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.13 }
%union.anon.13 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.autofill::AutofillType" = type { i32, i32, i32 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon.14 }
%struct.anon.14 = type { %"struct.std::__1::__padding.15", i8 }
%"struct.std::__1::__padding.15" = type { [1 x i8] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.autofill::AutofillProfile" = type { %"class.autofill::AutofillDataModel", %"class.autofill::NameInfo", %"class.autofill::EmailInfo", %"class.autofill::CompanyInfo", %"class.autofill::PhoneNumber", %"class.autofill::Address", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::basic_string", %"class.base::Time", i32, i8, i8, %"class.std::__1::map", %"class.std::__1::map", %"class.base::WeakPtrFactory" }
%"class.autofill::AutofillDataModel" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i64, %"class.base::Time", %"class.base::Time" }
%"class.autofill::FormGroup" = type { i32 (...)** }
%"class.autofill::NameInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.autofill::structured_address::AddressComponent"* }
%"class.autofill::structured_address::AddressComponent" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.24", %"class.absl::optional.31", %"class.autofill::structured_address::AddressComponent"*, i32, [4 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.std::__1::basic_string.10" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"class.autofill::structured_address::AddressComponent"**, %"class.autofill::structured_address::AddressComponent"**, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.autofill::structured_address::AddressComponent"** }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { %"class.std::__1::vector.36" }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"struct.autofill::structured_address::AddressToken"*, %"struct.autofill::structured_address::AddressToken"*, %"class.std::__1::__compressed_pair.38" }
%"struct.autofill::structured_address::AddressToken" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"struct.autofill::structured_address::AddressToken"* }
%"class.autofill::EmailInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.10" }
%"class.autofill::CompanyInfo" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.10", %"class.autofill::AutofillProfile"* }
%"class.autofill::PhoneNumber" = type { %"class.autofill::FormGroup", %"class.std::__1::basic_string.10", %"class.autofill::AutofillProfile"*, %"class.autofill::i18n::PhoneObject" }
%"class.autofill::i18n::PhoneObject" = type { %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.46", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10" }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.i18n::phonenumbers::PhoneNumber"* }
%"class.i18n::phonenumbers::PhoneNumber" = type opaque
%"class.autofill::Address" = type { %"class.autofill::FormGroup", %"class.std::__1::vector.52", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10", %"class.std::__1::basic_string", %"class.autofill::structured_address::Address" }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.std::__1::basic_string.10"*, %"class.std::__1::basic_string.10"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::basic_string.10"* }
%"class.autofill::structured_address::Address" = type { %"class.autofill::structured_address::AddressComponent.base", %"class.autofill::structured_address::StreetAddress", %"class.autofill::structured_address::PostalCode", %"class.autofill::structured_address::SortingCode", %"class.autofill::structured_address::DependentLocality", %"class.autofill::structured_address::City", %"class.autofill::structured_address::State", %"class.autofill::structured_address::CountryCode" }
%"class.autofill::structured_address::AddressComponent.base" = type <{ i32 (...)**, %"class.absl::optional", i32, i32, %"class.std::__1::vector.24", %"class.absl::optional.31", %"class.autofill::structured_address::AddressComponent"*, i32 }>
%"class.autofill::structured_address::StreetAddress" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8], %"class.autofill::structured_address::StreetAndDependentStreetName", %"class.autofill::structured_address::HouseNumber", %"class.autofill::structured_address::Premise", %"class.autofill::structured_address::SubPremise", %"class.std::__1::vector.52" }
%"class.autofill::structured_address::AddressComponentWithRewriter.base" = type { %"class.autofill::structured_address::AddressComponent.base" }
%"class.autofill::structured_address::StreetAndDependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::StreetName", %"class.autofill::structured_address::DependentStreetName" }
%"class.autofill::structured_address::StreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentStreetName" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::HouseNumber" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Premise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::SubPremise" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8], %"class.autofill::structured_address::Floor", %"class.autofill::structured_address::Apartment" }
%"class.autofill::structured_address::Floor" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::Apartment" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::PostalCode" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::SortingCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::DependentLocality" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::City" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.autofill::structured_address::State" = type { %"class.autofill::structured_address::AddressComponentWithRewriter.base", [4 x i8] }
%"class.autofill::structured_address::CountryCode" = type { %"class.autofill::structured_address::AddressComponent.base", [4 x i8] }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { i64 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.67 }
%class.scoped_refptr.67 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.68", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.68" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.69" }
%"struct.std::__1::atomic.69" = type { %"struct.std::__1::__atomic_base.70" }
%"struct.std::__1::__atomic_base.70" = type { %"struct.std::__1::__atomic_base.71" }
%"struct.std::__1::__atomic_base.71" = type { %"struct.std::__1::__cxx_atomic_impl.72" }
%"struct.std::__1::__cxx_atomic_impl.72" = type { %"struct.std::__1::__cxx_atomic_base_impl.73" }
%"struct.std::__1::__cxx_atomic_base_impl.73" = type { i8 }

$_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSB_SG_EEEFS9_SL_EE3RunEPNS0_13BindStateBaseESL_ = comdat any

$_ZN4base8internal9BindStateIPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNS9_12AutofillTypeEEJSA_SF_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [2 x i8] c"\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.i18n::addressinput::AddressData"* @_ZN8autofill4i18n17CreateAddressDataERKN4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKNS_12AutofillTypeEEEE(%"class.base::RepeatingCallback"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.std::__1::basic_string.10", align 8
  %4 = alloca %"class.autofill::AutofillType", align 4
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string.10", align 8
  %7 = alloca %"class.autofill::AutofillType", align 4
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string.10", align 8
  %10 = alloca %"class.autofill::AutofillType", align 4
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string.10", align 8
  %13 = alloca %"class.autofill::AutofillType", align 4
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string.10", align 8
  %16 = alloca %"class.autofill::AutofillType", align 4
  %17 = alloca %"class.std::__1::basic_string", align 8
  %18 = alloca %"class.std::__1::basic_string.10", align 8
  %19 = alloca %"class.autofill::AutofillType", align 4
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string.10", align 8
  %22 = alloca %"class.autofill::AutofillType", align 4
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.std::__1::basic_string.10", align 8
  %25 = alloca %"class.autofill::AutofillType", align 4
  %26 = alloca %"class.std::__1::vector", align 16
  %27 = alloca %"class.std::__1::basic_string", align 8
  %28 = alloca %"class.std::__1::basic_string.10", align 8
  %29 = alloca %"class.autofill::AutofillType", align 4
  %30 = tail call i8* @_Znwm(i64 240) #8
  %31 = bitcast i8* %30 to %"struct.i18n::addressinput::AddressData"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 0, i64 240, i1 false) #9
  %32 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #9
  %33 = bitcast %"class.std::__1::basic_string.10"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #9
  %34 = bitcast %"class.autofill::AutofillType"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %34) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %4, i32 7) #9
  %35 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !2
  %37 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %36, i64 0, i32 1
  %38 = bitcast void ()** %37 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %39 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %38, align 8, !noalias !2
  call void %39(%"class.std::__1::basic_string.10"* nonnull sret %3, %"class.base::internal::BindStateBase"* %36, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %4) #9
  %40 = bitcast %"class.std::__1::basic_string.10"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %40, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string.10"* %3 to i16*
  %47 = select i1 %43, i16* %45, i16* %46
  %48 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = zext i8 %42 to i64
  %51 = select i1 %43, i64 %49, i64 %50
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %2, i16* %47, i64 %51) #9
  %52 = getelementptr inbounds i8, i8* %30, i64 216
  %53 = getelementptr inbounds i8, i8* %30, i64 239
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %1
  %57 = bitcast i8* %52 to i8**
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #8
  br label %59

59:                                               ; preds = %56, %1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* nonnull align 8 %32, i64 24, i1 false) #9
  %60 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  store i8 0, i8* %61, align 1
  store i8 0, i8* %32, align 8
  %62 = load i8, i8* %41, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = bitcast %"class.std::__1::basic_string.10"* %3 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #8
  br label %67

67:                                               ; preds = %59, %64
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %34) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #9
  %68 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %68) #9
  %69 = bitcast %"class.std::__1::basic_string.10"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #9
  %70 = bitcast %"class.autofill::AutofillType"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %70) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %7, i32 60) #9
  %71 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !5
  %72 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %71, i64 0, i32 1
  %73 = bitcast void ()** %72 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %74 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %73, align 8, !noalias !5
  call void %74(%"class.std::__1::basic_string.10"* nonnull sret %6, %"class.base::internal::BindStateBase"* %71, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %7) #9
  %75 = bitcast %"class.std::__1::basic_string.10"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string.10"* %6 to i16*
  %82 = select i1 %78, i16* %80, i16* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %77 to i64
  %86 = select i1 %78, i64 %84, i64 %85
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %5, i16* %82, i64 %86) #9
  %87 = getelementptr inbounds i8, i8* %30, i64 192
  %88 = getelementptr inbounds i8, i8* %30, i64 215
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %67
  %92 = bitcast i8* %87 to i8**
  %93 = load i8*, i8** %92, align 8
  call void @_ZdlPv(i8* %93) #8
  br label %94

94:                                               ; preds = %91, %67
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* nonnull align 8 %68, i64 24, i1 false) #9
  %95 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %96 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %95, i64 0, i32 1, i32 0
  store i8 0, i8* %96, align 1
  store i8 0, i8* %68, align 8
  %97 = load i8, i8* %76, align 1
  %98 = icmp slt i8 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %94
  %100 = bitcast %"class.std::__1::basic_string.10"* %6 to i8**
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #8
  br label %102

102:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %70) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %68) #9
  %103 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #9
  %104 = bitcast %"class.std::__1::basic_string.10"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #9
  %105 = bitcast %"class.autofill::AutofillType"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %105) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillType"* nonnull %10, i32 14, i32 0) #9
  %106 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !8
  %107 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %106, i64 0, i32 1
  %108 = bitcast void ()** %107 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %109 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %108, align 8, !noalias !8
  call void %109(%"class.std::__1::basic_string.10"* nonnull sret %9, %"class.base::internal::BindStateBase"* %106, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %10) #9
  %110 = bitcast %"class.std::__1::basic_string.10"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %110, i64 0, i32 1, i32 1
  %112 = load i8, i8* %111, align 1
  %113 = icmp slt i8 %112, 0
  %114 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i16*, i16** %114, align 8
  %116 = bitcast %"class.std::__1::basic_string.10"* %9 to i16*
  %117 = select i1 %113, i16* %115, i16* %116
  %118 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = zext i8 %112 to i64
  %121 = select i1 %113, i64 %119, i64 %120
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %8, i16* %117, i64 %121) #9
  %122 = getelementptr inbounds i8, i8* %30, i64 23
  %123 = load i8, i8* %122, align 1
  %124 = icmp slt i8 %123, 0
  br i1 %124, label %125, label %128

125:                                              ; preds = %102
  %126 = bitcast i8* %30 to i8**
  %127 = load i8*, i8** %126, align 8
  call void @_ZdlPv(i8* %127) #8
  br label %128

128:                                              ; preds = %125, %102
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %30, i8* nonnull align 8 %103, i64 24, i1 false) #9
  %129 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %130 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %129, i64 0, i32 1, i32 0
  store i8 0, i8* %130, align 1
  store i8 0, i8* %103, align 8
  %131 = load i8, i8* %111, align 1
  %132 = icmp slt i8 %131, 0
  br i1 %132, label %133, label %136

133:                                              ; preds = %128
  %134 = bitcast %"class.std::__1::basic_string.10"* %9 to i8**
  %135 = load i8*, i8** %134, align 8
  call void @_ZdlPv(i8* %135) #8
  br label %136

136:                                              ; preds = %128, %133
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %105) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #9
  %137 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %137) #9
  %138 = bitcast %"class.std::__1::basic_string.10"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #9
  %139 = bitcast %"class.autofill::AutofillType"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %139) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %13, i32 34) #9
  %140 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !11
  %141 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %140, i64 0, i32 1
  %142 = bitcast void ()** %141 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %143 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %142, align 8, !noalias !11
  call void %143(%"class.std::__1::basic_string.10"* nonnull sret %12, %"class.base::internal::BindStateBase"* %140, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %13) #9
  %144 = bitcast %"class.std::__1::basic_string.10"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %145 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %144, i64 0, i32 1, i32 1
  %146 = load i8, i8* %145, align 1
  %147 = icmp slt i8 %146, 0
  %148 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load i16*, i16** %148, align 8
  %150 = bitcast %"class.std::__1::basic_string.10"* %12 to i16*
  %151 = select i1 %147, i16* %149, i16* %150
  %152 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %153 = load i64, i64* %152, align 8
  %154 = zext i8 %146 to i64
  %155 = select i1 %147, i64 %153, i64 %154
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %11, i16* %151, i64 %155) #9
  %156 = getelementptr inbounds i8, i8* %30, i64 48
  %157 = getelementptr inbounds i8, i8* %30, i64 71
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  br i1 %159, label %160, label %163

160:                                              ; preds = %136
  %161 = bitcast i8* %156 to i8**
  %162 = load i8*, i8** %161, align 8
  call void @_ZdlPv(i8* %162) #8
  br label %163

163:                                              ; preds = %160, %136
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %156, i8* nonnull align 8 %137, i64 24, i1 false) #9
  %164 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  store i8 0, i8* %165, align 1
  store i8 0, i8* %137, align 8
  %166 = load i8, i8* %145, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %163
  %169 = bitcast %"class.std::__1::basic_string.10"* %12 to i8**
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #8
  br label %171

171:                                              ; preds = %163, %168
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %137) #9
  %172 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %172) #9
  %173 = bitcast %"class.std::__1::basic_string.10"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %173) #9
  %174 = bitcast %"class.autofill::AutofillType"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %174) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %16, i32 33) #9
  %175 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !14
  %176 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %175, i64 0, i32 1
  %177 = bitcast void ()** %176 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %178 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %177, align 8, !noalias !14
  call void %178(%"class.std::__1::basic_string.10"* nonnull sret %15, %"class.base::internal::BindStateBase"* %175, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %16) #9
  %179 = bitcast %"class.std::__1::basic_string.10"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %179, i64 0, i32 1, i32 1
  %181 = load i8, i8* %180, align 1
  %182 = icmp slt i8 %181, 0
  %183 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load i16*, i16** %183, align 8
  %185 = bitcast %"class.std::__1::basic_string.10"* %15 to i16*
  %186 = select i1 %182, i16* %184, i16* %185
  %187 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = zext i8 %181 to i64
  %190 = select i1 %182, i64 %188, i64 %189
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %14, i16* %186, i64 %190) #9
  %191 = getelementptr inbounds i8, i8* %30, i64 72
  %192 = getelementptr inbounds i8, i8* %30, i64 95
  %193 = load i8, i8* %192, align 1
  %194 = icmp slt i8 %193, 0
  br i1 %194, label %195, label %198

195:                                              ; preds = %171
  %196 = bitcast i8* %191 to i8**
  %197 = load i8*, i8** %196, align 8
  call void @_ZdlPv(i8* %197) #8
  br label %198

198:                                              ; preds = %195, %171
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %191, i8* nonnull align 8 %172, i64 24, i1 false) #9
  %199 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %200 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %199, i64 0, i32 1, i32 0
  store i8 0, i8* %200, align 1
  store i8 0, i8* %172, align 8
  %201 = load i8, i8* %180, align 1
  %202 = icmp slt i8 %201, 0
  br i1 %202, label %203, label %206

203:                                              ; preds = %198
  %204 = bitcast %"class.std::__1::basic_string.10"* %15 to i8**
  %205 = load i8*, i8** %204, align 8
  call void @_ZdlPv(i8* %205) #8
  br label %206

206:                                              ; preds = %198, %203
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %174) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %173) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %172) #9
  %207 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #9
  %208 = bitcast %"class.std::__1::basic_string.10"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %208) #9
  %209 = bitcast %"class.autofill::AutofillType"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %209) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %19, i32 81) #9
  %210 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !17
  %211 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %210, i64 0, i32 1
  %212 = bitcast void ()** %211 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %213 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %212, align 8, !noalias !17
  call void %213(%"class.std::__1::basic_string.10"* nonnull sret %18, %"class.base::internal::BindStateBase"* %210, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %19) #9
  %214 = bitcast %"class.std::__1::basic_string.10"* %18 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %215 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %214, i64 0, i32 1, i32 1
  %216 = load i8, i8* %215, align 1
  %217 = icmp slt i8 %216, 0
  %218 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load i16*, i16** %218, align 8
  %220 = bitcast %"class.std::__1::basic_string.10"* %18 to i16*
  %221 = select i1 %217, i16* %219, i16* %220
  %222 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  %224 = zext i8 %216 to i64
  %225 = select i1 %217, i64 %223, i64 %224
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %17, i16* %221, i64 %225) #9
  %226 = getelementptr inbounds i8, i8* %30, i64 96
  %227 = getelementptr inbounds i8, i8* %30, i64 119
  %228 = load i8, i8* %227, align 1
  %229 = icmp slt i8 %228, 0
  br i1 %229, label %230, label %233

230:                                              ; preds = %206
  %231 = bitcast i8* %226 to i8**
  %232 = load i8*, i8** %231, align 8
  call void @_ZdlPv(i8* %232) #8
  br label %233

233:                                              ; preds = %230, %206
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %226, i8* nonnull align 8 %207, i64 24, i1 false) #9
  %234 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  store i8 0, i8* %235, align 1
  store i8 0, i8* %207, align 8
  %236 = load i8, i8* %215, align 1
  %237 = icmp slt i8 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %233
  %239 = bitcast %"class.std::__1::basic_string.10"* %18 to i8**
  %240 = load i8*, i8** %239, align 8
  call void @_ZdlPv(i8* %240) #8
  br label %241

241:                                              ; preds = %233, %238
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %209) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %208) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #9
  %242 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #9
  %243 = bitcast %"class.std::__1::basic_string.10"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %243) #9
  %244 = bitcast %"class.autofill::AutofillType"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %244) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %22, i32 79) #9
  %245 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !20
  %246 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %245, i64 0, i32 1
  %247 = bitcast void ()** %246 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %248 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %247, align 8, !noalias !20
  call void %248(%"class.std::__1::basic_string.10"* nonnull sret %21, %"class.base::internal::BindStateBase"* %245, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %22) #9
  %249 = bitcast %"class.std::__1::basic_string.10"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  %253 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load i16*, i16** %253, align 8
  %255 = bitcast %"class.std::__1::basic_string.10"* %21 to i16*
  %256 = select i1 %252, i16* %254, i16* %255
  %257 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %258 = load i64, i64* %257, align 8
  %259 = zext i8 %251 to i64
  %260 = select i1 %252, i64 %258, i64 %259
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %20, i16* %256, i64 %260) #9
  %261 = getelementptr inbounds i8, i8* %30, i64 144
  %262 = getelementptr inbounds i8, i8* %30, i64 167
  %263 = load i8, i8* %262, align 1
  %264 = icmp slt i8 %263, 0
  br i1 %264, label %265, label %268

265:                                              ; preds = %241
  %266 = bitcast i8* %261 to i8**
  %267 = load i8*, i8** %266, align 8
  call void @_ZdlPv(i8* %267) #8
  br label %268

268:                                              ; preds = %265, %241
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* nonnull align 8 %242, i64 24, i1 false) #9
  %269 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %270 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %269, i64 0, i32 1, i32 0
  store i8 0, i8* %270, align 1
  store i8 0, i8* %242, align 8
  %271 = load i8, i8* %250, align 1
  %272 = icmp slt i8 %271, 0
  br i1 %272, label %273, label %276

273:                                              ; preds = %268
  %274 = bitcast %"class.std::__1::basic_string.10"* %21 to i8**
  %275 = load i8*, i8** %274, align 8
  call void @_ZdlPv(i8* %275) #8
  br label %276

276:                                              ; preds = %268, %273
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %244) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %243) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #9
  %277 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #9
  %278 = bitcast %"class.std::__1::basic_string.10"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %278) #9
  %279 = bitcast %"class.autofill::AutofillType"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %279) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %25, i32 35) #9
  %280 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !23
  %281 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %280, i64 0, i32 1
  %282 = bitcast void ()** %281 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %283 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %282, align 8, !noalias !23
  call void %283(%"class.std::__1::basic_string.10"* nonnull sret %24, %"class.base::internal::BindStateBase"* %280, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %25) #9
  %284 = bitcast %"class.std::__1::basic_string.10"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %285 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %284, i64 0, i32 1, i32 1
  %286 = load i8, i8* %285, align 1
  %287 = icmp slt i8 %286, 0
  %288 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load i16*, i16** %288, align 8
  %290 = bitcast %"class.std::__1::basic_string.10"* %24 to i16*
  %291 = select i1 %287, i16* %289, i16* %290
  %292 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %293 = load i64, i64* %292, align 8
  %294 = zext i8 %286 to i64
  %295 = select i1 %287, i64 %293, i64 %294
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %23, i16* %291, i64 %295) #9
  %296 = getelementptr inbounds i8, i8* %30, i64 120
  %297 = getelementptr inbounds i8, i8* %30, i64 143
  %298 = load i8, i8* %297, align 1
  %299 = icmp slt i8 %298, 0
  br i1 %299, label %300, label %303

300:                                              ; preds = %276
  %301 = bitcast i8* %296 to i8**
  %302 = load i8*, i8** %301, align 8
  call void @_ZdlPv(i8* %302) #8
  br label %303

303:                                              ; preds = %300, %276
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* nonnull align 8 %277, i64 24, i1 false) #9
  %304 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %305 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %304, i64 0, i32 1, i32 0
  store i8 0, i8* %305, align 1
  store i8 0, i8* %277, align 8
  %306 = load i8, i8* %285, align 1
  %307 = icmp slt i8 %306, 0
  br i1 %307, label %308, label %311

308:                                              ; preds = %303
  %309 = bitcast %"class.std::__1::basic_string.10"* %24 to i8**
  %310 = load i8*, i8** %309, align 8
  call void @_ZdlPv(i8* %310) #8
  br label %311

311:                                              ; preds = %303, %308
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %279) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %278) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #9
  %312 = bitcast %"class.std::__1::vector"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %312) #9
  %313 = bitcast %"class.std::__1::basic_string"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %313) #9
  %314 = bitcast %"class.std::__1::basic_string.10"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %314) #9
  %315 = bitcast %"class.autofill::AutofillType"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %315) #9
  call void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"* nonnull %29, i32 77) #9
  %316 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !26
  %317 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %316, i64 0, i32 1
  %318 = bitcast void ()** %317 to void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)**
  %319 = load void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)** %318, align 8, !noalias !26
  call void %319(%"class.std::__1::basic_string.10"* nonnull sret %28, %"class.base::internal::BindStateBase"* %316, %"class.autofill::AutofillType"* nonnull dereferenceable(12) %29) #9
  %320 = bitcast %"class.std::__1::basic_string.10"* %28 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %321 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %320, i64 0, i32 1, i32 1
  %322 = load i8, i8* %321, align 1
  %323 = icmp slt i8 %322, 0
  %324 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i16*, i16** %324, align 8
  %326 = bitcast %"class.std::__1::basic_string.10"* %28 to i16*
  %327 = select i1 %323, i16* %325, i16* %326
  %328 = getelementptr inbounds %"class.std::__1::basic_string.10", %"class.std::__1::basic_string.10"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %329 = load i64, i64* %328, align 8
  %330 = zext i8 %322 to i64
  %331 = select i1 %323, i64 %329, i64 %330
  call void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %27, i16* %327, i64 %331) #9
  %332 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %333 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %332, i64 0, i32 1, i32 0
  %334 = load i8, i8* %333, align 1
  %335 = icmp slt i8 %334, 0
  %336 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %337 = load i8*, i8** %336, align 8
  %338 = select i1 %335, i8* %337, i8* %313
  %339 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %340 = load i64, i64* %339, align 8
  %341 = zext i8 %334 to i64
  %342 = select i1 %335, i64 %340, i64 %341
  call void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* nonnull sret %26, i8* %338, i64 %342, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 1, i32 0) #9
  %343 = getelementptr inbounds i8, i8* %30, i64 24
  %344 = bitcast i8* %343 to %"class.std::__1::basic_string"**
  %345 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %344, align 8
  %346 = icmp eq %"class.std::__1::basic_string"* %345, null
  br i1 %346, label %370, label %347

347:                                              ; preds = %311
  %348 = bitcast %"class.std::__1::basic_string"* %345 to i8*
  %349 = getelementptr inbounds i8, i8* %30, i64 32
  %350 = bitcast i8* %349 to %"class.std::__1::basic_string"**
  %351 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %350, align 8
  %352 = icmp eq %"class.std::__1::basic_string"* %351, %345
  br i1 %352, label %368, label %353

353:                                              ; preds = %347, %363
  %354 = phi %"class.std::__1::basic_string"* [ %355, %363 ], [ %351, %347 ]
  %355 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %354, i64 -1
  %356 = bitcast %"class.std::__1::basic_string"* %355 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %357 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %356, i64 0, i32 1, i32 0
  %358 = load i8, i8* %357, align 1
  %359 = icmp slt i8 %358, 0
  br i1 %359, label %360, label %363

360:                                              ; preds = %353
  %361 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %355, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load i8*, i8** %361, align 8
  call void @_ZdlPv(i8* %362) #8
  br label %363

363:                                              ; preds = %360, %353
  %364 = icmp eq %"class.std::__1::basic_string"* %355, %345
  br i1 %364, label %365, label %353

365:                                              ; preds = %363
  %366 = bitcast i8* %343 to i8**
  %367 = load i8*, i8** %366, align 8
  br label %368

368:                                              ; preds = %365, %347
  %369 = phi i8* [ %367, %365 ], [ %348, %347 ]
  store %"class.std::__1::basic_string"* %345, %"class.std::__1::basic_string"** %350, align 8
  call void @_ZdlPv(i8* %369) #8
  call void @llvm.memset.p0i8.i64(i8* align 8 %343, i8 0, i64 24, i1 false) #9
  br label %370

370:                                              ; preds = %311, %368
  %371 = bitcast %"class.std::__1::vector"* %26 to <2 x i64>*
  %372 = load <2 x i64>, <2 x i64>* %371, align 16
  %373 = bitcast i8* %343 to <2 x i64>*
  store <2 x i64> %372, <2 x i64>* %373, align 8
  %374 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %26, i64 0, i32 0, i32 2, i32 0, i32 0
  %375 = bitcast %"class.std::__1::basic_string"** %374 to i64*
  %376 = load i64, i64* %375, align 16
  %377 = getelementptr inbounds i8, i8* %30, i64 40
  %378 = bitcast i8* %377 to i64*
  store i64 %376, i64* %378, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %312, i8 0, i64 24, i1 false) #9
  %379 = load i8, i8* %333, align 1
  %380 = icmp slt i8 %379, 0
  br i1 %380, label %381, label %383

381:                                              ; preds = %370
  %382 = load i8*, i8** %336, align 8
  call void @_ZdlPv(i8* %382) #8
  br label %383

383:                                              ; preds = %370, %381
  %384 = load i8, i8* %321, align 1
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %383
  %387 = bitcast %"class.std::__1::basic_string.10"* %28 to i8**
  %388 = load i8*, i8** %387, align 8
  call void @_ZdlPv(i8* %388) #8
  br label %389

389:                                              ; preds = %383, %386
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %315) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %314) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %313) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %312) #9
  ret %"struct.i18n::addressinput::AddressData"* %31
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base11UTF16ToUTF8ENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN8autofill12AutofillTypeC1ENS_15ServerFieldTypeE(%"class.autofill::AutofillType"*, i32) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN8autofill12AutofillTypeC1ENS_13HtmlFieldTypeENS_13HtmlFieldModeE(%"class.autofill::AutofillType"*, i32, i32) unnamed_addr #2

declare void @_ZN4base11SplitStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector"* sret, i8*, i64, i8*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.i18n::addressinput::AddressData"* @_ZN8autofill4i18n36CreateAddressDataFromAutofillProfileERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = bitcast %"class.base::RepeatingCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #9
  %5 = tail call i8* @_Znwm(i64 2920) #8, !noalias !29
  %6 = bitcast i8* %5 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %6, void ()* bitcast (void (%"class.std::__1::basic_string.10"*, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSB_SG_EEEFS9_SL_EE3RunEPNS0_13BindStateBaseESL_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNS9_12AutofillTypeEEJSA_SF_EE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !29
  %7 = getelementptr inbounds i8, i8* %5, i64 32
  %8 = bitcast i8* %7 to i64*
  store i64 ptrtoint (void (%"class.std::__1::basic_string.10"*, %"class.autofill::AutofillProfile"*, %"class.std::__1::basic_string"*, %"class.autofill::AutofillType"*)* @_ZN8autofill4i18n12_GLOBAL__N_113GetInfoHelperERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKNS_12AutofillTypeE to i64), i64* %8, align 8, !noalias !29
  %9 = getelementptr inbounds i8, i8* %5, i64 40
  %10 = bitcast i8* %9 to %"class.autofill::AutofillProfile"*
  tail call void @_ZN8autofill15AutofillProfileC1ERKS0_(%"class.autofill::AutofillProfile"* %10, %"class.autofill::AutofillProfile"* dereferenceable(2856) %0) #9, !noalias !29
  %11 = getelementptr inbounds i8, i8* %5, i64 2896
  %12 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1, !noalias !29
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %18, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %17, i64 24, i1 false) #9, !noalias !29
  br label %24

18:                                               ; preds = %2
  %19 = bitcast i8* %11 to %"class.std::__1::basic_string"*
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8, !noalias !29
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !29
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %19, i8* %21, i64 %23) #9, !noalias !29
  br label %24

24:                                               ; preds = %16, %18
  %25 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %5, i8** %25, align 8, !alias.scope !29
  %26 = call %"struct.i18n::addressinput::AddressData"* @_ZN8autofill4i18n17CreateAddressDataERKN4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKNS_12AutofillTypeEEEE(%"class.base::RepeatingCallback"* nonnull dereferenceable(8) %3)
  %27 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #9
  %28 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %0, i64 0, i32 7
  %29 = getelementptr inbounds %"struct.i18n::addressinput::AddressData", %"struct.i18n::addressinput::AddressData"* %26, i64 0, i32 7
  %30 = icmp eq %"class.std::__1::basic_string"* %29, %28
  br i1 %30, label %60, label %31

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #9
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %46, i64 %48) #9
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %29, i8* %57, i64 %58) #9
  br label %60

60:                                               ; preds = %24, %41, %44, %50
  ret %"struct.i18n::addressinput::AddressData"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN8autofill4i18n12_GLOBAL__N_113GetInfoHelperERKNS_15AutofillProfileERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEERKNS_12AutofillTypeE(%"class.std::__1::basic_string.10"* noalias sret, %"class.autofill::AutofillProfile"* dereferenceable(2856), %"class.std::__1::basic_string"* dereferenceable(24), %"class.autofill::AutofillType"* dereferenceable(12)) #0 {
  %5 = getelementptr inbounds %"class.autofill::AutofillProfile", %"class.autofill::AutofillProfile"* %1, i64 0, i32 0, i32 0
  tail call void @_ZNK8autofill9FormGroup7GetInfoERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string.10"* sret %0, %"class.autofill::FormGroup"* %5, %"class.autofill::AutofillType"* dereferenceable(12) %3, %"class.std::__1::basic_string"* dereferenceable(24) %2) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN8autofill4i18n12TypeForFieldEN4i18n12addressinput12AddressFieldEb(i32, i1 zeroext) local_unnamed_addr #4 {
  switch i32 %0, label %19 [
    i32 0, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
    i32 5, label %11
    i32 4, label %13
    i32 6, label %15
    i32 7, label %20
    i32 8, label %17
  ]

3:                                                ; preds = %2
  %4 = select i1 %1, i32 43, i32 36
  br label %20

5:                                                ; preds = %2
  %6 = select i1 %1, i32 41, i32 34
  br label %20

7:                                                ; preds = %2
  %8 = select i1 %1, i32 40, i32 33
  br label %20

9:                                                ; preds = %2
  %10 = select i1 %1, i32 82, i32 81
  br label %20

11:                                               ; preds = %2
  %12 = select i1 %1, i32 42, i32 35
  br label %20

13:                                               ; preds = %2
  %14 = select i1 %1, i32 80, i32 79
  br label %20

15:                                               ; preds = %2
  %16 = select i1 %1, i32 78, i32 77
  br label %20

17:                                               ; preds = %2
  %18 = select i1 %1, i32 71, i32 7
  br label %20

19:                                               ; preds = %2
  br label %20

20:                                               ; preds = %2, %19, %17, %15, %13, %11, %9, %7, %5, %3
  %21 = phi i32 [ 1, %19 ], [ %18, %17 ], [ %16, %15 ], [ %14, %13 ], [ %12, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ %4, %3 ], [ 60, %2 ]
  ret i32 %21
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN8autofill4i18n12FieldForTypeENS_15ServerFieldTypeEPN4i18n12addressinput12AddressFieldE(i32, i32*) local_unnamed_addr #5 {
  switch i32 %0, label %30 [
    i32 43, label %3
    i32 36, label %3
    i32 41, label %6
    i32 34, label %6
    i32 40, label %9
    i32 33, label %9
    i32 82, label %12
    i32 81, label %12
    i32 80, label %15
    i32 79, label %15
    i32 42, label %18
    i32 35, label %18
    i32 78, label %21
    i32 37, label %21
    i32 38, label %21
    i32 77, label %21
    i32 30, label %21
    i32 31, label %21
    i32 60, label %24
    i32 71, label %27
    i32 7, label %27
  ]

3:                                                ; preds = %2, %2
  %4 = icmp eq i32* %1, null
  br i1 %4, label %30, label %5

5:                                                ; preds = %3
  store i32 0, i32* %1, align 4
  br label %30

6:                                                ; preds = %2, %2
  %7 = icmp eq i32* %1, null
  br i1 %7, label %30, label %8

8:                                                ; preds = %6
  store i32 1, i32* %1, align 4
  br label %30

9:                                                ; preds = %2, %2
  %10 = icmp eq i32* %1, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %9
  store i32 2, i32* %1, align 4
  br label %30

12:                                               ; preds = %2, %2
  %13 = icmp eq i32* %1, null
  br i1 %13, label %30, label %14

14:                                               ; preds = %12
  store i32 3, i32* %1, align 4
  br label %30

15:                                               ; preds = %2, %2
  %16 = icmp eq i32* %1, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %15
  store i32 4, i32* %1, align 4
  br label %30

18:                                               ; preds = %2, %2
  %19 = icmp eq i32* %1, null
  br i1 %19, label %30, label %20

20:                                               ; preds = %18
  store i32 5, i32* %1, align 4
  br label %30

21:                                               ; preds = %2, %2, %2, %2, %2, %2
  %22 = icmp eq i32* %1, null
  br i1 %22, label %30, label %23

23:                                               ; preds = %21
  store i32 6, i32* %1, align 4
  br label %30

24:                                               ; preds = %2
  %25 = icmp eq i32* %1, null
  br i1 %25, label %30, label %26

26:                                               ; preds = %24
  store i32 7, i32* %1, align 4
  br label %30

27:                                               ; preds = %2, %2
  %28 = icmp eq i32* %1, null
  br i1 %28, label %30, label %29

29:                                               ; preds = %27
  store i32 8, i32* %1, align 4
  br label %30

30:                                               ; preds = %2, %29, %27, %26, %24, %23, %21, %20, %18, %17, %15, %14, %12, %11, %9, %8, %6, %5, %3
  %31 = phi i1 [ true, %3 ], [ true, %5 ], [ true, %6 ], [ true, %8 ], [ true, %9 ], [ true, %11 ], [ true, %12 ], [ true, %14 ], [ true, %15 ], [ true, %17 ], [ true, %18 ], [ true, %20 ], [ true, %21 ], [ true, %23 ], [ true, %24 ], [ true, %26 ], [ true, %27 ], [ true, %29 ], [ false, %2 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8autofill4i18n15IsFieldRequiredENS_15ServerFieldTypeERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #9
  store i32 -1431655766, i32* %3, align 4
  %5 = call zeroext i1 @_ZN8autofill4i18n12FieldForTypeENS_15ServerFieldTypeEPN4i18n12addressinput12AddressFieldE(i32 %0, i32* nonnull %3)
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = load i32, i32* %3, align 4
  %8 = call zeroext i1 @_ZN4i18n12addressinput15IsFieldRequiredENS0_12AddressFieldERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32 %7, %"class.std::__1::basic_string"* dereferenceable(24) %1) #9
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ %8, %6 ], [ false, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #9
  ret i1 %10
}

declare zeroext i1 @_ZN4i18n12addressinput15IsFieldRequiredENS0_12AddressFieldERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK8autofill9FormGroup7GetInfoERKNS_12AutofillTypeERKNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.std::__1::basic_string.10"* sret, %"class.autofill::FormGroup"*, %"class.autofill::AutofillType"* dereferenceable(12), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSB_SG_EEEFS9_SL_EE3RunEPNS0_13BindStateBaseESL_(%"class.std::__1::basic_string.10"* noalias sret, %"class.base::internal::BindStateBase"*, %"class.autofill::AutofillType"* dereferenceable(12)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.std::__1::basic_string.10"*, %"class.autofill::AutofillProfile"*, %"class.std::__1::basic_string"*, %"class.autofill::AutofillType"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %1, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.autofill::AutofillProfile"*
  %8 = getelementptr inbounds void ()*, void ()** %6, i64 357
  %9 = bitcast void ()** %8 to %"class.std::__1::basic_string"*
  %10 = load void (%"class.std::__1::basic_string.10"*, %"class.autofill::AutofillProfile"*, %"class.std::__1::basic_string"*, %"class.autofill::AutofillType"*)*, void (%"class.std::__1::basic_string.10"*, %"class.autofill::AutofillProfile"*, %"class.std::__1::basic_string"*, %"class.autofill::AutofillType"*)** %5, align 8, !noalias !34
  tail call void %10(%"class.std::__1::basic_string.10"* sret %0, %"class.autofill::AutofillProfile"* dereferenceable(2856) %7, %"class.std::__1::basic_string"* dereferenceable(24) %9, %"class.autofill::AutofillType"* dereferenceable(12) %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNS9_12AutofillTypeEEJSA_SF_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %16, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 90, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %3
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZdlPv(i8* %11) #8
  br label %12

12:                                               ; preds = %3, %9
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to %"class.autofill::AutofillProfile"*
  tail call void @_ZN8autofill15AutofillProfileD1Ev(%"class.autofill::AutofillProfile"* %14) #9
  %15 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %15) #8
  br label %16

16:                                               ; preds = %12, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8autofill15AutofillProfileD1Ev(%"class.autofill::AutofillProfile"*) unnamed_addr #3

declare void @_ZN8autofill15AutofillProfileC1ERKS0_(%"class.autofill::AutofillProfile"*, %"class.autofill::AutofillProfile"* dereferenceable(2856)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!4 = distinct !{!4, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!7 = distinct !{!7, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!10 = distinct !{!10, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!13 = distinct !{!13, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!16 = distinct !{!16, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!19 = distinct !{!19, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!22 = distinct !{!22, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!25 = distinct !{!25, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_: argument 0"}
!28 = distinct !{!28, !"_ZNKR4base17RepeatingCallbackIFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill12AutofillTypeEEE3RunESB_"}
!29 = !{!30, !32}
!30 = distinct !{!30, !31, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSD_SI_EEEDcOT0_DpOT1_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSD_SI_EEEDcOT0_DpOT1_"}
!32 = distinct !{!32, !33, !"_ZN4base13BindRepeatingIPFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS2_IcNS3_IcEENS5_IcEEEERKNS8_12AutofillTypeEEJSB_SG_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_: argument 0"}
!33 = distinct !{!33, !"_ZN4base13BindRepeatingIPFNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS2_IcNS3_IcEENS5_IcEEEERKNS8_12AutofillTypeEEJSB_SG_EEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSP_DpOSQ_"}
!34 = !{!35, !37, !39}
!35 = distinct !{!35, !36, !"_ZN4base8internal13FunctorTraitsIPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNS9_12AutofillTypeEEvE6InvokeIRKSM_JSC_SH_SK_EEES8_OT_DpOT0_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8internal13FunctorTraitsIPFNSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNS9_12AutofillTypeEEvE6InvokeIRKSM_JSC_SH_SK_EEES8_OT_DpOT0_"}
!37 = distinct !{!37, !38, !"_ZN4base8internal12InvokeHelperILb0ENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE8MakeItSoIRKPFS8_RKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNSB_12AutofillTypeEEJSE_SJ_SM_EEES8_OT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN4base8internal12InvokeHelperILb0ENSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEEE8MakeItSoIRKPFS8_RKN8autofill15AutofillProfileERKNS3_IcNS4_IcEENS6_IcEEEERKNSB_12AutofillTypeEEJSE_SJ_SM_EEES8_OT_DpOT0_"}
!39 = distinct !{!39, !40, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSB_SG_EEEFS9_SL_EE7RunImplIRKSN_RKNS3_5tupleIJSB_SG_EEEJLm0ELm1EEEES9_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEESL_: argument 0"}
!40 = distinct !{!40, !"_ZN4base8internal7InvokerINS0_9BindStateIPFNSt3__112basic_stringIDsNS3_11char_traitsIDsEENS3_9allocatorIDsEEEERKN8autofill15AutofillProfileERKNS4_IcNS5_IcEENS7_IcEEEERKNSA_12AutofillTypeEEJSB_SG_EEEFS9_SL_EE7RunImplIRKSN_RKNS3_5tupleIJSB_SG_EEEJLm0ELm1EEEES9_OT_OT0_NS3_16integer_sequenceImJXspT1_EEEESL_"}
