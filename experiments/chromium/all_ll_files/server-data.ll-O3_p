; ModuleID = '../../v8/src/torque/server-data.cc'
source_filename = "../../v8/src/torque/server-data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope" = type { %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* }
%"class.v8::internal::torque::LanguageServerData" = type { %"class.std::__1::map", %"class.std::__1::map.4", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.160" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.v8::internal::torque::GlobalContext"* }
%"class.v8::internal::torque::GlobalContext" = type <{ i8, i8, i8, [5 x i8], %"class.v8::internal::torque::Namespace"*, %"class.v8::internal::torque::Ast", %"class.std::__1::vector.76", %"class.std::__1::set", %"class.std::__1::map.95", %"class.std::__1::map.104", %"class.std::__1::vector.113", %"class.std::__1::set.147", i8, [7 x i8] }>
%"class.v8::internal::torque::Namespace" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string" }
%"class.v8::internal::torque::Scope" = type { %"class.v8::internal::torque::Declarable.base", [7 x i8], %"class.std::__1::unordered_map", %"struct.v8::internal::torque::SpecializationRequester" }
%"class.v8::internal::torque::Declarable.base" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8 }>
%"struct.v8::internal::torque::SourcePosition" = type { %"class.v8::internal::torque::SourceId", %"struct.v8::internal::torque::LineAndColumn", %"struct.v8::internal::torque::LineAndColumn" }
%"class.v8::internal::torque::SourceId" = type { i32 }
%"struct.v8::internal::torque::LineAndColumn" = type { i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.16", %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29", %"class.std::__1::__compressed_pair.31", [4 x i8] }>
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18", %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { float }
%"struct.v8::internal::torque::SpecializationRequester" = type { %"struct.v8::internal::torque::SourcePosition", %"class.v8::internal::torque::Scope"*, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.v8::internal::torque::Ast" = type { %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::map.53", %"class.std::__1::vector.62" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.v8::internal::torque::Declaration"**, %"struct.v8::internal::torque::Declaration"**, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::torque::Declaration" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::AstNode" = type { i32 (...)**, i32, %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::torque::Declaration"** }
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"class.std::__1::unique_ptr.47"*, %"class.std::__1::unique_ptr.47"*, %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.391" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.392" }
%"struct.std::__1::__compressed_pair_elem.392" = type { %"struct.v8::internal::torque::AstNode"* }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.std::__1::unique_ptr.47"* }
%"class.std::__1::map.53" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.62" = type { %"class.std::__1::__vector_base.63" }
%"class.std::__1::__vector_base.63" = type { %"struct.v8::internal::torque::EnumDescription"*, %"struct.v8::internal::torque::EnumDescription"*, %"class.std::__1::__compressed_pair.71" }
%"struct.v8::internal::torque::EnumDescription" = type { %"struct.v8::internal::torque::SourcePosition", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, %"class.std::__1::vector.64" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"struct.v8::internal::torque::EnumDescription"* }
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"*, %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::unique_ptr.78" = type { %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.v8::internal::torque::Declarable"* }
%"class.v8::internal::torque::Declarable" = type <{ i32 (...)**, i32, [4 x i8], %"class.v8::internal::torque::Scope"*, %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::unique_ptr.78"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree.87" }
%"class.std::__1::__tree.87" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.88", %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.95" = type { %"class.std::__1::__tree.96" }
%"class.std::__1::__tree.96" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.97", %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.104" = type { %"class.std::__1::__tree.105" }
%"class.std::__1::__tree.105" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.142" }
%"struct.std::__1::pair" = type <{ %"class.v8::internal::torque::TorqueMacro"*, %"class.v8::internal::torque::SourceId", [4 x i8] }>
%"class.v8::internal::torque::TorqueMacro" = type { %"class.v8::internal::torque::Macro.base", i8, [6 x i8] }
%"class.v8::internal::torque::Macro.base" = type <{ %"class.v8::internal::torque::Callable", i8 }>
%"class.v8::internal::torque::Callable" = type { %"class.v8::internal::torque::Scope", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"struct.v8::internal::torque::Signature", i64, %"class.v8::base::Optional.137" }
%"struct.v8::internal::torque::Signature" = type <{ %"class.std::__1::vector.115", %"class.v8::base::Optional", %"struct.v8::internal::torque::ParameterTypes", i64, %"class.v8::internal::torque::Type"*, %"class.std::__1::vector.130", i8, [7 x i8] }>
%"class.std::__1::vector.115" = type { %"class.std::__1::__vector_base.116" }
%"class.std::__1::__vector_base.116" = type { %"struct.v8::internal::torque::Identifier"**, %"struct.v8::internal::torque::Identifier"**, %"class.std::__1::__compressed_pair.117" }
%"struct.v8::internal::torque::Identifier" = type { %"struct.v8::internal::torque::AstNode", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.v8::internal::torque::Identifier"** }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon.122 }
%union.anon.122 = type { %"class.std::__1::basic_string" }
%"struct.v8::internal::torque::ParameterTypes" = type <{ %"class.std::__1::vector.123", i8, [7 x i8] }>
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.v8::internal::torque::Type"**, %"class.v8::internal::torque::Type"**, %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.v8::internal::torque::Type"** }
%"class.v8::internal::torque::Type" = type { %"class.v8::internal::torque::TypeBase.base", %"class.v8::internal::torque::Type"*, %"class.std::__1::set", i64, %"class.v8::base::Optional.189", %"class.v8::internal::torque::Type"* }
%"class.v8::internal::torque::TypeBase.base" = type <{ i32 (...)**, i32 }>
%"class.v8::base::Optional.189" = type { %"class.v8::base::internal::OptionalBase.190" }
%"class.v8::base::internal::OptionalBase.190" = type { %"struct.v8::base::internal::OptionalStorage.191" }
%"struct.v8::base::internal::OptionalStorage.191" = type { %"struct.v8::base::internal::OptionalStorageBase.192" }
%"struct.v8::base::internal::OptionalStorageBase.192" = type { i8, %union.anon.193 }
%union.anon.193 = type { %"struct.v8::internal::torque::SpecializationKey" }
%"struct.v8::internal::torque::SpecializationKey" = type { %"class.v8::internal::torque::GenericType"*, %"class.std::__1::vector.123" }
%"class.v8::internal::torque::GenericType" = type { %"class.v8::internal::torque::GenericDeclarable" }
%"class.v8::internal::torque::GenericDeclarable" = type { %"class.v8::internal::torque::Declarable.base", %"class.std::__1::basic_string", %"struct.v8::internal::torque::GenericTypeDeclaration"*, %"class.std::__1::unordered_map.206", %"class.v8::base::Optional.233" }
%"struct.v8::internal::torque::GenericTypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"class.std::__1::vector.194", %"struct.v8::internal::torque::TypeDeclaration"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.v8::internal::torque::GenericParameter"*, %"struct.v8::internal::torque::GenericParameter"*, %"class.std::__1::__compressed_pair.201" }
%"struct.v8::internal::torque::GenericParameter" = type { %"struct.v8::internal::torque::Identifier"*, %"class.v8::base::Optional.196" }
%"class.v8::base::Optional.196" = type { %"class.v8::base::internal::OptionalBase.197" }
%"class.v8::base::internal::OptionalBase.197" = type { %"struct.v8::base::internal::OptionalStorage.198" }
%"struct.v8::base::internal::OptionalStorage.198" = type { %"struct.v8::base::internal::OptionalStorageBase.199" }
%"struct.v8::base::internal::OptionalStorageBase.199" = type { i8, %union.anon.200 }
%union.anon.200 = type { %"struct.v8::internal::torque::TypeExpression"* }
%"struct.v8::internal::torque::TypeExpression" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.201" = type { %"struct.std::__1::__compressed_pair_elem.202" }
%"struct.std::__1::__compressed_pair_elem.202" = type { %"struct.v8::internal::torque::GenericParameter"* }
%"struct.v8::internal::torque::TypeDeclaration" = type { %"struct.v8::internal::torque::Declaration", %"struct.v8::internal::torque::Identifier"* }
%"class.std::__1::unordered_map.206" = type { %"class.std::__1::__hash_table.207" }
%"class.std::__1::__hash_table.207" = type <{ %"class.std::__1::unique_ptr.208", %"class.std::__1::__compressed_pair.218", %"class.std::__1::__compressed_pair.223", %"class.std::__1::__compressed_pair.227", [4 x i8] }>
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210", %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.std::__1::__hash_node_base.211"** }
%"struct.std::__1::__hash_node_base.211" = type { %"struct.std::__1::__hash_node_base.211"* }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"class.std::__1::__bucket_list_deallocator.213" }
%"class.std::__1::__bucket_list_deallocator.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.std::__1::__hash_node_base.211" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.v8::base::Optional.233" = type { %"class.v8::base::internal::OptionalBase.234" }
%"class.v8::base::internal::OptionalBase.234" = type { %"struct.v8::base::internal::OptionalStorage.235" }
%"struct.v8::base::internal::OptionalStorage.235" = type { %"struct.v8::base::internal::OptionalStorageBase.236" }
%"struct.v8::base::internal::OptionalStorageBase.236" = type { i8, %union.anon.237 }
%union.anon.237 = type { %"class.std::__1::vector.238" }
%"class.std::__1::vector.238" = type { %"class.std::__1::__vector_base.239" }
%"class.std::__1::__vector_base.239" = type { %"class.v8::internal::torque::TypeConstraint"*, %"class.v8::internal::torque::TypeConstraint"*, %"class.std::__1::__compressed_pair.245" }
%"class.v8::internal::torque::TypeConstraint" = type { %"class.v8::base::Optional.240" }
%"class.v8::base::Optional.240" = type { %"class.v8::base::internal::OptionalBase.241" }
%"class.v8::base::internal::OptionalBase.241" = type { %"struct.v8::base::internal::OptionalStorage.242" }
%"struct.v8::base::internal::OptionalStorage.242" = type { %"struct.v8::base::internal::OptionalStorageBase.243" }
%"struct.v8::base::internal::OptionalStorageBase.243" = type { i8, %union.anon.244 }
%union.anon.244 = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.v8::internal::torque::TypeConstraint"* }
%"class.std::__1::vector.130" = type { %"class.std::__1::__vector_base.131" }
%"class.std::__1::__vector_base.131" = type { %"struct.v8::internal::torque::LabelDeclaration"*, %"struct.v8::internal::torque::LabelDeclaration"*, %"class.std::__1::__compressed_pair.132" }
%"struct.v8::internal::torque::LabelDeclaration" = type { %"struct.v8::internal::torque::Identifier"*, %"class.std::__1::vector.123" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"struct.v8::internal::torque::LabelDeclaration"* }
%"class.v8::base::Optional.137" = type { %"class.v8::base::internal::OptionalBase.138" }
%"class.v8::base::internal::OptionalBase.138" = type { %"struct.v8::base::internal::OptionalStorage.139" }
%"struct.v8::base::internal::OptionalStorage.139" = type { %"struct.v8::base::internal::OptionalStorageBase.140" }
%"struct.v8::base::internal::OptionalStorageBase.140" = type { i8, %union.anon.141 }
%union.anon.141 = type { %"struct.v8::internal::torque::Statement"* }
%"struct.v8::internal::torque::Statement" = type { %"struct.v8::internal::torque::AstNode" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.std::__1::pair"* }
%"class.std::__1::set.147" = type { %"class.std::__1::__tree.148" }
%"class.std::__1::__tree.148" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.149", %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.v8::internal::torque::TypeOracle"* }
%"class.v8::internal::torque::TypeOracle" = type { %"class.v8::internal::torque::Deduplicator", %"class.std::__1::vector.187", %"class.v8::internal::torque::Deduplicator.255", %"class.std::__1::vector.281", %"class.std::__1::vector.294", %"class.std::__1::vector.331", %"class.std::__1::vector.281", %"class.std::__1::vector.358", i64 }
%"class.v8::internal::torque::Deduplicator" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.164" }
%"class.std::__1::__hash_table.164" = type <{ %"class.std::__1::unique_ptr.165", %"class.std::__1::__compressed_pair.175", %"class.std::__1::__compressed_pair.180", %"class.std::__1::__compressed_pair.182", [4 x i8] }>
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167", %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.std::__1::__hash_node_base.168"** }
%"struct.std::__1::__hash_node_base.168" = type { %"struct.std::__1::__hash_node_base.168"* }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.std::__1::__bucket_list_deallocator.170" }
%"class.std::__1::__bucket_list_deallocator.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.std::__1::__hash_node_base.168" }
%"class.std::__1::__compressed_pair.180" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"class.v8::internal::torque::BuiltinPointerType"**, %"class.v8::internal::torque::BuiltinPointerType"**, %"class.std::__1::__compressed_pair.250" }
%"class.v8::internal::torque::BuiltinPointerType" = type { %"class.v8::internal::torque::Type", %"class.std::__1::vector.123", %"class.v8::internal::torque::Type"*, i64 }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.v8::internal::torque::BuiltinPointerType"** }
%"class.v8::internal::torque::Deduplicator.255" = type { %"class.std::__1::unordered_set.256" }
%"class.std::__1::unordered_set.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"class.std::__1::vector.294" = type { %"class.std::__1::__vector_base.295" }
%"class.std::__1::__vector_base.295" = type { %"class.std::__1::unique_ptr.296"*, %"class.std::__1::unique_ptr.296"*, %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::AggregateType" = type { %"class.v8::internal::torque::Type", i8, %"class.std::__1::vector.299", %"class.v8::internal::torque::Namespace"*, %"class.std::__1::basic_string", %"class.std::__1::vector.316" }
%"class.std::__1::vector.299" = type { %"class.std::__1::__vector_base.300" }
%"class.std::__1::__vector_base.300" = type { %"struct.v8::internal::torque::Field"*, %"struct.v8::internal::torque::Field"*, %"class.std::__1::__compressed_pair.311" }
%"struct.v8::internal::torque::Field" = type <{ %"struct.v8::internal::torque::SourcePosition", [4 x i8], %"class.v8::internal::torque::AggregateType"*, %"class.v8::base::Optional.301", %"struct.v8::internal::torque::NameAndType", %"class.v8::base::Optional.306", i8, i8, i8, i8, i32, i32, [4 x i8] }>
%"class.v8::base::Optional.301" = type { %"class.v8::base::internal::OptionalBase.302" }
%"class.v8::base::internal::OptionalBase.302" = type { %"struct.v8::base::internal::OptionalStorage.303" }
%"struct.v8::base::internal::OptionalStorage.303" = type { %"struct.v8::base::internal::OptionalStorageBase.304" }
%"struct.v8::base::internal::OptionalStorageBase.304" = type { i8, %union.anon.305 }
%union.anon.305 = type { %"struct.v8::internal::torque::ClassFieldIndexInfo" }
%"struct.v8::internal::torque::ClassFieldIndexInfo" = type { %"struct.v8::internal::torque::Expression"*, i8 }
%"struct.v8::internal::torque::Expression" = type { %"struct.v8::internal::torque::AstNode" }
%"struct.v8::internal::torque::NameAndType" = type { %"class.std::__1::basic_string", %"class.v8::internal::torque::Type"* }
%"class.v8::base::Optional.306" = type { %"class.v8::base::internal::OptionalBase.307" }
%"class.v8::base::internal::OptionalBase.307" = type { %"struct.v8::base::internal::OptionalStorage.308" }
%"struct.v8::base::internal::OptionalStorage.308" = type { %"struct.v8::base::internal::OptionalStorageBase.309" }
%"struct.v8::base::internal::OptionalStorageBase.309" = type { i8, %union.anon.310 }
%union.anon.310 = type { i64 }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"struct.v8::internal::torque::Field"* }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.v8::internal::torque::Method"**, %"class.v8::internal::torque::Method"**, %"class.std::__1::__compressed_pair.318" }
%"class.v8::internal::torque::Method" = type { %"class.v8::internal::torque::TorqueMacro.base", %"class.v8::internal::torque::AggregateType"* }
%"class.v8::internal::torque::TorqueMacro.base" = type { %"class.v8::internal::torque::Macro.base", i8 }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::torque::Method"** }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.327" }
%"struct.std::__1::__compressed_pair_elem.327" = type { %"class.std::__1::unique_ptr.296"* }
%"class.std::__1::vector.331" = type { %"class.std::__1::__vector_base.332" }
%"class.std::__1::__vector_base.332" = type { %"class.std::__1::unique_ptr.333"*, %"class.std::__1::unique_ptr.333"*, %"class.std::__1::__compressed_pair.353" }
%"class.std::__1::unique_ptr.333" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"class.v8::internal::torque::BitFieldStructType"* }
%"class.v8::internal::torque::BitFieldStructType" = type { %"class.v8::internal::torque::Type", %"class.v8::internal::torque::Namespace"*, %"struct.v8::internal::torque::BitFieldStructDeclaration"*, %"class.std::__1::vector.343" }
%"struct.v8::internal::torque::BitFieldStructDeclaration" = type { %"struct.v8::internal::torque::TypeDeclaration", %"struct.v8::internal::torque::TypeExpression"*, %"class.std::__1::vector.336" }
%"class.std::__1::vector.336" = type { %"class.std::__1::__vector_base.337" }
%"class.std::__1::__vector_base.337" = type { %"struct.v8::internal::torque::BitFieldDeclaration"*, %"struct.v8::internal::torque::BitFieldDeclaration"*, %"class.std::__1::__compressed_pair.338" }
%"struct.v8::internal::torque::BitFieldDeclaration" = type { %"struct.v8::internal::torque::NameAndTypeExpression", i32 }
%"struct.v8::internal::torque::NameAndTypeExpression" = type { %"struct.v8::internal::torque::Identifier"*, %"struct.v8::internal::torque::TypeExpression"* }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"struct.v8::internal::torque::BitFieldDeclaration"* }
%"class.std::__1::vector.343" = type { %"class.std::__1::__vector_base.344" }
%"class.std::__1::__vector_base.344" = type { %"struct.v8::internal::torque::BitField"*, %"struct.v8::internal::torque::BitField"*, %"class.std::__1::__compressed_pair.345" }
%"struct.v8::internal::torque::BitField" = type { %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::NameAndType", i32, i32 }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.v8::internal::torque::BitField"* }
%"class.std::__1::__compressed_pair.353" = type { %"struct.std::__1::__compressed_pair_elem.354" }
%"struct.std::__1::__compressed_pair_elem.354" = type { %"class.std::__1::unique_ptr.333"* }
%"class.std::__1::vector.281" = type { %"class.std::__1::__vector_base.282" }
%"class.std::__1::__vector_base.282" = type { %"class.std::__1::unique_ptr.283"*, %"class.std::__1::unique_ptr.283"*, %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::torque::Type"* }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.std::__1::unique_ptr.283"* }
%"class.std::__1::vector.358" = type { %"class.std::__1::__vector_base.359" }
%"class.std::__1::__vector_base.359" = type { %"class.std::__1::unique_ptr.360"*, %"class.std::__1::unique_ptr.360"*, %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.396" }
%"class.std::__1::__compressed_pair.396" = type { %"struct.std::__1::__compressed_pair_elem.397" }
%"struct.std::__1::__compressed_pair_elem.397" = type { %"class.v8::internal::torque::Namespace"* }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.std::__1::unique_ptr.360"* }
%"class.std::__1::__tree_node.415" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type.414" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type.414" = type { %"struct.std::__1::pair.382" }
%"struct.std::__1::pair.382" = type { %"class.v8::internal::torque::SourceId", %"class.std::__1::vector.369" }
%"class.std::__1::vector.369" = type { %"class.std::__1::__vector_base.370" }
%"class.std::__1::__vector_base.370" = type { %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"*, %"class.std::__1::__compressed_pair.372" }
%"struct.std::__1::pair.371" = type { %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"struct.std::__1::pair.371"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::base::Optional.377" = type { %"class.v8::base::internal::OptionalBase.378" }
%"class.v8::base::internal::OptionalBase.378" = type { %"struct.v8::base::internal::OptionalStorage.379" }
%"struct.v8::base::internal::OptionalStorage.379" = type { %"struct.v8::base::internal::OptionalStorageBase.380" }
%"struct.v8::base::internal::OptionalStorageBase.380" = type { i8, %union.anon.381 }
%union.anon.381 = type { %"struct.v8::internal::torque::SourcePosition" }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.405" }
%"struct.std::__1::pair.405" = type { %"class.v8::internal::torque::SourceId", %"class.std::__1::vector.384" }
%"class.std::__1::vector.384" = type { %"class.std::__1::__vector_base.385" }
%"class.std::__1::__vector_base.385" = type { %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"**, %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.v8::internal::torque::Declarable"** }
%"class.std::length_error" = type { %"class.std::logic_error" }
%"class.std::logic_error" = type { %"class.std::exception", %"class.std::__1::__libcpp_refstring" }
%"class.std::exception" = type { i32 (...)** }
%"class.std::__1::__libcpp_refstring" = type { i8* }

$_ZNSt3__120__throw_length_errorEPKc = comdat any

$_ZNSt12length_errorC2EPKc = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZZN2v88internal6torque21ContextualVariableTopINS1_18LanguageServerDataEEERPNT_5ScopeEvE3top = internal thread_local global %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* null, align 8
@.str = private unnamed_addr constant [68 x i8] c"allocator<T>::allocate(size_t n) 'n' exceeds maximum supported size\00", align 1
@_ZTISt12length_error = external constant i8*
@_ZTVSt12length_error = external unnamed_addr constant { [5 x i8*] }, align 8

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull dereferenceable(8) %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"** @_ZN2v88internal6torque21ContextualVariableTopINS1_18LanguageServerDataEEERPNT_5ScopeEv() local_unnamed_addr #0 {
  ret %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_18LanguageServerDataEEERPNT_5ScopeEvE3top
}

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque18LanguageServerData13AddDefinitionENS1_14SourcePositionES3_(%"struct.v8::internal::torque::SourcePosition"* nocapture readonly byval(%"struct.v8::internal::torque::SourcePosition") align 8, %"struct.v8::internal::torque::SourcePosition"* nocapture readonly byval(%"struct.v8::internal::torque::SourcePosition") align 8) local_unnamed_addr #1 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %3 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_18LanguageServerDataEEERPNT_5ScopeEvE3top, align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node.415"**
  %6 = load %"class.std::__1::__tree_node.415"*, %"class.std::__1::__tree_node.415"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node.415"* %6, null
  br i1 %7, label %38, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition"* %0, i64 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 8
  br label %12

12:                                               ; preds = %34, %8
  %13 = phi %"class.std::__1::__tree_node.415"* [ %37, %34 ], [ %6, %8 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %9, %8 ]
  %15 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %11, %16
  br i1 %17, label %18, label %24

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node_base"* %20, null
  br i1 %21, label %22, label %34

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 0, i32 0
  br label %40

24:                                               ; preds = %12
  %25 = icmp slt i32 %16, %11
  br i1 %25, label %26, label %32

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %24
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %13, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %18
  %35 = phi %"class.std::__1::__tree_node_base"* [ %20, %18 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %19, %18 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node.415"*
  br label %12

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %22
  %41 = phi %"class.std::__1::__tree_end_node"* [ %4, %38 ], [ %23, %22 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %19, %22 ], [ %27, %30 ], [ %14, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node.415"**
  %44 = load %"class.std::__1::__tree_node.415"*, %"class.std::__1::__tree_node.415"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.415"* %44, null
  br i1 %45, label %46, label %74

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 64) #10, !noalias !2
  %48 = getelementptr inbounds %"struct.v8::internal::torque::SourcePosition", %"struct.v8::internal::torque::SourcePosition"* %0, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds i8, i8* %47, i64 32
  %50 = bitcast i8* %49 to i32*
  %51 = load i32, i32* %48, align 8, !noalias !2
  store i32 %51, i32* %50, align 8, !noalias !2
  %52 = getelementptr inbounds i8, i8* %47, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #11, !noalias !2
  %53 = bitcast i8* %47 to %"class.std::__1::__tree_node.415"*
  %54 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %55 = getelementptr inbounds i8, i8* %47, i64 16
  %56 = bitcast i8* %55 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %56, align 8
  %57 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %59, i64 0, i32 0
  %61 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  %62 = icmp eq %"class.std::__1::__tree_node_base"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %46
  %64 = ptrtoint %"class.std::__1::__tree_node_base"* %61 to i64
  %65 = bitcast %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3 to i64*
  store i64 %64, i64* %65, align 8
  %66 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %67

67:                                               ; preds = %63, %46
  %68 = phi %"class.std::__1::__tree_node_base"* [ %54, %46 ], [ %66, %63 ]
  %69 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %69, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %70, %"class.std::__1::__tree_node_base"* %68) #11
  %71 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %3, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  br label %74

74:                                               ; preds = %40, %67
  %75 = phi %"class.std::__1::__tree_node.415"* [ %53, %67 ], [ %44, %40 ]
  %76 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %75, i64 0, i32 1, i32 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %75, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %78 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %75, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %80 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %79, align 8
  %81 = icmp ult %"struct.std::__1::pair.371"* %78, %80
  %82 = ptrtoint %"struct.std::__1::pair.371"* %80 to i64
  br i1 %81, label %83, label %92

83:                                               ; preds = %74
  %84 = bitcast %"struct.std::__1::pair.371"* %78 to i8*
  %85 = bitcast %"struct.v8::internal::torque::SourcePosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* nonnull align 8 %85, i64 20, i1 false) #11
  %86 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %78, i64 0, i32 1
  %87 = bitcast %"struct.v8::internal::torque::SourcePosition"* %86 to i8*
  %88 = bitcast %"struct.v8::internal::torque::SourcePosition"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %87, i8* nonnull align 8 %88, i64 20, i1 false) #11
  %89 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %78, i64 1
  %90 = ptrtoint %"struct.std::__1::pair.371"* %89 to i64
  %91 = bitcast %"struct.std::__1::pair.371"** %77 to i64*
  store i64 %90, i64* %91, align 8
  br label %149

92:                                               ; preds = %74
  %93 = ptrtoint %"struct.std::__1::pair.371"* %78 to i64
  %94 = bitcast %"struct.std::__1::pair.371"** %77 to i64*
  %95 = bitcast %"class.std::__1::vector.369"* %76 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %93, %96
  %98 = sdiv exact i64 %97, 40
  %99 = add nsw i64 %98, 1
  %100 = icmp ugt i64 %99, 461168601842738790
  br i1 %100, label %101, label %103

101:                                              ; preds = %92
  %102 = bitcast %"class.std::__1::vector.369"* %76 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %102) #12
  unreachable

103:                                              ; preds = %92
  %104 = bitcast %"struct.std::__1::pair.371"** %79 to i64*
  %105 = sub i64 %82, %96
  %106 = sdiv exact i64 %105, 40
  %107 = icmp ult i64 %106, 230584300921369395
  br i1 %107, label %108, label %113

108:                                              ; preds = %103
  %109 = shl nsw i64 %106, 1
  %110 = icmp ult i64 %109, %99
  %111 = select i1 %110, i64 %99, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %118, label %113

113:                                              ; preds = %108, %103
  %114 = phi i64 [ %111, %108 ], [ 461168601842738790, %103 ]
  %115 = mul i64 %114, 40
  %116 = tail call i8* @_Znwm(i64 %115) #10
  %117 = bitcast i8* %116 to %"struct.std::__1::pair.371"*
  br label %118

118:                                              ; preds = %113, %108
  %119 = phi i64 [ %114, %113 ], [ 0, %108 ]
  %120 = phi %"struct.std::__1::pair.371"* [ %117, %113 ], [ null, %108 ]
  %121 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %120, i64 %98
  %122 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %120, i64 %119
  %123 = ptrtoint %"struct.std::__1::pair.371"* %122 to i64
  %124 = bitcast %"struct.std::__1::pair.371"* %121 to i8*
  %125 = bitcast %"struct.v8::internal::torque::SourcePosition"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %124, i8* nonnull align 8 %125, i64 20, i1 false) #11
  %126 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %120, i64 %98, i32 1
  %127 = bitcast %"struct.v8::internal::torque::SourcePosition"* %126 to i8*
  %128 = bitcast %"struct.v8::internal::torque::SourcePosition"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* nonnull align 8 %128, i64 20, i1 false) #11
  %129 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %121, i64 1
  %130 = ptrtoint %"struct.std::__1::pair.371"* %129 to i64
  %131 = getelementptr inbounds %"class.std::__1::vector.369", %"class.std::__1::vector.369"* %76, i64 0, i32 0, i32 0
  %132 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %131, align 8
  %133 = load i64, i64* %94, align 8
  %134 = ptrtoint %"struct.std::__1::pair.371"* %132 to i64
  %135 = sub i64 %133, %134
  %136 = sdiv exact i64 %135, -40
  %137 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %121, i64 %136
  %138 = ptrtoint %"struct.std::__1::pair.371"* %137 to i64
  %139 = icmp sgt i64 %135, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %118
  %141 = bitcast %"struct.std::__1::pair.371"* %137 to i8*
  %142 = bitcast %"struct.std::__1::pair.371"* %132 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %141, i8* align 4 %142, i64 %135, i1 false) #11
  %143 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %131, align 8
  br label %144

144:                                              ; preds = %140, %118
  %145 = phi %"struct.std::__1::pair.371"* [ %143, %140 ], [ %132, %118 ]
  store i64 %138, i64* %95, align 8
  store i64 %130, i64* %94, align 8
  store i64 %123, i64* %104, align 8
  %146 = icmp eq %"struct.std::__1::pair.371"* %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast %"struct.std::__1::pair.371"* %145 to i8*
  tail call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %83, %144, %147
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal6torque18LanguageServerData14FindDefinitionENS1_8SourceIdENS1_13LineAndColumnE(%"class.v8::base::Optional.377"* noalias nocapture sret, i32, i64) local_unnamed_addr #2 align 2 {
  %4 = icmp eq i32 %1, -1
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 4
  %7 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.381* %7 to i8*
  store i8 0, i8* %8, align 4
  br label %86

9:                                                ; preds = %3
  %10 = load %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"*, %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"** @_ZZN2v88internal6torque21ContextualVariableTopINS1_18LanguageServerDataEEERPNT_5ScopeEvE3top, align 8
  %11 = getelementptr inbounds %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope", %"class.v8::internal::torque::ContextualVariable<v8::internal::torque::LanguageServerData, v8::internal::torque::LanguageServerData>::Scope"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node.415"**
  %13 = load %"class.std::__1::__tree_node.415"*, %"class.std::__1::__tree_node.415"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node.415"* %13, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %9, %15
  %16 = phi %"class.std::__1::__tree_end_node"* [ %26, %15 ], [ %11, %9 ]
  %17 = phi %"class.std::__1::__tree_node.415"* [ %27, %15 ], [ %13, %9 ]
  %18 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %17, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %1
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %17, i64 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::__tree_node_base"** %21 to %"class.std::__1::__tree_node.415"**
  %23 = getelementptr inbounds %"class.std::__1::__tree_node.415", %"class.std::__1::__tree_node.415"* %17, i64 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::__tree_node.415"* %17 to %"class.std::__1::__tree_node.415"**
  %25 = select i1 %20, %"class.std::__1::__tree_node.415"** %22, %"class.std::__1::__tree_node.415"** %24
  %26 = select i1 %20, %"class.std::__1::__tree_end_node"* %16, %"class.std::__1::__tree_end_node"* %23
  %27 = load %"class.std::__1::__tree_node.415"*, %"class.std::__1::__tree_node.415"** %25, align 8
  %28 = icmp eq %"class.std::__1::__tree_node.415"* %27, null
  br i1 %28, label %29, label %15

29:                                               ; preds = %15
  %30 = icmp eq %"class.std::__1::__tree_end_node"* %26, %11
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 4
  %33 = bitcast %"class.std::__1::__tree_end_node"* %32 to i32*
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %1
  br i1 %35, label %36, label %40

36:                                               ; preds = %31, %29, %9
  %37 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %37, align 4
  %38 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %39 = bitcast %union.anon.381* %38 to i8*
  store i8 0, i8* %39, align 4
  br label %86

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 5
  %42 = bitcast %"class.std::__1::__tree_end_node"* %41 to %"struct.std::__1::pair.371"**
  %43 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %26, i64 6
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"struct.std::__1::pair.371"**
  %46 = load %"struct.std::__1::pair.371"*, %"struct.std::__1::pair.371"** %45, align 8
  %47 = icmp eq %"struct.std::__1::pair.371"* %43, %46
  br i1 %47, label %82, label %48

48:                                               ; preds = %40
  %49 = trunc i64 %2 to i32
  %50 = lshr i64 %2, 32
  %51 = trunc i64 %50 to i32
  br label %52

52:                                               ; preds = %48, %73
  %53 = phi %"struct.std::__1::pair.371"* [ %43, %48 ], [ %74, %73 ]
  %54 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 0, i32 0, i32 1, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 0, i32 0, i32 2, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 0, i32 0, i32 2, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %55, %49
  %61 = icmp slt i32 %57, %49
  %62 = or i1 %60, %61
  br i1 %62, label %73, label %63

63:                                               ; preds = %52
  %64 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 0, i32 0, i32 1, i32 1
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %55, %49
  %67 = icmp sgt i32 %65, %51
  %68 = and i1 %66, %67
  br i1 %68, label %73, label %69

69:                                               ; preds = %63
  %70 = icmp ne i32 %57, %49
  %71 = icmp sgt i32 %59, %51
  %72 = or i1 %70, %71
  br i1 %72, label %76, label %73

73:                                               ; preds = %69, %63, %52
  %74 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 1
  %75 = icmp eq %"struct.std::__1::pair.371"* %74, %46
  br i1 %75, label %82, label %52

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"struct.std::__1::pair.371", %"struct.std::__1::pair.371"* %53, i64 0, i32 1
  %78 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %78, align 4
  %79 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %80 = bitcast %"struct.v8::internal::torque::SourcePosition"* %79 to i8*
  %81 = bitcast %"struct.v8::internal::torque::SourcePosition"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %80, i8* align 4 %81, i64 20, i1 false) #11
  br label %86

82:                                               ; preds = %73, %40
  %83 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %83, align 4
  %84 = getelementptr inbounds %"class.v8::base::Optional.377", %"class.v8::base::Optional.377"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %85 = bitcast %union.anon.381* %84 to i8*
  store i8 0, i8* %85, align 4
  br label %86

86:                                               ; preds = %36, %82, %76, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: ssp uwtable
define hidden void @_ZN2v88internal6torque18LanguageServerData27PrepareAllDeclarableSymbolsEv(%"class.v8::internal::torque::LanguageServerData"*) local_unnamed_addr #1 align 2 personality i32 (...)* @__gxx_personality_v0 {
  %2 = getelementptr inbounds %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::LanguageServerData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %3 = load %"class.v8::internal::torque::GlobalContext"*, %"class.v8::internal::torque::GlobalContext"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::torque::GlobalContext", %"class.v8::internal::torque::GlobalContext"* %3, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::torque::GlobalContext", %"class.v8::internal::torque::GlobalContext"* %3, i64 0, i32 6, i32 0, i32 1
  %7 = load %"class.std::__1::unique_ptr.78"*, %"class.std::__1::unique_ptr.78"** %6, align 8
  %8 = icmp eq %"class.std::__1::unique_ptr.78"* %5, %7
  br i1 %8, label %18, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::LanguageServerData"* %0, i64 0, i32 1
  %11 = getelementptr inbounds %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::LanguageServerData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %12 = bitcast %"class.std::__1::__tree_end_node"* %11 to %"class.std::__1::__tree_node"**
  %13 = getelementptr inbounds %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::LanguageServerData"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %11, i64 0, i32 0
  %15 = getelementptr inbounds %"class.std::__1::map.4", %"class.std::__1::map.4"* %10, i64 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::map.4"* %10 to i64*
  %17 = getelementptr inbounds %"class.v8::internal::torque::LanguageServerData", %"class.v8::internal::torque::LanguageServerData"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  br label %19

18:                                               ; preds = %160, %1
  ret void

19:                                               ; preds = %9, %160
  %20 = phi %"class.std::__1::unique_ptr.78"* [ %5, %9 ], [ %161, %160 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::torque::Declarable", %"class.v8::internal::torque::Declarable"* %22, i64 0, i32 6
  %24 = load i8, i8* %23, align 8, !range !5
  %25 = icmp eq i8 %24, 0
  %26 = ptrtoint %"class.v8::internal::torque::Declarable"* %22 to i64
  br i1 %25, label %160, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.v8::internal::torque::Declarable", %"class.v8::internal::torque::Declarable"* %22, i64 0, i32 4, i32 0, i32 0
  %29 = load i32, i32* %28, align 8
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %12, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %58, label %32

32:                                               ; preds = %27, %54
  %33 = phi %"class.std::__1::__tree_node"* [ %57, %54 ], [ %30, %27 ]
  %34 = phi %"class.std::__1::__tree_node_base"** [ %56, %54 ], [ %13, %27 ]
  %35 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %29, %36
  br i1 %37, label %38, label %44

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %42, label %54

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

44:                                               ; preds = %32
  %45 = icmp slt i32 %36, %29
  br i1 %45, label %46, label %52

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 1
  %48 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %47, align 8
  %49 = icmp eq %"class.std::__1::__tree_node_base"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %33, i64 0, i32 0, i32 0
  br label %58

54:                                               ; preds = %46, %38
  %55 = phi %"class.std::__1::__tree_node_base"* [ %40, %38 ], [ %48, %46 ]
  %56 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %47, %46 ]
  %57 = bitcast %"class.std::__1::__tree_node_base"* %55 to %"class.std::__1::__tree_node"*
  br label %32

58:                                               ; preds = %27, %52, %50, %42
  %59 = phi %"class.std::__1::__tree_end_node"* [ %43, %42 ], [ %51, %50 ], [ %53, %52 ], [ %11, %27 ]
  %60 = phi %"class.std::__1::__tree_node_base"** [ %39, %42 ], [ %47, %50 ], [ %34, %52 ], [ %14, %27 ]
  %61 = bitcast %"class.std::__1::__tree_node_base"** %60 to %"class.std::__1::__tree_node"**
  %62 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_node"* %62, null
  br i1 %63, label %64, label %88

64:                                               ; preds = %58
  %65 = tail call i8* @_Znwm(i64 64) #10, !noalias !6
  %66 = getelementptr inbounds i8, i8* %65, i64 32
  %67 = bitcast i8* %66 to i32*
  store i32 %29, i32* %67, align 8, !noalias !6
  %68 = getelementptr inbounds i8, i8* %65, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #11, !noalias !6
  %69 = bitcast i8* %65 to %"class.std::__1::__tree_node"*
  %70 = bitcast i8* %65 to %"class.std::__1::__tree_node_base"*
  %71 = getelementptr inbounds i8, i8* %65, i64 16
  %72 = bitcast i8* %71 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 0, i64 16, i1 false) #11
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %72, align 8
  %73 = bitcast %"class.std::__1::__tree_node_base"** %60 to i8**
  store i8* %65, i8** %73, align 8
  %74 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %75 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %74, i64 0, i32 0
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %75, align 8
  %77 = icmp eq %"class.std::__1::__tree_node_base"* %76, null
  br i1 %77, label %81, label %78

78:                                               ; preds = %64
  %79 = ptrtoint %"class.std::__1::__tree_node_base"* %76 to i64
  store i64 %79, i64* %16, align 8
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %60, align 8
  br label %81

81:                                               ; preds = %78, %64
  %82 = phi %"class.std::__1::__tree_node_base"* [ %70, %64 ], [ %80, %78 ]
  %83 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %13, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %83, %"class.std::__1::__tree_node_base"* %82) #11
  %84 = load i64, i64* %17, align 8
  %85 = add i64 %84, 1
  store i64 %85, i64* %17, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.78"* %20 to i64*
  %87 = load i64, i64* %86, align 8
  br label %88

88:                                               ; preds = %58, %81
  %89 = phi i64 [ %87, %81 ], [ %26, %58 ]
  %90 = phi %"class.std::__1::__tree_node"* [ %69, %81 ], [ %62, %58 ]
  %91 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %93 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %92, align 8
  %94 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %90, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %95 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %94, align 8
  %96 = icmp ult %"class.v8::internal::torque::Declarable"** %93, %95
  %97 = ptrtoint %"class.v8::internal::torque::Declarable"** %95 to i64
  br i1 %96, label %98, label %103

98:                                               ; preds = %88
  %99 = bitcast %"class.v8::internal::torque::Declarable"** %93 to i64*
  store i64 %89, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %93, i64 1
  %101 = ptrtoint %"class.v8::internal::torque::Declarable"** %100 to i64
  %102 = bitcast %"class.v8::internal::torque::Declarable"*** %92 to i64*
  store i64 %101, i64* %102, align 8
  br label %160

103:                                              ; preds = %88
  %104 = ptrtoint %"class.v8::internal::torque::Declarable"** %93 to i64
  %105 = bitcast %"class.v8::internal::torque::Declarable"*** %92 to i64*
  %106 = bitcast %"class.std::__1::vector.384"* %91 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = sub i64 %104, %107
  %109 = ashr exact i64 %108, 3
  %110 = add nsw i64 %109, 1
  %111 = icmp ugt i64 %110, 2305843009213693951
  br i1 %111, label %112, label %114

112:                                              ; preds = %103
  %113 = bitcast %"class.std::__1::vector.384"* %91 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %113) #12
  unreachable

114:                                              ; preds = %103
  %115 = bitcast %"class.v8::internal::torque::Declarable"*** %94 to i64*
  %116 = sub i64 %97, %107
  %117 = ashr exact i64 %116, 3
  %118 = icmp ult i64 %117, 1152921504606846975
  br i1 %118, label %119, label %127

119:                                              ; preds = %114
  %120 = ashr exact i64 %116, 2
  %121 = icmp ult i64 %120, %110
  %122 = select i1 %121, i64 %110, i64 %120
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %132, label %124

124:                                              ; preds = %119
  %125 = icmp ugt i64 %122, 2305843009213693951
  br i1 %125, label %126, label %127

126:                                              ; preds = %124
  tail call void @_ZNSt3__120__throw_length_errorEPKc(i8* getelementptr inbounds ([68 x i8], [68 x i8]* @.str, i64 0, i64 0)) #12
  unreachable

127:                                              ; preds = %124, %114
  %128 = phi i64 [ %122, %124 ], [ 2305843009213693951, %114 ]
  %129 = shl i64 %128, 3
  %130 = tail call i8* @_Znwm(i64 %129) #10
  %131 = bitcast i8* %130 to %"class.v8::internal::torque::Declarable"**
  br label %132

132:                                              ; preds = %127, %119
  %133 = phi i64 [ %128, %127 ], [ 0, %119 ]
  %134 = phi %"class.v8::internal::torque::Declarable"** [ %131, %127 ], [ null, %119 ]
  %135 = getelementptr inbounds %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %134, i64 %109
  %136 = getelementptr inbounds %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %134, i64 %133
  %137 = ptrtoint %"class.v8::internal::torque::Declarable"** %136 to i64
  %138 = bitcast %"class.v8::internal::torque::Declarable"** %135 to i64*
  store i64 %89, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %135, i64 1
  %140 = ptrtoint %"class.v8::internal::torque::Declarable"** %139 to i64
  %141 = getelementptr inbounds %"class.std::__1::vector.384", %"class.std::__1::vector.384"* %91, i64 0, i32 0, i32 0
  %142 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %141, align 8
  %143 = load i64, i64* %105, align 8
  %144 = ptrtoint %"class.v8::internal::torque::Declarable"** %142 to i64
  %145 = sub i64 %143, %144
  %146 = ashr exact i64 %145, 3
  %147 = sub nsw i64 0, %146
  %148 = getelementptr inbounds %"class.v8::internal::torque::Declarable"*, %"class.v8::internal::torque::Declarable"** %135, i64 %147
  %149 = ptrtoint %"class.v8::internal::torque::Declarable"** %148 to i64
  %150 = icmp sgt i64 %145, 0
  br i1 %150, label %151, label %155

151:                                              ; preds = %132
  %152 = bitcast %"class.v8::internal::torque::Declarable"** %148 to i8*
  %153 = bitcast %"class.v8::internal::torque::Declarable"** %142 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 %145, i1 false) #11
  %154 = load %"class.v8::internal::torque::Declarable"**, %"class.v8::internal::torque::Declarable"*** %141, align 8
  br label %155

155:                                              ; preds = %151, %132
  %156 = phi %"class.v8::internal::torque::Declarable"** [ %154, %151 ], [ %142, %132 ]
  store i64 %149, i64* %106, align 8
  store i64 %140, i64* %105, align 8
  store i64 %137, i64* %115, align 8
  %157 = icmp eq %"class.v8::internal::torque::Declarable"** %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %155
  %159 = bitcast %"class.v8::internal::torque::Declarable"** %156 to i8*
  tail call void @_ZdlPv(i8* %159) #13
  br label %160

160:                                              ; preds = %19, %158, %155, %98
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.78", %"class.std::__1::unique_ptr.78"* %20, i64 1
  %162 = icmp eq %"class.std::__1::unique_ptr.78"* %161, %7
  br i1 %162, label %18, label %19
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: inlinehint noreturn ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__throw_length_errorEPKc(i8*) local_unnamed_addr #4 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %2 = tail call i8* @__cxa_allocate_exception(i64 16) #11
  %3 = bitcast i8* %2 to %"class.std::length_error"*
  invoke void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"* %3, i8* %0)
          to label %4 unwind label %5

4:                                                ; preds = %1
  tail call void @__cxa_throw(i8* %2, i8* bitcast (i8** @_ZTISt12length_error to i8*), i8* bitcast (void (%"class.std::length_error"*)* @_ZNSt12length_errorD1Ev to i8*)) #12
  unreachable

5:                                                ; preds = %1
  %6 = landingpad { i8*, i32 }
          cleanup
  tail call void @__cxa_free_exception(i8* %2) #11
  resume { i8*, i32 } %6
}

declare i8* @__cxa_allocate_exception(i64) local_unnamed_addr

; Function Attrs: ssp uwtable
define linkonce_odr hidden void @_ZNSt12length_errorC2EPKc(%"class.std::length_error"*, i8*) unnamed_addr #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0
  tail call void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"* %3, i8* %1)
  %4 = getelementptr inbounds %"class.std::length_error", %"class.std::length_error"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVSt12length_error, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  ret void
}

declare void @__cxa_free_exception(i8*) local_unnamed_addr

; Function Attrs: nounwind
declare void @_ZNSt12length_errorD1Ev(%"class.std::length_error"*) unnamed_addr #5

declare void @__cxa_throw(i8*, i8*, i8*) local_unnamed_addr

declare void @_ZNSt11logic_errorC2EPKc(%"class.std::logic_error"*, i8*) unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat personality i8* bitcast (i32 (...)* @__gxx_personality_v0 to i8*) {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !5
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !5
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !5
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { inlinehint noreturn ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin }
attributes #11 = { nounwind }
attributes #12 = { noreturn }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal6torque8SourceIdENS_6vectorINS_4pairINS4_14SourcePositionES8_EENS_9allocatorIS9_EEEEEENS_19__map_value_compareIS5_SD_NS_4lessIS5_EELb1EEENSA_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINSA_ISW_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal6torque8SourceIdENS_6vectorINS_4pairINS4_14SourcePositionES8_EENS_9allocatorIS9_EEEEEENS_19__map_value_compareIS5_SD_NS_4lessIS5_EELb1EEENSA_ISD_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSO_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISD_PvEENS_22__tree_node_destructorINSA_ISW_EEEEEEDpOT_"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal6torque8SourceIdENS_6vectorIPNS4_10DeclarableENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_: argument 0"}
!8 = distinct !{!8, !"_ZNSt3__16__treeINS_12__value_typeIN2v88internal6torque8SourceIdENS_6vectorIPNS4_10DeclarableENS_9allocatorIS8_EEEEEENS_19__map_value_compareIS5_SC_NS_4lessIS5_EELb1EEENS9_ISC_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS5_EEENSN_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISC_PvEENS_22__tree_node_destructorINS9_ISV_EEEEEEDpOT_"}
