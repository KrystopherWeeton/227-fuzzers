; ModuleID = '../../third_party/pdfium/xfa/fxfa/cxfa_textprovider.cpp'
source_filename = "../../third_party/pdfium/xfa/fxfa/cxfa_textprovider.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CXFA_TextProvider = type <{ %"class.cppgc::internal::BasicMember", i32, [4 x i8] }>
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%class.CXFA_Node = type { %class.CXFA_Object, %"class.fxjs::GCedTreeNodeMixin", i32, i8, i8, i8, %"class.pdfium::span.3", %"class.pdfium::span.5", i32, %"class.fxcrt::UnownedPtr.7", i8, i8, i8, i32, %"class.cppgc::internal::BasicMember", %"class.std::__1::vector", %"class.cppgc::internal::BasicMember.10", %"class.cppgc::internal::BasicMember.11" }
%class.CXFA_Object = type { i32 (...)**, i32, i16, %"class.fxcrt::StringViewTemplate", i32, %"class.cppgc::internal::BasicMember.1", %"class.cppgc::internal::BasicMember.2" }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }
%"class.cppgc::internal::BasicMember.1" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.2" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxjs::GCedTreeNodeMixin" = type { %"class.cppgc::GarbageCollectedMixin", %"class.fxcrt::TreeNode" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.fxcrt::TreeNode" = type { i32 (...)**, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember" }
%"class.pdfium::span.3" = type { %"class.fxcrt::UnownedPtr.4", i64 }
%"class.fxcrt::UnownedPtr.4" = type { %"struct.CXFA_Node::PropertyData"* }
%"struct.CXFA_Node::PropertyData" = type { i16, i8, i8 }
%"class.pdfium::span.5" = type { %"class.fxcrt::UnownedPtr.6", i64 }
%"class.fxcrt::UnownedPtr.6" = type { %"struct.CXFA_Node::AttributeData"* }
%"struct.CXFA_Node::AttributeData" = type { i16, i8, i8* }
%"class.fxcrt::UnownedPtr.7" = type { %class.CFX_XMLNode* }
%class.CFX_XMLNode = type { %"class.fxcrt::TreeNode.8" }
%"class.fxcrt::TreeNode.8" = type { i32 (...)**, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode*, %class.CFX_XMLNode* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.cppgc::internal::BasicMember"*, %"class.cppgc::internal::BasicMember"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.cppgc::internal::BasicMember"* }
%"class.cppgc::internal::BasicMember.10" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.11" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::Visitor" = type { i32 (...)** }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"class.fxcrt::WideString" }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CJX_Object = type { %class.CFXJSE_HostObject, %"class.cppgc::internal::BasicMember.16", %"class.cppgc::internal::BasicMember.17", %"class.cppgc::internal::BasicMember.18", %"class.std::__1::unique_ptr.19", %"class.std::__1::map", i64 }
%class.CFXJSE_HostObject = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.16" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.17" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.18" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CFXJSE_MapModule* }
%class.CFXJSE_MapModule = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.23", %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i64 }
%class.CFX_XMLElement = type { %class.CFX_XMLNode, %"class.fxcrt::WideString", %"class.std::__1::map.31" }
%"class.std::__1::map.31" = type { %"class.std::__1::__tree.32" }
%"class.std::__1::__tree.32" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%class.CXFA_Para = type { %class.CXFA_Node }
%class.CXFA_Font = type { %class.CXFA_Node }
%"class.fxcrt::StringViewTemplate.135" = type { %"class.pdfium::span.136" }
%"class.pdfium::span.136" = type { %"class.fxcrt::UnownedPtr.137", i64 }
%"class.fxcrt::UnownedPtr.137" = type { i32* }
%class.CXFA_Document = type { %"class.fxcrt::UnownedPtr.48", %"class.cppgc::internal::BasicMember.49", %"class.cppgc::internal::BasicMember.50", %"class.cppgc::internal::BasicMember", %"class.std::__1::unique_ptr.51", %"class.cppgc::internal::BasicMember.111", %"class.cppgc::internal::BasicMember.112", %"class.cppgc::internal::BasicMember.113", %"class.cppgc::internal::BasicMember.114", %"class.cppgc::internal::BasicMember.115", %"class.cppgc::internal::BasicMember.116", %"class.cppgc::internal::BasicMember.117", %"class.cppgc::internal::BasicMember.118", %"class.std::__1::map.119", %"class.std::__1::vector", i32, %"class.pdfium::Optional.130", i8, i8 }
%"class.fxcrt::UnownedPtr.48" = type { %"class.cppgc::Heap"* }
%"class.cppgc::Heap" = type { i32 (...)** }
%"class.cppgc::internal::BasicMember.49" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.50" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.CFXJSE_Engine* }
%class.CFXJSE_Engine = type <{ %class.CFX_V8, %"class.fxcrt::UnownedPtr.55", %"class.cppgc::internal::BasicPersistent", %"class.std::__1::unique_ptr.57", %"class.fxcrt::UnownedPtr.63", i32, [4 x i8], %"class.std::__1::map.64", %"class.std::__1::map.75", %"class.fxcrt::UnownedPtr.84", %"class.std::__1::vector.86", %"class.fxcrt::UnownedPtr.94", %"class.std::__1::unique_ptr.95", %"class.std::__1::unique_ptr.101", %"class.cppgc::internal::BasicPersistent.107", i16, [6 x i8] }>
%class.CFX_V8 = type { i32 (...)**, %"class.fxcrt::UnownedPtr.54" }
%"class.fxcrt::UnownedPtr.54" = type { %"class.v8::Isolate"* }
%"class.v8::Isolate" = type { i8 }
%"class.fxcrt::UnownedPtr.55" = type { %class.CJS_Runtime* }
%class.CJS_Runtime = type opaque
%"class.cppgc::internal::BasicPersistent" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::PersistentBase" = type { i8*, %"class.cppgc::internal::PersistentNode"* }
%"class.cppgc::internal::PersistentNode" = type { %union.anon.56, void (%"class.cppgc::Visitor"*, i8*)* }
%union.anon.56 = type { i8* }
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.CFXJSE_Context* }
%class.CFXJSE_Context = type opaque
%"class.fxcrt::UnownedPtr.63" = type { %class.CFXJSE_Class* }
%class.CFXJSE_Class = type opaque
%"class.std::__1::map.64" = type { %"class.std::__1::__tree.65" }
%"class.std::__1::__tree.65" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.66", %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.std::__1::map.75" = type { %"class.std::__1::__tree.76" }
%"class.std::__1::__tree.76" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.77", %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.fxcrt::UnownedPtr.84" = type { %class.CXFA_EventParam* }
%class.CXFA_EventParam = type { i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, %"class.fxcrt::UnownedPtr.85", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString", %"class.fxcrt::WideString" }
%"class.fxcrt::UnownedPtr.85" = type { %class.CXFA_Node* }
%"class.std::__1::vector.86" = type { %"class.std::__1::__vector_base.87" }
%"class.std::__1::__vector_base.87" = type { %"class.cppgc::internal::BasicPersistent.88"*, %"class.cppgc::internal::BasicPersistent.88"*, %"class.std::__1::__compressed_pair.89" }
%"class.cppgc::internal::BasicPersistent.88" = type { %"class.cppgc::internal::PersistentBase" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.cppgc::internal::BasicPersistent.88"* }
%"class.fxcrt::UnownedPtr.94" = type { %"class.std::__1::vector.86"* }
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %class.CFXJSE_ResolveProcessor* }
%class.CFXJSE_ResolveProcessor = type opaque
%"class.std::__1::unique_ptr.101" = type { %"class.std::__1::__compressed_pair.102" }
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %class.CFXJSE_FormCalcContext* }
%class.CFXJSE_FormCalcContext = type opaque
%"class.cppgc::internal::BasicPersistent.107" = type { %"class.cppgc::internal::PersistentBase" }
%"class.cppgc::internal::BasicMember.111" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.112" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.113" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.114" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.115" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.116" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.117" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.118" = type { %"class.cppgc::internal::MemberBase" }
%"class.std::__1::map.119" = type { %"class.std::__1::__tree.120" }
%"class.std::__1::__tree.120" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.121", %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"class.pdfium::Optional.130" = type { %"class.pdfium::internal::OptionalBase.131" }
%"class.pdfium::internal::OptionalBase.131" = type { %"struct.pdfium::internal::OptionalStorage.132" }
%"struct.pdfium::internal::OptionalStorage.132" = type { %"struct.pdfium::internal::OptionalStorageBase.133" }
%"struct.pdfium::internal::OptionalStorageBase.133" = type { i8, %union.anon.134 }
%union.anon.134 = type { %"struct.pdfium::internal::DummyUnionMember" }
%"struct.pdfium::internal::DummyUnionMember" = type { i8 }

$_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv = comdat any

@.str.4 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4

@_ZN17CXFA_TextProviderC1EP9CXFA_Node20XFA_TEXTPROVIDERTYPE = hidden unnamed_addr alias void (%class.CXFA_TextProvider*, %class.CXFA_Node*, i32), void (%class.CXFA_TextProvider*, %class.CXFA_Node*, i32)* @_ZN17CXFA_TextProviderC2EP9CXFA_Node20XFA_TEXTPROVIDERTYPE
@_ZN17CXFA_TextProviderD1Ev = hidden unnamed_addr alias void (%class.CXFA_TextProvider*), void (%class.CXFA_TextProvider*)* @_ZN17CXFA_TextProviderD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN17CXFA_TextProviderC2EP9CXFA_Node20XFA_TEXTPROVIDERTYPE(%class.CXFA_TextProvider* nocapture, %class.CXFA_Node*, i32) unnamed_addr #0 align 2 {
  %4 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  store %class.CXFA_Node* %1, %class.CXFA_Node** %4, align 8
  %5 = getelementptr inbounds %class.CXFA_TextProvider, %class.CXFA_TextProvider* %0, i64 0, i32 1
  store i32 %2, i32* %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN17CXFA_TextProviderD2Ev(%class.CXFA_TextProvider* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17CXFA_TextProvider5TraceEPN5cppgc7VisitorE(%class.CXFA_TextProvider* nocapture readonly, %"class.cppgc::Visitor"*) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.CXFA_TextProvider* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.cppgc::Visitor"* %1 to void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)***
  %9 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)**, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %9, i64 4
  %11 = load void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)*, void (%"class.cppgc::Visitor"*, i8*, i8*, void (%"class.cppgc::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.cppgc::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.cppgc::Visitor"*, i8*)* nonnull @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv) #6
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Node* @_ZN17CXFA_TextProvider11GetTextNodeEPb(%class.CXFA_TextProvider* nocapture readonly, i8* nocapture) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.pdfium::Optional", align 8
  %4 = alloca %"class.pdfium::Optional", align 8
  %5 = alloca %"class.fxcrt::WideString", align 8
  store i8 0, i8* %1, align 1
  %6 = getelementptr inbounds %class.CXFA_TextProvider, %class.CXFA_TextProvider* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %134 [
    i32 0, label %8
    i32 1, label %57
    i32 2, label %82
  ]

8:                                                ; preds = %2
  %9 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %10 = load %class.CXFA_Node*, %class.CXFA_Node** %9, align 8
  %11 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %10, i64 0, i16 signext 256, i1 zeroext false) #6
  %12 = icmp eq %class.CXFA_Node* %11, null
  br i1 %12, label %205, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %11, i64 0, i32 1, i32 1, i32 2
  %15 = bitcast %"class.cppgc::internal::BasicMember"* %14 to %class.CXFA_Node**
  %16 = load %class.CXFA_Node*, %class.CXFA_Node** %15, align 8
  %17 = icmp eq %class.CXFA_Node* %16, null
  br i1 %17, label %205, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %16, i64 0, i32 0, i32 2
  %20 = load i16, i16* %19, align 4
  %21 = icmp eq i16 %20, 191
  br i1 %21, label %22, label %205

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false)
  %24 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %16, i64 0, i32 0, i32 6
  %25 = bitcast %"class.cppgc::internal::BasicMember.2"* %24 to %class.CJX_Object**
  %26 = load %class.CJX_Object*, %class.CJX_Object** %25, align 8
  call void @_ZNK10CJX_Object12TryAttributeE13XFA_Attributeb(%"class.pdfium::Optional"* nonnull sret %3, %class.CJX_Object* %26, i16 signext 85, i1 zeroext false) #6
  %27 = load i8, i8* %23, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %56, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %30, align 8, !noalias !3
  %32 = icmp eq %"class.fxcrt::StringDataTemplate"* %31, null
  %33 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %31, i64 0, i32 3
  %34 = select i1 %32, [1 x i32]* @.str.4, [1 x i32]* %33
  br i1 %32, label %54, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %31, i64 0, i32 1
  %37 = load i64, i64* %36, align 8, !noalias !3
  %38 = icmp eq i64 %37, 9
  br i1 %38, label %46, label %54

39:                                               ; preds = %46
  %40 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 1
  %41 = load i32, i32* %40, align 4
  %42 = add i32 %41, -1
  %43 = icmp ule i32 %42, 126
  %44 = icmp eq i32 %41, 101
  %45 = and i1 %43, %44
  br i1 %45, label %263, label %53

46:                                               ; preds = %35
  %47 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = add i32 %48, -1
  %50 = icmp ule i32 %49, 126
  %51 = icmp eq i32 %48, 116
  %52 = and i1 %50, %51
  br i1 %52, label %39, label %53

53:                                               ; preds = %305, %298, %291, %284, %277, %270, %263, %39, %46, %312
  br i1 %28, label %56, label %54

54:                                               ; preds = %29, %35, %53
  %55 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %55) #6
  br label %56

56:                                               ; preds = %22, %53, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #6
  br label %205

57:                                               ; preds = %2
  %58 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %59 = load %class.CXFA_Node*, %class.CXFA_Node** %58, align 8
  %60 = tail call %class.CXFA_Node* @_ZN9CXFA_Node11GetBindDataEv(%class.CXFA_Node* %59) #6
  %61 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %60, i64 0, i32 9, i32 0
  %62 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %61, align 8
  %63 = getelementptr inbounds %class.CFX_XMLNode, %class.CFX_XMLNode* %62, i64 0, i32 0, i32 2
  %64 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %63, align 8
  %65 = icmp eq %class.CFX_XMLNode* %64, null
  br i1 %65, label %205, label %66

66:                                               ; preds = %57, %78
  %67 = phi %class.CFX_XMLNode* [ %80, %78 ], [ %64, %57 ]
  %68 = bitcast %class.CFX_XMLNode* %67 to i32 (%class.CFX_XMLNode*)***
  %69 = load i32 (%class.CFX_XMLNode*)**, i32 (%class.CFX_XMLNode*)*** %68, align 8
  %70 = getelementptr inbounds i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %69, i64 2
  %71 = load i32 (%class.CFX_XMLNode*)*, i32 (%class.CFX_XMLNode*)** %70, align 8
  %72 = tail call i32 %71(%class.CFX_XMLNode* nonnull %67) #6
  %73 = icmp eq i32 %72, 1
  br i1 %73, label %74, label %78

74:                                               ; preds = %66
  %75 = bitcast %class.CFX_XMLNode* %67 to %class.CFX_XMLElement*
  %76 = tail call zeroext i1 @_Z21XFA_RecognizeRichTextP14CFX_XMLElement(%class.CFX_XMLElement* nonnull %75) #6
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  store i8 1, i8* %1, align 1
  br label %205

78:                                               ; preds = %66, %74
  %79 = getelementptr inbounds %class.CFX_XMLNode, %class.CFX_XMLNode* %67, i64 0, i32 0, i32 4
  %80 = load %class.CFX_XMLNode*, %class.CFX_XMLNode** %79, align 8
  %81 = icmp eq %class.CFX_XMLNode* %80, null
  br i1 %81, label %205, label %66

82:                                               ; preds = %2
  %83 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %84 = load %class.CXFA_Node*, %class.CXFA_Node** %83, align 8
  %85 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %84, i64 0, i16 signext 188, i1 zeroext false) #6
  %86 = icmp eq %class.CXFA_Node* %85, null
  br i1 %86, label %205, label %87

87:                                               ; preds = %82
  %88 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* nonnull %85, i64 0, i16 signext 256, i1 zeroext false) #6
  %89 = icmp eq %class.CXFA_Node* %88, null
  br i1 %89, label %205, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %88, i64 0, i32 1, i32 1, i32 2
  %92 = bitcast %"class.cppgc::internal::BasicMember"* %91 to %class.CXFA_Node**
  %93 = load %class.CXFA_Node*, %class.CXFA_Node** %92, align 8
  %94 = icmp eq %class.CXFA_Node* %93, null
  br i1 %94, label %205, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %93, i64 0, i32 0, i32 2
  %97 = load i16, i16* %96, align 4
  %98 = icmp eq i16 %97, 191
  br i1 %98, label %99, label %205

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %100) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %100, i8 -86, i64 16, i1 false)
  %101 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %93, i64 0, i32 0, i32 6
  %102 = bitcast %"class.cppgc::internal::BasicMember.2"* %101 to %class.CJX_Object**
  %103 = load %class.CJX_Object*, %class.CJX_Object** %102, align 8
  call void @_ZNK10CJX_Object12TryAttributeE13XFA_Attributeb(%"class.pdfium::Optional"* nonnull sret %4, %class.CJX_Object* %103, i16 signext 85, i1 zeroext false) #6
  %104 = load i8, i8* %100, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %133, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %107, align 8, !noalias !6
  %109 = icmp eq %"class.fxcrt::StringDataTemplate"* %108, null
  %110 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 3
  %111 = select i1 %109, [1 x i32]* @.str.4, [1 x i32]* %110
  br i1 %109, label %131, label %112

112:                                              ; preds = %106
  %113 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %108, i64 0, i32 1
  %114 = load i64, i64* %113, align 8, !noalias !6
  %115 = icmp eq i64 %114, 9
  br i1 %115, label %123, label %131

116:                                              ; preds = %123
  %117 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 1
  %118 = load i32, i32* %117, align 4
  %119 = add i32 %118, -1
  %120 = icmp ule i32 %119, 126
  %121 = icmp eq i32 %118, 101
  %122 = and i1 %120, %121
  br i1 %122, label %313, label %130

123:                                              ; preds = %112
  %124 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 0
  %125 = load i32, i32* %124, align 4
  %126 = add i32 %125, -1
  %127 = icmp ule i32 %126, 126
  %128 = icmp eq i32 %125, 116
  %129 = and i1 %127, %128
  br i1 %129, label %116, label %130

130:                                              ; preds = %355, %348, %341, %334, %327, %320, %313, %116, %123, %362
  br i1 %105, label %133, label %131

131:                                              ; preds = %106, %112, %130
  %132 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* %132) #6
  br label %133

133:                                              ; preds = %99, %130, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %100) #6
  br label %205

134:                                              ; preds = %2
  %135 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %136 = load %class.CXFA_Node*, %class.CXFA_Node** %135, align 8
  %137 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %136, i64 0, i16 signext 303, i1 zeroext false) #6
  %138 = icmp eq %class.CXFA_Node* %137, null
  br i1 %138, label %205, label %139

139:                                              ; preds = %134
  %140 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %137, i64 0, i32 1, i32 1, i32 2
  %141 = bitcast %"class.cppgc::internal::BasicMember"* %140 to %class.CXFA_Node**
  %142 = load %class.CXFA_Node*, %class.CXFA_Node** %141, align 8
  %143 = icmp eq %class.CXFA_Node* %142, null
  br i1 %143, label %205, label %144

144:                                              ; preds = %139
  %145 = bitcast %"class.fxcrt::WideString"* %5 to i8*
  %146 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %147

147:                                              ; preds = %144, %200
  %148 = phi %class.CXFA_Node* [ %142, %144 ], [ %203, %200 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #6
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %146, align 8
  %149 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %148, i64 0, i32 0, i32 6
  %150 = bitcast %"class.cppgc::internal::BasicMember.2"* %149 to %class.CJX_Object**
  %151 = load %class.CJX_Object*, %class.CJX_Object** %150, align 8
  call void @_ZNK10CJX_Object8GetCDataE13XFA_Attribute(%"class.fxcrt::WideString"* nonnull sret %5, %class.CJX_Object* %151, i16 signext 12) #6
  %152 = load i32, i32* %6, align 8
  switch i32 %152, label %200 [
    i32 3, label %153
    i32 4, label %176
  ]

153:                                              ; preds = %147
  %154 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %146, align 8, !noalias !9
  %155 = icmp eq %"class.fxcrt::StringDataTemplate"* %154, null
  %156 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 3
  %157 = select i1 %155, [1 x i32]* @.str.4, [1 x i32]* %156
  br i1 %155, label %200, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %154, i64 0, i32 1
  %160 = load i64, i64* %159, align 8, !noalias !9
  %161 = icmp eq i64 %160, 8
  br i1 %161, label %169, label %200

162:                                              ; preds = %169
  %163 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 1
  %164 = load i32, i32* %163, align 4
  %165 = add i32 %164, -1
  %166 = icmp ule i32 %165, 126
  %167 = icmp eq i32 %164, 111
  %168 = and i1 %166, %167
  br i1 %168, label %221, label %200

169:                                              ; preds = %158
  %170 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 0
  %171 = load i32, i32* %170, align 4
  %172 = add i32 %171, -1
  %173 = icmp ule i32 %172, 126
  %174 = icmp eq i32 %171, 114
  %175 = and i1 %173, %174
  br i1 %175, label %162, label %200

176:                                              ; preds = %147
  %177 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %146, align 8, !noalias !12
  %178 = icmp eq %"class.fxcrt::StringDataTemplate"* %177, null
  %179 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 3
  %180 = select i1 %178, [1 x i32]* @.str.4, [1 x i32]* %179
  br i1 %178, label %200, label %181

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %177, i64 0, i32 1
  %183 = load i64, i64* %182, align 8, !noalias !12
  %184 = icmp eq i64 %183, 4
  br i1 %184, label %192, label %200

185:                                              ; preds = %192
  %186 = getelementptr inbounds [1 x i32], [1 x i32]* %180, i64 0, i64 1
  %187 = load i32, i32* %186, align 4
  %188 = add i32 %187, -1
  %189 = icmp ule i32 %188, 126
  %190 = icmp eq i32 %187, 111
  %191 = and i1 %189, %190
  br i1 %191, label %207, label %200

192:                                              ; preds = %181
  %193 = getelementptr inbounds [1 x i32], [1 x i32]* %180, i64 0, i64 0
  %194 = load i32, i32* %193, align 4
  %195 = add i32 %194, -1
  %196 = icmp ule i32 %195, 126
  %197 = icmp eq i32 %194, 100
  %198 = and i1 %196, %197
  br i1 %198, label %185, label %200

199:                                              ; preds = %256, %214
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #6
  br label %205

200:                                              ; preds = %256, %249, %242, %235, %228, %221, %162, %214, %207, %185, %192, %169, %176, %153, %147, %158, %181
  %201 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %148, i64 0, i32 1, i32 1, i32 4
  %202 = bitcast %"class.cppgc::internal::BasicMember"* %201 to %class.CXFA_Node**
  %203 = load %class.CXFA_Node*, %class.CXFA_Node** %202, align 8
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #6
  %204 = icmp eq %class.CXFA_Node* %203, null
  br i1 %204, label %205, label %147

205:                                              ; preds = %78, %200, %57, %139, %199, %134, %82, %95, %133, %90, %87, %77, %8, %13, %56, %18
  %206 = phi %class.CXFA_Node* [ null, %8 ], [ null, %13 ], [ %16, %56 ], [ %16, %18 ], [ %60, %77 ], [ null, %82 ], [ null, %87 ], [ null, %90 ], [ %93, %133 ], [ %93, %95 ], [ null, %134 ], [ %148, %199 ], [ null, %139 ], [ %60, %57 ], [ null, %200 ], [ %60, %78 ]
  ret %class.CXFA_Node* %206

207:                                              ; preds = %185
  %208 = getelementptr inbounds [1 x i32], [1 x i32]* %180, i64 0, i64 2
  %209 = load i32, i32* %208, align 4
  %210 = add i32 %209, -1
  %211 = icmp ule i32 %210, 126
  %212 = icmp eq i32 %209, 119
  %213 = and i1 %211, %212
  br i1 %213, label %214, label %200

214:                                              ; preds = %207
  %215 = getelementptr inbounds [1 x i32], [1 x i32]* %180, i64 0, i64 3
  %216 = load i32, i32* %215, align 4
  %217 = add i32 %216, -1
  %218 = icmp ule i32 %217, 126
  %219 = icmp eq i32 %216, 110
  %220 = and i1 %218, %219
  br i1 %220, label %199, label %200

221:                                              ; preds = %162
  %222 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 2
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, -1
  %225 = icmp ule i32 %224, 126
  %226 = icmp eq i32 %223, 108
  %227 = and i1 %225, %226
  br i1 %227, label %228, label %200

228:                                              ; preds = %221
  %229 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 3
  %230 = load i32, i32* %229, align 4
  %231 = add i32 %230, -1
  %232 = icmp ule i32 %231, 126
  %233 = icmp eq i32 %230, 108
  %234 = and i1 %232, %233
  br i1 %234, label %235, label %200

235:                                              ; preds = %228
  %236 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 4
  %237 = load i32, i32* %236, align 4
  %238 = add i32 %237, -1
  %239 = icmp ule i32 %238, 126
  %240 = icmp eq i32 %237, 111
  %241 = and i1 %239, %240
  br i1 %241, label %242, label %200

242:                                              ; preds = %235
  %243 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 5
  %244 = load i32, i32* %243, align 4
  %245 = add i32 %244, -1
  %246 = icmp ule i32 %245, 126
  %247 = icmp eq i32 %244, 118
  %248 = and i1 %246, %247
  br i1 %248, label %249, label %200

249:                                              ; preds = %242
  %250 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 6
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %251, -1
  %253 = icmp ule i32 %252, 126
  %254 = icmp eq i32 %251, 101
  %255 = and i1 %253, %254
  br i1 %255, label %256, label %200

256:                                              ; preds = %249
  %257 = getelementptr inbounds [1 x i32], [1 x i32]* %157, i64 0, i64 7
  %258 = load i32, i32* %257, align 4
  %259 = add i32 %258, -1
  %260 = icmp ule i32 %259, 126
  %261 = icmp eq i32 %258, 114
  %262 = and i1 %260, %261
  br i1 %262, label %199, label %200

263:                                              ; preds = %39
  %264 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 2
  %265 = load i32, i32* %264, align 4
  %266 = add i32 %265, -1
  %267 = icmp ule i32 %266, 126
  %268 = icmp eq i32 %265, 120
  %269 = and i1 %267, %268
  br i1 %269, label %270, label %53

270:                                              ; preds = %263
  %271 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 3
  %272 = load i32, i32* %271, align 4
  %273 = add i32 %272, -1
  %274 = icmp ule i32 %273, 126
  %275 = icmp eq i32 %272, 116
  %276 = and i1 %274, %275
  br i1 %276, label %277, label %53

277:                                              ; preds = %270
  %278 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 4
  %279 = load i32, i32* %278, align 4
  %280 = add i32 %279, -1
  %281 = icmp ule i32 %280, 126
  %282 = icmp eq i32 %279, 47
  %283 = and i1 %281, %282
  br i1 %283, label %284, label %53

284:                                              ; preds = %277
  %285 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 5
  %286 = load i32, i32* %285, align 4
  %287 = add i32 %286, -1
  %288 = icmp ule i32 %287, 126
  %289 = icmp eq i32 %286, 104
  %290 = and i1 %288, %289
  br i1 %290, label %291, label %53

291:                                              ; preds = %284
  %292 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 6
  %293 = load i32, i32* %292, align 4
  %294 = add i32 %293, -1
  %295 = icmp ule i32 %294, 126
  %296 = icmp eq i32 %293, 116
  %297 = and i1 %295, %296
  br i1 %297, label %298, label %53

298:                                              ; preds = %291
  %299 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 7
  %300 = load i32, i32* %299, align 4
  %301 = add i32 %300, -1
  %302 = icmp ule i32 %301, 126
  %303 = icmp eq i32 %300, 109
  %304 = and i1 %302, %303
  br i1 %304, label %305, label %53

305:                                              ; preds = %298
  %306 = getelementptr inbounds [1 x i32], [1 x i32]* %34, i64 0, i64 8
  %307 = load i32, i32* %306, align 4
  %308 = add i32 %307, -1
  %309 = icmp ule i32 %308, 126
  %310 = icmp eq i32 %307, 108
  %311 = and i1 %309, %310
  br i1 %311, label %312, label %53

312:                                              ; preds = %305
  store i8 1, i8* %1, align 1
  br label %53

313:                                              ; preds = %116
  %314 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 2
  %315 = load i32, i32* %314, align 4
  %316 = add i32 %315, -1
  %317 = icmp ule i32 %316, 126
  %318 = icmp eq i32 %315, 120
  %319 = and i1 %317, %318
  br i1 %319, label %320, label %130

320:                                              ; preds = %313
  %321 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 3
  %322 = load i32, i32* %321, align 4
  %323 = add i32 %322, -1
  %324 = icmp ule i32 %323, 126
  %325 = icmp eq i32 %322, 116
  %326 = and i1 %324, %325
  br i1 %326, label %327, label %130

327:                                              ; preds = %320
  %328 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 4
  %329 = load i32, i32* %328, align 4
  %330 = add i32 %329, -1
  %331 = icmp ule i32 %330, 126
  %332 = icmp eq i32 %329, 47
  %333 = and i1 %331, %332
  br i1 %333, label %334, label %130

334:                                              ; preds = %327
  %335 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 5
  %336 = load i32, i32* %335, align 4
  %337 = add i32 %336, -1
  %338 = icmp ule i32 %337, 126
  %339 = icmp eq i32 %336, 104
  %340 = and i1 %338, %339
  br i1 %340, label %341, label %130

341:                                              ; preds = %334
  %342 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 6
  %343 = load i32, i32* %342, align 4
  %344 = add i32 %343, -1
  %345 = icmp ule i32 %344, 126
  %346 = icmp eq i32 %343, 116
  %347 = and i1 %345, %346
  br i1 %347, label %348, label %130

348:                                              ; preds = %341
  %349 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 7
  %350 = load i32, i32* %349, align 4
  %351 = add i32 %350, -1
  %352 = icmp ule i32 %351, 126
  %353 = icmp eq i32 %350, 109
  %354 = and i1 %352, %353
  br i1 %354, label %355, label %130

355:                                              ; preds = %348
  %356 = getelementptr inbounds [1 x i32], [1 x i32]* %111, i64 0, i64 8
  %357 = load i32, i32* %356, align 4
  %358 = add i32 %357, -1
  %359 = icmp ule i32 %358, 126
  %360 = icmp eq i32 %357, 108
  %361 = and i1 %359, %360
  br i1 %361, label %362, label %130

362:                                              ; preds = %355
  store i8 1, i8* %1, align 1
  br label %130
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZNK10CJX_Object12TryAttributeE13XFA_Attributeb(%"class.pdfium::Optional"* sret, %class.CJX_Object*, i16 signext, i1 zeroext) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %class.CXFA_Node* @_ZN9CXFA_Node11GetBindDataEv(%class.CXFA_Node*) local_unnamed_addr #4

declare zeroext i1 @_Z21XFA_RecognizeRichTextP14CFX_XMLElement(%class.CFX_XMLElement*) local_unnamed_addr #4

declare void @_ZNK10CJX_Object8GetCDataE13XFA_Attribute(%"class.fxcrt::WideString"* sret, %class.CJX_Object*, i16 signext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Para* @_ZN17CXFA_TextProvider15GetParaIfExistsEv(%class.CXFA_TextProvider* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextProvider, %class.CXFA_TextProvider* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  br i1 %4, label %7, label %9

7:                                                ; preds = %1
  %8 = tail call %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node* %6) #6
  br label %13

9:                                                ; preds = %1
  %10 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %6, i64 0, i16 signext 188, i1 zeroext false) #6
  %11 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %10, i64 0, i16 signext 43, i1 zeroext false) #6
  %12 = bitcast %class.CXFA_Node* %11 to %class.CXFA_Para*
  br label %13

13:                                               ; preds = %9, %7
  %14 = phi %class.CXFA_Para* [ %8, %7 ], [ %12, %9 ]
  ret %class.CXFA_Para* %14
}

declare %class.CXFA_Para* @_ZNK9CXFA_Node15GetParaIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.CXFA_Font* @_ZN17CXFA_TextProvider15GetFontIfExistsEv(%class.CXFA_TextProvider* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.CXFA_TextProvider, %class.CXFA_TextProvider* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %6 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  br i1 %4, label %14, label %7

7:                                                ; preds = %1
  %8 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %6, i64 0, i16 signext 188, i1 zeroext false) #6
  %9 = tail call %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node* %8, i64 0, i16 signext 246, i1 zeroext false) #6
  %10 = bitcast %class.CXFA_Node* %9 to %class.CXFA_Font*
  %11 = icmp eq %class.CXFA_Node* %9, null
  br i1 %11, label %12, label %17

12:                                               ; preds = %7
  %13 = load %class.CXFA_Node*, %class.CXFA_Node** %5, align 8
  br label %14

14:                                               ; preds = %1, %12
  %15 = phi %class.CXFA_Node* [ %13, %12 ], [ %6, %1 ]
  %16 = tail call %class.CXFA_Font* @_ZNK9CXFA_Node15GetFontIfExistsEv(%class.CXFA_Node* %15) #6
  br label %17

17:                                               ; preds = %14, %7
  %18 = phi %class.CXFA_Font* [ %10, %7 ], [ %16, %14 ]
  ret %class.CXFA_Font* %18
}

declare %class.CXFA_Font* @_ZNK9CXFA_Node15GetFontIfExistsEv(%class.CXFA_Node*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK17CXFA_TextProvider25IsCheckButtonAndAutoWidthEv(%class.CXFA_TextProvider* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = bitcast %class.CXFA_TextProvider* %0 to %class.CXFA_Node**
  %3 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  %4 = tail call i32 @_ZN9CXFA_Node15GetFFWidgetTypeEv(%class.CXFA_Node* %3) #6
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = load %class.CXFA_Node*, %class.CXFA_Node** %2, align 8
  %8 = tail call i64 @_ZN9CXFA_Node8TryWidthEv(%class.CXFA_Node* %7) #6
  %9 = trunc i64 %8 to i8
  %10 = icmp eq i8 %9, 0
  br label %11

11:                                               ; preds = %1, %6
  %12 = phi i1 [ %10, %6 ], [ false, %1 ]
  ret i1 %12
}

declare i32 @_ZN9CXFA_Node15GetFFWidgetTypeEv(%class.CXFA_Node*) local_unnamed_addr #4

declare i64 @_ZN9CXFA_Node8TryWidthEv(%class.CXFA_Node*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK17CXFA_TextProvider14GetEmbeddedObjERKN5fxcrt10WideStringE(%"class.pdfium::Optional"* noalias sret, %class.CXFA_TextProvider* nocapture readonly, %"class.fxcrt::WideString"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.fxcrt::StringViewTemplate.135", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate.135", align 8
  %6 = alloca %"class.fxcrt::WideString", align 8
  %7 = getelementptr inbounds %class.CXFA_TextProvider, %class.CXFA_TextProvider* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %12, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false)
  br label %67

12:                                               ; preds = %3
  %13 = bitcast %class.CXFA_TextProvider* %1 to %class.CXFA_Node**
  %14 = load %class.CXFA_Node*, %class.CXFA_Node** %13, align 8
  %15 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %14, i64 0, i32 1, i32 1, i32 1
  %16 = bitcast %"class.cppgc::internal::BasicMember"* %15 to %class.CXFA_Node**
  %17 = load %class.CXFA_Node*, %class.CXFA_Node** %16, align 8
  %18 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %14, i64 0, i32 0, i32 5
  %19 = bitcast %"class.cppgc::internal::BasicMember.1"* %18 to %class.CXFA_Document**
  %20 = load %class.CXFA_Document*, %class.CXFA_Document** %19, align 8
  %21 = icmp eq %class.CXFA_Node* %17, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %23, align 8, !noalias !15
  %25 = icmp eq %"class.fxcrt::StringDataTemplate"* %24, null
  %26 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %24, i64 0, i32 3
  %27 = select i1 %25, [1 x i32]* @.str.4, [1 x i32]* %26
  %28 = getelementptr inbounds [1 x i32], [1 x i32]* %27, i64 0, i64 0
  br i1 %25, label %32, label %29

29:                                               ; preds = %22
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %24, i64 0, i32 1
  %31 = load i64, i64* %30, align 8, !noalias !15
  br label %32

32:                                               ; preds = %29, %22
  %33 = phi i64 [ %31, %29 ], [ 0, %22 ]
  %34 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.135", %"class.fxcrt::StringViewTemplate.135"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %28, i32** %34, align 8, !alias.scope !15
  %35 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.135", %"class.fxcrt::StringViewTemplate.135"* %4, i64 0, i32 0, i32 1
  store i64 %33, i64* %35, align 8, !alias.scope !15
  %36 = call %class.CXFA_Node* @_ZNK13CXFA_Document11GetNodeByIDEP9CXFA_NodeN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Document* %20, %class.CXFA_Node* nonnull %17, %"class.fxcrt::StringViewTemplate.135"* nonnull %4) #6
  %37 = icmp eq %class.CXFA_Node* %36, null
  br i1 %37, label %38, label %56

38:                                               ; preds = %12, %32
  %39 = call %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document* %20, i32 -852451340) #6
  %40 = call %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object* %39) #6
  %41 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %41, align 8, !noalias !18
  %43 = icmp eq %"class.fxcrt::StringDataTemplate"* %42, null
  %44 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 3
  %45 = select i1 %43, [1 x i32]* @.str.4, [1 x i32]* %44
  %46 = getelementptr inbounds [1 x i32], [1 x i32]* %45, i64 0, i64 0
  br i1 %43, label %50, label %47

47:                                               ; preds = %38
  %48 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %42, i64 0, i32 1
  %49 = load i64, i64* %48, align 8, !noalias !18
  br label %50

50:                                               ; preds = %47, %38
  %51 = phi i64 [ %49, %47 ], [ 0, %38 ]
  %52 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.135", %"class.fxcrt::StringViewTemplate.135"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %46, i32** %52, align 8, !alias.scope !18
  %53 = getelementptr inbounds %"class.fxcrt::StringViewTemplate.135", %"class.fxcrt::StringViewTemplate.135"* %5, i64 0, i32 0, i32 1
  store i64 %51, i64* %53, align 8, !alias.scope !18
  %54 = call %class.CXFA_Node* @_ZNK13CXFA_Document11GetNodeByIDEP9CXFA_NodeN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Document* %20, %class.CXFA_Node* %40, %"class.fxcrt::StringViewTemplate.135"* nonnull %5) #6
  %55 = icmp eq %class.CXFA_Node* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %32, %50
  %57 = phi %class.CXFA_Node* [ %54, %50 ], [ %36, %32 ]
  %58 = getelementptr inbounds %class.CXFA_Node, %class.CXFA_Node* %57, i64 0, i32 5
  %59 = load i8, i8* %58, align 2, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56, %50
  %62 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false)
  br label %67

63:                                               ; preds = %56
  %64 = bitcast %"class.fxcrt::WideString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #6
  call void @_ZN9CXFA_Node8GetValueE16XFA_ValuePicture(%"class.fxcrt::WideString"* nonnull sret %6, %class.CXFA_Node* nonnull %57, i8 zeroext 1) #6
  %65 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %65, align 8
  %66 = getelementptr inbounds %"class.pdfium::Optional", %"class.pdfium::Optional"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"* %66, %"class.fxcrt::WideString"* nonnull dereferenceable(8) %6) #6
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #6
  br label %67

67:                                               ; preds = %61, %63, %10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare %class.CXFA_Node* @_ZNK13CXFA_Document11GetNodeByIDEP9CXFA_NodeN5fxcrt18StringViewTemplateIwEE(%class.CXFA_Document*, %class.CXFA_Node*, %"class.fxcrt::StringViewTemplate.135"*) local_unnamed_addr #4

declare %class.CXFA_Node* @_Z6ToNodeP11CXFA_Object(%class.CXFA_Object*) local_unnamed_addr #4

declare %class.CXFA_Object* @_ZN13CXFA_Document12GetXFAObjectE12XFA_HashCode(%class.CXFA_Document*, i32) local_unnamed_addr #4

declare void @_ZN9CXFA_Node8GetValueE16XFA_ValuePicture(%"class.fxcrt::WideString"* sret, %class.CXFA_Node*, i8 zeroext) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringC1EOS0_(%"class.fxcrt::WideString"*, %"class.fxcrt::WideString"* dereferenceable(8)) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5cppgc8internal14TraceTraitBaseI9CXFA_NodeE5TraceEPNS_7VisitorEPKv(%"class.cppgc::Visitor"*, i8*) #2 comdat align 2 {
  %3 = bitcast i8* %1 to %class.CXFA_Node*
  %4 = bitcast i8* %1 to void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)***
  %5 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)**, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %5, i64 2
  %7 = load void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)*, void (%class.CXFA_Node*, %"class.cppgc::Visitor"*)** %6, align 8
  tail call void %7(%class.CXFA_Node* %3, %"class.cppgc::Visitor"* %0) #6
  ret void
}

declare %class.CXFA_Node* @_ZNK9CXFA_Node16GetChildInternalEm11XFA_Elementb(%class.CXFA_Node*, i64, i16 signext, i1 zeroext) local_unnamed_addr #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!11 = distinct !{!11, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!14 = distinct !{!14, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!17 = distinct !{!17, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK5fxcrt10WideString12AsStringViewEv: argument 0"}
!20 = distinct !{!20, !"_ZNK5fxcrt10WideString12AsStringViewEv"}
