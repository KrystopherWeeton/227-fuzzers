; ModuleID = '../../third_party/libxslt/src/libxslt/namespaces.c'
source_filename = "../../third_party/libxslt/src/libxslt/namespaces.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._xsltStylesheet = type { %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltStylesheet*, %struct._xsltDocument*, %struct._xmlDoc*, %struct._xmlHashTable*, i32, %struct._xmlHashTable*, %struct._xsltStackElem*, %struct._xsltTemplate*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xsltDecimalFormat*, i32, i8*, i8*, i32, i8*, %struct._xsltElemPreComp*, i32, i32, i8*, i8**, i32, i32, i8*, %struct._xmlHashTable*, i32, %struct._xsltDocument*, %struct._xmlDict*, i8*, i8*, i32, i32, i32, %struct._xsltStylesheet*, i32, %struct._xmlHashTable*, %struct._xmlXPathContext* }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xsltStackElem = type { %struct._xsltStackElem*, %struct._xsltStylePreComp*, i32, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlXPathObject*, %struct._xmlDoc*, i32, %struct._xsltTransformContext*, i32 }
%struct._xsltStylePreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, i8*, i32, i32, i8*, i32, i32, i8*, i32, i8*, i8*, i32, i8*, i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, %struct._xsltTemplate*, i8*, i32, i8*, i32, %struct._xsltNumberData, %struct._xmlXPathCompExpr*, %struct._xmlNs**, i32 }
%struct._xsltNumberData = type { i8*, i8*, i8*, i8*, i8*, i32, i32, i32, i32, %struct._xmlDoc*, %struct._xmlNode*, %struct._xsltCompMatch*, %struct._xsltCompMatch* }
%struct._xsltCompMatch = type opaque
%struct._xmlXPathCompExpr = type opaque
%struct._xmlXPathObject = type { i32, %struct._xmlNodeSet*, i32, double, i8*, i8*, i32, i8*, i32 }
%struct._xmlNodeSet = type { i32, i32, %struct._xmlNode** }
%struct._xsltTransformContext = type { %struct._xsltStylesheet*, i32, %struct._xsltTemplate*, i32, i32, %struct._xsltTemplate**, %struct._xsltStackElem*, i32, i32, %struct._xsltStackElem**, i32, %struct._xmlHashTable*, %struct._xmlHashTable*, %struct._xmlHashTable*, i8*, i8*, %struct._xsltDocument*, %struct._xsltDocument*, %struct._xmlNode*, %struct._xmlNodeSet*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlXPathContext*, i32, %struct._xmlHashTable*, %struct._xmlNode*, i32, i8*, i32, i64, i32, i32, i64*, i8*, i32, i32, %struct._xsltRuntimeExtra*, %struct._xsltDocument*, i8*, void (i8*, i8*, ...)*, i8*, void (%struct._xsltTransformContext*, %struct._xmlNode**, i32)*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i8*, i32, i32, i32, i64*, i32, %struct._xmlDict*, %struct._xmlDoc*, i32, i32, i32, %struct._xsltTemplate*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xsltTransformCache*, i8*, %struct._xmlDoc*, %struct._xmlDoc*, i32, i32, i32, i32, i64, i64 }
%struct._xsltRuntimeExtra = type { i8*, void (i8*)*, %union.anon }
%union.anon = type { i8* }
%struct._xsltTransformCache = type { %struct._xmlDoc*, i32, %struct._xsltStackElem*, i32 }
%struct._xsltTemplate = type { %struct._xsltTemplate*, %struct._xsltStylesheet*, i8*, float, i8*, i8*, i8*, i8*, %struct._xmlNode*, %struct._xmlNode*, i32, %struct._xmlNs**, i32, i64, i8*, i32, i32, %struct._xsltTemplate**, i32* }
%struct._xsltDecimalFormat = type { %struct._xsltDecimalFormat*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xsltElemPreComp = type { %struct._xsltElemPreComp*, i32, void (%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNode*, %struct._xsltElemPreComp*)*, %struct._xmlNode*, void (%struct._xsltElemPreComp*)* }
%struct._xsltDocument = type { %struct._xsltDocument*, i32, %struct._xmlDoc*, i8*, %struct._xsltDocument*, i32, i32 }
%struct._xmlDict = type opaque
%struct._xmlHashTable = type opaque
%struct._xmlXPathContext = type { %struct._xmlDoc*, %struct._xmlNode*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathType*, i32, i32, %struct._xmlHashTable*, i32, i32, %struct._xmlXPathAxis*, %struct._xmlNs**, i32, i8*, i32, i32, i32, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlHashTable*, %struct._xmlXPathObject* (i8*, i8*, i8*)*, i8*, i8*, i8*, i8*, void (%struct._xmlXPathParserContext*, i32)* (i8*, i8*, i8*)*, i8*, %struct._xmlNs**, i32, i8*, void (i8*, %struct._xmlError*)*, %struct._xmlError, %struct._xmlNode*, %struct._xmlDict*, i32, i8*, i64, i64, i32 }
%struct._xmlXPathType = type { i8*, i32 (%struct._xmlXPathObject*, i32)* }
%struct._xmlXPathAxis = type { i8*, %struct._xmlXPathObject* (%struct._xmlXPathParserContext*, %struct._xmlXPathObject*)* }
%struct._xmlXPathParserContext = type { i8*, i8*, i32, %struct._xmlXPathContext*, %struct._xmlXPathObject*, i32, i32, %struct._xmlXPathObject**, %struct._xmlXPathCompExpr*, i32, %struct._xmlNode*, i32 }
%struct._xmlError = type { i32, i32, i8*, i32, i8*, i32, i8*, i8*, i8*, i32, i32, i8*, i8* }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }

@.str = private unnamed_addr constant [18 x i8] c"stylesheet-prefix\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"namespace-alias: stylesheet-prefix attribute missing\0A\00", align 1
@.str.2 = private unnamed_addr constant [14 x i8] c"result-prefix\00", align 1
@.str.3 = private unnamed_addr constant [50 x i8] c"namespace-alias: result-prefix attribute missing\0A\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"#default\00", align 1
@.str.5 = private unnamed_addr constant [55 x i8] c"namespace-alias: prefix %s not bound to any namespace\0A\00", align 1
@.str.6 = private unnamed_addr constant [43 x i8] c"namespace-alias: cannot create hash table\0A\00", align 1
@xmlFree = external local_unnamed_addr global void (i8*)*, align 8
@.str.7 = private unnamed_addr constant [153 x i8] c"Namespace normalization error: Cannot undeclare the default namespace, since the default namespace '%s' is already declared on the result element '%s'.\0A\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"ns\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c"%s_%d\00", align 1
@.str.11 = private unnamed_addr constant [111 x i8] c"Internal error in xsltAcquireResultInScopeNs(): Failed to compute a unique ns-prefix for the generated element\00", align 1
@.str.12 = private unnamed_addr constant [37 x i8] c"http://www.w3.org/1999/XSL/Transform\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltNamespaceAlias(%struct._xsltStylesheet*, %struct._xmlNode*) local_unnamed_addr #0 {
  %3 = icmp eq %struct._xsltStylesheet* %0, null
  %4 = icmp eq %struct._xmlNode* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %79, label %6

6:                                                ; preds = %2
  %7 = tail call i8* @xmlGetNsProp(%struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str, i64 0, i64 0), i8* null) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %6
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0)) #4
  br label %79

10:                                               ; preds = %6
  %11 = tail call i8* @xmlGetNsProp(%struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.2, i64 0, i64 0), i8* null) #4
  %12 = icmp eq i8* %11, null
  br i1 %12, label %74, label %13

13:                                               ; preds = %10
  %14 = tail call i32 @xmlStrEqual(i8* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %1, i64 0, i32 8
  %17 = load %struct._xmlDoc*, %struct._xmlDoc** %16, align 8
  br i1 %15, label %24, label %18

18:                                               ; preds = %13
  %19 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %17, %struct._xmlNode* nonnull %1, i8* null) #4
  %20 = icmp eq %struct._xmlNs* %19, null
  br i1 %20, label %32, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %19, i64 0, i32 2
  %23 = load i8*, i8** %22, align 8
  br label %32

24:                                               ; preds = %13
  %25 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %17, %struct._xmlNode* nonnull %1, i8* nonnull %7) #4
  %26 = icmp eq %struct._xmlNs* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %25, i64 0, i32 2
  %29 = load i8*, i8** %28, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %31, label %32

31:                                               ; preds = %27, %24
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %7) #4
  br label %76

32:                                               ; preds = %27, %18, %21
  %33 = phi i8* [ %23, %21 ], [ null, %18 ], [ %29, %27 ]
  %34 = tail call i32 @xmlStrEqual(i8* nonnull %11, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0)) #4
  %35 = icmp eq i32 %34, 0
  %36 = load %struct._xmlDoc*, %struct._xmlDoc** %16, align 8
  br i1 %35, label %43, label %37

37:                                               ; preds = %32
  %38 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %36, %struct._xmlNode* nonnull %1, i8* null) #4
  %39 = icmp eq %struct._xmlNs* %38, null
  br i1 %39, label %51, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %38, i64 0, i32 2
  %42 = load i8*, i8** %41, align 8
  br label %51

43:                                               ; preds = %32
  %44 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %36, %struct._xmlNode* nonnull %1, i8* nonnull %11) #4
  %45 = icmp eq %struct._xmlNs* %44, null
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %44, i64 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %50, label %51

50:                                               ; preds = %46, %43
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %11) #4
  br label %76

51:                                               ; preds = %46, %37, %40
  %52 = phi %struct._xmlNs* [ %38, %40 ], [ null, %37 ], [ %44, %46 ]
  %53 = phi i8* [ %42, %40 ], [ inttoptr (i64 -1 to i8*), %37 ], [ %48, %46 ]
  %54 = icmp eq i8* %33, null
  br i1 %54, label %55, label %63

55:                                               ; preds = %51
  %56 = icmp eq %struct._xmlNs* %52, null
  br i1 %56, label %76, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %52, i64 0, i32 2
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 48
  %62 = bitcast i8** %61 to i64*
  store i64 %60, i64* %62, align 8
  br label %76

63:                                               ; preds = %51
  %64 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 19
  %65 = load %struct._xmlHashTable*, %struct._xmlHashTable** %64, align 8
  %66 = icmp eq %struct._xmlHashTable* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = tail call %struct._xmlHashTable* @xmlHashCreate(i32 10) #4
  store %struct._xmlHashTable* %68, %struct._xmlHashTable** %64, align 8
  %69 = icmp eq %struct._xmlHashTable* %68, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.6, i64 0, i64 0)) #4
  br label %76

71:                                               ; preds = %63, %67
  %72 = phi %struct._xmlHashTable* [ %68, %67 ], [ %65, %63 ]
  %73 = tail call i32 @xmlHashAddEntry(%struct._xmlHashTable* nonnull %72, i8* nonnull %33, i8* %53) #4
  br label %76

74:                                               ; preds = %10
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* null, %struct._xsltStylesheet* nonnull %0, %struct._xmlNode* nonnull %1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.3, i64 0, i64 0)) #4
  %75 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %75(i8* nonnull %7) #4
  br label %79

76:                                               ; preds = %31, %50, %70, %57, %71, %55
  %77 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %77(i8* nonnull %7) #4
  %78 = load void (i8*)*, void (i8*)** @xmlFree, align 8
  tail call void %78(i8* nonnull %11) #4
  br label %79

79:                                               ; preds = %74, %76, %2, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i8* @xmlGetNsProp(%struct._xmlNode*, i8*, i8*) local_unnamed_addr #2

declare void @xsltTransformError(%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) local_unnamed_addr #2

declare i32 @xmlStrEqual(i8*, i8*) local_unnamed_addr #2

declare %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc*, %struct._xmlNode*, i8*) local_unnamed_addr #2

declare %struct._xmlHashTable* @xmlHashCreate(i32) local_unnamed_addr #2

declare i32 @xmlHashAddEntry(%struct._xmlHashTable*, i8*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlNs* @xsltGetSpecialNamespace(%struct._xsltTransformContext*, %struct._xmlNode*, i8*, i8*, %struct._xmlNode*) local_unnamed_addr #0 {
  %6 = alloca [30 x i8], align 16
  %7 = icmp eq %struct._xsltTransformContext* %0, null
  %8 = icmp eq %struct._xmlNode* %4, null
  %9 = or i1 %7, %8
  br i1 %9, label %210, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %210

14:                                               ; preds = %10
  %15 = icmp eq i8* %3, null
  br i1 %15, label %16, label %70

16:                                               ; preds = %14
  %17 = icmp eq i8* %2, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %16
  %19 = load i8, i8* %2, align 1
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %89

21:                                               ; preds = %18, %16
  %22 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 12
  %23 = load %struct._xmlNs*, %struct._xmlNs** %22, align 8
  %24 = icmp eq %struct._xmlNs* %23, null
  br i1 %24, label %44, label %25

25:                                               ; preds = %21, %40
  %26 = phi %struct._xmlNs* [ %42, %40 ], [ %23, %21 ]
  %27 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %26, i64 0, i32 3
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %40

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %26, i64 0, i32 2
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %210, label %34

34:                                               ; preds = %30
  %35 = load i8, i8* %32, align 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %210, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 2
  %39 = load i8*, i8** %38, align 8
  tail call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* %0, %struct._xsltStylesheet* null, %struct._xmlNode* %1, i8* getelementptr inbounds ([153 x i8], [153 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %32, i8* %39) #4
  br label %210

40:                                               ; preds = %25
  %41 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %26, i64 0, i32 0
  %42 = load %struct._xmlNs*, %struct._xmlNs** %41, align 8
  %43 = icmp eq %struct._xmlNs* %42, null
  br i1 %43, label %44, label %25

44:                                               ; preds = %40, %21
  %45 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 5
  %46 = load %struct._xmlNode*, %struct._xmlNode** %45, align 8
  %47 = icmp eq %struct._xmlNode* %46, null
  br i1 %47, label %210, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %46, i64 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %210

52:                                               ; preds = %48
  %53 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %46, i64 0, i32 9
  %54 = load %struct._xmlNs*, %struct._xmlNs** %53, align 8
  %55 = icmp eq %struct._xmlNs* %54, null
  br i1 %55, label %210, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 8
  %58 = load %struct._xmlDoc*, %struct._xmlDoc** %57, align 8
  %59 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %58, %struct._xmlNode* nonnull %46, i8* null) #4
  %60 = icmp eq %struct._xmlNs* %59, null
  br i1 %60, label %210, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %59, i64 0, i32 2
  %63 = load i8*, i8** %62, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %210, label %65

65:                                               ; preds = %61
  %66 = load i8, i8* %63, align 1
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %210, label %68

68:                                               ; preds = %65
  %69 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8* null) #4
  br label %210

70:                                               ; preds = %14
  %71 = load i8, i8* %3, align 1
  %72 = icmp eq i8 %71, 120
  br i1 %72, label %73, label %89

73:                                               ; preds = %70
  %74 = getelementptr inbounds i8, i8* %3, i64 1
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 109
  br i1 %76, label %77, label %89

77:                                               ; preds = %73
  %78 = getelementptr inbounds i8, i8* %3, i64 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 108
  br i1 %80, label %81, label %89

81:                                               ; preds = %77
  %82 = getelementptr inbounds i8, i8* %3, i64 3
  %83 = load i8, i8* %82, align 1
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %89

85:                                               ; preds = %81
  %86 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 8
  %87 = load %struct._xmlDoc*, %struct._xmlDoc** %86, align 8
  %88 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %87, %struct._xmlNode* nonnull %4, i8* nonnull %3) #4
  br label %210

89:                                               ; preds = %18, %81, %77, %73, %70
  %90 = phi i1 [ true, %81 ], [ true, %77 ], [ true, %73 ], [ true, %70 ], [ false, %18 ]
  %91 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 12
  %92 = load %struct._xmlNs*, %struct._xmlNs** %91, align 8
  %93 = icmp eq %struct._xmlNs* %92, null
  br i1 %93, label %124, label %94

94:                                               ; preds = %89, %115
  %95 = phi %struct._xmlNs* [ %117, %115 ], [ %92, %89 ]
  %96 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %95, i64 0, i32 3
  %97 = load i8*, i8** %96, align 8
  %98 = icmp ne i8* %97, null
  %99 = xor i1 %15, %98
  br i1 %99, label %100, label %115

100:                                              ; preds = %94
  %101 = icmp eq i8* %97, %3
  br i1 %101, label %102, label %107

102:                                              ; preds = %100
  %103 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %95, i64 0, i32 2
  %104 = load i8*, i8** %103, align 8
  %105 = tail call i32 @xmlStrEqual(i8* %104, i8* %2) #4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %119, label %210

107:                                              ; preds = %100
  %108 = tail call i32 @xmlStrEqual(i8* %97, i8* %3) #4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %115, label %110

110:                                              ; preds = %107
  %111 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %95, i64 0, i32 2
  %112 = load i8*, i8** %111, align 8
  %113 = tail call i32 @xmlStrEqual(i8* %112, i8* %2) #4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %119, label %210

115:                                              ; preds = %107, %94
  %116 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %95, i64 0, i32 0
  %117 = load %struct._xmlNs*, %struct._xmlNs** %116, align 8
  %118 = icmp eq %struct._xmlNs* %117, null
  br i1 %118, label %124, label %94

119:                                              ; preds = %102, %110
  %120 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 8
  %121 = load %struct._xmlDoc*, %struct._xmlDoc** %120, align 8
  %122 = tail call %struct._xmlNs* @xmlSearchNsByHref(%struct._xmlDoc* %121, %struct._xmlNode* %4, i8* %2) #4
  %123 = icmp eq %struct._xmlNs* %122, null
  br i1 %123, label %192, label %210

124:                                              ; preds = %115, %89
  %125 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 5
  %126 = load %struct._xmlNode*, %struct._xmlNode** %125, align 8
  %127 = icmp eq %struct._xmlNode* %126, null
  br i1 %127, label %190, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %126, i64 0, i32 1
  %130 = load i32, i32* %129, align 8
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %190

132:                                              ; preds = %128
  %133 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %126, i64 0, i32 9
  %134 = load %struct._xmlNs*, %struct._xmlNs** %133, align 8
  %135 = icmp eq %struct._xmlNs* %134, null
  br i1 %135, label %155, label %136

136:                                              ; preds = %132
  %137 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %134, i64 0, i32 3
  %138 = load i8*, i8** %137, align 8
  %139 = icmp eq i8* %138, null
  %140 = xor i1 %90, %139
  br i1 %140, label %141, label %155

141:                                              ; preds = %136
  br i1 %15, label %142, label %147

142:                                              ; preds = %141
  %143 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %134, i64 0, i32 2
  %144 = load i8*, i8** %143, align 8
  %145 = tail call i32 @xmlStrEqual(i8* %144, i8* %2) #4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %155, label %210

147:                                              ; preds = %141
  %148 = tail call i32 @xmlStrEqual(i8* %138, i8* nonnull %3) #4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %155, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %134, i64 0, i32 2
  %152 = load i8*, i8** %151, align 8
  %153 = tail call i32 @xmlStrEqual(i8* %152, i8* %2) #4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %210

155:                                              ; preds = %142, %150, %147, %132, %136
  %156 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 8
  %157 = load %struct._xmlDoc*, %struct._xmlDoc** %156, align 8
  %158 = load %struct._xmlNode*, %struct._xmlNode** %125, align 8
  %159 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %157, %struct._xmlNode* %158, i8* %3) #4
  %160 = icmp eq %struct._xmlNs* %159, null
  br i1 %160, label %188, label %161

161:                                              ; preds = %155
  %162 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %159, i64 0, i32 2
  %163 = load i8*, i8** %162, align 8
  %164 = tail call i32 @xmlStrEqual(i8* %163, i8* %2) #4
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %210

166:                                              ; preds = %161
  %167 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 11
  %168 = load %struct._xmlAttr*, %struct._xmlAttr** %167, align 8
  %169 = icmp eq %struct._xmlAttr* %168, null
  br i1 %169, label %188, label %170

170:                                              ; preds = %166, %184
  %171 = phi %struct._xmlAttr* [ %186, %184 ], [ %168, %166 ]
  %172 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %171, i64 0, i32 9
  %173 = load %struct._xmlNs*, %struct._xmlNs** %172, align 8
  %174 = icmp eq %struct._xmlNs* %173, null
  br i1 %174, label %184, label %175

175:                                              ; preds = %170
  %176 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %173, i64 0, i32 3
  %177 = load i8*, i8** %176, align 8
  %178 = tail call i32 @xmlStrEqual(i8* %177, i8* %3) #4
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %184, label %180

180:                                              ; preds = %175
  %181 = load %struct._xmlDoc*, %struct._xmlDoc** %156, align 8
  %182 = tail call %struct._xmlNs* @xmlSearchNsByHref(%struct._xmlDoc* %181, %struct._xmlNode* %4, i8* %2) #4
  %183 = icmp eq %struct._xmlNs* %182, null
  br i1 %183, label %192, label %210

184:                                              ; preds = %175, %170
  %185 = getelementptr inbounds %struct._xmlAttr, %struct._xmlAttr* %171, i64 0, i32 6
  %186 = load %struct._xmlAttr*, %struct._xmlAttr** %185, align 8
  %187 = icmp eq %struct._xmlAttr* %186, null
  br i1 %187, label %188, label %170

188:                                              ; preds = %184, %166, %155
  %189 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %4, i8* %2, i8* %3) #4
  br label %210

190:                                              ; preds = %124, %128
  %191 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %4, i8* %2, i8* %3) #4
  br label %210

192:                                              ; preds = %180, %119
  %193 = getelementptr inbounds [30 x i8], [30 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 30, i8* nonnull %193) #4
  %194 = select i1 %15, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i8* %3
  %195 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %4, i64 0, i32 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %193, i8 -86, i64 30, i1 false)
  br label %196

196:                                              ; preds = %203, %192
  %197 = phi i32 [ 1, %192 ], [ %204, %203 ]
  %198 = call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %193, i64 30, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.10, i64 0, i64 0), i8* %194, i32 %197) #4
  %199 = load %struct._xmlDoc*, %struct._xmlDoc** %195, align 8
  %200 = call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %199, %struct._xmlNode* %4, i8* nonnull %193) #4
  %201 = icmp eq i32 %197, 1000
  br i1 %201, label %202, label %203

202:                                              ; preds = %196
  call void (%struct._xsltTransformContext*, %struct._xsltStylesheet*, %struct._xmlNode*, i8*, ...) @xsltTransformError(%struct._xsltTransformContext* %0, %struct._xsltStylesheet* null, %struct._xmlNode* %1, i8* getelementptr inbounds ([111 x i8], [111 x i8]* @.str.11, i64 0, i64 0)) #4
  br label %208

203:                                              ; preds = %196
  %204 = add nuw nsw i32 %197, 1
  %205 = icmp eq %struct._xmlNs* %200, null
  br i1 %205, label %206, label %196

206:                                              ; preds = %203
  %207 = call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %4, i8* %2, i8* nonnull %193) #4
  br label %208

208:                                              ; preds = %206, %202
  %209 = phi %struct._xmlNs* [ null, %202 ], [ %207, %206 ]
  call void @llvm.lifetime.end.p0i8(i64 30, i8* nonnull %193) #4
  br label %210

210:                                              ; preds = %180, %161, %150, %142, %119, %110, %102, %48, %44, %56, %61, %65, %52, %30, %34, %5, %10, %208, %190, %188, %85, %68, %37
  %211 = phi %struct._xmlNs* [ null, %37 ], [ null, %68 ], [ %88, %85 ], [ %209, %208 ], [ %189, %188 ], [ %191, %190 ], [ null, %10 ], [ null, %5 ], [ null, %34 ], [ null, %30 ], [ null, %52 ], [ null, %65 ], [ null, %61 ], [ null, %56 ], [ null, %44 ], [ null, %48 ], [ %95, %102 ], [ %95, %110 ], [ %122, %119 ], [ %134, %142 ], [ %134, %150 ], [ %159, %161 ], [ %182, %180 ]
  ret %struct._xmlNs* %211
}

declare %struct._xmlNs* @xmlNewNs(%struct._xmlNode*, i8*, i8*) local_unnamed_addr #2

declare %struct._xmlNs* @xmlSearchNsByHref(%struct._xmlDoc*, %struct._xmlNode*, i8*) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlNs* @xsltGetNamespace(%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNs* readonly, %struct._xmlNode*) local_unnamed_addr #0 {
  %5 = icmp eq %struct._xmlNs* %2, null
  br i1 %5, label %41, label %6

6:                                                ; preds = %4
  %7 = icmp eq %struct._xsltTransformContext* %0, null
  %8 = icmp eq %struct._xmlNode* %1, null
  %9 = or i1 %7, %8
  %10 = icmp eq %struct._xmlNode* %3, null
  %11 = or i1 %9, %10
  br i1 %11, label %41, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 0
  %14 = load %struct._xsltStylesheet*, %struct._xsltStylesheet** %13, align 8
  %15 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 2
  %16 = icmp eq %struct._xsltStylesheet* %14, null
  br i1 %16, label %29, label %17

17:                                               ; preds = %12, %26
  %18 = phi %struct._xsltStylesheet* [ %27, %26 ], [ %14, %12 ]
  %19 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %18, i64 0, i32 19
  %20 = load %struct._xmlHashTable*, %struct._xmlHashTable** %19, align 8
  %21 = icmp eq %struct._xmlHashTable* %20, null
  br i1 %21, label %26, label %22

22:                                               ; preds = %17
  %23 = load i8*, i8** %15, align 8
  %24 = tail call i8* @xmlHashLookup(%struct._xmlHashTable* nonnull %20, i8* %23) #4
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %29

26:                                               ; preds = %17, %22
  %27 = tail call %struct._xsltStylesheet* @xsltNextImport(%struct._xsltStylesheet* nonnull %18) #4
  %28 = icmp eq %struct._xsltStylesheet* %27, null
  br i1 %28, label %29, label %17

29:                                               ; preds = %26, %22, %12
  %30 = phi i8* [ null, %12 ], [ %24, %22 ], [ null, %26 ]
  %31 = ptrtoint i8* %30 to i64
  switch i64 %31, label %36 [
    i64 -1, label %32
    i64 0, label %34
  ]

32:                                               ; preds = %29
  %33 = tail call %struct._xmlNs* @xsltGetSpecialNamespace(%struct._xsltTransformContext* %0, %struct._xmlNode* %1, i8* null, i8* null, %struct._xmlNode* %3)
  br label %41

34:                                               ; preds = %29
  %35 = load i8*, i8** %15, align 8
  br label %36

36:                                               ; preds = %29, %34
  %37 = phi i8* [ %35, %34 ], [ %30, %29 ]
  %38 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = tail call %struct._xmlNs* @xsltGetSpecialNamespace(%struct._xsltTransformContext* %0, %struct._xmlNode* %1, i8* %37, i8* %39, %struct._xmlNode* %3)
  br label %41

41:                                               ; preds = %32, %36, %6, %4
  %42 = phi %struct._xmlNs* [ null, %4 ], [ %33, %32 ], [ %40, %36 ], [ null, %6 ]
  ret %struct._xmlNs* %42
}

declare i8* @xmlHashLookup(%struct._xmlHashTable*, i8*) local_unnamed_addr #2

declare %struct._xsltStylesheet* @xsltNextImport(%struct._xsltStylesheet*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlNs* @xsltGetPlainNamespace(%struct._xsltTransformContext*, %struct._xmlNode*, %struct._xmlNs* readonly, %struct._xmlNode*) local_unnamed_addr #0 {
  %5 = tail call %struct._xmlNs* @xsltGetNamespace(%struct._xsltTransformContext* %0, %struct._xmlNode* %1, %struct._xmlNs* %2, %struct._xmlNode* %3)
  ret %struct._xmlNs* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlNs* @xsltCopyNamespaceList(%struct._xsltTransformContext* nocapture readonly, %struct._xmlNode*, %struct._xmlNs* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct._xmlNs* %2, null
  br i1 %4, label %99, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 18
  br i1 %8, label %9, label %99

9:                                                ; preds = %5
  %10 = icmp eq %struct._xmlNode* %1, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  %15 = select i1 %14, %struct._xmlNode* %1, %struct._xmlNode* null
  br label %16

16:                                               ; preds = %9, %11
  %17 = phi %struct._xmlNode* [ null, %9 ], [ %15, %11 ]
  %18 = icmp eq %struct._xmlNode* %17, null
  %19 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %17, i64 0, i32 9
  %20 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %17, i64 0, i32 8
  %21 = getelementptr inbounds %struct._xsltTransformContext, %struct._xsltTransformContext* %0, i64 0, i32 0
  br label %22

22:                                               ; preds = %16, %93
  %23 = phi %struct._xmlNs* [ null, %16 ], [ %95, %93 ]
  %24 = phi %struct._xmlNs* [ null, %16 ], [ %94, %93 ]
  %25 = phi %struct._xmlNs* [ %2, %16 ], [ %97, %93 ]
  br label %26

26:                                               ; preds = %22, %50
  %27 = phi %struct._xmlNs* [ %25, %22 ], [ %52, %50 ]
  %28 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 18
  br i1 %30, label %31, label %99

31:                                               ; preds = %26
  br i1 %18, label %67, label %32

32:                                               ; preds = %31
  %33 = load %struct._xmlNs*, %struct._xmlNs** %19, align 8
  %34 = icmp eq %struct._xmlNs* %33, null
  br i1 %34, label %54, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %33, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 3
  %39 = load i8*, i8** %38, align 8
  %40 = tail call i32 @xmlStrEqual(i8* %37, i8* %39) #4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %54, label %42

42:                                               ; preds = %35
  %43 = load %struct._xmlNs*, %struct._xmlNs** %19, align 8
  %44 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %43, i64 0, i32 2
  %45 = load i8*, i8** %44, align 8
  %46 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = tail call i32 @xmlStrEqual(i8* %45, i8* %47) #4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %54, label %50

50:                                               ; preds = %72, %60, %42
  %51 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 0
  %52 = load %struct._xmlNs*, %struct._xmlNs** %51, align 8
  %53 = icmp eq %struct._xmlNs* %52, null
  br i1 %53, label %99, label %26

54:                                               ; preds = %42, %35, %32
  %55 = load %struct._xmlDoc*, %struct._xmlDoc** %20, align 8
  %56 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 3
  %57 = load i8*, i8** %56, align 8
  %58 = tail call %struct._xmlNs* @xmlSearchNs(%struct._xmlDoc* %55, %struct._xmlNode* nonnull %17, i8* %57) #4
  %59 = icmp eq %struct._xmlNs* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %58, i64 0, i32 2
  %62 = load i8*, i8** %61, align 8
  %63 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 2
  %64 = load i8*, i8** %63, align 8
  %65 = tail call i32 @xmlStrEqual(i8* %62, i8* %64) #4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %50

67:                                               ; preds = %60, %54, %31
  %68 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 2
  %69 = load i8*, i8** %68, align 8
  %70 = tail call i32 @xmlStrEqual(i8* %69, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0)) #4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %93

72:                                               ; preds = %67
  %73 = load %struct._xsltStylesheet*, %struct._xsltStylesheet** %21, align 8
  %74 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %73, i64 0, i32 19
  %75 = load %struct._xmlHashTable*, %struct._xmlHashTable** %74, align 8
  %76 = load i8*, i8** %68, align 8
  %77 = tail call i8* @xmlHashLookup(%struct._xmlHashTable* %75, i8* %76) #4
  %78 = ptrtoint i8* %77 to i64
  switch i64 %78, label %79 [
    i64 -1, label %50
    i64 0, label %83
  ]

79:                                               ; preds = %72
  %80 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 3
  %81 = load i8*, i8** %80, align 8
  %82 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %17, i8* nonnull %77, i8* %81) #4
  br label %88

83:                                               ; preds = %72
  %84 = load i8*, i8** %68, align 8
  %85 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 3
  %86 = load i8*, i8** %85, align 8
  %87 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %17, i8* %84, i8* %86) #4
  br label %88

88:                                               ; preds = %83, %79
  %89 = phi %struct._xmlNs* [ %82, %79 ], [ %87, %83 ]
  %90 = icmp eq %struct._xmlNs* %23, null
  br i1 %90, label %93, label %91

91:                                               ; preds = %88
  %92 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %23, i64 0, i32 0
  store %struct._xmlNs* %89, %struct._xmlNs** %92, align 8
  br label %93

93:                                               ; preds = %67, %91, %88
  %94 = phi %struct._xmlNs* [ %89, %88 ], [ %24, %91 ], [ %24, %67 ]
  %95 = phi %struct._xmlNs* [ %89, %88 ], [ %89, %91 ], [ %23, %67 ]
  %96 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %27, i64 0, i32 0
  %97 = load %struct._xmlNs*, %struct._xmlNs** %96, align 8
  %98 = icmp eq %struct._xmlNs* %97, null
  br i1 %98, label %99, label %22

99:                                               ; preds = %93, %26, %50, %5, %3
  %100 = phi %struct._xmlNs* [ null, %3 ], [ null, %5 ], [ %24, %50 ], [ %24, %26 ], [ %94, %93 ]
  ret %struct._xmlNs* %100
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._xmlNs* @xsltCopyNamespace(%struct._xsltTransformContext* nocapture readnone, %struct._xmlNode*, %struct._xmlNs* readonly) local_unnamed_addr #0 {
  %4 = icmp eq %struct._xmlNs* %2, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 18
  br i1 %8, label %9, label %27

9:                                                ; preds = %5
  %10 = icmp eq %struct._xmlNode* %1, null
  br i1 %10, label %21, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %struct._xmlNode, %struct._xmlNode* %1, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %21, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 2
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* null, i8* %17, i8* %19) #4
  br label %27

21:                                               ; preds = %11, %9
  %22 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 2
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds %struct._xmlNs, %struct._xmlNs* %2, i64 0, i32 3
  %25 = load i8*, i8** %24, align 8
  %26 = tail call %struct._xmlNs* @xmlNewNs(%struct._xmlNode* %1, i8* %23, i8* %25) #4
  br label %27

27:                                               ; preds = %3, %5, %21, %15
  %28 = phi %struct._xmlNs* [ %20, %15 ], [ %26, %21 ], [ null, %5 ], [ null, %3 ]
  ret %struct._xmlNs* %28
}

; Function Attrs: nounwind ssp uwtable
define hidden void @xsltFreeNamespaceAliasHashes(%struct._xsltStylesheet* nocapture) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct._xsltStylesheet, %struct._xsltStylesheet* %0, i64 0, i32 19
  %3 = load %struct._xmlHashTable*, %struct._xmlHashTable** %2, align 8
  %4 = icmp eq %struct._xmlHashTable* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @xmlHashFree(%struct._xmlHashTable* nonnull %3, void (i8*, i8*)* null) #4
  br label %6

6:                                                ; preds = %1, %5
  store %struct._xmlHashTable* null, %struct._xmlHashTable** %2, align 8
  ret void
}

declare void @xmlHashFree(%struct._xmlHashTable*, void (i8*, i8*)*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
