; ModuleID = '../../third_party/libpng/pngread.c'
source_filename = "../../third_party/libpng/pngread.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.png_struct_def = type { [1 x %struct.__jmp_buf_tag], void (%struct.__jmp_buf_tag*, i32)*, [1 x %struct.__jmp_buf_tag]*, i64, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, void (%struct.png_struct_def*, i8*, i64)*, void (%struct.png_struct_def*, i8*, i64)*, i8*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, void (%struct.png_struct_def*, %struct.png_row_info_struct*, i8*)*, i8*, i8, i8, i32, i32, i32, i32, %struct.z_stream_s, %struct.png_compression_buffer*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i8*, i8*, i8*, i8*, i64, i32, i32, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i32, %struct.png_color_16_struct, %struct.png_color_16_struct, void (%struct.png_struct_def*)*, i32, i32, i32, i32, i8*, i16**, i8*, i8*, i16**, i16**, %struct.png_color_8_struct, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, void (%struct.png_struct_def*, i8*, i32, i32)*, void (%struct.png_struct_def*, %struct.png_info_def*)*, i8*, i8*, i8*, i8*, i32, i32, i64, i64, i64, i64, i32, i32, i32, i32, i8*, i32 (%struct.png_struct_def*, %struct.png_unknown_chunk_t*)*, i32, i32, i8*, i8, i8, i16, i16, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*, i8*, i8, i32, i32, i32, i64, %struct.png_unknown_chunk_t, i64, i8*, i64, i32, i8*, [4 x void (%struct.png_row_info_struct*, i8*, i8*)*], %struct.png_colorspace }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%struct.png_row_info_struct = type { i32, i64, i8, i8, i8, i8 }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque
%struct.png_compression_buffer = type { %struct.png_compression_buffer*, [1 x i8] }
%struct.png_color_struct = type { i8, i8, i8 }
%struct.png_color_8_struct = type { i8, i8, i8, i8, i8 }
%struct.png_color_16_struct = type { i8, i16, i16, i16, i16 }
%struct.png_info_def = type { i32, i32, i32, i64, %struct.png_color_struct*, i16, i16, i8, i8, i8, i8, i8, i8, i8, i8, [8 x i8], %struct.png_colorspace, i8*, i8*, i32, i32, i32, %struct.png_text_struct*, %struct.png_color_8_struct, i8*, %struct.png_color_16_struct, %struct.png_color_16_struct, i32, %struct.png_unknown_chunk_t*, i32, i8** }
%struct.png_text_struct = type { i32, i8*, i8*, i64, i64, i8*, i8* }
%struct.png_unknown_chunk_t = type { [5 x i8], i8*, i64, i8 }
%struct.png_colorspace = type { i32, %struct.png_xy, %struct.png_XYZ, i16, i16 }
%struct.png_xy = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_XYZ = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.png_image = type { %struct.png_control*, i32, i32, i32, i32, i32, i32, i32, [64 x i8] }
%struct.png_control = type { %struct.png_struct_def*, %struct.png_info_def*, i8*, i8*, i64, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%struct.png_image_read_control = type { %struct.png_image*, i8*, i32, i8*, %struct.png_color_struct*, i8*, i8*, i64, i32, i32, i32 }

@.str = private unnamed_addr constant [25 x i8] c"Missing IHDR before IDAT\00", align 1
@.str.1 = private unnamed_addr constant [25 x i8] c"Missing PLTE before IDAT\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"Too many IDATs found\00", align 1
@.str.3 = private unnamed_addr constant [58 x i8] c"png_read_update_info/png_start_read_image: duplicate call\00", align 1
@.str.4 = private unnamed_addr constant [58 x i8] c"png_start_read_image/png_read_update_info: duplicate call\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Invalid attempt to read row data\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"bad adaptive filter value\00", align 1
@.str.7 = private unnamed_addr constant [24 x i8] c"sequential row overflow\00", align 1
@.str.8 = private unnamed_addr constant [47 x i8] c"internal sequential row size calculation error\00", align 1
@.str.9 = private unnamed_addr constant [65 x i8] c"Interlace handling should be turned on when using png_read_image\00", align 1
@.str.10 = private unnamed_addr constant [22 x i8] c".Too many IDATs found\00", align 1
@.str.11 = private unnamed_addr constant [23 x i8] c"..Too many IDATs found\00", align 1
@.str.12 = private unnamed_addr constant [49 x i8] c"Image is too high to process with png_read_png()\00", align 1
@.str.13 = private unnamed_addr constant [40 x i8] c"PNG_TRANSFORM_INVERT_MONO not supported\00", align 1
@.str.14 = private unnamed_addr constant [41 x i8] c"PNG_TRANSFORM_INVERT_ALPHA not supported\00", align 1
@.str.15 = private unnamed_addr constant [50 x i8] c"png_image_begin_read_from_stdio: invalid argument\00", align 1
@.str.16 = private unnamed_addr constant [61 x i8] c"png_image_begin_read_from_stdio: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.17 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.18 = private unnamed_addr constant [49 x i8] c"png_image_begin_read_from_file: invalid argument\00", align 1
@.str.19 = private unnamed_addr constant [60 x i8] c"png_image_begin_read_from_file: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.20 = private unnamed_addr constant [51 x i8] c"png_image_begin_read_from_memory: invalid argument\00", align 1
@.str.21 = private unnamed_addr constant [62 x i8] c"png_image_begin_read_from_memory: incorrect PNG_IMAGE_VERSION\00", align 1
@.str.22 = private unnamed_addr constant [47 x i8] c"png_image_finish_read[color-map]: no color-map\00", align 1
@.str.23 = private unnamed_addr constant [39 x i8] c"png_image_finish_read: image too large\00", align 1
@.str.24 = private unnamed_addr constant [40 x i8] c"png_image_finish_read: invalid argument\00", align 1
@.str.25 = private unnamed_addr constant [44 x i8] c"png_image_finish_read: row_stride too large\00", align 1
@.str.26 = private unnamed_addr constant [49 x i8] c"png_image_finish_read: damaged PNG_IMAGE_VERSION\00", align 1
@.str.27 = private unnamed_addr constant [7 x i8] c"1.6.37\00", align 1
@.str.28 = private unnamed_addr constant [30 x i8] c"png_image_read: out of memory\00", align 1
@.str.29 = private unnamed_addr constant [40 x i8] c"png_image_read: opaque pointer not NULL\00", align 1
@.str.30 = private unnamed_addr constant [24 x i8] c"read beyond end of data\00", align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"invalid memory read\00", align 1
@.str.32 = private unnamed_addr constant [63 x i8] c"background color must be supplied to remove alpha/transparency\00", align 1
@.str.33 = private unnamed_addr constant [35 x i8] c"gray[8] color-map: too few entries\00", align 1
@.str.34 = private unnamed_addr constant [36 x i8] c"gray[16] color-map: too few entries\00", align 1
@cr_png_sRGB_base = external local_unnamed_addr constant [512 x i16], align 16
@cr_png_sRGB_delta = external local_unnamed_addr constant [512 x i8], align 16
@.str.35 = private unnamed_addr constant [38 x i8] c"gray+alpha color-map: too few entries\00", align 1
@.str.37 = private unnamed_addr constant [38 x i8] c"gray-alpha color-map: too few entries\00", align 1
@.str.38 = private unnamed_addr constant [36 x i8] c"ga-alpha color-map: too few entries\00", align 1
@cr_png_sRGB_table = external local_unnamed_addr constant [256 x i16], align 16
@.str.39 = private unnamed_addr constant [35 x i8] c"rgb[ga] color-map: too few entries\00", align 1
@.str.40 = private unnamed_addr constant [37 x i8] c"rgb[gray] color-map: too few entries\00", align 1
@.str.42 = private unnamed_addr constant [37 x i8] c"rgb+alpha color-map: too few entries\00", align 1
@.str.43 = private unnamed_addr constant [37 x i8] c"rgb-alpha color-map: too few entries\00", align 1
@.str.45 = private unnamed_addr constant [31 x i8] c"rgb color-map: too few entries\00", align 1
@.str.46 = private unnamed_addr constant [35 x i8] c"palette color-map: too few entries\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"invalid PNG color type\00", align 1
@.str.48 = private unnamed_addr constant [33 x i8] c"bad data option (internal error)\00", align 1
@.str.49 = private unnamed_addr constant [40 x i8] c"color map overflow (BAD internal error)\00", align 1
@.str.50 = private unnamed_addr constant [39 x i8] c"bad processing option (internal error)\00", align 1
@.str.51 = private unnamed_addr constant [38 x i8] c"bad background index (internal error)\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"color-map index out of range\00", align 1
@.str.53 = private unnamed_addr constant [30 x i8] c"bad encoding (internal error)\00", align 1
@.str.54 = private unnamed_addr constant [37 x i8] c"unexpected encoding (internal error)\00", align 1
@.str.55 = private unnamed_addr constant [42 x i8] c"bad color-map processing (internal error)\00", align 1
@png_image_skip_unused_chunks.chunks_to_process = internal constant [30 x i8] c"bKGD\00cHRM\00gAMA\00iCCP\00sBIT\00sRGB\00", align 16
@.str.56 = private unnamed_addr constant [23 x i8] c"unknown interlace type\00", align 1
@.str.57 = private unnamed_addr constant [43 x i8] c"png_read_image: unsupported transformation\00", align 1
@.str.58 = private unnamed_addr constant [35 x i8] c"png_image_read: alpha channel lost\00", align 1
@.str.59 = private unnamed_addr constant [37 x i8] c"unexpected alpha swap transformation\00", align 1
@.str.60 = private unnamed_addr constant [40 x i8] c"png_read_image: invalid transformations\00", align 1
@.str.61 = private unnamed_addr constant [17 x i8] c"lost rgb to gray\00", align 1
@.str.62 = private unnamed_addr constant [19 x i8] c"unexpected compose\00", align 1
@.str.63 = private unnamed_addr constant [21 x i8] c"lost/gained channels\00", align 1
@.str.64 = private unnamed_addr constant [32 x i8] c"unexpected 8-bit transformation\00", align 1
@.str.65 = private unnamed_addr constant [21 x i8] c"unexpected bit depth\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.png_struct_def* @cr_png_create_read_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #0 {
  %5 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* %0, i8* %1, void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)* %3, i8* null, i8* (%struct.png_struct_def*, i64)* null, void (%struct.png_struct_def*, i8*)* null) #9
  %6 = icmp eq %struct.png_struct_def* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 15
  store i32 32768, i32* %8, align 4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 131
  store i32 8192, i32* %9, align 8
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 16
  %11 = load i32, i32* %10, align 8
  %12 = or i32 %11, 3145728
  store i32 %12, i32* %10, align 8
  tail call void @cr_png_set_read_fn(%struct.png_struct_def* nonnull %5, i8* null, void (%struct.png_struct_def*, i8*, i64)* null) #9
  br label %13

13:                                               ; preds = %4, %7
  ret %struct.png_struct_def* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.png_struct_def* @cr_png_create_read_struct_2(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #0 {
  %8 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* %0, i8* %1, void (%struct.png_struct_def*, i8*)* %2, void (%struct.png_struct_def*, i8*)* %3, i8* %4, i8* (%struct.png_struct_def*, i64)* %5, void (%struct.png_struct_def*, i8*)* %6) #9
  %9 = icmp eq %struct.png_struct_def* %8, null
  br i1 %9, label %16, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 15
  store i32 32768, i32* %11, align 4
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 131
  store i32 8192, i32* %12, align 8
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %8, i64 0, i32 16
  %14 = load i32, i32* %13, align 8
  %15 = or i32 %14, 3145728
  store i32 %15, i32* %13, align 8
  tail call void @cr_png_set_read_fn(%struct.png_struct_def* nonnull %8, i8* null, void (%struct.png_struct_def*, i8*, i64)* null) #9
  br label %16

16:                                               ; preds = %7, %10
  ret %struct.png_struct_def* %8
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare noalias %struct.png_struct_def* @cr_png_create_png_struct(i8*, i8*, void (%struct.png_struct_def*, i8*)*, void (%struct.png_struct_def*, i8*)*, i8*, i8* (%struct.png_struct_def*, i64)*, void (%struct.png_struct_def*, i8*)*) local_unnamed_addr #2

declare void @cr_png_set_read_fn(%struct.png_struct_def*, i8*, void (%struct.png_struct_def*, i8*, i64)*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_info(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  %4 = icmp eq %struct.png_info_def* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %68, label %6

6:                                                ; preds = %2
  tail call void @cr_png_read_sig(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #9
  %7 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  br label %10

10:                                               ; preds = %41, %6
  %11 = tail call i32 @cr_png_read_chunk_header(%struct.png_struct_def* %0) #9
  %12 = load i32, i32* %7, align 8
  %13 = icmp eq i32 %12, 1229209940
  %14 = load i32, i32* %8, align 4
  br i1 %13, label %15, label %34

15:                                               ; preds = %10
  %16 = and i32 %14, 1
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @cr_png_chunk_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0)) #10
  unreachable

19:                                               ; preds = %15
  %20 = load i8, i8* %9, align 1
  %21 = icmp eq i8 %20, 3
  %22 = and i32 %14, 2
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %23, %21
  br i1 %24, label %25, label %26

25:                                               ; preds = %19
  tail call void @cr_png_chunk_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.1, i64 0, i64 0)) #10
  unreachable

26:                                               ; preds = %19
  %27 = and i32 %14, 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %26
  tail call void @cr_png_chunk_benign_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.2, i64 0, i64 0)) #9
  %30 = load i32, i32* %8, align 4
  br label %31

31:                                               ; preds = %29, %26
  %32 = phi i32 [ %30, %29 ], [ %14, %26 ]
  %33 = or i32 %32, 4
  store i32 %33, i32* %8, align 4
  br label %43

34:                                               ; preds = %10
  %35 = and i32 %14, 4
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %34
  %38 = or i32 %14, 8200
  store i32 %38, i32* %8, align 4
  br label %39

39:                                               ; preds = %34, %37
  switch i32 %12, label %43 [
    i32 1229472850, label %40
    i32 1229278788, label %42
  ]

40:                                               ; preds = %39
  tail call void @cr_png_handle_IHDR(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

41:                                               ; preds = %40, %51, %48, %58, %60, %62, %64, %63, %61, %59, %57, %54, %42
  br label %10

42:                                               ; preds = %39
  tail call void @cr_png_handle_IEND(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

43:                                               ; preds = %31, %39
  %44 = tail call i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def* %0, i32 %12) #9
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %43
  tail call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11, i32 %44) #9
  %47 = icmp eq i32 %12, 1347179589
  br i1 %47, label %48, label %51

48:                                               ; preds = %46
  %49 = load i32, i32* %8, align 4
  %50 = or i32 %49, 2
  store i32 %50, i32* %8, align 4
  br label %41

51:                                               ; preds = %46
  br i1 %13, label %65, label %41

52:                                               ; preds = %43
  %53 = icmp eq i32 %12, 1347179589
  br i1 %53, label %54, label %55

54:                                               ; preds = %52
  tail call void @cr_png_handle_PLTE(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

55:                                               ; preds = %52
  br i1 %13, label %65, label %56

56:                                               ; preds = %55
  switch i32 %12, label %64 [
    i32 1665684045, label %57
    i32 1732332865, label %58
    i32 1934772034, label %59
    i32 1766015824, label %60
    i32 1950701684, label %61
    i32 1951551059, label %62
    i32 2052348020, label %63
  ]

57:                                               ; preds = %56
  tail call void @cr_png_handle_cHRM(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

58:                                               ; preds = %56
  tail call void @cr_png_handle_gAMA(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

59:                                               ; preds = %56
  tail call void @cr_png_handle_sRGB(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

60:                                               ; preds = %56
  tail call void @cr_png_handle_iCCP(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

61:                                               ; preds = %56
  tail call void @cr_png_handle_tEXt(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

62:                                               ; preds = %56
  tail call void @cr_png_handle_tRNS(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

63:                                               ; preds = %56
  tail call void @cr_png_handle_zTXt(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11) #9
  br label %41

64:                                               ; preds = %56
  tail call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %11, i32 0) #9
  br label %41

65:                                               ; preds = %55, %51
  %66 = phi i32 [ 0, %51 ], [ %11, %55 ]
  %67 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 50
  store i32 %66, i32* %67, align 8
  br label %68

68:                                               ; preds = %65, %2
  ret void
}

declare void @cr_png_read_sig(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

declare i32 @cr_png_read_chunk_header(%struct.png_struct_def*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @cr_png_chunk_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_chunk_benign_error(%struct.png_struct_def*, i8*) local_unnamed_addr #2

declare void @cr_png_handle_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_IEND(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_unknown(%struct.png_struct_def*, %struct.png_info_def*, i32, i32) local_unnamed_addr #2

declare void @cr_png_handle_PLTE(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_cHRM(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_gAMA(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_sRGB(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_tEXt(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_tRNS(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

declare void @cr_png_handle_zTXt(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_update_info(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %0) #9
  tail call void @cr_png_read_transform_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* %1) #9
  br label %11

10:                                               ; preds = %4
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %11

11:                                               ; preds = %2, %9, %10
  ret void
}

declare void @cr_png_read_start_row(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_read_transform_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

declare void @cr_png_app_error(%struct.png_struct_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_start_read_image(%struct.png_struct_def* noalias) local_unnamed_addr #0 {
  %2 = icmp eq %struct.png_struct_def* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 64
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %0) #9
  br label %10

9:                                                ; preds = %3
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %10

10:                                               ; preds = %1, %8, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_row(%struct.png_struct_def* noalias, i8*, i8*) local_unnamed_addr #0 {
  %4 = alloca %struct.png_row_info_struct, align 8
  %5 = bitcast %struct.png_row_info_struct* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 24, i1 false)
  %6 = icmp eq %struct.png_struct_def* %0, null
  br i1 %6, label %204, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %9 = load i32, i32* %8, align 8
  %10 = and i32 %9, 64
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %0) #9
  br label %13

13:                                               ; preds = %12, %7
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 42
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 0
  store i32 %15, i32* %16, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 60
  %18 = load i8, i8* %17, align 1
  %19 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 2
  store i8 %18, i8* %19, align 8
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 61
  %21 = load i8, i8* %20, align 2
  %22 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 3
  store i8 %21, i8* %22, align 1
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 64
  %24 = load i8, i8* %23, align 1
  %25 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 4
  store i8 %24, i8* %25, align 2
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 63
  %27 = load i8, i8* %26, align 4
  %28 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 5
  store i8 %27, i8* %28, align 1
  %29 = icmp ugt i8 %27, 7
  %30 = zext i32 %15 to i64
  %31 = zext i8 %27 to i64
  br i1 %29, label %32, label %35

32:                                               ; preds = %13
  %33 = lshr i64 %31, 3
  %34 = mul nuw nsw i64 %33, %30
  br label %39

35:                                               ; preds = %13
  %36 = mul nuw nsw i64 %31, %30
  %37 = add nuw nsw i64 %36, 7
  %38 = lshr i64 %37, 3
  br label %39

39:                                               ; preds = %35, %32
  %40 = phi i64 [ %34, %32 ], [ %38, %35 ]
  %41 = getelementptr inbounds %struct.png_row_info_struct, %struct.png_row_info_struct* %4, i64 0, i32 1
  store i64 %40, i64* %41, align 8
  %42 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 43
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %45 = load i8, i8* %44, align 2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %119, label %47

47:                                               ; preds = %39
  %48 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %49 = load i32, i32* %48, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %119, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %54 = load i8, i8* %53, align 1
  switch i8 %54, label %115 [
    i8 0, label %55
    i8 1, label %62
    i8 2, label %73
    i8 3, label %83
    i8 4, label %94
    i8 5, label %104
  ]

55:                                               ; preds = %52
  %56 = and i32 %43, 7
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %119, label %58

58:                                               ; preds = %55
  %59 = icmp eq i8* %2, null
  br i1 %59, label %61, label %60

60:                                               ; preds = %58
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %61

61:                                               ; preds = %58, %60
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

62:                                               ; preds = %52
  %63 = and i32 %43, 7
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %69

65:                                               ; preds = %62
  %66 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %67 = load i32, i32* %66, align 8
  %68 = icmp ult i32 %67, 5
  br i1 %68, label %69, label %119

69:                                               ; preds = %62, %65
  %70 = icmp eq i8* %2, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %72

72:                                               ; preds = %69, %71
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

73:                                               ; preds = %52
  %74 = and i32 %43, 7
  %75 = icmp eq i32 %74, 4
  br i1 %75, label %119, label %76

76:                                               ; preds = %73
  %77 = icmp eq i8* %2, null
  %78 = and i32 %43, 4
  %79 = icmp eq i32 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %82

82:                                               ; preds = %76, %81
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

83:                                               ; preds = %52
  %84 = and i32 %43, 3
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %90

86:                                               ; preds = %83
  %87 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %88 = load i32, i32* %87, align 8
  %89 = icmp ult i32 %88, 3
  br i1 %89, label %90, label %119

90:                                               ; preds = %83, %86
  %91 = icmp eq i8* %2, null
  br i1 %91, label %93, label %92

92:                                               ; preds = %90
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %93

93:                                               ; preds = %90, %92
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

94:                                               ; preds = %52
  %95 = and i32 %43, 3
  %96 = icmp eq i32 %95, 2
  br i1 %96, label %119, label %97

97:                                               ; preds = %94
  %98 = icmp eq i8* %2, null
  %99 = and i32 %43, 2
  %100 = icmp eq i32 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %103, label %102

102:                                              ; preds = %97
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %103

103:                                              ; preds = %97, %102
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

104:                                              ; preds = %52
  %105 = and i32 %43, 1
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %111

107:                                              ; preds = %104
  %108 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 37
  %109 = load i32, i32* %108, align 8
  %110 = icmp ult i32 %109, 2
  br i1 %110, label %111, label %119

111:                                              ; preds = %104, %107
  %112 = icmp eq i8* %2, null
  br i1 %112, label %114, label %113

113:                                              ; preds = %111
  tail call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %114

114:                                              ; preds = %111, %113
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

115:                                              ; preds = %52
  %116 = and i32 %43, 1
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  br label %204

119:                                              ; preds = %55, %73, %94, %47, %39, %65, %86, %107, %115
  %120 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %121 = load i32, i32* %120, align 4
  %122 = and i32 %121, 4
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %119
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #10
  unreachable

125:                                              ; preds = %119
  %126 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 46
  %127 = load i8*, i8** %126, align 8
  store i8 -1, i8* %127, align 1
  %128 = load i8*, i8** %126, align 8
  %129 = load i64, i64* %41, align 8
  %130 = add i64 %129, 1
  tail call void @cr_png_read_IDAT_data(%struct.png_struct_def* nonnull %0, i8* %128, i64 %130) #9
  %131 = load i8*, i8** %126, align 8
  %132 = load i8, i8* %131, align 1
  %133 = zext i8 %132 to i32
  %134 = icmp eq i8 %132, 0
  br i1 %134, label %146, label %135

135:                                              ; preds = %125
  %136 = icmp ult i8 %132, 5
  br i1 %136, label %137, label %145

137:                                              ; preds = %135
  %138 = getelementptr inbounds i8, i8* %131, i64 1
  %139 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %140 = load i8*, i8** %139, align 8
  %141 = getelementptr inbounds i8, i8* %140, i64 1
  call void @cr_png_read_filter_row(%struct.png_struct_def* nonnull %0, %struct.png_row_info_struct* nonnull %4, i8* %138, i8* %141, i32 %133) #9
  %142 = load i8*, i8** %126, align 8
  %143 = load i64, i64* %41, align 8
  %144 = add i64 %143, 1
  br label %146

145:                                              ; preds = %135
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #10
  unreachable

146:                                              ; preds = %125, %137
  %147 = phi i64 [ %130, %125 ], [ %144, %137 ]
  %148 = phi i8* [ %131, %125 ], [ %142, %137 ]
  %149 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 45
  %150 = load i8*, i8** %149, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %150, i8* align 1 %148, i64 %147, i1 false)
  %151 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %146
  call void @cr_png_do_read_transformations(%struct.png_struct_def* nonnull %0, %struct.png_row_info_struct* nonnull %4) #9
  br label %155

155:                                              ; preds = %146, %154
  %156 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 68
  %157 = load i8, i8* %156, align 1
  %158 = icmp eq i8 %157, 0
  %159 = load i8, i8* %28, align 1
  br i1 %158, label %160, label %165

160:                                              ; preds = %155
  store i8 %159, i8* %156, align 1
  %161 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 67
  %162 = load i8, i8* %161, align 8
  %163 = icmp ugt i8 %159, %162
  br i1 %163, label %164, label %168

164:                                              ; preds = %160
  call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.7, i64 0, i64 0)) #10
  unreachable

165:                                              ; preds = %155
  %166 = icmp eq i8 %157, %159
  br i1 %166, label %168, label %167

167:                                              ; preds = %165
  call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.8, i64 0, i64 0)) #10
  unreachable

168:                                              ; preds = %165, %160
  %169 = load i8, i8* %44, align 2
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %189, label %171

171:                                              ; preds = %168
  %172 = load i32, i32* %151, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %189, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %177 = load i8, i8* %176, align 1
  %178 = icmp ult i8 %177, 6
  br i1 %178, label %179, label %183

179:                                              ; preds = %175
  %180 = zext i8 %177 to i32
  %181 = load i8*, i8** %126, align 8
  %182 = getelementptr inbounds i8, i8* %181, i64 1
  call void @cr_png_do_read_interlace(%struct.png_row_info_struct* nonnull %4, i8* %182, i32 %180, i32 %172) #9
  br label %183

183:                                              ; preds = %179, %175
  %184 = icmp eq i8* %2, null
  br i1 %184, label %186, label %185

185:                                              ; preds = %183
  call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 1) #9
  br label %186

186:                                              ; preds = %183, %185
  %187 = icmp eq i8* %1, null
  br i1 %187, label %195, label %188

188:                                              ; preds = %186
  call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %1, i32 0) #9
  br label %195

189:                                              ; preds = %171, %168
  %190 = icmp eq i8* %1, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %189
  call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %1, i32 -1) #9
  br label %192

192:                                              ; preds = %189, %191
  %193 = icmp eq i8* %2, null
  br i1 %193, label %195, label %194

194:                                              ; preds = %192
  call void @cr_png_combine_row(%struct.png_struct_def* nonnull %0, i8* nonnull %2, i32 -1) #9
  br label %195

195:                                              ; preds = %186, %192, %194, %188
  call void @cr_png_read_finish_row(%struct.png_struct_def* nonnull %0) #9
  %196 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 90
  %197 = load void (%struct.png_struct_def*, i32, i32)*, void (%struct.png_struct_def*, i32, i32)** %196, align 8
  %198 = icmp eq void (%struct.png_struct_def*, i32, i32)* %197, null
  br i1 %198, label %204, label %199

199:                                              ; preds = %195
  %200 = load i32, i32* %42, align 4
  %201 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 58
  %202 = load i8, i8* %201, align 1
  %203 = zext i8 %202 to i32
  call void %197(%struct.png_struct_def* nonnull %0, i32 %200, i32 %203) #9
  br label %204

204:                                              ; preds = %199, %195, %3, %118, %114, %103, %93, %82, %72, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @cr_png_combine_row(%struct.png_struct_def*, i8*, i32) local_unnamed_addr #2

declare void @cr_png_read_finish_row(%struct.png_struct_def*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @cr_png_error(%struct.png_struct_def*, i8*) local_unnamed_addr #3

declare void @cr_png_read_IDAT_data(%struct.png_struct_def*, i8*, i64) local_unnamed_addr #2

declare void @cr_png_read_filter_row(%struct.png_struct_def*, %struct.png_row_info_struct*, i8*, i8*, i32) local_unnamed_addr #2

declare void @cr_png_do_read_transformations(%struct.png_struct_def*, %struct.png_row_info_struct*) local_unnamed_addr #2

declare void @cr_png_do_read_interlace(%struct.png_row_info_struct*, i8*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_rows(%struct.png_struct_def* noalias, i8** readonly, i8** readonly, i32) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  br i1 %5, label %40, label %6

6:                                                ; preds = %4
  %7 = icmp ne i8** %1, null
  %8 = icmp ne i8** %2, null
  %9 = and i1 %7, %8
  %10 = icmp ne i32 %3, 0
  br i1 %9, label %11, label %22

11:                                               ; preds = %6
  br i1 %10, label %12, label %40

12:                                               ; preds = %11, %12
  %13 = phi i32 [ %20, %12 ], [ 0, %11 ]
  %14 = phi i8** [ %16, %12 ], [ %1, %11 ]
  %15 = phi i8** [ %18, %12 ], [ %2, %11 ]
  %16 = getelementptr inbounds i8*, i8** %14, i64 1
  %17 = load i8*, i8** %14, align 8
  %18 = getelementptr inbounds i8*, i8** %15, i64 1
  %19 = load i8*, i8** %15, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* nonnull %0, i8* %17, i8* %19)
  %20 = add nuw i32 %13, 1
  %21 = icmp eq i32 %20, %3
  br i1 %21, label %40, label %12

22:                                               ; preds = %6
  br i1 %7, label %23, label %31

23:                                               ; preds = %22
  br i1 %10, label %24, label %40

24:                                               ; preds = %23, %24
  %25 = phi i32 [ %29, %24 ], [ 0, %23 ]
  %26 = phi i8** [ %28, %24 ], [ %1, %23 ]
  %27 = load i8*, i8** %26, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* nonnull %0, i8* %27, i8* null)
  %28 = getelementptr inbounds i8*, i8** %26, i64 1
  %29 = add nuw i32 %25, 1
  %30 = icmp eq i32 %29, %3
  br i1 %30, label %40, label %24

31:                                               ; preds = %22
  %32 = and i1 %8, %10
  br i1 %32, label %33, label %40

33:                                               ; preds = %31, %33
  %34 = phi i32 [ %38, %33 ], [ 0, %31 ]
  %35 = phi i8** [ %37, %33 ], [ %2, %31 ]
  %36 = load i8*, i8** %35, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* nonnull %0, i8* null, i8* %36)
  %37 = getelementptr inbounds i8*, i8** %35, i64 1
  %38 = add nuw i32 %34, 1
  %39 = icmp eq i32 %38, %3
  br i1 %39, label %40, label %33

40:                                               ; preds = %33, %24, %12, %23, %11, %31, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_image(%struct.png_struct_def* noalias, i8** nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %50, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 64
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %4
  %10 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* nonnull %0) #9
  %11 = load i32, i32* %5, align 8, !alias.scope !2
  %12 = and i32 %11, 64
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %0) #9
  br label %31

15:                                               ; preds = %9
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.4, i64 0, i64 0)) #9
  br label %31

16:                                               ; preds = %4
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 57
  %18 = load i8, i8* %17, align 2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 17
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %29

25:                                               ; preds = %20
  tail call void @cr_png_warning(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.9, i64 0, i64 0)) #9
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 39
  store i32 %27, i32* %28, align 8
  br label %29

29:                                               ; preds = %16, %25, %20
  %30 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* nonnull %0) #9
  br label %31

31:                                               ; preds = %15, %14, %29
  %32 = phi i32 [ %30, %29 ], [ %10, %14 ], [ %10, %15 ]
  %33 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 38
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %32, 0
  br i1 %35, label %36, label %50

36:                                               ; preds = %31
  %37 = icmp eq i32 %34, 0
  br label %38

38:                                               ; preds = %47, %36
  %39 = phi i32 [ 0, %36 ], [ %48, %47 ]
  br i1 %37, label %47, label %40

40:                                               ; preds = %38, %40
  %41 = phi i8** [ %44, %40 ], [ %1, %38 ]
  %42 = phi i32 [ %45, %40 ], [ 0, %38 ]
  %43 = load i8*, i8** %41, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* nonnull %0, i8* %43, i8* null)
  %44 = getelementptr inbounds i8*, i8** %41, i64 1
  %45 = add nuw i32 %42, 1
  %46 = icmp eq i32 %45, %34
  br i1 %46, label %47, label %40

47:                                               ; preds = %40, %38
  %48 = add nuw nsw i32 %39, 1
  %49 = icmp eq i32 %48, %32
  br i1 %49, label %50, label %38

50:                                               ; preds = %47, %31, %2
  ret void
}

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_warning(%struct.png_struct_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_end(%struct.png_struct_def* noalias, %struct.png_info_def* noalias) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %74, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def* nonnull %0, i32 1229209940) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %4
  tail call void @cr_png_read_finish_IDAT(%struct.png_struct_def* nonnull %0) #9
  br label %8

8:                                                ; preds = %7, %4
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 44
  %10 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 15
  %11 = icmp eq %struct.png_info_def* %1, null
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  br label %13

13:                                               ; preds = %70, %8
  %14 = tail call i32 @cr_png_read_chunk_header(%struct.png_struct_def* %0) #9
  %15 = load i32, i32* %9, align 8
  %16 = icmp eq i32 %15, 1229209940
  br i1 %16, label %22, label %17

17:                                               ; preds = %13
  %18 = load i32, i32* %10, align 4
  %19 = or i32 %18, 8192
  store i32 %19, i32* %10, align 4
  switch i32 %15, label %22 [
    i32 1229278788, label %20
    i32 1229472850, label %21
  ]

20:                                               ; preds = %17
  tail call void @cr_png_handle_IEND(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %14) #9
  br label %70

21:                                               ; preds = %17
  tail call void @cr_png_handle_IHDR(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 %14) #9
  br label %70

22:                                               ; preds = %13, %17
  br i1 %11, label %23, label %25

23:                                               ; preds = %22
  %24 = tail call i32 @cr_png_crc_finish(%struct.png_struct_def* %0, i32 %14) #9
  br label %70

25:                                               ; preds = %22
  %26 = tail call i32 @cr_png_chunk_unknown_handling(%struct.png_struct_def* %0, i32 %15) #9
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %25
  br i1 %16, label %29, label %41

29:                                               ; preds = %28
  %30 = icmp eq i32 %14, 0
  br i1 %30, label %35, label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %12, align 8
  %33 = and i32 %32, 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31, %29
  %36 = load i32, i32* %10, align 4
  %37 = and i32 %36, 8192
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %31, %35
  tail call void @cr_png_benign_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.10, i64 0, i64 0)) #9
  br label %40

40:                                               ; preds = %35, %39
  tail call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14, i32 %26) #9
  br label %70

41:                                               ; preds = %28
  tail call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14, i32 %26) #9
  %42 = icmp eq i32 %15, 1347179589
  br i1 %42, label %43, label %70

43:                                               ; preds = %41
  %44 = load i32, i32* %10, align 4
  %45 = or i32 %44, 2
  store i32 %45, i32* %10, align 4
  br label %70

46:                                               ; preds = %25
  br i1 %16, label %47, label %60

47:                                               ; preds = %46
  %48 = icmp eq i32 %14, 0
  br i1 %48, label %53, label %49

49:                                               ; preds = %47
  %50 = load i32, i32* %12, align 8
  %51 = and i32 %50, 8
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49, %47
  %54 = load i32, i32* %10, align 4
  %55 = and i32 %54, 8192
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %58, label %57

57:                                               ; preds = %49, %53
  tail call void @cr_png_benign_error(%struct.png_struct_def* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0)) #9
  br label %58

58:                                               ; preds = %53, %57
  %59 = tail call i32 @cr_png_crc_finish(%struct.png_struct_def* %0, i32 %14) #9
  br label %70

60:                                               ; preds = %46
  switch i32 %15, label %69 [
    i32 1347179589, label %61
    i32 1665684045, label %62
    i32 1732332865, label %63
    i32 1934772034, label %64
    i32 1766015824, label %65
    i32 1950701684, label %66
    i32 1951551059, label %67
    i32 2052348020, label %68
  ]

61:                                               ; preds = %60
  tail call void @cr_png_handle_PLTE(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

62:                                               ; preds = %60
  tail call void @cr_png_handle_cHRM(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

63:                                               ; preds = %60
  tail call void @cr_png_handle_gAMA(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

64:                                               ; preds = %60
  tail call void @cr_png_handle_sRGB(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

65:                                               ; preds = %60
  tail call void @cr_png_handle_iCCP(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

66:                                               ; preds = %60
  tail call void @cr_png_handle_tEXt(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

67:                                               ; preds = %60
  tail call void @cr_png_handle_tRNS(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

68:                                               ; preds = %60
  tail call void @cr_png_handle_zTXt(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14) #9
  br label %70

69:                                               ; preds = %60
  tail call void @cr_png_handle_unknown(%struct.png_struct_def* %0, %struct.png_info_def* nonnull %1, i32 %14, i32 0) #9
  br label %70

70:                                               ; preds = %40, %21, %43, %41, %61, %63, %65, %67, %69, %68, %66, %64, %62, %58, %23, %20
  %71 = load i32, i32* %10, align 4
  %72 = and i32 %71, 16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %13, label %74

74:                                               ; preds = %70, %2
  ret void
}

declare void @cr_png_read_finish_IDAT(%struct.png_struct_def*) local_unnamed_addr #2

declare i32 @cr_png_crc_finish(%struct.png_struct_def*, i32) local_unnamed_addr #2

declare void @cr_png_benign_error(%struct.png_struct_def*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_destroy_read_struct(%struct.png_struct_def**, %struct.png_info_def**, %struct.png_info_def**) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_struct_def** %0, null
  br i1 %4, label %45, label %5

5:                                                ; preds = %3
  %6 = load %struct.png_struct_def*, %struct.png_struct_def** %0, align 8
  %7 = icmp eq %struct.png_struct_def* %6, null
  br i1 %7, label %45, label %8

8:                                                ; preds = %5
  tail call void @cr_png_destroy_info_struct(%struct.png_struct_def* nonnull %6, %struct.png_info_def** %2) #9
  tail call void @cr_png_destroy_info_struct(%struct.png_struct_def* nonnull %6, %struct.png_info_def** %1) #9
  store %struct.png_struct_def* null, %struct.png_struct_def** %0, align 8
  tail call void @cr_png_destroy_gamma_table(%struct.png_struct_def* nonnull %6) #9
  %9 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 121
  %10 = load i8*, i8** %9, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %10) #9
  store i8* null, i8** %9, align 8, !alias.scope !5
  %11 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 132
  %12 = load i8*, i8** %11, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %12) #9
  store i8* null, i8** %11, align 8, !alias.scope !5
  %13 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 129
  %14 = load i8*, i8** %13, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %14) #9
  store i8* null, i8** %13, align 8, !alias.scope !5
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 108
  %16 = load i32, i32* %15, align 4, !alias.scope !5
  %17 = and i32 %16, 4096
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %25, label %19

19:                                               ; preds = %8
  %20 = bitcast %struct.png_struct_def* %6 to i8*
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 52
  %22 = bitcast %struct.png_color_struct** %21 to i8**
  %23 = load i8*, i8** %22, align 8, !alias.scope !5
  tail call void @cr_png_zfree(i8* nonnull %20, i8* %23) #9
  store %struct.png_color_struct* null, %struct.png_color_struct** %21, align 8, !alias.scope !5
  %24 = load i32, i32* %15, align 4, !alias.scope !5
  br label %25

25:                                               ; preds = %19, %8
  %26 = phi i32 [ %16, %8 ], [ %24, %19 ]
  %27 = and i32 %26, -4097
  store i32 %27, i32* %15, align 4, !alias.scope !5
  %28 = and i32 %26, 8192
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 88
  %32 = load i8*, i8** %31, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %32) #9
  store i8* null, i8** %31, align 8, !alias.scope !5
  %33 = load i32, i32* %15, align 4, !alias.scope !5
  br label %34

34:                                               ; preds = %25, %30
  %35 = phi i32 [ %27, %25 ], [ %33, %30 ]
  %36 = and i32 %35, -8193
  store i32 %36, i32* %15, align 4, !alias.scope !5
  %37 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 19
  %38 = tail call i32 @Cr_z_inflateEnd(%struct.z_stream_s* %37) #9
  %39 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 96
  %40 = load i8*, i8** %39, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %40) #9
  store i8* null, i8** %39, align 8, !alias.scope !5
  %41 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 127, i32 1
  %42 = load i8*, i8** %41, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %42) #9
  store i8* null, i8** %41, align 8, !alias.scope !5
  %43 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %6, i64 0, i32 113
  %44 = load i8*, i8** %43, align 8, !alias.scope !5
  tail call void @cr_png_free(%struct.png_struct_def* nonnull %6, i8* %44) #9
  store i8* null, i8** %43, align 8, !alias.scope !5
  tail call void @cr_png_destroy_png_struct(%struct.png_struct_def* nonnull %6) #9
  br label %45

45:                                               ; preds = %3, %5, %34
  ret void
}

declare void @cr_png_destroy_info_struct(%struct.png_struct_def*, %struct.png_info_def**) local_unnamed_addr #2

declare void @cr_png_destroy_png_struct(%struct.png_struct_def*) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @cr_png_set_read_status_fn(%struct.png_struct_def* noalias, void (%struct.png_struct_def*, i32, i32)*) local_unnamed_addr #4 {
  %3 = icmp eq %struct.png_struct_def* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 90
  store void (%struct.png_struct_def*, i32, i32)* %1, void (%struct.png_struct_def*, i32, i32)** %5, align 8
  br label %6

6:                                                ; preds = %2, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @cr_png_read_png(%struct.png_struct_def* noalias, %struct.png_info_def* noalias, i32, i8* nocapture readnone) local_unnamed_addr #0 {
  %5 = icmp eq %struct.png_struct_def* %0, null
  %6 = icmp eq %struct.png_info_def* %1, null
  %7 = or i1 %5, %6
  br i1 %7, label %134, label %8

8:                                                ; preds = %4
  tail call void @cr_png_read_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1)
  %9 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp ugt i32 %10, 536870911
  br i1 %11, label %12, label %13

12:                                               ; preds = %8
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.12, i64 0, i64 0)) #10
  unreachable

13:                                               ; preds = %8
  %14 = trunc i32 %2 to i16
  %15 = icmp slt i16 %14, 0
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  tail call void @cr_png_set_scale_16(%struct.png_struct_def* nonnull %0) #9
  br label %17

17:                                               ; preds = %16, %13
  %18 = and i32 %2, 1
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20

20:                                               ; preds = %17
  tail call void @cr_png_set_strip_16(%struct.png_struct_def* nonnull %0) #9
  br label %21

21:                                               ; preds = %17, %20
  %22 = and i32 %2, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %25, label %24

24:                                               ; preds = %21
  tail call void @cr_png_set_strip_alpha(%struct.png_struct_def* nonnull %0) #9
  br label %25

25:                                               ; preds = %21, %24
  %26 = and i32 %2, 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  tail call void @cr_png_set_packing(%struct.png_struct_def* nonnull %0) #9
  br label %29

29:                                               ; preds = %25, %28
  %30 = and i32 %2, 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  tail call void @cr_png_set_packswap(%struct.png_struct_def* nonnull %0) #9
  br label %33

33:                                               ; preds = %29, %32
  %34 = and i32 %2, 16
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  tail call void @cr_png_set_expand(%struct.png_struct_def* nonnull %0) #9
  br label %37

37:                                               ; preds = %33, %36
  %38 = and i32 %2, 32
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.13, i64 0, i64 0)) #9
  br label %41

41:                                               ; preds = %37, %40
  %42 = and i32 %2, 64
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %46 = load i32, i32* %45, align 8
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %51, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 23
  tail call void @cr_png_set_shift(%struct.png_struct_def* nonnull %0, %struct.png_color_8_struct* %50) #9
  br label %51

51:                                               ; preds = %44, %41, %49
  %52 = trunc i32 %2 to i8
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @cr_png_set_bgr(%struct.png_struct_def* nonnull %0) #9
  br label %55

55:                                               ; preds = %54, %51
  %56 = and i32 %2, 256
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @cr_png_set_swap_alpha(%struct.png_struct_def* nonnull %0) #9
  br label %59

59:                                               ; preds = %55, %58
  %60 = and i32 %2, 512
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  tail call void @cr_png_set_swap(%struct.png_struct_def* nonnull %0) #9
  br label %63

63:                                               ; preds = %59, %62
  %64 = and i32 %2, 1024
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %67, label %66

66:                                               ; preds = %63
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.14, i64 0, i64 0)) #9
  br label %67

67:                                               ; preds = %63, %66
  %68 = and i32 %2, 8192
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %71, label %70

70:                                               ; preds = %67
  tail call void @cr_png_set_gray_to_rgb(%struct.png_struct_def* nonnull %0) #9
  br label %71

71:                                               ; preds = %67, %70
  %72 = and i32 %2, 16384
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  tail call void @cr_png_set_expand_16(%struct.png_struct_def* nonnull %0) #9
  br label %75

75:                                               ; preds = %74, %71
  %76 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* nonnull %0) #9
  %77 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 16
  %78 = load i32, i32* %77, align 8, !alias.scope !8, !noalias !11
  %79 = and i32 %78, 64
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %75
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %0) #9, !noalias !11
  tail call void @cr_png_read_transform_info(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1) #9
  br label %83

82:                                               ; preds = %75
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %83

83:                                               ; preds = %81, %82
  tail call void @cr_png_free_data(%struct.png_struct_def* nonnull %0, %struct.png_info_def* nonnull %1, i32 64, i32 0) #9
  %84 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 30
  %85 = load i8**, i8*** %84, align 8
  %86 = icmp eq i8** %85, null
  br i1 %86, label %87, label %129

87:                                               ; preds = %83
  %88 = load i32, i32* %9, align 4
  %89 = zext i32 %88 to i64
  %90 = shl nuw nsw i64 %89, 3
  %91 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* nonnull %0, i64 %90) #9
  %92 = bitcast i8*** %84 to i8**
  store i8* %91, i8** %92, align 8
  %93 = load i32, i32* %9, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %87
  %96 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %97 = load i32, i32* %96, align 4
  %98 = or i32 %97, 64
  store i32 %98, i32* %96, align 4
  br label %129

99:                                               ; preds = %87
  %100 = bitcast i8* %91 to i8**
  store i8* null, i8** %100, align 8
  %101 = load i32, i32* %9, align 4
  %102 = icmp ugt i32 %101, 1
  br i1 %102, label %103, label %111

103:                                              ; preds = %99, %103
  %104 = phi i64 [ %107, %103 ], [ 1, %99 ]
  %105 = load i8**, i8*** %84, align 8
  %106 = getelementptr inbounds i8*, i8** %105, i64 %104
  store i8* null, i8** %106, align 8
  %107 = add nuw nsw i64 %104, 1
  %108 = load i32, i32* %9, align 4
  %109 = zext i32 %108 to i64
  %110 = icmp ult i64 %107, %109
  br i1 %110, label %103, label %111

111:                                              ; preds = %103, %99
  %112 = phi i32 [ %101, %99 ], [ %108, %103 ]
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 27
  %115 = load i32, i32* %114, align 4
  %116 = or i32 %115, 64
  store i32 %116, i32* %114, align 4
  br i1 %113, label %129, label %117

117:                                              ; preds = %111
  %118 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 3
  br label %119

119:                                              ; preds = %117, %119
  %120 = phi i64 [ 0, %117 ], [ %125, %119 ]
  %121 = load i64, i64* %118, align 8
  %122 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* %0, i64 %121) #9
  %123 = load i8**, i8*** %84, align 8
  %124 = getelementptr inbounds i8*, i8** %123, i64 %120
  store i8* %122, i8** %124, align 8
  %125 = add nuw nsw i64 %120, 1
  %126 = load i32, i32* %9, align 4
  %127 = zext i32 %126 to i64
  %128 = icmp ult i64 %125, %127
  br i1 %128, label %119, label %129

129:                                              ; preds = %119, %95, %111, %83
  %130 = load i8**, i8*** %84, align 8
  tail call void @cr_png_read_image(%struct.png_struct_def* %0, i8** %130)
  %131 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %1, i64 0, i32 2
  %132 = load i32, i32* %131, align 8
  %133 = or i32 %132, 32768
  store i32 %133, i32* %131, align 8
  tail call void @cr_png_read_end(%struct.png_struct_def* %0, %struct.png_info_def* %1)
  br label %134

134:                                              ; preds = %4, %129
  ret void
}

declare void @cr_png_set_scale_16(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_strip_16(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_strip_alpha(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_packing(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_packswap(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_expand(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_shift(%struct.png_struct_def*, %struct.png_color_8_struct*) local_unnamed_addr #2

declare void @cr_png_set_bgr(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_swap_alpha(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_swap(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_gray_to_rgb(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_expand_16(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_free_data(%struct.png_struct_def*, %struct.png_info_def*, i32, i32) local_unnamed_addr #2

declare noalias i8* @cr_png_malloc(%struct.png_struct_def*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_begin_read_from_stdio(%struct.png_image*, %struct._IO_FILE*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_image* %0, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %24

8:                                                ; preds = %4
  %9 = icmp eq %struct._IO_FILE* %1, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %8
  %11 = tail call fastcc i32 @png_image_read_init(%struct.png_image* nonnull %0)
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %26, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %15 = load %struct.png_control*, %struct.png_control** %14, align 8
  %16 = getelementptr inbounds %struct.png_control, %struct.png_control* %15, i64 0, i32 0
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %16, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i64 0, i32 9
  %19 = bitcast i8** %18 to %struct._IO_FILE**
  store %struct._IO_FILE* %1, %struct._IO_FILE** %19, align 8
  %20 = bitcast %struct.png_image* %0 to i8*
  %21 = tail call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_header, i8* nonnull %20) #9
  br label %26

22:                                               ; preds = %8
  %23 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.15, i64 0, i64 0)) #9
  br label %26

24:                                               ; preds = %4
  %25 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.16, i64 0, i64 0)) #9
  br label %26

26:                                               ; preds = %2, %10, %24, %22, %13
  %27 = phi i32 [ %21, %13 ], [ %23, %22 ], [ %25, %24 ], [ 0, %2 ], [ 0, %10 ]
  ret i32 %27
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @png_image_read_init(%struct.png_image*) unnamed_addr #0 {
  %2 = alloca %struct.png_struct_def*, align 8
  %3 = alloca %struct.png_info_def*, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = icmp eq %struct.png_control* %5, null
  br i1 %6, label %7, label %42

7:                                                ; preds = %1
  %8 = bitcast %struct.png_struct_def** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  store %struct.png_struct_def* inttoptr (i64 -6148914691236517206 to %struct.png_struct_def*), %struct.png_struct_def** %2, align 8
  %9 = bitcast %struct.png_image* %0 to i8*
  %10 = tail call noalias %struct.png_struct_def* @cr_png_create_png_struct(i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.27, i64 0, i64 0), i8* %9, void (%struct.png_struct_def*, i8*)* nonnull @cr_png_safe_error, void (%struct.png_struct_def*, i8*)* nonnull @cr_png_safe_warning, i8* null, i8* (%struct.png_struct_def*, i64)* null, void (%struct.png_struct_def*, i8*)* null) #9
  %11 = icmp eq %struct.png_struct_def* %10, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %7
  store %struct.png_struct_def* null, %struct.png_struct_def** %2, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 104, i1 false)
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  store i32 1, i32* %13, align 8
  br label %38

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i64 0, i32 15
  store i32 32768, i32* %15, align 4
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i64 0, i32 131
  store i32 8192, i32* %16, align 8
  %17 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %10, i64 0, i32 16
  %18 = load i32, i32* %17, align 8
  %19 = or i32 %18, 3145728
  store i32 %19, i32* %17, align 8
  tail call void @cr_png_set_read_fn(%struct.png_struct_def* nonnull %10, i8* null, void (%struct.png_struct_def*, i8*, i64)* null) #9
  store %struct.png_struct_def* %10, %struct.png_struct_def** %2, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 104, i1 false)
  %20 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  store i32 1, i32* %20, align 8
  %21 = bitcast %struct.png_info_def** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #9
  %22 = tail call noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def* nonnull %10) #9
  store %struct.png_info_def* %22, %struct.png_info_def** %3, align 8
  %23 = icmp eq %struct.png_info_def* %22, null
  %24 = ptrtoint %struct.png_struct_def* %10 to i64
  %25 = ptrtoint %struct.png_info_def* %22 to i64
  br i1 %23, label %30, label %26

26:                                               ; preds = %14
  %27 = tail call noalias i8* @cr_png_malloc_warn(%struct.png_struct_def* nonnull %10, i64 48) #9
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %26
  call void @cr_png_destroy_info_struct(%struct.png_struct_def* nonnull %10, %struct.png_info_def** nonnull %3) #9
  br label %30

30:                                               ; preds = %14, %29
  call void @cr_png_destroy_read_struct(%struct.png_struct_def** nonnull %2, %struct.png_info_def** null, %struct.png_info_def** null)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %38

31:                                               ; preds = %26
  %32 = getelementptr inbounds i8, i8* %27, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 0, i64 32, i1 false)
  %33 = bitcast i8* %27 to i64*
  store i64 %24, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %27, i64 8
  %35 = bitcast i8* %34 to i64*
  store i64 %25, i64* %35, align 8
  %36 = getelementptr inbounds i8, i8* %27, i64 40
  store i8 0, i8* %36, align 8
  %37 = bitcast %struct.png_image* %0 to i8**
  store i8* %27, i8** %37, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #9
  br label %40

38:                                               ; preds = %30, %12
  %39 = call i32 @cr_png_image_error(%struct.png_image* %0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.28, i64 0, i64 0)) #9
  br label %40

40:                                               ; preds = %31, %38
  %41 = phi i32 [ %39, %38 ], [ 1, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  br label %44

42:                                               ; preds = %1
  %43 = tail call i32 @cr_png_image_error(%struct.png_image* %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.29, i64 0, i64 0)) #9
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i32 [ %41, %40 ], [ %43, %42 ]
  ret i32 %45
}

declare i32 @cr_png_safe_execute(%struct.png_image*, i32 (i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_header(i8* nocapture) #0 {
  %2 = bitcast i8* %0 to %struct.png_control**
  %3 = load %struct.png_control*, %struct.png_control** %2, align 8
  %4 = getelementptr inbounds %struct.png_control, %struct.png_control* %3, i64 0, i32 0
  %5 = load %struct.png_struct_def*, %struct.png_struct_def** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %3, i64 0, i32 1
  %7 = load %struct.png_info_def*, %struct.png_info_def** %6, align 8
  tail call void @cr_png_set_benign_errors(%struct.png_struct_def* %5, i32 1) #9
  tail call void @cr_png_read_info(%struct.png_struct_def* %5, %struct.png_info_def* %7)
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 37
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds i8, i8* %0, i64 12
  %11 = bitcast i8* %10 to i32*
  store i32 %9, i32* %11, align 4
  %12 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 38
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i8, i8* %0, i64 16
  %15 = bitcast i8* %14 to i32*
  store i32 %13, i32* %15, align 8
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 60
  %17 = load i8, i8* %16, align 1, !alias.scope !13
  %18 = and i8 %17, 2
  %19 = zext i8 %18 to i32
  %20 = and i8 %17, 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %1
  %23 = or i32 %19, 1
  br label %30

24:                                               ; preds = %1
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 54
  %26 = load i16, i16* %25, align 2, !alias.scope !13
  %27 = icmp ne i16 %26, 0
  %28 = zext i1 %27 to i32
  %29 = or i32 %28, %19
  br label %30

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %23, %22 ], [ %29, %24 ]
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 61
  %33 = load i8, i8* %32, align 2, !alias.scope !13
  %34 = icmp eq i8 %33, 16
  %35 = or i32 %31, 4
  %36 = select i1 %34, i32 %35, i32 %31
  %37 = shl i8 %17, 3
  %38 = and i8 %37, 8
  %39 = zext i8 %38 to i32
  %40 = or i32 %36, %39
  %41 = getelementptr inbounds i8, i8* %0, i64 20
  %42 = bitcast i8* %41 to i32*
  store i32 %40, i32* %42, align 4
  %43 = and i32 %36, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %30
  %46 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 134, i32 4
  %47 = load i16, i16* %46, align 2
  %48 = and i16 %47, -32702
  %49 = icmp eq i16 %48, 2
  br i1 %49, label %50, label %55

50:                                               ; preds = %45
  %51 = getelementptr inbounds i8, i8* %0, i64 24
  %52 = bitcast i8* %51 to i32*
  %53 = load i32, i32* %52, align 8
  %54 = or i32 %53, 1
  store i32 %54, i32* %52, align 8
  br label %55

55:                                               ; preds = %30, %50, %45
  %56 = load i8, i8* %16, align 1
  switch i8 %56, label %69 [
    i8 0, label %57
    i8 3, label %61
  ]

57:                                               ; preds = %55
  %58 = load i8, i8* %32, align 2
  %59 = zext i8 %58 to i32
  %60 = shl i32 1, %59
  br label %65

61:                                               ; preds = %55
  %62 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %5, i64 0, i32 53
  %63 = load i16, i16* %62, align 8
  %64 = zext i16 %63 to i32
  br label %65

65:                                               ; preds = %61, %57
  %66 = phi i32 [ %64, %61 ], [ %60, %57 ]
  %67 = icmp ult i32 %66, 256
  %68 = select i1 %67, i32 %66, i32 256
  br label %69

69:                                               ; preds = %65, %55
  %70 = phi i32 [ 256, %55 ], [ %68, %65 ]
  %71 = getelementptr inbounds i8, i8* %0, i64 28
  %72 = bitcast i8* %71 to i32*
  store i32 %70, i32* %72, align 4
  ret i32 1
}

declare i32 @cr_png_image_error(%struct.png_image*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_begin_read_from_file(%struct.png_image*, i8* readonly) local_unnamed_addr #0 {
  %3 = icmp eq %struct.png_image* %0, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %8, label %38

8:                                                ; preds = %4
  %9 = icmp eq i8* %1, null
  br i1 %9, label %36, label %10

10:                                               ; preds = %8
  %11 = tail call %struct._IO_FILE* @fopen64(i8* nonnull %1, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.17, i64 0, i64 0))
  %12 = icmp eq %struct._IO_FILE* %11, null
  br i1 %12, label %29, label %13

13:                                               ; preds = %10
  %14 = tail call fastcc i32 @png_image_read_init(%struct.png_image* nonnull %0)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %18 = load %struct.png_control*, %struct.png_control** %17, align 8
  %19 = getelementptr inbounds %struct.png_control, %struct.png_control* %18, i64 0, i32 0
  %20 = load %struct.png_struct_def*, %struct.png_struct_def** %19, align 8
  %21 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %20, i64 0, i32 9
  %22 = bitcast i8** %21 to %struct._IO_FILE**
  store %struct._IO_FILE* %11, %struct._IO_FILE** %22, align 8
  %23 = load %struct.png_control*, %struct.png_control** %17, align 8
  %24 = getelementptr inbounds %struct.png_control, %struct.png_control* %23, i64 0, i32 5
  %25 = load i8, i8* %24, align 8
  %26 = or i8 %25, 2
  store i8 %26, i8* %24, align 8
  %27 = bitcast %struct.png_image* %0 to i8*
  %28 = tail call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_header, i8* nonnull %27) #9
  br label %40

29:                                               ; preds = %10
  %30 = tail call i32* @__errno_location() #11
  %31 = load i32, i32* %30, align 4
  %32 = tail call i8* @strerror(i32 %31) #9
  %33 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* %32) #9
  br label %40

34:                                               ; preds = %13
  %35 = tail call i32 @fclose(%struct._IO_FILE* nonnull %11)
  br label %40

36:                                               ; preds = %8
  %37 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.18, i64 0, i64 0)) #9
  br label %40

38:                                               ; preds = %4
  %39 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.19, i64 0, i64 0)) #9
  br label %40

40:                                               ; preds = %2, %29, %16, %34, %38, %36
  %41 = phi i32 [ %37, %36 ], [ %39, %38 ], [ 0, %34 ], [ 0, %2 ], [ %33, %29 ], [ %28, %16 ]
  ret i32 %41
}

; Function Attrs: nofree nounwind
declare noalias %struct._IO_FILE* @fopen64(i8* nocapture readonly, i8* nocapture readonly) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare i32 @fclose(%struct._IO_FILE* nocapture) local_unnamed_addr #5

; Function Attrs: nounwind
declare i8* @strerror(i32) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_begin_read_from_memory(%struct.png_image*, i8*, i64) local_unnamed_addr #0 {
  %4 = icmp eq %struct.png_image* %0, null
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %35

9:                                                ; preds = %5
  %10 = icmp ne i8* %1, null
  %11 = icmp ne i64 %2, 0
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %33

13:                                               ; preds = %9
  %14 = tail call fastcc i32 @png_image_read_init(%struct.png_image* nonnull %0)
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %37, label %16

16:                                               ; preds = %13
  %17 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %18 = load %struct.png_control*, %struct.png_control** %17, align 8
  %19 = getelementptr inbounds %struct.png_control, %struct.png_control* %18, i64 0, i32 3
  store i8* %1, i8** %19, align 8
  %20 = load %struct.png_control*, %struct.png_control** %17, align 8
  %21 = getelementptr inbounds %struct.png_control, %struct.png_control* %20, i64 0, i32 4
  store i64 %2, i64* %21, align 8
  %22 = bitcast %struct.png_image* %0 to i8*
  %23 = load %struct.png_control*, %struct.png_control** %17, align 8
  %24 = getelementptr inbounds %struct.png_control, %struct.png_control* %23, i64 0, i32 0
  %25 = load %struct.png_struct_def*, %struct.png_struct_def** %24, align 8
  %26 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %25, i64 0, i32 9
  %27 = bitcast i8** %26 to %struct.png_image**
  store %struct.png_image* %0, %struct.png_image** %27, align 8
  %28 = load %struct.png_control*, %struct.png_control** %17, align 8
  %29 = getelementptr inbounds %struct.png_control, %struct.png_control* %28, i64 0, i32 0
  %30 = load %struct.png_struct_def*, %struct.png_struct_def** %29, align 8
  %31 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %30, i64 0, i32 8
  store void (%struct.png_struct_def*, i8*, i64)* @png_image_memory_read, void (%struct.png_struct_def*, i8*, i64)** %31, align 8
  %32 = tail call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_header, i8* nonnull %22) #9
  br label %37

33:                                               ; preds = %9
  %34 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.20, i64 0, i64 0)) #9
  br label %37

35:                                               ; preds = %5
  %36 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.21, i64 0, i64 0)) #9
  br label %37

37:                                               ; preds = %3, %13, %35, %33, %16
  %38 = phi i32 [ %32, %16 ], [ %34, %33 ], [ %36, %35 ], [ 0, %3 ], [ 0, %13 ]
  ret i32 %38
}

; Function Attrs: nounwind ssp uwtable
define internal void @png_image_memory_read(%struct.png_struct_def*, i8* nocapture, i64) #0 {
  %4 = icmp eq %struct.png_struct_def* %0, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %0, i64 0, i32 9
  %7 = bitcast i8** %6 to %struct.png_image**
  %8 = load %struct.png_image*, %struct.png_image** %7, align 8
  %9 = icmp eq %struct.png_image* %8, null
  br i1 %9, label %26, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 0
  %12 = load %struct.png_control*, %struct.png_control** %11, align 8
  %13 = icmp eq %struct.png_control* %12, null
  br i1 %13, label %26, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.png_control, %struct.png_control* %12, i64 0, i32 3
  %16 = load i8*, i8** %15, align 8
  %17 = getelementptr inbounds %struct.png_control, %struct.png_control* %12, i64 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i8* %16, null
  %20 = icmp ult i64 %18, %2
  %21 = or i1 %19, %20
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1, i8* nonnull align 1 %16, i64 %2, i1 false)
  %23 = getelementptr inbounds i8, i8* %16, i64 %2
  store i8* %23, i8** %15, align 8
  %24 = sub i64 %18, %2
  store i64 %24, i64* %17, align 8
  br label %27

25:                                               ; preds = %14
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.30, i64 0, i64 0)) #10
  unreachable

26:                                               ; preds = %10, %5
  tail call void @cr_png_error(%struct.png_struct_def* nonnull %0, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0)) #10
  unreachable

27:                                               ; preds = %3, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @cr_png_image_finish_read(%struct.png_image*, %struct.png_color_struct*, i8*, i32, i8*) local_unnamed_addr #0 {
  %6 = alloca %struct.png_image_read_control, align 8
  %7 = icmp eq %struct.png_image* %0, null
  br i1 %7, label %86, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %84

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 8
  %16 = icmp eq i32 %15, 0
  %17 = and i32 %14, 3
  %18 = add nuw nsw i32 %17, 1
  %19 = select i1 %16, i32 %18, i32 1
  %20 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = udiv i32 2147483647, %19
  %23 = icmp ugt i32 %21, %22
  br i1 %23, label %82, label %24

24:                                               ; preds = %12
  %25 = mul i32 %19, %21
  %26 = icmp eq i32 %3, 0
  %27 = select i1 %26, i32 %25, i32 %3
  %28 = icmp slt i32 %27, 0
  %29 = sub nsw i32 0, %27
  %30 = select i1 %28, i32 %29, i32 %27
  %31 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 0
  %32 = load %struct.png_control*, %struct.png_control** %31, align 8
  %33 = icmp eq %struct.png_control* %32, null
  %34 = icmp eq i8* %2, null
  %35 = or i1 %34, %33
  %36 = icmp ult i32 %30, %25
  %37 = or i1 %36, %35
  br i1 %37, label %80, label %38

38:                                               ; preds = %24
  %39 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  br i1 %16, label %41, label %45

41:                                               ; preds = %38
  %42 = lshr i32 %14, 2
  %43 = and i32 %42, 1
  %44 = add nuw nsw i32 %43, 1
  br label %45

45:                                               ; preds = %38, %41
  %46 = phi i32 [ %44, %41 ], [ 1, %38 ]
  %47 = udiv i32 -1, %46
  %48 = udiv i32 %47, %30
  %49 = icmp ugt i32 %40, %48
  br i1 %49, label %78, label %50

50:                                               ; preds = %45
  br i1 %16, label %57, label %51

51:                                               ; preds = %50
  %52 = getelementptr inbounds %struct.png_image, %struct.png_image* %0, i64 0, i32 6
  %53 = load i32, i32* %52, align 4
  %54 = icmp ne i32 %53, 0
  %55 = icmp ne i8* %4, null
  %56 = and i1 %55, %54
  br i1 %56, label %57, label %76

57:                                               ; preds = %51, %50
  %58 = bitcast %struct.png_image_read_control* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %58) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 80, i1 false)
  %59 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 0
  store %struct.png_image* %0, %struct.png_image** %59, align 8
  %60 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 1
  store i8* %2, i8** %60, align 8
  %61 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 2
  store i32 %27, i32* %61, align 8
  %62 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 3
  store i8* %4, i8** %62, align 8
  %63 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 4
  store %struct.png_color_struct* %1, %struct.png_color_struct** %63, align 8
  %64 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %6, i64 0, i32 5
  store i8* null, i8** %64, align 8
  br i1 %16, label %72, label %65

65:                                               ; preds = %57
  %66 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_colormap, i8* nonnull %58) #9
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %74, label %68

68:                                               ; preds = %65
  %69 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_colormapped, i8* nonnull %58) #9
  %70 = icmp ne i32 %69, 0
  %71 = zext i1 %70 to i32
  br label %74

72:                                               ; preds = %57
  %73 = call i32 @cr_png_safe_execute(%struct.png_image* nonnull %0, i32 (i8*)* nonnull @png_image_read_direct, i8* nonnull %58) #9
  br label %74

74:                                               ; preds = %68, %65, %72
  %75 = phi i32 [ %73, %72 ], [ 0, %65 ], [ %71, %68 ]
  call void @cr_png_image_free(%struct.png_image* nonnull %0) #9
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %58) #9
  br label %86

76:                                               ; preds = %51
  %77 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.22, i64 0, i64 0)) #9
  br label %86

78:                                               ; preds = %45
  %79 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.23, i64 0, i64 0)) #9
  br label %86

80:                                               ; preds = %24
  %81 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.24, i64 0, i64 0)) #9
  br label %86

82:                                               ; preds = %12
  %83 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.25, i64 0, i64 0)) #9
  br label %86

84:                                               ; preds = %8
  %85 = tail call i32 @cr_png_image_error(%struct.png_image* nonnull %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.26, i64 0, i64 0)) #9
  br label %86

86:                                               ; preds = %5, %82, %80, %78, %76, %74, %84
  %87 = phi i32 [ %85, %84 ], [ %83, %82 ], [ %75, %74 ], [ %77, %76 ], [ %79, %78 ], [ %81, %80 ], [ 0, %5 ]
  ret i32 %87
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_colormap(i8*) #0 {
  %2 = alloca %struct.png_color_16_struct, align 2
  %3 = alloca %struct.png_color_16_struct, align 2
  %4 = alloca %struct.png_color_16_struct, align 2
  %5 = alloca %struct.png_color_16_struct, align 2
  %6 = bitcast i8* %0 to %struct.png_image_read_control*
  %7 = bitcast i8* %0 to %struct.png_image**
  %8 = load %struct.png_image*, %struct.png_image** %7, align 8
  %9 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 0
  %10 = load %struct.png_control*, %struct.png_control** %9, align 8
  %11 = getelementptr inbounds %struct.png_control, %struct.png_control* %10, i64 0, i32 0
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %13 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 4
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, 4
  %16 = icmp ne i32 %15, 0
  %17 = select i1 %16, i32 2, i32 1
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 60
  %19 = load i8, i8* %18, align 1
  %20 = and i8 %19, 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %1
  %23 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %24 = load i16, i16* %23, align 2
  %25 = icmp eq i16 %24, 0
  br i1 %25, label %49, label %26

26:                                               ; preds = %22, %1
  %27 = and i32 %14, 1
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %49

29:                                               ; preds = %26
  br i1 %16, label %51, label %30

30:                                               ; preds = %29
  %31 = getelementptr inbounds i8, i8* %0, i64 32
  %32 = bitcast i8* %31 to %struct.png_color_struct**
  %33 = load %struct.png_color_struct*, %struct.png_color_struct** %32, align 8
  %34 = icmp eq %struct.png_color_struct* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %30
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.32, i64 0, i64 0)) #10
  unreachable

36:                                               ; preds = %30
  %37 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %33, i64 0, i32 1
  %38 = load i8, i8* %37, align 1
  %39 = zext i8 %38 to i32
  %40 = and i32 %14, 2
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %51, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %33, i64 0, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %33, i64 0, i32 2
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  br label %51

49:                                               ; preds = %22, %26
  %50 = select i1 %16, i32 65535, i32 255
  br label %51

51:                                               ; preds = %49, %36, %29, %42
  %52 = phi i32 [ %45, %42 ], [ 0, %29 ], [ %39, %36 ], [ %50, %49 ]
  %53 = phi i32 [ %39, %42 ], [ 0, %29 ], [ %39, %36 ], [ %50, %49 ]
  %54 = phi i32 [ %48, %42 ], [ 0, %29 ], [ %39, %36 ], [ %50, %49 ]
  %55 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 134
  %56 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 134, i32 4
  %57 = load i16, i16* %56, align 2
  %58 = and i16 %57, 1
  %59 = icmp eq i16 %58, 0
  br i1 %59, label %60, label %74

60:                                               ; preds = %51
  %61 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 61
  %62 = load i8, i8* %61, align 2
  %63 = icmp eq i8 %62, 16
  br i1 %63, label %64, label %69

64:                                               ; preds = %60
  %65 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 5
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %64, %60
  br label %70

70:                                               ; preds = %64, %69
  %71 = phi i32 [ 45455, %69 ], [ 100000, %64 ]
  %72 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %55, i64 0, i32 0
  store i32 %71, i32* %72, align 8
  %73 = or i16 %57, 1
  store i16 %73, i16* %56, align 2
  br label %74

74:                                               ; preds = %70, %51
  switch i8 %19, label %844 [
    i8 0, label %75
    i8 4, label %168
    i8 2, label %317
    i8 6, label %317
    i8 3, label %672
  ]

75:                                               ; preds = %74
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 61
  %77 = load i8, i8* %76, align 2
  %78 = icmp ult i8 %77, 9
  br i1 %78, label %79, label %119

79:                                               ; preds = %75
  %80 = zext i8 %77 to i32
  %81 = shl i32 1, %80
  %82 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %83 = load i32, i32* %82, align 4
  %84 = icmp ugt i32 %81, %83
  br i1 %84, label %85, label %86

85:                                               ; preds = %79
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.33, i64 0, i64 0)) #10
  unreachable

86:                                               ; preds = %79
  %87 = trunc i32 %81 to i8
  %88 = add i8 %87, -1
  %89 = udiv i8 -1, %88
  %90 = zext i8 %89 to i32
  %91 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %92 = load i16, i16* %91, align 2
  %93 = icmp eq i16 %92, 0
  br i1 %93, label %102, label %94

94:                                               ; preds = %86
  %95 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 89, i32 4
  %96 = load i16, i16* %95, align 8
  %97 = zext i16 %96 to i32
  %98 = and i32 %14, 1
  %99 = icmp eq i32 %98, 0
  %100 = select i1 %16, i32 65535, i32 255
  %101 = select i1 %99, i32 %100, i32 0
  br label %102

102:                                              ; preds = %94, %86
  %103 = phi i32 [ 256, %86 ], [ %97, %94 ]
  %104 = phi i32 [ 0, %86 ], [ %101, %94 ]
  br label %105

105:                                              ; preds = %102, %111
  %106 = phi i32 [ 0, %102 ], [ %113, %111 ]
  %107 = phi i32 [ 0, %102 ], [ %112, %111 ]
  %108 = icmp eq i32 %107, %103
  br i1 %108, label %110, label %109

109:                                              ; preds = %105
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %107, i32 %106, i32 %106, i32 %106, i32 255, i32 3)
  br label %111

110:                                              ; preds = %105
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %103, i32 %52, i32 %53, i32 %54, i32 %104, i32 %17)
  br label %111

111:                                              ; preds = %109, %110
  %112 = add nuw i32 %107, 1
  %113 = add i32 %106, %90
  %114 = icmp ult i32 %112, %81
  br i1 %114, label %105, label %115

115:                                              ; preds = %111
  %116 = load i8, i8* %76, align 2
  %117 = icmp ult i8 %116, 8
  br i1 %117, label %118, label %867

118:                                              ; preds = %115
  tail call void @cr_png_set_packing(%struct.png_struct_def* %12) #9
  br label %867

119:                                              ; preds = %75
  %120 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %121 = load i32, i32* %120, align 4
  %122 = icmp ult i32 %121, 256
  br i1 %122, label %123, label %124

123:                                              ; preds = %119
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.34, i64 0, i64 0)) #10
  unreachable

124:                                              ; preds = %119, %124
  %125 = phi i32 [ %126, %124 ], [ 0, %119 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %125, i32 %125, i32 %125, i32 %125, i32 255, i32 1) #9
  %126 = add nuw nsw i32 %125, 1
  %127 = icmp eq i32 %126, 256
  br i1 %127, label %128, label %124

128:                                              ; preds = %124
  %129 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %130 = load i16, i16* %129, align 2
  %131 = icmp eq i16 %130, 0
  br i1 %131, label %863, label %132

132:                                              ; preds = %128
  %133 = and i32 %14, 1
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %166

135:                                              ; preds = %132
  %136 = icmp eq i32 %52, %53
  %137 = icmp eq i32 %53, %54
  %138 = and i1 %136, %137
  br i1 %138, label %139, label %164

139:                                              ; preds = %135
  %140 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %140) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %140, i8 -86, i64 10, i1 false)
  br i1 %16, label %141, label %157

141:                                              ; preds = %139
  %142 = mul nuw nsw i32 %52, 255
  %143 = lshr i32 %142, 15
  %144 = zext i32 %143 to i64
  %145 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %144
  %146 = load i16, i16* %145, align 2
  %147 = zext i16 %146 to i32
  %148 = and i32 %142, 32767
  %149 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %144
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = mul nuw nsw i32 %148, %151
  %153 = lshr i32 %152, 12
  %154 = add nuw nsw i32 %153, %147
  %155 = lshr i32 %154, 8
  %156 = and i32 %155, 255
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %156, i32 %52, i32 %52, i32 %52, i32 65535, i32 2)
  br label %157

157:                                              ; preds = %141, %139
  %158 = phi i32 [ %156, %141 ], [ %52, %139 ]
  store i8 0, i8* %140, align 2
  %159 = trunc i32 %158 to i16
  %160 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 3
  store i16 %159, i16* %160, align 2
  %161 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 2
  store i16 %159, i16* %161, align 2
  %162 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 1
  store i16 %159, i16* %162, align 2
  %163 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %2, i64 0, i32 4
  store i16 %159, i16* %163, align 2
  call void @cr_png_set_background_fixed(%struct.png_struct_def* %12, %struct.png_color_16_struct* nonnull %2, i32 1, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %140) #9
  br label %863

164:                                              ; preds = %135
  %165 = select i1 %16, i32 65535, i32 255
  br label %166

166:                                              ; preds = %132, %164
  %167 = phi i32 [ %165, %164 ], [ 0, %132 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 254, i32 %52, i32 %53, i32 %54, i32 %167, i32 %17)
  br label %845

168:                                              ; preds = %74
  %169 = and i32 %14, 1
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %178, label %171

171:                                              ; preds = %168
  %172 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %173 = load i32, i32* %172, align 4
  %174 = icmp ult i32 %173, 256
  br i1 %174, label %175, label %176

175:                                              ; preds = %171
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.35, i64 0, i64 0)) #10
  unreachable

176:                                              ; preds = %171
  %177 = tail call fastcc i32 @make_ga_colormap(%struct.png_image_read_control* %6)
  br label %863

178:                                              ; preds = %168
  %179 = and i32 %14, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %185, label %181

181:                                              ; preds = %178
  %182 = icmp eq i32 %52, %53
  %183 = icmp eq i32 %53, %54
  %184 = and i1 %182, %183
  br i1 %184, label %185, label %219

185:                                              ; preds = %181, %178
  %186 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %186) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %186, i8 -86, i64 10, i1 false)
  %187 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %188 = load i32, i32* %187, align 4
  %189 = icmp ult i32 %188, 256
  br i1 %189, label %190, label %191

190:                                              ; preds = %185
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.37, i64 0, i64 0)) #10
  unreachable

191:                                              ; preds = %185, %191
  %192 = phi i32 [ %193, %191 ], [ 0, %185 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %192, i32 %192, i32 %192, i32 %192, i32 255, i32 1) #9
  %193 = add nuw nsw i32 %192, 1
  %194 = icmp eq i32 %193, 256
  br i1 %194, label %195, label %191

195:                                              ; preds = %191
  br i1 %16, label %196, label %212

196:                                              ; preds = %195
  %197 = mul nuw nsw i32 %53, 255
  %198 = lshr i32 %197, 15
  %199 = zext i32 %198 to i64
  %200 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %199
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  %203 = and i32 %197, 32767
  %204 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %199
  %205 = load i8, i8* %204, align 1
  %206 = zext i8 %205 to i32
  %207 = mul nuw nsw i32 %203, %206
  %208 = lshr i32 %207, 12
  %209 = add nuw nsw i32 %208, %202
  %210 = lshr i32 %209, 8
  %211 = and i32 %210, 255
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %211, i32 %53, i32 %53, i32 %53, i32 65535, i32 2)
  br label %212

212:                                              ; preds = %196, %195
  %213 = phi i32 [ %211, %196 ], [ %53, %195 ]
  store i8 0, i8* %186, align 2
  %214 = trunc i32 %213 to i16
  %215 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 3
  store i16 %214, i16* %215, align 2
  %216 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 2
  store i16 %214, i16* %216, align 2
  %217 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 1
  store i16 %214, i16* %217, align 2
  %218 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 4
  store i16 %214, i16* %218, align 2
  call void @cr_png_set_background_fixed(%struct.png_struct_def* %12, %struct.png_color_16_struct* nonnull %3, i32 1, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %186) #9
  br label %863

219:                                              ; preds = %181
  %220 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %221 = load i32, i32* %220, align 4
  %222 = icmp ult i32 %221, 256
  br i1 %222, label %223, label %224

223:                                              ; preds = %219
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.38, i64 0, i64 0)) #10
  unreachable

224:                                              ; preds = %219, %224
  %225 = phi i32 [ %229, %224 ], [ 0, %219 ]
  %226 = shl i32 %225, 8
  %227 = or i32 %226, 115
  %228 = udiv i32 %227, 231
  %229 = add nuw nsw i32 %225, 1
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %225, i32 %228, i32 %228, i32 %228, i32 255, i32 1)
  %230 = icmp eq i32 %229, 231
  br i1 %230, label %231, label %224

231:                                              ; preds = %224
  %232 = select i1 %16, i32 65535, i32 255
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 231, i32 %52, i32 %53, i32 %54, i32 %232, i32 %17)
  br i1 %16, label %246, label %233

233:                                              ; preds = %231
  %234 = zext i32 %52 to i64
  %235 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %234
  %236 = load i16, i16* %235, align 2
  %237 = zext i16 %236 to i32
  %238 = zext i32 %53 to i64
  %239 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %238
  %240 = load i16, i16* %239, align 2
  %241 = zext i16 %240 to i32
  %242 = zext i32 %54 to i64
  %243 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %242
  %244 = load i16, i16* %243, align 2
  %245 = zext i16 %244 to i32
  br label %246

246:                                              ; preds = %231, %233
  %247 = phi i32 [ %237, %233 ], [ %52, %231 ]
  %248 = phi i32 [ %241, %233 ], [ %53, %231 ]
  %249 = phi i32 [ %245, %233 ], [ %54, %231 ]
  br label %250

250:                                              ; preds = %314, %246
  %251 = phi i32 [ 1, %246 ], [ %315, %314 ]
  %252 = phi i32 [ 232, %246 ], [ %266, %314 ]
  %253 = mul nuw nsw i32 %251, 51
  %254 = sub nuw nsw i32 255, %253
  %255 = mul i32 %254, %247
  %256 = mul i32 %254, %248
  %257 = mul i32 %254, %249
  br label %258

258:                                              ; preds = %258, %250
  %259 = phi i64 [ 0, %250 ], [ %312, %258 ]
  %260 = phi i32 [ %252, %250 ], [ %266, %258 ]
  %261 = mul nuw nsw i64 %259, 51
  %262 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %261
  %263 = load i16, i16* %262, align 2
  %264 = zext i16 %263 to i32
  %265 = mul i32 %253, %264
  %266 = add i32 %260, 1
  %267 = add i32 %265, %255
  %268 = lshr i32 %267, 15
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %269
  %271 = load i16, i16* %270, align 2
  %272 = zext i16 %271 to i32
  %273 = and i32 %267, 32767
  %274 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %269
  %275 = load i8, i8* %274, align 1
  %276 = zext i8 %275 to i32
  %277 = mul nuw nsw i32 %273, %276
  %278 = lshr i32 %277, 12
  %279 = add nuw nsw i32 %278, %272
  %280 = lshr i32 %279, 8
  %281 = and i32 %280, 255
  %282 = add i32 %265, %256
  %283 = lshr i32 %282, 15
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %284
  %286 = load i16, i16* %285, align 2
  %287 = zext i16 %286 to i32
  %288 = and i32 %282, 32767
  %289 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %284
  %290 = load i8, i8* %289, align 1
  %291 = zext i8 %290 to i32
  %292 = mul nuw nsw i32 %288, %291
  %293 = lshr i32 %292, 12
  %294 = add nuw nsw i32 %293, %287
  %295 = lshr i32 %294, 8
  %296 = and i32 %295, 255
  %297 = add i32 %265, %257
  %298 = lshr i32 %297, 15
  %299 = zext i32 %298 to i64
  %300 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %299
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i32
  %303 = and i32 %297, 32767
  %304 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %299
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i32
  %307 = mul nuw nsw i32 %303, %306
  %308 = lshr i32 %307, 12
  %309 = add nuw nsw i32 %308, %302
  %310 = lshr i32 %309, 8
  %311 = and i32 %310, 255
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %260, i32 %281, i32 %296, i32 %311, i32 255, i32 1)
  %312 = add nuw nsw i64 %259, 1
  %313 = icmp eq i64 %312, 6
  br i1 %313, label %314, label %258

314:                                              ; preds = %258
  %315 = add nuw nsw i32 %251, 1
  %316 = icmp eq i32 %315, 5
  br i1 %316, label %863, label %250

317:                                              ; preds = %74, %74
  %318 = and i32 %14, 2
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %419

320:                                              ; preds = %317
  tail call void @cr_png_set_rgb_to_gray_fixed(%struct.png_struct_def* %12, i32 1, i32 -1, i32 -1) #9
  %321 = load i8, i8* %18, align 1
  %322 = icmp eq i8 %321, 6
  br i1 %322, label %327, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %325 = load i16, i16* %324, align 2
  %326 = icmp eq i16 %325, 0
  br i1 %326, label %337, label %327

327:                                              ; preds = %323, %320
  %328 = and i32 %14, 1
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %337, label %330

330:                                              ; preds = %327
  %331 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %332 = load i32, i32* %331, align 4
  %333 = icmp ult i32 %332, 256
  br i1 %333, label %334, label %335

334:                                              ; preds = %330
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.39, i64 0, i64 0)) #10
  unreachable

335:                                              ; preds = %330
  %336 = tail call fastcc i32 @make_ga_colormap(%struct.png_image_read_control* %6)
  br label %845

337:                                              ; preds = %327, %323
  %338 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %339 = load i32, i32* %338, align 4
  %340 = icmp ult i32 %339, 256
  br i1 %340, label %341, label %342

341:                                              ; preds = %337
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.40, i64 0, i64 0)) #10
  unreachable

342:                                              ; preds = %337
  br i1 %322, label %348, label %343

343:                                              ; preds = %342
  %344 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %345 = load i16, i16* %344, align 2
  %346 = icmp eq i16 %345, 0
  br i1 %346, label %347, label %348

347:                                              ; preds = %352, %354, %343
  br label %365

348:                                              ; preds = %343, %342
  %349 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %55, i64 0, i32 0
  %350 = load i32, i32* %349, align 8
  %351 = icmp slt i32 %350, 100000
  br i1 %351, label %352, label %360

352:                                              ; preds = %348
  %353 = icmp eq i32 %350, 0
  br i1 %353, label %347, label %354

354:                                              ; preds = %352
  %355 = mul nsw i32 %350, 11
  %356 = add nsw i32 %355, 2
  %357 = sdiv i32 %356, 5
  %358 = tail call i32 @cr_png_gamma_significant(i32 %357) #9
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %347, label %360

360:                                              ; preds = %348, %354
  br label %361

361:                                              ; preds = %360, %361
  %362 = phi i32 [ %363, %361 ], [ 0, %360 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %362, i32 %362, i32 %362, i32 %362, i32 255, i32 3) #9
  %363 = add nuw nsw i32 %362, 1
  %364 = icmp eq i32 %363, 256
  br i1 %364, label %369, label %361

365:                                              ; preds = %347, %365
  %366 = phi i32 [ %367, %365 ], [ 0, %347 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %366, i32 %366, i32 %366, i32 %366, i32 255, i32 1) #9
  %367 = add nuw nsw i32 %366, 1
  %368 = icmp eq i32 %367, 256
  br i1 %368, label %369, label %365

369:                                              ; preds = %361, %365
  %370 = phi i32 [ 1, %365 ], [ 3, %361 ]
  %371 = load i8, i8* %18, align 1
  %372 = icmp eq i8 %371, 6
  br i1 %372, label %377, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %375 = load i16, i16* %374, align 2
  %376 = icmp eq i16 %375, 0
  br i1 %376, label %858, label %377

377:                                              ; preds = %373, %369
  %378 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %378) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %378, i8 -86, i64 10, i1 false)
  %379 = icmp eq i32 %370, 3
  br i1 %379, label %380, label %395

380:                                              ; preds = %377
  br i1 %16, label %386, label %381

381:                                              ; preds = %380
  %382 = zext i32 %53 to i64
  %383 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %382
  %384 = load i16, i16* %383, align 2
  %385 = zext i16 %384 to i32
  br label %386

386:                                              ; preds = %380, %381
  %387 = phi i32 [ %385, %381 ], [ %53, %380 ]
  %388 = getelementptr inbounds %struct.png_colorspace, %struct.png_colorspace* %55, i64 0, i32 0
  %389 = load i32, i32* %388, align 8
  %390 = tail call zeroext i16 @cr_png_gamma_16bit_correct(i32 %387, i32 %389) #9
  %391 = zext i16 %390 to i32
  %392 = mul nuw nsw i32 %391, 255
  %393 = add nuw nsw i32 %392, 32895
  %394 = lshr i32 %393, 16
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %394, i32 %53, i32 %53, i32 %53, i32 0, i32 %17)
  br label %412

395:                                              ; preds = %377
  br i1 %16, label %396, label %412

396:                                              ; preds = %395
  %397 = mul nuw nsw i32 %53, 255
  %398 = lshr i32 %397, 15
  %399 = zext i32 %398 to i64
  %400 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %399
  %401 = load i16, i16* %400, align 2
  %402 = zext i16 %401 to i32
  %403 = and i32 %397, 32767
  %404 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %399
  %405 = load i8, i8* %404, align 1
  %406 = zext i8 %405 to i32
  %407 = mul nuw nsw i32 %403, %406
  %408 = lshr i32 %407, 12
  %409 = add nuw nsw i32 %408, %402
  %410 = lshr i32 %409, 8
  %411 = and i32 %410, 255
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %411, i32 %53, i32 %53, i32 %53, i32 0, i32 2)
  br label %412

412:                                              ; preds = %395, %396, %386
  %413 = phi i32 [ %394, %386 ], [ %411, %396 ], [ %53, %395 ]
  store i8 0, i8* %378, align 2
  %414 = trunc i32 %413 to i16
  %415 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 3
  store i16 %414, i16* %415, align 2
  %416 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 2
  store i16 %414, i16* %416, align 2
  %417 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 1
  store i16 %414, i16* %417, align 2
  %418 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %4, i64 0, i32 4
  store i16 %414, i16* %418, align 2
  call void @cr_png_set_background_fixed(%struct.png_struct_def* %12, %struct.png_color_16_struct* nonnull %4, i32 1, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %378) #9
  br label %845

419:                                              ; preds = %317
  %420 = icmp eq i8 %19, 6
  br i1 %420, label %425, label %421

421:                                              ; preds = %419
  %422 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %423 = load i16, i16* %422, align 2
  %424 = icmp eq i16 %423, 0
  br i1 %424, label %665, label %425

425:                                              ; preds = %421, %419
  %426 = and i32 %14, 1
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %451, label %428

428:                                              ; preds = %425
  %429 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %430 = load i32, i32* %429, align 4
  %431 = icmp ult i32 %430, 244
  br i1 %431, label %432, label %433

432:                                              ; preds = %428
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.42, i64 0, i64 0)) #10
  unreachable

433:                                              ; preds = %428
  %434 = tail call fastcc i32 @make_rgb_colormap(%struct.png_image_read_control* %6)
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %434, i32 255, i32 255, i32 255, i32 0, i32 1)
  %435 = add i32 %434, 1
  br label %436

436:                                              ; preds = %433, %436
  %437 = phi i32 [ 0, %433 ], [ %449, %436 ]
  %438 = phi i32 [ %435, %433 ], [ %447, %436 ]
  %439 = add i32 %438, 1
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %438, i32 %437, i32 0, i32 0, i32 128, i32 1)
  %440 = add i32 %438, 2
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %439, i32 %437, i32 0, i32 127, i32 128, i32 1)
  %441 = add i32 %438, 3
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %440, i32 %437, i32 0, i32 255, i32 128, i32 1)
  %442 = add i32 %438, 4
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %441, i32 %437, i32 127, i32 0, i32 128, i32 1)
  %443 = add i32 %438, 5
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %442, i32 %437, i32 127, i32 127, i32 128, i32 1)
  %444 = add i32 %438, 6
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %443, i32 %437, i32 127, i32 255, i32 128, i32 1)
  %445 = add i32 %438, 7
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %444, i32 %437, i32 255, i32 0, i32 128, i32 1)
  %446 = add i32 %438, 8
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %445, i32 %437, i32 255, i32 127, i32 128, i32 1)
  %447 = add i32 %438, 9
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %446, i32 %437, i32 255, i32 255, i32 128, i32 1)
  %448 = shl i32 %437, 1
  %449 = or i32 %448, 127
  %450 = icmp ult i32 %449, 256
  br i1 %450, label %436, label %845

451:                                              ; preds = %425
  %452 = and i32 %14, 3
  %453 = add nuw nsw i32 %452, 1
  %454 = lshr exact i32 %15, 2
  %455 = add nuw nsw i32 %454, 1
  %456 = mul nuw nsw i32 %455, %453
  %457 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %458 = load i32, i32* %457, align 4
  %459 = icmp ult i32 %458, 244
  br i1 %459, label %460, label %461

460:                                              ; preds = %451
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.43, i64 0, i64 0)) #10
  unreachable

461:                                              ; preds = %451
  %462 = tail call fastcc i32 @make_rgb_colormap(%struct.png_image_read_control* %6)
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %462, i32 %52, i32 %53, i32 %54, i32 0, i32 %17)
  br i1 %16, label %463, label %509

463:                                              ; preds = %461
  %464 = mul nuw nsw i32 %52, 255
  %465 = lshr i32 %464, 15
  %466 = zext i32 %465 to i64
  %467 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %466
  %468 = load i16, i16* %467, align 2
  %469 = zext i16 %468 to i32
  %470 = and i32 %464, 32767
  %471 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %466
  %472 = load i8, i8* %471, align 1
  %473 = zext i8 %472 to i32
  %474 = mul nuw nsw i32 %470, %473
  %475 = lshr i32 %474, 12
  %476 = add nuw nsw i32 %475, %469
  %477 = lshr i32 %476, 8
  %478 = and i32 %477, 255
  %479 = mul nuw nsw i32 %53, 255
  %480 = lshr i32 %479, 15
  %481 = zext i32 %480 to i64
  %482 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %481
  %483 = load i16, i16* %482, align 2
  %484 = zext i16 %483 to i32
  %485 = and i32 %479, 32767
  %486 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %481
  %487 = load i8, i8* %486, align 1
  %488 = zext i8 %487 to i32
  %489 = mul nuw nsw i32 %485, %488
  %490 = lshr i32 %489, 12
  %491 = add nuw nsw i32 %490, %484
  %492 = lshr i32 %491, 8
  %493 = and i32 %492, 255
  %494 = mul nuw nsw i32 %54, 255
  %495 = lshr i32 %494, 15
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %496
  %498 = load i16, i16* %497, align 2
  %499 = zext i16 %498 to i32
  %500 = and i32 %494, 32767
  %501 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %496
  %502 = load i8, i8* %501, align 1
  %503 = zext i8 %502 to i32
  %504 = mul nuw nsw i32 %500, %503
  %505 = lshr i32 %504, 12
  %506 = add nuw nsw i32 %505, %499
  %507 = lshr i32 %506, 8
  %508 = and i32 %507, 255
  br label %509

509:                                              ; preds = %461, %463
  %510 = phi i32 [ %478, %463 ], [ %52, %461 ]
  %511 = phi i32 [ %493, %463 ], [ %53, %461 ]
  %512 = phi i32 [ %508, %463 ], [ %53, %461 ]
  %513 = getelementptr inbounds i8, i8* %0, i64 24
  %514 = bitcast i8* %513 to i8**
  %515 = load i8*, i8** %514, align 8
  %516 = mul i32 %462, %456
  %517 = zext i32 %516 to i64
  %518 = getelementptr inbounds i8, i8* %515, i64 %517
  %519 = mul nsw i32 %510, 5
  %520 = add nuw nsw i32 %519, 130
  %521 = lshr i32 %520, 8
  %522 = mul nuw nsw i32 %521, 6
  %523 = mul nsw i32 %511, 5
  %524 = add nuw nsw i32 %523, 130
  %525 = lshr i32 %524, 8
  %526 = add nuw nsw i32 %522, %525
  %527 = mul nuw i32 %526, 6
  %528 = mul nsw i32 %512, 5
  %529 = add nuw nsw i32 %528, 130
  %530 = lshr i32 %529, 8
  %531 = add nuw nsw i32 %527, %530
  %532 = and i32 %531, 255
  %533 = mul nuw nsw i32 %532, %456
  %534 = zext i32 %533 to i64
  %535 = getelementptr inbounds i8, i8* %515, i64 %534
  %536 = zext i32 %456 to i64
  %537 = tail call i32 @bcmp(i8* %518, i8* %535, i64 %536)
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %655, label %539

539:                                              ; preds = %509
  %540 = add i32 %462, 1
  br label %541

541:                                              ; preds = %539, %651
  %542 = phi i32 [ 0, %539 ], [ %653, %651 ]
  %543 = phi i32 [ %540, %539 ], [ %557, %651 ]
  %544 = zext i32 %542 to i64
  %545 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %544
  %546 = load i16, i16* %545, align 2
  %547 = zext i16 %546 to i32
  %548 = shl nuw nsw i32 %547, 7
  br label %549

549:                                              ; preds = %541, %647
  %550 = phi i32 [ 0, %541 ], [ %649, %647 ]
  %551 = phi i32 [ %543, %541 ], [ %557, %647 ]
  %552 = zext i32 %550 to i64
  %553 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %552
  br label %554

554:                                              ; preds = %549, %642
  %555 = phi i32 [ 0, %549 ], [ %645, %642 ]
  %556 = phi i32 [ %551, %549 ], [ %557, %642 ]
  %557 = add i32 %556, 1
  %558 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %52, i32 %17) #9
  %559 = mul i32 %558, 127
  %560 = add i32 %559, %548
  br i1 %16, label %561, label %567

561:                                              ; preds = %554
  %562 = mul i32 %560, 257
  %563 = lshr i32 %562, 16
  %564 = add i32 %562, 32768
  %565 = add i32 %564, %563
  %566 = lshr i32 %565, 16
  br label %582

567:                                              ; preds = %554
  %568 = lshr i32 %560, 15
  %569 = zext i32 %568 to i64
  %570 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %569
  %571 = load i16, i16* %570, align 2
  %572 = zext i16 %571 to i32
  %573 = and i32 %560, 32767
  %574 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %569
  %575 = load i8, i8* %574, align 1
  %576 = zext i8 %575 to i32
  %577 = mul nuw nsw i32 %573, %576
  %578 = lshr i32 %577, 12
  %579 = add nuw nsw i32 %578, %572
  %580 = lshr i32 %579, 8
  %581 = and i32 %580, 255
  br label %582

582:                                              ; preds = %561, %567
  %583 = phi i32 [ %566, %561 ], [ %581, %567 ]
  %584 = load i16, i16* %553, align 2
  %585 = zext i16 %584 to i32
  %586 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %53, i32 %17) #9
  %587 = shl nuw nsw i32 %585, 7
  %588 = mul i32 %586, 127
  %589 = add i32 %588, %587
  br i1 %16, label %590, label %596

590:                                              ; preds = %582
  %591 = mul i32 %589, 257
  %592 = lshr i32 %591, 16
  %593 = add i32 %591, 32768
  %594 = add i32 %593, %592
  %595 = lshr i32 %594, 16
  br label %611

596:                                              ; preds = %582
  %597 = lshr i32 %589, 15
  %598 = zext i32 %597 to i64
  %599 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %598
  %600 = load i16, i16* %599, align 2
  %601 = zext i16 %600 to i32
  %602 = and i32 %589, 32767
  %603 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %598
  %604 = load i8, i8* %603, align 1
  %605 = zext i8 %604 to i32
  %606 = mul nuw nsw i32 %602, %605
  %607 = lshr i32 %606, 12
  %608 = add nuw nsw i32 %607, %601
  %609 = lshr i32 %608, 8
  %610 = and i32 %609, 255
  br label %611

611:                                              ; preds = %590, %596
  %612 = phi i32 [ %595, %590 ], [ %610, %596 ]
  %613 = zext i32 %555 to i64
  %614 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %613
  %615 = load i16, i16* %614, align 2
  %616 = zext i16 %615 to i32
  %617 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %54, i32 %17) #9
  %618 = shl nuw nsw i32 %616, 7
  %619 = mul i32 %617, 127
  %620 = add i32 %619, %618
  br i1 %16, label %621, label %627

621:                                              ; preds = %611
  %622 = mul i32 %620, 257
  %623 = lshr i32 %622, 16
  %624 = add i32 %622, 32768
  %625 = add i32 %624, %623
  %626 = lshr i32 %625, 16
  br label %642

627:                                              ; preds = %611
  %628 = lshr i32 %620, 15
  %629 = zext i32 %628 to i64
  %630 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %629
  %631 = load i16, i16* %630, align 2
  %632 = zext i16 %631 to i32
  %633 = and i32 %620, 32767
  %634 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %629
  %635 = load i8, i8* %634, align 1
  %636 = zext i8 %635 to i32
  %637 = mul nuw nsw i32 %633, %636
  %638 = lshr i32 %637, 12
  %639 = add nuw nsw i32 %638, %632
  %640 = lshr i32 %639, 8
  %641 = and i32 %640, 255
  br label %642

642:                                              ; preds = %621, %627
  %643 = phi i32 [ %626, %621 ], [ %641, %627 ]
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %556, i32 %583, i32 %612, i32 %643, i32 0, i32 %17)
  %644 = shl i32 %555, 1
  %645 = or i32 %644, 127
  %646 = icmp ult i32 %645, 256
  br i1 %646, label %554, label %647

647:                                              ; preds = %642
  %648 = shl i32 %550, 1
  %649 = or i32 %648, 127
  %650 = icmp ult i32 %649, 256
  br i1 %650, label %549, label %651

651:                                              ; preds = %647
  %652 = shl i32 %542, 1
  %653 = or i32 %652, 127
  %654 = icmp ult i32 %653, 256
  br i1 %654, label %541, label %845

655:                                              ; preds = %509
  %656 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %656) #9
  %657 = bitcast %struct.png_color_16_struct* %5 to i16*
  store i16 -21846, i16* %657, align 2
  store i8 0, i8* %656, align 2
  %658 = trunc i32 %52 to i16
  %659 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i64 0, i32 1
  store i16 %658, i16* %659, align 2
  %660 = trunc i32 %53 to i16
  %661 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i64 0, i32 2
  store i16 %660, i16* %661, align 2
  %662 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i64 0, i32 4
  store i16 %660, i16* %662, align 2
  %663 = trunc i32 %54 to i16
  %664 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %5, i64 0, i32 3
  store i16 %663, i16* %664, align 2
  call void @cr_png_set_background_fixed(%struct.png_struct_def* %12, %struct.png_color_16_struct* nonnull %5, i32 1, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %656) #9
  br label %863

665:                                              ; preds = %421
  %666 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %667 = load i32, i32* %666, align 4
  %668 = icmp ult i32 %667, 216
  br i1 %668, label %669, label %670

669:                                              ; preds = %665
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.45, i64 0, i64 0)) #10
  unreachable

670:                                              ; preds = %665
  %671 = tail call fastcc i32 @make_rgb_colormap(%struct.png_image_read_control* %6)
  br label %863

672:                                              ; preds = %74
  %673 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %674 = load i16, i16* %673, align 2
  %675 = icmp eq i16 %674, 0
  br i1 %675, label %679, label %676

676:                                              ; preds = %672
  %677 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 88
  %678 = load i8*, i8** %677, align 8
  br label %679

679:                                              ; preds = %672, %676
  %680 = phi i8* [ %678, %676 ], [ null, %672 ]
  %681 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 52
  %682 = load %struct.png_color_struct*, %struct.png_color_struct** %681, align 8
  %683 = icmp eq i8* %680, null
  %684 = and i32 %14, 1
  %685 = icmp eq i32 %684, 0
  %686 = xor i1 %683, true
  %687 = and i1 %685, %686
  %688 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 53
  %689 = load i16, i16* %688, align 8
  %690 = zext i16 %689 to i32
  %691 = icmp ult i32 %690, 256
  %692 = select i1 %691, i32 %690, i32 256
  %693 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %694 = load i32, i32* %693, align 4
  %695 = icmp ugt i32 %692, %694
  br i1 %695, label %702, label %696

696:                                              ; preds = %679
  %697 = icmp eq i32 %692, 0
  br i1 %697, label %839, label %698

698:                                              ; preds = %696
  %699 = zext i16 %674 to i64
  %700 = select i1 %683, i64 0, i64 %699
  %701 = zext i32 %692 to i64
  br label %703

702:                                              ; preds = %679
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.46, i64 0, i64 0)) #10
  unreachable

703:                                              ; preds = %698, %836
  %704 = phi i64 [ 0, %698 ], [ %837, %836 ]
  %705 = icmp ult i64 %704, %700
  %706 = and i1 %687, %705
  br i1 %706, label %707, label %819

707:                                              ; preds = %703
  %708 = getelementptr inbounds i8, i8* %680, i64 %704
  %709 = load i8, i8* %708, align 1
  %710 = zext i8 %709 to i32
  switch i8 %709, label %713 [
    i8 -1, label %819
    i8 0, label %711
  ]

711:                                              ; preds = %707
  %712 = trunc i64 %704 to i32
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %712, i32 %52, i32 %53, i32 %54, i32 0, i32 %17)
  br label %836

713:                                              ; preds = %707
  %714 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 0
  %715 = load i8, i8* %714, align 1
  %716 = zext i8 %715 to i32
  %717 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %716, i32 3) #9
  %718 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %52, i32 %17) #9
  %719 = mul i32 %717, %710
  %720 = xor i32 %710, 255
  %721 = mul i32 %718, %720
  %722 = add i32 %721, %719
  br i1 %16, label %723, label %729

723:                                              ; preds = %713
  %724 = mul i32 %722, 257
  %725 = lshr i32 %724, 16
  %726 = add i32 %724, 32768
  %727 = add i32 %726, %725
  %728 = lshr i32 %727, 16
  br label %744

729:                                              ; preds = %713
  %730 = lshr i32 %722, 15
  %731 = zext i32 %730 to i64
  %732 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %731
  %733 = load i16, i16* %732, align 2
  %734 = zext i16 %733 to i32
  %735 = and i32 %722, 32767
  %736 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %731
  %737 = load i8, i8* %736, align 1
  %738 = zext i8 %737 to i32
  %739 = mul nuw nsw i32 %735, %738
  %740 = lshr i32 %739, 12
  %741 = add nuw nsw i32 %740, %734
  %742 = lshr i32 %741, 8
  %743 = and i32 %742, 255
  br label %744

744:                                              ; preds = %723, %729
  %745 = phi i32 [ %728, %723 ], [ %743, %729 ]
  %746 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 1
  %747 = load i8, i8* %746, align 1
  %748 = zext i8 %747 to i32
  %749 = load i8, i8* %708, align 1
  %750 = zext i8 %749 to i32
  %751 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %748, i32 3) #9
  %752 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %53, i32 %17) #9
  %753 = mul i32 %751, %750
  %754 = xor i32 %750, 255
  %755 = mul i32 %752, %754
  %756 = add i32 %755, %753
  br i1 %16, label %757, label %763

757:                                              ; preds = %744
  %758 = mul i32 %756, 257
  %759 = lshr i32 %758, 16
  %760 = add i32 %758, 32768
  %761 = add i32 %760, %759
  %762 = lshr i32 %761, 16
  br label %778

763:                                              ; preds = %744
  %764 = lshr i32 %756, 15
  %765 = zext i32 %764 to i64
  %766 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %765
  %767 = load i16, i16* %766, align 2
  %768 = zext i16 %767 to i32
  %769 = and i32 %756, 32767
  %770 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %765
  %771 = load i8, i8* %770, align 1
  %772 = zext i8 %771 to i32
  %773 = mul nuw nsw i32 %769, %772
  %774 = lshr i32 %773, 12
  %775 = add nuw nsw i32 %774, %768
  %776 = lshr i32 %775, 8
  %777 = and i32 %776, 255
  br label %778

778:                                              ; preds = %757, %763
  %779 = phi i32 [ %762, %757 ], [ %777, %763 ]
  %780 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 2
  %781 = load i8, i8* %780, align 1
  %782 = zext i8 %781 to i32
  %783 = load i8, i8* %708, align 1
  %784 = zext i8 %783 to i32
  %785 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %782, i32 3) #9
  %786 = tail call fastcc i32 @decode_gamma(%struct.png_image_read_control* %6, i32 %54, i32 %17) #9
  %787 = mul i32 %785, %784
  %788 = xor i32 %784, 255
  %789 = mul i32 %786, %788
  %790 = add i32 %789, %787
  br i1 %16, label %791, label %797

791:                                              ; preds = %778
  %792 = mul i32 %790, 257
  %793 = lshr i32 %792, 16
  %794 = add i32 %792, 32768
  %795 = add i32 %794, %793
  %796 = lshr i32 %795, 16
  br label %812

797:                                              ; preds = %778
  %798 = lshr i32 %790, 15
  %799 = zext i32 %798 to i64
  %800 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %799
  %801 = load i16, i16* %800, align 2
  %802 = zext i16 %801 to i32
  %803 = and i32 %790, 32767
  %804 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %799
  %805 = load i8, i8* %804, align 1
  %806 = zext i8 %805 to i32
  %807 = mul nuw nsw i32 %803, %806
  %808 = lshr i32 %807, 12
  %809 = add nuw nsw i32 %808, %802
  %810 = lshr i32 %809, 8
  %811 = and i32 %810, 255
  br label %812

812:                                              ; preds = %791, %797
  %813 = phi i32 [ %796, %791 ], [ %811, %797 ]
  %814 = load i8, i8* %708, align 1
  %815 = zext i8 %814 to i32
  %816 = mul nuw nsw i32 %815, 257
  %817 = select i1 %16, i32 %816, i32 %815
  %818 = trunc i64 %704 to i32
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %818, i32 %745, i32 %779, i32 %813, i32 %817, i32 %17)
  br label %836

819:                                              ; preds = %707, %703
  %820 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 0
  %821 = load i8, i8* %820, align 1
  %822 = zext i8 %821 to i32
  %823 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 1
  %824 = load i8, i8* %823, align 1
  %825 = zext i8 %824 to i32
  %826 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %682, i64 %704, i32 2
  %827 = load i8, i8* %826, align 1
  %828 = zext i8 %827 to i32
  br i1 %705, label %829, label %833

829:                                              ; preds = %819
  %830 = getelementptr inbounds i8, i8* %680, i64 %704
  %831 = load i8, i8* %830, align 1
  %832 = zext i8 %831 to i32
  br label %833

833:                                              ; preds = %819, %829
  %834 = phi i32 [ %832, %829 ], [ 255, %819 ]
  %835 = trunc i64 %704 to i32
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %6, i32 %835, i32 %822, i32 %825, i32 %828, i32 %834, i32 3)
  br label %836

836:                                              ; preds = %833, %812, %711
  %837 = add nuw nsw i64 %704, 1
  %838 = icmp ult i64 %837, %701
  br i1 %838, label %703, label %839

839:                                              ; preds = %836, %696
  %840 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 61
  %841 = load i8, i8* %840, align 2
  %842 = icmp ult i8 %841, 8
  br i1 %842, label %843, label %867

843:                                              ; preds = %839
  tail call void @cr_png_set_packing(%struct.png_struct_def* %12) #9
  br label %867

844:                                              ; preds = %74
  tail call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0)) #10
  unreachable

845:                                              ; preds = %436, %651, %335, %166, %412
  %846 = phi i32 [ %336, %335 ], [ 256, %166 ], [ 256, %412 ], [ %557, %651 ], [ %447, %436 ]
  %847 = phi i32 [ 1, %335 ], [ 2, %166 ], [ 0, %412 ], [ 4, %651 ], [ 4, %436 ]
  %848 = phi i32 [ 1, %335 ], [ 1, %166 ], [ %370, %412 ], [ 1, %651 ], [ 1, %436 ]
  %849 = phi i32 [ 231, %335 ], [ 254, %166 ], [ 256, %412 ], [ %462, %651 ], [ %434, %436 ]
  %850 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 54
  %851 = load i16, i16* %850, align 2
  %852 = icmp eq i16 %851, 0
  br i1 %852, label %858, label %853

853:                                              ; preds = %845
  %854 = load i8, i8* %18, align 1
  %855 = and i8 %854, 4
  %856 = icmp eq i8 %855, 0
  br i1 %856, label %857, label %858

857:                                              ; preds = %853
  call void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def* %12) #9
  br label %858

858:                                              ; preds = %373, %845, %857, %853
  %859 = phi i32 [ %849, %845 ], [ %849, %857 ], [ %849, %853 ], [ 256, %373 ]
  %860 = phi i32 [ %848, %845 ], [ %848, %857 ], [ %848, %853 ], [ %370, %373 ]
  %861 = phi i32 [ %847, %845 ], [ %847, %857 ], [ %847, %853 ], [ 0, %373 ]
  %862 = phi i32 [ %846, %845 ], [ %846, %857 ], [ %846, %853 ], [ 256, %373 ]
  switch i32 %860, label %875 [
    i32 1, label %863
    i32 3, label %867
  ]

863:                                              ; preds = %314, %670, %176, %212, %157, %128, %655, %858
  %864 = phi i32 [ %862, %858 ], [ %671, %670 ], [ %177, %176 ], [ 256, %212 ], [ 256, %157 ], [ 256, %128 ], [ %462, %655 ], [ %266, %314 ]
  %865 = phi i32 [ %861, %858 ], [ 3, %670 ], [ 1, %176 ], [ 0, %212 ], [ 0, %157 ], [ 0, %128 ], [ 3, %655 ], [ 1, %314 ]
  %866 = phi i32 [ %859, %858 ], [ 256, %670 ], [ 231, %176 ], [ 256, %212 ], [ 256, %157 ], [ 256, %128 ], [ 256, %655 ], [ 231, %314 ]
  call void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def* %12, i32 0, i32 220000) #9
  br label %867

867:                                              ; preds = %118, %115, %843, %839, %858, %863
  %868 = phi i32 [ %862, %858 ], [ %864, %863 ], [ %81, %118 ], [ %81, %115 ], [ %692, %843 ], [ %692, %839 ]
  %869 = phi i32 [ %861, %858 ], [ %865, %863 ], [ 0, %118 ], [ 0, %115 ], [ 0, %843 ], [ 0, %839 ]
  %870 = phi i32 [ %859, %858 ], [ %866, %863 ], [ 256, %118 ], [ 256, %115 ], [ 256, %843 ], [ 256, %839 ]
  %871 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %12, i64 0, i32 61
  %872 = load i8, i8* %871, align 2
  %873 = icmp ugt i8 %872, 8
  br i1 %873, label %874, label %876

874:                                              ; preds = %867
  call void @cr_png_set_scale_16(%struct.png_struct_def* %12) #9
  br label %876

875:                                              ; preds = %858
  call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.48, i64 0, i64 0)) #10
  unreachable

876:                                              ; preds = %867, %874
  %877 = icmp ugt i32 %868, 256
  br i1 %877, label %882, label %878

878:                                              ; preds = %876
  %879 = getelementptr inbounds %struct.png_image, %struct.png_image* %8, i64 0, i32 6
  %880 = load i32, i32* %879, align 4
  %881 = icmp ugt i32 %868, %880
  br i1 %881, label %882, label %883

882:                                              ; preds = %878, %876
  call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.49, i64 0, i64 0)) #10
  unreachable

883:                                              ; preds = %878
  store i32 %868, i32* %879, align 4
  switch i32 %869, label %896 [
    i32 0, label %884
    i32 1, label %886
    i32 2, label %888
    i32 3, label %892
    i32 4, label %894
  ]

884:                                              ; preds = %883
  %885 = icmp eq i32 %870, 256
  br i1 %885, label %898, label %897

886:                                              ; preds = %883
  %887 = icmp eq i32 %870, 231
  br i1 %887, label %898, label %897

888:                                              ; preds = %883
  %889 = icmp uge i32 %870, %868
  %890 = icmp ne i32 %870, 254
  %891 = or i1 %889, %890
  br i1 %891, label %897, label %898

892:                                              ; preds = %883
  %893 = icmp eq i32 %870, 256
  br i1 %893, label %898, label %897

894:                                              ; preds = %883
  %895 = icmp eq i32 %870, 216
  br i1 %895, label %898, label %897

896:                                              ; preds = %883
  call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.50, i64 0, i64 0)) #10
  unreachable

897:                                              ; preds = %884, %886, %892, %894, %888
  call void @cr_png_error(%struct.png_struct_def* %12, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.51, i64 0, i64 0)) #10
  unreachable

898:                                              ; preds = %884, %886, %892, %894, %888
  %899 = getelementptr inbounds i8, i8* %0, i64 72
  %900 = bitcast i8* %899 to i32*
  store i32 %869, i32* %900, align 8
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_colormapped(i8*) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 1
  %9 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  tail call void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* %7, i32 1, i8* null, i32 -1) #9
  tail call void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* %7, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @png_image_skip_unused_chunks.chunks_to_process, i64 0, i64 0), i32 6) #9
  %10 = getelementptr inbounds i8, i8* %0, i64 72
  %11 = bitcast i8* %10 to i32*
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = tail call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %7) #9
  br label %16

16:                                               ; preds = %14, %1
  %17 = phi i32 [ %15, %14 ], [ 0, %1 ]
  %18 = icmp eq %struct.png_struct_def* %7, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 16
  %21 = load i32, i32* %20, align 8, !alias.scope !16, !noalias !19
  %22 = and i32 %21, 64
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %19
  tail call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %7) #9, !noalias !19
  tail call void @cr_png_read_transform_info(%struct.png_struct_def* nonnull %7, %struct.png_info_def* %9) #9
  br label %26

25:                                               ; preds = %19
  tail call void @cr_png_app_error(%struct.png_struct_def* nonnull %7, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %26

26:                                               ; preds = %16, %24, %25
  %27 = load i32, i32* %11, align 8
  switch i32 %27, label %83 [
    i32 0, label %28
    i32 2, label %35
    i32 1, label %35
    i32 3, label %51
    i32 4, label %67
  ]

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 8
  %30 = load i8, i8* %29, align 1
  switch i8 %30, label %83 [
    i8 3, label %31
    i8 0, label %31
  ]

31:                                               ; preds = %28, %28
  %32 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 7
  %33 = load i8, i8* %32, align 4
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %84, label %83

35:                                               ; preds = %26, %26
  %36 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 8
  %37 = load i8, i8* %36, align 1
  %38 = icmp eq i8 %37, 4
  br i1 %38, label %39, label %83

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 7
  %41 = load i8, i8* %40, align 4
  %42 = icmp eq i8 %41, 8
  br i1 %42, label %43, label %83

43:                                               ; preds = %39
  %44 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 79
  %45 = load i32, i32* %44, align 4
  %46 = icmp eq i32 %45, 220000
  br i1 %46, label %47, label %83

47:                                               ; preds = %43
  %48 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 6
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 256
  br i1 %50, label %84, label %83

51:                                               ; preds = %26
  %52 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 8
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 2
  br i1 %54, label %55, label %83

55:                                               ; preds = %51
  %56 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 7
  %57 = load i8, i8* %56, align 4
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %83

59:                                               ; preds = %55
  %60 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 79
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 220000
  br i1 %62, label %63, label %83

63:                                               ; preds = %59
  %64 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 6
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 216
  br i1 %66, label %84, label %83

67:                                               ; preds = %26
  %68 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 8
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 6
  br i1 %70, label %71, label %83

71:                                               ; preds = %67
  %72 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 7
  %73 = load i8, i8* %72, align 4
  %74 = icmp eq i8 %73, 8
  br i1 %74, label %75, label %83

75:                                               ; preds = %71
  %76 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 79
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 220000
  br i1 %78, label %79, label %83

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 6
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 244
  br i1 %82, label %84, label %83

83:                                               ; preds = %28, %26, %67, %71, %75, %79, %51, %55, %59, %63, %35, %39, %43, %47, %31
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.55, i64 0, i64 0)) #10
  unreachable

84:                                               ; preds = %79, %63, %47, %31
  %85 = getelementptr inbounds i8, i8* %0, i64 8
  %86 = bitcast i8* %85 to i8**
  %87 = load i8*, i8** %86, align 8
  %88 = getelementptr inbounds i8, i8* %0, i64 16
  %89 = bitcast i8* %88 to i32*
  %90 = load i32, i32* %89, align 8
  %91 = sext i32 %90 to i64
  %92 = icmp slt i32 %90, 0
  br i1 %92, label %93, label %101

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %95 = load i32, i32* %94, align 8
  %96 = add i32 %95, -1
  %97 = zext i32 %96 to i64
  %98 = mul nsw i64 %91, %97
  %99 = sub nsw i64 0, %98
  %100 = getelementptr inbounds i8, i8* %87, i64 %99
  br label %101

101:                                              ; preds = %93, %84
  %102 = phi i8* [ %100, %93 ], [ %87, %84 ]
  %103 = getelementptr inbounds i8, i8* %0, i64 48
  %104 = bitcast i8* %103 to i8**
  store i8* %102, i8** %104, align 8
  %105 = getelementptr inbounds i8, i8* %0, i64 56
  %106 = bitcast i8* %105 to i64*
  store i64 %91, i64* %106, align 8
  %107 = icmp eq i32 %17, 0
  br i1 %107, label %112, label %108

108:                                              ; preds = %101
  %109 = icmp sgt i32 %17, 0
  br i1 %109, label %110, label %134

110:                                              ; preds = %108
  %111 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  br label %122

112:                                              ; preds = %101
  %113 = tail call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %7, %struct.png_info_def* %9) #9
  %114 = tail call noalias i8* @cr_png_malloc(%struct.png_struct_def* %7, i64 %113) #9
  %115 = getelementptr inbounds i8, i8* %0, i64 40
  %116 = bitcast i8* %115 to i8**
  store i8* %114, i8** %116, align 8
  %117 = tail call i32 @cr_png_safe_execute(%struct.png_image* %3, i32 (i8*)* nonnull @png_image_read_and_map, i8* %0) #9
  store i8* null, i8** %116, align 8
  tail call void @cr_png_free(%struct.png_struct_def* %7, i8* %114) #9
  br label %134

118:                                              ; preds = %128, %122
  %119 = icmp sgt i32 %125, 0
  br i1 %119, label %120, label %134

120:                                              ; preds = %118
  %121 = load i8*, i8** %104, align 8
  br label %122

122:                                              ; preds = %120, %110
  %123 = phi i8* [ %102, %110 ], [ %121, %120 ]
  %124 = phi i32 [ %17, %110 ], [ %125, %120 ]
  %125 = add nsw i32 %124, -1
  %126 = load i32, i32* %111, align 8
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %118, label %128

128:                                              ; preds = %122, %128
  %129 = phi i8* [ %131, %128 ], [ %123, %122 ]
  %130 = phi i32 [ %132, %128 ], [ %126, %122 ]
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %129, i8* null)
  %131 = getelementptr inbounds i8, i8* %129, i64 %91
  %132 = add i32 %130, -1
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %118, label %128

134:                                              ; preds = %118, %108, %112
  %135 = phi i32 [ %117, %112 ], [ 1, %108 ], [ 1, %118 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_direct(i8*) #0 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.png_color_16_struct, align 2
  %4 = bitcast i8* %0 to %struct.png_image**
  %5 = load %struct.png_image*, %struct.png_image** %4, align 8
  %6 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 0
  %7 = load %struct.png_control*, %struct.png_control** %6, align 8
  %8 = getelementptr inbounds %struct.png_control, %struct.png_control* %7, i64 0, i32 0
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %10 = getelementptr inbounds %struct.png_control, %struct.png_control* %7, i64 0, i32 1
  %11 = load %struct.png_info_def*, %struct.png_info_def** %10, align 8
  %12 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 4
  %15 = icmp ne i32 %14, 0
  tail call void @cr_png_set_expand(%struct.png_struct_def* %9) #9
  %16 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 60
  %17 = load i8, i8* %16, align 1, !alias.scope !21
  %18 = and i8 %17, 2
  %19 = zext i8 %18 to i32
  %20 = and i8 %17, 4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %1
  %23 = or i32 %19, 1
  br label %30

24:                                               ; preds = %1
  %25 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 54
  %26 = load i16, i16* %25, align 2, !alias.scope !21
  %27 = icmp ne i16 %26, 0
  %28 = zext i1 %27 to i32
  %29 = or i32 %28, %19
  br label %30

30:                                               ; preds = %22, %24
  %31 = phi i32 [ %23, %22 ], [ %29, %24 ]
  %32 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 61
  %33 = load i8, i8* %32, align 2, !alias.scope !21
  %34 = icmp eq i8 %33, 16
  %35 = or i32 %31, 4
  %36 = select i1 %34, i32 %35, i32 %31
  %37 = and i32 %36, -9
  %38 = xor i32 %37, %13
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %30
  %42 = and i32 %13, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44

44:                                               ; preds = %41
  tail call void @cr_png_set_gray_to_rgb(%struct.png_struct_def* %9) #9
  br label %47

45:                                               ; preds = %41
  %46 = and i32 %36, 1
  tail call void @cr_png_set_rgb_to_gray_fixed(%struct.png_struct_def* %9, i32 1, i32 -1, i32 -1) #9
  br label %47

47:                                               ; preds = %45, %44
  %48 = phi i32 [ 0, %44 ], [ %46, %45 ]
  %49 = and i32 %38, -3
  br label %50

50:                                               ; preds = %30, %47
  %51 = phi i32 [ %48, %47 ], [ 0, %30 ]
  %52 = phi i32 [ %49, %47 ], [ %38, %30 ]
  %53 = and i32 %36, 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %60, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 5
  %57 = load i32, i32* %56, align 8
  %58 = and i32 %57, 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %61, label %60

60:                                               ; preds = %50, %55
  br label %61

61:                                               ; preds = %55, %60
  %62 = phi i32 [ -1, %60 ], [ 100000, %55 ]
  tail call void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def* %9, i32 0, i32 %62) #9
  %63 = and i32 %36, 1
  %64 = select i1 %15, i32 100000, i32 -1
  %65 = select i1 %15, i32 %63, i32 0
  %66 = and i32 %52, 64
  %67 = icmp eq i32 %66, 0
  %68 = and i32 %52, -65
  %69 = select i1 %67, i32 %65, i32 2
  %70 = icmp eq i32 %51, 0
  br i1 %70, label %88, label %71

71:                                               ; preds = %61
  %72 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %72) #9
  store i32 -1431655766, i32* %2, align 4
  %73 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 134, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = call i32 @cr_png_muldiv(i32* nonnull %2, i32 %64, i32 %74, i32 100000) #9
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %81, label %77

77:                                               ; preds = %71
  %78 = load i32, i32* %2, align 4
  %79 = call i32 @cr_png_gamma_significant(i32 %78) #9
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %71, %77
  %82 = icmp eq i32 %69, 1
  %83 = select i1 %82, i32 2, i32 %51
  %84 = select i1 %82, i32 0, i32 %69
  br label %85

85:                                               ; preds = %81, %77
  %86 = phi i32 [ 0, %77 ], [ %83, %81 ]
  %87 = phi i32 [ %69, %77 ], [ %84, %81 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %72) #9
  br label %88

88:                                               ; preds = %61, %85
  %89 = phi i32 [ %86, %85 ], [ 0, %61 ]
  %90 = phi i32 [ %87, %85 ], [ %69, %61 ]
  %91 = and i32 %52, 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %98, label %93

93:                                               ; preds = %88
  br i1 %15, label %94, label %95

94:                                               ; preds = %93
  call void @cr_png_set_expand_16(%struct.png_struct_def* %9) #9
  br label %96

95:                                               ; preds = %93
  call void @cr_png_set_scale_16(%struct.png_struct_def* %9) #9
  br label %96

96:                                               ; preds = %95, %94
  %97 = and i32 %52, -69
  br label %98

98:                                               ; preds = %88, %96
  %99 = phi i32 [ %97, %96 ], [ %68, %88 ]
  %100 = and i32 %99, 1
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %144, label %102

102:                                              ; preds = %98
  %103 = icmp eq i32 %63, 0
  br i1 %103, label %130, label %104

104:                                              ; preds = %102
  %105 = icmp eq i32 %89, 0
  br i1 %105, label %106, label %138

106:                                              ; preds = %104
  br i1 %15, label %107, label %108

107:                                              ; preds = %106
  call void @cr_png_set_strip_alpha(%struct.png_struct_def* %9) #9
  br label %138

108:                                              ; preds = %106
  %109 = getelementptr inbounds i8, i8* %0, i64 32
  %110 = bitcast i8* %109 to %struct.png_color_struct**
  %111 = load %struct.png_color_struct*, %struct.png_color_struct** %110, align 8
  %112 = icmp eq %struct.png_color_struct* %111, null
  br i1 %112, label %138, label %113

113:                                              ; preds = %108
  %114 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 10, i8* nonnull %114) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 2 %114, i8 -86, i64 10, i1 false)
  store i8 0, i8* %114, align 2
  %115 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %111, i64 0, i32 0
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i16
  %118 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 1
  store i16 %117, i16* %118, align 2
  %119 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %111, i64 0, i32 1
  %120 = load i8, i8* %119, align 1
  %121 = zext i8 %120 to i16
  %122 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 2
  store i16 %121, i16* %122, align 2
  %123 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %111, i64 0, i32 2
  %124 = load i8, i8* %123, align 1
  %125 = zext i8 %124 to i16
  %126 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 3
  store i16 %125, i16* %126, align 2
  %127 = load i8, i8* %119, align 1
  %128 = zext i8 %127 to i16
  %129 = getelementptr inbounds %struct.png_color_16_struct, %struct.png_color_16_struct* %3, i64 0, i32 4
  store i16 %128, i16* %129, align 2
  call void @cr_png_set_background_fixed(%struct.png_struct_def* %9, %struct.png_color_16_struct* nonnull %3, i32 1, i32 0, i32 0) #9
  call void @llvm.lifetime.end.p0i8(i64 10, i8* nonnull %114) #9
  br label %138

130:                                              ; preds = %102
  %131 = select i1 %15, i32 65535, i32 255
  %132 = and i32 %13, 32
  %133 = icmp eq i32 %132, 0
  %134 = and i32 %99, -97
  %135 = select i1 %133, i32 %99, i32 %134
  %136 = lshr exact i32 %132, 5
  %137 = xor i32 %136, 1
  call void @cr_png_set_add_alpha(%struct.png_struct_def* %9, i32 %131, i32 %137) #9
  br label %138

138:                                              ; preds = %108, %104, %113, %107, %130
  %139 = phi i32 [ 0, %107 ], [ 0, %113 ], [ 0, %130 ], [ 0, %104 ], [ 1, %108 ]
  %140 = phi i32 [ 0, %107 ], [ 0, %113 ], [ %89, %130 ], [ 2, %104 ], [ 0, %108 ]
  %141 = phi i32 [ %99, %107 ], [ %99, %113 ], [ %135, %130 ], [ %99, %104 ], [ %99, %108 ]
  %142 = phi i32 [ %90, %107 ], [ %90, %113 ], [ %90, %130 ], [ %90, %104 ], [ 2, %108 ]
  %143 = and i32 %141, -2
  br label %144

144:                                              ; preds = %98, %138
  %145 = phi i32 [ %139, %138 ], [ 0, %98 ]
  %146 = phi i32 [ %140, %138 ], [ %89, %98 ]
  %147 = phi i32 [ %143, %138 ], [ %99, %98 ]
  %148 = phi i32 [ %142, %138 ], [ %90, %98 ]
  call void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def* %9, i32 %148, i32 %64) #9
  %149 = and i32 %147, 16
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %160, label %151

151:                                              ; preds = %144
  %152 = and i32 %13, 2
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %155, label %154

154:                                              ; preds = %151
  call void @cr_png_set_bgr(%struct.png_struct_def* %9) #9
  br label %157

155:                                              ; preds = %151
  %156 = and i32 %13, -17
  br label %157

157:                                              ; preds = %155, %154
  %158 = phi i32 [ %13, %154 ], [ %156, %155 ]
  %159 = and i32 %147, -17
  br label %160

160:                                              ; preds = %144, %157
  %161 = phi i32 [ %159, %157 ], [ %147, %144 ]
  %162 = phi i32 [ %158, %157 ], [ %13, %144 ]
  %163 = and i32 %161, 32
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %176, label %165

165:                                              ; preds = %160
  %166 = and i32 %162, 1
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %171, label %168

168:                                              ; preds = %165
  %169 = icmp eq i32 %146, 2
  br i1 %169, label %173, label %170

170:                                              ; preds = %168
  call void @cr_png_set_swap_alpha(%struct.png_struct_def* %9) #9
  br label %173

171:                                              ; preds = %165
  %172 = and i32 %162, -33
  br label %173

173:                                              ; preds = %168, %170, %171
  %174 = phi i32 [ %162, %170 ], [ %162, %168 ], [ %172, %171 ]
  %175 = and i32 %161, -33
  br label %176

176:                                              ; preds = %160, %173
  %177 = phi i32 [ %175, %173 ], [ %161, %160 ]
  %178 = phi i32 [ %174, %173 ], [ %162, %160 ]
  br i1 %15, label %179, label %180

179:                                              ; preds = %176
  call void @cr_png_set_swap(%struct.png_struct_def* %9) #9
  br label %180

180:                                              ; preds = %179, %176
  %181 = icmp eq i32 %177, 0
  br i1 %181, label %183, label %182

182:                                              ; preds = %180
  call void @cr_png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.57, i64 0, i64 0)) #10
  unreachable

183:                                              ; preds = %180
  call void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* %9, i32 1, i8* null, i32 -1) #9
  call void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def* %9, i32 0, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @png_image_skip_unused_chunks.chunks_to_process, i64 0, i64 0), i32 6) #9
  %184 = icmp eq i32 %145, 0
  %185 = icmp ne i32 %146, 2
  %186 = and i1 %184, %185
  br i1 %186, label %187, label %189

187:                                              ; preds = %183
  %188 = call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %9) #9
  br label %189

189:                                              ; preds = %187, %183
  %190 = phi i32 [ %188, %187 ], [ 0, %183 ]
  %191 = icmp eq %struct.png_struct_def* %9, null
  br i1 %191, label %199, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 16
  %194 = load i32, i32* %193, align 8, !alias.scope !24, !noalias !27
  %195 = and i32 %194, 64
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %192
  call void @cr_png_read_start_row(%struct.png_struct_def* nonnull %9) #9, !noalias !27
  call void @cr_png_read_transform_info(%struct.png_struct_def* nonnull %9, %struct.png_info_def* %11) #9
  br label %199

198:                                              ; preds = %192
  call void @cr_png_app_error(%struct.png_struct_def* nonnull %9, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.3, i64 0, i64 0)) #9
  br label %199

199:                                              ; preds = %189, %197, %198
  %200 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %11, i64 0, i32 8
  %201 = load i8, i8* %200, align 1
  %202 = and i8 %201, 2
  %203 = zext i8 %202 to i32
  %204 = and i8 %201, 4
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %213, label %206

206:                                              ; preds = %199
  br i1 %184, label %207, label %215

207:                                              ; preds = %206
  %208 = and i32 %178, 1
  %209 = icmp ne i32 %208, 0
  %210 = or i1 %185, %209
  %211 = zext i1 %210 to i32
  %212 = or i32 %203, %211
  br label %215

213:                                              ; preds = %199
  br i1 %184, label %215, label %214

214:                                              ; preds = %213
  call void @cr_png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.58, i64 0, i64 0)) #10
  unreachable

215:                                              ; preds = %207, %213, %206
  %216 = phi i32 [ %203, %206 ], [ %203, %213 ], [ %212, %207 ]
  %217 = and i32 %178, 64
  %218 = or i32 %216, %217
  %219 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %11, i64 0, i32 7
  %220 = load i8, i8* %219, align 4
  %221 = icmp eq i8 %220, 16
  %222 = or i32 %218, 4
  %223 = select i1 %221, i32 %222, i32 %218
  %224 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 17
  %225 = load i32, i32* %224, align 4
  %226 = shl i32 %225, 4
  %227 = and i32 %226, 16
  %228 = or i32 %227, %223
  %229 = icmp eq i32 %146, 2
  %230 = xor i1 %229, true
  %231 = and i32 %178, 32
  %232 = icmp eq i32 %231, 0
  %233 = or i1 %232, %230
  %234 = or i32 %228, 32
  %235 = select i1 %233, i32 %228, i32 %234
  %236 = and i32 %225, 131072
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %238, label %248

238:                                              ; preds = %215
  %239 = and i32 %225, 16777216
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %250, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %9, i64 0, i32 16
  %243 = load i32, i32* %242, align 8
  %244 = trunc i32 %243 to i8
  %245 = icmp slt i8 %244, 0
  %246 = or i1 %245, %230
  %247 = select i1 %245, i32 %235, i32 %234
  br i1 %246, label %250, label %249

248:                                              ; preds = %215
  br i1 %229, label %249, label %250

249:                                              ; preds = %241, %248
  call void @cr_png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.59, i64 0, i64 0)) #10
  unreachable

250:                                              ; preds = %241, %248, %238
  %251 = phi i32 [ %247, %241 ], [ %235, %238 ], [ %234, %248 ]
  %252 = icmp eq i32 %251, %178
  br i1 %252, label %254, label %253

253:                                              ; preds = %250
  call void @cr_png_error(%struct.png_struct_def* %9, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.60, i64 0, i64 0)) #10
  unreachable

254:                                              ; preds = %250
  %255 = getelementptr inbounds i8, i8* %0, i64 8
  %256 = bitcast i8* %255 to i8**
  %257 = load i8*, i8** %256, align 8
  %258 = getelementptr inbounds i8, i8* %0, i64 16
  %259 = bitcast i8* %258 to i32*
  %260 = load i32, i32* %259, align 8
  %261 = sext i32 %260 to i64
  %262 = lshr exact i32 %14, 2
  %263 = zext i32 %262 to i64
  %264 = shl nsw i64 %261, %263
  %265 = icmp slt i64 %264, 0
  br i1 %265, label %266, label %274

266:                                              ; preds = %254
  %267 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 3
  %268 = load i32, i32* %267, align 8
  %269 = add i32 %268, -1
  %270 = zext i32 %269 to i64
  %271 = mul i64 %264, %270
  %272 = sub i64 0, %271
  %273 = getelementptr inbounds i8, i8* %257, i64 %272
  br label %274

274:                                              ; preds = %266, %254
  %275 = phi i8* [ %273, %266 ], [ %257, %254 ]
  %276 = getelementptr inbounds i8, i8* %0, i64 48
  %277 = bitcast i8* %276 to i8**
  store i8* %275, i8** %277, align 8
  %278 = getelementptr inbounds i8, i8* %0, i64 56
  %279 = bitcast i8* %278 to i64*
  store i64 %264, i64* %279, align 8
  br i1 %184, label %286, label %280

280:                                              ; preds = %274
  %281 = call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %9, %struct.png_info_def* %11) #9
  %282 = call noalias i8* @cr_png_malloc(%struct.png_struct_def* %9, i64 %281) #9
  %283 = getelementptr inbounds i8, i8* %0, i64 40
  %284 = bitcast i8* %283 to i8**
  store i8* %282, i8** %284, align 8
  %285 = call i32 @cr_png_safe_execute(%struct.png_image* %5, i32 (i8*)* nonnull @png_image_read_composite, i8* %0) #9
  store i8* null, i8** %284, align 8
  call void @cr_png_free(%struct.png_struct_def* %9, i8* %282) #9
  br label %313

286:                                              ; preds = %274
  br i1 %229, label %291, label %287

287:                                              ; preds = %286
  %288 = icmp sgt i32 %190, 0
  br i1 %288, label %289, label %313

289:                                              ; preds = %287
  %290 = getelementptr inbounds %struct.png_image, %struct.png_image* %5, i64 0, i32 3
  br label %301

291:                                              ; preds = %286
  %292 = call i64 @cr_png_get_rowbytes(%struct.png_struct_def* %9, %struct.png_info_def* %11) #9
  %293 = call noalias i8* @cr_png_malloc(%struct.png_struct_def* %9, i64 %292) #9
  %294 = getelementptr inbounds i8, i8* %0, i64 40
  %295 = bitcast i8* %294 to i8**
  store i8* %293, i8** %295, align 8
  %296 = call i32 @cr_png_safe_execute(%struct.png_image* %5, i32 (i8*)* nonnull @png_image_read_background, i8* %0) #9
  store i8* null, i8** %295, align 8
  call void @cr_png_free(%struct.png_struct_def* %9, i8* %293) #9
  br label %313

297:                                              ; preds = %307, %301
  %298 = icmp sgt i32 %304, 0
  br i1 %298, label %299, label %313

299:                                              ; preds = %297
  %300 = load i8*, i8** %277, align 8
  br label %301

301:                                              ; preds = %299, %289
  %302 = phi i8* [ %275, %289 ], [ %300, %299 ]
  %303 = phi i32 [ %190, %289 ], [ %304, %299 ]
  %304 = add nsw i32 %303, -1
  %305 = load i32, i32* %290, align 8
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %297, label %307

307:                                              ; preds = %301, %307
  %308 = phi i8* [ %310, %307 ], [ %302, %301 ]
  %309 = phi i32 [ %311, %307 ], [ %305, %301 ]
  call void @cr_png_read_row(%struct.png_struct_def* %9, i8* %308, i8* null)
  %310 = getelementptr inbounds i8, i8* %308, i64 %264
  %311 = add i32 %309, -1
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %297, label %307

313:                                              ; preds = %297, %287, %291, %280
  %314 = phi i32 [ %285, %280 ], [ %296, %291 ], [ 1, %287 ], [ 1, %297 ]
  ret i32 %314
}

declare void @cr_png_image_free(%struct.png_image*) local_unnamed_addr #2

declare void @cr_png_destroy_gamma_table(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_free(%struct.png_struct_def*, i8*) local_unnamed_addr #2

declare void @cr_png_zfree(i8*, i8*) local_unnamed_addr #2

declare i32 @Cr_z_inflateEnd(%struct.z_stream_s*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @cr_png_safe_error(%struct.png_struct_def*, i8*) #3

declare void @cr_png_safe_warning(%struct.png_struct_def*, i8*) #2

declare noalias %struct.png_info_def* @cr_png_create_info_struct(%struct.png_struct_def*) local_unnamed_addr #2

declare noalias i8* @cr_png_malloc_warn(%struct.png_struct_def*, i64) local_unnamed_addr #2

declare void @cr_png_set_benign_errors(%struct.png_struct_def*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @png_create_colormap_entry(%struct.png_image_read_control* nocapture, i32, i32, i32, i32, i32, i32) unnamed_addr #0 {
  %8 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 0
  %9 = load %struct.png_image*, %struct.png_image** %8, align 8
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %9, i64 0, i32 4
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 4
  %13 = icmp ne i32 %12, 0
  %14 = select i1 %13, i32 2, i32 1
  %15 = and i32 %11, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %7
  %18 = icmp ne i32 %2, %3
  %19 = icmp ne i32 %3, %4
  %20 = or i1 %18, %19
  br label %21

21:                                               ; preds = %17, %7
  %22 = phi i1 [ false, %7 ], [ %20, %17 ]
  %23 = icmp ugt i32 %1, 255
  br i1 %23, label %24, label %29

24:                                               ; preds = %21
  %25 = getelementptr inbounds %struct.png_image, %struct.png_image* %9, i64 0, i32 0
  %26 = load %struct.png_control*, %struct.png_control** %25, align 8
  %27 = getelementptr inbounds %struct.png_control, %struct.png_control* %26, i64 0, i32 0
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %27, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %28, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.52, i64 0, i64 0)) #10
  unreachable

29:                                               ; preds = %21
  %30 = icmp eq i32 %6, 3
  br i1 %30, label %31, label %60

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %60

35:                                               ; preds = %31
  %36 = getelementptr inbounds %struct.png_image, %struct.png_image* %9, i64 0, i32 0
  %37 = load %struct.png_control*, %struct.png_control** %36, align 8
  %38 = getelementptr inbounds %struct.png_control, %struct.png_control* %37, i64 0, i32 0
  %39 = load %struct.png_struct_def*, %struct.png_struct_def** %38, align 8
  %40 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %39, i64 0, i32 134, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = tail call i32 @cr_png_gamma_significant(i32 %41) #9
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %59, label %44

44:                                               ; preds = %35
  %45 = icmp slt i32 %41, 100000
  br i1 %45, label %46, label %54

46:                                               ; preds = %44
  %47 = icmp eq i32 %41, 0
  br i1 %47, label %58, label %48

48:                                               ; preds = %46
  %49 = mul nsw i32 %41, 11
  %50 = add nsw i32 %49, 2
  %51 = sdiv i32 %50, 5
  %52 = tail call i32 @cr_png_gamma_significant(i32 %51) #9
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %58, label %54

54:                                               ; preds = %44, %48
  store i32 3, i32* %32, align 8
  %55 = tail call i32 @cr_png_reciprocal(i32 %41) #9
  %56 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 9
  store i32 %55, i32* %56, align 4
  %57 = load i32, i32* %32, align 8
  br label %60

58:                                               ; preds = %48, %46
  store i32 1, i32* %32, align 8
  br label %128

59:                                               ; preds = %35
  store i32 4, i32* %32, align 8
  br label %123

60:                                               ; preds = %31, %54, %29
  %61 = phi i32 [ %6, %29 ], [ %57, %54 ], [ %33, %31 ]
  switch i32 %61, label %231 [
    i32 3, label %62
    i32 4, label %123
    i32 1, label %128
    i32 2, label %144
  ]

62:                                               ; preds = %60
  %63 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 9
  %64 = load i32, i32* %63, align 4
  %65 = mul i32 %2, 257
  %66 = tail call zeroext i16 @cr_png_gamma_16bit_correct(i32 %65, i32 %64) #9
  %67 = zext i16 %66 to i32
  %68 = mul i32 %3, 257
  %69 = tail call zeroext i16 @cr_png_gamma_16bit_correct(i32 %68, i32 %64) #9
  %70 = zext i16 %69 to i32
  %71 = mul i32 %4, 257
  %72 = tail call zeroext i16 @cr_png_gamma_16bit_correct(i32 %71, i32 %64) #9
  %73 = zext i16 %72 to i32
  %74 = or i1 %13, %22
  br i1 %74, label %75, label %77

75:                                               ; preds = %62
  %76 = mul i32 %5, 257
  br label %144

77:                                               ; preds = %62
  %78 = mul nuw nsw i32 %67, 255
  %79 = lshr i32 %78, 15
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %80
  %82 = load i16, i16* %81, align 2
  %83 = zext i16 %82 to i32
  %84 = and i32 %78, 32767
  %85 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %80
  %86 = load i8, i8* %85, align 1
  %87 = zext i8 %86 to i32
  %88 = mul nuw nsw i32 %84, %87
  %89 = lshr i32 %88, 12
  %90 = add nuw nsw i32 %89, %83
  %91 = lshr i32 %90, 8
  %92 = and i32 %91, 255
  %93 = mul nuw nsw i32 %70, 255
  %94 = lshr i32 %93, 15
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %95
  %97 = load i16, i16* %96, align 2
  %98 = zext i16 %97 to i32
  %99 = and i32 %93, 32767
  %100 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %95
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = mul nuw nsw i32 %99, %102
  %104 = lshr i32 %103, 12
  %105 = add nuw nsw i32 %104, %98
  %106 = lshr i32 %105, 8
  %107 = and i32 %106, 255
  %108 = mul nuw nsw i32 %73, 255
  %109 = lshr i32 %108, 15
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %110
  %112 = load i16, i16* %111, align 2
  %113 = zext i16 %112 to i32
  %114 = and i32 %108, 32767
  %115 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %110
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = mul nuw nsw i32 %114, %117
  %119 = lshr i32 %118, 12
  %120 = add nuw nsw i32 %119, %113
  %121 = lshr i32 %120, 8
  %122 = and i32 %121, 255
  br label %231

123:                                              ; preds = %59, %60
  %124 = mul i32 %2, 257
  %125 = mul i32 %3, 257
  %126 = mul i32 %4, 257
  %127 = mul i32 %5, 257
  br label %144

128:                                              ; preds = %58, %60
  %129 = or i1 %13, %22
  br i1 %129, label %130, label %231

130:                                              ; preds = %128
  %131 = zext i32 %2 to i64
  %132 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %131
  %133 = load i16, i16* %132, align 2
  %134 = zext i16 %133 to i32
  %135 = zext i32 %3 to i64
  %136 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = zext i32 %4 to i64
  %140 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %139
  %141 = load i16, i16* %140, align 2
  %142 = zext i16 %141 to i32
  %143 = mul i32 %5, 257
  br label %144

144:                                              ; preds = %60, %75, %130, %123
  %145 = phi i32 [ %67, %75 ], [ %134, %130 ], [ %124, %123 ], [ %2, %60 ]
  %146 = phi i32 [ %76, %75 ], [ %143, %130 ], [ %127, %123 ], [ %5, %60 ]
  %147 = phi i32 [ %73, %75 ], [ %142, %130 ], [ %126, %123 ], [ %4, %60 ]
  %148 = phi i32 [ %70, %75 ], [ %138, %130 ], [ %125, %123 ], [ %3, %60 ]
  br i1 %22, label %149, label %181

149:                                              ; preds = %144
  %150 = mul i32 %145, 6968
  %151 = mul i32 %148, 23434
  %152 = mul i32 %147, 2366
  %153 = add i32 %152, %150
  %154 = add i32 %153, %151
  br i1 %13, label %155, label %158

155:                                              ; preds = %149
  %156 = add i32 %154, 16384
  %157 = lshr i32 %156, 15
  br label %231

158:                                              ; preds = %149
  %159 = add i32 %154, 128
  %160 = lshr i32 %159, 8
  %161 = mul nuw i32 %160, 255
  %162 = add nuw i32 %161, 64
  %163 = lshr i32 %162, 7
  %164 = lshr i32 %162, 22
  %165 = zext i32 %164 to i64
  %166 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %165
  %167 = load i16, i16* %166, align 2
  %168 = zext i16 %167 to i32
  %169 = and i32 %163, 32767
  %170 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %165
  %171 = load i8, i8* %170, align 1
  %172 = zext i8 %171 to i32
  %173 = mul nuw nsw i32 %169, %172
  %174 = lshr i32 %173, 12
  %175 = add nuw nsw i32 %174, %168
  %176 = lshr i32 %175, 8
  %177 = and i32 %176, 255
  %178 = mul i32 %146, 255
  %179 = add i32 %178, 32895
  %180 = lshr i32 %179, 16
  br label %231

181:                                              ; preds = %144
  br i1 %13, label %231, label %182

182:                                              ; preds = %181
  %183 = mul i32 %145, 255
  %184 = lshr i32 %183, 15
  %185 = zext i32 %184 to i64
  %186 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %185
  %187 = load i16, i16* %186, align 2
  %188 = zext i16 %187 to i32
  %189 = and i32 %183, 32767
  %190 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %185
  %191 = load i8, i8* %190, align 1
  %192 = zext i8 %191 to i32
  %193 = mul nuw nsw i32 %189, %192
  %194 = lshr i32 %193, 12
  %195 = add nuw nsw i32 %194, %188
  %196 = lshr i32 %195, 8
  %197 = and i32 %196, 255
  %198 = mul i32 %148, 255
  %199 = lshr i32 %198, 15
  %200 = zext i32 %199 to i64
  %201 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %200
  %202 = load i16, i16* %201, align 2
  %203 = zext i16 %202 to i32
  %204 = and i32 %198, 32767
  %205 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %200
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = mul nuw nsw i32 %204, %207
  %209 = lshr i32 %208, 12
  %210 = add nuw nsw i32 %209, %203
  %211 = lshr i32 %210, 8
  %212 = and i32 %211, 255
  %213 = mul i32 %147, 255
  %214 = lshr i32 %213, 15
  %215 = zext i32 %214 to i64
  %216 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %215
  %217 = load i16, i16* %216, align 2
  %218 = zext i16 %217 to i32
  %219 = and i32 %213, 32767
  %220 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %215
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i32
  %223 = mul nuw nsw i32 %219, %222
  %224 = lshr i32 %223, 12
  %225 = add nuw nsw i32 %224, %218
  %226 = lshr i32 %225, 8
  %227 = and i32 %226, 255
  %228 = mul i32 %146, 255
  %229 = add i32 %228, 32895
  %230 = lshr i32 %229, 16
  br label %231

231:                                              ; preds = %60, %77, %128, %155, %158, %181, %182
  %232 = phi i32 [ %212, %182 ], [ %148, %181 ], [ %157, %155 ], [ %177, %158 ], [ %107, %77 ], [ %3, %128 ], [ %3, %60 ]
  %233 = phi i32 [ %227, %182 ], [ %147, %181 ], [ %157, %155 ], [ %177, %158 ], [ %122, %77 ], [ %4, %128 ], [ %4, %60 ]
  %234 = phi i32 [ %230, %182 ], [ %146, %181 ], [ %146, %155 ], [ %180, %158 ], [ %5, %77 ], [ %5, %128 ], [ %5, %60 ]
  %235 = phi i32 [ 1, %182 ], [ 2, %181 ], [ 2, %155 ], [ 1, %158 ], [ 1, %77 ], [ 1, %128 ], [ %61, %60 ]
  %236 = phi i32 [ %197, %182 ], [ %145, %181 ], [ %157, %155 ], [ %177, %158 ], [ %92, %77 ], [ %2, %128 ], [ %2, %60 ]
  %237 = icmp eq i32 %235, %14
  br i1 %237, label %243, label %238

238:                                              ; preds = %231
  %239 = getelementptr inbounds %struct.png_image, %struct.png_image* %9, i64 0, i32 0
  %240 = load %struct.png_control*, %struct.png_control** %239, align 8
  %241 = getelementptr inbounds %struct.png_control, %struct.png_control* %240, i64 0, i32 0
  %242 = load %struct.png_struct_def*, %struct.png_struct_def** %241, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %242, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.53, i64 0, i64 0)) #10
  unreachable

243:                                              ; preds = %231
  %244 = load i32, i32* %10, align 4
  %245 = and i32 %244, 33
  %246 = icmp eq i32 %245, 33
  %247 = zext i1 %246 to i32
  %248 = lshr i32 %244, 3
  %249 = and i32 %248, 2
  %250 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 3
  br i1 %13, label %251, label %311

251:                                              ; preds = %243
  %252 = bitcast i8** %250 to i16**
  %253 = load i16*, i16** %252, align 8
  %254 = and i32 %244, 3
  %255 = add nuw nsw i32 %254, 1
  %256 = mul i32 %255, %1
  %257 = zext i32 %256 to i64
  %258 = getelementptr inbounds i16, i16* %253, i64 %257
  switch i32 %254, label %310 [
    i32 3, label %259
    i32 2, label %263
    i32 1, label %292
    i32 0, label %297
  ]

259:                                              ; preds = %251
  %260 = trunc i32 %234 to i16
  %261 = select i1 %246, i64 0, i64 3
  %262 = getelementptr inbounds i16, i16* %258, i64 %261
  store i16 %260, i16* %262, align 2
  br label %263

263:                                              ; preds = %251, %259
  %264 = icmp ult i32 %234, 65535
  br i1 %264, label %265, label %277

265:                                              ; preds = %263
  %266 = icmp eq i32 %234, 0
  br i1 %266, label %277, label %267

267:                                              ; preds = %265
  %268 = mul i32 %234, %233
  %269 = add i32 %268, 32767
  %270 = udiv i32 %269, 65535
  %271 = mul i32 %234, %232
  %272 = add i32 %271, 32767
  %273 = udiv i32 %272, 65535
  %274 = mul i32 %236, %234
  %275 = add i32 %274, 32767
  %276 = udiv i32 %275, 65535
  br label %277

277:                                              ; preds = %265, %267, %263
  %278 = phi i32 [ %273, %267 ], [ %232, %263 ], [ 0, %265 ]
  %279 = phi i32 [ %270, %267 ], [ %233, %263 ], [ 0, %265 ]
  %280 = phi i32 [ %276, %267 ], [ %236, %263 ], [ 0, %265 ]
  %281 = trunc i32 %279 to i16
  %282 = or i32 %249, %247
  %283 = xor i32 %282, 2
  %284 = zext i32 %283 to i64
  %285 = getelementptr inbounds i16, i16* %258, i64 %284
  store i16 %281, i16* %285, align 2
  %286 = trunc i32 %278 to i16
  %287 = select i1 %246, i64 2, i64 1
  %288 = getelementptr inbounds i16, i16* %258, i64 %287
  store i16 %286, i16* %288, align 2
  %289 = trunc i32 %280 to i16
  %290 = zext i32 %282 to i64
  %291 = getelementptr inbounds i16, i16* %258, i64 %290
  store i16 %289, i16* %291, align 2
  br label %344

292:                                              ; preds = %251
  %293 = trunc i32 %234 to i16
  %294 = xor i32 %247, 1
  %295 = zext i32 %294 to i64
  %296 = getelementptr inbounds i16, i16* %258, i64 %295
  store i16 %293, i16* %296, align 2
  br label %297

297:                                              ; preds = %251, %292
  %298 = icmp ult i32 %234, 65535
  br i1 %298, label %299, label %305

299:                                              ; preds = %297
  %300 = icmp eq i32 %234, 0
  br i1 %300, label %305, label %301

301:                                              ; preds = %299
  %302 = mul i32 %234, %232
  %303 = add i32 %302, 32767
  %304 = udiv i32 %303, 65535
  br label %305

305:                                              ; preds = %299, %301, %297
  %306 = phi i32 [ %304, %301 ], [ %232, %297 ], [ 0, %299 ]
  %307 = trunc i32 %306 to i16
  %308 = zext i1 %246 to i64
  %309 = getelementptr inbounds i16, i16* %258, i64 %308
  store i16 %307, i16* %309, align 2
  br label %344

310:                                              ; preds = %251
  unreachable

311:                                              ; preds = %243
  %312 = load i8*, i8** %250, align 8
  %313 = and i32 %244, 3
  %314 = add nuw nsw i32 %313, 1
  %315 = mul i32 %314, %1
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds i8, i8* %312, i64 %316
  switch i32 %313, label %343 [
    i32 3, label %318
    i32 2, label %322
    i32 1, label %334
    i32 0, label %339
  ]

318:                                              ; preds = %311
  %319 = trunc i32 %234 to i8
  %320 = select i1 %246, i64 0, i64 3
  %321 = getelementptr inbounds i8, i8* %317, i64 %320
  store i8 %319, i8* %321, align 1
  br label %322

322:                                              ; preds = %311, %318
  %323 = trunc i32 %233 to i8
  %324 = or i32 %249, %247
  %325 = xor i32 %324, 2
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %317, i64 %326
  store i8 %323, i8* %327, align 1
  %328 = trunc i32 %232 to i8
  %329 = select i1 %246, i64 2, i64 1
  %330 = getelementptr inbounds i8, i8* %317, i64 %329
  store i8 %328, i8* %330, align 1
  %331 = trunc i32 %236 to i8
  %332 = zext i32 %324 to i64
  %333 = getelementptr inbounds i8, i8* %317, i64 %332
  store i8 %331, i8* %333, align 1
  br label %344

334:                                              ; preds = %311
  %335 = trunc i32 %234 to i8
  %336 = xor i32 %247, 1
  %337 = zext i32 %336 to i64
  %338 = getelementptr inbounds i8, i8* %317, i64 %337
  store i8 %335, i8* %338, align 1
  br label %339

339:                                              ; preds = %311, %334
  %340 = trunc i32 %232 to i8
  %341 = zext i1 %246 to i64
  %342 = getelementptr inbounds i8, i8* %317, i64 %341
  store i8 %340, i8* %342, align 1
  br label %344

343:                                              ; preds = %311
  unreachable

344:                                              ; preds = %322, %339, %277, %305
  ret void
}

declare void @cr_png_set_background_fixed(%struct.png_struct_def*, %struct.png_color_16_struct*, i32, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @make_ga_colormap(%struct.png_image_read_control* nocapture) unnamed_addr #0 {
  br label %2

2:                                                ; preds = %2, %1
  %3 = phi i32 [ 0, %1 ], [ %7, %2 ]
  %4 = shl i32 %3, 8
  %5 = or i32 %4, 115
  %6 = udiv i32 %5, 231
  %7 = add nuw nsw i32 %3, 1
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %3, i32 %6, i32 %6, i32 %6, i32 255, i32 1)
  %8 = icmp eq i32 %7, 231
  br i1 %8, label %9, label %2

9:                                                ; preds = %2
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 231, i32 255, i32 255, i32 255, i32 0, i32 1)
  br label %10

10:                                               ; preds = %10, %9
  %11 = phi i32 [ 232, %9 ], [ %19, %10 ]
  %12 = phi i32 [ 1, %9 ], [ %20, %10 ]
  %13 = mul nuw nsw i32 %12, 51
  %14 = or i32 %11, 1
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %11, i32 0, i32 0, i32 0, i32 %13, i32 1)
  %15 = add i32 %11, 2
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %14, i32 51, i32 51, i32 51, i32 %13, i32 1)
  %16 = add i32 %11, 3
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %15, i32 102, i32 102, i32 102, i32 %13, i32 1)
  %17 = add i32 %11, 4
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %16, i32 153, i32 153, i32 153, i32 %13, i32 1)
  %18 = add i32 %11, 5
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %17, i32 204, i32 204, i32 204, i32 %13, i32 1)
  %19 = add i32 %11, 6
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %18, i32 255, i32 255, i32 255, i32 %13, i32 1)
  %20 = add nuw nsw i32 %12, 1
  %21 = icmp eq i32 %20, 5
  br i1 %21, label %22, label %10

22:                                               ; preds = %10
  ret i32 256
}

declare void @cr_png_set_rgb_to_gray_fixed(%struct.png_struct_def*, i32, i32, i32) local_unnamed_addr #2

declare zeroext i16 @cr_png_gamma_16bit_correct(i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @make_rgb_colormap(%struct.png_image_read_control* nocapture) unnamed_addr #0 {
  br label %2

2:                                                ; preds = %18, %1
  %3 = phi i32 [ 0, %1 ], [ %19, %18 ]
  %4 = phi i32 [ 0, %1 ], [ %15, %18 ]
  %5 = mul nuw nsw i32 %3, 51
  br label %6

6:                                                ; preds = %6, %2
  %7 = phi i32 [ 0, %2 ], [ %16, %6 ]
  %8 = phi i32 [ %4, %2 ], [ %15, %6 ]
  %9 = mul nuw nsw i32 %7, 51
  %10 = add i32 %8, 1
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %8, i32 %5, i32 %9, i32 0, i32 255, i32 1)
  %11 = add i32 %8, 2
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %10, i32 %5, i32 %9, i32 51, i32 255, i32 1)
  %12 = add i32 %8, 3
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %11, i32 %5, i32 %9, i32 102, i32 255, i32 1)
  %13 = add i32 %8, 4
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %12, i32 %5, i32 %9, i32 153, i32 255, i32 1)
  %14 = add i32 %8, 5
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %13, i32 %5, i32 %9, i32 204, i32 255, i32 1)
  %15 = add i32 %8, 6
  tail call fastcc void @png_create_colormap_entry(%struct.png_image_read_control* %0, i32 %14, i32 %5, i32 %9, i32 255, i32 255, i32 1)
  %16 = add nuw nsw i32 %7, 1
  %17 = icmp eq i32 %16, 6
  br i1 %17, label %18, label %6

18:                                               ; preds = %6
  %19 = add nuw nsw i32 %3, 1
  %20 = icmp eq i32 %19, 6
  br i1 %20, label %21, label %2

21:                                               ; preds = %18
  ret i32 %15
}

declare void @cr_png_set_tRNS_to_alpha(%struct.png_struct_def*) local_unnamed_addr #2

declare void @cr_png_set_alpha_mode_fixed(%struct.png_struct_def*, i32, i32) local_unnamed_addr #2

declare i32 @cr_png_gamma_significant(i32) local_unnamed_addr #2

declare i32 @cr_png_reciprocal(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @decode_gamma(%struct.png_image_read_control* nocapture, i32, i32) unnamed_addr #0 {
  %4 = icmp eq i32 %2, 3
  br i1 %4, label %5, label %8

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %5, %3
  %9 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %47

11:                                               ; preds = %8
  %12 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 0
  %13 = load %struct.png_image*, %struct.png_image** %12, align 8
  %14 = getelementptr inbounds %struct.png_image, %struct.png_image* %13, i64 0, i32 0
  %15 = load %struct.png_control*, %struct.png_control** %14, align 8
  %16 = getelementptr inbounds %struct.png_control, %struct.png_control* %15, i64 0, i32 0
  %17 = load %struct.png_struct_def*, %struct.png_struct_def** %16, align 8
  %18 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %17, i64 0, i32 134, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = tail call i32 @cr_png_gamma_significant(i32 %19) #9
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %45, label %22

22:                                               ; preds = %11
  %23 = icmp slt i32 %19, 100000
  br i1 %23, label %26, label %24

24:                                               ; preds = %22
  %25 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  br label %37

26:                                               ; preds = %22
  %27 = icmp eq i32 %19, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %26
  %29 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  br label %43

30:                                               ; preds = %26
  %31 = mul nsw i32 %19, 11
  %32 = add nsw i32 %31, 2
  %33 = sdiv i32 %32, 5
  %34 = tail call i32 @cr_png_gamma_significant(i32 %33) #9
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  br i1 %35, label %43, label %37

37:                                               ; preds = %30, %24
  %38 = phi i32* [ %25, %24 ], [ %36, %30 ]
  store i32 3, i32* %38, align 8
  %39 = tail call i32 @cr_png_reciprocal(i32 %19) #9
  %40 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 9
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  %42 = load i32, i32* %41, align 8
  br label %47

43:                                               ; preds = %28, %30
  %44 = phi i32* [ %29, %28 ], [ %36, %30 ]
  store i32 1, i32* %44, align 8
  br label %55

45:                                               ; preds = %11
  %46 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 8
  store i32 4, i32* %46, align 8
  br label %60

47:                                               ; preds = %37, %8
  %48 = phi i32 [ %9, %8 ], [ %42, %37 ]
  switch i32 %48, label %62 [
    i32 3, label %49
    i32 1, label %55
    i32 2, label %69
    i32 4, label %60
  ]

49:                                               ; preds = %47
  %50 = mul i32 %1, 257
  %51 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 9
  %52 = load i32, i32* %51, align 4
  %53 = tail call zeroext i16 @cr_png_gamma_16bit_correct(i32 %50, i32 %52) #9
  %54 = zext i16 %53 to i32
  br label %69

55:                                               ; preds = %43, %47
  %56 = zext i32 %1 to i64
  %57 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %56
  %58 = load i16, i16* %57, align 2
  %59 = zext i16 %58 to i32
  br label %69

60:                                               ; preds = %45, %47
  %61 = mul i32 %1, 257
  br label %69

62:                                               ; preds = %47
  %63 = getelementptr inbounds %struct.png_image_read_control, %struct.png_image_read_control* %0, i64 0, i32 0
  %64 = load %struct.png_image*, %struct.png_image** %63, align 8
  %65 = getelementptr inbounds %struct.png_image, %struct.png_image* %64, i64 0, i32 0
  %66 = load %struct.png_control*, %struct.png_control** %65, align 8
  %67 = getelementptr inbounds %struct.png_control, %struct.png_control* %66, i64 0, i32 0
  %68 = load %struct.png_struct_def*, %struct.png_struct_def** %67, align 8
  tail call void @cr_png_error(%struct.png_struct_def* %68, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.54, i64 0, i64 0)) #10
  unreachable

69:                                               ; preds = %60, %47, %55, %49
  %70 = phi i32 [ %61, %60 ], [ %1, %47 ], [ %59, %55 ], [ %54, %49 ]
  ret i32 %70
}

declare i64 @cr_png_get_rowbytes(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_and_map(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 57
  %9 = load i8, i8* %8, align 2
  switch i8 %9, label %11 [
    i8 0, label %12
    i8 1, label %10
  ]

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %1, %10
  %13 = phi i32 [ 7, %10 ], [ 1, %1 ]
  %14 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i8, i8* %0, i64 72
  %19 = bitcast i8* %18 to i32*
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds i8, i8* %0, i64 48
  %22 = bitcast i8* %21 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = getelementptr inbounds i8, i8* %0, i64 56
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds i8, i8* %0, i64 40
  %28 = bitcast i8* %27 to i8**
  %29 = zext i32 %17 to i64
  br label %30

30:                                               ; preds = %221, %12
  %31 = phi i8 [ %9, %12 ], [ %222, %221 ]
  %32 = phi i32 [ 0, %12 ], [ %219, %221 ]
  %33 = icmp eq i8 %31, 1
  br i1 %33, label %34, label %63

34:                                               ; preds = %30
  %35 = icmp ugt i32 %32, 1
  %36 = sub nuw nsw i32 7, %32
  %37 = ashr i32 %36, 1
  %38 = select i1 %35, i32 %37, i32 3
  %39 = shl nsw i32 -1, %38
  %40 = xor i32 %39, -1
  %41 = and i32 %32, 1
  %42 = add nuw nsw i32 %32, 1
  %43 = lshr i32 %42, 1
  %44 = sub nsw i32 3, %43
  %45 = shl i32 %41, %44
  %46 = and i32 %45, 7
  %47 = add i32 %17, %40
  %48 = sub i32 %47, %46
  %49 = lshr i32 %48, %38
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %218, label %51

51:                                               ; preds = %34
  %52 = shl i32 1, %37
  %53 = xor i32 %41, 1
  %54 = lshr i32 %32, 1
  %55 = sub nsw i32 3, %54
  %56 = shl i32 %53, %55
  %57 = and i32 %56, 7
  %58 = icmp ugt i32 %32, 2
  br i1 %58, label %59, label %63

59:                                               ; preds = %51
  %60 = add nsw i32 %32, -1
  %61 = ashr i32 %60, 1
  %62 = lshr i32 8, %61
  br label %63

63:                                               ; preds = %30, %59, %51
  %64 = phi i32 [ %46, %51 ], [ %46, %59 ], [ 0, %30 ]
  %65 = phi i32 [ %52, %51 ], [ %52, %59 ], [ 1, %30 ]
  %66 = phi i32 [ 8, %51 ], [ %62, %59 ], [ 1, %30 ]
  %67 = phi i32 [ %57, %51 ], [ %57, %59 ], [ 0, %30 ]
  %68 = icmp ult i32 %67, %15
  br i1 %68, label %69, label %218

69:                                               ; preds = %63
  %70 = zext i32 %64 to i64
  %71 = zext i32 %65 to i64
  %72 = icmp ult i32 %64, %17
  %73 = icmp ult i32 %64, %17
  %74 = icmp ult i32 %64, %17
  %75 = icmp ult i32 %64, %17
  br label %76

76:                                               ; preds = %69, %215
  %77 = phi i32 [ %67, %69 ], [ %216, %215 ]
  %78 = load i8*, i8** %28, align 8
  %79 = zext i32 %77 to i64
  %80 = mul nsw i64 %26, %79
  %81 = getelementptr inbounds i8, i8* %23, i64 %80
  %82 = getelementptr inbounds i8, i8* %81, i64 %29
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %78, i8* null)
  %83 = getelementptr inbounds i8, i8* %81, i64 %70
  switch i32 %20, label %215 [
    i32 1, label %87
    i32 2, label %86
    i32 3, label %85
    i32 4, label %84
  ]

84:                                               ; preds = %76
  br i1 %72, label %160, label %215

85:                                               ; preds = %76
  br i1 %73, label %132, label %215

86:                                               ; preds = %76
  br i1 %74, label %119, label %215

87:                                               ; preds = %76
  br i1 %75, label %88, label %215

88:                                               ; preds = %87, %114
  %89 = phi i8* [ %117, %114 ], [ %83, %87 ]
  %90 = phi i8* [ %94, %114 ], [ %78, %87 ]
  %91 = getelementptr inbounds i8, i8* %90, i64 1
  %92 = load i8, i8* %90, align 1
  %93 = zext i8 %92 to i32
  %94 = getelementptr inbounds i8, i8* %90, i64 2
  %95 = load i8, i8* %91, align 1
  %96 = zext i8 %95 to i32
  %97 = icmp ugt i8 %95, -27
  br i1 %97, label %98, label %102

98:                                               ; preds = %88
  %99 = mul nuw nsw i32 %93, 231
  %100 = add nuw nsw i32 %99, 128
  %101 = lshr i32 %100, 8
  br label %114

102:                                              ; preds = %88
  %103 = icmp ult i8 %95, 26
  br i1 %103, label %114, label %104

104:                                              ; preds = %102
  %105 = mul nuw nsw i32 %96, 5
  %106 = add nuw nsw i32 %105, 130
  %107 = lshr i32 %106, 8
  %108 = mul nuw nsw i32 %107, 6
  %109 = mul nuw nsw i32 %93, 5
  %110 = add nuw nsw i32 %109, 130
  %111 = lshr i32 %110, 8
  %112 = add nuw nsw i32 %111, 226
  %113 = add nuw nsw i32 %112, %108
  br label %114

114:                                              ; preds = %102, %104, %98
  %115 = phi i32 [ %101, %98 ], [ %113, %104 ], [ 231, %102 ]
  %116 = trunc i32 %115 to i8
  store i8 %116, i8* %89, align 1
  %117 = getelementptr inbounds i8, i8* %89, i64 %71
  %118 = icmp ult i8* %117, %82
  br i1 %118, label %88, label %215

119:                                              ; preds = %86, %119
  %120 = phi i8* [ %130, %119 ], [ %83, %86 ]
  %121 = phi i8* [ %124, %119 ], [ %78, %86 ]
  %122 = getelementptr inbounds i8, i8* %121, i64 1
  %123 = load i8, i8* %121, align 1
  %124 = getelementptr inbounds i8, i8* %121, i64 2
  %125 = load i8, i8* %122, align 1
  %126 = icmp eq i8 %125, 0
  %127 = icmp eq i8 %123, -2
  %128 = select i1 %127, i8 -1, i8 %123
  %129 = select i1 %126, i8 -2, i8 %128
  store i8 %129, i8* %120, align 1
  %130 = getelementptr inbounds i8, i8* %120, i64 %71
  %131 = icmp ult i8* %130, %82
  br i1 %131, label %119, label %215

132:                                              ; preds = %85, %132
  %133 = phi i8* [ %158, %132 ], [ %83, %85 ]
  %134 = phi i8* [ %157, %132 ], [ %78, %85 ]
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i32
  %137 = mul nuw nsw i32 %136, 5
  %138 = add nuw nsw i32 %137, 130
  %139 = lshr i32 %138, 8
  %140 = mul nuw nsw i32 %139, 6
  %141 = getelementptr inbounds i8, i8* %134, i64 1
  %142 = load i8, i8* %141, align 1
  %143 = zext i8 %142 to i32
  %144 = mul nuw nsw i32 %143, 5
  %145 = add nuw nsw i32 %144, 130
  %146 = lshr i32 %145, 8
  %147 = add nuw nsw i32 %140, %146
  %148 = mul nuw nsw i32 %147, 6
  %149 = getelementptr inbounds i8, i8* %134, i64 2
  %150 = load i8, i8* %149, align 1
  %151 = zext i8 %150 to i32
  %152 = mul nuw nsw i32 %151, 5
  %153 = add nuw nsw i32 %152, 130
  %154 = lshr i32 %153, 8
  %155 = add nuw nsw i32 %148, %154
  %156 = trunc i32 %155 to i8
  store i8 %156, i8* %133, align 1
  %157 = getelementptr inbounds i8, i8* %134, i64 3
  %158 = getelementptr inbounds i8, i8* %133, i64 %71
  %159 = icmp ult i8* %158, %82
  br i1 %159, label %132, label %215

160:                                              ; preds = %84, %210
  %161 = phi i8* [ %213, %210 ], [ %83, %84 ]
  %162 = phi i8* [ %212, %210 ], [ %78, %84 ]
  %163 = getelementptr inbounds i8, i8* %162, i64 3
  %164 = load i8, i8* %163, align 1
  %165 = icmp ugt i8 %164, -61
  br i1 %165, label %166, label %189

166:                                              ; preds = %160
  %167 = load i8, i8* %162, align 1
  %168 = zext i8 %167 to i32
  %169 = mul nuw nsw i32 %168, 5
  %170 = add nuw nsw i32 %169, 130
  %171 = lshr i32 %170, 8
  %172 = mul nuw nsw i32 %171, 6
  %173 = getelementptr inbounds i8, i8* %162, i64 1
  %174 = load i8, i8* %173, align 1
  %175 = zext i8 %174 to i32
  %176 = mul nuw nsw i32 %175, 5
  %177 = add nuw nsw i32 %176, 130
  %178 = lshr i32 %177, 8
  %179 = add nuw nsw i32 %172, %178
  %180 = mul nuw nsw i32 %179, 6
  %181 = getelementptr inbounds i8, i8* %162, i64 2
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = mul nuw nsw i32 %183, 5
  %185 = add nuw nsw i32 %184, 130
  %186 = lshr i32 %185, 8
  %187 = add nuw nsw i32 %180, %186
  %188 = trunc i32 %187 to i8
  br label %210

189:                                              ; preds = %160
  %190 = icmp ult i8 %164, 64
  br i1 %190, label %210, label %191

191:                                              ; preds = %189
  %192 = load i8, i8* %162, align 1
  %193 = icmp slt i8 %192, 0
  %194 = select i1 %193, i32 226, i32 217
  %195 = and i8 %192, 64
  %196 = icmp eq i8 %195, 0
  %197 = add nuw nsw i32 %194, 9
  %198 = select i1 %196, i32 %194, i32 %197
  %199 = add nuw nsw i32 %198, 3
  %200 = select i1 %193, i32 %199, i32 %198
  %201 = add nuw nsw i32 %200, 3
  %202 = select i1 %196, i32 %200, i32 %201
  %203 = lshr i8 %192, 7
  %204 = zext i8 %203 to i32
  %205 = xor i1 %196, true
  %206 = zext i1 %205 to i32
  %207 = add nuw nsw i32 %206, %204
  %208 = add nuw nsw i32 %207, %202
  %209 = trunc i32 %208 to i8
  br label %210

210:                                              ; preds = %189, %191, %166
  %211 = phi i8 [ %209, %191 ], [ %188, %166 ], [ -40, %189 ]
  store i8 %211, i8* %161, align 1
  %212 = getelementptr inbounds i8, i8* %162, i64 4
  %213 = getelementptr inbounds i8, i8* %161, i64 %71
  %214 = icmp ult i8* %213, %82
  br i1 %214, label %160, label %215

215:                                              ; preds = %210, %132, %119, %114, %84, %85, %86, %87, %76
  %216 = add i32 %77, %66
  %217 = icmp ult i32 %216, %15
  br i1 %217, label %76, label %218

218:                                              ; preds = %215, %63, %34
  %219 = add nuw nsw i32 %32, 1
  %220 = icmp eq i32 %219, %13
  br i1 %220, label %223, label %221

221:                                              ; preds = %218
  %222 = load i8, i8* %8, align 2
  br label %30

223:                                              ; preds = %218
  ret i32 1
}

declare void @cr_png_set_keep_unknown_chunks(%struct.png_struct_def*, i32, i8*, i32) local_unnamed_addr #2

declare i32 @cr_png_muldiv(i32*, i32, i32, i32) local_unnamed_addr #2

declare void @cr_png_set_add_alpha(%struct.png_struct_def*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_composite(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 57
  %9 = load i8, i8* %8, align 2
  switch i8 %9, label %11 [
    i8 0, label %12
    i8 1, label %10
  ]

10:                                               ; preds = %1
  br label %12

11:                                               ; preds = %1
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0)) #10
  unreachable

12:                                               ; preds = %1, %10
  %13 = phi i32 [ 7, %10 ], [ 1, %1 ]
  %14 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds i8, i8* %0, i64 56
  %19 = bitcast i8* %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 4
  %22 = load i32, i32* %21, align 4
  %23 = and i32 %22, 2
  %24 = or i32 %23, 1
  %25 = getelementptr inbounds i8, i8* %0, i64 40
  %26 = bitcast i8* %25 to i8**
  %27 = getelementptr inbounds i8, i8* %0, i64 48
  %28 = bitcast i8* %27 to i8**
  %29 = mul i32 %24, %17
  %30 = zext i32 %29 to i64
  %31 = zext i32 %24 to i64
  %32 = add nuw nsw i32 %24, 1
  %33 = zext i32 %32 to i64
  %34 = icmp eq i32 %23, 0
  br label %35

35:                                               ; preds = %136, %12
  %36 = phi i8 [ %9, %12 ], [ %137, %136 ]
  %37 = phi i32 [ 0, %12 ], [ %134, %136 ]
  %38 = icmp eq i8 %36, 1
  br i1 %38, label %39, label %69

39:                                               ; preds = %35
  %40 = icmp ugt i32 %37, 1
  %41 = sub nuw nsw i32 7, %37
  %42 = ashr i32 %41, 1
  %43 = select i1 %40, i32 %42, i32 3
  %44 = shl nsw i32 -1, %43
  %45 = xor i32 %44, -1
  %46 = and i32 %37, 1
  %47 = add nuw nsw i32 %37, 1
  %48 = lshr i32 %47, 1
  %49 = sub nsw i32 3, %48
  %50 = shl i32 %46, %49
  %51 = and i32 %50, 7
  %52 = add i32 %17, %45
  %53 = sub i32 %52, %51
  %54 = lshr i32 %53, %43
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %133, label %56

56:                                               ; preds = %39
  %57 = mul nuw nsw i32 %51, %24
  %58 = shl i32 %24, %42
  %59 = xor i32 %46, 1
  %60 = lshr i32 %37, 1
  %61 = sub nsw i32 3, %60
  %62 = shl i32 %59, %61
  %63 = and i32 %62, 7
  %64 = icmp ugt i32 %37, 2
  br i1 %64, label %65, label %69

65:                                               ; preds = %56
  %66 = add nsw i32 %37, -1
  %67 = ashr i32 %66, 1
  %68 = lshr i32 8, %67
  br label %69

69:                                               ; preds = %35, %65, %56
  %70 = phi i32 [ %57, %56 ], [ %57, %65 ], [ 0, %35 ]
  %71 = phi i32 [ %58, %56 ], [ %58, %65 ], [ %24, %35 ]
  %72 = phi i32 [ 8, %56 ], [ %68, %65 ], [ 1, %35 ]
  %73 = phi i32 [ %63, %56 ], [ %63, %65 ], [ 0, %35 ]
  %74 = icmp ult i32 %73, %15
  br i1 %74, label %75, label %133

75:                                               ; preds = %69
  %76 = zext i32 %70 to i64
  %77 = zext i32 %71 to i64
  %78 = icmp ult i32 %70, %29
  br label %79

79:                                               ; preds = %75, %130
  %80 = phi i32 [ %73, %75 ], [ %131, %130 ]
  %81 = load i8*, i8** %26, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %81, i8* null)
  %82 = load i8*, i8** %28, align 8
  %83 = zext i32 %80 to i64
  %84 = mul nsw i64 %20, %83
  %85 = getelementptr inbounds i8, i8* %82, i64 %84
  %86 = getelementptr inbounds i8, i8* %85, i64 %30
  br i1 %78, label %87, label %130

87:                                               ; preds = %79
  %88 = getelementptr inbounds i8, i8* %85, i64 %76
  br label %89

89:                                               ; preds = %87, %126
  %90 = phi i8* [ %128, %126 ], [ %88, %87 ]
  %91 = phi i8* [ %127, %126 ], [ %81, %87 ]
  %92 = getelementptr inbounds i8, i8* %91, i64 %31
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %126, label %95

95:                                               ; preds = %89
  %96 = icmp eq i8 %93, -1
  %97 = xor i8 %93, -1
  %98 = zext i8 %97 to i32
  %99 = load i8, i8* %91, align 1
  br i1 %96, label %124, label %100

100:                                              ; preds = %95
  %101 = zext i8 %99 to i32
  %102 = mul nuw nsw i32 %101, 65535
  %103 = load i8, i8* %90, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %104
  %106 = load i16, i16* %105, align 2
  %107 = zext i16 %106 to i32
  %108 = mul nuw nsw i32 %107, %98
  %109 = add nuw nsw i32 %108, %102
  %110 = lshr i32 %109, 15
  %111 = zext i32 %110 to i64
  %112 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %111
  %113 = load i16, i16* %112, align 2
  %114 = zext i16 %113 to i32
  %115 = and i32 %109, 32767
  %116 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %111
  %117 = load i8, i8* %116, align 1
  %118 = zext i8 %117 to i32
  %119 = mul nuw nsw i32 %115, %118
  %120 = lshr i32 %119, 12
  %121 = add nuw nsw i32 %120, %114
  %122 = lshr i32 %121, 8
  %123 = trunc i32 %122 to i8
  br label %124

124:                                              ; preds = %95, %100
  %125 = phi i8 [ %123, %100 ], [ %99, %95 ]
  store i8 %125, i8* %90, align 1
  br i1 %34, label %126, label %139

126:                                              ; preds = %124, %197, %89
  %127 = getelementptr inbounds i8, i8* %91, i64 %33
  %128 = getelementptr inbounds i8, i8* %90, i64 %77
  %129 = icmp ult i8* %128, %86
  br i1 %129, label %89, label %130

130:                                              ; preds = %126, %79
  %131 = add i32 %80, %72
  %132 = icmp ult i32 %131, %15
  br i1 %132, label %79, label %133

133:                                              ; preds = %130, %69, %39
  %134 = add nuw nsw i32 %37, 1
  %135 = icmp eq i32 %134, %13
  br i1 %135, label %138, label %136

136:                                              ; preds = %133
  %137 = load i8, i8* %8, align 2
  br label %35

138:                                              ; preds = %133
  ret i32 1

139:                                              ; preds = %124
  %140 = getelementptr inbounds i8, i8* %91, i64 1
  %141 = load i8, i8* %140, align 1
  br i1 %96, label %167, label %142

142:                                              ; preds = %139
  %143 = zext i8 %141 to i32
  %144 = mul nuw nsw i32 %143, 65535
  %145 = getelementptr inbounds i8, i8* %90, i64 1
  %146 = load i8, i8* %145, align 1
  %147 = zext i8 %146 to i64
  %148 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %147
  %149 = load i16, i16* %148, align 2
  %150 = zext i16 %149 to i32
  %151 = mul nuw nsw i32 %150, %98
  %152 = add nuw nsw i32 %151, %144
  %153 = lshr i32 %152, 15
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %154
  %156 = load i16, i16* %155, align 2
  %157 = zext i16 %156 to i32
  %158 = and i32 %152, 32767
  %159 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %154
  %160 = load i8, i8* %159, align 1
  %161 = zext i8 %160 to i32
  %162 = mul nuw nsw i32 %158, %161
  %163 = lshr i32 %162, 12
  %164 = add nuw nsw i32 %163, %157
  %165 = lshr i32 %164, 8
  %166 = trunc i32 %165 to i8
  br label %167

167:                                              ; preds = %142, %139
  %168 = phi i8 [ %166, %142 ], [ %141, %139 ]
  %169 = getelementptr inbounds i8, i8* %90, i64 1
  store i8 %168, i8* %169, align 1
  %170 = getelementptr inbounds i8, i8* %91, i64 2
  %171 = load i8, i8* %170, align 1
  br i1 %96, label %197, label %172

172:                                              ; preds = %167
  %173 = zext i8 %171 to i32
  %174 = mul nuw nsw i32 %173, 65535
  %175 = getelementptr inbounds i8, i8* %90, i64 2
  %176 = load i8, i8* %175, align 1
  %177 = zext i8 %176 to i64
  %178 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %177
  %179 = load i16, i16* %178, align 2
  %180 = zext i16 %179 to i32
  %181 = mul nuw nsw i32 %180, %98
  %182 = add nuw nsw i32 %181, %174
  %183 = lshr i32 %182, 15
  %184 = zext i32 %183 to i64
  %185 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %184
  %186 = load i16, i16* %185, align 2
  %187 = zext i16 %186 to i32
  %188 = and i32 %182, 32767
  %189 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %184
  %190 = load i8, i8* %189, align 1
  %191 = zext i8 %190 to i32
  %192 = mul nuw nsw i32 %188, %191
  %193 = lshr i32 %192, 12
  %194 = add nuw nsw i32 %193, %187
  %195 = lshr i32 %194, 8
  %196 = trunc i32 %195 to i8
  br label %197

197:                                              ; preds = %172, %167
  %198 = phi i8 [ %196, %172 ], [ %171, %167 ]
  %199 = getelementptr inbounds i8, i8* %90, i64 2
  store i8 %198, i8* %199, align 1
  br label %126
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @png_image_read_background(i8* nocapture readonly) #0 {
  %2 = bitcast i8* %0 to %struct.png_image**
  %3 = load %struct.png_image*, %struct.png_image** %2, align 8
  %4 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 0
  %5 = load %struct.png_control*, %struct.png_control** %4, align 8
  %6 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 0
  %7 = load %struct.png_struct_def*, %struct.png_struct_def** %6, align 8
  %8 = getelementptr inbounds %struct.png_control, %struct.png_control* %5, i64 0, i32 1
  %9 = load %struct.png_info_def*, %struct.png_info_def** %8, align 8
  %10 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = and i32 %15, 6291456
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %1
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.61, i64 0, i64 0)) #10
  unreachable

19:                                               ; preds = %1
  %20 = trunc i32 %15 to i8
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.62, i64 0, i64 0)) #10
  unreachable

23:                                               ; preds = %19
  %24 = tail call zeroext i8 @cr_png_get_channels(%struct.png_struct_def* %7, %struct.png_info_def* %9) #9
  %25 = icmp eq i8 %24, 2
  br i1 %25, label %27, label %26

26:                                               ; preds = %23
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.63, i64 0, i64 0)) #10
  unreachable

27:                                               ; preds = %23
  %28 = getelementptr inbounds %struct.png_image, %struct.png_image* %3, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = and i32 %29, 5
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %34

33:                                               ; preds = %27
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.64, i64 0, i64 0)) #10
  unreachable

34:                                               ; preds = %27
  %35 = getelementptr inbounds %struct.png_struct_def, %struct.png_struct_def* %7, i64 0, i32 57
  %36 = load i8, i8* %35, align 2
  switch i8 %36, label %38 [
    i8 0, label %39
    i8 1, label %37
  ]

37:                                               ; preds = %34
  br label %39

38:                                               ; preds = %34
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.56, i64 0, i64 0)) #10
  unreachable

39:                                               ; preds = %34, %37
  %40 = phi i32 [ 7, %37 ], [ 1, %34 ]
  %41 = getelementptr inbounds %struct.png_info_def, %struct.png_info_def* %9, i64 0, i32 7
  %42 = load i8, i8* %41, align 4
  switch i8 %42, label %329 [
    i8 8, label %43
    i8 16, label %224
  ]

43:                                               ; preds = %39
  %44 = getelementptr inbounds i8, i8* %0, i64 48
  %45 = bitcast i8* %44 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds i8, i8* %0, i64 56
  %48 = bitcast i8* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = getelementptr inbounds i8, i8* %0, i64 32
  %51 = bitcast i8* %50 to %struct.png_color_struct**
  %52 = getelementptr inbounds i8, i8* %0, i64 40
  %53 = bitcast i8* %52 to i8**
  %54 = zext i32 %13 to i64
  br label %55

55:                                               ; preds = %222, %43
  %56 = phi i8 [ %36, %43 ], [ %223, %222 ]
  %57 = phi i32 [ 0, %43 ], [ %220, %222 ]
  %58 = icmp eq i8 %56, 1
  br i1 %58, label %59, label %88

59:                                               ; preds = %55
  %60 = icmp ugt i32 %57, 1
  %61 = sub nuw nsw i32 7, %57
  %62 = ashr i32 %61, 1
  %63 = select i1 %60, i32 %62, i32 3
  %64 = shl nsw i32 -1, %63
  %65 = xor i32 %64, -1
  %66 = and i32 %57, 1
  %67 = add nuw nsw i32 %57, 1
  %68 = lshr i32 %67, 1
  %69 = sub nsw i32 3, %68
  %70 = shl i32 %66, %69
  %71 = and i32 %70, 7
  %72 = add i32 %13, %65
  %73 = sub i32 %72, %71
  %74 = lshr i32 %73, %63
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %219, label %76

76:                                               ; preds = %59
  %77 = shl i32 1, %62
  %78 = xor i32 %66, 1
  %79 = lshr i32 %57, 1
  %80 = sub nsw i32 3, %79
  %81 = shl i32 %78, %80
  %82 = and i32 %81, 7
  %83 = icmp ugt i32 %57, 2
  br i1 %83, label %84, label %88

84:                                               ; preds = %76
  %85 = add nsw i32 %57, -1
  %86 = ashr i32 %85, 1
  %87 = lshr i32 8, %86
  br label %88

88:                                               ; preds = %55, %84, %76
  %89 = phi i32 [ %71, %76 ], [ %71, %84 ], [ 0, %55 ]
  %90 = phi i32 [ %77, %76 ], [ %77, %84 ], [ 1, %55 ]
  %91 = phi i32 [ 8, %76 ], [ %87, %84 ], [ 1, %55 ]
  %92 = phi i32 [ %82, %76 ], [ %82, %84 ], [ 0, %55 ]
  %93 = load %struct.png_color_struct*, %struct.png_color_struct** %51, align 8
  %94 = icmp eq %struct.png_color_struct* %93, null
  br i1 %94, label %95, label %157

95:                                               ; preds = %88
  %96 = icmp ult i32 %92, %11
  br i1 %96, label %97, label %219

97:                                               ; preds = %95
  %98 = zext i32 %89 to i64
  %99 = zext i32 %90 to i64
  %100 = icmp ult i32 %89, %13
  br label %101

101:                                              ; preds = %97, %154
  %102 = phi i32 [ %92, %97 ], [ %155, %154 ]
  %103 = load i8*, i8** %53, align 8
  %104 = zext i32 %102 to i64
  %105 = mul nsw i64 %49, %104
  %106 = getelementptr inbounds i8, i8* %46, i64 %105
  %107 = getelementptr inbounds i8, i8* %106, i64 %54
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %103, i8* null)
  br i1 %100, label %108, label %154

108:                                              ; preds = %101
  %109 = getelementptr inbounds i8, i8* %106, i64 %98
  br label %110

110:                                              ; preds = %108, %150
  %111 = phi i8* [ %152, %150 ], [ %109, %108 ]
  %112 = phi i8* [ %151, %150 ], [ %103, %108 ]
  %113 = getelementptr inbounds i8, i8* %112, i64 1
  %114 = load i8, i8* %113, align 1
  %115 = zext i8 %114 to i32
  %116 = icmp eq i8 %114, 0
  br i1 %116, label %150, label %117

117:                                              ; preds = %110
  %118 = load i8, i8* %112, align 1
  %119 = icmp eq i8 %114, -1
  br i1 %119, label %148, label %120

120:                                              ; preds = %117
  %121 = zext i8 %118 to i64
  %122 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %121
  %123 = load i16, i16* %122, align 2
  %124 = zext i16 %123 to i32
  %125 = mul nuw nsw i32 %124, %115
  %126 = load i8, i8* %111, align 1
  %127 = zext i8 %126 to i64
  %128 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %127
  %129 = load i16, i16* %128, align 2
  %130 = zext i16 %129 to i32
  %131 = xor i32 %115, 255
  %132 = mul nuw nsw i32 %131, %130
  %133 = add nuw nsw i32 %132, %125
  %134 = lshr i32 %133, 15
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %135
  %137 = load i16, i16* %136, align 2
  %138 = zext i16 %137 to i32
  %139 = and i32 %133, 32767
  %140 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %135
  %141 = load i8, i8* %140, align 1
  %142 = zext i8 %141 to i32
  %143 = mul nuw nsw i32 %139, %142
  %144 = lshr i32 %143, 12
  %145 = add nuw nsw i32 %144, %138
  %146 = lshr i32 %145, 8
  %147 = trunc i32 %146 to i8
  br label %148

148:                                              ; preds = %117, %120
  %149 = phi i8 [ %147, %120 ], [ %118, %117 ]
  store i8 %149, i8* %111, align 1
  br label %150

150:                                              ; preds = %110, %148
  %151 = getelementptr inbounds i8, i8* %112, i64 2
  %152 = getelementptr inbounds i8, i8* %111, i64 %99
  %153 = icmp ult i8* %152, %107
  br i1 %153, label %110, label %154

154:                                              ; preds = %150, %101
  %155 = add i32 %102, %91
  %156 = icmp ult i32 %155, %11
  br i1 %156, label %101, label %219

157:                                              ; preds = %88
  %158 = getelementptr inbounds %struct.png_color_struct, %struct.png_color_struct* %93, i64 0, i32 1
  %159 = load i8, i8* %158, align 1
  %160 = icmp ult i32 %92, %11
  br i1 %160, label %161, label %219

161:                                              ; preds = %157
  %162 = zext i8 %159 to i64
  %163 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %162
  %164 = load i16, i16* %163, align 2
  %165 = zext i32 %89 to i64
  %166 = zext i16 %164 to i32
  %167 = zext i32 %90 to i64
  %168 = icmp ult i32 %89, %13
  br label %169

169:                                              ; preds = %161, %216
  %170 = phi i32 [ %92, %161 ], [ %217, %216 ]
  %171 = load i8*, i8** %53, align 8
  %172 = zext i32 %170 to i64
  %173 = mul nsw i64 %49, %172
  %174 = getelementptr inbounds i8, i8* %46, i64 %173
  %175 = getelementptr inbounds i8, i8* %174, i64 %54
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %171, i8* null)
  br i1 %168, label %176, label %216

176:                                              ; preds = %169
  %177 = getelementptr inbounds i8, i8* %174, i64 %165
  br label %178

178:                                              ; preds = %176, %211
  %179 = phi i8* [ %214, %211 ], [ %177, %176 ]
  %180 = phi i8* [ %213, %211 ], [ %171, %176 ]
  %181 = getelementptr inbounds i8, i8* %180, i64 1
  %182 = load i8, i8* %181, align 1
  %183 = zext i8 %182 to i32
  %184 = icmp eq i8 %182, 0
  br i1 %184, label %211, label %185

185:                                              ; preds = %178
  %186 = load i8, i8* %180, align 1
  %187 = icmp eq i8 %182, -1
  br i1 %187, label %211, label %188

188:                                              ; preds = %185
  %189 = zext i8 %186 to i64
  %190 = getelementptr inbounds [256 x i16], [256 x i16]* @cr_png_sRGB_table, i64 0, i64 %189
  %191 = load i16, i16* %190, align 2
  %192 = zext i16 %191 to i32
  %193 = mul nuw nsw i32 %192, %183
  %194 = xor i32 %183, 255
  %195 = mul nuw nsw i32 %194, %166
  %196 = add nuw nsw i32 %193, %195
  %197 = lshr i32 %196, 15
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds [512 x i16], [512 x i16]* @cr_png_sRGB_base, i64 0, i64 %198
  %200 = load i16, i16* %199, align 2
  %201 = zext i16 %200 to i32
  %202 = and i32 %196, 32767
  %203 = getelementptr inbounds [512 x i8], [512 x i8]* @cr_png_sRGB_delta, i64 0, i64 %198
  %204 = load i8, i8* %203, align 1
  %205 = zext i8 %204 to i32
  %206 = mul nuw nsw i32 %202, %205
  %207 = lshr i32 %206, 12
  %208 = add nuw nsw i32 %207, %201
  %209 = lshr i32 %208, 8
  %210 = trunc i32 %209 to i8
  br label %211

211:                                              ; preds = %178, %188, %185
  %212 = phi i8 [ %210, %188 ], [ %186, %185 ], [ %159, %178 ]
  store i8 %212, i8* %179, align 1
  %213 = getelementptr inbounds i8, i8* %180, i64 2
  %214 = getelementptr inbounds i8, i8* %179, i64 %167
  %215 = icmp ult i8* %214, %175
  br i1 %215, label %178, label %216

216:                                              ; preds = %211, %169
  %217 = add i32 %170, %91
  %218 = icmp ult i32 %217, %11
  br i1 %218, label %169, label %219

219:                                              ; preds = %216, %154, %157, %95, %59
  %220 = add nuw nsw i32 %57, 1
  %221 = icmp eq i32 %220, %40
  br i1 %221, label %330, label %222

222:                                              ; preds = %219
  %223 = load i8, i8* %35, align 2
  br label %55

224:                                              ; preds = %39
  %225 = getelementptr inbounds i8, i8* %0, i64 48
  %226 = bitcast i8* %225 to i16**
  %227 = load i16*, i16** %226, align 8
  %228 = getelementptr inbounds i8, i8* %0, i64 56
  %229 = bitcast i8* %228 to i64*
  %230 = load i64, i64* %229, align 8
  %231 = sdiv i64 %230, 2
  %232 = icmp eq i32 %30, 0
  %233 = add nuw nsw i32 %30, 1
  %234 = and i32 %29, 33
  %235 = icmp eq i32 %234, 33
  %236 = mul i32 %233, %13
  %237 = zext i32 %236 to i64
  %238 = getelementptr inbounds i8, i8* %0, i64 40
  %239 = bitcast i8* %238 to i8**
  %240 = bitcast i8* %238 to i16**
  %241 = zext i1 %235 to i64
  %242 = xor i1 %235, true
  %243 = zext i1 %242 to i64
  br label %244

244:                                              ; preds = %327, %224
  %245 = phi i8 [ %36, %224 ], [ %328, %327 ]
  %246 = phi i32 [ 0, %224 ], [ %325, %327 ]
  %247 = icmp eq i8 %245, 1
  br i1 %247, label %248, label %278

248:                                              ; preds = %244
  %249 = icmp ugt i32 %246, 1
  %250 = sub nuw nsw i32 7, %246
  %251 = ashr i32 %250, 1
  %252 = select i1 %249, i32 %251, i32 3
  %253 = shl nsw i32 -1, %252
  %254 = xor i32 %253, -1
  %255 = and i32 %246, 1
  %256 = add nuw nsw i32 %246, 1
  %257 = lshr i32 %256, 1
  %258 = sub nsw i32 3, %257
  %259 = shl i32 %255, %258
  %260 = and i32 %259, 7
  %261 = add i32 %13, %254
  %262 = sub i32 %261, %260
  %263 = lshr i32 %262, %252
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %324, label %265

265:                                              ; preds = %248
  %266 = mul nuw nsw i32 %260, %233
  %267 = shl i32 %233, %251
  %268 = xor i32 %255, 1
  %269 = lshr i32 %246, 1
  %270 = sub nsw i32 3, %269
  %271 = shl i32 %268, %270
  %272 = and i32 %271, 7
  %273 = icmp ugt i32 %246, 2
  br i1 %273, label %274, label %278

274:                                              ; preds = %265
  %275 = add nsw i32 %246, -1
  %276 = ashr i32 %275, 1
  %277 = lshr i32 8, %276
  br label %278

278:                                              ; preds = %244, %274, %265
  %279 = phi i32 [ %266, %265 ], [ %266, %274 ], [ 0, %244 ]
  %280 = phi i32 [ %267, %265 ], [ %267, %274 ], [ %233, %244 ]
  %281 = phi i32 [ 8, %265 ], [ %277, %274 ], [ 1, %244 ]
  %282 = phi i32 [ %272, %265 ], [ %272, %274 ], [ 0, %244 ]
  %283 = icmp ult i32 %282, %11
  br i1 %283, label %284, label %324

284:                                              ; preds = %278
  %285 = zext i32 %279 to i64
  %286 = zext i32 %280 to i64
  %287 = icmp ult i32 %279, %236
  br label %288

288:                                              ; preds = %284, %321
  %289 = phi i32 [ %282, %284 ], [ %322, %321 ]
  %290 = zext i32 %289 to i64
  %291 = mul nsw i64 %231, %290
  %292 = getelementptr inbounds i16, i16* %227, i64 %291
  %293 = getelementptr inbounds i16, i16* %292, i64 %237
  %294 = load i8*, i8** %239, align 8
  tail call void @cr_png_read_row(%struct.png_struct_def* %7, i8* %294, i8* null)
  br i1 %287, label %295, label %321

295:                                              ; preds = %288
  %296 = getelementptr inbounds i16, i16* %292, i64 %285
  %297 = load i16*, i16** %240, align 8
  br label %298

298:                                              ; preds = %295, %317
  %299 = phi i16* [ %319, %317 ], [ %296, %295 ]
  %300 = phi i16* [ %318, %317 ], [ %297, %295 ]
  %301 = load i16, i16* %300, align 2
  %302 = zext i16 %301 to i32
  %303 = getelementptr inbounds i16, i16* %300, i64 1
  %304 = load i16, i16* %303, align 2
  switch i16 %304, label %305 [
    i16 0, label %310
    i16 -1, label %311
  ]

305:                                              ; preds = %298
  %306 = zext i16 %304 to i32
  %307 = mul nuw i32 %306, %302
  %308 = add nuw i32 %307, 32767
  %309 = udiv i32 %308, 65535
  br label %311

310:                                              ; preds = %298
  br label %311

311:                                              ; preds = %298, %305, %310
  %312 = phi i32 [ %309, %305 ], [ 0, %310 ], [ %302, %298 ]
  %313 = trunc i32 %312 to i16
  %314 = getelementptr inbounds i16, i16* %299, i64 %241
  store i16 %313, i16* %314, align 2
  br i1 %232, label %317, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds i16, i16* %299, i64 %243
  store i16 %304, i16* %316, align 2
  br label %317

317:                                              ; preds = %311, %315
  %318 = getelementptr inbounds i16, i16* %300, i64 2
  %319 = getelementptr inbounds i16, i16* %299, i64 %286
  %320 = icmp ult i16* %319, %293
  br i1 %320, label %298, label %321

321:                                              ; preds = %317, %288
  %322 = add i32 %289, %281
  %323 = icmp ult i32 %322, %11
  br i1 %323, label %288, label %324

324:                                              ; preds = %321, %278, %248
  %325 = add nuw nsw i32 %246, 1
  %326 = icmp eq i32 %325, %40
  br i1 %326, label %330, label %327

327:                                              ; preds = %324
  %328 = load i8, i8* %35, align 2
  br label %244

329:                                              ; preds = %39
  tail call void @cr_png_error(%struct.png_struct_def* %7, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.65, i64 0, i64 0)) #10
  unreachable

330:                                              ; preds = %324, %219
  ret i32 1
}

declare zeroext i8 @cr_png_get_channels(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind readonly }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"cr_png_start_read_image: argument 0"}
!4 = distinct !{!4, !"cr_png_start_read_image"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"png_read_destroy: argument 0"}
!7 = distinct !{!7, !"png_read_destroy"}
!8 = !{!9}
!9 = distinct !{!9, !10, !"cr_png_read_update_info: argument 0"}
!10 = distinct !{!10, !"cr_png_read_update_info"}
!11 = !{!12}
!12 = distinct !{!12, !10, !"cr_png_read_update_info: argument 1"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"png_image_format: argument 0"}
!15 = distinct !{!15, !"png_image_format"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"cr_png_read_update_info: argument 0"}
!18 = distinct !{!18, !"cr_png_read_update_info"}
!19 = !{!20}
!20 = distinct !{!20, !18, !"cr_png_read_update_info: argument 1"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"png_image_format: argument 0"}
!23 = distinct !{!23, !"png_image_format"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"cr_png_read_update_info: argument 0"}
!26 = distinct !{!26, !"cr_png_read_update_info"}
!27 = !{!28}
!28 = distinct !{!28, !26, !"cr_png_read_update_info: argument 1"}
