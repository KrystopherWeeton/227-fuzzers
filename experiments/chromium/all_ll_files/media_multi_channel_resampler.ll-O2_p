; ModuleID = '../../third_party/blink/renderer/platform/audio/media_multi_channel_resampler.cc'
source_filename = "../../third_party/blink/renderer/platform/audio/media_multi_channel_resampler.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MediaMultiChannelResampler" = type { %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.5", %class.scoped_refptr.23, %"class.WTF::CrossThreadFunction" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.media::MultiChannelResampler"* }
%"class.media::MultiChannelResampler" = type <{ i32 (...)**, %"class.base::RepeatingCallback", %"class.std::__1::vector", %"class.std::__1::unique_ptr.5", %"class.std::__1::unique_ptr.5", i32, [4 x i8] }>
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.1"*, %"class.std::__1::unique_ptr.1"*, %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::unique_ptr.1" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::unique_ptr.1"* }
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.media::AudioBus"* }
%"class.media::AudioBus" = type { i32 (...)**, %"class.std::__1::unique_ptr.8", i8, i64, i32, %"class.std::__1::vector.12", i32, i8, %"class.base::OnceCallback" }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { float* }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { float**, float**, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { float** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.23 = type { %"class.blink::AudioBus"* }
%"class.blink::AudioBus" = type { %"class.WTF::ThreadSafeRefCounted", i32, %"class.WTF::Vector", i32, float }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.24" }
%"class.base::RefCountedThreadSafe.24" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [64 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::AudioChannel"*, i32, i32 }
%"class.blink::AudioChannel" = type <{ i64, float*, %"class.std::__1::unique_ptr.25", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.25" = type { %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { %"class.blink::AudioArray"* }
%"class.blink::AudioArray" = type <{ float*, float*, i32, [4 x i8] }>
%"class.WTF::CrossThreadFunction" = type { %"class.base::RepeatingCallback.31" }
%"class.base::RepeatingCallback.31" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_ = comdat any

$_ZN4base8internal9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [102 x i8] c"static_cast<int>(resampler_input_bus->NumberOfChannels()) == resampler_input_bus_wrapper_->channels()\00", align 1
@.str.1 = private unnamed_addr constant [81 x i8] c"../../third_party/blink/renderer/platform/audio/media_multi_channel_resampler.cc\00", align 1
@.str.2 = private unnamed_addr constant [104 x i8] c"static_cast<int>(resampler_output_bus_wrapper_->NumberOfChannels()) == resampler_output_bus->channels()\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1

@_ZN5blink26MediaMultiChannelResamplerC1EidmN3WTF19CrossThreadFunctionIFviPNS_8AudioBusEEEE = hidden unnamed_addr alias void (%"class.blink::MediaMultiChannelResampler"*, i32, double, i64, %"class.WTF::CrossThreadFunction"*), void (%"class.blink::MediaMultiChannelResampler"*, i32, double, i64, %"class.WTF::CrossThreadFunction"*)* @_ZN5blink26MediaMultiChannelResamplerC2EidmN3WTF19CrossThreadFunctionIFviPNS_8AudioBusEEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MediaMultiChannelResamplerC2EidmN3WTF19CrossThreadFunctionIFviPNS_8AudioBusEEEE(%"class.blink::MediaMultiChannelResampler"*, i32, double, i64, %"class.WTF::CrossThreadFunction"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.base::RepeatingCallback", align 8
  %8 = bitcast %"class.blink::MediaMultiChannelResampler"* %0 to i64*
  store i64 0, i64* %8, align 8
  %9 = tail call %"class.media::AudioBus"* @_ZN5media8AudioBus13CreateWrapperEi(i32 %1) #6
  %10 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.media::AudioBus"* %9, %"class.media::AudioBus"** %10, align 8
  %11 = trunc i64 %3 to i32
  %12 = tail call %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32 %1, i32 %11, i1 zeroext false) #6
  %13 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 2, i32 0
  store %"class.blink::AudioBus"* %12, %"class.blink::AudioBus"** %13, align 8
  %14 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.WTF::CrossThreadFunction", %"class.WTF::CrossThreadFunction"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.WTF::CrossThreadFunction"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.WTF::CrossThreadFunction"* %14 to i64*
  store i64 %17, i64* %18, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %15, align 8
  %19 = bitcast %"class.base::RepeatingCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #6
  %20 = ptrtoint %"class.blink::MediaMultiChannelResampler"* %0 to i64
  %21 = tail call i8* @_Znwm(i64 56) #7, !noalias !2
  %22 = bitcast i8* %21 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %22, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"class.media::AudioBus"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #6, !noalias !2
  %23 = getelementptr inbounds i8, i8* %21, i64 32
  %24 = bitcast i8* %23 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)* @_ZN5blink26MediaMultiChannelResampler21ProvideResamplerInputEiPN5media8AudioBusE to i64), i64 0>, <2 x i64>* %24, align 8, !noalias !2
  %25 = getelementptr inbounds i8, i8* %21, i64 48
  %26 = bitcast i8* %25 to i64*
  store i64 %20, i64* %26, align 8, !noalias !2
  %27 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = tail call i8* @_Znwm(i64 64) #7
  %29 = bitcast i8* %28 to %"class.media::MultiChannelResampler"*
  %30 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = ptrtoint i8* %21 to i64
  %32 = bitcast %"class.base::RepeatingCallback"* %6 to i64*
  store i64 %31, i64* %32, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  call void @_ZN5media21MultiChannelResamplerC1EidmN4base17RepeatingCallbackIFviPNS_8AudioBusEEEE(%"class.media::MultiChannelResampler"* nonnull %29, i32 %1, double %2, i64 %3, %"class.base::RepeatingCallback"* nonnull %6) #6
  %33 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  %34 = ptrtoint i8* %28 to i64
  %35 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.media::MultiChannelResampler"*, %"class.media::MultiChannelResampler"** %35, align 8
  store i64 %34, i64* %8, align 8
  %37 = icmp eq %"class.media::MultiChannelResampler"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %5
  %39 = bitcast %"class.media::MultiChannelResampler"* %36 to void (%"class.media::MultiChannelResampler"*)***
  %40 = load void (%"class.media::MultiChannelResampler"*)**, void (%"class.media::MultiChannelResampler"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.media::MultiChannelResampler"*)*, void (%"class.media::MultiChannelResampler"*)** %40, i64 1
  %42 = load void (%"class.media::MultiChannelResampler"*)*, void (%"class.media::MultiChannelResampler"*)** %41, align 8
  call void %42(%"class.media::MultiChannelResampler"* nonnull %36) #6
  br label %43

43:                                               ; preds = %38, %5
  %44 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #6
  ret void
}

declare %"class.media::AudioBus"* @_ZN5media8AudioBus13CreateWrapperEi(i32) local_unnamed_addr #1

declare %"class.blink::AudioBus"* @_ZN5blink8AudioBus6CreateEjjb(i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MediaMultiChannelResampler21ProvideResamplerInputEiPN5media8AudioBusE(%"class.blink::MediaMultiChannelResampler"* nocapture readonly, i32, %"class.media::AudioBus"* nocapture readonly) #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 2, i32 0
  %10 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %10, i64 0, i32 2, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 5
  %14 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast float*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.12"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i32 %12, %21
  br i1 %23, label %24, label %25

24:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %8, align 8
  br label %34

25:                                               ; preds = %3
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %12) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %21) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @.str.2, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %8, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 53, %"class.logging::CheckOpResult"* nonnull %5) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %35 = load i64, i64* %15, align 8
  %36 = load i64, i64* %17, align 8
  %37 = sub i64 %35, %36
  %38 = lshr exact i64 %37, 3
  %39 = trunc i64 %38 to i32
  %40 = icmp sgt i32 %39, 0
  %41 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %9, align 8
  br i1 %40, label %42, label %44

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %2, i64 0, i32 6
  br label %51

44:                                               ; preds = %51, %34
  %45 = phi %"class.blink::AudioBus"* [ %41, %34 ], [ %67, %51 ]
  %46 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %46, align 8
  %48 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %47, i64 0, i32 1
  %49 = bitcast void ()** %48 to void (%"class.base::internal::BindStateBase"*, i32, %"class.blink::AudioBus"*)**
  %50 = load void (%"class.base::internal::BindStateBase"*, i32, %"class.blink::AudioBus"*)*, void (%"class.base::internal::BindStateBase"*, i32, %"class.blink::AudioBus"*)** %49, align 8
  call void %50(%"class.base::internal::BindStateBase"* %47, i32 %1, %"class.blink::AudioBus"* %45) #6
  ret void

51:                                               ; preds = %42, %51
  %52 = phi i64 [ %36, %42 ], [ %62, %51 ]
  %53 = phi i64 [ 0, %42 ], [ %60, %51 ]
  %54 = phi %"class.blink::AudioBus"* [ %41, %42 ], [ %67, %51 ]
  %55 = inttoptr i64 %52 to float**
  %56 = getelementptr inbounds float*, float** %55, i64 %53
  %57 = load float*, float** %56, align 8
  %58 = load i32, i32* %43, align 8
  %59 = trunc i64 %53 to i32
  call void @_ZN5blink8AudioBus16SetChannelMemoryEjPfj(%"class.blink::AudioBus"* %54, i32 %59, float* %57, i32 %58) #6
  %60 = add nuw nsw i64 %53, 1
  %61 = load i64, i64* %15, align 8
  %62 = load i64, i64* %17, align 8
  %63 = sub i64 %61, %62
  %64 = shl i64 %63, 29
  %65 = ashr i64 %64, 32
  %66 = icmp slt i64 %60, %65
  %67 = load %"class.blink::AudioBus"*, %"class.blink::AudioBus"** %9, align 8
  br i1 %66, label %51, label %44
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MediaMultiChannelResampler8ResampleEiPNS_8AudioBusE(%"class.blink::MediaMultiChannelResampler"* nocapture readonly, i32, %"class.blink::AudioBus"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #6
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 2, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %11, align 8
  %13 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %12, i64 0, i32 5
  %14 = getelementptr inbounds %"class.media::AudioBus", %"class.media::AudioBus"* %12, i64 0, i32 5, i32 0, i32 1
  %15 = bitcast float*** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector.12"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = lshr exact i64 %19, 3
  %21 = trunc i64 %20 to i32
  %22 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp eq i32 %10, %21
  br i1 %23, label %24, label %25

24:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %8, align 8
  br label %34

25:                                               ; preds = %3
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %10) #6
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEi(i32 %21) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([102 x i8], [102 x i8]* @.str, i64 0, i64 0), i8* %26, i8* %27) #6
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %8, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([81 x i8], [81 x i8]* @.str.1, i64 0, i64 0), i32 33, %"class.logging::CheckOpResult"* nonnull %5) #6
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #6
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #6
  %35 = load i32, i32* %9, align 4
  %36 = icmp eq i32 %35, 0
  %37 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %11, align 8
  br i1 %36, label %40, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 2
  br label %47

40:                                               ; preds = %60, %34
  %41 = phi %"class.media::AudioBus"* [ %37, %34 ], [ %65, %60 ]
  %42 = getelementptr inbounds %"class.blink::AudioBus", %"class.blink::AudioBus"* %2, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  call void @_ZN5media8AudioBus10set_framesEi(%"class.media::AudioBus"* %41, i32 %43) #6
  %44 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %11, align 8
  %45 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.media::MultiChannelResampler"*, %"class.media::MultiChannelResampler"** %45, align 8
  call void @_ZN5media21MultiChannelResampler8ResampleEiPNS_8AudioBusE(%"class.media::MultiChannelResampler"* %46, i32 %1, %"class.media::AudioBus"* %44) #6
  ret void

47:                                               ; preds = %38, %60
  %48 = phi %"class.media::AudioBus"* [ %37, %38 ], [ %65, %60 ]
  %49 = phi i32 [ 0, %38 ], [ %62, %60 ]
  %50 = call dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %49) #6
  %51 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 3
  store i8 0, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 1
  %53 = load float*, float** %52, align 8
  %54 = icmp eq float* %53, null
  br i1 %54, label %55, label %60

55:                                               ; preds = %47
  %56 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %50, i64 0, i32 2, i32 0, i32 0, i32 0
  %57 = load %"class.blink::AudioArray"*, %"class.blink::AudioArray"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::AudioArray", %"class.blink::AudioArray"* %57, i64 0, i32 1
  %59 = load float*, float** %58, align 8
  br label %60

60:                                               ; preds = %47, %55
  %61 = phi float* [ %59, %55 ], [ %53, %47 ]
  call void @_ZN5media8AudioBus14SetChannelDataEiPf(%"class.media::AudioBus"* %48, i32 %49, float* %61) #6
  %62 = add nuw i32 %49, 1
  %63 = load i32, i32* %9, align 4
  %64 = icmp ult i32 %62, %63
  %65 = load %"class.media::AudioBus"*, %"class.media::AudioBus"** %11, align 8
  br i1 %64, label %47, label %40
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN5media8AudioBus14SetChannelDataEiPf(%"class.media::AudioBus"*, i32, float*) local_unnamed_addr #1

declare void @_ZN5media8AudioBus10set_framesEi(%"class.media::AudioBus"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink26MediaMultiChannelResampler16ResampleInternalEiPN5media8AudioBusE(%"class.blink::MediaMultiChannelResampler"* nocapture readonly, i32, %"class.media::AudioBus"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::MediaMultiChannelResampler", %"class.blink::MediaMultiChannelResampler"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.media::MultiChannelResampler"*, %"class.media::MultiChannelResampler"** %4, align 8
  tail call void @_ZN5media21MultiChannelResampler8ResampleEiPNS_8AudioBusE(%"class.media::MultiChannelResampler"* %5, i32 %1, %"class.media::AudioBus"* %2) #6
  ret void
}

declare void @_ZN5media21MultiChannelResampler8ResampleEiPNS_8AudioBusE(%"class.media::MultiChannelResampler"*, i32, %"class.media::AudioBus"*) local_unnamed_addr #1

declare void @_ZN5blink8AudioBus16SetChannelMemoryEjPfj(%"class.blink::AudioBus"*, i32, float*, i32) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEi(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::AudioChannel"* @_ZN3WTF6VectorIN5blink12AudioChannelELj2ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #6
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #6
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), i8* %14, i8* %15) #6
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #6
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #6
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #6
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::AudioChannel"*, %"class.blink::AudioChannel"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::AudioChannel", %"class.blink::AudioChannel"* %24, i64 %25
  ret %"class.blink::AudioChannel"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS4_EEEEEFviS7_EE3RunEPNS0_13BindStateBaseEiS7_(%"class.base::internal::BindStateBase"*, i32, %"class.media::AudioBus"*) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %11 = bitcast void ()** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 %12
  %14 = bitcast i8* %13 to %"class.blink::MediaMultiChannelResampler"*
  %15 = and i64 %9, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %3
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %9, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)**
  %23 = load void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)*, void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)** %22, align 8
  br label %26

24:                                               ; preds = %3
  %25 = inttoptr i64 %9 to void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::MediaMultiChannelResampler"*, i32, %"class.media::AudioBus"*)* [ %23, %17 ], [ %25, %24 ]
  tail call void %27(%"class.blink::MediaMultiChannelResampler"* %14, i32 %1, %"class.media::AudioBus"* %2) #6
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #7
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare void @_ZN5media21MultiChannelResamplerC1EidmN4base17RepeatingCallbackIFviPNS_8AudioBusEEEE(%"class.media::MultiChannelResampler"*, i32, double, i64, %"class.base::RepeatingCallback"*) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base13BindRepeatingIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!6 = distinct !{!6, !"_ZN4base13BindRepeatingIMN5blink26MediaMultiChannelResamplerEFviPN5media8AudioBusEEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS8_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
