; ModuleID = '../../components/password_manager/core/browser/import/csv_field_parser.cc'
source_filename = "../../components/password_manager/core/browser/import/csv_field_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.password_manager::CSVFieldParser" = type { i32, %"class.base::BasicStringPiece", i64, i64 }
%"class.base::BasicStringPiece" = type { i8*, i64 }

@.str = private unnamed_addr constant [2 x i8] c"\22\00", align 1

@_ZN16password_manager14CSVFieldParserC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE = hidden unnamed_addr alias void (%"class.password_manager::CSVFieldParser"*, i8*, i64), void (%"class.password_manager::CSVFieldParser"*, i8*, i64)* @_ZN16password_manager14CSVFieldParserC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE
@_ZN16password_manager14CSVFieldParserD1Ev = hidden unnamed_addr alias void (%"class.password_manager::CSVFieldParser"*), void (%"class.password_manager::CSVFieldParser"*)* @_ZN16password_manager14CSVFieldParserD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN16password_manager14CSVFieldParserC2EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 0
  store i32 0, i32* %4, align 8
  %5 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1, i32 0
  store i8* %1, i8** %5, align 8
  %6 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 2
  %8 = bitcast i64* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN16password_manager14CSVFieldParserD2Ev(%"class.password_manager::CSVFieldParser"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN16password_manager14CSVFieldParser9NextFieldEPN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.password_manager::CSVFieldParser"*, %"class.base::BasicStringPiece"*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 3
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, 99
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  store i32 1, i32* %7, align 8
  br label %33

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 2
  %13 = load i64, i64* %12, align 8
  br label %14

14:                                               ; preds = %14, %11
  tail call void @_ZN16password_manager14CSVFieldParser11UpdateStateEv(%"class.password_manager::CSVFieldParser"* %0)
  %15 = load i32, i32* %7, align 8
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %17, label %14

17:                                               ; preds = %14
  %18 = icmp eq i32 %15, 1
  br i1 %18, label %33, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds i8, i8* %21, i64 %13
  %23 = load i64, i64* %12, align 8
  %24 = xor i64 %13, -1
  %25 = add i64 %23, %24
  %26 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  store i64 %25, i64* %27, align 8
  %28 = tail call zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8* %22, i64 %25, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0), i64 1, i32 0) #5
  br i1 %28, label %29, label %30

29:                                               ; preds = %19
  tail call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"* %1, i64 1)
  tail call void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"* %1, i64 1)
  br label %30

30:                                               ; preds = %29, %19
  %31 = load i64, i64* %3, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %3, align 8
  br label %33

33:                                               ; preds = %30, %17, %2, %10
  %34 = phi i1 [ false, %10 ], [ false, %2 ], [ true, %30 ], [ false, %17 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16password_manager14CSVFieldParser11UpdateStateEv(%"class.password_manager::CSVFieldParser"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp ugt i64 %3, %6
  br i1 %7, label %8, label %10

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 0
  store i32 1, i32* %9, align 8
  br label %37

10:                                               ; preds = %1
  %11 = icmp ult i64 %3, %6
  br i1 %11, label %12, label %16

12:                                               ; preds = %10
  %13 = tail call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %4, i64 %3) #5
  %14 = load i8, i8* %13, align 1
  %15 = load i64, i64* %2, align 8
  br label %16

16:                                               ; preds = %10, %12
  %17 = phi i64 [ %15, %12 ], [ %3, %10 ]
  %18 = phi i8 [ %14, %12 ], [ 44, %10 ]
  %19 = add i64 %17, 1
  store i64 %19, i64* %2, align 8
  %20 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  switch i32 %21, label %37 [
    i32 0, label %22
    i32 2, label %26
    i32 3, label %29
    i32 4, label %32
  ]

22:                                               ; preds = %16
  %23 = sext i8 %18 to i32
  switch i32 %23, label %25 [
    i32 44, label %37
    i32 34, label %24
  ]

24:                                               ; preds = %22
  store i32 3, i32* %20, align 8
  br label %37

25:                                               ; preds = %22
  store i32 2, i32* %20, align 8
  br label %37

26:                                               ; preds = %16
  %27 = icmp eq i8 %18, 44
  br i1 %27, label %28, label %37

28:                                               ; preds = %26
  store i32 0, i32* %20, align 8
  br label %37

29:                                               ; preds = %16
  %30 = icmp eq i8 %18, 34
  br i1 %30, label %31, label %37

31:                                               ; preds = %29
  store i32 4, i32* %20, align 8
  br label %37

32:                                               ; preds = %16
  %33 = sext i8 %18 to i32
  switch i32 %33, label %36 [
    i32 44, label %34
    i32 34, label %35
  ]

34:                                               ; preds = %32
  store i32 0, i32* %20, align 8
  br label %37

35:                                               ; preds = %32
  store i32 3, i32* %20, align 8
  br label %37

36:                                               ; preds = %32
  store i32 1, i32* %20, align 8
  br label %37

37:                                               ; preds = %16, %25, %24, %22, %26, %28, %29, %31, %36, %35, %34, %8
  ret void
}

declare zeroext i1 @_ZN4base10StartsWithENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEES4_NS_11CompareCaseE(i8*, i64, i8*, i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_prefixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZN4base16BasicStringPieceIcNSt3__111char_traitsIcEEE13remove_suffixEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: nounwind ssp uwtable
define hidden signext i8 @_ZN16password_manager14CSVFieldParser11ConsumeCharEv(%"class.password_manager::CSVFieldParser"*) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %3, %5
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.password_manager::CSVFieldParser", %"class.password_manager::CSVFieldParser"* %0, i64 0, i32 1
  %9 = tail call dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"* %8, i64 %3) #5
  %10 = load i8, i8* %9, align 1
  %11 = load i64, i64* %2, align 8
  br label %12

12:                                               ; preds = %7, %1
  %13 = phi i64 [ %11, %7 ], [ %3, %1 ]
  %14 = phi i8 [ %10, %7 ], [ 44, %1 ]
  %15 = add i64 %13, 1
  store i64 %15, i64* %2, align 8
  ret i8 %14
}

; Function Attrs: nounwind ssp uwtable
declare dereferenceable(1) i8* @_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEE2atEm(%"class.base::BasicStringPiece"*, i64) local_unnamed_addr #2 align 2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
