; ModuleID = '../../components/autofill/content/renderer/html_based_username_detector.cc'
source_filename = "../../components/autofill/content/renderer/html_based_username_detector.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.autofill::(anonymous namespace)::CategoryOfWords" = type { i8**, i64, i8**, i64 }
%"struct.std::nothrow_t" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"*, %"class.std::__1::__compressed_pair" }
%"class.autofill::FieldRendererId" = type { %"class.util::IdType" }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.autofill::FieldRendererId"* }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"*, %"class.std::__1::__compressed_pair.3" }
%"class.blink::WebFormControlElement" = type { %"class.blink::WebElement" }
%"class.blink::WebElement" = type { %"class.blink::WebNode" }
%"class.blink::WebNode" = type { i32 (...)**, %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::WebFormControlElement"* }
%"struct.autofill::FormData" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.13", %class.GURL, %class.GURL, %class.GURL, i8, [7 x i8], %"class.url::Origin", i8, [7 x i8], %"class.autofill::internal::TokenType", %"class.autofill::FormRendererId", [4 x i8], %"class.std::__1::vector.36", %"class.std::__1::vector.43", i32, [4 x i8], %"class.std::__1::vector.50", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.15" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.std::__1::pair"* }
%class.GURL = type { %"class.std::__1::basic_string.20", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.23 }
%union.anon.23 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %class.GURL* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string.20", %"class.std::__1::basic_string.20", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.32 }
%union.anon.32 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.autofill::internal::TokenType" = type { %"class.base::StrongAlias.33" }
%"class.base::StrongAlias.33" = type { %"class.base::UnguessableToken" }
%"class.autofill::FormRendererId" = type { %"class.util::IdType.34" }
%"class.util::IdType.34" = type { %"class.base::StrongAlias.35" }
%"class.base::StrongAlias.35" = type { i32 }
%"class.std::__1::vector.36" = type { %"class.std::__1::__vector_base.37" }
%"class.std::__1::__vector_base.37" = type { %"class.absl::variant"*, %"class.absl::variant"*, %"class.std::__1::__compressed_pair.38" }
%"class.absl::variant" = type opaque
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { %"class.absl::variant"* }
%"class.std::__1::vector.43" = type { %"class.std::__1::__vector_base.44" }
%"class.std::__1::__vector_base.44" = type { i32*, i32*, %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { i32* }
%"class.std::__1::vector.50" = type { %"class.std::__1::__vector_base.51" }
%"class.std::__1::__vector_base.51" = type { %"struct.autofill::FormFieldData"*, %"struct.autofill::FormFieldData"*, %"class.std::__1::__compressed_pair.59" }
%"struct.autofill::FormFieldData" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string.20", %"class.std::__1::basic_string.20", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.autofill::internal::TokenType", %"class.autofill::FieldRendererId", %"class.autofill::FormRendererId", %"class.url::Origin", i32, %"class.std::__1::basic_string.20", i64, i8, i32, i8, i8, i32, i32, i32, i8, i8, %"class.std::__1::basic_string", %"class.std::__1::vector.52", %"class.std::__1::vector.52", i32, %"class.gfx::RectF", %"class.std::__1::vector.52", %"class.std::__1::vector.52" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector.52" = type { %"class.std::__1::__vector_base.53" }
%"class.std::__1::__vector_base.53" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.autofill::FormFieldData"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { i64 }
%"class.blink::WebString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type opaque
%"struct.autofill::(anonymous namespace)::UsernameFieldData" = type { %"class.blink::WebInputElement", %"class.std::__1::basic_string", %"class.base::internal::flat_tree", %"class.std::__1::basic_string", %"class.base::internal::flat_tree" }
%"class.blink::WebInputElement" = type { %"class.blink::WebFormControlElement" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.52" }
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"class.std::__1::__compressed_pair.79" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.autofill::(anonymous namespace)::UsernameFieldData"* }
%"class.blink::WebFormElement" = type { %"class.blink::WebElement" }
%"class.std::__1::__map_iterator" = type { %"class.std::__1::__tree_iterator" }
%"class.std::__1::__tree_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.74" }
%"struct.std::__1::pair.74" = type { %"class.autofill::FormRendererId", %"class.std::__1::vector" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::vector.87" = type { %"class.std::__1::__vector_base.88" }
%"class.std::__1::__vector_base.88" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.89" }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.base::BasicStringPiece"* }
%"class.std::__1::__basic_string_common" = type { i8 }
%"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare" = type { i8 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string.20", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"struct.std::__1::__temp_value" = type { %"struct.std::__1::aligned_storage<24, 8>::type", %"class.std::__1::allocator.57"* }
%"struct.std::__1::aligned_storage<24, 8>::type" = type { [24 x i8] }
%"class.std::__1::allocator.57" = type { i8 }
%"struct.std::__1::__split_buffer.96" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.55", %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.std::__1::allocator.57"* }
%"class.std::__1::reverse_iterator.115" = type { %"class.std::__1::__wrap_iter.95", %"class.std::__1::__wrap_iter.95" }
%"class.std::__1::__wrap_iter.95" = type { %"class.std::__1::basic_string"* }

$_ZN5blink14WebFormElementD2Ev = comdat any

$_ZN5blink15WebInputElementD0Ev = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE6insertINS2_11__wrap_iterIPS8_EEEEvT_SK_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4base16BasicStringPieceIDsS3_EEEEEvDpOT_ = comdat any

$_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE13append_uniqueIRS8_EENS2_4pairINS2_11__wrap_iterIPS8_EEbEESL_SL_OT_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_ = comdat any

$_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRS6_EEEvDpOT_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_ = comdat any

$_ZNK4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_ = comdat any

$_ZN5blink14WebFormElementD0Ev = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZTVN5blink15WebInputElementE = comdat any

$_ZTVN5blink14WebFormElementE = comdat any

@_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory = internal global %"struct.autofill::(anonymous namespace)::CategoryOfWords" zeroinitializer, align 8
@_ZN8autofill14kUsernameLatinE = external constant [0 x i8*], align 8
@_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory = internal global i64 0, align 8
@_ZN8autofill18kUsernameLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZN8autofill17kUsernameNonLatinE = external constant [0 x i8*], align 8
@_ZN8autofill21kUsernameNonLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory = internal global %"struct.autofill::(anonymous namespace)::CategoryOfWords" zeroinitializer, align 8
@_ZN8autofill10kUserLatinE = external constant [0 x i8*], align 8
@_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory = internal global i64 0, align 8
@_ZN8autofill14kUserLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZN8autofill13kUserNonLatinE = external constant [0 x i8*], align 8
@_ZN8autofill17kUserNonLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory = internal global %"struct.autofill::(anonymous namespace)::CategoryOfWords" zeroinitializer, align 8
@_ZN8autofill15kTechnicalWordsE = external constant [0 x i8*], align 8
@_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory = internal global i64 0, align 8
@_ZN8autofill19kTechnicalWordsSizeE = external local_unnamed_addr constant i32, align 4
@_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory = internal global %"struct.autofill::(anonymous namespace)::CategoryOfWords" zeroinitializer, align 8
@_ZN8autofill10kWeakWordsE = external constant [0 x i8*], align 8
@_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory = internal global i64 0, align 8
@_ZN8autofill14kWeakWordsSizeE = external local_unnamed_addr constant i32, align 4
@_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories = internal global [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"] zeroinitializer, align 16
@_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories = internal global i64 0, align 8
@_ZTVN5blink15WebInputElementE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebNode"*)* @_ZN5blink7WebNodeD2Ev to i8*), i8* bitcast (void (%"class.blink::WebInputElement"*)* @_ZN5blink15WebInputElementD0Ev to i8*)] }, comdat, align 8
@_ZN8autofill12_GLOBAL__N_111kDelimitersE = internal constant [43 x i16] [i16 36, i16 34, i16 39, i16 63, i16 37, i16 42, i16 64, i16 33, i16 92, i16 47, i16 38, i16 94, i16 35, i16 58, i16 43, i16 126, i16 96, i16 59, i16 44, i16 62, i16 124, i16 60, i16 46, i16 91, i16 93, i16 40, i16 41, i16 123, i16 125, i16 45, i16 95, i16 32, i16 48, i16 49, i16 50, i16 51, i16 52, i16 53, i16 54, i16 55, i16 56, i16 57, i16 0], align 16
@.str.1 = private unnamed_addr constant [34 x i8] c"../../base/strings/string_piece.h\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory = internal global %"struct.autofill::(anonymous namespace)::CategoryOfWords" zeroinitializer, align 8
@_ZN8autofill14kNegativeLatinE = external constant [0 x i8*], align 8
@_ZGVZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory = internal global i64 0, align 8
@_ZN8autofill18kNegativeLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZN8autofill17kNegativeNonLatinE = external constant [0 x i8*], align 8
@_ZN8autofill21kNegativeNonLatinSizeE = external local_unnamed_addr constant i32, align 4
@_ZTVN5blink14WebFormElementE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WebFormElement"*)* @_ZN5blink14WebFormElementD2Ev to i8*), i8* bitcast (void (%"class.blink::WebFormElement"*)* @_ZN5blink14WebFormElementD0Ev to i8*)] }, comdat, align 8

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.std::__1::vector"* @_ZN8autofill40GetPredictionsFieldBasedOnHtmlAttributesERKNSt3__16vectorIN5blink21WebFormControlElementENS0_9allocatorIS3_EEEERKNS_8FormDataEPNS0_3mapINS_14FormRendererIdENS1_INS_15FieldRendererIdENS4_ISE_EEEENS0_4lessISD_EENS4_INS0_4pairIKSD_SG_EEEEEE(%"class.std::__1::vector.1"* dereferenceable(24), %"struct.autofill::FormData"* nocapture readonly dereferenceable(688), %"class.std::__1::map"*) local_unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.blink::WebString", align 8
  %6 = alloca %"class.blink::WebString", align 8
  %7 = alloca %"struct.autofill::(anonymous namespace)::UsernameFieldData", align 8
  %8 = alloca %"class.std::__1::vector.77", align 8
  %9 = alloca %"class.blink::WebFormElement", align 8
  %10 = alloca %"class.std::__1::__map_iterator", align 8
  %11 = alloca %"class.std::__1::vector", align 8
  %12 = bitcast %"class.blink::WebFormElement"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %9, i64 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %15 = bitcast %"class.blink::WebFormControlElement"** %14 to i64*
  %16 = bitcast %"class.blink::WebFormElement"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false)
  %17 = load i64, i64* %15, align 8
  %18 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %3
  %22 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"* %22) #13
  unreachable

23:                                               ; preds = %3
  %24 = inttoptr i64 %19 to %"class.blink::WebFormControlElement"*
  call void @_ZNK5blink21WebFormControlElement4FormEv(%"class.blink::WebFormElement"* nonnull sret %9, %"class.blink::WebFormControlElement"* %24) #12
  %25 = bitcast %"class.std::__1::__map_iterator"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #12
  %26 = getelementptr inbounds %"class.std::__1::__map_iterator", %"class.std::__1::__map_iterator"* %10, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* null, %"class.std::__1::__tree_end_node"** %26, align 8
  %27 = call i32 @_ZN8autofill9form_util17GetFormRendererIdERKN5blink14WebFormElementE(%"class.blink::WebFormElement"* nonnull dereferenceable(16) %9) #12
  %28 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to %"class.std::__1::__tree_node"**
  %30 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %29, align 8
  %31 = icmp eq %"class.std::__1::__tree_node"* %30, null
  br i1 %31, label %60, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %34

34:                                               ; preds = %56, %32
  %35 = phi %"class.std::__1::__tree_node"* [ %59, %56 ], [ %30, %32 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %58, %56 ], [ %33, %32 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ult i32 %27, %38
  br i1 %39, label %40, label %46

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, null
  br i1 %43, label %44, label %56

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

46:                                               ; preds = %34
  %47 = icmp ult i32 %38, %27
  br i1 %47, label %48, label %54

48:                                               ; preds = %46
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 1
  %50 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %49, align 8
  %51 = icmp eq %"class.std::__1::__tree_node_base"* %50, null
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %35, i64 0, i32 0, i32 0
  br label %62

56:                                               ; preds = %48, %40
  %57 = phi %"class.std::__1::__tree_node_base"* [ %42, %40 ], [ %50, %48 ]
  %58 = phi %"class.std::__1::__tree_node_base"** [ %41, %40 ], [ %49, %48 ]
  %59 = bitcast %"class.std::__1::__tree_node_base"* %57 to %"class.std::__1::__tree_node"*
  br label %34

60:                                               ; preds = %23
  %61 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %28, i64 0, i32 0
  br label %62

62:                                               ; preds = %60, %54, %52, %44
  %63 = phi %"class.std::__1::__tree_end_node"* [ %28, %60 ], [ %45, %44 ], [ %53, %52 ], [ %55, %54 ]
  %64 = phi %"class.std::__1::__tree_node_base"** [ %61, %60 ], [ %41, %44 ], [ %49, %52 ], [ %36, %54 ]
  %65 = bitcast %"class.std::__1::__tree_node_base"** %64 to %"class.std::__1::__tree_node"**
  %66 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %65, align 8
  %67 = icmp eq %"class.std::__1::__tree_node"* %66, null
  br i1 %67, label %68, label %101

68:                                               ; preds = %62
  %69 = call i8* @_Znwm(i64 64) #14, !noalias !2
  %70 = getelementptr inbounds i8, i8* %69, i64 32
  %71 = bitcast i8* %70 to i32*
  store i32 %27, i32* %71, align 8, !noalias !2
  %72 = getelementptr inbounds i8, i8* %69, i64 40
  %73 = bitcast i8* %69 to %"class.std::__1::__tree_node_base"*
  %74 = getelementptr inbounds i8, i8* %69, i64 16
  %75 = bitcast i8* %74 to %"class.std::__1::__tree_end_node"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 16, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false)
  store %"class.std::__1::__tree_end_node"* %63, %"class.std::__1::__tree_end_node"** %75, align 8
  %76 = bitcast %"class.std::__1::__tree_node_base"** %64 to i8**
  store i8* %69, i8** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %77, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %78, i64 0, i32 0
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %81, label %86, label %82

82:                                               ; preds = %68
  %83 = ptrtoint %"class.std::__1::__tree_node_base"* %80 to i64
  %84 = bitcast %"class.std::__1::map"* %2 to i64*
  store i64 %83, i64* %84, align 8
  %85 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  br label %86

86:                                               ; preds = %82, %68
  %87 = phi %"class.std::__1::__tree_node_base"* [ %73, %68 ], [ %85, %82 ]
  %88 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %89 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %88, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %89, %"class.std::__1::__tree_node_base"* %87) #12
  %90 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %91 = load i64, i64* %90, align 8
  %92 = add i64 %91, 1
  store i64 %92, i64* %90, align 8
  %93 = ptrtoint i8* %69 to i64
  %94 = bitcast %"class.std::__1::__map_iterator"* %10 to i64*
  store i64 %93, i64* %94, align 8
  %95 = bitcast %"class.std::__1::vector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %95) #12
  %96 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 1
  %98 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #12
  %99 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory to i8*) acquire, align 8
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %104, label %113, !prof !5

101:                                              ; preds = %62
  %102 = ptrtoint %"class.std::__1::__tree_node"* %66 to i64
  %103 = bitcast %"class.std::__1::__map_iterator"* %10 to i64*
  store i64 %102, i64* %103, align 8
  br label %874

104:                                              ; preds = %86
  %105 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory) #12
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %104
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill14kUsernameLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory, i64 0, i32 0), align 8
  %108 = load i32, i32* @_ZN8autofill18kUsernameLatinSizeE, align 4
  %109 = sext i32 %108 to i64
  store i64 %109, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory, i64 0, i32 1), align 8
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill17kUsernameNonLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory, i64 0, i32 2), align 8
  %110 = load i32, i32* @_ZN8autofill21kUsernameNonLatinSizeE, align 4
  %111 = sext i32 %110 to i64
  store i64 %111, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory, i64 0, i32 3), align 8
  %112 = call {}* @llvm.invariant.start.p0i8(i64 32, i8* bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory) #12
  br label %113

113:                                              ; preds = %107, %104, %86
  %114 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory to i8*) acquire, align 8
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %116, label %125, !prof !5

116:                                              ; preds = %113
  %117 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory) #12
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %125, label %119

119:                                              ; preds = %116
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill10kUserLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory, i64 0, i32 0), align 8
  %120 = load i32, i32* @_ZN8autofill14kUserLatinSizeE, align 4
  %121 = sext i32 %120 to i64
  store i64 %121, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory, i64 0, i32 1), align 8
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill13kUserNonLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory, i64 0, i32 2), align 8
  %122 = load i32, i32* @_ZN8autofill17kUserNonLatinSizeE, align 4
  %123 = sext i32 %122 to i64
  store i64 %123, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory, i64 0, i32 3), align 8
  %124 = call {}* @llvm.invariant.start.p0i8(i64 32, i8* bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory) #12
  br label %125

125:                                              ; preds = %119, %116, %113
  %126 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory to i8*) acquire, align 8
  %127 = icmp eq i8 %126, 0
  br i1 %127, label %128, label %135, !prof !5

128:                                              ; preds = %125
  %129 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory) #12
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %135, label %131

131:                                              ; preds = %128
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill15kTechnicalWordsE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory, i64 0, i32 0), align 8
  %132 = load i32, i32* @_ZN8autofill19kTechnicalWordsSizeE, align 4
  %133 = sext i32 %132 to i64
  store i64 %133, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory, i64 0, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory, i64 0, i32 2) to i8*), i8 0, i64 16, i1 false) #12
  %134 = call {}* @llvm.invariant.start.p0i8(i64 32, i8* bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory) #12
  br label %135

135:                                              ; preds = %131, %128, %125
  %136 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory to i8*) acquire, align 8
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %138, label %145, !prof !5

138:                                              ; preds = %135
  %139 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory) #12
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %145, label %141

141:                                              ; preds = %138
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill10kWeakWordsE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory, i64 0, i32 0), align 8
  %142 = load i32, i32* @_ZN8autofill14kWeakWordsSizeE, align 4
  %143 = sext i32 %142 to i64
  store i64 %143, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory, i64 0, i32 1), align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory, i64 0, i32 2) to i8*), i8 0, i64 16, i1 false) #12
  %144 = call {}* @llvm.invariant.start.p0i8(i64 32, i8* bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory) #12
  br label %145

145:                                              ; preds = %141, %138, %135
  %146 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories to i8*) acquire, align 8
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %153, !prof !5

148:                                              ; preds = %145
  %149 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories) #12
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %148
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories to i8*), i8* align 8 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE17kUsernameCategory to i8*), i64 32, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* getelementptr inbounds ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"], [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories, i64 0, i64 1) to i8*), i8* align 8 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kUserCategory to i8*), i64 32, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* getelementptr inbounds ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"], [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories, i64 0, i64 2) to i8*), i8* align 8 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE18kTechnicalCategory to i8*), i64 32, i1 false) #12
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* getelementptr inbounds ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"], [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories, i64 0, i64 3) to i8*), i8* align 8 bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE13kWeakCategory to i8*), i64 32, i1 false) #12
  %152 = call {}* @llvm.invariant.start.p0i8(i64 128, i8* bitcast ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories) #12
  br label %153

153:                                              ; preds = %151, %148, %145
  %154 = bitcast %"class.std::__1::vector.77"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #12
  %155 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %8, i64 0, i32 0, i32 0
  %156 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %8, i64 0, i32 0, i32 1
  %157 = getelementptr inbounds %"class.std::__1::vector.77", %"class.std::__1::vector.77"* %8, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %154, i8 0, i64 24, i1 false) #12
  %158 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %159 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %158, align 8
  %160 = load %"class.blink::WebFormControlElement"*, %"class.blink::WebFormControlElement"** %14, align 8
  %161 = icmp eq %"class.blink::WebFormControlElement"* %159, %160
  br i1 %161, label %511, label %162

162:                                              ; preds = %153
  %163 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %166 = bitcast %"class.blink::WebString"* %5 to i8*
  %167 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 19
  %168 = getelementptr inbounds %"struct.autofill::FormData", %"struct.autofill::FormData"* %1, i64 0, i32 19, i32 0, i32 1
  %169 = bitcast %"struct.autofill::FormFieldData"** %168 to i64*
  %170 = bitcast %"class.std::__1::vector.50"* %167 to i64*
  %171 = bitcast %"class.blink::WebString"* %6 to i8*
  %172 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %173 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %172, i64 0, i32 1, i32 1
  %174 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %175 = bitcast %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7 to i8*
  %176 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %177 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 1
  %179 = bitcast %"class.std::__1::basic_string"* %178 to i8*
  %180 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 2
  %181 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 3
  %182 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 4
  %183 = bitcast %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156 to i64*
  %184 = bitcast %"class.std::__1::vector.77"* %8 to i64*
  %185 = bitcast %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %157 to i64*
  %186 = bitcast %"class.base::internal::flat_tree"* %180 to i64*
  %187 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 2, i32 0, i32 0, i32 1
  %188 = bitcast %"class.std::__1::basic_string"** %187 to i64*
  %189 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %190 = bitcast %"class.std::__1::basic_string"** %189 to i64*
  %191 = bitcast %"class.base::internal::flat_tree"* %180 to i8*
  %192 = bitcast %"class.std::__1::basic_string"* %181 to i8*
  %193 = bitcast %"class.base::internal::flat_tree"* %182 to i64*
  %194 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 4, i32 0, i32 0, i32 1
  %195 = bitcast %"class.std::__1::basic_string"** %194 to i64*
  %196 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %7, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %197 = bitcast %"class.std::__1::basic_string"** %196 to i64*
  %198 = bitcast %"class.base::internal::flat_tree"* %182 to i8*
  %199 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %182, i64 0, i32 0, i32 0, i32 0
  %200 = bitcast %"class.base::internal::flat_tree"* %182 to i8**
  %201 = bitcast %"class.std::__1::basic_string"* %181 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %202 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %201, i64 0, i32 1, i32 1
  %203 = bitcast %"class.std::__1::basic_string"* %181 to i8**
  %204 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %180, i64 0, i32 0, i32 0, i32 0
  %205 = bitcast %"class.base::internal::flat_tree"* %180 to i8**
  %206 = bitcast %"class.std::__1::basic_string"* %178 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %207 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %206, i64 0, i32 1, i32 1
  %208 = bitcast %"class.std::__1::basic_string"* %178 to i8**
  %209 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %210 = bitcast %"class.base::internal::flat_tree"* %180 to <2 x i64>*
  %211 = bitcast %"class.base::internal::flat_tree"* %182 to <2 x i64>*
  br label %212

212:                                              ; preds = %507, %162
  %213 = phi i64 [ 0, %162 ], [ %508, %507 ]
  %214 = phi %"class.blink::WebFormControlElement"* [ %159, %162 ], [ %509, %507 ]
  %215 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %214, i64 0, i32 0
  %216 = call %"class.blink::WebInputElement"* @_ZN5blink17ToWebInputElementEPNS_10WebElementE(%"class.blink::WebElement"* %215) #12
  %217 = icmp eq %"class.blink::WebInputElement"* %216, null
  br i1 %217, label %507, label %218

218:                                              ; preds = %212
  %219 = call zeroext i1 @_ZNK5blink15WebInputElement26IsPasswordFieldForAutofillEv(%"class.blink::WebInputElement"* nonnull %216) #12
  br i1 %219, label %507, label %220

220:                                              ; preds = %218
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %163) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %163, i8 -86, i64 24, i1 false) #12
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #12
  %221 = getelementptr inbounds %"class.blink::WebInputElement", %"class.blink::WebInputElement"* %216, i64 0, i32 0
  call void @_ZNK5blink21WebFormControlElement15NameForAutofillEv(%"class.blink::WebString"* nonnull sret %5, %"class.blink::WebFormControlElement"* %221) #12
  %222 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* nonnull %5) #12, !noalias !6
  %223 = call i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"* nonnull %5) #12, !noalias !6
  %224 = call i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"* nonnull %5) #12, !noalias !6
  call void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string"* nonnull sret %4, i64 %222, i8* %223, i16* %224) #12
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #12
  %225 = load i64, i64* %169, align 8
  %226 = load i64, i64* %170, align 8
  %227 = sub i64 %225, %226
  %228 = sdiv exact i64 %227, 584
  %229 = icmp ult i64 %213, %228
  br i1 %229, label %230, label %500

230:                                              ; preds = %220, %493
  %231 = phi i64 [ %496, %493 ], [ %226, %220 ]
  %232 = phi i64 [ %494, %493 ], [ %213, %220 ]
  %233 = inttoptr i64 %231 to %"struct.autofill::FormFieldData"*
  %234 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %233, i64 %232
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171) #12
  call void @_ZNK5blink21WebFormControlElement15NameForAutofillEv(%"class.blink::WebString"* nonnull sret %6, %"class.blink::WebFormControlElement"* %221) #12
  %235 = call i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"* nonnull %6) #12
  %236 = icmp eq i64 %235, 0
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #12
  br i1 %236, label %493, label %237

237:                                              ; preds = %230
  %238 = bitcast %"struct.autofill::FormFieldData"* %234 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %239 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %238, i64 0, i32 1, i32 1
  %240 = load i8, i8* %239, align 1
  %241 = icmp slt i8 %240, 0
  %242 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %233, i64 %232, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load i64, i64* %242, align 8
  %244 = zext i8 %240 to i64
  %245 = select i1 %241, i64 %243, i64 %244
  %246 = load i8, i8* %173, align 1
  %247 = icmp slt i8 %246, 0
  %248 = load i64, i64* %165, align 8
  %249 = zext i8 %246 to i64
  %250 = select i1 %247, i64 %248, i64 %249
  %251 = icmp eq i64 %245, %250
  br i1 %251, label %252, label %493

252:                                              ; preds = %237
  %253 = icmp eq i64 %245, 0
  br i1 %253, label %273, label %254

254:                                              ; preds = %252
  %255 = load i16*, i16** %164, align 8
  %256 = select i1 %247, i16* %255, i16* %174
  %257 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %234, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %258 = load i16*, i16** %257, align 8
  %259 = bitcast %"struct.autofill::FormFieldData"* %234 to i16*
  %260 = select i1 %241, i16* %258, i16* %259
  br label %261

261:                                              ; preds = %268, %254
  %262 = phi i64 [ %269, %268 ], [ %245, %254 ]
  %263 = phi i16* [ %271, %268 ], [ %256, %254 ]
  %264 = phi i16* [ %270, %268 ], [ %260, %254 ]
  %265 = load i16, i16* %264, align 2
  %266 = load i16, i16* %263, align 2
  %267 = icmp eq i16 %266, %265
  br i1 %267, label %268, label %493

268:                                              ; preds = %261
  %269 = add i64 %262, -1
  %270 = getelementptr inbounds i16, i16* %264, i64 1
  %271 = getelementptr inbounds i16, i16* %263, i64 1
  %272 = icmp eq i64 %269, 0
  br i1 %272, label %273, label %261

273:                                              ; preds = %252, %268
  %274 = inttoptr i64 %231 to %"struct.autofill::FormFieldData"*
  %275 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %234, i64 0, i32 0
  %276 = add i64 %232, 1
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %175) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %175, i8 -86, i64 112, i1 false) #12, !alias.scope !9
  call void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"* nonnull %176) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15WebInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %177, align 8, !alias.scope !9
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 96, i1 false) #12, !alias.scope !9
  %277 = getelementptr inbounds %"class.blink::WebInputElement", %"class.blink::WebInputElement"* %216, i64 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"* nonnull %176, %"class.blink::WebNode"* dereferenceable(16) %277) #12
  call fastcc void @_ZN8autofill12_GLOBAL__N_125AppendValueAndShortTokensERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPS7_PN4base8internal9flat_treeIS7_NSB_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %275, %"class.std::__1::basic_string"* %178, %"class.base::internal::flat_tree"* %180) #12
  %278 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %274, i64 %232, i32 1
  call fastcc void @_ZN8autofill12_GLOBAL__N_125AppendValueAndShortTokensERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPS7_PN4base8internal9flat_treeIS7_NSB_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %278, %"class.std::__1::basic_string"* %178, %"class.base::internal::flat_tree"* %180) #12
  %279 = getelementptr inbounds %"struct.autofill::FormFieldData", %"struct.autofill::FormFieldData"* %274, i64 %232, i32 3
  call fastcc void @_ZN8autofill12_GLOBAL__N_125AppendValueAndShortTokensERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPS7_PN4base8internal9flat_treeIS7_NSB_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24) %279, %"class.std::__1::basic_string"* %181, %"class.base::internal::flat_tree"* %182) #12
  %280 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  %281 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %157, align 8
  %282 = icmp ult %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, %281
  %283 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %281 to i64
  br i1 %282, label %284, label %313

284:                                              ; preds = %273
  %285 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %285, %"class.blink::WebNode"* nonnull dereferenceable(16) %176) #12
  %286 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15WebInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %286, align 8
  %287 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 1
  %288 = bitcast %"class.std::__1::basic_string"* %287 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %288, i8* align 8 %179, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #12
  %289 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 2
  %290 = bitcast %"class.base::internal::flat_tree"* %289 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %290, i8 0, i64 24, i1 false) #12
  %291 = load i64, i64* %186, align 8
  %292 = bitcast %"class.base::internal::flat_tree"* %289 to i64*
  store i64 %291, i64* %292, align 8
  %293 = load i64, i64* %188, align 8
  %294 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 2, i32 0, i32 0, i32 1
  %295 = bitcast %"class.std::__1::basic_string"** %294 to i64*
  store i64 %293, i64* %295, align 8
  %296 = load i64, i64* %190, align 8
  %297 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %298 = bitcast %"class.std::__1::basic_string"** %297 to i64*
  store i64 %296, i64* %298, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #12
  %299 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 3
  %300 = bitcast %"class.std::__1::basic_string"* %299 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %300, i8* align 8 %192, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #12
  %301 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 4
  %302 = bitcast %"class.base::internal::flat_tree"* %301 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %302, i8 0, i64 24, i1 false) #12
  %303 = load i64, i64* %193, align 8
  %304 = bitcast %"class.base::internal::flat_tree"* %301 to i64*
  store i64 %303, i64* %304, align 8
  %305 = load i64, i64* %195, align 8
  %306 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 4, i32 0, i32 0, i32 1
  %307 = bitcast %"class.std::__1::basic_string"** %306 to i64*
  store i64 %305, i64* %307, align 8
  %308 = load i64, i64* %197, align 8
  %309 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %310 = bitcast %"class.std::__1::basic_string"** %309 to i64*
  store i64 %308, i64* %310, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 24, i1 false) #12
  %311 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280, i64 1
  %312 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %311 to i64
  store i64 %312, i64* %183, align 8
  br label %436

313:                                              ; preds = %273
  %314 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %280 to i64
  %315 = load i64, i64* %184, align 8
  %316 = sub i64 %314, %315
  %317 = sdiv exact i64 %316, 112
  %318 = add nsw i64 %317, 1
  %319 = icmp ugt i64 %318, 164703072086692425
  br i1 %319, label %320, label %322

320:                                              ; preds = %313
  %321 = bitcast %"class.std::__1::vector.77"* %8 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %321) #13
  unreachable

322:                                              ; preds = %313
  %323 = sub i64 %283, %315
  %324 = sdiv exact i64 %323, 112
  %325 = icmp ult i64 %324, 82351536043346212
  br i1 %325, label %326, label %331

326:                                              ; preds = %322
  %327 = shl nsw i64 %324, 1
  %328 = icmp ult i64 %327, %318
  %329 = select i1 %328, i64 %318, i64 %327
  %330 = icmp eq i64 %329, 0
  br i1 %330, label %336, label %331

331:                                              ; preds = %326, %322
  %332 = phi i64 [ %329, %326 ], [ 164703072086692425, %322 ]
  %333 = mul i64 %332, 112
  %334 = call i8* @_Znwm(i64 %333) #14
  %335 = bitcast i8* %334 to %"struct.autofill::(anonymous namespace)::UsernameFieldData"*
  br label %336

336:                                              ; preds = %331, %326
  %337 = phi i64 [ %332, %331 ], [ 0, %326 ]
  %338 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %335, %331 ], [ null, %326 ]
  %339 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317
  %340 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %337
  %341 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %340 to i64
  %342 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %339, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %342, %"class.blink::WebNode"* nonnull dereferenceable(16) %176) #12
  %343 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %339, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15WebInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %343, align 8
  %344 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 1
  %345 = bitcast %"class.std::__1::basic_string"* %344 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %345, i8* align 8 %179, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %179, i8 0, i64 24, i1 false) #12
  %346 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 2
  %347 = load <2 x i64>, <2 x i64>* %210, align 8
  %348 = bitcast %"class.base::internal::flat_tree"* %346 to <2 x i64>*
  store <2 x i64> %347, <2 x i64>* %348, align 8
  %349 = load i64, i64* %190, align 8
  %350 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %351 = bitcast %"class.std::__1::basic_string"** %350 to i64*
  store i64 %349, i64* %351, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %191, i8 0, i64 24, i1 false) #12
  %352 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 3
  %353 = bitcast %"class.std::__1::basic_string"* %352 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %353, i8* align 8 %192, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 0, i64 24, i1 false) #12
  %354 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 4
  %355 = load <2 x i64>, <2 x i64>* %211, align 8
  %356 = bitcast %"class.base::internal::flat_tree"* %354 to <2 x i64>*
  store <2 x i64> %355, <2 x i64>* %356, align 8
  %357 = load i64, i64* %197, align 8
  %358 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %338, i64 %317, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %359 = bitcast %"class.std::__1::basic_string"** %358 to i64*
  store i64 %357, i64* %359, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %198, i8 0, i64 24, i1 false) #12
  %360 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %339, i64 1
  %361 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %360 to i64
  %362 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %155, align 8
  %363 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  %364 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %363, %362
  br i1 %364, label %365, label %367

365:                                              ; preds = %336
  %366 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %362 to i64
  br label %421

367:                                              ; preds = %336, %367
  %368 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %370, %367 ], [ %339, %336 ]
  %369 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %371, %367 ], [ %363, %336 ]
  %370 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1
  %371 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1
  %372 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %370, i64 0, i32 0, i32 0, i32 0, i32 0
  %373 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %371, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"* %372, %"class.blink::WebNode"* dereferenceable(16) %373) #12
  %374 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %370, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink15WebInputElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %374, align 8
  %375 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 1
  %376 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 1
  %377 = bitcast %"class.std::__1::basic_string"* %375 to i8*
  %378 = bitcast %"class.std::__1::basic_string"* %376 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %377, i8* align 8 %378, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %378, i8 0, i64 24, i1 false) #12
  %379 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 2
  %380 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 2
  %381 = bitcast %"class.base::internal::flat_tree"* %379 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %381, i8 0, i64 24, i1 false) #12
  %382 = bitcast %"class.base::internal::flat_tree"* %380 to i64*
  %383 = load i64, i64* %382, align 8
  %384 = bitcast %"class.base::internal::flat_tree"* %379 to i64*
  store i64 %383, i64* %384, align 8
  %385 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 2, i32 0, i32 0, i32 1
  %386 = bitcast %"class.std::__1::basic_string"** %385 to i64*
  %387 = load i64, i64* %386, align 8
  %388 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 2, i32 0, i32 0, i32 1
  %389 = bitcast %"class.std::__1::basic_string"** %388 to i64*
  store i64 %387, i64* %389, align 8
  %390 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %391 = bitcast %"class.std::__1::basic_string"** %390 to i64*
  %392 = load i64, i64* %391, align 8
  %393 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %394 = bitcast %"class.std::__1::basic_string"** %393 to i64*
  store i64 %392, i64* %394, align 8
  %395 = bitcast %"class.base::internal::flat_tree"* %380 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %395, i8 0, i64 24, i1 false) #12
  %396 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 3
  %397 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 3
  %398 = bitcast %"class.std::__1::basic_string"* %396 to i8*
  %399 = bitcast %"class.std::__1::basic_string"* %397 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %398, i8* align 8 %399, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %399, i8 0, i64 24, i1 false) #12
  %400 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 4
  %401 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 4
  %402 = bitcast %"class.base::internal::flat_tree"* %400 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %402, i8 0, i64 24, i1 false) #12
  %403 = bitcast %"class.base::internal::flat_tree"* %401 to i64*
  %404 = load i64, i64* %403, align 8
  %405 = bitcast %"class.base::internal::flat_tree"* %400 to i64*
  store i64 %404, i64* %405, align 8
  %406 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 4, i32 0, i32 0, i32 1
  %407 = bitcast %"class.std::__1::basic_string"** %406 to i64*
  %408 = load i64, i64* %407, align 8
  %409 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 4, i32 0, i32 0, i32 1
  %410 = bitcast %"class.std::__1::basic_string"** %409 to i64*
  store i64 %408, i64* %410, align 8
  %411 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %369, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %412 = bitcast %"class.std::__1::basic_string"** %411 to i64*
  %413 = load i64, i64* %412, align 8
  %414 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %368, i64 -1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %415 = bitcast %"class.std::__1::basic_string"** %414 to i64*
  store i64 %413, i64* %415, align 8
  %416 = bitcast %"class.base::internal::flat_tree"* %401 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %416, i8 0, i64 24, i1 false) #12
  %417 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %371, %362
  br i1 %417, label %418, label %367

418:                                              ; preds = %367
  %419 = load i64, i64* %184, align 8
  %420 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  br label %421

421:                                              ; preds = %418, %365
  %422 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %362, %365 ], [ %420, %418 ]
  %423 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %339, %365 ], [ %370, %418 ]
  %424 = phi i64 [ %366, %365 ], [ %419, %418 ]
  %425 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %423 to i64
  store i64 %425, i64* %184, align 8
  store i64 %361, i64* %183, align 8
  store i64 %341, i64* %185, align 8
  %426 = inttoptr i64 %424 to %"struct.autofill::(anonymous namespace)::UsernameFieldData"*
  %427 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %422, %426
  br i1 %427, label %432, label %428

428:                                              ; preds = %421, %428
  %429 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %430, %428 ], [ %422, %421 ]
  %430 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %429, i64 -1
  call fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN8autofill12_GLOBAL__N_117UsernameFieldDataEEEE7destroyIS4_vEEvRS5_PT_(%"struct.autofill::(anonymous namespace)::UsernameFieldData"* %430) #12
  %431 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %430, %426
  br i1 %431, label %432, label %428

432:                                              ; preds = %428, %421
  %433 = icmp eq i64 %424, 0
  br i1 %433, label %436, label %434

434:                                              ; preds = %432
  %435 = inttoptr i64 %424 to i8*
  call void @_ZdlPv(i8* %435) #14
  br label %436

436:                                              ; preds = %434, %432, %284
  %437 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %199, align 8
  %438 = icmp eq %"class.std::__1::basic_string"* %437, null
  br i1 %438, label %459, label %439

439:                                              ; preds = %436
  %440 = bitcast %"class.std::__1::basic_string"* %437 to i8*
  %441 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %194, align 8
  %442 = icmp eq %"class.std::__1::basic_string"* %441, %437
  br i1 %442, label %457, label %443

443:                                              ; preds = %439, %453
  %444 = phi %"class.std::__1::basic_string"* [ %445, %453 ], [ %441, %439 ]
  %445 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %444, i64 -1
  %446 = bitcast %"class.std::__1::basic_string"* %445 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %447 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %446, i64 0, i32 1, i32 1
  %448 = load i8, i8* %447, align 1
  %449 = icmp slt i8 %448, 0
  br i1 %449, label %450, label %453

450:                                              ; preds = %443
  %451 = bitcast %"class.std::__1::basic_string"* %445 to i8**
  %452 = load i8*, i8** %451, align 8
  call void @_ZdlPv(i8* %452) #14
  br label %453

453:                                              ; preds = %450, %443
  %454 = icmp eq %"class.std::__1::basic_string"* %445, %437
  br i1 %454, label %455, label %443

455:                                              ; preds = %453
  %456 = load i8*, i8** %200, align 8
  br label %457

457:                                              ; preds = %455, %439
  %458 = phi i8* [ %456, %455 ], [ %440, %439 ]
  store %"class.std::__1::basic_string"* %437, %"class.std::__1::basic_string"** %194, align 8
  call void @_ZdlPv(i8* %458) #14
  br label %459

459:                                              ; preds = %457, %436
  %460 = load i8, i8* %202, align 1
  %461 = icmp slt i8 %460, 0
  br i1 %461, label %462, label %464

462:                                              ; preds = %459
  %463 = load i8*, i8** %203, align 8
  call void @_ZdlPv(i8* %463) #14
  br label %464

464:                                              ; preds = %462, %459
  %465 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %204, align 8
  %466 = icmp eq %"class.std::__1::basic_string"* %465, null
  br i1 %466, label %487, label %467

467:                                              ; preds = %464
  %468 = bitcast %"class.std::__1::basic_string"* %465 to i8*
  %469 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %187, align 8
  %470 = icmp eq %"class.std::__1::basic_string"* %469, %465
  br i1 %470, label %485, label %471

471:                                              ; preds = %467, %481
  %472 = phi %"class.std::__1::basic_string"* [ %473, %481 ], [ %469, %467 ]
  %473 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %472, i64 -1
  %474 = bitcast %"class.std::__1::basic_string"* %473 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %475 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %474, i64 0, i32 1, i32 1
  %476 = load i8, i8* %475, align 1
  %477 = icmp slt i8 %476, 0
  br i1 %477, label %478, label %481

478:                                              ; preds = %471
  %479 = bitcast %"class.std::__1::basic_string"* %473 to i8**
  %480 = load i8*, i8** %479, align 8
  call void @_ZdlPv(i8* %480) #14
  br label %481

481:                                              ; preds = %478, %471
  %482 = icmp eq %"class.std::__1::basic_string"* %473, %465
  br i1 %482, label %483, label %471

483:                                              ; preds = %481
  %484 = load i8*, i8** %205, align 8
  br label %485

485:                                              ; preds = %483, %467
  %486 = phi i8* [ %484, %483 ], [ %468, %467 ]
  store %"class.std::__1::basic_string"* %465, %"class.std::__1::basic_string"** %187, align 8
  call void @_ZdlPv(i8* %486) #14
  br label %487

487:                                              ; preds = %485, %464
  %488 = load i8, i8* %207, align 1
  %489 = icmp slt i8 %488, 0
  br i1 %489, label %490, label %492

490:                                              ; preds = %487
  %491 = load i8*, i8** %208, align 8
  call void @_ZdlPv(i8* %491) #14
  br label %492

492:                                              ; preds = %490, %487
  call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nonnull %176) #12
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %175) #12
  br label %500

493:                                              ; preds = %261, %237, %230
  %494 = add nuw i64 %232, 1
  %495 = load i64, i64* %169, align 8
  %496 = load i64, i64* %170, align 8
  %497 = sub i64 %495, %496
  %498 = sdiv exact i64 %497, 584
  %499 = icmp ult i64 %494, %498
  br i1 %499, label %230, label %500

500:                                              ; preds = %493, %492, %220
  %501 = phi i64 [ %276, %492 ], [ %213, %220 ], [ %213, %493 ]
  %502 = load i8, i8* %173, align 1
  %503 = icmp slt i8 %502, 0
  br i1 %503, label %504, label %506

504:                                              ; preds = %500
  %505 = load i8*, i8** %209, align 8
  call void @_ZdlPv(i8* %505) #14
  br label %506

506:                                              ; preds = %504, %500
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %163) #12
  br label %507

507:                                              ; preds = %506, %218, %212
  %508 = phi i64 [ %501, %506 ], [ %213, %212 ], [ %213, %218 ]
  %509 = getelementptr inbounds %"class.blink::WebFormControlElement", %"class.blink::WebFormControlElement"* %214, i64 1
  %510 = icmp eq %"class.blink::WebFormControlElement"* %509, %160
  br i1 %510, label %511, label %212

511:                                              ; preds = %507, %153
  %512 = load atomic i8, i8* bitcast (i64* @_ZGVZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory to i8*) acquire, align 8
  %513 = icmp eq i8 %512, 0
  br i1 %513, label %514, label %523, !prof !5

514:                                              ; preds = %511
  %515 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory) #12
  %516 = icmp eq i32 %515, 0
  br i1 %516, label %523, label %517

517:                                              ; preds = %514
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill14kNegativeLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 0), align 8
  %518 = load i32, i32* @_ZN8autofill18kNegativeLatinSizeE, align 4
  %519 = sext i32 %518 to i64
  store i64 %519, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 1), align 8
  store i8** getelementptr inbounds ([0 x i8*], [0 x i8*]* @_ZN8autofill17kNegativeNonLatinE, i64 0, i64 0), i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 2), align 8
  %520 = load i32, i32* @_ZN8autofill21kNegativeNonLatinSizeE, align 4
  %521 = sext i32 %520 to i64
  store i64 %521, i64* getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 3), align 8
  %522 = call {}* @llvm.invariant.start.p0i8(i64 32, i8* bitcast (%"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory to i8*)) #12
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory) #12
  br label %523

523:                                              ; preds = %517, %514, %511
  %524 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %155, align 8
  %525 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  %526 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %524, %525
  br i1 %526, label %546, label %527

527:                                              ; preds = %523, %541
  %528 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %542, %541 ], [ %524, %523 ]
  %529 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %528, i64 0, i32 3
  %530 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %528, i64 0, i32 4
  %531 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 0), align 8
  %532 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %529, %"class.base::internal::flat_tree"* dereferenceable(24) %530, i8** %531, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 1)) #12
  br i1 %532, label %546, label %533

533:                                              ; preds = %527
  %534 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 2), align 8
  %535 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %529, %"class.base::internal::flat_tree"* dereferenceable(24) %530, i8** %534, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 3)) #12
  br i1 %535, label %546, label %536

536:                                              ; preds = %533
  %537 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %528, i64 0, i32 1
  %538 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %528, i64 0, i32 2
  %539 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 0), align 8
  %540 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %537, %"class.base::internal::flat_tree"* dereferenceable(24) %538, i8** %539, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 1)) #12
  br i1 %540, label %546, label %541

541:                                              ; preds = %536
  %542 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %528, i64 1
  %543 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %542, %525
  br i1 %543, label %544, label %527

544:                                              ; preds = %541
  %545 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %525 to i64
  br label %691

546:                                              ; preds = %536, %533, %527, %523
  %547 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %524, %523 ], [ %528, %527 ], [ %528, %533 ], [ %528, %536 ]
  %548 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %547 to i64
  %549 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %547, %525
  br i1 %549, label %691, label %550

550:                                              ; preds = %546
  %551 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %547, i64 1
  %552 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %551, %525
  br i1 %552, label %691, label %553

553:                                              ; preds = %550, %687
  %554 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %689, %687 ], [ %551, %550 ]
  %555 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %554, %687 ], [ %547, %550 ]
  %556 = phi i64 [ %688, %687 ], [ %548, %550 ]
  %557 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 3
  %558 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 4
  %559 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 0), align 8
  %560 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %557, %"class.base::internal::flat_tree"* dereferenceable(24) %558, i8** %559, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 1)) #12
  br i1 %560, label %687, label %561

561:                                              ; preds = %553
  %562 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 2), align 8
  %563 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %557, %"class.base::internal::flat_tree"* dereferenceable(24) %558, i8** %562, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 3)) #12
  br i1 %563, label %687, label %564

564:                                              ; preds = %561
  %565 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 1
  %566 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 2
  %567 = load i8**, i8*** getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 0), align 8
  %568 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %565, %"class.base::internal::flat_tree"* dereferenceable(24) %566, i8** %567, i64* dereferenceable(8) getelementptr inbounds (%"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* @_ZZN8autofill12_GLOBAL__N_129RemoveFieldsWithNegativeWordsEPNSt3__16vectorINS0_17UsernameFieldDataENS1_9allocatorIS3_EEEEE17kNegativeCategory, i64 0, i32 1)) #12
  br i1 %568, label %687, label %569

569:                                              ; preds = %564
  %570 = inttoptr i64 %556 to %"struct.autofill::(anonymous namespace)::UsernameFieldData"*
  %571 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 0, i32 0, i32 0, i32 0
  %572 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %554, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"* %571, %"class.blink::WebNode"* dereferenceable(16) %572) #12
  %573 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 1
  %574 = bitcast %"class.std::__1::basic_string"* %573 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %575 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %574, i64 0, i32 1, i32 1
  %576 = load i8, i8* %575, align 1
  %577 = icmp slt i8 %576, 0
  br i1 %577, label %578, label %581

578:                                              ; preds = %569
  %579 = bitcast %"class.std::__1::basic_string"* %573 to i8**
  %580 = load i8*, i8** %579, align 8
  call void @_ZdlPv(i8* %580) #14
  br label %581

581:                                              ; preds = %578, %569
  %582 = bitcast %"class.std::__1::basic_string"* %573 to i8*
  %583 = bitcast %"class.std::__1::basic_string"* %565 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %582, i8* align 8 %583, i64 24, i1 false) #12
  %584 = bitcast %"class.std::__1::basic_string"* %565 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %585 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %584, i64 0, i32 1, i32 1
  store i8 0, i8* %585, align 1
  %586 = bitcast %"class.std::__1::basic_string"* %565 to i16*
  store i16 0, i16* %586, align 2
  %587 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 2
  %588 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %587, i64 0, i32 0, i32 0, i32 0
  %589 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %588, align 8
  %590 = icmp eq %"class.std::__1::basic_string"* %589, null
  br i1 %590, label %614, label %591

591:                                              ; preds = %581
  %592 = bitcast %"class.std::__1::basic_string"* %589 to i8*
  %593 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 2, i32 0, i32 0, i32 1
  %594 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %593, align 8
  %595 = icmp eq %"class.std::__1::basic_string"* %594, %589
  br i1 %595, label %611, label %596

596:                                              ; preds = %591, %606
  %597 = phi %"class.std::__1::basic_string"* [ %598, %606 ], [ %594, %591 ]
  %598 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %597, i64 -1
  %599 = bitcast %"class.std::__1::basic_string"* %598 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %600 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %599, i64 0, i32 1, i32 1
  %601 = load i8, i8* %600, align 1
  %602 = icmp slt i8 %601, 0
  br i1 %602, label %603, label %606

603:                                              ; preds = %596
  %604 = bitcast %"class.std::__1::basic_string"* %598 to i8**
  %605 = load i8*, i8** %604, align 8
  call void @_ZdlPv(i8* %605) #14
  br label %606

606:                                              ; preds = %603, %596
  %607 = icmp eq %"class.std::__1::basic_string"* %598, %589
  br i1 %607, label %608, label %596

608:                                              ; preds = %606
  %609 = bitcast %"class.base::internal::flat_tree"* %587 to i8**
  %610 = load i8*, i8** %609, align 8
  br label %611

611:                                              ; preds = %608, %591
  %612 = phi i8* [ %610, %608 ], [ %592, %591 ]
  store %"class.std::__1::basic_string"* %589, %"class.std::__1::basic_string"** %593, align 8
  call void @_ZdlPv(i8* %612) #14
  %613 = bitcast %"class.base::internal::flat_tree"* %587 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %613, i8 0, i64 24, i1 false) #12
  br label %614

614:                                              ; preds = %611, %581
  %615 = bitcast %"class.base::internal::flat_tree"* %566 to i64*
  %616 = load i64, i64* %615, align 8
  %617 = bitcast %"class.base::internal::flat_tree"* %587 to i64*
  store i64 %616, i64* %617, align 8
  %618 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 2, i32 0, i32 0, i32 1
  %619 = bitcast %"class.std::__1::basic_string"** %618 to i64*
  %620 = load i64, i64* %619, align 8
  %621 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 2, i32 0, i32 0, i32 1
  %622 = bitcast %"class.std::__1::basic_string"** %621 to i64*
  store i64 %620, i64* %622, align 8
  %623 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %624 = bitcast %"class.std::__1::basic_string"** %623 to i64*
  %625 = load i64, i64* %624, align 8
  %626 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %627 = bitcast %"class.std::__1::basic_string"** %626 to i64*
  store i64 %625, i64* %627, align 8
  %628 = bitcast %"class.base::internal::flat_tree"* %566 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %628, i8 0, i64 24, i1 false) #12
  %629 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 3
  %630 = bitcast %"class.std::__1::basic_string"* %629 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %631 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %630, i64 0, i32 1, i32 1
  %632 = load i8, i8* %631, align 1
  %633 = icmp slt i8 %632, 0
  br i1 %633, label %634, label %637

634:                                              ; preds = %614
  %635 = bitcast %"class.std::__1::basic_string"* %629 to i8**
  %636 = load i8*, i8** %635, align 8
  call void @_ZdlPv(i8* %636) #14
  br label %637

637:                                              ; preds = %634, %614
  %638 = bitcast %"class.std::__1::basic_string"* %629 to i8*
  %639 = bitcast %"class.std::__1::basic_string"* %557 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %638, i8* align 8 %639, i64 24, i1 false) #12
  %640 = bitcast %"class.std::__1::basic_string"* %557 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %641 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %640, i64 0, i32 1, i32 1
  store i8 0, i8* %641, align 1
  %642 = bitcast %"class.std::__1::basic_string"* %557 to i16*
  store i16 0, i16* %642, align 2
  %643 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 4
  %644 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %643, i64 0, i32 0, i32 0, i32 0
  %645 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %644, align 8
  %646 = icmp eq %"class.std::__1::basic_string"* %645, null
  br i1 %646, label %670, label %647

647:                                              ; preds = %637
  %648 = bitcast %"class.std::__1::basic_string"* %645 to i8*
  %649 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 4, i32 0, i32 0, i32 1
  %650 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %649, align 8
  %651 = icmp eq %"class.std::__1::basic_string"* %650, %645
  br i1 %651, label %667, label %652

652:                                              ; preds = %647, %662
  %653 = phi %"class.std::__1::basic_string"* [ %654, %662 ], [ %650, %647 ]
  %654 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %653, i64 -1
  %655 = bitcast %"class.std::__1::basic_string"* %654 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %656 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %655, i64 0, i32 1, i32 1
  %657 = load i8, i8* %656, align 1
  %658 = icmp slt i8 %657, 0
  br i1 %658, label %659, label %662

659:                                              ; preds = %652
  %660 = bitcast %"class.std::__1::basic_string"* %654 to i8**
  %661 = load i8*, i8** %660, align 8
  call void @_ZdlPv(i8* %661) #14
  br label %662

662:                                              ; preds = %659, %652
  %663 = icmp eq %"class.std::__1::basic_string"* %654, %645
  br i1 %663, label %664, label %652

664:                                              ; preds = %662
  %665 = bitcast %"class.base::internal::flat_tree"* %643 to i8**
  %666 = load i8*, i8** %665, align 8
  br label %667

667:                                              ; preds = %664, %647
  %668 = phi i8* [ %666, %664 ], [ %648, %647 ]
  store %"class.std::__1::basic_string"* %645, %"class.std::__1::basic_string"** %649, align 8
  call void @_ZdlPv(i8* %668) #14
  %669 = bitcast %"class.base::internal::flat_tree"* %643 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %669, i8 0, i64 24, i1 false) #12
  br label %670

670:                                              ; preds = %667, %637
  %671 = bitcast %"class.base::internal::flat_tree"* %558 to i64*
  %672 = load i64, i64* %671, align 8
  %673 = bitcast %"class.base::internal::flat_tree"* %643 to i64*
  store i64 %672, i64* %673, align 8
  %674 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 4, i32 0, i32 0, i32 1
  %675 = bitcast %"class.std::__1::basic_string"** %674 to i64*
  %676 = load i64, i64* %675, align 8
  %677 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 4, i32 0, i32 0, i32 1
  %678 = bitcast %"class.std::__1::basic_string"** %677 to i64*
  store i64 %676, i64* %678, align 8
  %679 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %555, i64 1, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %680 = bitcast %"class.std::__1::basic_string"** %679 to i64*
  %681 = load i64, i64* %680, align 8
  %682 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 0, i32 4, i32 0, i32 0, i32 2, i32 0, i32 0
  %683 = bitcast %"class.std::__1::basic_string"** %682 to i64*
  store i64 %681, i64* %683, align 8
  %684 = bitcast %"class.base::internal::flat_tree"* %558 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %684, i8 0, i64 24, i1 false) #12
  %685 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %570, i64 1
  %686 = ptrtoint %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %685 to i64
  br label %687

687:                                              ; preds = %670, %564, %561, %553
  %688 = phi i64 [ %556, %564 ], [ %686, %670 ], [ %556, %561 ], [ %556, %553 ]
  %689 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %554, i64 1
  %690 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %689, %525
  br i1 %690, label %691, label %553

691:                                              ; preds = %687, %550, %546, %544
  %692 = phi i64 [ %548, %546 ], [ %545, %544 ], [ %548, %550 ], [ %688, %687 ]
  %693 = inttoptr i64 %692 to %"struct.autofill::(anonymous namespace)::UsernameFieldData"*
  %694 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  %695 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %694, %693
  br i1 %695, label %701, label %696

696:                                              ; preds = %691, %696
  %697 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %698, %696 ], [ %694, %691 ]
  %698 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %697, i64 -1
  call fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN8autofill12_GLOBAL__N_117UsernameFieldDataEEEE7destroyIS4_vEEvRS5_PT_(%"struct.autofill::(anonymous namespace)::UsernameFieldData"* %698) #12
  %699 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %698, %693
  br i1 %699, label %700, label %696

700:                                              ; preds = %696
  store %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %693, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  br label %701

701:                                              ; preds = %700, %691
  %702 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %155, align 8
  %703 = bitcast %"class.autofill::FieldRendererId"** %97 to i64*
  %704 = bitcast %"class.std::__1::vector"* %11 to i64*
  %705 = bitcast %"class.autofill::FieldRendererId"** %98 to i64*
  br label %721

706:                                              ; preds = %830
  %707 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %833, null
  br i1 %707, label %836, label %708

708:                                              ; preds = %706
  %709 = bitcast %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %833 to i8*
  %710 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  %711 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %710, %833
  br i1 %711, label %719, label %712

712:                                              ; preds = %708, %712
  %713 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %714, %712 ], [ %710, %708 ]
  %714 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %713, i64 -1
  call fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN8autofill12_GLOBAL__N_117UsernameFieldDataEEEE7destroyIS4_vEEvRS5_PT_(%"struct.autofill::(anonymous namespace)::UsernameFieldData"* %714) #12
  %715 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %714, %833
  br i1 %715, label %716, label %712

716:                                              ; preds = %712
  %717 = bitcast %"class.std::__1::vector.77"* %8 to i8**
  %718 = load i8*, i8** %717, align 8
  br label %719

719:                                              ; preds = %716, %708
  %720 = phi i8* [ %718, %716 ], [ %709, %708 ]
  store %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %833, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  call void @_ZdlPv(i8* %720) #14
  br label %836

721:                                              ; preds = %834, %701
  %722 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %693, %701 ], [ %835, %834 ]
  %723 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %702, %701 ], [ %833, %834 ]
  %724 = phi %"struct.autofill::(anonymous namespace)::CategoryOfWords"* [ getelementptr inbounds ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"], [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories, i64 0, i64 0), %701 ], [ %831, %834 ]
  %725 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %723, %722
  br i1 %725, label %830, label %726

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %724, i64 0, i32 0
  %728 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %724, i64 0, i32 1
  %729 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %724, i64 0, i32 2
  %730 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %724, i64 0, i32 3
  br label %734

731:                                              ; preds = %758
  %732 = add i64 %760, -1
  %733 = icmp ult i64 %732, 2
  br i1 %733, label %763, label %830

734:                                              ; preds = %758, %726
  %735 = phi i64 [ 0, %726 ], [ %760, %758 ]
  %736 = phi i32 [ 0, %726 ], [ %759, %758 ]
  %737 = phi %"struct.autofill::(anonymous namespace)::UsernameFieldData"* [ %723, %726 ], [ %761, %758 ]
  %738 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 0, i32 3
  %739 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 0, i32 4
  %740 = load i8**, i8*** %727, align 8
  %741 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %738, %"class.base::internal::flat_tree"* dereferenceable(24) %739, i8** %740, i64* dereferenceable(8) %728) #12
  br i1 %741, label %750, label %742

742:                                              ; preds = %734
  %743 = load i8**, i8*** %729, align 8
  %744 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %738, %"class.base::internal::flat_tree"* dereferenceable(24) %739, i8** %743, i64* dereferenceable(8) %730) #12
  br i1 %744, label %750, label %745

745:                                              ; preds = %742
  %746 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 0, i32 1
  %747 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 0, i32 2
  %748 = load i8**, i8*** %727, align 8
  %749 = call fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24) %746, %"class.base::internal::flat_tree"* dereferenceable(24) %747, i8** %748, i64* dereferenceable(8) %728) #12
  br i1 %749, label %750, label %758

750:                                              ; preds = %745, %742, %734
  %751 = icmp eq i64 %735, 0
  br i1 %751, label %752, label %755

752:                                              ; preds = %750
  %753 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 0, i32 0, i32 0
  %754 = call i32 @_ZNK5blink21WebFormControlElement27UniqueRendererFormControlIdEv(%"class.blink::WebFormControlElement"* %753) #12
  br label %755

755:                                              ; preds = %752, %750
  %756 = phi i32 [ %754, %752 ], [ %736, %750 ]
  %757 = add i64 %735, 1
  br label %758

758:                                              ; preds = %755, %745
  %759 = phi i32 [ %756, %755 ], [ %736, %745 ]
  %760 = phi i64 [ %757, %755 ], [ %735, %745 ]
  %761 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %737, i64 1
  %762 = icmp eq %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %761, %722
  br i1 %762, label %731, label %734

763:                                              ; preds = %731
  %764 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %96, align 8
  %765 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %97, align 8
  %766 = icmp eq %"class.autofill::FieldRendererId"* %764, %765
  %767 = ptrtoint %"class.autofill::FieldRendererId"* %764 to i64
  %768 = ptrtoint %"class.autofill::FieldRendererId"* %765 to i64
  br i1 %766, label %777, label %769

769:                                              ; preds = %763, %774
  %770 = phi %"class.autofill::FieldRendererId"* [ %775, %774 ], [ %764, %763 ]
  %771 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %770, i64 0, i32 0, i32 0, i32 0
  %772 = load i32, i32* %771, align 4
  %773 = icmp eq i32 %772, %759
  br i1 %773, label %777, label %774

774:                                              ; preds = %769
  %775 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %770, i64 1
  %776 = icmp eq %"class.autofill::FieldRendererId"* %775, %765
  br i1 %776, label %780, label %769

777:                                              ; preds = %769, %763
  %778 = phi %"class.autofill::FieldRendererId"* [ %764, %763 ], [ %770, %769 ]
  %779 = icmp eq %"class.autofill::FieldRendererId"* %778, %765
  br i1 %779, label %780, label %830

780:                                              ; preds = %774, %777
  %781 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %98, align 8
  %782 = icmp eq %"class.autofill::FieldRendererId"* %765, %781
  %783 = ptrtoint %"class.autofill::FieldRendererId"* %781 to i64
  br i1 %782, label %788, label %784

784:                                              ; preds = %780
  %785 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %765, i64 0, i32 0, i32 0, i32 0
  store i32 %759, i32* %785, align 4
  %786 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %765, i64 1
  %787 = ptrtoint %"class.autofill::FieldRendererId"* %786 to i64
  store i64 %787, i64* %703, align 8
  br label %830

788:                                              ; preds = %780
  %789 = sub i64 %768, %767
  %790 = ashr exact i64 %789, 2
  %791 = add nsw i64 %790, 1
  %792 = icmp ugt i64 %791, 4611686018427387903
  br i1 %792, label %793, label %795

793:                                              ; preds = %788
  %794 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %794) #13
  unreachable

795:                                              ; preds = %788
  %796 = sub i64 %783, %767
  %797 = ashr exact i64 %796, 2
  %798 = icmp ult i64 %797, 2305843009213693951
  br i1 %798, label %799, label %807

799:                                              ; preds = %795
  %800 = ashr exact i64 %796, 1
  %801 = icmp ult i64 %800, %791
  %802 = select i1 %801, i64 %791, i64 %800
  %803 = icmp eq i64 %802, 0
  br i1 %803, label %812, label %804

804:                                              ; preds = %799
  %805 = icmp ugt i64 %802, 4611686018427387903
  br i1 %805, label %806, label %807

806:                                              ; preds = %804
  call void @abort() #13
  unreachable

807:                                              ; preds = %804, %795
  %808 = phi i64 [ %802, %804 ], [ 4611686018427387903, %795 ]
  %809 = shl i64 %808, 2
  %810 = call i8* @_Znwm(i64 %809) #14
  %811 = bitcast i8* %810 to %"class.autofill::FieldRendererId"*
  br label %812

812:                                              ; preds = %807, %799
  %813 = phi i64 [ %808, %807 ], [ 0, %799 ]
  %814 = phi i8* [ %810, %807 ], [ null, %799 ]
  %815 = phi %"class.autofill::FieldRendererId"* [ %811, %807 ], [ null, %799 ]
  %816 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %815, i64 %790
  %817 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %815, i64 %813
  %818 = ptrtoint %"class.autofill::FieldRendererId"* %817 to i64
  %819 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %816, i64 0, i32 0, i32 0, i32 0
  store i32 %759, i32* %819, align 4
  %820 = getelementptr inbounds %"class.autofill::FieldRendererId", %"class.autofill::FieldRendererId"* %816, i64 1
  %821 = ptrtoint %"class.autofill::FieldRendererId"* %820 to i64
  %822 = ptrtoint %"class.autofill::FieldRendererId"* %815 to i64
  %823 = icmp sgt i64 %789, 0
  br i1 %823, label %824, label %826

824:                                              ; preds = %812
  %825 = bitcast %"class.autofill::FieldRendererId"* %764 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %814, i8* align 4 %825, i64 %789, i1 false) #12
  br label %826

826:                                              ; preds = %824, %812
  store i64 %822, i64* %704, align 8
  store i64 %821, i64* %703, align 8
  store i64 %818, i64* %705, align 8
  %827 = icmp eq %"class.autofill::FieldRendererId"* %764, null
  br i1 %827, label %830, label %828

828:                                              ; preds = %826
  %829 = bitcast %"class.autofill::FieldRendererId"* %764 to i8*
  call void @_ZdlPv(i8* %829) #14
  br label %830

830:                                              ; preds = %828, %826, %784, %777, %731, %721
  %831 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::CategoryOfWords", %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %724, i64 1
  %832 = icmp eq %"struct.autofill::(anonymous namespace)::CategoryOfWords"* %831, getelementptr inbounds ([4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"], [4 x %"struct.autofill::(anonymous namespace)::CategoryOfWords"]* @_ZZN8autofill12_GLOBAL__N_125FindUsernameFieldInternalERKNSt3__16vectorIN5blink21WebFormControlElementENS1_9allocatorIS4_EEEERKNS_8FormDataEPNS2_INS_15FieldRendererIdENS5_ISD_EEEEE19kPositiveCategories, i64 1, i64 0)
  %833 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %155, align 8
  br i1 %832, label %706, label %834

834:                                              ; preds = %830
  %835 = load %"struct.autofill::(anonymous namespace)::UsernameFieldData"*, %"struct.autofill::(anonymous namespace)::UsernameFieldData"** %156, align 8
  br label %721

836:                                              ; preds = %706, %719
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #12
  %837 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %96, align 8
  %838 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %97, align 8
  %839 = icmp eq %"class.autofill::FieldRendererId"* %837, %838
  br i1 %839, label %866, label %840

840:                                              ; preds = %836
  %841 = ptrtoint %"class.autofill::FieldRendererId"* %838 to i64
  %842 = ptrtoint %"class.autofill::FieldRendererId"* %837 to i64
  %843 = bitcast %"class.std::__1::__map_iterator"* %10 to %"class.std::__1::__tree_node"**
  %844 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %843, align 8
  %845 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %844, i64 0, i32 1, i32 0, i32 1
  %846 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %845, i64 0, i32 0, i32 0
  %847 = load %"class.autofill::FieldRendererId"*, %"class.autofill::FieldRendererId"** %846, align 8
  %848 = icmp eq %"class.autofill::FieldRendererId"* %847, null
  br i1 %848, label %857, label %849

849:                                              ; preds = %840
  %850 = ptrtoint %"class.autofill::FieldRendererId"* %847 to i64
  %851 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %844, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %852 = bitcast %"class.autofill::FieldRendererId"** %851 to i64*
  store i64 %850, i64* %852, align 8
  %853 = bitcast %"class.autofill::FieldRendererId"* %847 to i8*
  call void @_ZdlPv(i8* %853) #14
  %854 = bitcast %"class.std::__1::vector"* %845 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %854, i8 0, i64 24, i1 false) #12
  %855 = load i64, i64* %704, align 8
  %856 = load i64, i64* %703, align 8
  br label %857

857:                                              ; preds = %849, %840
  %858 = phi i64 [ %856, %849 ], [ %841, %840 ]
  %859 = phi i64 [ %855, %849 ], [ %842, %840 ]
  %860 = bitcast %"class.std::__1::vector"* %845 to i64*
  store i64 %859, i64* %860, align 8
  %861 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %844, i64 0, i32 1, i32 0, i32 1, i32 0, i32 1
  %862 = bitcast %"class.autofill::FieldRendererId"** %861 to i64*
  store i64 %858, i64* %862, align 8
  %863 = load i64, i64* %705, align 8
  %864 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %844, i64 0, i32 1, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %865 = bitcast %"class.autofill::FieldRendererId"** %864 to i64*
  store i64 %863, i64* %865, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 0, i64 24, i1 false) #12
  br label %871

866:                                              ; preds = %836
  %867 = icmp eq %"class.autofill::FieldRendererId"* %837, null
  br i1 %867, label %871, label %868

868:                                              ; preds = %866
  %869 = ptrtoint %"class.autofill::FieldRendererId"* %837 to i64
  store i64 %869, i64* %703, align 8
  %870 = bitcast %"class.autofill::FieldRendererId"* %837 to i8*
  call void @_ZdlPv(i8* %870) #14
  br label %871

871:                                              ; preds = %857, %866, %868
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %95) #12
  %872 = bitcast %"class.std::__1::__map_iterator"* %10 to %"class.std::__1::__tree_node"**
  %873 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %872, align 8
  br label %874

874:                                              ; preds = %101, %871
  %875 = phi %"class.std::__1::__tree_node"* [ %66, %101 ], [ %873, %871 ]
  %876 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %875, i64 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %877 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %9, i64 0, i32 0, i32 0
  call void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* nonnull %877) #12
  call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* nonnull %877) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #12
  ret %"class.std::__1::vector"* %876
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK5blink21WebFormControlElement4FormEv(%"class.blink::WebFormElement"* sret, %"class.blink::WebFormControlElement"*) local_unnamed_addr #2

declare i32 @_ZN8autofill9form_util17GetFormRendererIdERKN5blink14WebFormElementE(%"class.blink::WebFormElement"* dereferenceable(16)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14WebFormElementD2Ev(%"class.blink::WebFormElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* %3) #12
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %3) #12
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare zeroext i1 @_ZNK5blink15WebInputElement26IsPasswordFieldForAutofillEv(%"class.blink::WebInputElement"*) local_unnamed_addr #2

declare void @_ZNK5blink21WebFormControlElement15NameForAutofillEv(%"class.blink::WebString"* sret, %"class.blink::WebFormControlElement"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #4

declare %"class.blink::WebInputElement"* @_ZN5blink17ToWebInputElementEPNS_10WebElementE(%"class.blink::WebElement"*) local_unnamed_addr #2

declare void @_ZN4base20Latin1OrUTF16ToUTF16EmPKhPKDs(%"class.std::__1::basic_string"* sret, i64, i8*, i16*) local_unnamed_addr #2

declare i64 @_ZNK5blink9WebString6lengthEv(%"class.blink::WebString"*) local_unnamed_addr #2

declare i8* @_ZNK5blink9WebString5Data8Ev(%"class.blink::WebString"*) local_unnamed_addr #2

declare i16* @_ZNK5blink9WebString6Data16Ev(%"class.blink::WebString"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15WebInputElementD0Ev(%"class.blink::WebInputElement"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebInputElement", %"class.blink::WebInputElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %2) #12
  %3 = bitcast %"class.blink::WebInputElement"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

declare void @_ZN5blink7WebNodeC2ERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* dereferenceable(16)) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZNSt3__116allocator_traitsINS_9allocatorIN8autofill12_GLOBAL__N_117UsernameFieldDataEEEE7destroyIS4_vEEvRS5_PT_(%"struct.autofill::(anonymous namespace)::UsernameFieldData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 4
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %9 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %4
  br i1 %10, label %26, label %11

11:                                               ; preds = %6, %21
  %12 = phi %"class.std::__1::basic_string"* [ %13, %21 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 -1
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %11
  %19 = bitcast %"class.std::__1::basic_string"* %13 to i8**
  %20 = load i8*, i8** %19, align 8
  tail call void @_ZdlPv(i8* %20) #14
  br label %21

21:                                               ; preds = %18, %11
  %22 = icmp eq %"class.std::__1::basic_string"* %13, %4
  br i1 %22, label %23, label %11

23:                                               ; preds = %21
  %24 = bitcast %"class.base::internal::flat_tree"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  br label %26

26:                                               ; preds = %23, %6
  %27 = phi i8* [ %25, %23 ], [ %7, %6 ]
  store %"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"** %8, align 8
  tail call void @_ZdlPv(i8* %27) #14
  br label %28

28:                                               ; preds = %26, %1
  %29 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 3
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %30, i64 0, i32 1, i32 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = bitcast %"class.std::__1::basic_string"* %29 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #14
  br label %37

37:                                               ; preds = %34, %28
  %38 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 2
  %39 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %39, align 8
  %41 = icmp eq %"class.std::__1::basic_string"* %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %37
  %43 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %44 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %45 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %44, align 8
  %46 = icmp eq %"class.std::__1::basic_string"* %45, %40
  br i1 %46, label %62, label %47

47:                                               ; preds = %42, %57
  %48 = phi %"class.std::__1::basic_string"* [ %49, %57 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %50, i64 0, i32 1, i32 1
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %49 to i8**
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #14
  br label %57

57:                                               ; preds = %54, %47
  %58 = icmp eq %"class.std::__1::basic_string"* %49, %40
  br i1 %58, label %59, label %47

59:                                               ; preds = %57
  %60 = bitcast %"class.base::internal::flat_tree"* %38 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i8* [ %61, %59 ], [ %43, %42 ]
  store %"class.std::__1::basic_string"* %40, %"class.std::__1::basic_string"** %44, align 8
  tail call void @_ZdlPv(i8* %63) #14
  br label %64

64:                                               ; preds = %62, %37
  %65 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %67 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %66, i64 0, i32 1, i32 1
  %68 = load i8, i8* %67, align 1
  %69 = icmp slt i8 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64
  %71 = bitcast %"class.std::__1::basic_string"* %65 to i8**
  %72 = load i8*, i8** %71, align 8
  tail call void @_ZdlPv(i8* %72) #14
  br label %73

73:                                               ; preds = %64, %70
  %74 = getelementptr inbounds %"struct.autofill::(anonymous namespace)::UsernameFieldData", %"struct.autofill::(anonymous namespace)::UsernameFieldData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %74) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN8autofill12_GLOBAL__N_125AppendValueAndShortTokensERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEPS7_PN4base8internal9flat_treeIS7_NSB_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.base::internal::flat_tree"*) unnamed_addr #0 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::vector.87", align 8
  %6 = alloca %"class.std::__1::vector.52", align 8
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 24, i1 false)
  %13 = load i8, i8* %11, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i16*, i16** %15, align 8
  %17 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %18 = select i1 %14, i16* %16, i16* %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %13 to i64
  %22 = select i1 %14, i64 %20, i64 %21
  call void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* nonnull sret %4, i16* %18, i64 %22) #12
  %23 = bitcast %"class.std::__1::vector.87"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %5, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector.87", %"class.std::__1::vector.87"* %5, i64 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = bitcast %"class.std::__1::vector.87"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 24, i1 false)
  %29 = load i8, i8* %27, align 1
  %30 = load i16*, i16** %8, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  %32 = load i64, i64* %9, align 8
  %33 = zext i8 %29 to i64
  %34 = icmp slt i8 %29, 0
  %35 = select i1 %34, i16* %30, i16* %31
  %36 = select i1 %34, i64 %32, i64 %33
  call void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.87"* nonnull sret %5, i16* %35, i64 %36, i16* getelementptr inbounds ([43 x i16], [43 x i16]* @_ZN8autofill12_GLOBAL__N_111kDelimitersE, i64 0, i64 0), i64 42, i32 1, i32 1) #12
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %41, label %44

41:                                               ; preds = %3
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  br label %46

44:                                               ; preds = %3
  %45 = zext i8 %39 to i64
  br label %46

46:                                               ; preds = %41, %44
  %47 = phi i64 [ %43, %41 ], [ %45, %44 ]
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %81, label %49

49:                                               ; preds = %46
  br i1 %40, label %52, label %50

50:                                               ; preds = %49
  %51 = zext i8 %39 to i64
  br label %59

52:                                               ; preds = %49
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  %55 = and i64 %54, 9223372036854775807
  %56 = add nsw i64 %55, -1
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %58 = load i64, i64* %57, align 8
  br label %59

59:                                               ; preds = %52, %50
  %60 = phi i64 [ 10, %50 ], [ %56, %52 ]
  %61 = phi i64 [ %51, %50 ], [ %58, %52 ]
  %62 = icmp eq i64 %61, %60
  br i1 %62, label %63, label %66

63:                                               ; preds = %59
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"* %1, i64 %60, i64 1, i64 %60, i64 %60, i64 0, i64 0) #12
  %64 = load i8, i8* %38, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %71, label %67

66:                                               ; preds = %59
  br i1 %40, label %71, label %67

67:                                               ; preds = %66, %63
  %68 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %69 = trunc i64 %61 to i8
  %70 = add i8 %69, 1
  store i8 %70, i8* %38, align 1
  br label %76

71:                                               ; preds = %66, %63
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i16*, i16** %72, align 8
  %74 = add i64 %61, 1
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %74, i64* %75, align 8
  br label %76

76:                                               ; preds = %67, %71
  %77 = phi i16* [ %68, %67 ], [ %73, %71 ]
  %78 = getelementptr inbounds i16, i16* %77, i64 %61
  store i16 36, i16* %78, align 2
  %79 = getelementptr inbounds i16, i16* %78, i64 1
  store i16 0, i16* %79, align 2
  %80 = load i8, i8* %38, align 1
  br label %81

81:                                               ; preds = %76, %46
  %82 = phi i8 [ %80, %76 ], [ %39, %46 ]
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  br label %89

87:                                               ; preds = %81
  %88 = zext i8 %82 to i64
  br label %89

89:                                               ; preds = %84, %87
  %90 = phi i64 [ %86, %84 ], [ %88, %87 ]
  %91 = load i8, i8* %27, align 1
  %92 = icmp slt i8 %91, 0
  %93 = load i64, i64* %9, align 8
  %94 = zext i8 %91 to i64
  %95 = select i1 %92, i64 %93, i64 %94
  %96 = add i64 %95, %90
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"* %1, i64 %96)
  %97 = bitcast %"class.std::__1::vector.52"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #12
  %98 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 0
  %99 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %97, i8 0, i64 24, i1 false) #12
  %101 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %24, align 8
  %102 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %25, align 8
  %103 = icmp eq %"class.base::BasicStringPiece"* %101, %102
  br i1 %103, label %113, label %104

104:                                              ; preds = %89
  %105 = bitcast %"class.std::__1::basic_string"** %99 to i64*
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %108 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %153

110:                                              ; preds = %505
  %111 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %98, align 8
  %112 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %99, align 8
  br label %113

113:                                              ; preds = %110, %89
  %114 = phi %"class.std::__1::basic_string"* [ %112, %110 ], [ null, %89 ]
  %115 = phi %"class.std::__1::basic_string"* [ %111, %110 ], [ null, %89 ]
  call void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE6insertINS2_11__wrap_iterIPS8_EEEEvT_SK_(%"class.base::internal::flat_tree"* %2, %"class.std::__1::basic_string"* %115, %"class.std::__1::basic_string"* %114)
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %98, align 8
  %117 = icmp eq %"class.std::__1::basic_string"* %116, null
  br i1 %117, label %139, label %118

118:                                              ; preds = %113
  %119 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %120 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %99, align 8
  %121 = icmp eq %"class.std::__1::basic_string"* %120, %116
  br i1 %121, label %137, label %122

122:                                              ; preds = %118, %132
  %123 = phi %"class.std::__1::basic_string"* [ %124, %132 ], [ %120, %118 ]
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %123, i64 -1
  %125 = bitcast %"class.std::__1::basic_string"* %124 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %126 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %125, i64 0, i32 1, i32 1
  %127 = load i8, i8* %126, align 1
  %128 = icmp slt i8 %127, 0
  br i1 %128, label %129, label %132

129:                                              ; preds = %122
  %130 = bitcast %"class.std::__1::basic_string"* %124 to i8**
  %131 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %131) #14
  br label %132

132:                                              ; preds = %129, %122
  %133 = icmp eq %"class.std::__1::basic_string"* %124, %116
  br i1 %133, label %134, label %122

134:                                              ; preds = %132
  %135 = bitcast %"class.std::__1::vector.52"* %6 to i8**
  %136 = load i8*, i8** %135, align 8
  br label %137

137:                                              ; preds = %134, %118
  %138 = phi i8* [ %136, %134 ], [ %119, %118 ]
  store %"class.std::__1::basic_string"* %116, %"class.std::__1::basic_string"** %99, align 8
  call void @_ZdlPv(i8* %138) #14
  br label %139

139:                                              ; preds = %113, %137
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #12
  %140 = load %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"** %24, align 8
  %141 = icmp eq %"class.base::BasicStringPiece"* %140, null
  br i1 %141, label %146, label %142

142:                                              ; preds = %139
  %143 = ptrtoint %"class.base::BasicStringPiece"* %140 to i64
  %144 = bitcast %"class.base::BasicStringPiece"** %25 to i64*
  store i64 %143, i64* %144, align 8
  %145 = bitcast %"class.base::BasicStringPiece"* %140 to i8*
  call void @_ZdlPv(i8* %145) #14
  br label %146

146:                                              ; preds = %139, %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #12
  %147 = load i8, i8* %27, align 1
  %148 = icmp slt i8 %147, 0
  br i1 %148, label %149, label %152

149:                                              ; preds = %146
  %150 = bitcast %"class.std::__1::basic_string"* %4 to i8**
  %151 = load i8*, i8** %150, align 8
  call void @_ZdlPv(i8* %151) #14
  br label %152

152:                                              ; preds = %146, %149
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #12
  ret void

153:                                              ; preds = %104, %505
  %154 = phi %"class.base::BasicStringPiece"* [ %101, %104 ], [ %506, %505 ]
  %155 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = icmp ult i64 %156, 4
  br i1 %157, label %158, label %324

158:                                              ; preds = %153
  %159 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %99, align 8
  %160 = bitcast %"class.std::__1::basic_string"* %159 to i8*
  %161 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %100, align 8
  %162 = icmp ult %"class.std::__1::basic_string"* %159, %161
  br i1 %162, label %163, label %321

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 0, i32 0
  %165 = load i16*, i16** %164, align 8, !noalias !12
  %166 = bitcast i16* %165 to i8*
  %167 = trunc i64 %156 to i8
  %168 = bitcast %"class.std::__1::basic_string"* %159 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %169 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %168, i64 0, i32 1, i32 1
  store i8 %167, i8* %169, align 1, !alias.scope !12
  %170 = bitcast %"class.std::__1::basic_string"* %159 to i16*
  %171 = icmp eq i64 %156, 0
  br i1 %171, label %317, label %172

172:                                              ; preds = %163
  %173 = icmp ult i64 %156, 16
  br i1 %173, label %264, label %174

174:                                              ; preds = %172
  %175 = shl i64 %156, 1
  %176 = getelementptr i8, i8* %160, i64 %175
  %177 = getelementptr i16, i16* %165, i64 %156
  %178 = bitcast i16* %177 to %"class.std::__1::basic_string"*
  %179 = icmp ult %"class.std::__1::basic_string"* %159, %178
  %180 = icmp ugt i8* %176, %166
  %181 = and i1 %179, %180
  br i1 %181, label %264, label %182

182:                                              ; preds = %174
  %183 = and i64 %156, -16
  %184 = sub i64 %156, %183
  %185 = getelementptr i16, i16* %165, i64 %183
  %186 = getelementptr i16, i16* %170, i64 %183
  %187 = add i64 %183, -16
  %188 = lshr exact i64 %187, 4
  %189 = add nuw nsw i64 %188, 1
  %190 = and i64 %189, 3
  %191 = icmp ult i64 %187, 48
  br i1 %191, label %243, label %192

192:                                              ; preds = %182
  %193 = sub nsw i64 %189, %190
  br label %194

194:                                              ; preds = %194, %192
  %195 = phi i64 [ 0, %192 ], [ %240, %194 ]
  %196 = phi i64 [ %193, %192 ], [ %241, %194 ]
  %197 = getelementptr i16, i16* %165, i64 %195
  %198 = getelementptr i16, i16* %170, i64 %195
  %199 = bitcast i16* %197 to <8 x i16>*
  %200 = load <8 x i16>, <8 x i16>* %199, align 2, !alias.scope !15
  %201 = getelementptr i16, i16* %197, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !15
  %204 = bitcast i16* %198 to <8 x i16>*
  store <8 x i16> %200, <8 x i16>* %204, align 2, !alias.scope !18, !noalias !15
  %205 = getelementptr i16, i16* %198, i64 8
  %206 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %206, align 2, !alias.scope !18, !noalias !15
  %207 = or i64 %195, 16
  %208 = getelementptr i16, i16* %165, i64 %207
  %209 = getelementptr i16, i16* %170, i64 %207
  %210 = bitcast i16* %208 to <8 x i16>*
  %211 = load <8 x i16>, <8 x i16>* %210, align 2, !alias.scope !15
  %212 = getelementptr i16, i16* %208, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !15
  %215 = bitcast i16* %209 to <8 x i16>*
  store <8 x i16> %211, <8 x i16>* %215, align 2, !alias.scope !18, !noalias !15
  %216 = getelementptr i16, i16* %209, i64 8
  %217 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %217, align 2, !alias.scope !18, !noalias !15
  %218 = or i64 %195, 32
  %219 = getelementptr i16, i16* %165, i64 %218
  %220 = getelementptr i16, i16* %170, i64 %218
  %221 = bitcast i16* %219 to <8 x i16>*
  %222 = load <8 x i16>, <8 x i16>* %221, align 2, !alias.scope !15
  %223 = getelementptr i16, i16* %219, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  %225 = load <8 x i16>, <8 x i16>* %224, align 2, !alias.scope !15
  %226 = bitcast i16* %220 to <8 x i16>*
  store <8 x i16> %222, <8 x i16>* %226, align 2, !alias.scope !18, !noalias !15
  %227 = getelementptr i16, i16* %220, i64 8
  %228 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %225, <8 x i16>* %228, align 2, !alias.scope !18, !noalias !15
  %229 = or i64 %195, 48
  %230 = getelementptr i16, i16* %165, i64 %229
  %231 = getelementptr i16, i16* %170, i64 %229
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !15
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !15
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !18, !noalias !15
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !18, !noalias !15
  %240 = add i64 %195, 64
  %241 = add i64 %196, -4
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %194, !llvm.loop !20

243:                                              ; preds = %194, %182
  %244 = phi i64 [ 0, %182 ], [ %240, %194 ]
  %245 = icmp eq i64 %190, 0
  br i1 %245, label %262, label %246

246:                                              ; preds = %243, %246
  %247 = phi i64 [ %259, %246 ], [ %244, %243 ]
  %248 = phi i64 [ %260, %246 ], [ %190, %243 ]
  %249 = getelementptr i16, i16* %165, i64 %247
  %250 = getelementptr i16, i16* %170, i64 %247
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !15
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !15
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !18, !noalias !15
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !18, !noalias !15
  %259 = add i64 %247, 16
  %260 = add i64 %248, -1
  %261 = icmp eq i64 %260, 0
  br i1 %261, label %262, label %246, !llvm.loop !22

262:                                              ; preds = %246, %243
  %263 = icmp eq i64 %156, %183
  br i1 %263, label %317, label %264

264:                                              ; preds = %262, %174, %172
  %265 = phi i64 [ %156, %174 ], [ %156, %172 ], [ %184, %262 ]
  %266 = phi i16* [ %165, %174 ], [ %165, %172 ], [ %185, %262 ]
  %267 = phi i16* [ %170, %174 ], [ %170, %172 ], [ %186, %262 ]
  %268 = add i64 %265, -1
  %269 = and i64 %265, 7
  %270 = icmp eq i64 %269, 0
  br i1 %270, label %282, label %271

271:                                              ; preds = %264, %271
  %272 = phi i64 [ %277, %271 ], [ %265, %264 ]
  %273 = phi i16* [ %279, %271 ], [ %266, %264 ]
  %274 = phi i16* [ %278, %271 ], [ %267, %264 ]
  %275 = phi i64 [ %280, %271 ], [ %269, %264 ]
  %276 = load i16, i16* %273, align 2
  store i16 %276, i16* %274, align 2
  %277 = add i64 %272, -1
  %278 = getelementptr inbounds i16, i16* %274, i64 1
  %279 = getelementptr inbounds i16, i16* %273, i64 1
  %280 = add i64 %275, -1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %271, !llvm.loop !24

282:                                              ; preds = %271, %264
  %283 = phi i64 [ %265, %264 ], [ %277, %271 ]
  %284 = phi i16* [ %266, %264 ], [ %279, %271 ]
  %285 = phi i16* [ %267, %264 ], [ %278, %271 ]
  %286 = icmp ult i64 %268, 7
  br i1 %286, label %317, label %287

287:                                              ; preds = %282, %287
  %288 = phi i64 [ %313, %287 ], [ %283, %282 ]
  %289 = phi i16* [ %315, %287 ], [ %284, %282 ]
  %290 = phi i16* [ %314, %287 ], [ %285, %282 ]
  %291 = load i16, i16* %289, align 2
  store i16 %291, i16* %290, align 2
  %292 = getelementptr inbounds i16, i16* %290, i64 1
  %293 = getelementptr inbounds i16, i16* %289, i64 1
  %294 = load i16, i16* %293, align 2
  store i16 %294, i16* %292, align 2
  %295 = getelementptr inbounds i16, i16* %290, i64 2
  %296 = getelementptr inbounds i16, i16* %289, i64 2
  %297 = load i16, i16* %296, align 2
  store i16 %297, i16* %295, align 2
  %298 = getelementptr inbounds i16, i16* %290, i64 3
  %299 = getelementptr inbounds i16, i16* %289, i64 3
  %300 = load i16, i16* %299, align 2
  store i16 %300, i16* %298, align 2
  %301 = getelementptr inbounds i16, i16* %290, i64 4
  %302 = getelementptr inbounds i16, i16* %289, i64 4
  %303 = load i16, i16* %302, align 2
  store i16 %303, i16* %301, align 2
  %304 = getelementptr inbounds i16, i16* %290, i64 5
  %305 = getelementptr inbounds i16, i16* %289, i64 5
  %306 = load i16, i16* %305, align 2
  store i16 %306, i16* %304, align 2
  %307 = getelementptr inbounds i16, i16* %290, i64 6
  %308 = getelementptr inbounds i16, i16* %289, i64 6
  %309 = load i16, i16* %308, align 2
  store i16 %309, i16* %307, align 2
  %310 = getelementptr inbounds i16, i16* %290, i64 7
  %311 = getelementptr inbounds i16, i16* %289, i64 7
  %312 = load i16, i16* %311, align 2
  store i16 %312, i16* %310, align 2
  %313 = add i64 %288, -8
  %314 = getelementptr inbounds i16, i16* %290, i64 8
  %315 = getelementptr inbounds i16, i16* %289, i64 8
  %316 = icmp eq i64 %313, 0
  br i1 %316, label %317, label %287, !llvm.loop !25

317:                                              ; preds = %282, %287, %262, %163
  %318 = getelementptr inbounds i16, i16* %170, i64 %156
  store i16 0, i16* %318, align 2
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 1
  %320 = ptrtoint %"class.std::__1::basic_string"* %319 to i64
  store i64 %320, i64* %105, align 8
  br label %322

321:                                              ; preds = %158
  call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.52"* nonnull %6, %"class.base::BasicStringPiece"* dereferenceable(16) %154) #12
  br label %322

322:                                              ; preds = %317, %321
  %323 = load i64, i64* %155, align 8
  br label %324

324:                                              ; preds = %322, %153
  %325 = phi i64 [ %323, %322 ], [ %156, %153 ]
  %326 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 0, i32 0
  %327 = load i16*, i16** %326, align 8
  %328 = load i8, i8* %38, align 1
  %329 = icmp slt i8 %328, 0
  br i1 %329, label %330, label %335

330:                                              ; preds = %324
  %331 = load i64, i64* %106, align 8
  %332 = and i64 %331, 9223372036854775807
  %333 = add nsw i64 %332, -1
  %334 = load i64, i64* %107, align 8
  br label %337

335:                                              ; preds = %324
  %336 = zext i8 %328 to i64
  br label %337

337:                                              ; preds = %335, %330
  %338 = phi i64 [ %333, %330 ], [ 10, %335 ]
  %339 = phi i64 [ %334, %330 ], [ %336, %335 ]
  %340 = sub i64 %338, %339
  %341 = icmp ult i64 %340, %325
  br i1 %341, label %502, label %342

342:                                              ; preds = %337
  %343 = icmp eq i64 %325, 0
  br i1 %343, label %505, label %344

344:                                              ; preds = %342
  br i1 %329, label %345, label %347

345:                                              ; preds = %344
  %346 = load i16*, i16** %109, align 8
  br label %347

347:                                              ; preds = %344, %345
  %348 = phi i16* [ %346, %345 ], [ %108, %344 ]
  %349 = getelementptr inbounds i16, i16* %348, i64 %339
  %350 = icmp ult i64 %325, 16
  br i1 %350, label %440, label %351

351:                                              ; preds = %347
  %352 = add i64 %339, %325
  %353 = getelementptr i16, i16* %348, i64 %352
  %354 = getelementptr i16, i16* %327, i64 %325
  %355 = icmp ult i16* %349, %354
  %356 = icmp ult i16* %327, %353
  %357 = and i1 %355, %356
  br i1 %357, label %440, label %358

358:                                              ; preds = %351
  %359 = and i64 %325, -16
  %360 = sub i64 %325, %359
  %361 = getelementptr i16, i16* %327, i64 %359
  %362 = getelementptr i16, i16* %349, i64 %359
  %363 = add i64 %359, -16
  %364 = lshr exact i64 %363, 4
  %365 = add nuw nsw i64 %364, 1
  %366 = and i64 %365, 3
  %367 = icmp ult i64 %363, 48
  br i1 %367, label %419, label %368

368:                                              ; preds = %358
  %369 = sub nsw i64 %365, %366
  br label %370

370:                                              ; preds = %370, %368
  %371 = phi i64 [ 0, %368 ], [ %416, %370 ]
  %372 = phi i64 [ %369, %368 ], [ %417, %370 ]
  %373 = getelementptr i16, i16* %327, i64 %371
  %374 = getelementptr i16, i16* %349, i64 %371
  %375 = bitcast i16* %373 to <8 x i16>*
  %376 = load <8 x i16>, <8 x i16>* %375, align 2, !alias.scope !26
  %377 = getelementptr i16, i16* %373, i64 8
  %378 = bitcast i16* %377 to <8 x i16>*
  %379 = load <8 x i16>, <8 x i16>* %378, align 2, !alias.scope !26
  %380 = bitcast i16* %374 to <8 x i16>*
  store <8 x i16> %376, <8 x i16>* %380, align 2, !alias.scope !29, !noalias !26
  %381 = getelementptr i16, i16* %374, i64 8
  %382 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %379, <8 x i16>* %382, align 2, !alias.scope !29, !noalias !26
  %383 = or i64 %371, 16
  %384 = getelementptr i16, i16* %327, i64 %383
  %385 = getelementptr i16, i16* %349, i64 %383
  %386 = bitcast i16* %384 to <8 x i16>*
  %387 = load <8 x i16>, <8 x i16>* %386, align 2, !alias.scope !26
  %388 = getelementptr i16, i16* %384, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  %390 = load <8 x i16>, <8 x i16>* %389, align 2, !alias.scope !26
  %391 = bitcast i16* %385 to <8 x i16>*
  store <8 x i16> %387, <8 x i16>* %391, align 2, !alias.scope !29, !noalias !26
  %392 = getelementptr i16, i16* %385, i64 8
  %393 = bitcast i16* %392 to <8 x i16>*
  store <8 x i16> %390, <8 x i16>* %393, align 2, !alias.scope !29, !noalias !26
  %394 = or i64 %371, 32
  %395 = getelementptr i16, i16* %327, i64 %394
  %396 = getelementptr i16, i16* %349, i64 %394
  %397 = bitcast i16* %395 to <8 x i16>*
  %398 = load <8 x i16>, <8 x i16>* %397, align 2, !alias.scope !26
  %399 = getelementptr i16, i16* %395, i64 8
  %400 = bitcast i16* %399 to <8 x i16>*
  %401 = load <8 x i16>, <8 x i16>* %400, align 2, !alias.scope !26
  %402 = bitcast i16* %396 to <8 x i16>*
  store <8 x i16> %398, <8 x i16>* %402, align 2, !alias.scope !29, !noalias !26
  %403 = getelementptr i16, i16* %396, i64 8
  %404 = bitcast i16* %403 to <8 x i16>*
  store <8 x i16> %401, <8 x i16>* %404, align 2, !alias.scope !29, !noalias !26
  %405 = or i64 %371, 48
  %406 = getelementptr i16, i16* %327, i64 %405
  %407 = getelementptr i16, i16* %349, i64 %405
  %408 = bitcast i16* %406 to <8 x i16>*
  %409 = load <8 x i16>, <8 x i16>* %408, align 2, !alias.scope !26
  %410 = getelementptr i16, i16* %406, i64 8
  %411 = bitcast i16* %410 to <8 x i16>*
  %412 = load <8 x i16>, <8 x i16>* %411, align 2, !alias.scope !26
  %413 = bitcast i16* %407 to <8 x i16>*
  store <8 x i16> %409, <8 x i16>* %413, align 2, !alias.scope !29, !noalias !26
  %414 = getelementptr i16, i16* %407, i64 8
  %415 = bitcast i16* %414 to <8 x i16>*
  store <8 x i16> %412, <8 x i16>* %415, align 2, !alias.scope !29, !noalias !26
  %416 = add i64 %371, 64
  %417 = add i64 %372, -4
  %418 = icmp eq i64 %417, 0
  br i1 %418, label %419, label %370, !llvm.loop !31

419:                                              ; preds = %370, %358
  %420 = phi i64 [ 0, %358 ], [ %416, %370 ]
  %421 = icmp eq i64 %366, 0
  br i1 %421, label %438, label %422

422:                                              ; preds = %419, %422
  %423 = phi i64 [ %435, %422 ], [ %420, %419 ]
  %424 = phi i64 [ %436, %422 ], [ %366, %419 ]
  %425 = getelementptr i16, i16* %327, i64 %423
  %426 = getelementptr i16, i16* %349, i64 %423
  %427 = bitcast i16* %425 to <8 x i16>*
  %428 = load <8 x i16>, <8 x i16>* %427, align 2, !alias.scope !26
  %429 = getelementptr i16, i16* %425, i64 8
  %430 = bitcast i16* %429 to <8 x i16>*
  %431 = load <8 x i16>, <8 x i16>* %430, align 2, !alias.scope !26
  %432 = bitcast i16* %426 to <8 x i16>*
  store <8 x i16> %428, <8 x i16>* %432, align 2, !alias.scope !29, !noalias !26
  %433 = getelementptr i16, i16* %426, i64 8
  %434 = bitcast i16* %433 to <8 x i16>*
  store <8 x i16> %431, <8 x i16>* %434, align 2, !alias.scope !29, !noalias !26
  %435 = add i64 %423, 16
  %436 = add i64 %424, -1
  %437 = icmp eq i64 %436, 0
  br i1 %437, label %438, label %422, !llvm.loop !32

438:                                              ; preds = %422, %419
  %439 = icmp eq i64 %325, %359
  br i1 %439, label %493, label %440

440:                                              ; preds = %438, %351, %347
  %441 = phi i64 [ %325, %351 ], [ %325, %347 ], [ %360, %438 ]
  %442 = phi i16* [ %327, %351 ], [ %327, %347 ], [ %361, %438 ]
  %443 = phi i16* [ %349, %351 ], [ %349, %347 ], [ %362, %438 ]
  %444 = add i64 %441, -1
  %445 = and i64 %441, 7
  %446 = icmp eq i64 %445, 0
  br i1 %446, label %458, label %447

447:                                              ; preds = %440, %447
  %448 = phi i64 [ %453, %447 ], [ %441, %440 ]
  %449 = phi i16* [ %455, %447 ], [ %442, %440 ]
  %450 = phi i16* [ %454, %447 ], [ %443, %440 ]
  %451 = phi i64 [ %456, %447 ], [ %445, %440 ]
  %452 = load i16, i16* %449, align 2
  store i16 %452, i16* %450, align 2
  %453 = add i64 %448, -1
  %454 = getelementptr inbounds i16, i16* %450, i64 1
  %455 = getelementptr inbounds i16, i16* %449, i64 1
  %456 = add i64 %451, -1
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %458, label %447, !llvm.loop !33

458:                                              ; preds = %447, %440
  %459 = phi i64 [ %441, %440 ], [ %453, %447 ]
  %460 = phi i16* [ %442, %440 ], [ %455, %447 ]
  %461 = phi i16* [ %443, %440 ], [ %454, %447 ]
  %462 = icmp ult i64 %444, 7
  br i1 %462, label %493, label %463

463:                                              ; preds = %458, %463
  %464 = phi i64 [ %489, %463 ], [ %459, %458 ]
  %465 = phi i16* [ %491, %463 ], [ %460, %458 ]
  %466 = phi i16* [ %490, %463 ], [ %461, %458 ]
  %467 = load i16, i16* %465, align 2
  store i16 %467, i16* %466, align 2
  %468 = getelementptr inbounds i16, i16* %466, i64 1
  %469 = getelementptr inbounds i16, i16* %465, i64 1
  %470 = load i16, i16* %469, align 2
  store i16 %470, i16* %468, align 2
  %471 = getelementptr inbounds i16, i16* %466, i64 2
  %472 = getelementptr inbounds i16, i16* %465, i64 2
  %473 = load i16, i16* %472, align 2
  store i16 %473, i16* %471, align 2
  %474 = getelementptr inbounds i16, i16* %466, i64 3
  %475 = getelementptr inbounds i16, i16* %465, i64 3
  %476 = load i16, i16* %475, align 2
  store i16 %476, i16* %474, align 2
  %477 = getelementptr inbounds i16, i16* %466, i64 4
  %478 = getelementptr inbounds i16, i16* %465, i64 4
  %479 = load i16, i16* %478, align 2
  store i16 %479, i16* %477, align 2
  %480 = getelementptr inbounds i16, i16* %466, i64 5
  %481 = getelementptr inbounds i16, i16* %465, i64 5
  %482 = load i16, i16* %481, align 2
  store i16 %482, i16* %480, align 2
  %483 = getelementptr inbounds i16, i16* %466, i64 6
  %484 = getelementptr inbounds i16, i16* %465, i64 6
  %485 = load i16, i16* %484, align 2
  store i16 %485, i16* %483, align 2
  %486 = getelementptr inbounds i16, i16* %466, i64 7
  %487 = getelementptr inbounds i16, i16* %465, i64 7
  %488 = load i16, i16* %487, align 2
  store i16 %488, i16* %486, align 2
  %489 = add i64 %464, -8
  %490 = getelementptr inbounds i16, i16* %466, i64 8
  %491 = getelementptr inbounds i16, i16* %465, i64 8
  %492 = icmp eq i64 %489, 0
  br i1 %492, label %493, label %463, !llvm.loop !34

493:                                              ; preds = %458, %463, %438
  %494 = add i64 %339, %325
  %495 = load i8, i8* %38, align 1
  %496 = icmp slt i8 %495, 0
  br i1 %496, label %497, label %498

497:                                              ; preds = %493
  store i64 %494, i64* %107, align 8
  br label %500

498:                                              ; preds = %493
  %499 = trunc i64 %494 to i8
  store i8 %499, i8* %38, align 1
  br label %500

500:                                              ; preds = %498, %497
  %501 = getelementptr inbounds i16, i16* %348, i64 %494
  store i16 0, i16* %501, align 2
  br label %505

502:                                              ; preds = %337
  %503 = add i64 %339, %325
  %504 = sub i64 %503, %338
  call void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"* %1, i64 %338, i64 %504, i64 %339, i64 %339, i64 0, i64 %325, i16* %327) #12
  br label %505

505:                                              ; preds = %342, %500, %502
  %506 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %154, i64 1
  %507 = icmp eq %"class.base::BasicStringPiece"* %506, %102
  br i1 %507, label %110, label %153
}

declare void @_ZN5blink7WebNodeC2Ev(%"class.blink::WebNode"*) unnamed_addr #2

declare void @_ZN5blink7WebNode6AssignERKS0_(%"class.blink::WebNode"*, %"class.blink::WebNode"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN4base4i18n7ToLowerENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEE(%"class.std::__1::basic_string"* sret, i16*, i64) local_unnamed_addr #2

declare void @_ZN4base16SplitStringPieceENS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEES4_NS_18WhitespaceHandlingENS_11SplitResultE(%"class.std::__1::vector.87"* sret, i16*, i64, i16*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE7reserveEm(%"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ugt i64 %1, 9223372036854775791
  br i1 %3, label %4, label %6

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %5) #13
  unreachable

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %7, i64 0, i32 1, i32 1
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %16

14:                                               ; preds = %6
  %15 = zext i8 %9 to i64
  br label %16

16:                                               ; preds = %11, %14
  %17 = phi i64 [ %13, %11 ], [ %15, %14 ]
  %18 = icmp ugt i64 %17, %1
  %19 = select i1 %18, i64 %17, i64 %1
  %20 = icmp ult i64 %19, 11
  br i1 %20, label %25, label %21

21:                                               ; preds = %16
  %22 = add i64 %19, 8
  %23 = and i64 %22, -8
  %24 = add i64 %23, -1
  br label %25

25:                                               ; preds = %16, %21
  %26 = phi i64 [ %24, %21 ], [ 10, %16 ]
  br i1 %10, label %27, label %32

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 9223372036854775807
  %31 = add nsw i64 %30, -1
  br label %32

32:                                               ; preds = %25, %27
  %33 = phi i64 [ %31, %27 ], [ 10, %25 ]
  %34 = icmp eq i64 %26, %33
  br i1 %34, label %236, label %35

35:                                               ; preds = %32
  br i1 %10, label %36, label %39

36:                                               ; preds = %35
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  br label %41

39:                                               ; preds = %35
  %40 = zext i8 %9 to i64
  br label %41

41:                                               ; preds = %39, %36
  %42 = phi i64 [ %38, %36 ], [ %40, %39 ]
  %43 = icmp eq i64 %26, 10
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = add i64 %26, 1
  %46 = icmp slt i64 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @abort() #13
  unreachable

48:                                               ; preds = %44
  %49 = shl i64 %45, 1
  %50 = tail call i8* @_Znwm(i64 %49) #14
  %51 = bitcast i8* %50 to i16*
  br i1 %10, label %52, label %55

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  br label %61

55:                                               ; preds = %48
  %56 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %67

57:                                               ; preds = %41
  %58 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  br i1 %10, label %61, label %67

61:                                               ; preds = %57, %52
  %62 = phi i1 [ true, %52 ], [ false, %57 ]
  %63 = phi i16* [ %54, %52 ], [ %60, %57 ]
  %64 = phi i16* [ %51, %52 ], [ %58, %57 ]
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  br label %73

67:                                               ; preds = %57, %55
  %68 = phi i1 [ true, %55 ], [ false, %57 ]
  %69 = phi i1 [ false, %55 ], [ true, %57 ]
  %70 = phi i16* [ %56, %55 ], [ %60, %57 ]
  %71 = phi i16* [ %51, %55 ], [ %58, %57 ]
  %72 = zext i8 %9 to i64
  br label %73

73:                                               ; preds = %67, %61
  %74 = phi i1 [ %62, %61 ], [ %68, %67 ]
  %75 = phi i1 [ true, %61 ], [ %69, %67 ]
  %76 = phi i16* [ %63, %61 ], [ %70, %67 ]
  %77 = phi i16* [ %64, %61 ], [ %71, %67 ]
  %78 = phi i64 [ %66, %61 ], [ %72, %67 ]
  %79 = bitcast i16* %76 to i8*
  %80 = add i64 %78, 1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %225, label %82

82:                                               ; preds = %73
  %83 = icmp ult i64 %80, 16
  br i1 %83, label %172, label %84

84:                                               ; preds = %82
  %85 = getelementptr i16, i16* %77, i64 %80
  %86 = getelementptr i16, i16* %76, i64 %80
  %87 = icmp ult i16* %77, %86
  %88 = icmp ult i16* %76, %85
  %89 = and i1 %87, %88
  br i1 %89, label %172, label %90

90:                                               ; preds = %84
  %91 = and i64 %80, -16
  %92 = sub i64 %80, %91
  %93 = getelementptr i16, i16* %76, i64 %91
  %94 = getelementptr i16, i16* %77, i64 %91
  %95 = add i64 %91, -16
  %96 = lshr exact i64 %95, 4
  %97 = add nuw nsw i64 %96, 1
  %98 = and i64 %97, 3
  %99 = icmp ult i64 %95, 48
  br i1 %99, label %151, label %100

100:                                              ; preds = %90
  %101 = sub nsw i64 %97, %98
  br label %102

102:                                              ; preds = %102, %100
  %103 = phi i64 [ 0, %100 ], [ %148, %102 ]
  %104 = phi i64 [ %101, %100 ], [ %149, %102 ]
  %105 = getelementptr i16, i16* %76, i64 %103
  %106 = getelementptr i16, i16* %77, i64 %103
  %107 = bitcast i16* %105 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !35
  %109 = getelementptr i16, i16* %105, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  %111 = load <8 x i16>, <8 x i16>* %110, align 2, !alias.scope !35
  %112 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %112, align 2, !alias.scope !38, !noalias !35
  %113 = getelementptr i16, i16* %106, i64 8
  %114 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %111, <8 x i16>* %114, align 2, !alias.scope !38, !noalias !35
  %115 = or i64 %103, 16
  %116 = getelementptr i16, i16* %76, i64 %115
  %117 = getelementptr i16, i16* %77, i64 %115
  %118 = bitcast i16* %116 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !35
  %120 = getelementptr i16, i16* %116, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  %122 = load <8 x i16>, <8 x i16>* %121, align 2, !alias.scope !35
  %123 = bitcast i16* %117 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %123, align 2, !alias.scope !38, !noalias !35
  %124 = getelementptr i16, i16* %117, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %122, <8 x i16>* %125, align 2, !alias.scope !38, !noalias !35
  %126 = or i64 %103, 32
  %127 = getelementptr i16, i16* %76, i64 %126
  %128 = getelementptr i16, i16* %77, i64 %126
  %129 = bitcast i16* %127 to <8 x i16>*
  %130 = load <8 x i16>, <8 x i16>* %129, align 2, !alias.scope !35
  %131 = getelementptr i16, i16* %127, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  %133 = load <8 x i16>, <8 x i16>* %132, align 2, !alias.scope !35
  %134 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %130, <8 x i16>* %134, align 2, !alias.scope !38, !noalias !35
  %135 = getelementptr i16, i16* %128, i64 8
  %136 = bitcast i16* %135 to <8 x i16>*
  store <8 x i16> %133, <8 x i16>* %136, align 2, !alias.scope !38, !noalias !35
  %137 = or i64 %103, 48
  %138 = getelementptr i16, i16* %76, i64 %137
  %139 = getelementptr i16, i16* %77, i64 %137
  %140 = bitcast i16* %138 to <8 x i16>*
  %141 = load <8 x i16>, <8 x i16>* %140, align 2, !alias.scope !35
  %142 = getelementptr i16, i16* %138, i64 8
  %143 = bitcast i16* %142 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !35
  %145 = bitcast i16* %139 to <8 x i16>*
  store <8 x i16> %141, <8 x i16>* %145, align 2, !alias.scope !38, !noalias !35
  %146 = getelementptr i16, i16* %139, i64 8
  %147 = bitcast i16* %146 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %147, align 2, !alias.scope !38, !noalias !35
  %148 = add i64 %103, 64
  %149 = add i64 %104, -4
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %151, label %102, !llvm.loop !40

151:                                              ; preds = %102, %90
  %152 = phi i64 [ 0, %90 ], [ %148, %102 ]
  %153 = icmp eq i64 %98, 0
  br i1 %153, label %170, label %154

154:                                              ; preds = %151, %154
  %155 = phi i64 [ %167, %154 ], [ %152, %151 ]
  %156 = phi i64 [ %168, %154 ], [ %98, %151 ]
  %157 = getelementptr i16, i16* %76, i64 %155
  %158 = getelementptr i16, i16* %77, i64 %155
  %159 = bitcast i16* %157 to <8 x i16>*
  %160 = load <8 x i16>, <8 x i16>* %159, align 2, !alias.scope !35
  %161 = getelementptr i16, i16* %157, i64 8
  %162 = bitcast i16* %161 to <8 x i16>*
  %163 = load <8 x i16>, <8 x i16>* %162, align 2, !alias.scope !35
  %164 = bitcast i16* %158 to <8 x i16>*
  store <8 x i16> %160, <8 x i16>* %164, align 2, !alias.scope !38, !noalias !35
  %165 = getelementptr i16, i16* %158, i64 8
  %166 = bitcast i16* %165 to <8 x i16>*
  store <8 x i16> %163, <8 x i16>* %166, align 2, !alias.scope !38, !noalias !35
  %167 = add i64 %155, 16
  %168 = add i64 %156, -1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %154, !llvm.loop !41

170:                                              ; preds = %154, %151
  %171 = icmp eq i64 %80, %91
  br i1 %171, label %225, label %172

172:                                              ; preds = %170, %84, %82
  %173 = phi i64 [ %80, %84 ], [ %80, %82 ], [ %92, %170 ]
  %174 = phi i16* [ %76, %84 ], [ %76, %82 ], [ %93, %170 ]
  %175 = phi i16* [ %77, %84 ], [ %77, %82 ], [ %94, %170 ]
  %176 = add i64 %173, -1
  %177 = and i64 %173, 7
  %178 = icmp eq i64 %177, 0
  br i1 %178, label %190, label %179

179:                                              ; preds = %172, %179
  %180 = phi i64 [ %185, %179 ], [ %173, %172 ]
  %181 = phi i16* [ %187, %179 ], [ %174, %172 ]
  %182 = phi i16* [ %186, %179 ], [ %175, %172 ]
  %183 = phi i64 [ %188, %179 ], [ %177, %172 ]
  %184 = load i16, i16* %181, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %180, -1
  %186 = getelementptr inbounds i16, i16* %182, i64 1
  %187 = getelementptr inbounds i16, i16* %181, i64 1
  %188 = add i64 %183, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %179, !llvm.loop !42

190:                                              ; preds = %179, %172
  %191 = phi i64 [ %173, %172 ], [ %185, %179 ]
  %192 = phi i16* [ %174, %172 ], [ %187, %179 ]
  %193 = phi i16* [ %175, %172 ], [ %186, %179 ]
  %194 = icmp ult i64 %176, 7
  br i1 %194, label %225, label %195

195:                                              ; preds = %190, %195
  %196 = phi i64 [ %221, %195 ], [ %191, %190 ]
  %197 = phi i16* [ %223, %195 ], [ %192, %190 ]
  %198 = phi i16* [ %222, %195 ], [ %193, %190 ]
  %199 = load i16, i16* %197, align 2
  store i16 %199, i16* %198, align 2
  %200 = getelementptr inbounds i16, i16* %198, i64 1
  %201 = getelementptr inbounds i16, i16* %197, i64 1
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %198, i64 2
  %204 = getelementptr inbounds i16, i16* %197, i64 2
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %198, i64 3
  %207 = getelementptr inbounds i16, i16* %197, i64 3
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %198, i64 4
  %210 = getelementptr inbounds i16, i16* %197, i64 4
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %198, i64 5
  %213 = getelementptr inbounds i16, i16* %197, i64 5
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = getelementptr inbounds i16, i16* %198, i64 6
  %216 = getelementptr inbounds i16, i16* %197, i64 6
  %217 = load i16, i16* %216, align 2
  store i16 %217, i16* %215, align 2
  %218 = getelementptr inbounds i16, i16* %198, i64 7
  %219 = getelementptr inbounds i16, i16* %197, i64 7
  %220 = load i16, i16* %219, align 2
  store i16 %220, i16* %218, align 2
  %221 = add i64 %196, -8
  %222 = getelementptr inbounds i16, i16* %198, i64 8
  %223 = getelementptr inbounds i16, i16* %197, i64 8
  %224 = icmp eq i64 %221, 0
  br i1 %224, label %225, label %195, !llvm.loop !43

225:                                              ; preds = %190, %195, %170, %73
  br i1 %75, label %226, label %227

226:                                              ; preds = %225
  tail call void @_ZdlPv(i8* %79) #14
  br label %227

227:                                              ; preds = %226, %225
  br i1 %74, label %228, label %234

228:                                              ; preds = %227
  %229 = add i64 %26, 1
  %230 = or i64 %229, -9223372036854775808
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %230, i64* %231, align 8
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %42, i64* %232, align 8
  %233 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i16* %77, i16** %233, align 8
  br label %236

234:                                              ; preds = %227
  %235 = trunc i64 %42 to i8
  store i8 %235, i8* %8, align 1
  br label %236

236:                                              ; preds = %234, %228, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE6insertINS2_11__wrap_iterIPS8_EEEEvT_SK_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", align 1
  %5 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %5, label %81, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %2
  %9 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  br i1 %8, label %10, label %13

10:                                               ; preds = %6
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %12 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::basic_string"* %11, %"class.std::__1::basic_string"* dereferenceable(24) %1, %"class.std::__1::basic_string"* dereferenceable(24) %1) #12
  br label %81

13:                                               ; preds = %6
  %14 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 24
  %20 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %21 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 %19
  br label %23

23:                                               ; preds = %13, %43
  %24 = phi %"class.std::__1::basic_string"* [ %22, %13 ], [ %48, %43 ]
  %25 = phi %"class.std::__1::basic_string"* [ %21, %13 ], [ %44, %43 ]
  %26 = phi %"class.std::__1::basic_string"* [ %1, %13 ], [ %46, %43 ]
  %27 = phi i64 [ %19, %13 ], [ %45, %43 ]
  %28 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE13append_uniqueIRS8_EENS2_4pairINS2_11__wrap_iterIPS8_EEbEESL_SL_OT_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::basic_string"* %25, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* dereferenceable(24) %26)
  %29 = extractvalue { %"class.std::__1::basic_string"*, i8 } %28, 1
  %30 = and i8 %29, 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %23
  %33 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  br label %43

34:                                               ; preds = %23
  %35 = extractvalue { %"class.std::__1::basic_string"*, i8 } %28, 0
  %36 = load i64, i64* %16, align 8
  %37 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %38 = sub i64 %37, %36
  %39 = sdiv exact i64 %38, 24
  %40 = icmp slt i64 %39, %27
  %41 = select i1 %40, i64 %39, i64 %27
  %42 = inttoptr i64 %36 to %"class.std::__1::basic_string"*
  br label %43

43:                                               ; preds = %32, %34
  %44 = phi %"class.std::__1::basic_string"* [ %33, %32 ], [ %42, %34 ]
  %45 = phi i64 [ %27, %32 ], [ %41, %34 ]
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %47 = icmp eq %"class.std::__1::basic_string"* %46, %2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %44, i64 %19
  br i1 %47, label %49, label %23

49:                                               ; preds = %43
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"* %50)
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 %45
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 %19
  %54 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %55 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %55)
  %56 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %57 = ptrtoint %"class.std::__1::basic_string"* %53 to i64
  %58 = sub i64 %57, %56
  %59 = sdiv exact i64 %58, 24
  %60 = ptrtoint %"class.std::__1::basic_string"* %54 to i64
  %61 = sub i64 %60, %57
  %62 = sdiv exact i64 %61, 24
  %63 = icmp slt i64 %62, %59
  %64 = select i1 %63, i64 %62, i64 %59
  %65 = icmp sgt i64 %64, 0
  br i1 %65, label %66, label %77

66:                                               ; preds = %49
  %67 = icmp slt i64 %64, 384307168202282325
  %68 = select i1 %67, i64 %64, i64 384307168202282325
  br label %69

69:                                               ; preds = %74, %66
  %70 = phi i64 [ %75, %74 ], [ %68, %66 ]
  %71 = mul i64 %70, 24
  %72 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %71, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %73 = icmp eq i8* %72, null
  br i1 %73, label %74, label %78

74:                                               ; preds = %69
  %75 = lshr i64 %70, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %69

77:                                               ; preds = %74, %49
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"* %53, %"class.std::__1::basic_string"* %54, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.std::__1::basic_string"* null, i64 0) #12
  br label %80

78:                                               ; preds = %69
  %79 = bitcast i8* %72 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"* %53, %"class.std::__1::basic_string"* %54, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %59, i64 %62, %"class.std::__1::basic_string"* nonnull %79, i64 %70) #12
  call void @_ZdlPv(i8* nonnull %72) #14
  br label %80

80:                                               ; preds = %77, %78
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %55)
  br label %81

81:                                               ; preds = %3, %80, %10
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE9__grow_byEmmmmmm(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64) local_unnamed_addr #0 comdat align 2 {
  %8 = sub i64 9223372036854775791, %1
  %9 = icmp ult i64 %8, %2
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %11) #13
  unreachable

12:                                               ; preds = %7
  %13 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i16*, i16** %18, align 8
  br label %22

20:                                               ; preds = %12
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %22

22:                                               ; preds = %17, %20
  %23 = phi i16* [ %19, %17 ], [ %21, %20 ]
  %24 = bitcast i16* %23 to i8*
  %25 = icmp ult i64 %1, 4611686018427387879
  br i1 %25, label %26, label %37

26:                                               ; preds = %22
  %27 = add i64 %2, %1
  %28 = shl i64 %1, 1
  %29 = icmp ult i64 %27, %28
  %30 = select i1 %29, i64 %28, i64 %27
  %31 = icmp ult i64 %30, 11
  br i1 %31, label %37, label %32

32:                                               ; preds = %26
  %33 = add i64 %30, 8
  %34 = and i64 %33, -8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @abort() #13
  unreachable

37:                                               ; preds = %22, %26, %32
  %38 = phi i64 [ %34, %32 ], [ 9223372036854775791, %22 ], [ 11, %26 ]
  %39 = shl i64 %38, 1
  %40 = tail call i8* @_Znwm(i64 %39) #14
  %41 = bitcast i8* %40 to i16*
  %42 = icmp eq i64 %4, 0
  br i1 %42, label %188, label %43

43:                                               ; preds = %37
  %44 = icmp ult i64 %4, 16
  br i1 %44, label %135, label %45

45:                                               ; preds = %43
  %46 = shl i64 %4, 1
  %47 = getelementptr i8, i8* %40, i64 %46
  %48 = getelementptr i16, i16* %23, i64 %4
  %49 = bitcast i16* %48 to i8*
  %50 = icmp ult i8* %40, %49
  %51 = icmp ugt i8* %47, %24
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %45
  %54 = and i64 %4, -16
  %55 = sub i64 %4, %54
  %56 = getelementptr i16, i16* %23, i64 %54
  %57 = getelementptr i16, i16* %41, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %23, i64 %66
  %69 = getelementptr i16, i16* %41, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !44
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !44
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !47, !noalias !44
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !47, !noalias !44
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %23, i64 %78
  %80 = getelementptr i16, i16* %41, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !44
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !44
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !47, !noalias !44
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !47, !noalias !44
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %23, i64 %89
  %91 = getelementptr i16, i16* %41, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !44
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !44
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !47, !noalias !44
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !47, !noalias !44
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %23, i64 %100
  %102 = getelementptr i16, i16* %41, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !44
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !44
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !47, !noalias !44
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !47, !noalias !44
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !49

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %23, i64 %118
  %121 = getelementptr i16, i16* %41, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !44
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !44
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !47, !noalias !44
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !47, !noalias !44
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !50

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %54, %4
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %45, %43
  %136 = phi i64 [ %4, %45 ], [ %4, %43 ], [ %55, %133 ]
  %137 = phi i16* [ %23, %45 ], [ %23, %43 ], [ %56, %133 ]
  %138 = phi i16* [ %41, %45 ], [ %41, %43 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !51

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !52

188:                                              ; preds = %153, %158, %133, %37
  %189 = sub i64 %3, %5
  %190 = sub i64 %189, %4
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %347, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds i16, i16* %41, i64 %4
  %194 = getelementptr inbounds i16, i16* %193, i64 %6
  %195 = getelementptr inbounds i16, i16* %23, i64 %4
  %196 = getelementptr inbounds i16, i16* %195, i64 %5
  %197 = icmp ult i64 %190, 16
  br i1 %197, label %294, label %198

198:                                              ; preds = %192
  %199 = bitcast i16* %196 to i8*
  %200 = add i64 %6, %4
  %201 = shl i64 %200, 1
  %202 = getelementptr i8, i8* %40, i64 %201
  %203 = add i64 %6, %3
  %204 = sub i64 %203, %5
  %205 = shl i64 %204, 1
  %206 = getelementptr i8, i8* %40, i64 %205
  %207 = getelementptr i16, i16* %23, i64 %3
  %208 = bitcast i16* %207 to i8*
  %209 = icmp ult i8* %202, %208
  %210 = icmp ugt i8* %206, %199
  %211 = and i1 %209, %210
  br i1 %211, label %294, label %212

212:                                              ; preds = %198
  %213 = and i64 %190, -16
  %214 = sub i64 %190, %213
  %215 = getelementptr i16, i16* %196, i64 %213
  %216 = getelementptr i16, i16* %194, i64 %213
  %217 = add i64 %213, -16
  %218 = lshr exact i64 %217, 4
  %219 = add nuw nsw i64 %218, 1
  %220 = and i64 %219, 3
  %221 = icmp ult i64 %217, 48
  br i1 %221, label %273, label %222

222:                                              ; preds = %212
  %223 = sub nsw i64 %219, %220
  br label %224

224:                                              ; preds = %224, %222
  %225 = phi i64 [ 0, %222 ], [ %270, %224 ]
  %226 = phi i64 [ %223, %222 ], [ %271, %224 ]
  %227 = getelementptr i16, i16* %196, i64 %225
  %228 = getelementptr i16, i16* %194, i64 %225
  %229 = bitcast i16* %227 to <8 x i16>*
  %230 = load <8 x i16>, <8 x i16>* %229, align 2, !alias.scope !53
  %231 = getelementptr i16, i16* %227, i64 8
  %232 = bitcast i16* %231 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !53
  %234 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %230, <8 x i16>* %234, align 2, !alias.scope !56, !noalias !53
  %235 = getelementptr i16, i16* %228, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %236, align 2, !alias.scope !56, !noalias !53
  %237 = or i64 %225, 16
  %238 = getelementptr i16, i16* %196, i64 %237
  %239 = getelementptr i16, i16* %194, i64 %237
  %240 = bitcast i16* %238 to <8 x i16>*
  %241 = load <8 x i16>, <8 x i16>* %240, align 2, !alias.scope !53
  %242 = getelementptr i16, i16* %238, i64 8
  %243 = bitcast i16* %242 to <8 x i16>*
  %244 = load <8 x i16>, <8 x i16>* %243, align 2, !alias.scope !53
  %245 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %241, <8 x i16>* %245, align 2, !alias.scope !56, !noalias !53
  %246 = getelementptr i16, i16* %239, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %244, <8 x i16>* %247, align 2, !alias.scope !56, !noalias !53
  %248 = or i64 %225, 32
  %249 = getelementptr i16, i16* %196, i64 %248
  %250 = getelementptr i16, i16* %194, i64 %248
  %251 = bitcast i16* %249 to <8 x i16>*
  %252 = load <8 x i16>, <8 x i16>* %251, align 2, !alias.scope !53
  %253 = getelementptr i16, i16* %249, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  %255 = load <8 x i16>, <8 x i16>* %254, align 2, !alias.scope !53
  %256 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %252, <8 x i16>* %256, align 2, !alias.scope !56, !noalias !53
  %257 = getelementptr i16, i16* %250, i64 8
  %258 = bitcast i16* %257 to <8 x i16>*
  store <8 x i16> %255, <8 x i16>* %258, align 2, !alias.scope !56, !noalias !53
  %259 = or i64 %225, 48
  %260 = getelementptr i16, i16* %196, i64 %259
  %261 = getelementptr i16, i16* %194, i64 %259
  %262 = bitcast i16* %260 to <8 x i16>*
  %263 = load <8 x i16>, <8 x i16>* %262, align 2, !alias.scope !53
  %264 = getelementptr i16, i16* %260, i64 8
  %265 = bitcast i16* %264 to <8 x i16>*
  %266 = load <8 x i16>, <8 x i16>* %265, align 2, !alias.scope !53
  %267 = bitcast i16* %261 to <8 x i16>*
  store <8 x i16> %263, <8 x i16>* %267, align 2, !alias.scope !56, !noalias !53
  %268 = getelementptr i16, i16* %261, i64 8
  %269 = bitcast i16* %268 to <8 x i16>*
  store <8 x i16> %266, <8 x i16>* %269, align 2, !alias.scope !56, !noalias !53
  %270 = add i64 %225, 64
  %271 = add i64 %226, -4
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %273, label %224, !llvm.loop !58

273:                                              ; preds = %224, %212
  %274 = phi i64 [ 0, %212 ], [ %270, %224 ]
  %275 = icmp eq i64 %220, 0
  br i1 %275, label %292, label %276

276:                                              ; preds = %273, %276
  %277 = phi i64 [ %289, %276 ], [ %274, %273 ]
  %278 = phi i64 [ %290, %276 ], [ %220, %273 ]
  %279 = getelementptr i16, i16* %196, i64 %277
  %280 = getelementptr i16, i16* %194, i64 %277
  %281 = bitcast i16* %279 to <8 x i16>*
  %282 = load <8 x i16>, <8 x i16>* %281, align 2, !alias.scope !53
  %283 = getelementptr i16, i16* %279, i64 8
  %284 = bitcast i16* %283 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !53
  %286 = bitcast i16* %280 to <8 x i16>*
  store <8 x i16> %282, <8 x i16>* %286, align 2, !alias.scope !56, !noalias !53
  %287 = getelementptr i16, i16* %280, i64 8
  %288 = bitcast i16* %287 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %288, align 2, !alias.scope !56, !noalias !53
  %289 = add i64 %277, 16
  %290 = add i64 %278, -1
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %292, label %276, !llvm.loop !59

292:                                              ; preds = %276, %273
  %293 = icmp eq i64 %190, %213
  br i1 %293, label %347, label %294

294:                                              ; preds = %292, %198, %192
  %295 = phi i64 [ %190, %198 ], [ %190, %192 ], [ %214, %292 ]
  %296 = phi i16* [ %196, %198 ], [ %196, %192 ], [ %215, %292 ]
  %297 = phi i16* [ %194, %198 ], [ %194, %192 ], [ %216, %292 ]
  %298 = add i64 %295, -1
  %299 = and i64 %295, 7
  %300 = icmp eq i64 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %294, %301
  %302 = phi i64 [ %307, %301 ], [ %295, %294 ]
  %303 = phi i16* [ %309, %301 ], [ %296, %294 ]
  %304 = phi i16* [ %308, %301 ], [ %297, %294 ]
  %305 = phi i64 [ %310, %301 ], [ %299, %294 ]
  %306 = load i16, i16* %303, align 2
  store i16 %306, i16* %304, align 2
  %307 = add i64 %302, -1
  %308 = getelementptr inbounds i16, i16* %304, i64 1
  %309 = getelementptr inbounds i16, i16* %303, i64 1
  %310 = add i64 %305, -1
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %312, label %301, !llvm.loop !60

312:                                              ; preds = %301, %294
  %313 = phi i64 [ %295, %294 ], [ %307, %301 ]
  %314 = phi i16* [ %296, %294 ], [ %309, %301 ]
  %315 = phi i16* [ %297, %294 ], [ %308, %301 ]
  %316 = icmp ult i64 %298, 7
  br i1 %316, label %347, label %317

317:                                              ; preds = %312, %317
  %318 = phi i64 [ %343, %317 ], [ %313, %312 ]
  %319 = phi i16* [ %345, %317 ], [ %314, %312 ]
  %320 = phi i16* [ %344, %317 ], [ %315, %312 ]
  %321 = load i16, i16* %319, align 2
  store i16 %321, i16* %320, align 2
  %322 = getelementptr inbounds i16, i16* %320, i64 1
  %323 = getelementptr inbounds i16, i16* %319, i64 1
  %324 = load i16, i16* %323, align 2
  store i16 %324, i16* %322, align 2
  %325 = getelementptr inbounds i16, i16* %320, i64 2
  %326 = getelementptr inbounds i16, i16* %319, i64 2
  %327 = load i16, i16* %326, align 2
  store i16 %327, i16* %325, align 2
  %328 = getelementptr inbounds i16, i16* %320, i64 3
  %329 = getelementptr inbounds i16, i16* %319, i64 3
  %330 = load i16, i16* %329, align 2
  store i16 %330, i16* %328, align 2
  %331 = getelementptr inbounds i16, i16* %320, i64 4
  %332 = getelementptr inbounds i16, i16* %319, i64 4
  %333 = load i16, i16* %332, align 2
  store i16 %333, i16* %331, align 2
  %334 = getelementptr inbounds i16, i16* %320, i64 5
  %335 = getelementptr inbounds i16, i16* %319, i64 5
  %336 = load i16, i16* %335, align 2
  store i16 %336, i16* %334, align 2
  %337 = getelementptr inbounds i16, i16* %320, i64 6
  %338 = getelementptr inbounds i16, i16* %319, i64 6
  %339 = load i16, i16* %338, align 2
  store i16 %339, i16* %337, align 2
  %340 = getelementptr inbounds i16, i16* %320, i64 7
  %341 = getelementptr inbounds i16, i16* %319, i64 7
  %342 = load i16, i16* %341, align 2
  store i16 %342, i16* %340, align 2
  %343 = add i64 %318, -8
  %344 = getelementptr inbounds i16, i16* %320, i64 8
  %345 = getelementptr inbounds i16, i16* %319, i64 8
  %346 = icmp eq i64 %343, 0
  br i1 %346, label %347, label %317, !llvm.loop !61

347:                                              ; preds = %312, %317, %292, %188
  %348 = icmp eq i64 %1, 10
  br i1 %348, label %350, label %349

349:                                              ; preds = %347
  tail call void @_ZdlPv(i8* %24) #14
  br label %350

350:                                              ; preds = %347, %349
  %351 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %40, i8** %351, align 8
  %352 = or i64 %38, -9223372036854775808
  %353 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %352, i64* %353, align 8
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRKN4base16BasicStringPieceIDsS3_EEEEEvDpOT_(%"class.std::__1::vector.52"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.52"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.52"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 0
  %38 = load i16*, i16** %37, align 8, !noalias !62
  %39 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %1, i64 0, i32 1
  %40 = load i64, i64* %39, align 8, !noalias !62
  %41 = icmp ugt i64 %40, 9223372036854775791
  br i1 %41, label %42, label %44

42:                                               ; preds = %31
  %43 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %43) #13
  unreachable

44:                                               ; preds = %31
  %45 = icmp ult i64 %40, 11
  br i1 %45, label %59, label %46

46:                                               ; preds = %44
  %47 = add nuw nsw i64 %40, 8
  %48 = and i64 %47, -8
  %49 = icmp slt i64 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

51:                                               ; preds = %46
  %52 = shl i64 %48, 1
  %53 = tail call i8* @_Znwm(i64 %52) #14
  %54 = bitcast i8* %53 to i16*
  %55 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %53, i8** %55, align 8, !alias.scope !62
  %56 = or i64 %48, -9223372036854775808
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %56, i64* %57, align 8, !alias.scope !62
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %40, i64* %58, align 8, !alias.scope !62
  br label %65

59:                                               ; preds = %44
  %60 = trunc i64 %40 to i8
  %61 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %61, i64 0, i32 1, i32 1
  store i8 %60, i8* %62, align 1, !alias.scope !62
  %63 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %64 = icmp eq i64 %40, 0
  br i1 %64, label %209, label %65

65:                                               ; preds = %59, %51
  %66 = phi i16* [ %54, %51 ], [ %63, %59 ]
  %67 = icmp ult i64 %40, 16
  br i1 %67, label %156, label %68

68:                                               ; preds = %65
  %69 = getelementptr i16, i16* %66, i64 %40
  %70 = getelementptr i16, i16* %38, i64 %40
  %71 = icmp ult i16* %66, %70
  %72 = icmp ult i16* %38, %69
  %73 = and i1 %71, %72
  br i1 %73, label %156, label %74

74:                                               ; preds = %68
  %75 = and i64 %40, -16
  %76 = sub i64 %40, %75
  %77 = getelementptr i16, i16* %38, i64 %75
  %78 = getelementptr i16, i16* %66, i64 %75
  %79 = add i64 %75, -16
  %80 = lshr exact i64 %79, 4
  %81 = add nuw nsw i64 %80, 1
  %82 = and i64 %81, 3
  %83 = icmp ult i64 %79, 48
  br i1 %83, label %135, label %84

84:                                               ; preds = %74
  %85 = sub nsw i64 %81, %82
  br label %86

86:                                               ; preds = %86, %84
  %87 = phi i64 [ 0, %84 ], [ %132, %86 ]
  %88 = phi i64 [ %85, %84 ], [ %133, %86 ]
  %89 = getelementptr i16, i16* %38, i64 %87
  %90 = getelementptr i16, i16* %66, i64 %87
  %91 = bitcast i16* %89 to <8 x i16>*
  %92 = load <8 x i16>, <8 x i16>* %91, align 2, !alias.scope !65
  %93 = getelementptr i16, i16* %89, i64 8
  %94 = bitcast i16* %93 to <8 x i16>*
  %95 = load <8 x i16>, <8 x i16>* %94, align 2, !alias.scope !65
  %96 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %92, <8 x i16>* %96, align 2, !alias.scope !68, !noalias !65
  %97 = getelementptr i16, i16* %90, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  store <8 x i16> %95, <8 x i16>* %98, align 2, !alias.scope !68, !noalias !65
  %99 = or i64 %87, 16
  %100 = getelementptr i16, i16* %38, i64 %99
  %101 = getelementptr i16, i16* %66, i64 %99
  %102 = bitcast i16* %100 to <8 x i16>*
  %103 = load <8 x i16>, <8 x i16>* %102, align 2, !alias.scope !65
  %104 = getelementptr i16, i16* %100, i64 8
  %105 = bitcast i16* %104 to <8 x i16>*
  %106 = load <8 x i16>, <8 x i16>* %105, align 2, !alias.scope !65
  %107 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %103, <8 x i16>* %107, align 2, !alias.scope !68, !noalias !65
  %108 = getelementptr i16, i16* %101, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  store <8 x i16> %106, <8 x i16>* %109, align 2, !alias.scope !68, !noalias !65
  %110 = or i64 %87, 32
  %111 = getelementptr i16, i16* %38, i64 %110
  %112 = getelementptr i16, i16* %66, i64 %110
  %113 = bitcast i16* %111 to <8 x i16>*
  %114 = load <8 x i16>, <8 x i16>* %113, align 2, !alias.scope !65
  %115 = getelementptr i16, i16* %111, i64 8
  %116 = bitcast i16* %115 to <8 x i16>*
  %117 = load <8 x i16>, <8 x i16>* %116, align 2, !alias.scope !65
  %118 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %114, <8 x i16>* %118, align 2, !alias.scope !68, !noalias !65
  %119 = getelementptr i16, i16* %112, i64 8
  %120 = bitcast i16* %119 to <8 x i16>*
  store <8 x i16> %117, <8 x i16>* %120, align 2, !alias.scope !68, !noalias !65
  %121 = or i64 %87, 48
  %122 = getelementptr i16, i16* %38, i64 %121
  %123 = getelementptr i16, i16* %66, i64 %121
  %124 = bitcast i16* %122 to <8 x i16>*
  %125 = load <8 x i16>, <8 x i16>* %124, align 2, !alias.scope !65
  %126 = getelementptr i16, i16* %122, i64 8
  %127 = bitcast i16* %126 to <8 x i16>*
  %128 = load <8 x i16>, <8 x i16>* %127, align 2, !alias.scope !65
  %129 = bitcast i16* %123 to <8 x i16>*
  store <8 x i16> %125, <8 x i16>* %129, align 2, !alias.scope !68, !noalias !65
  %130 = getelementptr i16, i16* %123, i64 8
  %131 = bitcast i16* %130 to <8 x i16>*
  store <8 x i16> %128, <8 x i16>* %131, align 2, !alias.scope !68, !noalias !65
  %132 = add i64 %87, 64
  %133 = add i64 %88, -4
  %134 = icmp eq i64 %133, 0
  br i1 %134, label %135, label %86, !llvm.loop !70

135:                                              ; preds = %86, %74
  %136 = phi i64 [ 0, %74 ], [ %132, %86 ]
  %137 = icmp eq i64 %82, 0
  br i1 %137, label %154, label %138

138:                                              ; preds = %135, %138
  %139 = phi i64 [ %151, %138 ], [ %136, %135 ]
  %140 = phi i64 [ %152, %138 ], [ %82, %135 ]
  %141 = getelementptr i16, i16* %38, i64 %139
  %142 = getelementptr i16, i16* %66, i64 %139
  %143 = bitcast i16* %141 to <8 x i16>*
  %144 = load <8 x i16>, <8 x i16>* %143, align 2, !alias.scope !65
  %145 = getelementptr i16, i16* %141, i64 8
  %146 = bitcast i16* %145 to <8 x i16>*
  %147 = load <8 x i16>, <8 x i16>* %146, align 2, !alias.scope !65
  %148 = bitcast i16* %142 to <8 x i16>*
  store <8 x i16> %144, <8 x i16>* %148, align 2, !alias.scope !68, !noalias !65
  %149 = getelementptr i16, i16* %142, i64 8
  %150 = bitcast i16* %149 to <8 x i16>*
  store <8 x i16> %147, <8 x i16>* %150, align 2, !alias.scope !68, !noalias !65
  %151 = add i64 %139, 16
  %152 = add i64 %140, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %138, !llvm.loop !71

154:                                              ; preds = %138, %135
  %155 = icmp eq i64 %40, %75
  br i1 %155, label %209, label %156

156:                                              ; preds = %154, %68, %65
  %157 = phi i64 [ %40, %68 ], [ %40, %65 ], [ %76, %154 ]
  %158 = phi i16* [ %38, %68 ], [ %38, %65 ], [ %77, %154 ]
  %159 = phi i16* [ %66, %68 ], [ %66, %65 ], [ %78, %154 ]
  %160 = add i64 %157, -1
  %161 = and i64 %157, 7
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %156, %163
  %164 = phi i64 [ %169, %163 ], [ %157, %156 ]
  %165 = phi i16* [ %171, %163 ], [ %158, %156 ]
  %166 = phi i16* [ %170, %163 ], [ %159, %156 ]
  %167 = phi i64 [ %172, %163 ], [ %161, %156 ]
  %168 = load i16, i16* %165, align 2
  store i16 %168, i16* %166, align 2
  %169 = add i64 %164, -1
  %170 = getelementptr inbounds i16, i16* %166, i64 1
  %171 = getelementptr inbounds i16, i16* %165, i64 1
  %172 = add i64 %167, -1
  %173 = icmp eq i64 %172, 0
  br i1 %173, label %174, label %163, !llvm.loop !72

174:                                              ; preds = %163, %156
  %175 = phi i64 [ %157, %156 ], [ %169, %163 ]
  %176 = phi i16* [ %158, %156 ], [ %171, %163 ]
  %177 = phi i16* [ %159, %156 ], [ %170, %163 ]
  %178 = icmp ult i64 %160, 7
  br i1 %178, label %209, label %179

179:                                              ; preds = %174, %179
  %180 = phi i64 [ %205, %179 ], [ %175, %174 ]
  %181 = phi i16* [ %207, %179 ], [ %176, %174 ]
  %182 = phi i16* [ %206, %179 ], [ %177, %174 ]
  %183 = load i16, i16* %181, align 2
  store i16 %183, i16* %182, align 2
  %184 = getelementptr inbounds i16, i16* %182, i64 1
  %185 = getelementptr inbounds i16, i16* %181, i64 1
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %182, i64 2
  %188 = getelementptr inbounds i16, i16* %181, i64 2
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %182, i64 3
  %191 = getelementptr inbounds i16, i16* %181, i64 3
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %182, i64 4
  %194 = getelementptr inbounds i16, i16* %181, i64 4
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = getelementptr inbounds i16, i16* %182, i64 5
  %197 = getelementptr inbounds i16, i16* %181, i64 5
  %198 = load i16, i16* %197, align 2
  store i16 %198, i16* %196, align 2
  %199 = getelementptr inbounds i16, i16* %182, i64 6
  %200 = getelementptr inbounds i16, i16* %181, i64 6
  %201 = load i16, i16* %200, align 2
  store i16 %201, i16* %199, align 2
  %202 = getelementptr inbounds i16, i16* %182, i64 7
  %203 = getelementptr inbounds i16, i16* %181, i64 7
  %204 = load i16, i16* %203, align 2
  store i16 %204, i16* %202, align 2
  %205 = add i64 %180, -8
  %206 = getelementptr inbounds i16, i16* %182, i64 8
  %207 = getelementptr inbounds i16, i16* %181, i64 8
  %208 = icmp eq i64 %205, 0
  br i1 %208, label %209, label %179, !llvm.loop !73

209:                                              ; preds = %174, %179, %154, %59
  %210 = phi i16* [ %63, %59 ], [ %66, %154 ], [ %66, %179 ], [ %66, %174 ]
  %211 = getelementptr inbounds i16, i16* %210, i64 %40
  store i16 0, i16* %211, align 2
  %212 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %213 = ptrtoint %"class.std::__1::basic_string"* %212 to i64
  %214 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 0
  %215 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %214, align 8
  %216 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %217 = icmp eq %"class.std::__1::basic_string"* %216, %215
  br i1 %217, label %218, label %220

218:                                              ; preds = %209
  %219 = ptrtoint %"class.std::__1::basic_string"* %215 to i64
  br label %231

220:                                              ; preds = %209, %220
  %221 = phi %"class.std::__1::basic_string"* [ %223, %220 ], [ %34, %209 ]
  %222 = phi %"class.std::__1::basic_string"* [ %224, %220 ], [ %216, %209 ]
  %223 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 -1
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %222, i64 -1
  %225 = bitcast %"class.std::__1::basic_string"* %223 to i8*
  %226 = bitcast %"class.std::__1::basic_string"* %224 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %225, i8* align 8 %226, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %226, i8 0, i64 24, i1 false) #12
  %227 = icmp eq %"class.std::__1::basic_string"* %224, %215
  br i1 %227, label %228, label %220

228:                                              ; preds = %220
  %229 = load i64, i64* %6, align 8
  %230 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %231

231:                                              ; preds = %218, %228
  %232 = phi %"class.std::__1::basic_string"* [ %215, %218 ], [ %230, %228 ]
  %233 = phi %"class.std::__1::basic_string"* [ %34, %218 ], [ %223, %228 ]
  %234 = phi i64 [ %219, %218 ], [ %229, %228 ]
  %235 = ptrtoint %"class.std::__1::basic_string"* %233 to i64
  store i64 %235, i64* %6, align 8
  store i64 %213, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %236 = inttoptr i64 %234 to %"class.std::__1::basic_string"*
  %237 = icmp eq %"class.std::__1::basic_string"* %232, %236
  br i1 %237, label %250, label %238

238:                                              ; preds = %231, %248
  %239 = phi %"class.std::__1::basic_string"* [ %240, %248 ], [ %232, %231 ]
  %240 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %239, i64 -1
  %241 = bitcast %"class.std::__1::basic_string"* %240 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %242 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %241, i64 0, i32 1, i32 1
  %243 = load i8, i8* %242, align 1
  %244 = icmp slt i8 %243, 0
  br i1 %244, label %245, label %248

245:                                              ; preds = %238
  %246 = bitcast %"class.std::__1::basic_string"* %240 to i8**
  %247 = load i8*, i8** %246, align 8
  tail call void @_ZdlPv(i8* %247) #14
  br label %248

248:                                              ; preds = %245, %238
  %249 = icmp eq %"class.std::__1::basic_string"* %240, %236
  br i1 %249, label %250, label %238

250:                                              ; preds = %248, %231
  %251 = icmp eq i64 %234, 0
  br i1 %251, label %254, label %252

252:                                              ; preds = %250
  %253 = inttoptr i64 %234 to i8*
  tail call void @_ZdlPv(i8* %253) #14
  br label %254

254:                                              ; preds = %250, %252
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEE21__grow_by_and_replaceEmmmmmmPKDs(%"class.std::__1::basic_string"*, i64, i64, i64, i64, i64, i64, i16*) local_unnamed_addr #0 comdat align 2 {
  %9 = sub i64 9223372036854775790, %1
  %10 = icmp ult i64 %9, %2
  br i1 %10, label %11, label %13

11:                                               ; preds = %8
  %12 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %12) #13
  unreachable

13:                                               ; preds = %8
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  br label %23

21:                                               ; preds = %13
  %22 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  br label %23

23:                                               ; preds = %18, %21
  %24 = phi i16* [ %20, %18 ], [ %22, %21 ]
  %25 = bitcast i16* %24 to i8*
  %26 = icmp ult i64 %1, 4611686018427387879
  br i1 %26, label %27, label %38

27:                                               ; preds = %23
  %28 = add i64 %2, %1
  %29 = shl i64 %1, 1
  %30 = icmp ult i64 %28, %29
  %31 = select i1 %30, i64 %29, i64 %28
  %32 = icmp ult i64 %31, 11
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = add i64 %31, 8
  %35 = and i64 %34, -8
  %36 = icmp slt i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  tail call void @abort() #13
  unreachable

38:                                               ; preds = %23, %27, %33
  %39 = phi i64 [ %35, %33 ], [ 9223372036854775791, %23 ], [ 11, %27 ]
  %40 = shl i64 %39, 1
  %41 = tail call i8* @_Znwm(i64 %40) #14
  %42 = bitcast i8* %41 to i16*
  %43 = icmp eq i64 %4, 0
  br i1 %43, label %189, label %44

44:                                               ; preds = %38
  %45 = icmp ult i64 %4, 16
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = shl i64 %4, 1
  %48 = getelementptr i8, i8* %41, i64 %47
  %49 = getelementptr i16, i16* %24, i64 %4
  %50 = bitcast i16* %49 to i8*
  %51 = icmp ult i8* %41, %50
  %52 = icmp ugt i8* %48, %25
  %53 = and i1 %51, %52
  br i1 %53, label %136, label %54

54:                                               ; preds = %46
  %55 = and i64 %4, -16
  %56 = sub i64 %4, %55
  %57 = getelementptr i16, i16* %24, i64 %55
  %58 = getelementptr i16, i16* %42, i64 %55
  %59 = add i64 %55, -16
  %60 = lshr exact i64 %59, 4
  %61 = add nuw nsw i64 %60, 1
  %62 = and i64 %61, 3
  %63 = icmp ult i64 %59, 48
  br i1 %63, label %115, label %64

64:                                               ; preds = %54
  %65 = sub nsw i64 %61, %62
  br label %66

66:                                               ; preds = %66, %64
  %67 = phi i64 [ 0, %64 ], [ %112, %66 ]
  %68 = phi i64 [ %65, %64 ], [ %113, %66 ]
  %69 = getelementptr i16, i16* %24, i64 %67
  %70 = getelementptr i16, i16* %42, i64 %67
  %71 = bitcast i16* %69 to <8 x i16>*
  %72 = load <8 x i16>, <8 x i16>* %71, align 2, !alias.scope !74
  %73 = getelementptr i16, i16* %69, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  %75 = load <8 x i16>, <8 x i16>* %74, align 2, !alias.scope !74
  %76 = bitcast i16* %70 to <8 x i16>*
  store <8 x i16> %72, <8 x i16>* %76, align 2, !alias.scope !77, !noalias !74
  %77 = getelementptr i16, i16* %70, i64 8
  %78 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %75, <8 x i16>* %78, align 2, !alias.scope !77, !noalias !74
  %79 = or i64 %67, 16
  %80 = getelementptr i16, i16* %24, i64 %79
  %81 = getelementptr i16, i16* %42, i64 %79
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !74
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !74
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !77, !noalias !74
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !77, !noalias !74
  %90 = or i64 %67, 32
  %91 = getelementptr i16, i16* %24, i64 %90
  %92 = getelementptr i16, i16* %42, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !74
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !74
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !77, !noalias !74
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !77, !noalias !74
  %101 = or i64 %67, 48
  %102 = getelementptr i16, i16* %24, i64 %101
  %103 = getelementptr i16, i16* %42, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !74
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !74
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !77, !noalias !74
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !77, !noalias !74
  %112 = add i64 %67, 64
  %113 = add i64 %68, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %115, label %66, !llvm.loop !79

115:                                              ; preds = %66, %54
  %116 = phi i64 [ 0, %54 ], [ %112, %66 ]
  %117 = icmp eq i64 %62, 0
  br i1 %117, label %134, label %118

118:                                              ; preds = %115, %118
  %119 = phi i64 [ %131, %118 ], [ %116, %115 ]
  %120 = phi i64 [ %132, %118 ], [ %62, %115 ]
  %121 = getelementptr i16, i16* %24, i64 %119
  %122 = getelementptr i16, i16* %42, i64 %119
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !74
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !74
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !77, !noalias !74
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !77, !noalias !74
  %131 = add i64 %119, 16
  %132 = add i64 %120, -1
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %134, label %118, !llvm.loop !80

134:                                              ; preds = %118, %115
  %135 = icmp eq i64 %55, %4
  br i1 %135, label %189, label %136

136:                                              ; preds = %134, %46, %44
  %137 = phi i64 [ %4, %46 ], [ %4, %44 ], [ %56, %134 ]
  %138 = phi i16* [ %24, %46 ], [ %24, %44 ], [ %57, %134 ]
  %139 = phi i16* [ %42, %46 ], [ %42, %44 ], [ %58, %134 ]
  %140 = add i64 %137, -1
  %141 = and i64 %137, 7
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %154, label %143

143:                                              ; preds = %136, %143
  %144 = phi i64 [ %149, %143 ], [ %137, %136 ]
  %145 = phi i16* [ %151, %143 ], [ %138, %136 ]
  %146 = phi i16* [ %150, %143 ], [ %139, %136 ]
  %147 = phi i64 [ %152, %143 ], [ %141, %136 ]
  %148 = load i16, i16* %145, align 2
  store i16 %148, i16* %146, align 2
  %149 = add i64 %144, -1
  %150 = getelementptr inbounds i16, i16* %146, i64 1
  %151 = getelementptr inbounds i16, i16* %145, i64 1
  %152 = add i64 %147, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %143, !llvm.loop !81

154:                                              ; preds = %143, %136
  %155 = phi i64 [ %137, %136 ], [ %149, %143 ]
  %156 = phi i16* [ %138, %136 ], [ %151, %143 ]
  %157 = phi i16* [ %139, %136 ], [ %150, %143 ]
  %158 = icmp ult i64 %140, 7
  br i1 %158, label %189, label %159

159:                                              ; preds = %154, %159
  %160 = phi i64 [ %185, %159 ], [ %155, %154 ]
  %161 = phi i16* [ %187, %159 ], [ %156, %154 ]
  %162 = phi i16* [ %186, %159 ], [ %157, %154 ]
  %163 = load i16, i16* %161, align 2
  store i16 %163, i16* %162, align 2
  %164 = getelementptr inbounds i16, i16* %162, i64 1
  %165 = getelementptr inbounds i16, i16* %161, i64 1
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %162, i64 2
  %168 = getelementptr inbounds i16, i16* %161, i64 2
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %162, i64 3
  %171 = getelementptr inbounds i16, i16* %161, i64 3
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %162, i64 4
  %174 = getelementptr inbounds i16, i16* %161, i64 4
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = getelementptr inbounds i16, i16* %162, i64 5
  %177 = getelementptr inbounds i16, i16* %161, i64 5
  %178 = load i16, i16* %177, align 2
  store i16 %178, i16* %176, align 2
  %179 = getelementptr inbounds i16, i16* %162, i64 6
  %180 = getelementptr inbounds i16, i16* %161, i64 6
  %181 = load i16, i16* %180, align 2
  store i16 %181, i16* %179, align 2
  %182 = getelementptr inbounds i16, i16* %162, i64 7
  %183 = getelementptr inbounds i16, i16* %161, i64 7
  %184 = load i16, i16* %183, align 2
  store i16 %184, i16* %182, align 2
  %185 = add i64 %160, -8
  %186 = getelementptr inbounds i16, i16* %162, i64 8
  %187 = getelementptr inbounds i16, i16* %161, i64 8
  %188 = icmp eq i64 %185, 0
  br i1 %188, label %189, label %159, !llvm.loop !82

189:                                              ; preds = %154, %159, %134, %38
  %190 = icmp eq i64 %6, 0
  br i1 %190, label %289, label %191

191:                                              ; preds = %189
  %192 = getelementptr inbounds i16, i16* %42, i64 %4
  %193 = icmp ult i64 %6, 16
  br i1 %193, label %276, label %194

194:                                              ; preds = %191
  %195 = and i64 %6, -16
  %196 = sub i64 %6, %195
  %197 = getelementptr i16, i16* %7, i64 %195
  %198 = getelementptr i16, i16* %192, i64 %195
  %199 = add i64 %195, -16
  %200 = lshr exact i64 %199, 4
  %201 = add nuw nsw i64 %200, 1
  %202 = and i64 %201, 3
  %203 = icmp ult i64 %199, 48
  br i1 %203, label %255, label %204

204:                                              ; preds = %194
  %205 = sub nsw i64 %201, %202
  br label %206

206:                                              ; preds = %206, %204
  %207 = phi i64 [ 0, %204 ], [ %252, %206 ]
  %208 = phi i64 [ %205, %204 ], [ %253, %206 ]
  %209 = getelementptr i16, i16* %7, i64 %207
  %210 = getelementptr i16, i16* %192, i64 %207
  %211 = bitcast i16* %209 to <8 x i16>*
  %212 = load <8 x i16>, <8 x i16>* %211, align 2
  %213 = getelementptr i16, i16* %209, i64 8
  %214 = bitcast i16* %213 to <8 x i16>*
  %215 = load <8 x i16>, <8 x i16>* %214, align 2
  %216 = bitcast i16* %210 to <8 x i16>*
  store <8 x i16> %212, <8 x i16>* %216, align 2
  %217 = getelementptr i16, i16* %210, i64 8
  %218 = bitcast i16* %217 to <8 x i16>*
  store <8 x i16> %215, <8 x i16>* %218, align 2
  %219 = or i64 %207, 16
  %220 = getelementptr i16, i16* %7, i64 %219
  %221 = getelementptr i16, i16* %192, i64 %219
  %222 = bitcast i16* %220 to <8 x i16>*
  %223 = load <8 x i16>, <8 x i16>* %222, align 2
  %224 = getelementptr i16, i16* %220, i64 8
  %225 = bitcast i16* %224 to <8 x i16>*
  %226 = load <8 x i16>, <8 x i16>* %225, align 2
  %227 = bitcast i16* %221 to <8 x i16>*
  store <8 x i16> %223, <8 x i16>* %227, align 2
  %228 = getelementptr i16, i16* %221, i64 8
  %229 = bitcast i16* %228 to <8 x i16>*
  store <8 x i16> %226, <8 x i16>* %229, align 2
  %230 = or i64 %207, 32
  %231 = getelementptr i16, i16* %7, i64 %230
  %232 = getelementptr i16, i16* %192, i64 %230
  %233 = bitcast i16* %231 to <8 x i16>*
  %234 = load <8 x i16>, <8 x i16>* %233, align 2
  %235 = getelementptr i16, i16* %231, i64 8
  %236 = bitcast i16* %235 to <8 x i16>*
  %237 = load <8 x i16>, <8 x i16>* %236, align 2
  %238 = bitcast i16* %232 to <8 x i16>*
  store <8 x i16> %234, <8 x i16>* %238, align 2
  %239 = getelementptr i16, i16* %232, i64 8
  %240 = bitcast i16* %239 to <8 x i16>*
  store <8 x i16> %237, <8 x i16>* %240, align 2
  %241 = or i64 %207, 48
  %242 = getelementptr i16, i16* %7, i64 %241
  %243 = getelementptr i16, i16* %192, i64 %241
  %244 = bitcast i16* %242 to <8 x i16>*
  %245 = load <8 x i16>, <8 x i16>* %244, align 2
  %246 = getelementptr i16, i16* %242, i64 8
  %247 = bitcast i16* %246 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2
  %249 = bitcast i16* %243 to <8 x i16>*
  store <8 x i16> %245, <8 x i16>* %249, align 2
  %250 = getelementptr i16, i16* %243, i64 8
  %251 = bitcast i16* %250 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %251, align 2
  %252 = add i64 %207, 64
  %253 = add i64 %208, -4
  %254 = icmp eq i64 %253, 0
  br i1 %254, label %255, label %206, !llvm.loop !83

255:                                              ; preds = %206, %194
  %256 = phi i64 [ 0, %194 ], [ %252, %206 ]
  %257 = icmp eq i64 %202, 0
  br i1 %257, label %274, label %258

258:                                              ; preds = %255, %258
  %259 = phi i64 [ %271, %258 ], [ %256, %255 ]
  %260 = phi i64 [ %272, %258 ], [ %202, %255 ]
  %261 = getelementptr i16, i16* %7, i64 %259
  %262 = getelementptr i16, i16* %192, i64 %259
  %263 = bitcast i16* %261 to <8 x i16>*
  %264 = load <8 x i16>, <8 x i16>* %263, align 2
  %265 = getelementptr i16, i16* %261, i64 8
  %266 = bitcast i16* %265 to <8 x i16>*
  %267 = load <8 x i16>, <8 x i16>* %266, align 2
  %268 = bitcast i16* %262 to <8 x i16>*
  store <8 x i16> %264, <8 x i16>* %268, align 2
  %269 = getelementptr i16, i16* %262, i64 8
  %270 = bitcast i16* %269 to <8 x i16>*
  store <8 x i16> %267, <8 x i16>* %270, align 2
  %271 = add i64 %259, 16
  %272 = add i64 %260, -1
  %273 = icmp eq i64 %272, 0
  br i1 %273, label %274, label %258, !llvm.loop !84

274:                                              ; preds = %258, %255
  %275 = icmp eq i64 %195, %6
  br i1 %275, label %289, label %276

276:                                              ; preds = %274, %191
  %277 = phi i64 [ %6, %191 ], [ %196, %274 ]
  %278 = phi i16* [ %7, %191 ], [ %197, %274 ]
  %279 = phi i16* [ %192, %191 ], [ %198, %274 ]
  br label %280

280:                                              ; preds = %276, %280
  %281 = phi i64 [ %285, %280 ], [ %277, %276 ]
  %282 = phi i16* [ %287, %280 ], [ %278, %276 ]
  %283 = phi i16* [ %286, %280 ], [ %279, %276 ]
  %284 = load i16, i16* %282, align 2
  store i16 %284, i16* %283, align 2
  %285 = add i64 %281, -1
  %286 = getelementptr inbounds i16, i16* %283, i64 1
  %287 = getelementptr inbounds i16, i16* %282, i64 1
  %288 = icmp eq i64 %285, 0
  br i1 %288, label %289, label %280, !llvm.loop !85

289:                                              ; preds = %280, %274, %189
  %290 = sub i64 %3, %5
  %291 = sub i64 %290, %4
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %448, label %293

293:                                              ; preds = %289
  %294 = getelementptr inbounds i16, i16* %42, i64 %4
  %295 = getelementptr inbounds i16, i16* %294, i64 %6
  %296 = getelementptr inbounds i16, i16* %24, i64 %4
  %297 = getelementptr inbounds i16, i16* %296, i64 %5
  %298 = icmp ult i64 %291, 16
  br i1 %298, label %395, label %299

299:                                              ; preds = %293
  %300 = bitcast i16* %297 to i8*
  %301 = add i64 %6, %4
  %302 = shl i64 %301, 1
  %303 = getelementptr i8, i8* %41, i64 %302
  %304 = add i64 %6, %3
  %305 = sub i64 %304, %5
  %306 = shl i64 %305, 1
  %307 = getelementptr i8, i8* %41, i64 %306
  %308 = getelementptr i16, i16* %24, i64 %3
  %309 = bitcast i16* %308 to i8*
  %310 = icmp ult i8* %303, %309
  %311 = icmp ugt i8* %307, %300
  %312 = and i1 %310, %311
  br i1 %312, label %395, label %313

313:                                              ; preds = %299
  %314 = and i64 %291, -16
  %315 = sub i64 %291, %314
  %316 = getelementptr i16, i16* %297, i64 %314
  %317 = getelementptr i16, i16* %295, i64 %314
  %318 = add i64 %314, -16
  %319 = lshr exact i64 %318, 4
  %320 = add nuw nsw i64 %319, 1
  %321 = and i64 %320, 3
  %322 = icmp ult i64 %318, 48
  br i1 %322, label %374, label %323

323:                                              ; preds = %313
  %324 = sub nsw i64 %320, %321
  br label %325

325:                                              ; preds = %325, %323
  %326 = phi i64 [ 0, %323 ], [ %371, %325 ]
  %327 = phi i64 [ %324, %323 ], [ %372, %325 ]
  %328 = getelementptr i16, i16* %297, i64 %326
  %329 = getelementptr i16, i16* %295, i64 %326
  %330 = bitcast i16* %328 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !87
  %332 = getelementptr i16, i16* %328, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  %334 = load <8 x i16>, <8 x i16>* %333, align 2, !alias.scope !87
  %335 = bitcast i16* %329 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %335, align 2, !alias.scope !90, !noalias !87
  %336 = getelementptr i16, i16* %329, i64 8
  %337 = bitcast i16* %336 to <8 x i16>*
  store <8 x i16> %334, <8 x i16>* %337, align 2, !alias.scope !90, !noalias !87
  %338 = or i64 %326, 16
  %339 = getelementptr i16, i16* %297, i64 %338
  %340 = getelementptr i16, i16* %295, i64 %338
  %341 = bitcast i16* %339 to <8 x i16>*
  %342 = load <8 x i16>, <8 x i16>* %341, align 2, !alias.scope !87
  %343 = getelementptr i16, i16* %339, i64 8
  %344 = bitcast i16* %343 to <8 x i16>*
  %345 = load <8 x i16>, <8 x i16>* %344, align 2, !alias.scope !87
  %346 = bitcast i16* %340 to <8 x i16>*
  store <8 x i16> %342, <8 x i16>* %346, align 2, !alias.scope !90, !noalias !87
  %347 = getelementptr i16, i16* %340, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  store <8 x i16> %345, <8 x i16>* %348, align 2, !alias.scope !90, !noalias !87
  %349 = or i64 %326, 32
  %350 = getelementptr i16, i16* %297, i64 %349
  %351 = getelementptr i16, i16* %295, i64 %349
  %352 = bitcast i16* %350 to <8 x i16>*
  %353 = load <8 x i16>, <8 x i16>* %352, align 2, !alias.scope !87
  %354 = getelementptr i16, i16* %350, i64 8
  %355 = bitcast i16* %354 to <8 x i16>*
  %356 = load <8 x i16>, <8 x i16>* %355, align 2, !alias.scope !87
  %357 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %353, <8 x i16>* %357, align 2, !alias.scope !90, !noalias !87
  %358 = getelementptr i16, i16* %351, i64 8
  %359 = bitcast i16* %358 to <8 x i16>*
  store <8 x i16> %356, <8 x i16>* %359, align 2, !alias.scope !90, !noalias !87
  %360 = or i64 %326, 48
  %361 = getelementptr i16, i16* %297, i64 %360
  %362 = getelementptr i16, i16* %295, i64 %360
  %363 = bitcast i16* %361 to <8 x i16>*
  %364 = load <8 x i16>, <8 x i16>* %363, align 2, !alias.scope !87
  %365 = getelementptr i16, i16* %361, i64 8
  %366 = bitcast i16* %365 to <8 x i16>*
  %367 = load <8 x i16>, <8 x i16>* %366, align 2, !alias.scope !87
  %368 = bitcast i16* %362 to <8 x i16>*
  store <8 x i16> %364, <8 x i16>* %368, align 2, !alias.scope !90, !noalias !87
  %369 = getelementptr i16, i16* %362, i64 8
  %370 = bitcast i16* %369 to <8 x i16>*
  store <8 x i16> %367, <8 x i16>* %370, align 2, !alias.scope !90, !noalias !87
  %371 = add i64 %326, 64
  %372 = add i64 %327, -4
  %373 = icmp eq i64 %372, 0
  br i1 %373, label %374, label %325, !llvm.loop !92

374:                                              ; preds = %325, %313
  %375 = phi i64 [ 0, %313 ], [ %371, %325 ]
  %376 = icmp eq i64 %321, 0
  br i1 %376, label %393, label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %390, %377 ], [ %375, %374 ]
  %379 = phi i64 [ %391, %377 ], [ %321, %374 ]
  %380 = getelementptr i16, i16* %297, i64 %378
  %381 = getelementptr i16, i16* %295, i64 %378
  %382 = bitcast i16* %380 to <8 x i16>*
  %383 = load <8 x i16>, <8 x i16>* %382, align 2, !alias.scope !87
  %384 = getelementptr i16, i16* %380, i64 8
  %385 = bitcast i16* %384 to <8 x i16>*
  %386 = load <8 x i16>, <8 x i16>* %385, align 2, !alias.scope !87
  %387 = bitcast i16* %381 to <8 x i16>*
  store <8 x i16> %383, <8 x i16>* %387, align 2, !alias.scope !90, !noalias !87
  %388 = getelementptr i16, i16* %381, i64 8
  %389 = bitcast i16* %388 to <8 x i16>*
  store <8 x i16> %386, <8 x i16>* %389, align 2, !alias.scope !90, !noalias !87
  %390 = add i64 %378, 16
  %391 = add i64 %379, -1
  %392 = icmp eq i64 %391, 0
  br i1 %392, label %393, label %377, !llvm.loop !93

393:                                              ; preds = %377, %374
  %394 = icmp eq i64 %291, %314
  br i1 %394, label %448, label %395

395:                                              ; preds = %393, %299, %293
  %396 = phi i64 [ %291, %299 ], [ %291, %293 ], [ %315, %393 ]
  %397 = phi i16* [ %297, %299 ], [ %297, %293 ], [ %316, %393 ]
  %398 = phi i16* [ %295, %299 ], [ %295, %293 ], [ %317, %393 ]
  %399 = add i64 %396, -1
  %400 = and i64 %396, 7
  %401 = icmp eq i64 %400, 0
  br i1 %401, label %413, label %402

402:                                              ; preds = %395, %402
  %403 = phi i64 [ %408, %402 ], [ %396, %395 ]
  %404 = phi i16* [ %410, %402 ], [ %397, %395 ]
  %405 = phi i16* [ %409, %402 ], [ %398, %395 ]
  %406 = phi i64 [ %411, %402 ], [ %400, %395 ]
  %407 = load i16, i16* %404, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %403, -1
  %409 = getelementptr inbounds i16, i16* %405, i64 1
  %410 = getelementptr inbounds i16, i16* %404, i64 1
  %411 = add i64 %406, -1
  %412 = icmp eq i64 %411, 0
  br i1 %412, label %413, label %402, !llvm.loop !94

413:                                              ; preds = %402, %395
  %414 = phi i64 [ %396, %395 ], [ %408, %402 ]
  %415 = phi i16* [ %397, %395 ], [ %410, %402 ]
  %416 = phi i16* [ %398, %395 ], [ %409, %402 ]
  %417 = icmp ult i64 %399, 7
  br i1 %417, label %448, label %418

418:                                              ; preds = %413, %418
  %419 = phi i64 [ %444, %418 ], [ %414, %413 ]
  %420 = phi i16* [ %446, %418 ], [ %415, %413 ]
  %421 = phi i16* [ %445, %418 ], [ %416, %413 ]
  %422 = load i16, i16* %420, align 2
  store i16 %422, i16* %421, align 2
  %423 = getelementptr inbounds i16, i16* %421, i64 1
  %424 = getelementptr inbounds i16, i16* %420, i64 1
  %425 = load i16, i16* %424, align 2
  store i16 %425, i16* %423, align 2
  %426 = getelementptr inbounds i16, i16* %421, i64 2
  %427 = getelementptr inbounds i16, i16* %420, i64 2
  %428 = load i16, i16* %427, align 2
  store i16 %428, i16* %426, align 2
  %429 = getelementptr inbounds i16, i16* %421, i64 3
  %430 = getelementptr inbounds i16, i16* %420, i64 3
  %431 = load i16, i16* %430, align 2
  store i16 %431, i16* %429, align 2
  %432 = getelementptr inbounds i16, i16* %421, i64 4
  %433 = getelementptr inbounds i16, i16* %420, i64 4
  %434 = load i16, i16* %433, align 2
  store i16 %434, i16* %432, align 2
  %435 = getelementptr inbounds i16, i16* %421, i64 5
  %436 = getelementptr inbounds i16, i16* %420, i64 5
  %437 = load i16, i16* %436, align 2
  store i16 %437, i16* %435, align 2
  %438 = getelementptr inbounds i16, i16* %421, i64 6
  %439 = getelementptr inbounds i16, i16* %420, i64 6
  %440 = load i16, i16* %439, align 2
  store i16 %440, i16* %438, align 2
  %441 = getelementptr inbounds i16, i16* %421, i64 7
  %442 = getelementptr inbounds i16, i16* %420, i64 7
  %443 = load i16, i16* %442, align 2
  store i16 %443, i16* %441, align 2
  %444 = add i64 %419, -8
  %445 = getelementptr inbounds i16, i16* %421, i64 8
  %446 = getelementptr inbounds i16, i16* %420, i64 8
  %447 = icmp eq i64 %444, 0
  br i1 %447, label %448, label %418, !llvm.loop !95

448:                                              ; preds = %413, %418, %393, %289
  %449 = icmp eq i64 %1, 10
  br i1 %449, label %451, label %450

450:                                              ; preds = %448
  tail call void @_ZdlPv(i8* %25) #14
  br label %451

451:                                              ; preds = %448, %450
  %452 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %41, i8** %452, align 8
  %453 = or i64 %39, -9223372036854775808
  %454 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %453, i64* %454, align 8
  %455 = add i64 %290, %6
  %456 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %455, i64* %456, align 8
  %457 = getelementptr inbounds i16, i16* %42, i64 %455
  store i16 0, i16* %457, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE13append_uniqueIRS8_EENS2_4pairINS2_11__wrap_iterIPS8_EEbEESL_SL_OT_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %7 = sub i64 %6, %5
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %70, label %9

9:                                                ; preds = %4
  %10 = sdiv exact i64 %7, 24
  %11 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i16*, i16** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %22 = select i1 %14, i16* %20, i16* %21
  br label %23

23:                                               ; preds = %64, %9
  %24 = phi %"class.std::__1::basic_string"* [ %1, %9 ], [ %66, %64 ]
  %25 = phi i64 [ %10, %9 ], [ %65, %64 ]
  %26 = lshr i64 %25, 1
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %26
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %28, i64 0, i32 1, i32 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 %26, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = zext i8 %30 to i64
  %35 = select i1 %31, i64 %33, i64 %34
  %36 = icmp ult i64 %18, %35
  %37 = select i1 %36, i64 %18, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %58, label %39

39:                                               ; preds = %23
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %27 to i16*
  %43 = select i1 %31, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %39
  %45 = phi i64 [ %54, %53 ], [ %37, %39 ]
  %46 = phi i16* [ %56, %53 ], [ %22, %39 ]
  %47 = phi i16* [ %55, %53 ], [ %43, %39 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %64, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %23
  %59 = icmp ult i64 %35, %18
  br i1 %59, label %60, label %64

60:                                               ; preds = %44, %58
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 1
  %62 = xor i64 %26, -1
  %63 = add i64 %25, %62
  br label %64

64:                                               ; preds = %51, %60, %58
  %65 = phi i64 [ %63, %60 ], [ %26, %58 ], [ %26, %51 ]
  %66 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %24, %58 ], [ %24, %51 ]
  %67 = icmp eq i64 %65, 0
  br i1 %67, label %68, label %23

68:                                               ; preds = %64
  %69 = ptrtoint %"class.std::__1::basic_string"* %66 to i64
  br label %70

70:                                               ; preds = %68, %4
  %71 = phi i64 [ %69, %68 ], [ %5, %4 ]
  %72 = phi %"class.std::__1::basic_string"* [ %66, %68 ], [ %1, %4 ]
  %73 = icmp eq %"class.std::__1::basic_string"* %72, %2
  br i1 %73, label %119, label %74

74:                                               ; preds = %70
  %75 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %77 to i64
  %82 = select i1 %78, i64 %80, i64 %81
  %83 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = icmp ult i64 %82, %90
  %92 = select i1 %91, i64 %82, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %117, label %94

94:                                               ; preds = %74
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = bitcast %"class.std::__1::basic_string"* %3 to i16*
  %98 = select i1 %86, i16* %96, i16* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %72 to i16*
  %102 = select i1 %78, i16* %100, i16* %101
  br label %103

103:                                              ; preds = %112, %94
  %104 = phi i64 [ %113, %112 ], [ %92, %94 ]
  %105 = phi i16* [ %115, %112 ], [ %102, %94 ]
  %106 = phi i16* [ %114, %112 ], [ %98, %94 ]
  %107 = load i16, i16* %106, align 2
  %108 = load i16, i16* %105, align 2
  %109 = icmp ult i16 %107, %108
  br i1 %109, label %119, label %110

110:                                              ; preds = %103
  %111 = icmp ult i16 %108, %107
  br i1 %111, label %323, label %112

112:                                              ; preds = %110
  %113 = add i64 %104, -1
  %114 = getelementptr inbounds i16, i16* %106, i64 1
  %115 = getelementptr inbounds i16, i16* %105, i64 1
  %116 = icmp eq i64 %113, 0
  br i1 %116, label %117, label %103

117:                                              ; preds = %112, %74
  %118 = icmp ult i64 %90, %82
  br i1 %118, label %119, label %323

119:                                              ; preds = %103, %70, %117
  %120 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.base::internal::flat_tree"* %0 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %71, %122
  %124 = sdiv exact i64 %123, 24
  %125 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %126 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %125, align 8
  %127 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %128 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %127, align 8
  %129 = icmp ult %"class.std::__1::basic_string"* %126, %128
  br i1 %129, label %130, label %317

130:                                              ; preds = %119
  %131 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %132 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %131, i64 0, i32 1, i32 1
  %133 = load i8, i8* %132, align 1
  %134 = icmp slt i8 %133, 0
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = bitcast %"class.std::__1::basic_string"* %126 to i8*
  %137 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 8 %137, i64 24, i1 false) #12
  br label %313

138:                                              ; preds = %130
  %139 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %140 = load i16*, i16** %139, align 8
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %142 = load i64, i64* %141, align 8
  %143 = icmp ult i64 %142, 11
  br i1 %143, label %144, label %149

144:                                              ; preds = %138
  %145 = bitcast %"class.std::__1::basic_string"* %126 to i16*
  %146 = trunc i64 %142 to i8
  %147 = bitcast %"class.std::__1::basic_string"* %126 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %147, i64 0, i32 1, i32 1
  store i8 %146, i8* %148, align 1
  br label %166

149:                                              ; preds = %138
  %150 = icmp ugt i64 %142, 9223372036854775791
  br i1 %150, label %151, label %153

151:                                              ; preds = %149
  %152 = bitcast %"class.std::__1::basic_string"* %126 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %152) #13
  unreachable

153:                                              ; preds = %149
  %154 = add nuw nsw i64 %142, 8
  %155 = and i64 %154, -8
  %156 = icmp slt i64 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %153
  tail call void @abort() #13
  unreachable

158:                                              ; preds = %153
  %159 = shl i64 %155, 1
  %160 = tail call i8* @_Znwm(i64 %159) #14
  %161 = bitcast i8* %160 to i16*
  %162 = bitcast %"class.std::__1::basic_string"* %126 to i8**
  store i8* %160, i8** %162, align 8
  %163 = or i64 %155, -9223372036854775808
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %142, i64* %165, align 8
  br label %166

166:                                              ; preds = %158, %144
  %167 = phi i16* [ %145, %144 ], [ %161, %158 ]
  %168 = add nuw nsw i64 %142, 1
  %169 = add i64 %142, 1
  %170 = icmp ult i64 %169, 16
  br i1 %170, label %260, label %171

171:                                              ; preds = %166
  %172 = add i64 %142, 1
  %173 = getelementptr i16, i16* %167, i64 %172
  %174 = getelementptr i16, i16* %140, i64 %172
  %175 = icmp ult i16* %167, %174
  %176 = icmp ult i16* %140, %173
  %177 = and i1 %175, %176
  br i1 %177, label %260, label %178

178:                                              ; preds = %171
  %179 = and i64 %169, -16
  %180 = sub i64 %168, %179
  %181 = getelementptr i16, i16* %140, i64 %179
  %182 = getelementptr i16, i16* %167, i64 %179
  %183 = add i64 %179, -16
  %184 = lshr exact i64 %183, 4
  %185 = add nuw nsw i64 %184, 1
  %186 = and i64 %185, 3
  %187 = icmp ult i64 %183, 48
  br i1 %187, label %239, label %188

188:                                              ; preds = %178
  %189 = sub nsw i64 %185, %186
  br label %190

190:                                              ; preds = %190, %188
  %191 = phi i64 [ 0, %188 ], [ %236, %190 ]
  %192 = phi i64 [ %189, %188 ], [ %237, %190 ]
  %193 = getelementptr i16, i16* %140, i64 %191
  %194 = getelementptr i16, i16* %167, i64 %191
  %195 = bitcast i16* %193 to <8 x i16>*
  %196 = load <8 x i16>, <8 x i16>* %195, align 2, !alias.scope !96
  %197 = getelementptr i16, i16* %193, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  %199 = load <8 x i16>, <8 x i16>* %198, align 2, !alias.scope !96
  %200 = bitcast i16* %194 to <8 x i16>*
  store <8 x i16> %196, <8 x i16>* %200, align 2, !alias.scope !99, !noalias !96
  %201 = getelementptr i16, i16* %194, i64 8
  %202 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %199, <8 x i16>* %202, align 2, !alias.scope !99, !noalias !96
  %203 = or i64 %191, 16
  %204 = getelementptr i16, i16* %140, i64 %203
  %205 = getelementptr i16, i16* %167, i64 %203
  %206 = bitcast i16* %204 to <8 x i16>*
  %207 = load <8 x i16>, <8 x i16>* %206, align 2, !alias.scope !96
  %208 = getelementptr i16, i16* %204, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  %210 = load <8 x i16>, <8 x i16>* %209, align 2, !alias.scope !96
  %211 = bitcast i16* %205 to <8 x i16>*
  store <8 x i16> %207, <8 x i16>* %211, align 2, !alias.scope !99, !noalias !96
  %212 = getelementptr i16, i16* %205, i64 8
  %213 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %210, <8 x i16>* %213, align 2, !alias.scope !99, !noalias !96
  %214 = or i64 %191, 32
  %215 = getelementptr i16, i16* %140, i64 %214
  %216 = getelementptr i16, i16* %167, i64 %214
  %217 = bitcast i16* %215 to <8 x i16>*
  %218 = load <8 x i16>, <8 x i16>* %217, align 2, !alias.scope !96
  %219 = getelementptr i16, i16* %215, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  %221 = load <8 x i16>, <8 x i16>* %220, align 2, !alias.scope !96
  %222 = bitcast i16* %216 to <8 x i16>*
  store <8 x i16> %218, <8 x i16>* %222, align 2, !alias.scope !99, !noalias !96
  %223 = getelementptr i16, i16* %216, i64 8
  %224 = bitcast i16* %223 to <8 x i16>*
  store <8 x i16> %221, <8 x i16>* %224, align 2, !alias.scope !99, !noalias !96
  %225 = or i64 %191, 48
  %226 = getelementptr i16, i16* %140, i64 %225
  %227 = getelementptr i16, i16* %167, i64 %225
  %228 = bitcast i16* %226 to <8 x i16>*
  %229 = load <8 x i16>, <8 x i16>* %228, align 2, !alias.scope !96
  %230 = getelementptr i16, i16* %226, i64 8
  %231 = bitcast i16* %230 to <8 x i16>*
  %232 = load <8 x i16>, <8 x i16>* %231, align 2, !alias.scope !96
  %233 = bitcast i16* %227 to <8 x i16>*
  store <8 x i16> %229, <8 x i16>* %233, align 2, !alias.scope !99, !noalias !96
  %234 = getelementptr i16, i16* %227, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  store <8 x i16> %232, <8 x i16>* %235, align 2, !alias.scope !99, !noalias !96
  %236 = add i64 %191, 64
  %237 = add i64 %192, -4
  %238 = icmp eq i64 %237, 0
  br i1 %238, label %239, label %190, !llvm.loop !101

239:                                              ; preds = %190, %178
  %240 = phi i64 [ 0, %178 ], [ %236, %190 ]
  %241 = icmp eq i64 %186, 0
  br i1 %241, label %258, label %242

242:                                              ; preds = %239, %242
  %243 = phi i64 [ %255, %242 ], [ %240, %239 ]
  %244 = phi i64 [ %256, %242 ], [ %186, %239 ]
  %245 = getelementptr i16, i16* %140, i64 %243
  %246 = getelementptr i16, i16* %167, i64 %243
  %247 = bitcast i16* %245 to <8 x i16>*
  %248 = load <8 x i16>, <8 x i16>* %247, align 2, !alias.scope !96
  %249 = getelementptr i16, i16* %245, i64 8
  %250 = bitcast i16* %249 to <8 x i16>*
  %251 = load <8 x i16>, <8 x i16>* %250, align 2, !alias.scope !96
  %252 = bitcast i16* %246 to <8 x i16>*
  store <8 x i16> %248, <8 x i16>* %252, align 2, !alias.scope !99, !noalias !96
  %253 = getelementptr i16, i16* %246, i64 8
  %254 = bitcast i16* %253 to <8 x i16>*
  store <8 x i16> %251, <8 x i16>* %254, align 2, !alias.scope !99, !noalias !96
  %255 = add i64 %243, 16
  %256 = add i64 %244, -1
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %242, !llvm.loop !102

258:                                              ; preds = %242, %239
  %259 = icmp eq i64 %169, %179
  br i1 %259, label %313, label %260

260:                                              ; preds = %258, %171, %166
  %261 = phi i64 [ %168, %171 ], [ %168, %166 ], [ %180, %258 ]
  %262 = phi i16* [ %140, %171 ], [ %140, %166 ], [ %181, %258 ]
  %263 = phi i16* [ %167, %171 ], [ %167, %166 ], [ %182, %258 ]
  %264 = add i64 %261, -1
  %265 = and i64 %261, 7
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %278, label %267

267:                                              ; preds = %260, %267
  %268 = phi i64 [ %273, %267 ], [ %261, %260 ]
  %269 = phi i16* [ %275, %267 ], [ %262, %260 ]
  %270 = phi i16* [ %274, %267 ], [ %263, %260 ]
  %271 = phi i64 [ %276, %267 ], [ %265, %260 ]
  %272 = load i16, i16* %269, align 2
  store i16 %272, i16* %270, align 2
  %273 = add i64 %268, -1
  %274 = getelementptr inbounds i16, i16* %270, i64 1
  %275 = getelementptr inbounds i16, i16* %269, i64 1
  %276 = add i64 %271, -1
  %277 = icmp eq i64 %276, 0
  br i1 %277, label %278, label %267, !llvm.loop !103

278:                                              ; preds = %267, %260
  %279 = phi i64 [ %261, %260 ], [ %273, %267 ]
  %280 = phi i16* [ %262, %260 ], [ %275, %267 ]
  %281 = phi i16* [ %263, %260 ], [ %274, %267 ]
  %282 = icmp ult i64 %264, 7
  br i1 %282, label %313, label %283

283:                                              ; preds = %278, %283
  %284 = phi i64 [ %309, %283 ], [ %279, %278 ]
  %285 = phi i16* [ %311, %283 ], [ %280, %278 ]
  %286 = phi i16* [ %310, %283 ], [ %281, %278 ]
  %287 = load i16, i16* %285, align 2
  store i16 %287, i16* %286, align 2
  %288 = getelementptr inbounds i16, i16* %286, i64 1
  %289 = getelementptr inbounds i16, i16* %285, i64 1
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = getelementptr inbounds i16, i16* %286, i64 2
  %292 = getelementptr inbounds i16, i16* %285, i64 2
  %293 = load i16, i16* %292, align 2
  store i16 %293, i16* %291, align 2
  %294 = getelementptr inbounds i16, i16* %286, i64 3
  %295 = getelementptr inbounds i16, i16* %285, i64 3
  %296 = load i16, i16* %295, align 2
  store i16 %296, i16* %294, align 2
  %297 = getelementptr inbounds i16, i16* %286, i64 4
  %298 = getelementptr inbounds i16, i16* %285, i64 4
  %299 = load i16, i16* %298, align 2
  store i16 %299, i16* %297, align 2
  %300 = getelementptr inbounds i16, i16* %286, i64 5
  %301 = getelementptr inbounds i16, i16* %285, i64 5
  %302 = load i16, i16* %301, align 2
  store i16 %302, i16* %300, align 2
  %303 = getelementptr inbounds i16, i16* %286, i64 6
  %304 = getelementptr inbounds i16, i16* %285, i64 6
  %305 = load i16, i16* %304, align 2
  store i16 %305, i16* %303, align 2
  %306 = getelementptr inbounds i16, i16* %286, i64 7
  %307 = getelementptr inbounds i16, i16* %285, i64 7
  %308 = load i16, i16* %307, align 2
  store i16 %308, i16* %306, align 2
  %309 = add i64 %284, -8
  %310 = getelementptr inbounds i16, i16* %286, i64 8
  %311 = getelementptr inbounds i16, i16* %285, i64 8
  %312 = icmp eq i64 %309, 0
  br i1 %312, label %313, label %283, !llvm.loop !104

313:                                              ; preds = %278, %283, %258, %135
  %314 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %126, i64 1
  %315 = ptrtoint %"class.std::__1::basic_string"* %314 to i64
  %316 = bitcast %"class.std::__1::basic_string"** %125 to i64*
  store i64 %315, i64* %316, align 8
  br label %319

317:                                              ; preds = %119
  %318 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  tail call void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRS6_EEEvDpOT_(%"class.std::__1::vector.52"* %318, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  br label %319

319:                                              ; preds = %313, %317
  %320 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %120, align 8
  %321 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %320, i64 %124
  %322 = ptrtoint %"class.std::__1::basic_string"* %321 to i64
  br label %323

323:                                              ; preds = %110, %117, %319
  %324 = phi i64 [ %322, %319 ], [ %71, %117 ], [ %71, %110 ]
  %325 = phi i8 [ 1, %319 ], [ 0, %117 ], [ 0, %110 ]
  %326 = inttoptr i64 %324 to %"class.std::__1::basic_string"*
  %327 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %326, 0
  %328 = insertvalue { %"class.std::__1::basic_string"*, i8 } %327, i8 %325, 1
  ret { %"class.std::__1::basic_string"*, i8 } %328
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", align 1
  %5 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #12
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* null, i64 0) #12
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* nonnull %24, i64 %15) #12
  call void @_ZdlPv(i8* nonnull %17) #14
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = call %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2)
  %27 = icmp eq %"class.std::__1::basic_string"* %26, %2
  br i1 %27, label %70, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %2
  br i1 %31, label %53, label %32

32:                                               ; preds = %28, %42
  %33 = phi %"class.std::__1::basic_string"* [ %49, %42 ], [ %26, %28 ]
  %34 = phi %"class.std::__1::basic_string"* [ %48, %42 ], [ %2, %28 ]
  %35 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %35, i64 0, i32 1, i32 1
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = bitcast %"class.std::__1::basic_string"* %33 to i8**
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #14
  br label %42

42:                                               ; preds = %39, %32
  %43 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #12
  %45 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %45, i64 0, i32 1, i32 1
  store i8 0, i8* %46, align 1
  %47 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  store i16 0, i16* %47, align 2
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %50 = icmp eq %"class.std::__1::basic_string"* %48, %30
  br i1 %50, label %51, label %32

51:                                               ; preds = %42
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  br label %53

53:                                               ; preds = %51, %28
  %54 = phi %"class.std::__1::basic_string"* [ %2, %28 ], [ %52, %51 ]
  %55 = phi %"class.std::__1::basic_string"* [ %26, %28 ], [ %49, %51 ]
  %56 = icmp eq %"class.std::__1::basic_string"* %54, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %53, %67
  %58 = phi %"class.std::__1::basic_string"* [ %59, %67 ], [ %54, %53 ]
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 -1
  %60 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %60, i64 0, i32 1, i32 1
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %57
  %65 = bitcast %"class.std::__1::basic_string"* %59 to i8**
  %66 = load i8*, i8** %65, align 8
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %64, %57
  %68 = icmp eq %"class.std::__1::basic_string"* %59, %55
  br i1 %68, label %69, label %57

69:                                               ; preds = %67, %53
  store %"class.std::__1::basic_string"* %55, %"class.std::__1::basic_string"** %29, align 8
  br label %70

70:                                               ; preds = %25, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE21emplace_hint_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEENSK_IPSH_EERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %6, %1
  br i1 %7, label %54, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %10 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %10, i64 0, i32 1, i32 1
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %12 to i64
  %17 = select i1 %13, i64 %15, i64 %16
  %18 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %18, i64 0, i32 1, i32 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp ult i64 %17, %25
  %27 = select i1 %26, i64 %17, i64 %25
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %52, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %33 = select i1 %21, i16* %31, i16* %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i16*, i16** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %37 = select i1 %13, i16* %35, i16* %36
  br label %38

38:                                               ; preds = %47, %29
  %39 = phi i64 [ %48, %47 ], [ %27, %29 ]
  %40 = phi i16* [ %50, %47 ], [ %37, %29 ]
  %41 = phi i16* [ %49, %47 ], [ %33, %29 ]
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %40, align 2
  %44 = icmp ult i16 %42, %43
  br i1 %44, label %54, label %45

45:                                               ; preds = %38
  %46 = icmp ult i16 %43, %42
  br i1 %46, label %131, label %47

47:                                               ; preds = %45
  %48 = add i64 %39, -1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = getelementptr inbounds i16, i16* %40, i64 1
  %51 = icmp eq i64 %48, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %47, %8
  %53 = icmp ult i64 %25, %17
  br i1 %53, label %54, label %131

54:                                               ; preds = %38, %4, %52
  %55 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %56 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %55, align 8
  %57 = icmp eq %"class.std::__1::basic_string"* %56, %1
  br i1 %57, label %103, label %58

58:                                               ; preds = %54
  %59 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %59, i64 0, i32 1, i32 1
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = load i64, i64* %63, align 8
  %65 = zext i8 %61 to i64
  %66 = select i1 %62, i64 %64, i64 %65
  %67 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %67, i64 0, i32 1, i32 1
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %69 to i64
  %74 = select i1 %70, i64 %72, i64 %73
  %75 = icmp ult i64 %66, %74
  %76 = select i1 %75, i64 %66, i64 %74
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %101, label %78

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i16*, i16** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %82 = select i1 %70, i16* %80, i16* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i16*, i16** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %86 = select i1 %62, i16* %84, i16* %85
  br label %87

87:                                               ; preds = %96, %78
  %88 = phi i64 [ %97, %96 ], [ %76, %78 ]
  %89 = phi i16* [ %99, %96 ], [ %86, %78 ]
  %90 = phi i16* [ %98, %96 ], [ %82, %78 ]
  %91 = load i16, i16* %90, align 2
  %92 = load i16, i16* %89, align 2
  %93 = icmp ult i16 %91, %92
  br i1 %93, label %103, label %94

94:                                               ; preds = %87
  %95 = icmp ult i16 %92, %91
  br i1 %95, label %106, label %96

96:                                               ; preds = %94
  %97 = add i64 %88, -1
  %98 = getelementptr inbounds i16, i16* %90, i64 1
  %99 = getelementptr inbounds i16, i16* %89, i64 1
  %100 = icmp eq i64 %97, 0
  br i1 %100, label %101, label %87

101:                                              ; preds = %96, %58
  %102 = icmp ult i64 %74, %66
  br i1 %102, label %103, label %106

103:                                              ; preds = %87, %54, %101
  %104 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %105 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.52"* %104, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* dereferenceable(24) %3) #12
  br label %135

106:                                              ; preds = %94, %101
  br i1 %77, label %130, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load i16*, i16** %108, align 8
  %110 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %111 = select i1 %62, i16* %109, i16* %110
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load i16*, i16** %112, align 8
  %114 = bitcast %"class.std::__1::basic_string"* %2 to i16*
  %115 = select i1 %70, i16* %113, i16* %114
  br label %116

116:                                              ; preds = %125, %107
  %117 = phi i64 [ %126, %125 ], [ %76, %107 ]
  %118 = phi i16* [ %128, %125 ], [ %115, %107 ]
  %119 = phi i16* [ %127, %125 ], [ %111, %107 ]
  %120 = load i16, i16* %119, align 2
  %121 = load i16, i16* %118, align 2
  %122 = icmp ult i16 %120, %121
  br i1 %122, label %131, label %123

123:                                              ; preds = %116
  %124 = icmp ult i16 %121, %120
  br i1 %124, label %135, label %125

125:                                              ; preds = %123
  %126 = add i64 %117, -1
  %127 = getelementptr inbounds i16, i16* %119, i64 1
  %128 = getelementptr inbounds i16, i16* %118, i64 1
  %129 = icmp eq i64 %126, 0
  br i1 %129, label %130, label %116

130:                                              ; preds = %125, %106
  br i1 %75, label %131, label %135

131:                                              ; preds = %45, %116, %130, %52
  %132 = tail call { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %2, %"class.std::__1::basic_string"* dereferenceable(24) %3)
  %133 = extractvalue { %"class.std::__1::basic_string"*, i8 } %132, 0
  %134 = extractvalue { %"class.std::__1::basic_string"*, i8 } %132, 1
  br label %135

135:                                              ; preds = %123, %130, %131, %103
  %136 = phi %"class.std::__1::basic_string"* [ %105, %103 ], [ %133, %131 ], [ %1, %130 ], [ %1, %123 ]
  %137 = phi i8 [ 1, %103 ], [ %134, %131 ], [ 0, %130 ], [ 0, %123 ]
  %138 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %136, 0
  %139 = insertvalue { %"class.std::__1::basic_string"*, i8 } %138, i8 %137, 1
  ret { %"class.std::__1::basic_string"*, i8 } %139
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, i8 } @_ZN4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE16emplace_key_argsIS8_JRKS8_EEENS2_4pairINS2_11__wrap_iterIPS8_EEbEERKT_DpOT0_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = ptrtoint %"class.std::__1::basic_string"* %5 to i64
  %10 = sub i64 %8, %9
  %11 = icmp eq i64 %10, 0
  %12 = inttoptr i64 %8 to %"class.std::__1::basic_string"*
  br i1 %11, label %74, label %13

13:                                               ; preds = %3
  %14 = sdiv exact i64 %10, 24
  %15 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i16*, i16** %23, align 8
  %25 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %26 = select i1 %18, i16* %24, i16* %25
  br label %27

27:                                               ; preds = %68, %13
  %28 = phi %"class.std::__1::basic_string"* [ %5, %13 ], [ %70, %68 ]
  %29 = phi i64 [ %14, %13 ], [ %69, %68 ]
  %30 = lshr i64 %29, 1
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30
  %32 = bitcast %"class.std::__1::basic_string"* %31 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 %30, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = icmp ult i64 %22, %39
  %41 = select i1 %40, i64 %22, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %62, label %43

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i16*, i16** %44, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %31 to i16*
  %47 = select i1 %35, i16* %45, i16* %46
  br label %48

48:                                               ; preds = %57, %43
  %49 = phi i64 [ %58, %57 ], [ %41, %43 ]
  %50 = phi i16* [ %60, %57 ], [ %26, %43 ]
  %51 = phi i16* [ %59, %57 ], [ %47, %43 ]
  %52 = load i16, i16* %51, align 2
  %53 = load i16, i16* %50, align 2
  %54 = icmp ult i16 %52, %53
  br i1 %54, label %64, label %55

55:                                               ; preds = %48
  %56 = icmp ult i16 %53, %52
  br i1 %56, label %68, label %57

57:                                               ; preds = %55
  %58 = add i64 %49, -1
  %59 = getelementptr inbounds i16, i16* %51, i64 1
  %60 = getelementptr inbounds i16, i16* %50, i64 1
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %62, label %48

62:                                               ; preds = %57, %27
  %63 = icmp ult i64 %39, %22
  br i1 %63, label %64, label %68

64:                                               ; preds = %48, %62
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %31, i64 1
  %66 = xor i64 %30, -1
  %67 = add i64 %29, %66
  br label %68

68:                                               ; preds = %55, %64, %62
  %69 = phi i64 [ %67, %64 ], [ %30, %62 ], [ %30, %55 ]
  %70 = phi %"class.std::__1::basic_string"* [ %65, %64 ], [ %28, %62 ], [ %28, %55 ]
  %71 = icmp eq i64 %69, 0
  br i1 %71, label %72, label %27

72:                                               ; preds = %68
  %73 = ptrtoint %"class.std::__1::basic_string"* %70 to i64
  br label %74

74:                                               ; preds = %72, %3
  %75 = phi i64 [ %73, %72 ], [ %9, %3 ]
  %76 = phi %"class.std::__1::basic_string"* [ %70, %72 ], [ %5, %3 ]
  %77 = icmp eq %"class.std::__1::basic_string"* %76, %12
  br i1 %77, label %123, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.std::__1::basic_string"* %76 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %79, i64 0, i32 1, i32 1
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = zext i8 %81 to i64
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %87, i64 0, i32 1, i32 1
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8
  %93 = zext i8 %89 to i64
  %94 = select i1 %90, i64 %92, i64 %93
  %95 = icmp ult i64 %86, %94
  %96 = select i1 %95, i64 %86, i64 %94
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %121, label %98

98:                                               ; preds = %78
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %102 = select i1 %90, i16* %100, i16* %101
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i16*, i16** %103, align 8
  %105 = bitcast %"class.std::__1::basic_string"* %76 to i16*
  %106 = select i1 %82, i16* %104, i16* %105
  br label %107

107:                                              ; preds = %116, %98
  %108 = phi i64 [ %117, %116 ], [ %96, %98 ]
  %109 = phi i16* [ %119, %116 ], [ %106, %98 ]
  %110 = phi i16* [ %118, %116 ], [ %102, %98 ]
  %111 = load i16, i16* %110, align 2
  %112 = load i16, i16* %109, align 2
  %113 = icmp ult i16 %111, %112
  br i1 %113, label %123, label %114

114:                                              ; preds = %107
  %115 = icmp ult i16 %112, %111
  br i1 %115, label %127, label %116

116:                                              ; preds = %114
  %117 = add i64 %108, -1
  %118 = getelementptr inbounds i16, i16* %110, i64 1
  %119 = getelementptr inbounds i16, i16* %109, i64 1
  %120 = icmp eq i64 %117, 0
  br i1 %120, label %121, label %107

121:                                              ; preds = %116, %78
  %122 = icmp ult i64 %94, %86
  br i1 %122, label %123, label %127

123:                                              ; preds = %107, %74, %121
  %124 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0
  %125 = tail call %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.52"* %124, %"class.std::__1::basic_string"* %76, %"class.std::__1::basic_string"* dereferenceable(24) %2) #12
  %126 = ptrtoint %"class.std::__1::basic_string"* %125 to i64
  br label %127

127:                                              ; preds = %114, %121, %123
  %128 = phi i64 [ %126, %123 ], [ %75, %121 ], [ %75, %114 ]
  %129 = phi i8 [ 1, %123 ], [ 0, %121 ], [ 0, %114 ]
  %130 = inttoptr i64 %128 to %"class.std::__1::basic_string"*
  %131 = insertvalue { %"class.std::__1::basic_string"*, i8 } undef, %"class.std::__1::basic_string"* %130, 0
  %132 = insertvalue { %"class.std::__1::basic_string"*, i8 } %131, i8 %129, 1
  ret { %"class.std::__1::basic_string"*, i8 } %132
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE7emplaceIJRKS6_EEENS_11__wrap_iterIPS6_EENSC_IPSA_EEDpOT_(%"class.std::__1::vector.52"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %5 = alloca %"struct.std::__1::__temp_value", align 8
  %6 = alloca %"struct.std::__1::__split_buffer.96", align 8
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = icmp ult %"class.std::__1::basic_string"* %10, %12
  %14 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  %15 = ptrtoint %"class.std::__1::basic_string"* %12 to i64
  br i1 %13, label %16, label %445

16:                                               ; preds = %3
  %17 = icmp eq %"class.std::__1::basic_string"* %10, %1
  br i1 %17, label %18, label %204

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %18
  %24 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %24, i64 24, i1 false) #12
  br label %200

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i16*, i16** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = icmp ult i64 %29, 11
  br i1 %30, label %31, label %36

31:                                               ; preds = %25
  %32 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %33 = trunc i64 %29 to i8
  %34 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %34, i64 0, i32 1, i32 1
  store i8 %33, i8* %35, align 1
  br label %53

36:                                               ; preds = %25
  %37 = icmp ugt i64 %29, 9223372036854775791
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = bitcast %"class.std::__1::basic_string"* %1 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %39) #13
  unreachable

40:                                               ; preds = %36
  %41 = add nuw nsw i64 %29, 8
  %42 = and i64 %41, -8
  %43 = icmp slt i64 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %40
  tail call void @abort() #13
  unreachable

45:                                               ; preds = %40
  %46 = shl i64 %42, 1
  %47 = tail call i8* @_Znwm(i64 %46) #14
  %48 = bitcast i8* %47 to i16*
  %49 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  store i8* %47, i8** %49, align 8
  %50 = or i64 %42, -9223372036854775808
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %29, i64* %52, align 8
  br label %53

53:                                               ; preds = %45, %31
  %54 = phi i16* [ %32, %31 ], [ %48, %45 ]
  %55 = add nuw nsw i64 %29, 1
  %56 = add i64 %29, 1
  %57 = icmp ult i64 %56, 16
  br i1 %57, label %147, label %58

58:                                               ; preds = %53
  %59 = add i64 %29, 1
  %60 = getelementptr i16, i16* %54, i64 %59
  %61 = getelementptr i16, i16* %27, i64 %59
  %62 = icmp ult i16* %54, %61
  %63 = icmp ult i16* %27, %60
  %64 = and i1 %62, %63
  br i1 %64, label %147, label %65

65:                                               ; preds = %58
  %66 = and i64 %56, -16
  %67 = sub i64 %55, %66
  %68 = getelementptr i16, i16* %27, i64 %66
  %69 = getelementptr i16, i16* %54, i64 %66
  %70 = add i64 %66, -16
  %71 = lshr exact i64 %70, 4
  %72 = add nuw nsw i64 %71, 1
  %73 = and i64 %72, 3
  %74 = icmp ult i64 %70, 48
  br i1 %74, label %126, label %75

75:                                               ; preds = %65
  %76 = sub nsw i64 %72, %73
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i64 [ 0, %75 ], [ %123, %77 ]
  %79 = phi i64 [ %76, %75 ], [ %124, %77 ]
  %80 = getelementptr i16, i16* %27, i64 %78
  %81 = getelementptr i16, i16* %54, i64 %78
  %82 = bitcast i16* %80 to <8 x i16>*
  %83 = load <8 x i16>, <8 x i16>* %82, align 2, !alias.scope !105
  %84 = getelementptr i16, i16* %80, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  %86 = load <8 x i16>, <8 x i16>* %85, align 2, !alias.scope !105
  %87 = bitcast i16* %81 to <8 x i16>*
  store <8 x i16> %83, <8 x i16>* %87, align 2, !alias.scope !108, !noalias !105
  %88 = getelementptr i16, i16* %81, i64 8
  %89 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %86, <8 x i16>* %89, align 2, !alias.scope !108, !noalias !105
  %90 = or i64 %78, 16
  %91 = getelementptr i16, i16* %27, i64 %90
  %92 = getelementptr i16, i16* %54, i64 %90
  %93 = bitcast i16* %91 to <8 x i16>*
  %94 = load <8 x i16>, <8 x i16>* %93, align 2, !alias.scope !105
  %95 = getelementptr i16, i16* %91, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  %97 = load <8 x i16>, <8 x i16>* %96, align 2, !alias.scope !105
  %98 = bitcast i16* %92 to <8 x i16>*
  store <8 x i16> %94, <8 x i16>* %98, align 2, !alias.scope !108, !noalias !105
  %99 = getelementptr i16, i16* %92, i64 8
  %100 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %97, <8 x i16>* %100, align 2, !alias.scope !108, !noalias !105
  %101 = or i64 %78, 32
  %102 = getelementptr i16, i16* %27, i64 %101
  %103 = getelementptr i16, i16* %54, i64 %101
  %104 = bitcast i16* %102 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !105
  %106 = getelementptr i16, i16* %102, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  %108 = load <8 x i16>, <8 x i16>* %107, align 2, !alias.scope !105
  %109 = bitcast i16* %103 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %109, align 2, !alias.scope !108, !noalias !105
  %110 = getelementptr i16, i16* %103, i64 8
  %111 = bitcast i16* %110 to <8 x i16>*
  store <8 x i16> %108, <8 x i16>* %111, align 2, !alias.scope !108, !noalias !105
  %112 = or i64 %78, 48
  %113 = getelementptr i16, i16* %27, i64 %112
  %114 = getelementptr i16, i16* %54, i64 %112
  %115 = bitcast i16* %113 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !105
  %117 = getelementptr i16, i16* %113, i64 8
  %118 = bitcast i16* %117 to <8 x i16>*
  %119 = load <8 x i16>, <8 x i16>* %118, align 2, !alias.scope !105
  %120 = bitcast i16* %114 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %120, align 2, !alias.scope !108, !noalias !105
  %121 = getelementptr i16, i16* %114, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %119, <8 x i16>* %122, align 2, !alias.scope !108, !noalias !105
  %123 = add i64 %78, 64
  %124 = add i64 %79, -4
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %77, !llvm.loop !110

126:                                              ; preds = %77, %65
  %127 = phi i64 [ 0, %65 ], [ %123, %77 ]
  %128 = icmp eq i64 %73, 0
  br i1 %128, label %145, label %129

129:                                              ; preds = %126, %129
  %130 = phi i64 [ %142, %129 ], [ %127, %126 ]
  %131 = phi i64 [ %143, %129 ], [ %73, %126 ]
  %132 = getelementptr i16, i16* %27, i64 %130
  %133 = getelementptr i16, i16* %54, i64 %130
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !105
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !105
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !108, !noalias !105
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !108, !noalias !105
  %142 = add i64 %130, 16
  %143 = add i64 %131, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %129, !llvm.loop !111

145:                                              ; preds = %129, %126
  %146 = icmp eq i64 %56, %66
  br i1 %146, label %200, label %147

147:                                              ; preds = %145, %58, %53
  %148 = phi i64 [ %55, %58 ], [ %55, %53 ], [ %67, %145 ]
  %149 = phi i16* [ %27, %58 ], [ %27, %53 ], [ %68, %145 ]
  %150 = phi i16* [ %54, %58 ], [ %54, %53 ], [ %69, %145 ]
  %151 = add i64 %148, -1
  %152 = and i64 %148, 7
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %165, label %154

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %160, %154 ], [ %148, %147 ]
  %156 = phi i16* [ %162, %154 ], [ %149, %147 ]
  %157 = phi i16* [ %161, %154 ], [ %150, %147 ]
  %158 = phi i64 [ %163, %154 ], [ %152, %147 ]
  %159 = load i16, i16* %156, align 2
  store i16 %159, i16* %157, align 2
  %160 = add i64 %155, -1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = getelementptr inbounds i16, i16* %156, i64 1
  %163 = add i64 %158, -1
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %165, label %154, !llvm.loop !112

165:                                              ; preds = %154, %147
  %166 = phi i64 [ %148, %147 ], [ %160, %154 ]
  %167 = phi i16* [ %149, %147 ], [ %162, %154 ]
  %168 = phi i16* [ %150, %147 ], [ %161, %154 ]
  %169 = icmp ult i64 %151, 7
  br i1 %169, label %200, label %170

170:                                              ; preds = %165, %170
  %171 = phi i64 [ %196, %170 ], [ %166, %165 ]
  %172 = phi i16* [ %198, %170 ], [ %167, %165 ]
  %173 = phi i16* [ %197, %170 ], [ %168, %165 ]
  %174 = load i16, i16* %172, align 2
  store i16 %174, i16* %173, align 2
  %175 = getelementptr inbounds i16, i16* %173, i64 1
  %176 = getelementptr inbounds i16, i16* %172, i64 1
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %173, i64 2
  %179 = getelementptr inbounds i16, i16* %172, i64 2
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %173, i64 3
  %182 = getelementptr inbounds i16, i16* %172, i64 3
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %173, i64 4
  %185 = getelementptr inbounds i16, i16* %172, i64 4
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = getelementptr inbounds i16, i16* %173, i64 5
  %188 = getelementptr inbounds i16, i16* %172, i64 5
  %189 = load i16, i16* %188, align 2
  store i16 %189, i16* %187, align 2
  %190 = getelementptr inbounds i16, i16* %173, i64 6
  %191 = getelementptr inbounds i16, i16* %172, i64 6
  %192 = load i16, i16* %191, align 2
  store i16 %192, i16* %190, align 2
  %193 = getelementptr inbounds i16, i16* %173, i64 7
  %194 = getelementptr inbounds i16, i16* %172, i64 7
  %195 = load i16, i16* %194, align 2
  store i16 %195, i16* %193, align 2
  %196 = add i64 %171, -8
  %197 = getelementptr inbounds i16, i16* %173, i64 8
  %198 = getelementptr inbounds i16, i16* %172, i64 8
  %199 = icmp eq i64 %196, 0
  br i1 %199, label %200, label %170, !llvm.loop !113

200:                                              ; preds = %165, %170, %145, %23
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %202 = ptrtoint %"class.std::__1::basic_string"* %201 to i64
  %203 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  store i64 %202, i64* %203, align 8
  br label %569

204:                                              ; preds = %16
  %205 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #12
  %206 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 8
  %207 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 16
  %208 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 0, i32 0, i64 23
  %209 = getelementptr inbounds %"struct.std::__1::__temp_value", %"struct.std::__1::__temp_value"* %5, i64 0, i32 1
  %210 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2
  %211 = bitcast %"class.std::__1::allocator.57"** %209 to %"class.std::__1::__compressed_pair.54"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 24, i1 false)
  store %"class.std::__1::__compressed_pair.54"* %210, %"class.std::__1::__compressed_pair.54"** %211, align 8
  %212 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %212, i64 0, i32 1, i32 1
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %218, label %216

216:                                              ; preds = %204
  %217 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %205, i8* align 8 %217, i64 24, i1 false) #12
  br label %394

218:                                              ; preds = %204
  %219 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i16*, i16** %219, align 8
  %221 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = icmp ult i64 %222, 11
  br i1 %223, label %224, label %227

224:                                              ; preds = %218
  %225 = bitcast %"struct.std::__1::__temp_value"* %5 to i16*
  %226 = trunc i64 %222 to i8
  store i8 %226, i8* %208, align 1
  br label %244

227:                                              ; preds = %218
  %228 = icmp ugt i64 %222, 9223372036854775791
  br i1 %228, label %229, label %231

229:                                              ; preds = %227
  %230 = bitcast %"struct.std::__1::__temp_value"* %5 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %230) #13
  unreachable

231:                                              ; preds = %227
  %232 = add nuw nsw i64 %222, 8
  %233 = and i64 %232, -8
  %234 = icmp slt i64 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %231
  tail call void @abort() #13
  unreachable

236:                                              ; preds = %231
  %237 = shl i64 %233, 1
  %238 = tail call i8* @_Znwm(i64 %237) #14
  %239 = bitcast i8* %238 to i16*
  %240 = bitcast %"struct.std::__1::__temp_value"* %5 to i8**
  store i8* %238, i8** %240, align 8
  %241 = or i64 %233, -9223372036854775808
  %242 = bitcast i8* %207 to i64*
  store i64 %241, i64* %242, align 8
  %243 = bitcast i8* %206 to i64*
  store i64 %222, i64* %243, align 8
  br label %244

244:                                              ; preds = %236, %224
  %245 = phi i16* [ %225, %224 ], [ %239, %236 ]
  %246 = add nuw nsw i64 %222, 1
  %247 = add i64 %222, 1
  %248 = icmp ult i64 %247, 16
  br i1 %248, label %338, label %249

249:                                              ; preds = %244
  %250 = add i64 %222, 1
  %251 = getelementptr i16, i16* %245, i64 %250
  %252 = getelementptr i16, i16* %220, i64 %250
  %253 = icmp ult i16* %245, %252
  %254 = icmp ult i16* %220, %251
  %255 = and i1 %253, %254
  br i1 %255, label %338, label %256

256:                                              ; preds = %249
  %257 = and i64 %247, -16
  %258 = sub i64 %246, %257
  %259 = getelementptr i16, i16* %220, i64 %257
  %260 = getelementptr i16, i16* %245, i64 %257
  %261 = add i64 %257, -16
  %262 = lshr exact i64 %261, 4
  %263 = add nuw nsw i64 %262, 1
  %264 = and i64 %263, 3
  %265 = icmp ult i64 %261, 48
  br i1 %265, label %317, label %266

266:                                              ; preds = %256
  %267 = sub nsw i64 %263, %264
  br label %268

268:                                              ; preds = %268, %266
  %269 = phi i64 [ 0, %266 ], [ %314, %268 ]
  %270 = phi i64 [ %267, %266 ], [ %315, %268 ]
  %271 = getelementptr i16, i16* %220, i64 %269
  %272 = getelementptr i16, i16* %245, i64 %269
  %273 = bitcast i16* %271 to <8 x i16>*
  %274 = load <8 x i16>, <8 x i16>* %273, align 2, !alias.scope !114
  %275 = getelementptr i16, i16* %271, i64 8
  %276 = bitcast i16* %275 to <8 x i16>*
  %277 = load <8 x i16>, <8 x i16>* %276, align 2, !alias.scope !114
  %278 = bitcast i16* %272 to <8 x i16>*
  store <8 x i16> %274, <8 x i16>* %278, align 2, !alias.scope !117, !noalias !114
  %279 = getelementptr i16, i16* %272, i64 8
  %280 = bitcast i16* %279 to <8 x i16>*
  store <8 x i16> %277, <8 x i16>* %280, align 2, !alias.scope !117, !noalias !114
  %281 = or i64 %269, 16
  %282 = getelementptr i16, i16* %220, i64 %281
  %283 = getelementptr i16, i16* %245, i64 %281
  %284 = bitcast i16* %282 to <8 x i16>*
  %285 = load <8 x i16>, <8 x i16>* %284, align 2, !alias.scope !114
  %286 = getelementptr i16, i16* %282, i64 8
  %287 = bitcast i16* %286 to <8 x i16>*
  %288 = load <8 x i16>, <8 x i16>* %287, align 2, !alias.scope !114
  %289 = bitcast i16* %283 to <8 x i16>*
  store <8 x i16> %285, <8 x i16>* %289, align 2, !alias.scope !117, !noalias !114
  %290 = getelementptr i16, i16* %283, i64 8
  %291 = bitcast i16* %290 to <8 x i16>*
  store <8 x i16> %288, <8 x i16>* %291, align 2, !alias.scope !117, !noalias !114
  %292 = or i64 %269, 32
  %293 = getelementptr i16, i16* %220, i64 %292
  %294 = getelementptr i16, i16* %245, i64 %292
  %295 = bitcast i16* %293 to <8 x i16>*
  %296 = load <8 x i16>, <8 x i16>* %295, align 2, !alias.scope !114
  %297 = getelementptr i16, i16* %293, i64 8
  %298 = bitcast i16* %297 to <8 x i16>*
  %299 = load <8 x i16>, <8 x i16>* %298, align 2, !alias.scope !114
  %300 = bitcast i16* %294 to <8 x i16>*
  store <8 x i16> %296, <8 x i16>* %300, align 2, !alias.scope !117, !noalias !114
  %301 = getelementptr i16, i16* %294, i64 8
  %302 = bitcast i16* %301 to <8 x i16>*
  store <8 x i16> %299, <8 x i16>* %302, align 2, !alias.scope !117, !noalias !114
  %303 = or i64 %269, 48
  %304 = getelementptr i16, i16* %220, i64 %303
  %305 = getelementptr i16, i16* %245, i64 %303
  %306 = bitcast i16* %304 to <8 x i16>*
  %307 = load <8 x i16>, <8 x i16>* %306, align 2, !alias.scope !114
  %308 = getelementptr i16, i16* %304, i64 8
  %309 = bitcast i16* %308 to <8 x i16>*
  %310 = load <8 x i16>, <8 x i16>* %309, align 2, !alias.scope !114
  %311 = bitcast i16* %305 to <8 x i16>*
  store <8 x i16> %307, <8 x i16>* %311, align 2, !alias.scope !117, !noalias !114
  %312 = getelementptr i16, i16* %305, i64 8
  %313 = bitcast i16* %312 to <8 x i16>*
  store <8 x i16> %310, <8 x i16>* %313, align 2, !alias.scope !117, !noalias !114
  %314 = add i64 %269, 64
  %315 = add i64 %270, -4
  %316 = icmp eq i64 %315, 0
  br i1 %316, label %317, label %268, !llvm.loop !119

317:                                              ; preds = %268, %256
  %318 = phi i64 [ 0, %256 ], [ %314, %268 ]
  %319 = icmp eq i64 %264, 0
  br i1 %319, label %336, label %320

320:                                              ; preds = %317, %320
  %321 = phi i64 [ %333, %320 ], [ %318, %317 ]
  %322 = phi i64 [ %334, %320 ], [ %264, %317 ]
  %323 = getelementptr i16, i16* %220, i64 %321
  %324 = getelementptr i16, i16* %245, i64 %321
  %325 = bitcast i16* %323 to <8 x i16>*
  %326 = load <8 x i16>, <8 x i16>* %325, align 2, !alias.scope !114
  %327 = getelementptr i16, i16* %323, i64 8
  %328 = bitcast i16* %327 to <8 x i16>*
  %329 = load <8 x i16>, <8 x i16>* %328, align 2, !alias.scope !114
  %330 = bitcast i16* %324 to <8 x i16>*
  store <8 x i16> %326, <8 x i16>* %330, align 2, !alias.scope !117, !noalias !114
  %331 = getelementptr i16, i16* %324, i64 8
  %332 = bitcast i16* %331 to <8 x i16>*
  store <8 x i16> %329, <8 x i16>* %332, align 2, !alias.scope !117, !noalias !114
  %333 = add i64 %321, 16
  %334 = add i64 %322, -1
  %335 = icmp eq i64 %334, 0
  br i1 %335, label %336, label %320, !llvm.loop !120

336:                                              ; preds = %320, %317
  %337 = icmp eq i64 %247, %257
  br i1 %337, label %391, label %338

338:                                              ; preds = %336, %249, %244
  %339 = phi i64 [ %246, %249 ], [ %246, %244 ], [ %258, %336 ]
  %340 = phi i16* [ %220, %249 ], [ %220, %244 ], [ %259, %336 ]
  %341 = phi i16* [ %245, %249 ], [ %245, %244 ], [ %260, %336 ]
  %342 = add i64 %339, -1
  %343 = and i64 %339, 7
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %338, %345
  %346 = phi i64 [ %351, %345 ], [ %339, %338 ]
  %347 = phi i16* [ %353, %345 ], [ %340, %338 ]
  %348 = phi i16* [ %352, %345 ], [ %341, %338 ]
  %349 = phi i64 [ %354, %345 ], [ %343, %338 ]
  %350 = load i16, i16* %347, align 2
  store i16 %350, i16* %348, align 2
  %351 = add i64 %346, -1
  %352 = getelementptr inbounds i16, i16* %348, i64 1
  %353 = getelementptr inbounds i16, i16* %347, i64 1
  %354 = add i64 %349, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !121

356:                                              ; preds = %345, %338
  %357 = phi i64 [ %339, %338 ], [ %351, %345 ]
  %358 = phi i16* [ %340, %338 ], [ %353, %345 ]
  %359 = phi i16* [ %341, %338 ], [ %352, %345 ]
  %360 = icmp ult i64 %342, 7
  br i1 %360, label %391, label %361

361:                                              ; preds = %356, %361
  %362 = phi i64 [ %387, %361 ], [ %357, %356 ]
  %363 = phi i16* [ %389, %361 ], [ %358, %356 ]
  %364 = phi i16* [ %388, %361 ], [ %359, %356 ]
  %365 = load i16, i16* %363, align 2
  store i16 %365, i16* %364, align 2
  %366 = getelementptr inbounds i16, i16* %364, i64 1
  %367 = getelementptr inbounds i16, i16* %363, i64 1
  %368 = load i16, i16* %367, align 2
  store i16 %368, i16* %366, align 2
  %369 = getelementptr inbounds i16, i16* %364, i64 2
  %370 = getelementptr inbounds i16, i16* %363, i64 2
  %371 = load i16, i16* %370, align 2
  store i16 %371, i16* %369, align 2
  %372 = getelementptr inbounds i16, i16* %364, i64 3
  %373 = getelementptr inbounds i16, i16* %363, i64 3
  %374 = load i16, i16* %373, align 2
  store i16 %374, i16* %372, align 2
  %375 = getelementptr inbounds i16, i16* %364, i64 4
  %376 = getelementptr inbounds i16, i16* %363, i64 4
  %377 = load i16, i16* %376, align 2
  store i16 %377, i16* %375, align 2
  %378 = getelementptr inbounds i16, i16* %364, i64 5
  %379 = getelementptr inbounds i16, i16* %363, i64 5
  %380 = load i16, i16* %379, align 2
  store i16 %380, i16* %378, align 2
  %381 = getelementptr inbounds i16, i16* %364, i64 6
  %382 = getelementptr inbounds i16, i16* %363, i64 6
  %383 = load i16, i16* %382, align 2
  store i16 %383, i16* %381, align 2
  %384 = getelementptr inbounds i16, i16* %364, i64 7
  %385 = getelementptr inbounds i16, i16* %363, i64 7
  %386 = load i16, i16* %385, align 2
  store i16 %386, i16* %384, align 2
  %387 = add i64 %362, -8
  %388 = getelementptr inbounds i16, i16* %364, i64 8
  %389 = getelementptr inbounds i16, i16* %363, i64 8
  %390 = icmp eq i64 %387, 0
  br i1 %390, label %391, label %361, !llvm.loop !122

391:                                              ; preds = %356, %361, %336
  %392 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %393 = ptrtoint %"class.std::__1::basic_string"* %392 to i64
  br label %394

394:                                              ; preds = %391, %216
  %395 = phi i64 [ %393, %391 ], [ %14, %216 ]
  %396 = phi %"class.std::__1::basic_string"* [ %392, %391 ], [ %10, %216 ]
  %397 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 1
  %398 = ptrtoint %"class.std::__1::basic_string"* %397 to i64
  %399 = sub i64 %395, %398
  %400 = sdiv exact i64 %399, 24
  %401 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %400
  %402 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %403 = icmp ult %"class.std::__1::basic_string"* %401, %396
  br i1 %403, label %428, label %406

404:                                              ; preds = %428
  %405 = ptrtoint %"class.std::__1::basic_string"* %434 to i64
  br label %406

406:                                              ; preds = %404, %394
  %407 = phi i64 [ %405, %404 ], [ %395, %394 ]
  store i64 %407, i64* %402, align 8
  %408 = icmp eq i64 %399, 0
  br i1 %408, label %436, label %409

409:                                              ; preds = %406, %421
  %410 = phi %"class.std::__1::basic_string"* [ %413, %421 ], [ %396, %406 ]
  %411 = phi %"class.std::__1::basic_string"* [ %412, %421 ], [ %401, %406 ]
  %412 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %411, i64 -1
  %413 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %410, i64 -1
  %414 = bitcast %"class.std::__1::basic_string"* %413 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %415 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %414, i64 0, i32 1, i32 1
  %416 = load i8, i8* %415, align 1
  %417 = icmp slt i8 %416, 0
  br i1 %417, label %418, label %421

418:                                              ; preds = %409
  %419 = bitcast %"class.std::__1::basic_string"* %413 to i8**
  %420 = load i8*, i8** %419, align 8
  tail call void @_ZdlPv(i8* %420) #14
  br label %421

421:                                              ; preds = %418, %409
  %422 = bitcast %"class.std::__1::basic_string"* %413 to i8*
  %423 = bitcast %"class.std::__1::basic_string"* %412 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %422, i8* align 8 %423, i64 24, i1 false) #12
  %424 = bitcast %"class.std::__1::basic_string"* %412 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %425 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %424, i64 0, i32 1, i32 1
  store i8 0, i8* %425, align 1
  %426 = bitcast %"class.std::__1::basic_string"* %412 to i16*
  store i16 0, i16* %426, align 2
  %427 = icmp eq %"class.std::__1::basic_string"* %412, %1
  br i1 %427, label %436, label %409

428:                                              ; preds = %394, %428
  %429 = phi %"class.std::__1::basic_string"* [ %434, %428 ], [ %396, %394 ]
  %430 = phi %"class.std::__1::basic_string"* [ %433, %428 ], [ %401, %394 ]
  %431 = bitcast %"class.std::__1::basic_string"* %429 to i8*
  %432 = bitcast %"class.std::__1::basic_string"* %430 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %432, i8 0, i64 24, i1 false) #12
  %433 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %430, i64 1
  %434 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %429, i64 1
  %435 = icmp ult %"class.std::__1::basic_string"* %433, %396
  br i1 %435, label %428, label %404

436:                                              ; preds = %421, %406
  %437 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %438 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %437, i64 0, i32 1, i32 1
  %439 = load i8, i8* %438, align 1
  %440 = icmp slt i8 %439, 0
  br i1 %440, label %441, label %444

441:                                              ; preds = %436
  %442 = bitcast %"class.std::__1::basic_string"* %1 to i8**
  %443 = load i8*, i8** %442, align 8
  tail call void @_ZdlPv(i8* %443) #14
  br label %444

444:                                              ; preds = %436, %441
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* nonnull align 8 %205, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #12
  br label %569

445:                                              ; preds = %3
  %446 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2
  %447 = bitcast %"struct.std::__1::__split_buffer.96"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %447) #12
  %448 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %6, i64 0, i32 0
  %449 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %6, i64 0, i32 1
  %450 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %6, i64 0, i32 2
  %451 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %6, i64 0, i32 3, i32 0, i32 0
  %452 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %6, i64 0, i32 3, i32 1, i32 0
  %453 = bitcast %"class.std::__1::basic_string"** %9 to i64*
  %454 = bitcast %"class.std::__1::vector.52"* %0 to i64*
  %455 = bitcast %"struct.std::__1::__split_buffer.96"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %455, i8 -86, i64 40, i1 false)
  %456 = load i64, i64* %454, align 8
  %457 = sub i64 %14, %456
  %458 = sdiv exact i64 %457, 24
  %459 = add nsw i64 %458, 1
  %460 = icmp ugt i64 %459, 768614336404564650
  br i1 %460, label %461, label %463

461:                                              ; preds = %445
  %462 = bitcast %"class.std::__1::vector.52"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %462) #13
  unreachable

463:                                              ; preds = %445
  %464 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %465 = sub i64 %15, %456
  %466 = sdiv exact i64 %465, 24
  %467 = icmp ult i64 %466, 384307168202282325
  br i1 %467, label %472, label %468

468:                                              ; preds = %463
  %469 = sub i64 %7, %456
  %470 = sdiv exact i64 %469, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %451, align 8
  %471 = bitcast %"class.std::__1::allocator.57"** %452 to %"class.std::__1::__compressed_pair.54"**
  store %"class.std::__1::__compressed_pair.54"* %446, %"class.std::__1::__compressed_pair.54"** %471, align 8
  br label %480

472:                                              ; preds = %463
  %473 = shl nsw i64 %466, 1
  %474 = icmp ult i64 %473, %459
  %475 = select i1 %474, i64 %459, i64 %473
  %476 = sub i64 %7, %456
  %477 = sdiv exact i64 %476, 24
  store %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"** %451, align 8
  %478 = bitcast %"class.std::__1::allocator.57"** %452 to %"class.std::__1::__compressed_pair.54"**
  store %"class.std::__1::__compressed_pair.54"* %446, %"class.std::__1::__compressed_pair.54"** %478, align 8
  %479 = icmp eq i64 %475, 0
  br i1 %479, label %486, label %480

480:                                              ; preds = %472, %468
  %481 = phi i64 [ %470, %468 ], [ %477, %472 ]
  %482 = phi i64 [ 768614336404564650, %468 ], [ %475, %472 ]
  %483 = mul i64 %482, 24
  %484 = tail call i8* @_Znwm(i64 %483) #14
  %485 = bitcast i8* %484 to %"class.std::__1::basic_string"*
  br label %486

486:                                              ; preds = %472, %480
  %487 = phi i64 [ %481, %480 ], [ %477, %472 ]
  %488 = phi i64 [ %482, %480 ], [ 0, %472 ]
  %489 = phi %"class.std::__1::basic_string"* [ %485, %480 ], [ null, %472 ]
  store %"class.std::__1::basic_string"* %489, %"class.std::__1::basic_string"** %448, align 8
  %490 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %489, i64 %487
  store %"class.std::__1::basic_string"* %490, %"class.std::__1::basic_string"** %450, align 8
  store %"class.std::__1::basic_string"* %490, %"class.std::__1::basic_string"** %449, align 8
  %491 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %489, i64 %488
  store %"class.std::__1::basic_string"* %491, %"class.std::__1::basic_string"** %451, align 8
  call void @_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.96"* nonnull %6, %"class.std::__1::basic_string"* dereferenceable(24) %2)
  %492 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %449, align 8
  %493 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %8, align 8
  %494 = icmp eq %"class.std::__1::basic_string"* %493, %1
  br i1 %494, label %505, label %495

495:                                              ; preds = %486, %495
  %496 = phi %"class.std::__1::basic_string"* [ %503, %495 ], [ %492, %486 ]
  %497 = phi %"class.std::__1::basic_string"* [ %499, %495 ], [ %1, %486 ]
  %498 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %496, i64 -1
  %499 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %497, i64 -1
  %500 = bitcast %"class.std::__1::basic_string"* %498 to i8*
  %501 = bitcast %"class.std::__1::basic_string"* %499 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %500, i8* align 8 %501, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %501, i8 0, i64 24, i1 false) #12
  %502 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %449, align 8
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %502, i64 -1
  store %"class.std::__1::basic_string"* %503, %"class.std::__1::basic_string"** %449, align 8
  %504 = icmp eq %"class.std::__1::basic_string"* %499, %493
  br i1 %504, label %505, label %495

505:                                              ; preds = %495, %486
  %506 = phi %"class.std::__1::basic_string"* [ %492, %486 ], [ %503, %495 ]
  %507 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %508 = icmp eq %"class.std::__1::basic_string"* %507, %1
  br i1 %508, label %509, label %515

509:                                              ; preds = %505
  %510 = ptrtoint %"class.std::__1::basic_string"* %507 to i64
  %511 = ptrtoint %"class.std::__1::basic_string"* %506 to i64
  %512 = bitcast %"class.std::__1::basic_string"** %449 to i64*
  %513 = bitcast %"class.std::__1::basic_string"** %450 to i64*
  %514 = load i64, i64* %513, align 8
  br label %533

515:                                              ; preds = %505
  %516 = bitcast %"class.std::__1::basic_string"** %450 to i8**
  %517 = load i8*, i8** %516, align 8
  br label %518

518:                                              ; preds = %518, %515
  %519 = phi i8* [ %517, %515 ], [ %526, %518 ]
  %520 = phi %"class.std::__1::basic_string"* [ %1, %515 ], [ %522, %518 ]
  %521 = bitcast %"class.std::__1::basic_string"* %520 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %519, i8* align 8 %521, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %521, i8 0, i64 24, i1 false) #12
  %522 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %520, i64 1
  %523 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %450, align 8
  %524 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %523, i64 1
  store %"class.std::__1::basic_string"* %524, %"class.std::__1::basic_string"** %450, align 8
  %525 = icmp eq %"class.std::__1::basic_string"* %522, %507
  %526 = bitcast %"class.std::__1::basic_string"* %524 to i8*
  br i1 %525, label %527, label %518

527:                                              ; preds = %518
  %528 = ptrtoint %"class.std::__1::basic_string"* %524 to i64
  %529 = bitcast %"class.std::__1::basic_string"** %449 to i64*
  %530 = load i64, i64* %529, align 8
  %531 = load i64, i64* %453, align 8
  %532 = bitcast %"class.std::__1::basic_string"** %450 to i64*
  br label %533

533:                                              ; preds = %509, %527
  %534 = phi i64* [ %513, %509 ], [ %532, %527 ]
  %535 = phi i64 [ %514, %509 ], [ %528, %527 ]
  %536 = phi i64 [ %510, %509 ], [ %531, %527 ]
  %537 = phi i64* [ %512, %509 ], [ %529, %527 ]
  %538 = phi i64 [ %511, %509 ], [ %530, %527 ]
  %539 = load i64, i64* %454, align 8
  store i64 %538, i64* %454, align 8
  store i64 %539, i64* %537, align 8
  store i64 %535, i64* %453, align 8
  store i64 %536, i64* %534, align 8
  %540 = load i64, i64* %464, align 8
  %541 = bitcast %"class.std::__1::basic_string"** %451 to i64*
  %542 = load i64, i64* %541, align 8
  store i64 %542, i64* %464, align 8
  store i64 %540, i64* %541, align 8
  %543 = bitcast %"struct.std::__1::__split_buffer.96"* %6 to i64*
  store i64 %539, i64* %543, align 8
  %544 = inttoptr i64 %539 to %"class.std::__1::basic_string"*
  %545 = inttoptr i64 %536 to %"class.std::__1::basic_string"*
  %546 = icmp eq %"class.std::__1::basic_string"* %545, %544
  br i1 %546, label %563, label %547

547:                                              ; preds = %533, %558
  %548 = phi %"class.std::__1::basic_string"* [ %559, %558 ], [ %545, %533 ]
  %549 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %548, i64 -1
  store %"class.std::__1::basic_string"* %549, %"class.std::__1::basic_string"** %450, align 8
  %550 = bitcast %"class.std::__1::basic_string"* %549 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %551 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %550, i64 0, i32 1, i32 1
  %552 = load i8, i8* %551, align 1
  %553 = icmp slt i8 %552, 0
  br i1 %553, label %554, label %558

554:                                              ; preds = %547
  %555 = bitcast %"class.std::__1::basic_string"* %549 to i8**
  %556 = load i8*, i8** %555, align 8
  call void @_ZdlPv(i8* %556) #14
  %557 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %450, align 8
  br label %558

558:                                              ; preds = %554, %547
  %559 = phi %"class.std::__1::basic_string"* [ %549, %547 ], [ %557, %554 ]
  %560 = icmp eq %"class.std::__1::basic_string"* %559, %544
  br i1 %560, label %561, label %547

561:                                              ; preds = %558
  %562 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %448, align 8
  br label %563

563:                                              ; preds = %561, %533
  %564 = phi %"class.std::__1::basic_string"* [ %562, %561 ], [ %544, %533 ]
  %565 = icmp eq %"class.std::__1::basic_string"* %564, null
  br i1 %565, label %568, label %566

566:                                              ; preds = %563
  %567 = bitcast %"class.std::__1::basic_string"* %564 to i8*
  call void @_ZdlPv(i8* %567) #14
  br label %568

568:                                              ; preds = %563, %566
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %447) #12
  br label %569

569:                                              ; preds = %200, %444, %568
  %570 = phi %"class.std::__1::basic_string"* [ %1, %200 ], [ %1, %444 ], [ %492, %568 ]
  ret %"class.std::__1::basic_string"* %570
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEERNS4_IS6_EEE12emplace_backIJRKS6_EEEvDpOT_(%"struct.std::__1::__split_buffer.96"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %5, align 8
  %7 = icmp eq %"class.std::__1::basic_string"* %4, %6
  %8 = ptrtoint %"class.std::__1::basic_string"* %6 to i64
  br i1 %7, label %9, label %114

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %0, i64 0, i32 1
  %11 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.96", %"struct.std::__1::__split_buffer.96"* %0, i64 0, i32 0
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp ugt %"class.std::__1::basic_string"* %11, %13
  %15 = ptrtoint %"class.std::__1::basic_string"* %13 to i64
  br i1 %14, label %16, label %49

16:                                               ; preds = %9
  %17 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %18 = sub i64 %17, %15
  %19 = sdiv exact i64 %18, 24
  %20 = add nsw i64 %19, 1
  %21 = sdiv i64 %20, -2
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 %21
  %23 = icmp eq %"class.std::__1::basic_string"* %11, %4
  br i1 %23, label %45, label %24

24:                                               ; preds = %16, %34
  %25 = phi %"class.std::__1::basic_string"* [ %41, %34 ], [ %22, %16 ]
  %26 = phi %"class.std::__1::basic_string"* [ %40, %34 ], [ %11, %16 ]
  %27 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %27, i64 0, i32 1, i32 1
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %24
  %32 = bitcast %"class.std::__1::basic_string"* %25 to i8**
  %33 = load i8*, i8** %32, align 8
  tail call void @_ZdlPv(i8* %33) #14
  br label %34

34:                                               ; preds = %31, %24
  %35 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %36 = bitcast %"class.std::__1::basic_string"* %26 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %35, i8* align 8 %36, i64 24, i1 false) #12
  %37 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  store i8 0, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %26 to i16*
  store i16 0, i16* %39, align 2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  %42 = icmp eq %"class.std::__1::basic_string"* %40, %4
  br i1 %42, label %43, label %24

43:                                               ; preds = %34
  %44 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  br label %45

45:                                               ; preds = %43, %16
  %46 = phi %"class.std::__1::basic_string"* [ %4, %16 ], [ %44, %43 ]
  %47 = phi %"class.std::__1::basic_string"* [ %22, %16 ], [ %41, %43 ]
  store %"class.std::__1::basic_string"* %47, %"class.std::__1::basic_string"** %3, align 8
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 %21
  store %"class.std::__1::basic_string"* %48, %"class.std::__1::basic_string"** %10, align 8
  br label %114

49:                                               ; preds = %9
  %50 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %51 = bitcast %"struct.std::__1::__split_buffer.96"* %0 to i64*
  %52 = sub i64 %8, %15
  %53 = sdiv exact i64 %52, 24
  %54 = shl nsw i64 %53, 1
  %55 = icmp eq i64 %52, 0
  %56 = select i1 %55, i64 1, i64 %54
  %57 = icmp ugt i64 %56, 768614336404564650
  br i1 %57, label %58, label %59

58:                                               ; preds = %49
  tail call void @abort() #13
  unreachable

59:                                               ; preds = %49
  %60 = lshr i64 %56, 2
  %61 = mul i64 %56, 24
  %62 = tail call i8* @_Znwm(i64 %61) #14
  %63 = bitcast i8* %62 to %"class.std::__1::basic_string"*
  %64 = ptrtoint i8* %62 to i64
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 %60
  %66 = ptrtoint %"class.std::__1::basic_string"* %65 to i64
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 %56
  %68 = ptrtoint %"class.std::__1::basic_string"* %67 to i64
  %69 = ptrtoint %"class.std::__1::basic_string"* %11 to i64
  %70 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %71 = sub i64 %70, %69
  %72 = sdiv exact i64 %71, 24
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 %72
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %90, label %75

75:                                               ; preds = %59, %75
  %76 = phi %"class.std::__1::basic_string"* [ %81, %75 ], [ %65, %59 ]
  %77 = phi i64 [ %82, %75 ], [ %66, %59 ]
  %78 = phi %"class.std::__1::basic_string"* [ %83, %75 ], [ %11, %59 ]
  %79 = inttoptr i64 %77 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #12
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %76, i64 1
  %82 = ptrtoint %"class.std::__1::basic_string"* %81 to i64
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 1
  %84 = icmp eq %"class.std::__1::basic_string"* %73, %81
  br i1 %84, label %85, label %75

85:                                               ; preds = %75
  %86 = ptrtoint %"class.std::__1::basic_string"* %73 to i64
  %87 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %10, align 8
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %90

90:                                               ; preds = %59, %85
  %91 = phi %"class.std::__1::basic_string"* [ %89, %85 ], [ %4, %59 ]
  %92 = phi %"class.std::__1::basic_string"* [ %88, %85 ], [ %11, %59 ]
  %93 = phi %"class.std::__1::basic_string"* [ %87, %85 ], [ %13, %59 ]
  %94 = phi i64 [ %86, %85 ], [ %66, %59 ]
  store i64 %64, i64* %51, align 8
  %95 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  store i64 %66, i64* %95, align 8
  %96 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  store i64 %94, i64* %96, align 8
  store i64 %68, i64* %50, align 8
  %97 = icmp eq %"class.std::__1::basic_string"* %91, %92
  br i1 %97, label %110, label %98

98:                                               ; preds = %90, %108
  %99 = phi %"class.std::__1::basic_string"* [ %100, %108 ], [ %91, %90 ]
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 -1
  %101 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %102 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %101, i64 0, i32 1, i32 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %98
  %106 = bitcast %"class.std::__1::basic_string"* %100 to i8**
  %107 = load i8*, i8** %106, align 8
  tail call void @_ZdlPv(i8* %107) #14
  br label %108

108:                                              ; preds = %105, %98
  %109 = icmp eq %"class.std::__1::basic_string"* %100, %92
  br i1 %109, label %110, label %98

110:                                              ; preds = %108, %90
  %111 = icmp eq %"class.std::__1::basic_string"* %93, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %110
  %113 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @_ZdlPv(i8* %113) #14
  br label %114

114:                                              ; preds = %112, %110, %45, %2
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %116 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %122 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %121, i8* align 8 %122, i64 24, i1 false) #12
  br label %298

123:                                              ; preds = %114
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %127 = load i64, i64* %126, align 8
  %128 = icmp ult i64 %127, 11
  br i1 %128, label %129, label %134

129:                                              ; preds = %123
  %130 = bitcast %"class.std::__1::basic_string"* %115 to i16*
  %131 = trunc i64 %127 to i8
  %132 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %133 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %132, i64 0, i32 1, i32 1
  store i8 %131, i8* %133, align 1
  br label %151

134:                                              ; preds = %123
  %135 = icmp ugt i64 %127, 9223372036854775791
  br i1 %135, label %136, label %138

136:                                              ; preds = %134
  %137 = bitcast %"class.std::__1::basic_string"* %115 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %137) #13
  unreachable

138:                                              ; preds = %134
  %139 = add nuw nsw i64 %127, 8
  %140 = and i64 %139, -8
  %141 = icmp slt i64 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %138
  tail call void @abort() #13
  unreachable

143:                                              ; preds = %138
  %144 = shl i64 %140, 1
  %145 = tail call i8* @_Znwm(i64 %144) #14
  %146 = bitcast i8* %145 to i16*
  %147 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  store i8* %145, i8** %147, align 8
  %148 = or i64 %140, -9223372036854775808
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %127, i64* %150, align 8
  br label %151

151:                                              ; preds = %143, %129
  %152 = phi i16* [ %130, %129 ], [ %146, %143 ]
  %153 = add nuw nsw i64 %127, 1
  %154 = add i64 %127, 1
  %155 = icmp ult i64 %154, 16
  br i1 %155, label %245, label %156

156:                                              ; preds = %151
  %157 = add i64 %127, 1
  %158 = getelementptr i16, i16* %152, i64 %157
  %159 = getelementptr i16, i16* %125, i64 %157
  %160 = icmp ult i16* %152, %159
  %161 = icmp ult i16* %125, %158
  %162 = and i1 %160, %161
  br i1 %162, label %245, label %163

163:                                              ; preds = %156
  %164 = and i64 %154, -16
  %165 = sub i64 %153, %164
  %166 = getelementptr i16, i16* %125, i64 %164
  %167 = getelementptr i16, i16* %152, i64 %164
  %168 = add i64 %164, -16
  %169 = lshr exact i64 %168, 4
  %170 = add nuw nsw i64 %169, 1
  %171 = and i64 %170, 3
  %172 = icmp ult i64 %168, 48
  br i1 %172, label %224, label %173

173:                                              ; preds = %163
  %174 = sub nsw i64 %170, %171
  br label %175

175:                                              ; preds = %175, %173
  %176 = phi i64 [ 0, %173 ], [ %221, %175 ]
  %177 = phi i64 [ %174, %173 ], [ %222, %175 ]
  %178 = getelementptr i16, i16* %125, i64 %176
  %179 = getelementptr i16, i16* %152, i64 %176
  %180 = bitcast i16* %178 to <8 x i16>*
  %181 = load <8 x i16>, <8 x i16>* %180, align 2, !alias.scope !123
  %182 = getelementptr i16, i16* %178, i64 8
  %183 = bitcast i16* %182 to <8 x i16>*
  %184 = load <8 x i16>, <8 x i16>* %183, align 2, !alias.scope !123
  %185 = bitcast i16* %179 to <8 x i16>*
  store <8 x i16> %181, <8 x i16>* %185, align 2, !alias.scope !126, !noalias !123
  %186 = getelementptr i16, i16* %179, i64 8
  %187 = bitcast i16* %186 to <8 x i16>*
  store <8 x i16> %184, <8 x i16>* %187, align 2, !alias.scope !126, !noalias !123
  %188 = or i64 %176, 16
  %189 = getelementptr i16, i16* %125, i64 %188
  %190 = getelementptr i16, i16* %152, i64 %188
  %191 = bitcast i16* %189 to <8 x i16>*
  %192 = load <8 x i16>, <8 x i16>* %191, align 2, !alias.scope !123
  %193 = getelementptr i16, i16* %189, i64 8
  %194 = bitcast i16* %193 to <8 x i16>*
  %195 = load <8 x i16>, <8 x i16>* %194, align 2, !alias.scope !123
  %196 = bitcast i16* %190 to <8 x i16>*
  store <8 x i16> %192, <8 x i16>* %196, align 2, !alias.scope !126, !noalias !123
  %197 = getelementptr i16, i16* %190, i64 8
  %198 = bitcast i16* %197 to <8 x i16>*
  store <8 x i16> %195, <8 x i16>* %198, align 2, !alias.scope !126, !noalias !123
  %199 = or i64 %176, 32
  %200 = getelementptr i16, i16* %125, i64 %199
  %201 = getelementptr i16, i16* %152, i64 %199
  %202 = bitcast i16* %200 to <8 x i16>*
  %203 = load <8 x i16>, <8 x i16>* %202, align 2, !alias.scope !123
  %204 = getelementptr i16, i16* %200, i64 8
  %205 = bitcast i16* %204 to <8 x i16>*
  %206 = load <8 x i16>, <8 x i16>* %205, align 2, !alias.scope !123
  %207 = bitcast i16* %201 to <8 x i16>*
  store <8 x i16> %203, <8 x i16>* %207, align 2, !alias.scope !126, !noalias !123
  %208 = getelementptr i16, i16* %201, i64 8
  %209 = bitcast i16* %208 to <8 x i16>*
  store <8 x i16> %206, <8 x i16>* %209, align 2, !alias.scope !126, !noalias !123
  %210 = or i64 %176, 48
  %211 = getelementptr i16, i16* %125, i64 %210
  %212 = getelementptr i16, i16* %152, i64 %210
  %213 = bitcast i16* %211 to <8 x i16>*
  %214 = load <8 x i16>, <8 x i16>* %213, align 2, !alias.scope !123
  %215 = getelementptr i16, i16* %211, i64 8
  %216 = bitcast i16* %215 to <8 x i16>*
  %217 = load <8 x i16>, <8 x i16>* %216, align 2, !alias.scope !123
  %218 = bitcast i16* %212 to <8 x i16>*
  store <8 x i16> %214, <8 x i16>* %218, align 2, !alias.scope !126, !noalias !123
  %219 = getelementptr i16, i16* %212, i64 8
  %220 = bitcast i16* %219 to <8 x i16>*
  store <8 x i16> %217, <8 x i16>* %220, align 2, !alias.scope !126, !noalias !123
  %221 = add i64 %176, 64
  %222 = add i64 %177, -4
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %175, !llvm.loop !128

224:                                              ; preds = %175, %163
  %225 = phi i64 [ 0, %163 ], [ %221, %175 ]
  %226 = icmp eq i64 %171, 0
  br i1 %226, label %243, label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %240, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %241, %227 ], [ %171, %224 ]
  %230 = getelementptr i16, i16* %125, i64 %228
  %231 = getelementptr i16, i16* %152, i64 %228
  %232 = bitcast i16* %230 to <8 x i16>*
  %233 = load <8 x i16>, <8 x i16>* %232, align 2, !alias.scope !123
  %234 = getelementptr i16, i16* %230, i64 8
  %235 = bitcast i16* %234 to <8 x i16>*
  %236 = load <8 x i16>, <8 x i16>* %235, align 2, !alias.scope !123
  %237 = bitcast i16* %231 to <8 x i16>*
  store <8 x i16> %233, <8 x i16>* %237, align 2, !alias.scope !126, !noalias !123
  %238 = getelementptr i16, i16* %231, i64 8
  %239 = bitcast i16* %238 to <8 x i16>*
  store <8 x i16> %236, <8 x i16>* %239, align 2, !alias.scope !126, !noalias !123
  %240 = add i64 %228, 16
  %241 = add i64 %229, -1
  %242 = icmp eq i64 %241, 0
  br i1 %242, label %243, label %227, !llvm.loop !129

243:                                              ; preds = %227, %224
  %244 = icmp eq i64 %154, %164
  br i1 %244, label %298, label %245

245:                                              ; preds = %243, %156, %151
  %246 = phi i64 [ %153, %156 ], [ %153, %151 ], [ %165, %243 ]
  %247 = phi i16* [ %125, %156 ], [ %125, %151 ], [ %166, %243 ]
  %248 = phi i16* [ %152, %156 ], [ %152, %151 ], [ %167, %243 ]
  %249 = add i64 %246, -1
  %250 = and i64 %246, 7
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %263, label %252

252:                                              ; preds = %245, %252
  %253 = phi i64 [ %258, %252 ], [ %246, %245 ]
  %254 = phi i16* [ %260, %252 ], [ %247, %245 ]
  %255 = phi i16* [ %259, %252 ], [ %248, %245 ]
  %256 = phi i64 [ %261, %252 ], [ %250, %245 ]
  %257 = load i16, i16* %254, align 2
  store i16 %257, i16* %255, align 2
  %258 = add i64 %253, -1
  %259 = getelementptr inbounds i16, i16* %255, i64 1
  %260 = getelementptr inbounds i16, i16* %254, i64 1
  %261 = add i64 %256, -1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %252, !llvm.loop !130

263:                                              ; preds = %252, %245
  %264 = phi i64 [ %246, %245 ], [ %258, %252 ]
  %265 = phi i16* [ %247, %245 ], [ %260, %252 ]
  %266 = phi i16* [ %248, %245 ], [ %259, %252 ]
  %267 = icmp ult i64 %249, 7
  br i1 %267, label %298, label %268

268:                                              ; preds = %263, %268
  %269 = phi i64 [ %294, %268 ], [ %264, %263 ]
  %270 = phi i16* [ %296, %268 ], [ %265, %263 ]
  %271 = phi i16* [ %295, %268 ], [ %266, %263 ]
  %272 = load i16, i16* %270, align 2
  store i16 %272, i16* %271, align 2
  %273 = getelementptr inbounds i16, i16* %271, i64 1
  %274 = getelementptr inbounds i16, i16* %270, i64 1
  %275 = load i16, i16* %274, align 2
  store i16 %275, i16* %273, align 2
  %276 = getelementptr inbounds i16, i16* %271, i64 2
  %277 = getelementptr inbounds i16, i16* %270, i64 2
  %278 = load i16, i16* %277, align 2
  store i16 %278, i16* %276, align 2
  %279 = getelementptr inbounds i16, i16* %271, i64 3
  %280 = getelementptr inbounds i16, i16* %270, i64 3
  %281 = load i16, i16* %280, align 2
  store i16 %281, i16* %279, align 2
  %282 = getelementptr inbounds i16, i16* %271, i64 4
  %283 = getelementptr inbounds i16, i16* %270, i64 4
  %284 = load i16, i16* %283, align 2
  store i16 %284, i16* %282, align 2
  %285 = getelementptr inbounds i16, i16* %271, i64 5
  %286 = getelementptr inbounds i16, i16* %270, i64 5
  %287 = load i16, i16* %286, align 2
  store i16 %287, i16* %285, align 2
  %288 = getelementptr inbounds i16, i16* %271, i64 6
  %289 = getelementptr inbounds i16, i16* %270, i64 6
  %290 = load i16, i16* %289, align 2
  store i16 %290, i16* %288, align 2
  %291 = getelementptr inbounds i16, i16* %271, i64 7
  %292 = getelementptr inbounds i16, i16* %270, i64 7
  %293 = load i16, i16* %292, align 2
  store i16 %293, i16* %291, align 2
  %294 = add i64 %269, -8
  %295 = getelementptr inbounds i16, i16* %271, i64 8
  %296 = getelementptr inbounds i16, i16* %270, i64 8
  %297 = icmp eq i64 %294, 0
  br i1 %297, label %298, label %268, !llvm.loop !131

298:                                              ; preds = %263, %268, %243, %120
  %299 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %300 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %299, i64 1
  store %"class.std::__1::basic_string"* %300, %"class.std::__1::basic_string"** %3, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS4_IS6_EEE24__emplace_back_slow_pathIJRS6_EEEvDpOT_(%"class.std::__1::vector.52"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.52"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.52"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #14
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %37, i64 0, i32 1, i32 1
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #12
  br label %219

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i16*, i16** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = icmp ult i64 %48, 11
  br i1 %49, label %50, label %55

50:                                               ; preds = %44
  %51 = bitcast %"class.std::__1::basic_string"* %34 to i16*
  %52 = trunc i64 %48 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %53, i64 0, i32 1, i32 1
  store i8 %52, i8* %54, align 1
  br label %72

55:                                               ; preds = %44
  %56 = icmp ugt i64 %48, 9223372036854775791
  br i1 %56, label %57, label %59

57:                                               ; preds = %55
  %58 = bitcast %"class.std::__1::basic_string"* %34 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %58) #13
  unreachable

59:                                               ; preds = %55
  %60 = add nuw nsw i64 %48, 8
  %61 = and i64 %60, -8
  %62 = icmp slt i64 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %59
  tail call void @abort() #13
  unreachable

64:                                               ; preds = %59
  %65 = shl i64 %61, 1
  %66 = tail call i8* @_Znwm(i64 %65) #14
  %67 = bitcast i8* %66 to i16*
  %68 = bitcast %"class.std::__1::basic_string"* %34 to i8**
  store i8* %66, i8** %68, align 8
  %69 = or i64 %61, -9223372036854775808
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %48, i64* %71, align 8
  br label %72

72:                                               ; preds = %64, %50
  %73 = phi i16* [ %51, %50 ], [ %67, %64 ]
  %74 = add nuw nsw i64 %48, 1
  %75 = add i64 %48, 1
  %76 = icmp ult i64 %75, 16
  br i1 %76, label %166, label %77

77:                                               ; preds = %72
  %78 = add i64 %48, 1
  %79 = getelementptr i16, i16* %73, i64 %78
  %80 = getelementptr i16, i16* %46, i64 %78
  %81 = icmp ult i16* %73, %80
  %82 = icmp ult i16* %46, %79
  %83 = and i1 %81, %82
  br i1 %83, label %166, label %84

84:                                               ; preds = %77
  %85 = and i64 %75, -16
  %86 = sub i64 %74, %85
  %87 = getelementptr i16, i16* %46, i64 %85
  %88 = getelementptr i16, i16* %73, i64 %85
  %89 = add i64 %85, -16
  %90 = lshr exact i64 %89, 4
  %91 = add nuw nsw i64 %90, 1
  %92 = and i64 %91, 3
  %93 = icmp ult i64 %89, 48
  br i1 %93, label %145, label %94

94:                                               ; preds = %84
  %95 = sub nsw i64 %91, %92
  br label %96

96:                                               ; preds = %96, %94
  %97 = phi i64 [ 0, %94 ], [ %142, %96 ]
  %98 = phi i64 [ %95, %94 ], [ %143, %96 ]
  %99 = getelementptr i16, i16* %46, i64 %97
  %100 = getelementptr i16, i16* %73, i64 %97
  %101 = bitcast i16* %99 to <8 x i16>*
  %102 = load <8 x i16>, <8 x i16>* %101, align 2, !alias.scope !132
  %103 = getelementptr i16, i16* %99, i64 8
  %104 = bitcast i16* %103 to <8 x i16>*
  %105 = load <8 x i16>, <8 x i16>* %104, align 2, !alias.scope !132
  %106 = bitcast i16* %100 to <8 x i16>*
  store <8 x i16> %102, <8 x i16>* %106, align 2, !alias.scope !135, !noalias !132
  %107 = getelementptr i16, i16* %100, i64 8
  %108 = bitcast i16* %107 to <8 x i16>*
  store <8 x i16> %105, <8 x i16>* %108, align 2, !alias.scope !135, !noalias !132
  %109 = or i64 %97, 16
  %110 = getelementptr i16, i16* %46, i64 %109
  %111 = getelementptr i16, i16* %73, i64 %109
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !132
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !132
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !135, !noalias !132
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !135, !noalias !132
  %120 = or i64 %97, 32
  %121 = getelementptr i16, i16* %46, i64 %120
  %122 = getelementptr i16, i16* %73, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !132
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !132
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !135, !noalias !132
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !135, !noalias !132
  %131 = or i64 %97, 48
  %132 = getelementptr i16, i16* %46, i64 %131
  %133 = getelementptr i16, i16* %73, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !132
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !132
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !135, !noalias !132
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !135, !noalias !132
  %142 = add i64 %97, 64
  %143 = add i64 %98, -4
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %96, !llvm.loop !137

145:                                              ; preds = %96, %84
  %146 = phi i64 [ 0, %84 ], [ %142, %96 ]
  %147 = icmp eq i64 %92, 0
  br i1 %147, label %164, label %148

148:                                              ; preds = %145, %148
  %149 = phi i64 [ %161, %148 ], [ %146, %145 ]
  %150 = phi i64 [ %162, %148 ], [ %92, %145 ]
  %151 = getelementptr i16, i16* %46, i64 %149
  %152 = getelementptr i16, i16* %73, i64 %149
  %153 = bitcast i16* %151 to <8 x i16>*
  %154 = load <8 x i16>, <8 x i16>* %153, align 2, !alias.scope !132
  %155 = getelementptr i16, i16* %151, i64 8
  %156 = bitcast i16* %155 to <8 x i16>*
  %157 = load <8 x i16>, <8 x i16>* %156, align 2, !alias.scope !132
  %158 = bitcast i16* %152 to <8 x i16>*
  store <8 x i16> %154, <8 x i16>* %158, align 2, !alias.scope !135, !noalias !132
  %159 = getelementptr i16, i16* %152, i64 8
  %160 = bitcast i16* %159 to <8 x i16>*
  store <8 x i16> %157, <8 x i16>* %160, align 2, !alias.scope !135, !noalias !132
  %161 = add i64 %149, 16
  %162 = add i64 %150, -1
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %164, label %148, !llvm.loop !138

164:                                              ; preds = %148, %145
  %165 = icmp eq i64 %75, %85
  br i1 %165, label %219, label %166

166:                                              ; preds = %164, %77, %72
  %167 = phi i64 [ %74, %77 ], [ %74, %72 ], [ %86, %164 ]
  %168 = phi i16* [ %46, %77 ], [ %46, %72 ], [ %87, %164 ]
  %169 = phi i16* [ %73, %77 ], [ %73, %72 ], [ %88, %164 ]
  %170 = add i64 %167, -1
  %171 = and i64 %167, 7
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %184, label %173

173:                                              ; preds = %166, %173
  %174 = phi i64 [ %179, %173 ], [ %167, %166 ]
  %175 = phi i16* [ %181, %173 ], [ %168, %166 ]
  %176 = phi i16* [ %180, %173 ], [ %169, %166 ]
  %177 = phi i64 [ %182, %173 ], [ %171, %166 ]
  %178 = load i16, i16* %175, align 2
  store i16 %178, i16* %176, align 2
  %179 = add i64 %174, -1
  %180 = getelementptr inbounds i16, i16* %176, i64 1
  %181 = getelementptr inbounds i16, i16* %175, i64 1
  %182 = add i64 %177, -1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %184, label %173, !llvm.loop !139

184:                                              ; preds = %173, %166
  %185 = phi i64 [ %167, %166 ], [ %179, %173 ]
  %186 = phi i16* [ %168, %166 ], [ %181, %173 ]
  %187 = phi i16* [ %169, %166 ], [ %180, %173 ]
  %188 = icmp ult i64 %170, 7
  br i1 %188, label %219, label %189

189:                                              ; preds = %184, %189
  %190 = phi i64 [ %215, %189 ], [ %185, %184 ]
  %191 = phi i16* [ %217, %189 ], [ %186, %184 ]
  %192 = phi i16* [ %216, %189 ], [ %187, %184 ]
  %193 = load i16, i16* %191, align 2
  store i16 %193, i16* %192, align 2
  %194 = getelementptr inbounds i16, i16* %192, i64 1
  %195 = getelementptr inbounds i16, i16* %191, i64 1
  %196 = load i16, i16* %195, align 2
  store i16 %196, i16* %194, align 2
  %197 = getelementptr inbounds i16, i16* %192, i64 2
  %198 = getelementptr inbounds i16, i16* %191, i64 2
  %199 = load i16, i16* %198, align 2
  store i16 %199, i16* %197, align 2
  %200 = getelementptr inbounds i16, i16* %192, i64 3
  %201 = getelementptr inbounds i16, i16* %191, i64 3
  %202 = load i16, i16* %201, align 2
  store i16 %202, i16* %200, align 2
  %203 = getelementptr inbounds i16, i16* %192, i64 4
  %204 = getelementptr inbounds i16, i16* %191, i64 4
  %205 = load i16, i16* %204, align 2
  store i16 %205, i16* %203, align 2
  %206 = getelementptr inbounds i16, i16* %192, i64 5
  %207 = getelementptr inbounds i16, i16* %191, i64 5
  %208 = load i16, i16* %207, align 2
  store i16 %208, i16* %206, align 2
  %209 = getelementptr inbounds i16, i16* %192, i64 6
  %210 = getelementptr inbounds i16, i16* %191, i64 6
  %211 = load i16, i16* %210, align 2
  store i16 %211, i16* %209, align 2
  %212 = getelementptr inbounds i16, i16* %192, i64 7
  %213 = getelementptr inbounds i16, i16* %191, i64 7
  %214 = load i16, i16* %213, align 2
  store i16 %214, i16* %212, align 2
  %215 = add i64 %190, -8
  %216 = getelementptr inbounds i16, i16* %192, i64 8
  %217 = getelementptr inbounds i16, i16* %191, i64 8
  %218 = icmp eq i64 %215, 0
  br i1 %218, label %219, label %189, !llvm.loop !140

219:                                              ; preds = %184, %189, %164, %41
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %221 = ptrtoint %"class.std::__1::basic_string"* %220 to i64
  %222 = getelementptr inbounds %"class.std::__1::vector.52", %"class.std::__1::vector.52"* %0, i64 0, i32 0, i32 0
  %223 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %222, align 8
  %224 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %225 = icmp eq %"class.std::__1::basic_string"* %224, %223
  br i1 %225, label %226, label %228

226:                                              ; preds = %219
  %227 = ptrtoint %"class.std::__1::basic_string"* %223 to i64
  br label %239

228:                                              ; preds = %219, %228
  %229 = phi %"class.std::__1::basic_string"* [ %231, %228 ], [ %34, %219 ]
  %230 = phi %"class.std::__1::basic_string"* [ %232, %228 ], [ %224, %219 ]
  %231 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %230, i64 -1
  %233 = bitcast %"class.std::__1::basic_string"* %231 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %232 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %233, i8* align 8 %234, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %234, i8 0, i64 24, i1 false) #12
  %235 = icmp eq %"class.std::__1::basic_string"* %232, %223
  br i1 %235, label %236, label %228

236:                                              ; preds = %228
  %237 = load i64, i64* %6, align 8
  %238 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %239

239:                                              ; preds = %226, %236
  %240 = phi %"class.std::__1::basic_string"* [ %223, %226 ], [ %238, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %34, %226 ], [ %231, %236 ]
  %242 = phi i64 [ %227, %226 ], [ %237, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %241 to i64
  store i64 %243, i64* %6, align 8
  store i64 %221, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %244 = inttoptr i64 %242 to %"class.std::__1::basic_string"*
  %245 = icmp eq %"class.std::__1::basic_string"* %240, %244
  br i1 %245, label %258, label %246

246:                                              ; preds = %239, %256
  %247 = phi %"class.std::__1::basic_string"* [ %248, %256 ], [ %240, %239 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %247, i64 -1
  %249 = bitcast %"class.std::__1::basic_string"* %248 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %250 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %249, i64 0, i32 1, i32 1
  %251 = load i8, i8* %250, align 1
  %252 = icmp slt i8 %251, 0
  br i1 %252, label %253, label %256

253:                                              ; preds = %246
  %254 = bitcast %"class.std::__1::basic_string"* %248 to i8**
  %255 = load i8*, i8** %254, align 8
  tail call void @_ZdlPv(i8* %255) #14
  br label %256

256:                                              ; preds = %253, %246
  %257 = icmp eq %"class.std::__1::basic_string"* %248, %244
  br i1 %257, label %258, label %246

258:                                              ; preds = %256, %239
  %259 = icmp eq i64 %242, 0
  br i1 %259, label %262, label %260

260:                                              ; preds = %258
  %261 = inttoptr i64 %242 to i8*
  tail call void @_ZdlPv(i8* %261) #14
  br label %262

262:                                              ; preds = %258, %260
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %61, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %6 = icmp eq %"class.std::__1::basic_string"* %5, %1
  br i1 %6, label %59, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %8, i64 0, i32 1, i32 1
  %10 = load i8, i8* %9, align 1
  br label %11

11:                                               ; preds = %56, %7
  %12 = phi i8 [ %17, %56 ], [ %10, %7 ]
  %13 = phi %"class.std::__1::basic_string"* [ %57, %56 ], [ %5, %7 ]
  %14 = phi %"class.std::__1::basic_string"* [ %13, %56 ], [ %0, %7 ]
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %15, i64 0, i32 1, i32 1
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = icmp slt i8 %12, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %12 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %22, %27
  %29 = select i1 %28, i64 %22, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i16*, i16** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %35 = select i1 %23, i16* %33, i16* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %39 = select i1 %18, i16* %37, i16* %38
  br label %40

40:                                               ; preds = %49, %31
  %41 = phi i64 [ %50, %49 ], [ %29, %31 ]
  %42 = phi i16* [ %52, %49 ], [ %39, %31 ]
  %43 = phi i16* [ %51, %49 ], [ %35, %31 ]
  %44 = load i16, i16* %43, align 2
  %45 = load i16, i16* %42, align 2
  %46 = icmp ult i16 %44, %45
  br i1 %46, label %56, label %47

47:                                               ; preds = %40
  %48 = icmp ult i16 %45, %44
  br i1 %48, label %61, label %49

49:                                               ; preds = %47
  %50 = add i64 %41, -1
  %51 = getelementptr inbounds i16, i16* %43, i64 1
  %52 = getelementptr inbounds i16, i16* %42, i64 1
  %53 = icmp eq i64 %50, 0
  br i1 %53, label %54, label %40

54:                                               ; preds = %49, %11
  %55 = icmp ult i64 %27, %22
  br i1 %55, label %56, label %61

56:                                               ; preds = %40, %54
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %58 = icmp eq %"class.std::__1::basic_string"* %57, %1
  br i1 %58, label %59, label %11

59:                                               ; preds = %56, %4
  %60 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %144

61:                                               ; preds = %54, %47, %2
  %62 = phi %"class.std::__1::basic_string"* [ %0, %2 ], [ %14, %47 ], [ %14, %54 ]
  %63 = ptrtoint %"class.std::__1::basic_string"* %62 to i64
  %64 = icmp eq %"class.std::__1::basic_string"* %62, %1
  br i1 %64, label %144, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 2
  %67 = icmp eq %"class.std::__1::basic_string"* %66, %1
  br i1 %67, label %140, label %68

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 1
  br label %70

70:                                               ; preds = %68, %133
  %71 = phi %"class.std::__1::basic_string"* [ %137, %133 ], [ %62, %68 ]
  %72 = phi %"class.std::__1::basic_string"* [ %135, %133 ], [ %66, %68 ]
  %73 = phi %"class.std::__1::basic_string"* [ %72, %133 ], [ %69, %68 ]
  %74 = phi i64 [ %134, %133 ], [ %63, %68 ]
  %75 = bitcast %"class.std::__1::basic_string"* %72 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %75, i64 0, i32 1, i32 1
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %80 = load i64, i64* %79, align 8
  %81 = zext i8 %77 to i64
  %82 = select i1 %78, i64 %80, i64 %81
  %83 = inttoptr i64 %74 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %83, i64 0, i32 1, i32 1
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = zext i8 %85 to i64
  %90 = select i1 %86, i64 %88, i64 %89
  %91 = icmp ult i64 %82, %90
  %92 = select i1 %91, i64 %82, i64 %90
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %117, label %94

94:                                               ; preds = %70
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i16*, i16** %95, align 8
  %97 = inttoptr i64 %74 to i16*
  %98 = select i1 %86, i16* %96, i16* %97
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i16*, i16** %99, align 8
  %101 = bitcast %"class.std::__1::basic_string"* %72 to i16*
  %102 = select i1 %78, i16* %100, i16* %101
  br label %103

103:                                              ; preds = %112, %94
  %104 = phi i64 [ %113, %112 ], [ %92, %94 ]
  %105 = phi i16* [ %115, %112 ], [ %102, %94 ]
  %106 = phi i16* [ %114, %112 ], [ %98, %94 ]
  %107 = load i16, i16* %106, align 2
  %108 = load i16, i16* %105, align 2
  %109 = icmp ult i16 %107, %108
  br i1 %109, label %119, label %110

110:                                              ; preds = %103
  %111 = icmp ult i16 %108, %107
  br i1 %111, label %133, label %112

112:                                              ; preds = %110
  %113 = add i64 %104, -1
  %114 = getelementptr inbounds i16, i16* %106, i64 1
  %115 = getelementptr inbounds i16, i16* %105, i64 1
  %116 = icmp eq i64 %113, 0
  br i1 %116, label %117, label %103

117:                                              ; preds = %112, %70
  %118 = icmp ult i64 %90, %82
  br i1 %118, label %119, label %133

119:                                              ; preds = %103, %117
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %121 = ptrtoint %"class.std::__1::basic_string"* %120 to i64
  %122 = bitcast %"class.std::__1::basic_string"* %120 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %123 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %122, i64 0, i32 1, i32 1
  %124 = load i8, i8* %123, align 1
  %125 = icmp slt i8 %124, 0
  br i1 %125, label %126, label %129

126:                                              ; preds = %119
  %127 = bitcast %"class.std::__1::basic_string"* %120 to i8**
  %128 = load i8*, i8** %127, align 8
  tail call void @_ZdlPv(i8* %128) #14
  br label %129

129:                                              ; preds = %119, %126
  %130 = bitcast %"class.std::__1::basic_string"* %120 to i8*
  %131 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %130, i8* align 8 %131, i64 24, i1 false) #12
  store i8 0, i8* %76, align 1
  %132 = bitcast %"class.std::__1::basic_string"* %72 to i16*
  store i16 0, i16* %132, align 2
  br label %133

133:                                              ; preds = %110, %117, %129
  %134 = phi i64 [ %74, %117 ], [ %121, %129 ], [ %74, %110 ]
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %136 = icmp eq %"class.std::__1::basic_string"* %135, %1
  %137 = inttoptr i64 %134 to %"class.std::__1::basic_string"*
  br i1 %136, label %138, label %70

138:                                              ; preds = %133
  %139 = inttoptr i64 %134 to %"class.std::__1::basic_string"*
  br label %140

140:                                              ; preds = %138, %65
  %141 = phi %"class.std::__1::basic_string"* [ %62, %65 ], [ %139, %138 ]
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %141, i64 1
  %143 = ptrtoint %"class.std::__1::basic_string"* %142 to i64
  br label %144

144:                                              ; preds = %61, %59, %140
  %145 = phi i64 [ %143, %140 ], [ %63, %61 ], [ %60, %59 ]
  %146 = inttoptr i64 %145 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %65 [
    i64 0, label %93
    i64 1, label %93
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %17, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp ult i64 %16, %24
  %26 = select i1 %25, i64 %16, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %52, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i16*, i16** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %32 = select i1 %20, i16* %30, i16* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i16*, i16** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %36 = select i1 %12, i16* %34, i16* %35
  %37 = ptrtoint i16* %34 to i64
  br label %38

38:                                               ; preds = %47, %28
  %39 = phi i64 [ %48, %47 ], [ %26, %28 ]
  %40 = phi i16* [ %50, %47 ], [ %36, %28 ]
  %41 = phi i16* [ %49, %47 ], [ %32, %28 ]
  %42 = load i16, i16* %41, align 2
  %43 = load i16, i16* %40, align 2
  %44 = icmp ult i16 %42, %43
  br i1 %44, label %57, label %45

45:                                               ; preds = %38
  %46 = icmp ult i16 %43, %42
  br i1 %46, label %93, label %47

47:                                               ; preds = %45
  %48 = add i64 %39, -1
  %49 = getelementptr inbounds i16, i16* %41, i64 1
  %50 = getelementptr inbounds i16, i16* %40, i64 1
  %51 = icmp eq i64 %48, 0
  br i1 %51, label %52, label %38

52:                                               ; preds = %47, %7
  %53 = icmp ult i64 %24, %16
  br i1 %53, label %54, label %93

54:                                               ; preds = %52
  %55 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %56 = load i64, i64* %55, align 8
  br label %57

57:                                               ; preds = %38, %54
  %58 = phi i64 [ %56, %54 ], [ %37, %38 ]
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #12
  %63 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 %58, i64* %63, align 8
  store i64 %14, i64* %21, align 8
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %60, i64* %64, align 8
  br label %93

65:                                               ; preds = %6
  %66 = icmp slt i64 %3, 1
  br i1 %66, label %67, label %68

67:                                               ; preds = %65
  tail call void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  br label %93

68:                                               ; preds = %65
  %69 = lshr i64 %3, 1
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %69
  %71 = icmp sgt i64 %3, %5
  br i1 %71, label %91, label %72

72:                                               ; preds = %68
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.std::__1::basic_string"* %4)
  %73 = sub nsw i64 %3, %69
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %69
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %73, %"class.std::__1::basic_string"* %74)
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"* %74, %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  %76 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %76, label %93, label %77

77:                                               ; preds = %72, %87
  %78 = phi i64 [ %88, %87 ], [ 0, %72 ]
  %79 = phi %"class.std::__1::basic_string"* [ %89, %87 ], [ %4, %72 ]
  %80 = bitcast %"class.std::__1::basic_string"* %79 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %81 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %80, i64 0, i32 1, i32 1
  %82 = load i8, i8* %81, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %87

84:                                               ; preds = %77
  %85 = bitcast %"class.std::__1::basic_string"* %79 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void @_ZdlPv(i8* %86) #14
  br label %87

87:                                               ; preds = %84, %77
  %88 = add nuw i64 %78, 1
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %79, i64 1
  %90 = icmp eq i64 %88, %3
  br i1 %90, label %93, label %77

91:                                               ; preds = %68
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.std::__1::basic_string"* %4, i64 %5)
  %92 = sub nsw i64 %3, %69
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %92, %"class.std::__1::basic_string"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %70, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, i64 %92, %"class.std::__1::basic_string"* %4, i64 %5)
  ret void

93:                                               ; preds = %45, %87, %72, %52, %57, %6, %6, %67
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %88, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %88, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %13, i64 0, i32 1, i32 1
  %15 = bitcast %"class.std::__1::basic_string"* %4 to i16*
  br label %16

16:                                               ; preds = %9, %71
  %17 = phi %"class.std::__1::basic_string"* [ %7, %9 ], [ %73, %71 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %18 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %18, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  %19 = icmp eq %"class.std::__1::basic_string"* %17, %0
  br i1 %19, label %62, label %20

20:                                               ; preds = %16, %83
  %21 = phi %"class.std::__1::basic_string"* [ %22, %83 ], [ %17, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %23, i64 0, i32 1, i32 1
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = zext i8 %25 to i64
  %30 = select i1 %26, i64 %28, i64 %29
  %31 = load i8, i8* %14, align 1
  %32 = icmp slt i8 %31, 0
  %33 = load i64, i64* %12, align 8
  %34 = zext i8 %31 to i64
  %35 = select i1 %32, i64 %33, i64 %34
  %36 = icmp ult i64 %30, %35
  %37 = select i1 %36, i64 %30, i64 %35
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %60, label %39

39:                                               ; preds = %20
  %40 = load i16*, i16** %11, align 8
  %41 = select i1 %32, i16* %40, i16* %15
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i16*, i16** %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  %45 = select i1 %26, i16* %43, i16* %44
  br label %46

46:                                               ; preds = %55, %39
  %47 = phi i64 [ %56, %55 ], [ %37, %39 ]
  %48 = phi i16* [ %58, %55 ], [ %45, %39 ]
  %49 = phi i16* [ %57, %55 ], [ %41, %39 ]
  %50 = load i16, i16* %49, align 2
  %51 = load i16, i16* %48, align 2
  %52 = icmp ult i16 %50, %51
  br i1 %52, label %75, label %53

53:                                               ; preds = %46
  %54 = icmp ult i16 %51, %50
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  %56 = add i64 %47, -1
  %57 = getelementptr inbounds i16, i16* %49, i64 1
  %58 = getelementptr inbounds i16, i16* %48, i64 1
  %59 = icmp eq i64 %56, 0
  br i1 %59, label %60, label %46

60:                                               ; preds = %55, %20
  %61 = icmp ult i64 %35, %30
  br i1 %61, label %75, label %62

62:                                               ; preds = %60, %83, %53, %16
  %63 = phi %"class.std::__1::basic_string"* [ %0, %16 ], [ %21, %53 ], [ %21, %60 ], [ %0, %83 ]
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = bitcast %"class.std::__1::basic_string"* %63 to i8**
  %70 = load i8*, i8** %69, align 8
  tail call void @_ZdlPv(i8* %70) #14
  br label %71

71:                                               ; preds = %68, %62
  %72 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %72, i8* nonnull align 8 %10, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 1
  %74 = icmp eq %"class.std::__1::basic_string"* %73, %1
  br i1 %74, label %88, label %16

75:                                               ; preds = %46, %60
  %76 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %76, i64 0, i32 1, i32 1
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %82 = load i8*, i8** %81, align 8
  tail call void @_ZdlPv(i8* %82) #14
  br label %83

83:                                               ; preds = %75, %80
  %84 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %85 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64 24, i1 false) #12
  store i8 0, i8* %24, align 1
  %86 = bitcast %"class.std::__1::basic_string"* %22 to i16*
  store i16 0, i16* %86, align 2
  %87 = icmp eq %"class.std::__1::basic_string"* %22, %0
  br i1 %87, label %62, label %20

88:                                               ; preds = %71, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %67 [
    i64 0, label %161
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  br label %161

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %11, i64 0, i32 1, i32 1
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp ult i64 %18, %26
  %28 = select i1 %27, i64 %18, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %53, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i16*
  %34 = select i1 %22, i16* %32, i16* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %38 = select i1 %14, i16* %36, i16* %37
  br label %39

39:                                               ; preds = %48, %30
  %40 = phi i64 [ %49, %48 ], [ %28, %30 ]
  %41 = phi i16* [ %51, %48 ], [ %38, %30 ]
  %42 = phi i16* [ %50, %48 ], [ %34, %30 ]
  %43 = load i16, i16* %42, align 2
  %44 = load i16, i16* %41, align 2
  %45 = icmp ult i16 %43, %44
  br i1 %45, label %55, label %46

46:                                               ; preds = %39
  %47 = icmp ult i16 %44, %43
  br i1 %47, label %61, label %48

48:                                               ; preds = %46
  %49 = add i64 %40, -1
  %50 = getelementptr inbounds i16, i16* %42, i64 1
  %51 = getelementptr inbounds i16, i16* %41, i64 1
  %52 = icmp eq i64 %49, 0
  br i1 %52, label %53, label %39

53:                                               ; preds = %48, %9
  %54 = icmp ult i64 %26, %18
  br i1 %54, label %55, label %61

55:                                               ; preds = %39, %53
  %56 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %57 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 24, i1 false) #12
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %60 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %59, i8* align 8 %60, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #12
  br label %161

61:                                               ; preds = %46, %53
  %62 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %63 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %63, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 24, i1 false) #12
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to i8*
  %66 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* align 8 %66, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 24, i1 false) #12
  br label %161

67:                                               ; preds = %5
  %68 = icmp slt i64 %3, 9
  br i1 %68, label %69, label %70

69:                                               ; preds = %67
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %4, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2)
  br label %161

70:                                               ; preds = %67
  %71 = lshr i64 %3, 1
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %72, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %71, %"class.std::__1::basic_string"* %4, i64 %71)
  %73 = sub nsw i64 %3, %71
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %71
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %2, i64 %73, %"class.std::__1::basic_string"* %74, i64 %73)
  %75 = icmp eq i64 %71, 0
  br i1 %75, label %76, label %88

76:                                               ; preds = %156, %70
  %77 = phi %"class.std::__1::basic_string"* [ %72, %70 ], [ %157, %156 ]
  %78 = phi %"class.std::__1::basic_string"* [ %4, %70 ], [ %159, %156 ]
  %79 = icmp eq %"class.std::__1::basic_string"* %77, %1
  br i1 %79, label %161, label %80

80:                                               ; preds = %76, %80
  %81 = phi %"class.std::__1::basic_string"* [ %86, %80 ], [ %78, %76 ]
  %82 = phi %"class.std::__1::basic_string"* [ %85, %80 ], [ %77, %76 ]
  %83 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %84 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 24, i1 false) #12
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %82, i64 1
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 1
  %87 = icmp eq %"class.std::__1::basic_string"* %85, %1
  br i1 %87, label %161, label %80

88:                                               ; preds = %70, %156
  %89 = phi %"class.std::__1::basic_string"* [ %159, %156 ], [ %4, %70 ]
  %90 = phi %"class.std::__1::basic_string"* [ %158, %156 ], [ %0, %70 ]
  %91 = phi %"class.std::__1::basic_string"* [ %157, %156 ], [ %72, %70 ]
  %92 = icmp eq %"class.std::__1::basic_string"* %91, %1
  br i1 %92, label %93, label %103

93:                                               ; preds = %88
  %94 = icmp eq %"class.std::__1::basic_string"* %90, %72
  br i1 %94, label %161, label %95

95:                                               ; preds = %93, %95
  %96 = phi %"class.std::__1::basic_string"* [ %101, %95 ], [ %89, %93 ]
  %97 = phi %"class.std::__1::basic_string"* [ %100, %95 ], [ %90, %93 ]
  %98 = bitcast %"class.std::__1::basic_string"* %96 to i8*
  %99 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #12
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %97, i64 1
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %96, i64 1
  %102 = icmp eq %"class.std::__1::basic_string"* %100, %72
  br i1 %102, label %161, label %95

103:                                              ; preds = %88
  %104 = bitcast %"class.std::__1::basic_string"* %90 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %104, i64 0, i32 1, i32 1
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = zext i8 %106 to i64
  %111 = select i1 %107, i64 %109, i64 %110
  %112 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %113 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %112, i64 0, i32 1, i32 1
  %114 = load i8, i8* %113, align 1
  %115 = icmp slt i8 %114, 0
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  %118 = zext i8 %114 to i64
  %119 = select i1 %115, i64 %117, i64 %118
  %120 = icmp ult i64 %111, %119
  %121 = select i1 %120, i64 %111, i64 %119
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %146, label %123

123:                                              ; preds = %103
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i16*, i16** %124, align 8
  %126 = bitcast %"class.std::__1::basic_string"* %91 to i16*
  %127 = select i1 %115, i16* %125, i16* %126
  %128 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load i16*, i16** %128, align 8
  %130 = bitcast %"class.std::__1::basic_string"* %90 to i16*
  %131 = select i1 %107, i16* %129, i16* %130
  br label %132

132:                                              ; preds = %141, %123
  %133 = phi i64 [ %142, %141 ], [ %121, %123 ]
  %134 = phi i16* [ %144, %141 ], [ %131, %123 ]
  %135 = phi i16* [ %143, %141 ], [ %127, %123 ]
  %136 = load i16, i16* %135, align 2
  %137 = load i16, i16* %134, align 2
  %138 = icmp ult i16 %136, %137
  br i1 %138, label %148, label %139

139:                                              ; preds = %132
  %140 = icmp ult i16 %137, %136
  br i1 %140, label %152, label %141

141:                                              ; preds = %139
  %142 = add i64 %133, -1
  %143 = getelementptr inbounds i16, i16* %135, i64 1
  %144 = getelementptr inbounds i16, i16* %134, i64 1
  %145 = icmp eq i64 %142, 0
  br i1 %145, label %146, label %132

146:                                              ; preds = %141, %103
  %147 = icmp ult i64 %119, %111
  br i1 %147, label %148, label %152

148:                                              ; preds = %132, %146
  %149 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %150 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* align 8 %150, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 24, i1 false) #12
  %151 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 1
  br label %156

152:                                              ; preds = %139, %146
  %153 = bitcast %"class.std::__1::basic_string"* %89 to i8*
  %154 = bitcast %"class.std::__1::basic_string"* %90 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %153, i8* align 8 %154, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 0, i64 24, i1 false) #12
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 1
  br label %156

156:                                              ; preds = %152, %148
  %157 = phi %"class.std::__1::basic_string"* [ %151, %148 ], [ %91, %152 ]
  %158 = phi %"class.std::__1::basic_string"* [ %90, %148 ], [ %155, %152 ]
  %159 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %89, i64 1
  %160 = icmp eq %"class.std::__1::basic_string"* %158, %72
  br i1 %160, label %76, label %88

161:                                              ; preds = %95, %80, %93, %76, %61, %55, %5, %69, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %109, %6
  %9 = phi %"class.std::__1::basic_string"* [ %4, %6 ], [ %112, %109 ]
  %10 = phi %"class.std::__1::basic_string"* [ %2, %6 ], [ %110, %109 ]
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %3
  br i1 %11, label %133, label %114

12:                                               ; preds = %6, %109
  %13 = phi %"class.std::__1::basic_string"* [ %111, %109 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %110, %109 ], [ %2, %6 ]
  %15 = phi %"class.std::__1::basic_string"* [ %112, %109 ], [ %4, %6 ]
  %16 = icmp eq %"class.std::__1::basic_string"* %14, %3
  br i1 %16, label %17, label %38

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::basic_string"* %13, %1
  br i1 %18, label %133, label %19

19:                                               ; preds = %17, %29
  %20 = phi %"class.std::__1::basic_string"* [ %35, %29 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::basic_string"* [ %36, %29 ], [ %15, %17 ]
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = bitcast %"class.std::__1::basic_string"* %21 to i8**
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #14
  br label %29

29:                                               ; preds = %19, %26
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #12
  %32 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 0, i8* %33, align 1
  %34 = bitcast %"class.std::__1::basic_string"* %20 to i16*
  store i16 0, i16* %34, align 2
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 1
  %37 = icmp eq %"class.std::__1::basic_string"* %35, %1
  br i1 %37, label %133, label %19

38:                                               ; preds = %12
  %39 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %39, i64 0, i32 1, i32 1
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = zext i8 %41 to i64
  %46 = select i1 %42, i64 %44, i64 %45
  %47 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %47, i64 0, i32 1, i32 1
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp ult i64 %46, %54
  %56 = select i1 %55, i64 %46, i64 %54
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %81, label %58

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i16*, i16** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  %62 = select i1 %50, i16* %60, i16* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %66 = select i1 %42, i16* %64, i16* %65
  br label %67

67:                                               ; preds = %76, %58
  %68 = phi i64 [ %77, %76 ], [ %56, %58 ]
  %69 = phi i16* [ %79, %76 ], [ %66, %58 ]
  %70 = phi i16* [ %78, %76 ], [ %62, %58 ]
  %71 = load i16, i16* %70, align 2
  %72 = load i16, i16* %69, align 2
  %73 = icmp ult i16 %71, %72
  br i1 %73, label %83, label %74

74:                                               ; preds = %67
  %75 = icmp ult i16 %72, %71
  br i1 %75, label %96, label %76

76:                                               ; preds = %74
  %77 = add i64 %68, -1
  %78 = getelementptr inbounds i16, i16* %70, i64 1
  %79 = getelementptr inbounds i16, i16* %69, i64 1
  %80 = icmp eq i64 %77, 0
  br i1 %80, label %81, label %67

81:                                               ; preds = %76, %38
  %82 = icmp ult i64 %54, %46
  br i1 %82, label %83, label %96

83:                                               ; preds = %67, %81
  %84 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %84, i64 0, i32 1, i32 1
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %83
  %89 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %90 = load i8*, i8** %89, align 8
  tail call void @_ZdlPv(i8* %90) #14
  br label %91

91:                                               ; preds = %83, %88
  %92 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %93 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 24, i1 false) #12
  store i8 0, i8* %48, align 1
  %94 = bitcast %"class.std::__1::basic_string"* %14 to i16*
  store i16 0, i16* %94, align 2
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br label %109

96:                                               ; preds = %74, %81
  %97 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %97, i64 0, i32 1, i32 1
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %96
  %102 = bitcast %"class.std::__1::basic_string"* %15 to i8**
  %103 = load i8*, i8** %102, align 8
  tail call void @_ZdlPv(i8* %103) #14
  br label %104

104:                                              ; preds = %96, %101
  %105 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %106 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %105, i8* align 8 %106, i64 24, i1 false) #12
  store i8 0, i8* %40, align 1
  %107 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  store i16 0, i16* %107, align 2
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  br label %109

109:                                              ; preds = %91, %104
  %110 = phi %"class.std::__1::basic_string"* [ %95, %91 ], [ %14, %104 ]
  %111 = phi %"class.std::__1::basic_string"* [ %13, %91 ], [ %108, %104 ]
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %113 = icmp eq %"class.std::__1::basic_string"* %111, %1
  br i1 %113, label %8, label %12

114:                                              ; preds = %8, %124
  %115 = phi %"class.std::__1::basic_string"* [ %130, %124 ], [ %10, %8 ]
  %116 = phi %"class.std::__1::basic_string"* [ %131, %124 ], [ %9, %8 ]
  %117 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %117, i64 0, i32 1, i32 1
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %114
  %122 = bitcast %"class.std::__1::basic_string"* %116 to i8**
  %123 = load i8*, i8** %122, align 8
  tail call void @_ZdlPv(i8* %123) #14
  br label %124

124:                                              ; preds = %114, %121
  %125 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  %126 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 24, i1 false) #12
  %127 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %127, i64 0, i32 1, i32 1
  store i8 0, i8* %128, align 1
  %129 = bitcast %"class.std::__1::basic_string"* %115 to i16*
  store i16 0, i16* %129, align 2
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 1
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 1
  %132 = icmp eq %"class.std::__1::basic_string"* %130, %3
  br i1 %132, label %133, label %114

133:                                              ; preds = %29, %124, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %338, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %13

13:                                               ; preds = %10, %331
  %14 = phi %"class.std::__1::basic_string"* [ %336, %331 ], [ %2, %10 ]
  %15 = phi i64 [ %335, %331 ], [ %4, %10 ]
  %16 = phi i64 [ %334, %331 ], [ %5, %10 ]
  %17 = phi i64 [ %333, %331 ], [ %11, %10 ]
  %18 = phi i64 [ %332, %331 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %36

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %338, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %26 = inttoptr i64 %17 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = inttoptr i64 %17 to i16*
  br label %39

36:                                               ; preds = %13
  %37 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %38 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"* %37, %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"class.std::__1::basic_string"* %6)
  br label %338

39:                                               ; preds = %24, %77
  %40 = phi i64 [ %15, %24 ], [ %80, %77 ]
  %41 = phi i64 [ %18, %24 ], [ %79, %77 ]
  %42 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %43 = inttoptr i64 %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = icmp ult i64 %50, %33
  %52 = select i1 %51, i64 %50, i64 %33
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %75, label %54

54:                                               ; preds = %39
  %55 = load i16*, i16** %34, align 8
  %56 = select i1 %29, i16* %55, i16* %35
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = inttoptr i64 %41 to i16*
  %60 = select i1 %46, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %70, %54
  %62 = phi i64 [ %71, %70 ], [ %52, %54 ]
  %63 = phi i16* [ %73, %70 ], [ %60, %54 ]
  %64 = phi i16* [ %72, %70 ], [ %56, %54 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp ult i16 %65, %66
  br i1 %67, label %82, label %68

68:                                               ; preds = %61
  %69 = icmp ult i16 %66, %65
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  %71 = add i64 %62, -1
  %72 = getelementptr inbounds i16, i16* %64, i64 1
  %73 = getelementptr inbounds i16, i16* %63, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %70, %39
  %76 = icmp ult i64 %33, %50
  br i1 %76, label %82, label %77

77:                                               ; preds = %68, %75
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %79 = ptrtoint %"class.std::__1::basic_string"* %78 to i64
  %80 = add nsw i64 %40, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %338, label %39

82:                                               ; preds = %75, %61
  %83 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %84 = icmp slt i64 %40, %16
  br i1 %84, label %85, label %155

85:                                               ; preds = %82
  %86 = sdiv i64 %16, 2
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %86
  %88 = sub i64 %17, %41
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %149, label %90

90:                                               ; preds = %85
  %91 = sdiv exact i64 %88, 24
  %92 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %92, i64 0, i32 1, i32 1
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %86, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = zext i8 %94 to i64
  %99 = select i1 %95, i64 %97, i64 %98
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i16*, i16** %100, align 8
  %102 = bitcast %"class.std::__1::basic_string"* %87 to i16*
  %103 = select i1 %95, i16* %101, i16* %102
  br label %104

104:                                              ; preds = %145, %90
  %105 = phi %"class.std::__1::basic_string"* [ %83, %90 ], [ %147, %145 ]
  %106 = phi i64 [ %91, %90 ], [ %146, %145 ]
  %107 = lshr i64 %106, 1
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %107
  %109 = bitcast %"class.std::__1::basic_string"* %108 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %110 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %109, i64 0, i32 1, i32 1
  %111 = load i8, i8* %110, align 1
  %112 = icmp slt i8 %111, 0
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 %107, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = zext i8 %111 to i64
  %116 = select i1 %112, i64 %114, i64 %115
  %117 = icmp ult i64 %116, %99
  %118 = select i1 %117, i64 %116, i64 %99
  %119 = icmp eq i64 %118, 0
  br i1 %119, label %139, label %120

120:                                              ; preds = %104
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load i16*, i16** %121, align 8
  %123 = bitcast %"class.std::__1::basic_string"* %108 to i16*
  %124 = select i1 %112, i16* %122, i16* %123
  br label %125

125:                                              ; preds = %134, %120
  %126 = phi i64 [ %135, %134 ], [ %118, %120 ]
  %127 = phi i16* [ %137, %134 ], [ %124, %120 ]
  %128 = phi i16* [ %136, %134 ], [ %103, %120 ]
  %129 = load i16, i16* %128, align 2
  %130 = load i16, i16* %127, align 2
  %131 = icmp ult i16 %129, %130
  br i1 %131, label %145, label %132

132:                                              ; preds = %125
  %133 = icmp ult i16 %130, %129
  br i1 %133, label %141, label %134

134:                                              ; preds = %132
  %135 = add i64 %126, -1
  %136 = getelementptr inbounds i16, i16* %128, i64 1
  %137 = getelementptr inbounds i16, i16* %127, i64 1
  %138 = icmp eq i64 %135, 0
  br i1 %138, label %139, label %125

139:                                              ; preds = %134, %104
  %140 = icmp ult i64 %99, %116
  br i1 %140, label %145, label %141

141:                                              ; preds = %132, %139
  %142 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %108, i64 1
  %143 = xor i64 %107, -1
  %144 = add i64 %106, %143
  br label %145

145:                                              ; preds = %125, %141, %139
  %146 = phi i64 [ %144, %141 ], [ %107, %139 ], [ %107, %125 ]
  %147 = phi %"class.std::__1::basic_string"* [ %142, %141 ], [ %105, %139 ], [ %105, %125 ]
  %148 = icmp eq i64 %146, 0
  br i1 %148, label %149, label %104

149:                                              ; preds = %145, %85
  %150 = phi %"class.std::__1::basic_string"* [ %83, %85 ], [ %147, %145 ]
  %151 = ptrtoint %"class.std::__1::basic_string"* %150 to i64
  %152 = sub i64 %151, %41
  %153 = sdiv exact i64 %152, 24
  %154 = ptrtoint %"class.std::__1::basic_string"* %87 to i64
  br label %242

155:                                              ; preds = %82
  %156 = icmp eq i64 %40, 1
  br i1 %156, label %157, label %168

157:                                              ; preds = %155
  %158 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %159 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %160 = inttoptr i64 %41 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %158, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %163 = load i64, i64* %162, align 8
  %164 = inttoptr i64 %41 to i8*
  %165 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %164, i8* align 8 %165, i64 24, i1 false) #12
  %166 = inttoptr i64 %17 to i64*
  store i64 %161, i64* %166, align 8
  store i64 %48, i64* %30, align 8
  %167 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %159, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %163, i64* %167, align 8
  br label %338

168:                                              ; preds = %155
  %169 = sdiv i64 %40, 2
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 %169
  %171 = ptrtoint %"class.std::__1::basic_string"* %170 to i64
  %172 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %173 = sub i64 %172, %17
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %236, label %175

175:                                              ; preds = %168
  %176 = sdiv exact i64 %173, 24
  %177 = bitcast %"class.std::__1::basic_string"* %170 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %178 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %177, i64 0, i32 1, i32 1
  %179 = load i8, i8* %178, align 1
  %180 = icmp slt i8 %179, 0
  %181 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %83, i64 %169, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %182 = load i64, i64* %181, align 8
  %183 = zext i8 %179 to i64
  %184 = select i1 %180, i64 %182, i64 %183
  %185 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %170, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load i16*, i16** %185, align 8
  %187 = bitcast %"class.std::__1::basic_string"* %170 to i16*
  %188 = select i1 %180, i16* %186, i16* %187
  br label %189

189:                                              ; preds = %232, %175
  %190 = phi i64 [ 0, %175 ], [ %234, %232 ]
  %191 = phi i64 [ %176, %175 ], [ %233, %232 ]
  %192 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %190
  %193 = lshr i64 %191, 1
  %194 = add nsw i64 %193, %190
  %195 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %194
  %196 = bitcast %"class.std::__1::basic_string"* %195 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %196, i64 0, i32 1, i32 1
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %192, i64 %193, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %201 = load i64, i64* %200, align 8
  %202 = zext i8 %198 to i64
  %203 = select i1 %199, i64 %201, i64 %202
  %204 = icmp ult i64 %184, %203
  %205 = select i1 %204, i64 %184, i64 %203
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %226, label %207

207:                                              ; preds = %189
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %195, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load i16*, i16** %208, align 8
  %210 = bitcast %"class.std::__1::basic_string"* %195 to i16*
  %211 = select i1 %199, i16* %209, i16* %210
  br label %212

212:                                              ; preds = %221, %207
  %213 = phi i64 [ %222, %221 ], [ %205, %207 ]
  %214 = phi i16* [ %224, %221 ], [ %188, %207 ]
  %215 = phi i16* [ %223, %221 ], [ %211, %207 ]
  %216 = load i16, i16* %215, align 2
  %217 = load i16, i16* %214, align 2
  %218 = icmp ult i16 %216, %217
  br i1 %218, label %228, label %219

219:                                              ; preds = %212
  %220 = icmp ult i16 %217, %216
  br i1 %220, label %232, label %221

221:                                              ; preds = %219
  %222 = add i64 %213, -1
  %223 = getelementptr inbounds i16, i16* %215, i64 1
  %224 = getelementptr inbounds i16, i16* %214, i64 1
  %225 = icmp eq i64 %222, 0
  br i1 %225, label %226, label %212

226:                                              ; preds = %221, %189
  %227 = icmp ult i64 %203, %184
  br i1 %227, label %228, label %232

228:                                              ; preds = %212, %226
  %229 = add nsw i64 %194, 1
  %230 = xor i64 %193, -1
  %231 = add i64 %191, %230
  br label %232

232:                                              ; preds = %219, %228, %226
  %233 = phi i64 [ %231, %228 ], [ %193, %226 ], [ %193, %219 ]
  %234 = phi i64 [ %229, %228 ], [ %190, %226 ], [ %190, %219 ]
  %235 = icmp eq i64 %233, 0
  br i1 %235, label %236, label %189

236:                                              ; preds = %232, %168
  %237 = phi i64 [ 0, %168 ], [ %234, %232 ]
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %237
  %239 = ptrtoint %"class.std::__1::basic_string"* %238 to i64
  %240 = sub i64 %239, %17
  %241 = sdiv exact i64 %240, 24
  br label %242

242:                                              ; preds = %236, %149
  %243 = phi i64 [ %239, %236 ], [ %154, %149 ]
  %244 = phi i64 [ %171, %236 ], [ %151, %149 ]
  %245 = phi i64 [ %237, %236 ], [ %86, %149 ]
  %246 = phi i64 [ %241, %236 ], [ %86, %149 ]
  %247 = phi i64 [ %169, %236 ], [ %153, %149 ]
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %245
  %249 = sub nsw i64 %40, %247
  %250 = sub nsw i64 %16, %246
  %251 = inttoptr i64 %244 to %"class.std::__1::basic_string"*
  %252 = icmp eq %"class.std::__1::basic_string"* %25, %251
  br i1 %252, label %323, label %253

253:                                              ; preds = %242
  %254 = icmp eq i64 %245, 0
  br i1 %254, label %323, label %255

255:                                              ; preds = %253
  %256 = inttoptr i64 %244 to i64*
  %257 = load i64, i64* %256, align 8
  %258 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %259 = bitcast i64* %258 to <2 x i64>*
  %260 = load <2 x i64>, <2 x i64>* %259, align 8
  %261 = inttoptr i64 %244 to i8*
  %262 = inttoptr i64 %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %261, i8* align 8 %262, i64 24, i1 false) #12
  %263 = inttoptr i64 %17 to i64*
  store i64 %257, i64* %263, align 8
  %264 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> %260, <2 x i64>* %264, align 8
  %265 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %251, i64 1
  %266 = icmp eq i64 %245, 1
  br i1 %266, label %291, label %267

267:                                              ; preds = %255
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  br label %269

269:                                              ; preds = %267, %269
  %270 = phi %"class.std::__1::basic_string"* [ %288, %269 ], [ %25, %267 ]
  %271 = phi %"class.std::__1::basic_string"* [ %286, %269 ], [ %268, %267 ]
  %272 = phi %"class.std::__1::basic_string"* [ %285, %269 ], [ %265, %267 ]
  %273 = phi i64 [ %276, %269 ], [ %17, %267 ]
  %274 = ptrtoint %"class.std::__1::basic_string"* %271 to i64
  %275 = icmp eq %"class.std::__1::basic_string"* %272, %270
  %276 = select i1 %275, i64 %274, i64 %273
  %277 = bitcast %"class.std::__1::basic_string"* %272 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8
  %279 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"class.std::__1::basic_string"* %272 to i8*
  %282 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %281, i8* align 8 %282, i64 24, i1 false) #12
  %283 = bitcast %"class.std::__1::basic_string"* %271 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %280, i64* %284, align 8
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %272, i64 1
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 1
  %287 = icmp eq %"class.std::__1::basic_string"* %286, %248
  %288 = inttoptr i64 %276 to %"class.std::__1::basic_string"*
  br i1 %287, label %289, label %269

289:                                              ; preds = %269
  %290 = inttoptr i64 %276 to %"class.std::__1::basic_string"*
  br label %291

291:                                              ; preds = %289, %255
  %292 = phi i64 [ %17, %255 ], [ %276, %289 ]
  %293 = phi %"class.std::__1::basic_string"* [ %265, %255 ], [ %285, %289 ]
  %294 = phi %"class.std::__1::basic_string"* [ %25, %255 ], [ %290, %289 ]
  %295 = icmp eq %"class.std::__1::basic_string"* %293, %294
  br i1 %295, label %323, label %296

296:                                              ; preds = %291, %320
  %297 = phi i64 [ %322, %320 ], [ %292, %291 ]
  %298 = phi %"class.std::__1::basic_string"* [ %315, %320 ], [ %293, %291 ]
  %299 = phi i64 [ %321, %320 ], [ %292, %291 ]
  %300 = inttoptr i64 %297 to %"class.std::__1::basic_string"*
  br label %301

301:                                              ; preds = %296, %319
  %302 = phi %"class.std::__1::basic_string"* [ %315, %319 ], [ %298, %296 ]
  %303 = phi i64 [ %297, %319 ], [ %299, %296 ]
  %304 = inttoptr i64 %303 to %"class.std::__1::basic_string"*
  %305 = bitcast %"class.std::__1::basic_string"* %302 to i64*
  %306 = load i64, i64* %305, align 8
  %307 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %308 = bitcast i64* %307 to <2 x i64>*
  %309 = load <2 x i64>, <2 x i64>* %308, align 8
  %310 = bitcast %"class.std::__1::basic_string"* %302 to i8*
  %311 = inttoptr i64 %303 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %310, i8* align 8 %311, i64 24, i1 false) #12
  %312 = inttoptr i64 %303 to i64*
  store i64 %306, i64* %312, align 8
  %313 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %304, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %314 = bitcast i64* %313 to <2 x i64>*
  store <2 x i64> %309, <2 x i64>* %314, align 8
  %315 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %302, i64 1
  %316 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %304, i64 1
  %317 = icmp eq %"class.std::__1::basic_string"* %316, %248
  %318 = icmp eq %"class.std::__1::basic_string"* %315, %300
  br i1 %317, label %319, label %320

319:                                              ; preds = %301
  br i1 %318, label %323, label %301

320:                                              ; preds = %301
  %321 = ptrtoint %"class.std::__1::basic_string"* %316 to i64
  %322 = select i1 %318, i64 %321, i64 %297
  br label %296

323:                                              ; preds = %319, %242, %253, %291
  %324 = phi %"class.std::__1::basic_string"* [ %251, %253 ], [ %248, %242 ], [ %293, %291 ], [ %293, %319 ]
  %325 = add nsw i64 %247, %246
  %326 = add nsw i64 %249, %250
  %327 = icmp slt i64 %325, %326
  br i1 %327, label %328, label %330

328:                                              ; preds = %323
  %329 = ptrtoint %"class.std::__1::basic_string"* %324 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"* %251, %"class.std::__1::basic_string"* %324, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %247, i64 %246, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %331

330:                                              ; preds = %323
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %324, %"class.std::__1::basic_string"* %248, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3, i64 %249, i64 %250, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %331

331:                                              ; preds = %328, %330
  %332 = phi i64 [ %329, %328 ], [ %41, %330 ]
  %333 = phi i64 [ %243, %328 ], [ %244, %330 ]
  %334 = phi i64 [ %250, %328 ], [ %246, %330 ]
  %335 = phi i64 [ %249, %328 ], [ %247, %330 ]
  %336 = phi %"class.std::__1::basic_string"* [ %14, %328 ], [ %324, %330 ]
  %337 = icmp eq i64 %334, 0
  br i1 %337, label %338, label %13

338:                                              ; preds = %331, %22, %77, %8, %157, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %133, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %1
  br i1 %10, label %133, label %11

11:                                               ; preds = %6, %130
  %12 = phi %"class.std::__1::basic_string"* [ %131, %130 ], [ %9, %6 ]
  %13 = phi %"class.std::__1::basic_string"* [ %15, %130 ], [ %2, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %12, %130 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %16 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %23, %31
  %33 = select i1 %32, i64 %23, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %58, label %35

35:                                               ; preds = %11
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i16*, i16** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  %39 = select i1 %27, i16* %37, i16* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i16*, i16** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %13 to i16*
  %43 = select i1 %19, i16* %41, i16* %42
  br label %44

44:                                               ; preds = %53, %35
  %45 = phi i64 [ %54, %53 ], [ %33, %35 ]
  %46 = phi i16* [ %56, %53 ], [ %43, %35 ]
  %47 = phi i16* [ %55, %53 ], [ %39, %35 ]
  %48 = load i16, i16* %47, align 2
  %49 = load i16, i16* %46, align 2
  %50 = icmp ult i16 %48, %49
  br i1 %50, label %60, label %51

51:                                               ; preds = %44
  %52 = icmp ult i16 %49, %48
  br i1 %52, label %127, label %53

53:                                               ; preds = %51
  %54 = add i64 %45, -1
  %55 = getelementptr inbounds i16, i16* %47, i64 1
  %56 = getelementptr inbounds i16, i16* %46, i64 1
  %57 = icmp eq i64 %54, 0
  br i1 %57, label %58, label %44

58:                                               ; preds = %53, %11
  %59 = icmp ult i64 %31, %23
  br i1 %59, label %60, label %127

60:                                               ; preds = %44, %58
  %61 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #12
  %63 = icmp eq %"class.std::__1::basic_string"* %13, %2
  br i1 %63, label %114, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  br label %67

67:                                               ; preds = %64, %109
  %68 = phi %"class.std::__1::basic_string"* [ %13, %64 ], [ %69, %109 ]
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1
  %70 = bitcast %"class.std::__1::basic_string"* %69 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %70, i64 0, i32 1, i32 1
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %68, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = load i8, i8* %25, align 1
  %79 = icmp slt i8 %78, 0
  %80 = load i64, i64* %28, align 8
  %81 = zext i8 %78 to i64
  %82 = select i1 %79, i64 %80, i64 %81
  %83 = icmp ult i64 %77, %82
  %84 = select i1 %83, i64 %77, i64 %82
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %107, label %86

86:                                               ; preds = %67
  %87 = load i16*, i16** %65, align 8
  %88 = select i1 %79, i16* %87, i16* %66
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i16*, i16** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  %92 = select i1 %73, i16* %90, i16* %91
  br label %93

93:                                               ; preds = %102, %86
  %94 = phi i64 [ %103, %102 ], [ %84, %86 ]
  %95 = phi i16* [ %105, %102 ], [ %92, %86 ]
  %96 = phi i16* [ %104, %102 ], [ %88, %86 ]
  %97 = load i16, i16* %96, align 2
  %98 = load i16, i16* %95, align 2
  %99 = icmp ult i16 %97, %98
  br i1 %99, label %109, label %100

100:                                              ; preds = %93
  %101 = icmp ult i16 %98, %97
  br i1 %101, label %114, label %102

102:                                              ; preds = %100
  %103 = add i64 %94, -1
  %104 = getelementptr inbounds i16, i16* %96, i64 1
  %105 = getelementptr inbounds i16, i16* %95, i64 1
  %106 = icmp eq i64 %103, 0
  br i1 %106, label %107, label %93

107:                                              ; preds = %102, %67
  %108 = icmp ult i64 %82, %77
  br i1 %108, label %109, label %114

109:                                              ; preds = %93, %107
  %110 = bitcast %"class.std::__1::basic_string"* %68 to i8*
  %111 = bitcast %"class.std::__1::basic_string"* %69 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #12
  store i8 0, i8* %71, align 1
  %112 = bitcast %"class.std::__1::basic_string"* %69 to i16*
  store i16 0, i16* %112, align 2
  %113 = icmp eq %"class.std::__1::basic_string"* %69, %2
  br i1 %113, label %114, label %67

114:                                              ; preds = %107, %109, %100, %60
  %115 = phi %"class.std::__1::basic_string"* [ %2, %60 ], [ %68, %100 ], [ %68, %107 ], [ %2, %109 ]
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #14
  br label %123

123:                                              ; preds = %114, %120
  %124 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %125 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %124, i8* align 8 %125, i64 24, i1 false) #12
  store i8 0, i8* %25, align 1
  %126 = bitcast %"class.std::__1::basic_string"* %12 to i16*
  store i16 0, i16* %126, align 2
  br label %130

127:                                              ; preds = %51, %58
  %128 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %129 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %128, i8* align 8 %129, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %129, i8 0, i64 24, i1 false) #12
  br label %130

130:                                              ; preds = %127, %123
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %132 = icmp eq %"class.std::__1::basic_string"* %131, %1
  br i1 %132, label %133, label %11

133:                                              ; preds = %130, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator.115", align 8
  %9 = alloca %"class.std::__1::reverse_iterator.115", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %14, label %28, label %36

15:                                               ; preds = %18, %11
  %16 = phi i64 [ 0, %11 ], [ %24, %18 ]
  %17 = phi %"class.std::__1::basic_string"* [ %6, %11 ], [ %26, %18 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1) %3)
  br label %46

18:                                               ; preds = %11, %18
  %19 = phi %"class.std::__1::basic_string"* [ %26, %18 ], [ %6, %11 ]
  %20 = phi %"class.std::__1::basic_string"* [ %25, %18 ], [ %0, %11 ]
  %21 = phi i64 [ %24, %18 ], [ 0, %11 ]
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  %24 = add nuw nsw i64 %21, 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 1
  %27 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %27, label %15, label %18

28:                                               ; preds = %36, %13
  %29 = phi i64 [ 0, %13 ], [ %42, %36 ]
  %30 = phi %"class.std::__1::basic_string"* [ %6, %13 ], [ %44, %36 ]
  %31 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %9, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %34, align 8
  %35 = ptrtoint %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %1, %"class.std::__1::reverse_iterator.115"* nonnull byval(%"class.std::__1::reverse_iterator.115") align 8 %8, %"class.std::__1::reverse_iterator.115"* nonnull byval(%"class.std::__1::reverse_iterator.115") align 8 %9, i64 %35)
  br label %46

36:                                               ; preds = %13, %36
  %37 = phi %"class.std::__1::basic_string"* [ %44, %36 ], [ %6, %13 ]
  %38 = phi %"class.std::__1::basic_string"* [ %43, %36 ], [ %1, %13 ]
  %39 = phi i64 [ %42, %36 ], [ 0, %13 ]
  %40 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  %42 = add nuw nsw i64 %39, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %2
  br i1 %45, label %28, label %36

46:                                               ; preds = %28, %15
  %47 = phi i64 [ %29, %28 ], [ %16, %15 ]
  %48 = icmp eq %"class.std::__1::basic_string"* %6, null
  %49 = icmp eq i64 %47, 0
  %50 = or i1 %48, %49
  br i1 %50, label %67, label %51

51:                                               ; preds = %46, %62
  %52 = phi i64 [ %63, %62 ], [ %47, %46 ]
  %53 = phi i64 [ %64, %62 ], [ 0, %46 ]
  %54 = phi %"class.std::__1::basic_string"* [ %65, %62 ], [ %6, %46 ]
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %55, i64 0, i32 1, i32 1
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = bitcast %"class.std::__1::basic_string"* %54 to i8**
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #14
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i64 [ %52, %51 ], [ %47, %59 ]
  %64 = add nuw i64 %53, 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %66 = icmp ult i64 %64, %63
  br i1 %66, label %51, label %67

67:                                               ; preds = %62, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >, std::__1::allocator<std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %108, label %8

8:                                                ; preds = %6, %103
  %9 = phi %"class.std::__1::basic_string"* [ %105, %103 ], [ %0, %6 ]
  %10 = phi %"class.std::__1::basic_string"* [ %106, %103 ], [ %4, %6 ]
  %11 = phi %"class.std::__1::basic_string"* [ %104, %103 ], [ %2, %6 ]
  %12 = icmp eq %"class.std::__1::basic_string"* %11, %3
  br i1 %12, label %13, label %32

13:                                               ; preds = %8, %23
  %14 = phi %"class.std::__1::basic_string"* [ %30, %23 ], [ %10, %8 ]
  %15 = phi %"class.std::__1::basic_string"* [ %29, %23 ], [ %9, %8 ]
  %16 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = bitcast %"class.std::__1::basic_string"* %14 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #14
  br label %23

23:                                               ; preds = %20, %13
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  %26 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  store i8 0, i8* %27, align 1
  %28 = bitcast %"class.std::__1::basic_string"* %15 to i16*
  store i16 0, i16* %28, align 2
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  %31 = icmp eq %"class.std::__1::basic_string"* %29, %1
  br i1 %31, label %108, label %13

32:                                               ; preds = %8
  %33 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %33, i64 0, i32 1, i32 1
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = icmp ult i64 %40, %48
  %50 = select i1 %49, i64 %40, i64 %48
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %75, label %52

52:                                               ; preds = %32
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i16*, i16** %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  %56 = select i1 %44, i16* %54, i16* %55
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i16*, i16** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  %60 = select i1 %36, i16* %58, i16* %59
  br label %61

61:                                               ; preds = %70, %52
  %62 = phi i64 [ %71, %70 ], [ %50, %52 ]
  %63 = phi i16* [ %73, %70 ], [ %60, %52 ]
  %64 = phi i16* [ %72, %70 ], [ %56, %52 ]
  %65 = load i16, i16* %64, align 2
  %66 = load i16, i16* %63, align 2
  %67 = icmp ult i16 %65, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %61
  %69 = icmp ult i16 %66, %65
  br i1 %69, label %90, label %70

70:                                               ; preds = %68
  %71 = add i64 %62, -1
  %72 = getelementptr inbounds i16, i16* %64, i64 1
  %73 = getelementptr inbounds i16, i16* %63, i64 1
  %74 = icmp eq i64 %71, 0
  br i1 %74, label %75, label %61

75:                                               ; preds = %70, %32
  %76 = icmp ult i64 %48, %40
  br i1 %76, label %77, label %90

77:                                               ; preds = %61, %75
  %78 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %85

82:                                               ; preds = %77
  %83 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %84 = load i8*, i8** %83, align 8
  tail call void @_ZdlPv(i8* %84) #14
  br label %85

85:                                               ; preds = %77, %82
  %86 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %87 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %86, i8* align 8 %87, i64 24, i1 false) #12
  store i8 0, i8* %42, align 1
  %88 = bitcast %"class.std::__1::basic_string"* %11 to i16*
  store i16 0, i16* %88, align 2
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 1
  br label %103

90:                                               ; preds = %68, %75
  %91 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %91, i64 0, i32 1, i32 1
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %95, label %98

95:                                               ; preds = %90
  %96 = bitcast %"class.std::__1::basic_string"* %10 to i8**
  %97 = load i8*, i8** %96, align 8
  tail call void @_ZdlPv(i8* %97) #14
  br label %98

98:                                               ; preds = %90, %95
  %99 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %100 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %99, i8* align 8 %100, i64 24, i1 false) #12
  store i8 0, i8* %34, align 1
  %101 = bitcast %"class.std::__1::basic_string"* %9 to i16*
  store i16 0, i16* %101, align 2
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 1
  br label %103

103:                                              ; preds = %85, %98
  %104 = phi %"class.std::__1::basic_string"* [ %89, %85 ], [ %11, %98 ]
  %105 = phi %"class.std::__1::basic_string"* [ %9, %85 ], [ %102, %98 ]
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 1
  %107 = icmp eq %"class.std::__1::basic_string"* %105, %1
  br i1 %107, label %108, label %8

108:                                              ; preds = %103, %23, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIDsNS_11char_traitsIDsEENS_9allocatorIDsEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::reverse_iterator.115"* byval(%"class.std::__1::reverse_iterator.115") align 8, %"class.std::__1::reverse_iterator.115"* byval(%"class.std::__1::reverse_iterator.115") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = icmp eq %"class.std::__1::basic_string"* %1, %3
  br i1 %10, label %119, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %6, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.115", %"class.std::__1::reverse_iterator.115"* %7, i64 0, i32 1, i32 0
  br label %14

14:                                               ; preds = %11, %107
  %15 = phi %"class.std::__1::basic_string"* [ %1, %11 ], [ %112, %107 ]
  %16 = phi %"class.std::__1::basic_string"* [ %5, %11 ], [ %111, %107 ]
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %16, %17
  br i1 %18, label %19, label %40

19:                                               ; preds = %14
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  br label %21

21:                                               ; preds = %19, %33
  %22 = phi %"class.std::__1::basic_string"* [ %24, %33 ], [ %15, %19 ]
  %23 = phi %"class.std::__1::basic_string"* [ %25, %33 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %26, i64 0, i32 1, i32 1
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = bitcast %"class.std::__1::basic_string"* %25 to i8**
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #14
  br label %33

33:                                               ; preds = %30, %21
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #12
  %36 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %36, i64 0, i32 1, i32 1
  store i8 0, i8* %37, align 1
  %38 = bitcast %"class.std::__1::basic_string"* %24 to i16*
  store i16 0, i16* %38, align 2
  %39 = icmp eq %"class.std::__1::basic_string"* %24, %3
  br i1 %39, label %119, label %21

40:                                               ; preds = %14
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %43 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %43, i64 0, i32 1, i32 1
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = bitcast %"class.std::__1::basic_string"* %42 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %51, i64 0, i32 1, i32 1
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = zext i8 %53 to i64
  %58 = select i1 %54, i64 %56, i64 %57
  %59 = icmp ult i64 %50, %58
  %60 = select i1 %59, i64 %50, i64 %58
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %85, label %62

62:                                               ; preds = %40
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i16*, i16** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %42 to i16*
  %66 = select i1 %54, i16* %64, i16* %65
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i16*, i16** %67, align 8
  %69 = bitcast %"class.std::__1::basic_string"* %41 to i16*
  %70 = select i1 %46, i16* %68, i16* %69
  br label %71

71:                                               ; preds = %80, %62
  %72 = phi i64 [ %81, %80 ], [ %60, %62 ]
  %73 = phi i16* [ %83, %80 ], [ %70, %62 ]
  %74 = phi i16* [ %82, %80 ], [ %66, %62 ]
  %75 = load i16, i16* %74, align 2
  %76 = load i16, i16* %73, align 2
  %77 = icmp ult i16 %75, %76
  br i1 %77, label %87, label %78

78:                                               ; preds = %71
  %79 = icmp ult i16 %76, %75
  br i1 %79, label %97, label %80

80:                                               ; preds = %78
  %81 = add i64 %72, -1
  %82 = getelementptr inbounds i16, i16* %74, i64 1
  %83 = getelementptr inbounds i16, i16* %73, i64 1
  %84 = icmp eq i64 %81, 0
  br i1 %84, label %85, label %71

85:                                               ; preds = %80, %40
  %86 = icmp ult i64 %58, %50
  br i1 %86, label %87, label %97

87:                                               ; preds = %71, %85
  %88 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %88, i64 -1
  %90 = bitcast %"class.std::__1::basic_string"* %89 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %90, i64 0, i32 1, i32 1
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %107

94:                                               ; preds = %87
  %95 = bitcast %"class.std::__1::basic_string"* %89 to i8**
  %96 = load i8*, i8** %95, align 8
  tail call void @_ZdlPv(i8* %96) #14
  br label %107

97:                                               ; preds = %78, %85
  %98 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %100, i64 0, i32 1, i32 1
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = bitcast %"class.std::__1::basic_string"* %99 to i8**
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #14
  br label %107

107:                                              ; preds = %104, %97, %94, %87
  %108 = phi %"class.std::__1::basic_string"* [ %89, %87 ], [ %89, %94 ], [ %99, %97 ], [ %99, %104 ]
  %109 = phi %"class.std::__1::basic_string"* [ %41, %87 ], [ %41, %94 ], [ %42, %97 ], [ %42, %104 ]
  %110 = phi i8* [ %44, %87 ], [ %44, %94 ], [ %52, %97 ], [ %52, %104 ]
  %111 = phi %"class.std::__1::basic_string"* [ %41, %87 ], [ %41, %94 ], [ %16, %97 ], [ %16, %104 ]
  %112 = phi %"class.std::__1::basic_string"* [ %15, %87 ], [ %15, %94 ], [ %42, %97 ], [ %42, %104 ]
  %113 = bitcast %"class.std::__1::basic_string"* %108 to i8*
  %114 = bitcast %"class.std::__1::basic_string"* %109 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %113, i8* align 8 %114, i64 24, i1 false) #12
  store i8 0, i8* %110, align 1
  %115 = bitcast %"class.std::__1::basic_string"* %109 to i16*
  store i16 0, i16* %115, align 2
  %116 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %116, i64 -1
  store %"class.std::__1::basic_string"* %117, %"class.std::__1::basic_string"** %13, align 8
  %118 = icmp eq %"class.std::__1::basic_string"* %112, %3
  br i1 %118, label %119, label %14

119:                                              ; preds = %107, %33, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN8autofill12_GLOBAL__N_124CheckFieldWithDictionaryERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKN4base8internal9flat_treeIS7_NSA_8identityENS1_4lessIvEENS1_6vectorIS7_NS5_IS7_EEEEEEPKPKcRKm(%"class.std::__1::basic_string"* dereferenceable(24), %"class.base::internal::flat_tree"* dereferenceable(24), i8** nocapture readonly, i64* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = load i64, i64* %3, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %124, label %9

9:                                                ; preds = %4
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.logging::CheckError"* %5 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %16, i64 0, i32 1, i32 1
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %20 = bitcast %"class.std::__1::basic_string"* %6 to i16*
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %1, i64 0, i32 0, i32 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8**
  %24 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %28

25:                                               ; preds = %121
  %26 = load i64, i64* %3, align 8
  %27 = icmp ult i64 %123, %26
  br i1 %27, label %28, label %124

28:                                               ; preds = %9, %25
  %29 = phi i64 [ 0, %9 ], [ %123, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #12
  %30 = getelementptr inbounds i8*, i8** %2, i64 %29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  %31 = load i8*, i8** %30, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %28
  %34 = call i64 @strlen(i8* nonnull %31) #12
  br label %37

35:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.1, i64 0, i64 0), i32 125, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #12
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  br label %37

37:                                               ; preds = %33, %35
  %38 = phi i64 [ 0, %35 ], [ %34, %33 ]
  call void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* nonnull sret %6, i8* %31, i64 %38) #12
  %39 = load i8, i8* %15, align 1
  %40 = icmp slt i8 %39, 0
  %41 = load i64, i64* %12, align 8
  %42 = zext i8 %39 to i64
  %43 = select i1 %40, i64 %41, i64 %42
  %44 = icmp ult i64 %43, 4
  br i1 %44, label %45, label %53

45:                                               ; preds = %37
  %46 = call { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %47 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %46, 0
  %48 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %46, 1
  %49 = icmp eq %"class.std::__1::basic_string"* %47, %48
  %50 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %22, align 8
  %51 = select i1 %49, %"class.std::__1::basic_string"* %50, %"class.std::__1::basic_string"* %47
  %52 = icmp eq %"class.std::__1::basic_string"* %51, %50
  br i1 %52, label %114, label %115

53:                                               ; preds = %37
  %54 = load i8, i8* %17, align 1
  %55 = icmp slt i8 %54, 0
  %56 = load i16*, i16** %18, align 8
  %57 = select i1 %55, i16* %56, i16* %19
  %58 = load i16*, i16** %11, align 8
  %59 = select i1 %40, i16* %58, i16* %20
  %60 = load i64, i64* %21, align 8
  %61 = zext i8 %54 to i64
  %62 = select i1 %55, i64 %60, i64 %61
  %63 = getelementptr inbounds i16, i16* %57, i64 %62
  %64 = shl nuw i64 %43, 1
  %65 = ashr exact i64 %64, 1
  %66 = ptrtoint i16* %63 to i64
  %67 = ptrtoint i16* %57 to i64
  %68 = shl nuw i64 %62, 1
  %69 = ashr exact i64 %68, 1
  %70 = icmp slt i64 %69, %65
  br i1 %70, label %114, label %71

71:                                               ; preds = %53
  %72 = load i16, i16* %59, align 2
  br label %73

73:                                               ; preds = %102, %71
  %74 = phi i64 [ %69, %71 ], [ %106, %102 ]
  %75 = phi i16* [ %57, %71 ], [ %103, %102 ]
  %76 = sub nsw i64 %74, %65
  %77 = add nsw i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %114, label %79

79:                                               ; preds = %73, %84
  %80 = phi i64 [ %86, %84 ], [ %77, %73 ]
  %81 = phi i16* [ %85, %84 ], [ %75, %73 ]
  %82 = load i16, i16* %81, align 2
  %83 = icmp eq i16 %82, %72
  br i1 %83, label %88, label %84

84:                                               ; preds = %79
  %85 = getelementptr inbounds i16, i16* %81, i64 1
  %86 = add i64 %80, -1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %114, label %79

88:                                               ; preds = %79
  %89 = icmp eq i16* %81, null
  br i1 %89, label %114, label %90

90:                                               ; preds = %88, %97
  %91 = phi i16* [ %95, %97 ], [ %81, %88 ]
  %92 = phi i16* [ %98, %97 ], [ %59, %88 ]
  %93 = phi i64 [ %94, %97 ], [ %65, %88 ]
  %94 = add i64 %93, -1
  %95 = getelementptr inbounds i16, i16* %91, i64 1
  %96 = icmp eq i64 %94, 0
  br i1 %96, label %108, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds i16, i16* %92, i64 1
  %99 = load i16, i16* %95, align 2
  %100 = load i16, i16* %98, align 2
  %101 = icmp eq i16 %100, %99
  br i1 %101, label %90, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds i16, i16* %81, i64 1
  %104 = ptrtoint i16* %103 to i64
  %105 = sub i64 %66, %104
  %106 = ashr exact i64 %105, 1
  %107 = icmp slt i64 %106, %65
  br i1 %107, label %114, label %73

108:                                              ; preds = %90
  %109 = ptrtoint i16* %81 to i64
  %110 = icmp eq i16* %81, %63
  %111 = sub i64 %109, %67
  %112 = icmp eq i64 %111, -2
  %113 = or i1 %110, %112
  br i1 %113, label %114, label %115

114:                                              ; preds = %102, %88, %73, %84, %45, %53, %108
  br label %115

115:                                              ; preds = %45, %108, %114
  %116 = phi i32 [ 0, %114 ], [ 1, %45 ], [ 1, %108 ]
  %117 = load i8, i8* %15, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %120) #14
  br label %121

121:                                              ; preds = %115, %119
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #12
  %122 = icmp eq i32 %116, 0
  %123 = add nuw i64 %29, 1
  br i1 %122, label %25, label %124

124:                                              ; preds = %121, %25, %4
  %125 = phi i1 [ false, %4 ], [ false, %25 ], [ true, %121 ]
  ret i1 %125
}

declare void @_ZN4base11UTF8ToUTF16ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.std::__1::basic_string"* sret, i8*, i64) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIDsNS2_11char_traitsIDsEENS2_9allocatorIDsEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree", %"class.base::internal::flat_tree"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %73, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %14, i64 0, i32 1, i32 1
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i16*, i16** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %25 = select i1 %17, i16* %23, i16* %24
  br label %26

26:                                               ; preds = %67, %12
  %27 = phi %"class.std::__1::basic_string"* [ %4, %12 ], [ %69, %67 ]
  %28 = phi i64 [ %13, %12 ], [ %68, %67 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %31, i64 0, i32 1, i32 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp ult i64 %21, %38
  %40 = select i1 %39, i64 %21, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %61, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i16*, i16** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %30 to i16*
  %46 = select i1 %34, i16* %44, i16* %45
  br label %47

47:                                               ; preds = %56, %42
  %48 = phi i64 [ %57, %56 ], [ %40, %42 ]
  %49 = phi i16* [ %59, %56 ], [ %25, %42 ]
  %50 = phi i16* [ %58, %56 ], [ %46, %42 ]
  %51 = load i16, i16* %50, align 2
  %52 = load i16, i16* %49, align 2
  %53 = icmp ult i16 %51, %52
  br i1 %53, label %63, label %54

54:                                               ; preds = %47
  %55 = icmp ult i16 %52, %51
  br i1 %55, label %67, label %56

56:                                               ; preds = %54
  %57 = add i64 %48, -1
  %58 = getelementptr inbounds i16, i16* %50, i64 1
  %59 = getelementptr inbounds i16, i16* %49, i64 1
  %60 = icmp eq i64 %57, 0
  br i1 %60, label %61, label %47

61:                                               ; preds = %56, %26
  %62 = icmp ult i64 %38, %21
  br i1 %62, label %63, label %67

63:                                               ; preds = %47, %61
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %65 = xor i64 %29, -1
  %66 = add i64 %28, %65
  br label %67

67:                                               ; preds = %54, %63, %61
  %68 = phi i64 [ %66, %63 ], [ %29, %61 ], [ %29, %54 ]
  %69 = phi %"class.std::__1::basic_string"* [ %64, %63 ], [ %27, %61 ], [ %27, %54 ]
  %70 = icmp eq i64 %68, 0
  br i1 %70, label %71, label %26

71:                                               ; preds = %67
  %72 = ptrtoint %"class.std::__1::basic_string"* %69 to i64
  br label %73

73:                                               ; preds = %71, %2
  %74 = phi i64 [ %72, %71 ], [ %8, %2 ]
  %75 = phi %"class.std::__1::basic_string"* [ %69, %71 ], [ %4, %2 ]
  %76 = icmp eq %"class.std::__1::basic_string"* %75, %11
  br i1 %76, label %125, label %77

77:                                               ; preds = %73
  %78 = bitcast %"class.std::__1::basic_string"* %75 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %78, i64 0, i32 1, i32 1
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = zext i8 %80 to i64
  %85 = select i1 %81, i64 %83, i64 %84
  %86 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %86, i64 0, i32 1, i32 1
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = zext i8 %88 to i64
  %93 = select i1 %89, i64 %91, i64 %92
  %94 = icmp ult i64 %85, %93
  %95 = select i1 %94, i64 %85, i64 %93
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %120, label %97

97:                                               ; preds = %77
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i16*, i16** %98, align 8
  %100 = bitcast %"class.std::__1::basic_string"* %1 to i16*
  %101 = select i1 %89, i16* %99, i16* %100
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load i16*, i16** %102, align 8
  %104 = bitcast %"class.std::__1::basic_string"* %75 to i16*
  %105 = select i1 %81, i16* %103, i16* %104
  br label %106

106:                                              ; preds = %115, %97
  %107 = phi i64 [ %116, %115 ], [ %95, %97 ]
  %108 = phi i16* [ %118, %115 ], [ %105, %97 ]
  %109 = phi i16* [ %117, %115 ], [ %101, %97 ]
  %110 = load i16, i16* %109, align 2
  %111 = load i16, i16* %108, align 2
  %112 = icmp ult i16 %110, %111
  br i1 %112, label %125, label %113

113:                                              ; preds = %106
  %114 = icmp ult i16 %111, %110
  br i1 %114, label %122, label %115

115:                                              ; preds = %113
  %116 = add i64 %107, -1
  %117 = getelementptr inbounds i16, i16* %109, i64 1
  %118 = getelementptr inbounds i16, i16* %108, i64 1
  %119 = icmp eq i64 %116, 0
  br i1 %119, label %120, label %106

120:                                              ; preds = %115, %77
  %121 = icmp ult i64 %93, %85
  br i1 %121, label %125, label %122

122:                                              ; preds = %113, %120
  %123 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %75, i64 1
  %124 = ptrtoint %"class.std::__1::basic_string"* %123 to i64
  br label %125

125:                                              ; preds = %106, %120, %73, %122
  %126 = phi i64 [ %124, %122 ], [ %74, %73 ], [ %74, %120 ], [ %74, %106 ]
  %127 = insertvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } undef, %"class.std::__1::basic_string"* %75, 0
  %128 = inttoptr i64 %126 to %"class.std::__1::basic_string"*
  %129 = insertvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %127, %"class.std::__1::basic_string"* %128, 1
  ret { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %129
}

declare i32 @_ZNK5blink21WebFormControlElement27UniqueRendererFormControlIdEv(%"class.blink::WebFormControlElement"*) local_unnamed_addr #2

declare void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14WebFormElementD0Ev(%"class.blink::WebFormElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5blink14WebFormElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WebFormElement", %"class.blink::WebFormElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink7WebNode5ResetEv(%"class.blink::WebNode"* %3) #12
  tail call void @_ZN5blink7WebNodeD2Ev(%"class.blink::WebNode"* %3) #12
  %4 = bitcast %"class.blink::WebFormElement"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #14
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_out_of_rangeEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !141
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !141
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !141
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill14FormRendererIdENS_6vectorINS2_15FieldRendererIdENS_9allocatorIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS6_IS9_EEE16__construct_nodeIJS3_S8_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISK_EEEEEEDpOT_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__16__treeINS_12__value_typeIN8autofill14FormRendererIdENS_6vectorINS2_15FieldRendererIdENS_9allocatorIS5_EEEEEENS_19__map_value_compareIS3_S9_NS_4lessIS3_EELb1EEENS6_IS9_EEE16__construct_nodeIJS3_S8_EEENS_10unique_ptrINS_11__tree_nodeIS9_PvEENS_22__tree_node_destructorINS6_ISK_EEEEEEDpOT_"}
!5 = !{!"branch_weights", i32 1, i32 1048575}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink9WebString5Utf16Ev: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink9WebString5Utf16Ev"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8autofill12_GLOBAL__N_124ComputeUsernameFieldDataERKN5blink15WebInputElementERKNS_13FormFieldDataE: argument 0"}
!11 = distinct !{!11, !"_ZN8autofill12_GLOBAL__N_124ComputeUsernameFieldDataERKN5blink15WebInputElementERKNS_13FormFieldDataE"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!15 = !{!16}
!16 = distinct !{!16, !17}
!17 = distinct !{!17, !"LVerDomain"}
!18 = !{!19}
!19 = distinct !{!19, !17}
!20 = distinct !{!20, !21}
!21 = !{!"llvm.loop.isvectorized", i32 1}
!22 = distinct !{!22, !23}
!23 = !{!"llvm.loop.unroll.disable"}
!24 = distinct !{!24, !23}
!25 = distinct !{!25, !21}
!26 = !{!27}
!27 = distinct !{!27, !28}
!28 = distinct !{!28, !"LVerDomain"}
!29 = !{!30}
!30 = distinct !{!30, !28}
!31 = distinct !{!31, !21}
!32 = distinct !{!32, !23}
!33 = distinct !{!33, !23}
!34 = distinct !{!34, !21}
!35 = !{!36}
!36 = distinct !{!36, !37}
!37 = distinct !{!37, !"LVerDomain"}
!38 = !{!39}
!39 = distinct !{!39, !37}
!40 = distinct !{!40, !21}
!41 = distinct !{!41, !23}
!42 = distinct !{!42, !23}
!43 = distinct !{!43, !21}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !21}
!50 = distinct !{!50, !23}
!51 = distinct !{!51, !23}
!52 = distinct !{!52, !21}
!53 = !{!54}
!54 = distinct !{!54, !55}
!55 = distinct !{!55, !"LVerDomain"}
!56 = !{!57}
!57 = distinct !{!57, !55}
!58 = distinct !{!58, !21}
!59 = distinct !{!59, !23}
!60 = distinct !{!60, !23}
!61 = distinct !{!61, !21}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!64 = distinct !{!64, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!65 = !{!66}
!66 = distinct !{!66, !67}
!67 = distinct !{!67, !"LVerDomain"}
!68 = !{!69}
!69 = distinct !{!69, !67}
!70 = distinct !{!70, !21}
!71 = distinct !{!71, !23}
!72 = distinct !{!72, !23}
!73 = distinct !{!73, !21}
!74 = !{!75}
!75 = distinct !{!75, !76}
!76 = distinct !{!76, !"LVerDomain"}
!77 = !{!78}
!78 = distinct !{!78, !76}
!79 = distinct !{!79, !21}
!80 = distinct !{!80, !23}
!81 = distinct !{!81, !23}
!82 = distinct !{!82, !21}
!83 = distinct !{!83, !21}
!84 = distinct !{!84, !23}
!85 = distinct !{!85, !86, !21}
!86 = !{!"llvm.loop.unroll.runtime.disable"}
!87 = !{!88}
!88 = distinct !{!88, !89}
!89 = distinct !{!89, !"LVerDomain"}
!90 = !{!91}
!91 = distinct !{!91, !89}
!92 = distinct !{!92, !21}
!93 = distinct !{!93, !23}
!94 = distinct !{!94, !23}
!95 = distinct !{!95, !21}
!96 = !{!97}
!97 = distinct !{!97, !98}
!98 = distinct !{!98, !"LVerDomain"}
!99 = !{!100}
!100 = distinct !{!100, !98}
!101 = distinct !{!101, !21}
!102 = distinct !{!102, !23}
!103 = distinct !{!103, !23}
!104 = distinct !{!104, !21}
!105 = !{!106}
!106 = distinct !{!106, !107}
!107 = distinct !{!107, !"LVerDomain"}
!108 = !{!109}
!109 = distinct !{!109, !107}
!110 = distinct !{!110, !21}
!111 = distinct !{!111, !23}
!112 = distinct !{!112, !23}
!113 = distinct !{!113, !21}
!114 = !{!115}
!115 = distinct !{!115, !116}
!116 = distinct !{!116, !"LVerDomain"}
!117 = !{!118}
!118 = distinct !{!118, !116}
!119 = distinct !{!119, !21}
!120 = distinct !{!120, !23}
!121 = distinct !{!121, !23}
!122 = distinct !{!122, !21}
!123 = !{!124}
!124 = distinct !{!124, !125}
!125 = distinct !{!125, !"LVerDomain"}
!126 = !{!127}
!127 = distinct !{!127, !125}
!128 = distinct !{!128, !21}
!129 = distinct !{!129, !23}
!130 = distinct !{!130, !23}
!131 = distinct !{!131, !21}
!132 = !{!133}
!133 = distinct !{!133, !134}
!134 = distinct !{!134, !"LVerDomain"}
!135 = !{!136}
!136 = distinct !{!136, !134}
!137 = distinct !{!137, !21}
!138 = distinct !{!138, !23}
!139 = distinct !{!139, !23}
!140 = distinct !{!140, !21}
!141 = !{i8 0, i8 2}
