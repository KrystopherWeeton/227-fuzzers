; ModuleID = '../../ui/views/widget/desktop_aura/desktop_screen_position_client.cc'
source_filename = "../../ui/views/widget/desktop_aura/desktop_screen_position_client.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.views::DesktopScreenPositionClient" = type { %"class.wm::DefaultScreenPositionClient" }
%"class.wm::DefaultScreenPositionClient" = type { %"class.aura::client::ScreenPositionClient", %"class.aura::Window"* }
%"class.aura::client::ScreenPositionClient" = type { i32 (...)** }
%"class.aura::Window" = type { %"class.ui::LayerDelegate", %"class.ui::LayerOwner", %"class.ui::EventTarget", %"class.ui::GestureConsumer", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", %"class.viz::HostFrameSinkClient", %"class.gfx::Rect", %"class.aura::WindowTreeHost"*, i32, i8, i8, %"class.aura::WindowDelegate"*, %"class.aura::Window"*, %"class.std::__1::vector.49", i8, i32, %class.SkRegion, i32, i8, i8, %"class.std::__1::unique_ptr.56", %"class.std::__1::unique_ptr.62", %"class.std::__1::vector.68", i32, i32, i32, [4 x i8], %"class.base::ObserverList.75", i32, %"class.viz::SubtreeCaptureId", float, %"class.viz::FrameSinkId", i8, i8, i8, %"class.std::__1::unique_ptr.92", %"class.base::WeakPtr.98" }
%"class.ui::LayerDelegate" = type { i32 (...)** }
%"class.ui::LayerOwner" = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.ui::Layer"*, %"class.base::ObserverList" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ui::Layer"* }
%"class.ui::Layer" = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.1" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.ui::EventTarget" = type { i32 (...)**, %"class.std::__1::vector.4", %"class.std::__1::vector.20", %"class.ui::EventHandler"* }
%"class.std::__1::vector.4" = type { %"class.std::__1::__vector_base.5" }
%"class.std::__1::__vector_base.5" = type { %"struct.ui::EventTarget::PrioritizedHandler"*, %"struct.ui::EventTarget::PrioritizedHandler"*, %"class.std::__1::__compressed_pair.27" }
%"struct.ui::EventTarget::PrioritizedHandler" = type <{ %"class.ui::EventHandler"*, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"struct.ui::EventTarget::PrioritizedHandler"* }
%"class.std::__1::vector.20" = type { %"class.std::__1::__vector_base.21" }
%"class.std::__1::__vector_base.21" = type { %"class.ui::EventHandler"**, %"class.ui::EventHandler"**, %"class.std::__1::__compressed_pair.22" }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.ui::EventHandler"** }
%"class.ui::EventHandler" = type { i32 (...)**, %"class.std::__1::stack" }
%"class.std::__1::stack" = type { %"class.base::circular_deque" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.ui::EventDispatcher"**, i64 }
%"class.ui::EventDispatcher" = type { i32 (...)**, %"class.ui::EventDispatcherDelegate"*, %"class.ui::Event"*, %"class.std::__1::vector.20" }
%"class.ui::EventDispatcherDelegate" = type { i32 (...)**, %"class.ui::EventDispatcher"* }
%"class.ui::Event" = type { i32 (...)**, i32, %"class.base::TimeTicks", %"class.ui::LatencyInfo", i32, %"class.ui::Event"*, i8, i8, %"class.ui::EventTarget"*, i32, i32, i32, %"class.std::__1::unique_ptr.13" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.ui::LatencyInfo" = type { %"class.base::flat_map", i64, i64, i8, i8, i8, i32, float, float, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.6" }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.8" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.base::flat_map.16"* }
%"class.base::flat_map.16" = type opaque
%"class.ui::GestureConsumer" = type { i32 (...)** }
%"class.ui::PropertyHandler" = type { i32 (...)**, %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.32", %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { i64 }
%"class.ui::metadata::MetaDataProvider" = type { i32 (...)**, %"class.std::__1::map.40" }
%"class.std::__1::map.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.viz::HostFrameSinkClient" = type { i32 (...)** }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.aura::WindowTreeHost" = type opaque
%"class.aura::WindowDelegate" = type { %"class.ui::EventHandler" }
%"class.std::__1::vector.49" = type { %"class.std::__1::__vector_base.50" }
%"class.std::__1::__vector_base.50" = type { %"class.aura::Window"**, %"class.aura::Window"**, %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.aura::Window"** }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkRegion::RunHead" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.aura::LayoutManager"* }
%"class.aura::LayoutManager" = type opaque
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.aura::WindowTargeter"* }
%"class.aura::WindowTargeter" = type opaque
%"class.std::__1::vector.68" = type { %"class.std::__1::__vector_base.69" }
%"class.std::__1::__vector_base.69" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.gfx::Rect"* }
%"class.base::ObserverList.75" = type <{ %"class.std::__1::vector.76", %"class.base::LinkedList.89", i64, i32, [4 x i8] }>
%"class.std::__1::vector.76" = type { %"class.std::__1::__vector_base.77" }
%"class.std::__1::__vector_base.77" = type { %"class.base::internal::CheckedObserverAdapter"*, %"class.base::internal::CheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.84" }
%"class.base::internal::CheckedObserverAdapter" = type { %"class.base::WeakPtr" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.78" }
%"struct.std::__1::__atomic_base.78" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i8 }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.85" }
%"struct.std::__1::__compressed_pair_elem.85" = type { %"class.base::internal::CheckedObserverAdapter"* }
%"class.base::LinkedList.89" = type { %"class.base::LinkNode.90" }
%"class.base::LinkNode.90" = type { %"class.base::internal::LinkNodeBase" }
%"class.viz::SubtreeCaptureId" = type { i32 }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.viz::ParentLocalSurfaceIdAllocator"* }
%"class.viz::ParentLocalSurfaceIdAllocator" = type opaque
%"class.base::WeakPtr.98" = type { %"class.base::internal::WeakPtrBase" }
%"class.display::Display" = type opaque
%"class.views::DesktopNativeWidgetAura" = type { %"class.views::internal::NativeWidgetPrivate", %"class.aura::WindowDelegate", %"class.wm::ActivationDelegate", %"class.wm::ActivationChangeObserver", %"class.aura::client::FocusChangeObserver", %"class.aura::client::DragDropDelegate", %"class.aura::WindowTreeHostObserver", %"class.std::__1::unique_ptr.99", %"class.views::DesktopWindowTreeHost"*, i32, %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.110", %"class.aura::Window"*, %"class.views::internal::NativeWidgetDelegate"*, %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.140", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.162", i32, %"class.std::__1::unique_ptr.168", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", i8, %"class.ui::Cursor", %"class.std::__1::unique_ptr.195", %"class.std::__1::unique_ptr.201", i32, i8, %"class.base::WeakPtrFactory" }
%"class.views::internal::NativeWidgetPrivate" = type { %"class.views::NativeWidget" }
%"class.views::NativeWidget" = type { i32 (...)** }
%"class.wm::ActivationDelegate" = type { i32 (...)** }
%"class.wm::ActivationChangeObserver" = type { i32 (...)** }
%"class.aura::client::FocusChangeObserver" = type { i32 (...)** }
%"class.aura::client::DragDropDelegate" = type { i32 (...)** }
%"class.aura::WindowTreeHostObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.aura::WindowTreeHost"* }
%"class.views::DesktopWindowTreeHost" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.views::DesktopCaptureClient"* }
%"class.views::DesktopCaptureClient" = type opaque
%"class.views::internal::NativeWidgetDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.wm::FocusController"* }
%"class.wm::FocusController" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.aura::client::ScreenPositionClient"* }
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.aura::client::DragDropClient"* }
%"class.aura::client::DragDropClient" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.aura::client::WindowParentingClient"* }
%"class.aura::client::WindowParentingClient" = type opaque
%"class.std::__1::unique_ptr.140" = type { %"class.std::__1::__compressed_pair.141" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.views::DesktopEventClient"* }
%"class.views::DesktopEventClient" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.views::FocusManagerEventHandler"* }
%"class.views::FocusManagerEventHandler" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.wm::CompoundEventFilter"* }
%"class.wm::CompoundEventFilter" = type { %"class.ui::EventHandler", %"class.base::ObserverList.155" }
%"class.base::ObserverList.155" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.156", i64, i32, [4 x i8] }>
%"class.base::LinkedList.156" = type { %"class.base::LinkNode.157" }
%"class.base::LinkNode.157" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.views::DropHelper"* }
%"class.views::DropHelper" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.views::corewm::TooltipController"* }
%"class.views::corewm::TooltipController" = type opaque
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.views::TooltipManagerAura"* }
%"class.views::TooltipManagerAura" = type opaque
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.wm::VisibilityController"* }
%"class.wm::VisibilityController" = type opaque
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.wm::WindowModalityController"* }
%"class.wm::WindowModalityController" = type opaque
%"class.ui::Cursor" = type { i32, %class.scoped_refptr.192, float, %"class.gfx::Point", %class.SkBitmap }
%class.scoped_refptr.192 = type { %"class.ui::PlatformCursor"* }
%"class.ui::PlatformCursor" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.194 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.193, i32, i32 }
%class.sk_sp.193 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.79" }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.194 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.wm::ShadowController"* }
%"class.wm::ShadowController" = type opaque
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.views::WindowReorderer"* }
%"class.views::WindowReorderer" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.207 }
%class.scoped_refptr.207 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.views::Widget" = type { %"class.views::internal::NativeWidgetDelegate", %"class.ui::EventSource", %"class.views::FocusTraversable", %"class.ui::NativeThemeObserver", %"class.ui::metadata::MetaDataProvider", %"class.views::internal::NativeWidgetPrivate"*, %"class.base::ObserverList.212", %"class.base::ObserverList.216", %"class.base::RepeatingCallbackList", %"class.views::WidgetDelegate"*, %"class.views::Widget"*, %"class.std::__1::unique_ptr.230", %"class.views::NonClientView"*, %"class.std::__1::unique_ptr.391", %"class.views::View"*, i32, i8, i32, i8, i64, i8, i32, i32, %"class.gfx::Rect", i8, i8, i8, i8, i8, i8, i8, %"class.gfx::Point", i8, %"class.std::__1::vector.236", i8, i8, i8, %"class.ui::NativeTheme"*, %"class.base::ScopedObservation", %"class.base::WeakPtrFactory.397" }
%"class.ui::EventSource" = type { i32 (...)**, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.208" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.views::FocusTraversable" = type { i32 (...)** }
%"class.ui::NativeThemeObserver" = type { i32 (...)** }
%"class.base::ObserverList.212" = type <{ %"class.std::__1::vector.76", %"class.base::LinkedList.213", i64, i32, [4 x i8] }>
%"class.base::LinkedList.213" = type { %"class.base::LinkNode.214" }
%"class.base::LinkNode.214" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ObserverList.216" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.217", i64, i32, [4 x i8] }>
%"class.base::LinkedList.217" = type { %"class.base::LinkNode.218" }
%"class.base::LinkNode.218" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::RepeatingCallbackList" = type { %"class.base::internal::CallbackListBase" }
%"class.base::internal::CallbackListBase" = type { %"class.std::__1::list.220", i8, %"class.base::RepeatingCallback", %"class.base::WeakPtrFactory.229" }
%"class.std::__1::list.220" = type { %"class.std::__1::__list_imp.221" }
%"class.std::__1::__list_imp.221" = type { %"struct.std::__1::__list_node_base.222", %"class.std::__1::__compressed_pair.223" }
%"struct.std::__1::__list_node_base.222" = type { %"struct.std::__1::__list_node_base.222"*, %"struct.std::__1::__list_node_base.222"* }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.227 }
%class.scoped_refptr.227 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.228", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.228" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory.229" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.views::WidgetDelegate" = type opaque
%"class.std::__1::unique_ptr.230" = type { %"class.std::__1::__compressed_pair.231" }
%"class.std::__1::__compressed_pair.231" = type { %"struct.std::__1::__compressed_pair_elem.232" }
%"struct.std::__1::__compressed_pair_elem.232" = type { %"class.views::internal::RootView"* }
%"class.views::internal::RootView" = type opaque
%"class.views::NonClientView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate", %"class.views::ClientView"*, %"class.std::__1::unique_ptr.376", %"class.views::View"*, %"class.std::__1::basic_string.382" }
%"class.views::View.base" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.236", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.244", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.259", %"class.absl::optional.265", i8, [7 x i8], %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.302", i8, i8, [3 x i8], %"class.std::__1::vector.307", %"class.std::__1::unique_ptr.314", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.347", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.366", %"class.base::ObserverList.372", i32 }>
%"class.ui::LayerObserver" = type { i32 (...)** }
%"class.ui::AcceleratorTarget" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.243 }
%union.anon.243 = type { %"class.gfx::Size" }
%"class.std::__1::unique_ptr.244" = type { %"class.std::__1::__compressed_pair.245" }
%"class.std::__1::__compressed_pair.245" = type { %"struct.std::__1::__compressed_pair_elem.246" }
%"struct.std::__1::__compressed_pair_elem.246" = type { %"class.std::__1::vector.236"* }
%class.SkPath = type <{ %class.sk_sp.250, i32, %"struct.std::__1::atomic.79", %"struct.std::__1::atomic.79", i8, i8 }>
%class.sk_sp.250 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt.251, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.252, %class.SkTDArray.253, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt.251 = type { %"struct.std::__1::atomic" }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.252 = type { i8*, i32, i32 }
%class.SkTDArray.253 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.254 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.254 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.255", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.255" = type { %"struct.std::__1::__atomic_base.256" }
%"struct.std::__1::__atomic_base.256" = type { %"struct.std::__1::__cxx_atomic_impl.257" }
%"struct.std::__1::__cxx_atomic_impl.257" = type { %"struct.std::__1::__cxx_atomic_base_impl.258" }
%"struct.std::__1::__cxx_atomic_base_impl.258" = type { i8 }
%"class.std::__1::unique_ptr.259" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { %"class.views::LayoutManager"* }
%"class.views::LayoutManager" = type { i32 (...)**, %"class.views::View"* }
%"class.absl::optional.265" = type { %"class.absl::optional_internal::optional_data.266" }
%"class.absl::optional_internal::optional_data.266" = type { %"class.absl::optional_internal::optional_data_base.267" }
%"class.absl::optional_internal::optional_data_base.267" = type { %"class.absl::optional_internal::optional_data_dtor_base.268" }
%"class.absl::optional_internal::optional_data_dtor_base.268" = type { i8, %union.anon.269 }
%union.anon.269 = type { %"class.views::View::DefaultFillLayout" }
%"class.views::View::DefaultFillLayout" = type { %"class.views::LayoutManager" }
%"class.std::__1::unique_ptr.270" = type { %"class.std::__1::__compressed_pair.271" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"class.views::Background"* }
%"class.views::Background" = type opaque
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.views::Border"* }
%"class.views::Border" = type opaque
%"class.ui::PaintCache" = type <{ %class.sk_sp.282, float, [4 x i8] }>
%class.sk_sp.282 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.283", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.283" = type { %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { i8* }
%"class.absl::optional.302" = type { %"class.absl::optional_internal::optional_data.303" }
%"class.absl::optional_internal::optional_data.303" = type { %"class.absl::optional_internal::optional_data_base.304" }
%"class.absl::optional_internal::optional_data_base.304" = type { %"class.absl::optional_internal::optional_data_dtor_base.305" }
%"class.absl::optional_internal::optional_data_dtor_base.305" = type { i8, %union.anon.306 }
%union.anon.306 = type { i8 }
%"class.std::__1::vector.307" = type { %"class.std::__1::__vector_base.308" }
%"class.std::__1::__vector_base.308" = type { %"class.ui::Layer"**, %"class.ui::Layer"**, %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.ui::Layer"** }
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.views::ViewMaskLayer"* }
%"class.views::ViewMaskLayer" = type opaque
%"class.views::FocusManager" = type { %"class.views::ViewObserver", %"class.views::Widget"*, %"class.std::__1::unique_ptr.320", %"class.views::View"*, %"class.ui::AcceleratorManager", i8, %"class.std::__1::unique_ptr.337", i32, [4 x i8], %"class.base::ObserverList.343", i8, i8, i32 }
%"class.views::ViewObserver" = type { i32 (...)** }
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.views::FocusManagerDelegate"* }
%"class.views::FocusManagerDelegate" = type opaque
%"class.ui::AcceleratorManager" = type { %"class.ui::AcceleratorMap" }
%"class.ui::AcceleratorMap" = type { %"class.std::__1::map.326" }
%"class.std::__1::map.326" = type { %"class.std::__1::__tree.327" }
%"class.std::__1::__tree.327" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.328", %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.views::ViewTracker"* }
%"class.views::ViewTracker" = type opaque
%"class.base::ObserverList.343" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.344", i64, i32, [4 x i8] }>
%"class.base::LinkedList.344" = type { %"class.base::LinkNode.345" }
%"class.base::LinkNode.345" = type { %"class.base::internal::LinkNodeBase" }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.std::__1::vector.350"* }
%"class.std::__1::vector.350" = type { %"class.std::__1::__vector_base.351" }
%"class.std::__1::__vector_base.351" = type { %"class.ui::Accelerator"*, %"class.ui::Accelerator"*, %"class.std::__1::__compressed_pair.352" }
%"class.ui::Accelerator" = type { i32, i32, i32, %"class.base::TimeTicks", i8, i32 }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"class.ui::Accelerator"* }
%"class.views::ContextMenuController" = type opaque
%"class.views::DragController" = type opaque
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"class.views::ViewTargeter"* }
%"class.views::ViewTargeter" = type { %"class.ui::EventTargeter", %"class.views::ViewTargeterDelegate"* }
%"class.ui::EventTargeter" = type { i32 (...)** }
%"class.std::__1::unique_ptr.366" = type { %"class.std::__1::__compressed_pair.367" }
%"class.std::__1::__compressed_pair.367" = type { %"struct.std::__1::__compressed_pair_elem.368" }
%"struct.std::__1::__compressed_pair_elem.368" = type { %"class.views::ViewAccessibility"* }
%"class.views::ViewAccessibility" = type opaque
%"class.base::ObserverList.372" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.373", i64, i32, [4 x i8] }>
%"class.base::LinkedList.373" = type { %"class.base::LinkNode.374" }
%"class.base::LinkNode.374" = type { %"class.base::internal::LinkNodeBase" }
%"class.views::ViewTargeterDelegate" = type { i32 (...)** }
%"class.views::ClientView" = type { %"class.views::View.base", %"class.views::View"* }
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.views::NonClientFrameView"* }
%"class.views::NonClientFrameView" = type { %"class.views::View.base", %"class.views::ViewTargeterDelegate" }
%"class.std::__1::basic_string.382" = type { %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.385 }
%union.anon.385 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.views::FocusManager"* }
%"class.views::View" = type <{ %"class.ui::LayerDelegate", %"class.ui::LayerObserver", %"class.ui::LayerOwner", %"class.ui::AcceleratorTarget", %"class.ui::EventTarget", %"class.ui::EventHandler", %"class.ui::PropertyHandler", %"class.ui::metadata::MetaDataProvider", i8, [3 x i8], i32, i32, [4 x i8], %"class.views::View"*, %"class.std::__1::vector.236", i8, [3 x i8], %"class.absl::optional", %"class.gfx::Rect", i8, i8, i8, i8, [4 x i8], %"class.std::__1::unique_ptr.244", %class.SkPath, i8, [7 x i8], %"class.std::__1::unique_ptr.259", %"class.absl::optional.265", i8, [7 x i8], %"class.std::__1::unique_ptr.270", %"class.std::__1::unique_ptr.276", %"class.ui::PaintCache", i8, [7 x i8], %"class.ui::NativeTheme"*, i8, %"class.absl::optional.302", i8, i8, [3 x i8], %"class.std::__1::vector.307", %"class.std::__1::unique_ptr.314", %"class.views::FocusManager"*, %"class.std::__1::unique_ptr.347", i64, %"class.views::View"*, %"class.views::View"*, i32, [4 x i8], %"class.views::ContextMenuController"*, %"class.views::DragController"*, %"class.std::__1::unique_ptr.360", %"class.std::__1::unique_ptr.366", %"class.base::ObserverList.372", i32, [4 x i8] }>
%"class.std::__1::vector.236" = type { %"class.std::__1::__vector_base.237" }
%"class.std::__1::__vector_base.237" = type { %"class.views::View"**, %"class.views::View"**, %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.views::View"** }
%"class.ui::NativeTheme" = type <{ i32 (...)**, %"class.std::__1::map.287", %"class.base::ObserverList.298", i8, i8, [2 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::map.287" = type { %"class.std::__1::__tree.288" }
%"class.std::__1::__tree.288" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.289", %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"class.base::ObserverList.298" = type <{ %"class.std::__1::vector", %"class.base::LinkedList.299", i64, i32, [4 x i8] }>
%"class.base::LinkedList.299" = type { %"class.base::LinkNode.300" }
%"class.base::LinkNode.300" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::ScopedObservation" = type { %"class.ui::NativeThemeObserver"*, %"class.ui::NativeTheme"* }
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gfx::PointF" = type { float, float }

@_ZTVN5views27DesktopScreenPositionClientE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::DesktopScreenPositionClient"*)* @_ZN5views27DesktopScreenPositionClientD2Ev to i8*), i8* bitcast (void (%"class.views::DesktopScreenPositionClient"*)* @_ZN5views27DesktopScreenPositionClientD0Ev to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*)* @_ZN2wm27DefaultScreenPositionClient20ConvertPointToScreenEPKN4aura6WindowEPN3gfx6PointFE to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*)* @_ZN2wm27DefaultScreenPositionClient22ConvertPointFromScreenEPKN4aura6WindowEPN3gfx6PointFE to i8*), i8* bitcast (void (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*)* @_ZN2wm27DefaultScreenPositionClient24ConvertHostPointToScreenEPN4aura6WindowEPN3gfx5PointE to i8*), i8* bitcast (void (%"class.views::DesktopScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Rect"*, %"class.display::Display"*)* @_ZN5views27DesktopScreenPositionClient9SetBoundsEPN4aura6WindowERKN3gfx4RectERKN7display7DisplayE to i8*), i8* bitcast (i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)* @_ZN2wm27DefaultScreenPositionClient27GetRootWindowOriginInScreenEPKN4aura6WindowE to i8*)] }, align 8

@_ZN5views27DesktopScreenPositionClientD1Ev = hidden unnamed_addr alias void (%"class.views::DesktopScreenPositionClient"*), void (%"class.views::DesktopScreenPositionClient"*)* @_ZN5views27DesktopScreenPositionClientD2Ev

; Function Attrs: nounwind
declare void @_ZN2wm27DefaultScreenPositionClientD2Ev(%"class.wm::DefaultScreenPositionClient"*) unnamed_addr #0

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views27DesktopScreenPositionClientD2Ev(%"class.views::DesktopScreenPositionClient"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::DesktopScreenPositionClient", %"class.views::DesktopScreenPositionClient"* %0, i64 0, i32 0
  tail call void @_ZN2wm27DefaultScreenPositionClientD2Ev(%"class.wm::DefaultScreenPositionClient"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views27DesktopScreenPositionClientD0Ev(%"class.views::DesktopScreenPositionClient"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.views::DesktopScreenPositionClient", %"class.views::DesktopScreenPositionClient"* %0, i64 0, i32 0
  tail call void @_ZN2wm27DefaultScreenPositionClientD2Ev(%"class.wm::DefaultScreenPositionClient"* %2) #6
  %3 = bitcast %"class.views::DesktopScreenPositionClient"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views27DesktopScreenPositionClient9SetBoundsEPN4aura6WindowERKN3gfx4RectERKN7display7DisplayE(%"class.views::DesktopScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16), %"class.display::Display"* nocapture readnone) unnamed_addr #1 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"class.gfx::Point"*
  %7 = alloca %"class.gfx::Rect", align 8
  %8 = tail call %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"* %1) #6
  %9 = tail call %"class.views::DesktopNativeWidgetAura"* @_ZN5views23DesktopNativeWidgetAura9ForWindowEPN4aura6WindowE(%"class.aura::Window"* %8) #6
  %10 = getelementptr inbounds %"class.views::DesktopNativeWidgetAura", %"class.views::DesktopNativeWidgetAura"* %9, i64 0, i32 0
  %11 = icmp eq %"class.views::DesktopNativeWidgetAura"* %9, null
  br i1 %11, label %24, label %12

12:                                               ; preds = %4
  %13 = bitcast %"class.views::DesktopNativeWidgetAura"* %9 to %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)***
  %14 = load %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)**, %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)*** %13, align 8
  %15 = getelementptr inbounds %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)*, %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)** %14, i64 11
  %16 = load %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)*, %"class.aura::Window"* (%"class.views::internal::NativeWidgetPrivate"*)** %15, align 8
  %17 = tail call %"class.aura::Window"* %16(%"class.views::internal::NativeWidgetPrivate"* %10) #6
  %18 = icmp eq %"class.aura::Window"* %17, %1
  br i1 %18, label %19, label %24

19:                                               ; preds = %12
  %20 = bitcast %"class.views::DesktopNativeWidgetAura"* %9 to void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)***
  %21 = load void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)**, void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)*, void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)** %21, i64 34
  %23 = load void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)*, void (%"class.views::internal::NativeWidgetPrivate"*, %"class.gfx::Rect"*)** %22, align 8
  tail call void %23(%"class.views::internal::NativeWidgetPrivate"* %10, %"class.gfx::Rect"* dereferenceable(16) %2) #6
  br label %95

24:                                               ; preds = %4, %12
  %25 = tail call i32 @_ZNK4aura6Window7GetTypeEv(%"class.aura::Window"* %1) #6
  %26 = icmp eq i32 %25, 2
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = tail call %"class.views::Widget"* @_ZN5views6Widget22GetWidgetForNativeViewEPN4aura6WindowE(%"class.aura::Window"* %1) #6
  %29 = icmp eq %"class.views::Widget"* %28, null
  br i1 %29, label %94, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.views::Widget", %"class.views::Widget"* %28, i64 0, i32 25
  %32 = load i8, i8* %31, align 1, !range !2
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %94, label %34

34:                                               ; preds = %30, %24
  %35 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #6
  %36 = bitcast i64* %5 to i32*
  %37 = getelementptr inbounds %"class.gfx::Point", %"class.gfx::Point"* %6, i64 0, i32 1
  %38 = bitcast %"class.gfx::Rect"* %2 to i64*
  %39 = load i64, i64* %38, align 4
  store i64 %39, i64* %5, align 8
  %40 = getelementptr inbounds %"class.aura::Window", %"class.aura::Window"* %1, i64 0, i32 13
  %41 = load %"class.aura::Window"*, %"class.aura::Window"** %40, align 8
  call void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"* %41, %"class.aura::Window"* %8, %"class.gfx::Point"* nonnull %6) #6
  %42 = getelementptr inbounds %"class.views::DesktopScreenPositionClient", %"class.views::DesktopScreenPositionClient"* %0, i64 0, i32 0
  %43 = bitcast %"class.views::DesktopScreenPositionClient"* %0 to i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)***
  %44 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)**, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %44, i64 6
  %46 = load i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)*, i64 (%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*)** %45, align 8
  %47 = call i64 %46(%"class.wm::DefaultScreenPositionClient"* %42, %"class.aura::Window"* %8) #6
  %48 = trunc i64 %47 to i32
  %49 = lshr i64 %47, 32
  %50 = trunc i64 %49 to i32
  %51 = sub nsw i32 0, %48
  %52 = sub nsw i32 0, %50
  %53 = load i32, i32* %36, align 8
  %54 = icmp sgt i32 %48, 0
  %55 = select i1 %54, i32 -2147483648, i32 2147483647
  %56 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %53, i32 %51) #6
  %57 = extractvalue { i32, i1 } %56, 1
  %58 = extractvalue { i32, i1 } %56, 0
  %59 = select i1 %57, i32 %55, i32 %58, !prof !3
  store i32 %59, i32* %36, align 8
  %60 = load i32, i32* %37, align 4
  %61 = icmp sgt i32 %50, 0
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %52) #6
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !3
  store i32 %66, i32* %37, align 4
  %67 = bitcast %"class.gfx::Rect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #6
  %68 = bitcast %"class.gfx::Rect"* %7 to i64*
  %69 = load i64, i64* %5, align 8
  store i64 %69, i64* %68, align 8
  %70 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = icmp sgt i32 %59, 0
  %73 = icmp sgt i32 %71, 0
  %74 = and i1 %72, %73
  %75 = sub nuw nsw i32 2147483647, %59
  %76 = icmp ult i32 %75, %71
  %77 = and i1 %76, %74
  %78 = select i1 %77, i32 %75, i32 %71
  %79 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %2, i64 0, i32 1, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = icmp sgt i32 %66, 0
  %82 = icmp sgt i32 %80, 0
  %83 = and i1 %81, %82
  %84 = sub nuw nsw i32 2147483647, %66
  %85 = icmp ult i32 %84, %80
  %86 = and i1 %85, %83
  %87 = select i1 %86, i32 %84, i32 %80
  %88 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 0
  %89 = icmp sgt i32 %78, 0
  %90 = select i1 %89, i32 %78, i32 0
  store i32 %90, i32* %88, align 8
  %91 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %7, i64 0, i32 1, i32 1
  %92 = icmp sgt i32 %87, 0
  %93 = select i1 %92, i32 %87, i32 0
  store i32 %93, i32* %91, align 4
  call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %7) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #6
  br label %95

94:                                               ; preds = %30, %27
  tail call void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"* %1, %"class.gfx::Rect"* dereferenceable(16) %2) #6
  br label %95

95:                                               ; preds = %94, %34, %19
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.aura::Window"* @_ZN4aura6Window13GetRootWindowEv(%"class.aura::Window"*) local_unnamed_addr #4

declare %"class.views::DesktopNativeWidgetAura"* @_ZN5views23DesktopNativeWidgetAura9ForWindowEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #4

declare void @_ZN4aura6Window20ConvertPointToTargetEPKS0_S2_PN3gfx5PointE(%"class.aura::Window"*, %"class.aura::Window"*, %"class.gfx::Point"*) local_unnamed_addr #4

declare void @_ZN4aura6Window9SetBoundsERKN3gfx4RectE(%"class.aura::Window"*, %"class.gfx::Rect"* dereferenceable(16)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN2wm27DefaultScreenPositionClient20ConvertPointToScreenEPKN4aura6WindowEPN3gfx6PointFE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*) unnamed_addr #4

declare void @_ZN2wm27DefaultScreenPositionClient22ConvertPointFromScreenEPKN4aura6WindowEPN3gfx6PointFE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::PointF"*) unnamed_addr #4

declare void @_ZN2wm27DefaultScreenPositionClient24ConvertHostPointToScreenEPN4aura6WindowEPN3gfx5PointE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*, %"class.gfx::Point"*) unnamed_addr #4

declare i64 @_ZN2wm27DefaultScreenPositionClient27GetRootWindowOriginInScreenEPKN4aura6WindowE(%"class.wm::DefaultScreenPositionClient"*, %"class.aura::Window"*) unnamed_addr #4

declare i32 @_ZNK4aura6Window7GetTypeEv(%"class.aura::Window"*) local_unnamed_addr #4

declare %"class.views::Widget"* @_ZN5views6Widget22GetWidgetForNativeViewEPN4aura6WindowE(%"class.aura::Window"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #5

attributes #0 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
