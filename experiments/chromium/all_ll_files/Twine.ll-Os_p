; ModuleID = '../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/Twine.cpp'
source_filename = "../../third_party/swiftshader/third_party/llvm-subzero/lib/Support/Twine.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.llvm::Twine" = type <{ %"union.llvm::Twine::Child", %"union.llvm::Twine::Child", i8, i8, [6 x i8] }>
%"union.llvm::Twine::Child" = type { %"class.llvm::Twine"* }
%"class.llvm::SmallString" = type { %"class.llvm::SmallVector" }
%"class.llvm::SmallVector" = type { %"class.llvm::SmallVectorImpl.base", %"struct.llvm::SmallVectorStorage" }
%"class.llvm::SmallVectorImpl.base" = type { %"class.llvm::SmallVectorTemplateBase.base" }
%"class.llvm::SmallVectorTemplateBase.base" = type { %"class.llvm::SmallVectorTemplateCommon.base" }
%"class.llvm::SmallVectorTemplateCommon.base" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion" }>
%"class.llvm::SmallVectorBase" = type { i8*, i8*, i8* }
%"struct.llvm::AlignedCharArrayUnion" = type { %"struct.llvm::AlignedCharArray" }
%"struct.llvm::AlignedCharArray" = type { [1 x i8] }
%"struct.llvm::SmallVectorStorage" = type { [255 x %"struct.llvm::AlignedCharArrayUnion"] }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.llvm::formatv_object_base" = type { %"class.llvm::StringRef", %"class.std::__1::vector", %"class.std::__1::vector.6" }
%"class.llvm::StringRef" = type { i8*, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.llvm::detail::format_adapter"**, %"class.llvm::detail::format_adapter"**, %"class.std::__1::__compressed_pair.1" }
%"class.llvm::detail::format_adapter" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.llvm::detail::format_adapter"** }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"struct.llvm::ReplacementItem"*, %"struct.llvm::ReplacementItem"*, %"class.std::__1::__compressed_pair.8" }
%"struct.llvm::ReplacementItem" = type { i32, %"class.llvm::StringRef", i64, i64, i32, i8, %"class.llvm::StringRef" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.llvm::ReplacementItem"* }
%"class.llvm::SmallVectorImpl" = type { %"class.llvm::SmallVectorTemplateBase.base", [7 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.llvm::raw_string_ostream" = type { %"class.llvm::raw_ostream.base", %"class.std::__1::basic_string"* }
%"class.llvm::raw_ostream.base" = type <{ i32 (...)**, i8*, i8*, i8*, i32 }>
%"class.llvm::raw_ostream" = type <{ i32 (...)**, i8*, i8*, i8*, i32, [4 x i8] }>
%"class.llvm::raw_svector_ostream" = type { %"class.llvm::raw_pwrite_stream.base", %"class.llvm::SmallVectorImpl"* }
%"class.llvm::raw_pwrite_stream.base" = type { %"class.llvm::raw_ostream.base" }
%"class.llvm::SmallVectorTemplateBase" = type { %"class.llvm::SmallVectorTemplateCommon.base", [7 x i8] }
%"class.llvm::SmallVectorTemplateCommon" = type <{ %"class.llvm::SmallVectorBase", %"struct.llvm::AlignedCharArrayUnion", [7 x i8] }>

$_ZNK4llvm19formatv_object_base3strEv = comdat any

$_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE = comdat any

$_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc = comdat any

$_ZN4llvm11raw_ostreamlsEPKc = comdat any

$_ZN4llvm11raw_ostreamlsENS_9StringRefE = comdat any

$_ZNK4llvm5Twine18getSingleStringRefEv = comdat any

$_ZN4llvm11raw_ostream13SetUnbufferedEv = comdat any

@.str = private unnamed_addr constant [5 x i8] c"null\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"empty\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"rope:\00", align 1
@.str.3 = private unnamed_addr constant [10 x i8] c"cstring:\22\00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"\22\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"std::string:\22\00", align 1
@.str.6 = private unnamed_addr constant [12 x i8] c"stringref:\22\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"smallstring:\22\00", align 1
@.str.8 = private unnamed_addr constant [10 x i8] c"formatv:\22\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"char:\22\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"decUI:\22\00", align 1
@.str.11 = private unnamed_addr constant [7 x i8] c"decI:\22\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"decUL:\22\00", align 1
@.str.13 = private unnamed_addr constant [7 x i8] c"decL:\22\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"decULL:\22\00", align 1
@.str.15 = private unnamed_addr constant [8 x i8] c"decLL:\22\00", align 1
@.str.16 = private unnamed_addr constant [7 x i8] c"uhex:\22\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"(Twine \00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.19 = private unnamed_addr constant [2 x i8] c")\00", align 1
@_ZTVN4llvm18raw_string_ostreamE = external unnamed_addr constant { [13 x i8*] }, align 8
@_ZTVN4llvm19raw_svector_ostreamE = external unnamed_addr constant { [14 x i8*] }, align 8

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.llvm::Twine"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.llvm::SmallString", align 8
  %4 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %1, i64 0, i32 2
  %5 = load i8, i8* %4, align 8
  switch i8 %5, label %32 [
    i8 4, label %6
    i8 7, label %25
  ]

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %1, i64 0, i32 3
  %8 = load i8, i8* %7, align 1
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = bitcast %"class.llvm::Twine"* %1 to %"class.std::__1::basic_string"**
  %12 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %13 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %10
  %18 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #8
  br label %78

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %0, i8* %22, i64 %24) #9
  br label %78

25:                                               ; preds = %2
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %1, i64 0, i32 3
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = bitcast %"class.llvm::Twine"* %1 to %"class.llvm::formatv_object_base"**
  %31 = load %"class.llvm::formatv_object_base"*, %"class.llvm::formatv_object_base"** %30, align 8
  tail call void @_ZNK4llvm19formatv_object_base3strEv(%"class.std::__1::basic_string"* sret %0, %"class.llvm::formatv_object_base"* %31) #10
  br label %78

32:                                               ; preds = %2, %6, %25
  %33 = bitcast %"class.llvm::SmallString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 256, i1 false)
  %35 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i64 0
  %36 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i8* %35, i8** %37, align 8
  %38 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %39 = getelementptr inbounds %"class.llvm::SmallString", %"class.llvm::SmallString"* %3, i64 1, i32 0
  %40 = bitcast i8** %38 to %"class.llvm::SmallVector"**
  store %"class.llvm::SmallVector"* %39, %"class.llvm::SmallVector"** %40, align 8
  %41 = bitcast %"class.llvm::SmallString"* %3 to %"class.llvm::SmallVectorImpl"*
  %42 = call { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %1, %"class.llvm::SmallVectorImpl"* nonnull dereferenceable(32) %41) #10
  %43 = extractvalue { i8*, i64 } %42, 0
  %44 = extractvalue { i8*, i64 } %42, 1
  %45 = icmp eq i8* %43, null
  br i1 %45, label %46, label %48

46:                                               ; preds = %32
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #8, !alias.scope !2
  br label %73

48:                                               ; preds = %32
  %49 = icmp ugt i64 %44, -17
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %51) #11
  unreachable

52:                                               ; preds = %48
  %53 = icmp ult i64 %44, 23
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = add nuw i64 %44, 16
  %56 = and i64 %55, -16
  %57 = call i8* @_Znwm(i64 %56) #12
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %57, i8** %58, align 8
  %59 = or i64 %56, -9223372036854775808
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %44, i64* %61, align 8
  br label %68

62:                                               ; preds = %52
  %63 = trunc i64 %44 to i8
  %64 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  store i8 %63, i8* %65, align 1
  %66 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %67 = icmp eq i64 %44, 0
  br i1 %67, label %70, label %68

68:                                               ; preds = %62, %54
  %69 = phi i8* [ %57, %54 ], [ %66, %62 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* nonnull align 1 %43, i64 %44, i1 false) #8
  br label %70

70:                                               ; preds = %62, %68
  %71 = phi i8* [ %66, %62 ], [ %69, %68 ]
  %72 = getelementptr inbounds i8, i8* %71, i64 %44
  store i8 0, i8* %72, align 1
  br label %73

73:                                               ; preds = %46, %70
  %74 = load i8*, i8** %36, align 8
  %75 = icmp eq i8* %74, %35
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @free(i8* %74) #9
  br label %77

77:                                               ; preds = %73, %76
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %33) #8
  br label %78

78:                                               ; preds = %20, %17, %77, %29
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK4llvm19formatv_object_base3strEv(%"class.std::__1::basic_string"* noalias sret, %"class.llvm::formatv_object_base"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.llvm::raw_string_ostream", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #8
  %5 = bitcast %"class.llvm::raw_string_ostream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 40, i1 false)
  %6 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %3, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %3, i64 0, i32 0, i32 4
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %3, i64 0, i32 0, i32 1
  %9 = bitcast i8** %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [13 x i8*] }, { [13 x i8*] }* @_ZTVN4llvm18raw_string_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %10 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %3, i64 0, i32 1
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %10, align 8
  %11 = bitcast %"class.llvm::raw_string_ostream"* %3 to %"class.llvm::raw_ostream"*
  %12 = call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_19formatv_object_baseE(%"class.llvm::raw_ostream"* nonnull %11, %"class.llvm::formatv_object_base"* dereferenceable(64) %1) #9
  %13 = getelementptr inbounds %"class.llvm::raw_string_ostream", %"class.llvm::raw_string_ostream"* %3, i64 0, i32 0, i32 3
  %14 = load i8*, i8** %13, align 8
  %15 = load i8*, i8** %8, align 8
  %16 = icmp eq i8* %14, %15
  br i1 %16, label %18, label %17

17:                                               ; preds = %2
  call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* nonnull %11) #9
  br label %18

18:                                               ; preds = %2, %17
  call void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %5) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm5Twine11toStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"*, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 1
  %5 = icmp eq i8 %4, 1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %8 = load i8, i8* %7, align 8
  switch i8 %8, label %13 [
    i8 1, label %9
    i8 3, label %9
    i8 4, label %9
    i8 5, label %9
    i8 6, label %9
  ]

9:                                                ; preds = %6, %6, %6, %6, %6
  %10 = tail call { i8*, i64 } @_ZNK4llvm5Twine18getSingleStringRefEv(%"class.llvm::Twine"* %0) #10
  %11 = extractvalue { i8*, i64 } %10, 0
  %12 = extractvalue { i8*, i64 } %10, 1
  br label %21

13:                                               ; preds = %6, %2
  tail call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1) #10
  %14 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint i8* %15 to i64
  %20 = sub i64 %18, %19
  br label %21

21:                                               ; preds = %13, %9
  %22 = phi i64 [ %12, %9 ], [ %20, %13 ]
  %23 = phi i8* [ %11, %9 ], [ %15, %13 ]
  %24 = insertvalue { i8*, i64 } undef, i8* %23, 0
  %25 = insertvalue { i8*, i64 } %24, i64 %22, 1
  ret { i8*, i64 } %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* nocapture readonly, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.llvm::raw_svector_ostream", align 8
  %4 = bitcast %"class.llvm::raw_svector_ostream"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 -86, i64 40, i1 false)
  %5 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %3, i64 0, i32 0, i32 0, i32 4
  store i32 1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %3, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast i8** %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #8
  %8 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %3, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN4llvm19raw_svector_ostreamE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.llvm::raw_svector_ostream", %"class.llvm::raw_svector_ostream"* %3, i64 0, i32 1
  store %"class.llvm::SmallVectorImpl"* %1, %"class.llvm::SmallVectorImpl"** %9, align 8
  %10 = bitcast %"class.llvm::raw_svector_ostream"* %3 to %"class.llvm::raw_ostream"*
  call void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"* nonnull %10) #9
  call void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* %0, %"class.llvm::raw_ostream"* nonnull dereferenceable(40) %10) #10
  call void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* nocapture readonly, %"class.llvm::raw_ostream"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8
  tail call void @_ZNK4llvm5Twine13printOneChildERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* undef, %"class.llvm::raw_ostream"* dereferenceable(40) %1, %"class.llvm::Twine"* %4, i8 zeroext %6) #10
  %7 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %7, align 8
  %9 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %10 = load i8, i8* %9, align 1
  tail call void @_ZNK4llvm5Twine13printOneChildERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* undef, %"class.llvm::raw_ostream"* dereferenceable(40) %1, %"class.llvm::Twine"* %8, i8 zeroext %10) #10
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { i8*, i64 } @_ZNK4llvm5Twine25toNullTerminatedStringRefERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* nocapture readonly, %"class.llvm::SmallVectorImpl"* dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %5 = load i8, i8* %4, align 1
  %6 = icmp eq i8 %5, 1
  br i1 %6, label %7, label %33

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8
  %10 = icmp ugt i8 %9, 1
  br i1 %10, label %11, label %33

11:                                               ; preds = %7
  switch i8 %9, label %33 [
    i8 3, label %12
    i8 4, label %18
  ]

12:                                               ; preds = %11
  %13 = bitcast %"class.llvm::Twine"* %0 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %43, label %16

16:                                               ; preds = %12
  %17 = tail call i64 @strlen(i8* nonnull %14) #13
  br label %43

18:                                               ; preds = %11
  %19 = bitcast %"class.llvm::Twine"* %0 to %"class.std::__1::basic_string"**
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  br label %43

30:                                               ; preds = %18
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %32 = zext i8 %23 to i64
  br label %43

33:                                               ; preds = %2, %11, %7
  tail call void @_ZNK4llvm5Twine8toVectorERNS_15SmallVectorImplIcEE(%"class.llvm::Twine"* %0, %"class.llvm::SmallVectorImpl"* dereferenceable(32) %1) #10
  %34 = bitcast %"class.llvm::SmallVectorImpl"* %1 to %"class.llvm::SmallVectorTemplateBase"*
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #8
  store i8 0, i8* %3, align 1
  call void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"* %34, i8* nonnull dereferenceable(1) %3) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #8
  %35 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i8*, i8** %35, align 8
  %37 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8* %37, i8** %35, align 8
  %38 = getelementptr inbounds %"class.llvm::SmallVectorImpl", %"class.llvm::SmallVectorImpl"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = ptrtoint i8* %37 to i64
  %41 = ptrtoint i8* %39 to i64
  %42 = sub i64 %40, %41
  br label %43

43:                                               ; preds = %30, %25, %16, %12, %33
  %44 = phi i64 [ %42, %33 ], [ %17, %16 ], [ 0, %12 ], [ %29, %25 ], [ %32, %30 ]
  %45 = phi i8* [ %39, %33 ], [ %14, %16 ], [ null, %12 ], [ %27, %25 ], [ %31, %30 ]
  %46 = insertvalue { i8*, i64 } undef, i8* %45, 0
  %47 = insertvalue { i8*, i64 } %46, i64 %44, 1
  ret { i8*, i64 } %47
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm23SmallVectorTemplateBaseIcLb1EE9push_backERKc(%"class.llvm::SmallVectorTemplateBase"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp ult i8* %4, %6
  br i1 %7, label %12, label %8, !prof !5

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.llvm::SmallVectorTemplateBase", %"class.llvm::SmallVectorTemplateBase"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i64 0
  tail call void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"* %9, i8* %10, i64 0, i64 1) #9
  %11 = load i8*, i8** %3, align 8
  br label %12

12:                                               ; preds = %2, %8
  %13 = phi i8* [ %4, %2 ], [ %11, %8 ]
  %14 = load i8, i8* %1, align 1
  store i8 %14, i8* %13, align 1
  %15 = load i8*, i8** %3, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 1
  store i8* %16, i8** %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine13printOneChildERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* nocapture readnone, %"class.llvm::raw_ostream"* dereferenceable(40), %"class.llvm::Twine"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %3, label %83 [
    i8 15, label %79
    i8 14, label %75
    i8 2, label %5
    i8 3, label %6
    i8 4, label %9
    i8 5, label %23
    i8 6, label %30
    i8 7, label %39
    i8 8, label %42
    i8 9, label %54
    i8 10, label %58
    i8 11, label %63
    i8 12, label %67
    i8 13, label %71
  ]

5:                                                ; preds = %4
  tail call void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* %2, %"class.llvm::raw_ostream"* dereferenceable(40) %1) #10
  br label %83

6:                                                ; preds = %4
  %7 = bitcast %"class.llvm::Twine"* %2 to i8*
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %1, i8* %7) #10
  br label %83

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 4, i64 5
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = bitcast %"class.llvm::Twine"* %2 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 1
  %16 = bitcast %"union.llvm::Twine::Child"* %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.llvm::Twine"* %2 to i8*
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i8* %14, i8* %18
  %21 = select i1 %12, i64 %17, i64 %19
  %22 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1, i8* %20, i64 %21) #9
  br label %83

23:                                               ; preds = %4
  %24 = bitcast %"class.llvm::Twine"* %2 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 1
  %27 = bitcast %"union.llvm::Twine::Child"* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* %25, i64 %28) #10
  br label %83

30:                                               ; preds = %4
  %31 = bitcast %"class.llvm::Twine"* %2 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 1
  %34 = bitcast %"union.llvm::Twine::Child"* %33 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = ptrtoint i8* %32 to i64
  %37 = sub i64 %35, %36
  %38 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %1, i8* %32, i64 %37) #9
  br label %83

39:                                               ; preds = %4
  %40 = bitcast %"class.llvm::Twine"* %2 to %"class.llvm::formatv_object_base"*
  %41 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_19formatv_object_baseE(%"class.llvm::raw_ostream"* %1, %"class.llvm::formatv_object_base"* dereferenceable(64) %40) #9
  br label %83

42:                                               ; preds = %4
  %43 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %44 = trunc i64 %43 to i8
  %45 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1, i64 0, i32 3
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %1, i64 0, i32 2
  %48 = load i8*, i8** %47, align 8
  %49 = icmp ult i8* %46, %48
  br i1 %49, label %52, label %50

50:                                               ; preds = %42
  %51 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %1, i8 zeroext %44) #9
  br label %83

52:                                               ; preds = %42
  %53 = getelementptr inbounds i8, i8* %46, i64 1
  store i8* %53, i8** %45, align 8
  store i8 %44, i8* %46, align 1
  br label %83

54:                                               ; preds = %4
  %55 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %56 = and i64 %55, 4294967295
  %57 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %1, i64 %56) #9
  br label %83

58:                                               ; preds = %4
  %59 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %60 = shl i64 %59, 32
  %61 = ashr exact i64 %60, 32
  %62 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %1, i64 %61) #9
  br label %83

63:                                               ; preds = %4
  %64 = bitcast %"class.llvm::Twine"* %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %1, i64 %65) #9
  br label %83

67:                                               ; preds = %4
  %68 = bitcast %"class.llvm::Twine"* %2 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %1, i64 %69) #9
  br label %83

71:                                               ; preds = %4
  %72 = bitcast %"class.llvm::Twine"* %2 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"* %1, i64 %73) #9
  br label %83

75:                                               ; preds = %4
  %76 = bitcast %"class.llvm::Twine"* %2 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEx(%"class.llvm::raw_ostream"* %1, i64 %77) #9
  br label %83

79:                                               ; preds = %4
  %80 = bitcast %"class.llvm::Twine"* %2 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream9write_hexEy(%"class.llvm::raw_ostream"* %1, i64 %81) #9
  br label %83

83:                                               ; preds = %52, %50, %4, %79, %75, %71, %67, %63, %58, %54, %39, %30, %23, %9, %6, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @strlen(i8* nonnull %1) #13
  br label %6

6:                                                ; preds = %2, %4
  %7 = phi i64 [ %5, %4 ], [ 0, %2 ]
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %7) #10
  ret %"class.llvm::raw_ostream"* %8
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 2
  %5 = bitcast i8** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %8 = load i8*, i8** %7, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub i64 %6, %9
  %11 = icmp ult i64 %10, %2
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %0, i8* %1, i64 %2) #9
  br label %19

14:                                               ; preds = %3
  %15 = icmp eq i64 %2, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %8, i8* align 1 %1, i64 %2, i1 false)
  %17 = load i8*, i8** %7, align 8
  %18 = getelementptr inbounds i8, i8* %17, i64 %2
  store i8* %18, i8** %7, align 8
  br label %19

19:                                               ; preds = %16, %14, %12
  %20 = phi %"class.llvm::raw_ostream"* [ %13, %12 ], [ %0, %14 ], [ %0, %16 ]
  ret %"class.llvm::raw_ostream"* %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_19formatv_object_baseE(%"class.llvm::raw_ostream"*, %"class.llvm::formatv_object_base"* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEx(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream9write_hexEy(%"class.llvm::raw_ostream"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine17printOneChildReprERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* nocapture readnone, %"class.llvm::raw_ostream"* dereferenceable(40), %"class.llvm::Twine"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  switch i8 %3, label %100 [
    i8 0, label %5
    i8 1, label %7
    i8 2, label %9
    i8 3, label %11
    i8 4, label %16
    i8 5, label %21
    i8 6, label %26
    i8 7, label %37
    i8 8, label %42
    i8 9, label %58
    i8 10, label %64
    i8 11, label %71
    i8 12, label %77
    i8 13, label %83
    i8 14, label %89
    i8 15, label %95
  ]

5:                                                ; preds = %4
  %6 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str, i64 0, i64 0), i64 4) #9
  br label %100

7:                                                ; preds = %4
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i64 5) #9
  br label %100

9:                                                ; preds = %4
  %10 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #9
  tail call void @_ZNK4llvm5Twine9printReprERNS_11raw_ostreamE(%"class.llvm::Twine"* %2, %"class.llvm::raw_ostream"* dereferenceable(40) %1) #10
  br label %100

11:                                               ; preds = %4
  %12 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i64 9) #9
  %13 = bitcast %"class.llvm::Twine"* %2 to i8*
  %14 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKc(%"class.llvm::raw_ostream"* %12, i8* %13) #10
  %15 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

16:                                               ; preds = %4
  %17 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i64 13) #9
  %18 = bitcast %"class.llvm::Twine"* %2 to i8*
  %19 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKv(%"class.llvm::raw_ostream"* %17, i8* %18) #9
  %20 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %19, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

21:                                               ; preds = %4
  %22 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.6, i64 0, i64 0), i64 11) #9
  %23 = bitcast %"class.llvm::Twine"* %2 to i8*
  %24 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKv(%"class.llvm::raw_ostream"* %22, i8* %23) #9
  %25 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

26:                                               ; preds = %4
  %27 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), i64 13) #9
  %28 = bitcast %"class.llvm::Twine"* %2 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %2, i64 0, i32 1
  %31 = bitcast %"union.llvm::Twine::Child"* %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = ptrtoint i8* %29 to i64
  %34 = sub i64 %32, %33
  %35 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"* %27, i8* %29, i64 %34) #9
  %36 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %35, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

37:                                               ; preds = %4
  %38 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.8, i64 0, i64 0), i64 9) #9
  %39 = bitcast %"class.llvm::Twine"* %2 to %"class.llvm::formatv_object_base"*
  %40 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsERKNS_19formatv_object_baseE(%"class.llvm::raw_ostream"* %38, %"class.llvm::formatv_object_base"* dereferenceable(64) %39) #9
  %41 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %40, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

42:                                               ; preds = %4
  %43 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i64 0, i64 0), i64 6) #9
  %44 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %45 = trunc i64 %44 to i8
  %46 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %43, i64 0, i32 3
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %43, i64 0, i32 2
  %49 = load i8*, i8** %48, align 8
  %50 = icmp ult i8* %47, %49
  br i1 %50, label %53, label %51

51:                                               ; preds = %42
  %52 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"* %43, i8 zeroext %45) #9
  br label %55

53:                                               ; preds = %42
  %54 = getelementptr inbounds i8, i8* %47, i64 1
  store i8* %54, i8** %46, align 8
  store i8 %45, i8* %47, align 1
  br label %55

55:                                               ; preds = %51, %53
  %56 = phi %"class.llvm::raw_ostream"* [ %52, %51 ], [ %43, %53 ]
  %57 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %56, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

58:                                               ; preds = %4
  %59 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #9
  %60 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %61 = and i64 %60, 4294967295
  %62 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %59, i64 %61) #9
  %63 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %62, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

64:                                               ; preds = %4
  %65 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.11, i64 0, i64 0), i64 6) #9
  %66 = ptrtoint %"class.llvm::Twine"* %2 to i64
  %67 = shl i64 %66, 32
  %68 = ashr exact i64 %67, 32
  %69 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %65, i64 %68) #9
  %70 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %69, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

71:                                               ; preds = %4
  %72 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i64 0, i64 0), i64 7) #9
  %73 = bitcast %"class.llvm::Twine"* %2 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEm(%"class.llvm::raw_ostream"* %72, i64 %74) #9
  %76 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %75, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

77:                                               ; preds = %4
  %78 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.13, i64 0, i64 0), i64 6) #9
  %79 = bitcast %"class.llvm::Twine"* %2 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEl(%"class.llvm::raw_ostream"* %78, i64 %80) #9
  %82 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %81, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

83:                                               ; preds = %4
  %84 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8) #9
  %85 = bitcast %"class.llvm::Twine"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEy(%"class.llvm::raw_ostream"* %84, i64 %86) #9
  %88 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %87, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

89:                                               ; preds = %4
  %90 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.15, i64 0, i64 0), i64 7) #9
  %91 = bitcast %"class.llvm::Twine"* %2 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEx(%"class.llvm::raw_ostream"* %90, i64 %92) #9
  %94 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %93, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

95:                                               ; preds = %4
  %96 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.16, i64 0, i64 0), i64 6) #9
  %97 = bitcast %"class.llvm::Twine"* %2 to i8*
  %98 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKv(%"class.llvm::raw_ostream"* %96, i8* %97) #9
  %99 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %98, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i64 1) #9
  br label %100

100:                                              ; preds = %4, %95, %89, %83, %77, %71, %64, %58, %55, %37, %26, %21, %16, %11, %9, %7, %5
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine9printReprERNS_11raw_ostreamE(%"class.llvm::Twine"* nocapture readonly, %"class.llvm::raw_ostream"* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i64 0, i64 0), i64 7) #9
  %4 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %4, align 8
  %6 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %7 = load i8, i8* %6, align 8
  tail call void @_ZNK4llvm5Twine17printOneChildReprERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* undef, %"class.llvm::raw_ostream"* dereferenceable(40) %1, %"class.llvm::Twine"* %5, i8 zeroext %7) #10
  %8 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.18, i64 0, i64 0), i64 1) #9
  %9 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 1, i32 0
  %10 = load %"class.llvm::Twine"*, %"class.llvm::Twine"** %9, align 8
  %11 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 1
  tail call void @_ZNK4llvm5Twine17printOneChildReprERNS_11raw_ostreamENS0_5ChildENS0_8NodeKindE(%"class.llvm::Twine"* undef, %"class.llvm::raw_ostream"* dereferenceable(40) %1, %"class.llvm::Twine"* %10, i8 zeroext %12) #10
  %13 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsENS_9StringRefE(%"class.llvm::raw_ostream"* %1, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.19, i64 0, i64 0), i64 1) #9
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostreamlsEPKv(%"class.llvm::raw_ostream"*, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine4dumpEv(%"class.llvm::Twine"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #9
  tail call void @_ZNK4llvm5Twine5printERNS_11raw_ostreamE(%"class.llvm::Twine"* %0, %"class.llvm::raw_ostream"* dereferenceable(40) %2) #10
  ret void
}

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZNK4llvm5Twine8dumpReprEv(%"class.llvm::Twine"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm4dbgsEv() #9
  tail call void @_ZNK4llvm5Twine9printReprERNS_11raw_ostreamE(%"class.llvm::Twine"* %0, %"class.llvm::raw_ostream"* dereferenceable(40) %2) #10
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm18raw_string_ostreamD1Ev(%"class.llvm::raw_string_ostream"*) unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden { i8*, i64 } @_ZNK4llvm5Twine18getSingleStringRefEv(%"class.llvm::Twine"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::Twine", %"class.llvm::Twine"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 8
  switch i8 %3, label %4 [
    i8 1, label %44
    i8 3, label %5
    i8 4, label %11
    i8 5, label %26
    i8 6, label %34
  ]

4:                                                ; preds = %1
  unreachable

5:                                                ; preds = %1
  %6 = bitcast %"class.llvm::Twine"* %0 to i8**
  %7 = load i8*, i8** %6, align 8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %44, label %9

9:                                                ; preds = %5
  %10 = tail call i64 @strlen(i8* nonnull %7) #13
  br label %44

11:                                               ; preds = %1
  %12 = bitcast %"class.llvm::Twine"* %0 to %"class.std::__1::basic_string"**
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %21 = select i1 %17, i8* %19, i8* %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = zext i8 %16 to i64
  %25 = select i1 %17, i64 %23, i64 %24
  br label %44

26:                                               ; preds = %1
  %27 = bitcast %"class.llvm::Twine"* %0 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast i8* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds i8, i8* %28, i64 8
  %32 = bitcast i8* %31 to i64*
  %33 = load i64, i64* %32, align 8
  br label %44

34:                                               ; preds = %1
  %35 = bitcast %"class.llvm::Twine"* %0 to %"class.llvm::SmallVectorTemplateCommon"**
  %36 = load %"class.llvm::SmallVectorTemplateCommon"*, %"class.llvm::SmallVectorTemplateCommon"** %35, align 8
  %37 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %36, i64 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = getelementptr inbounds %"class.llvm::SmallVectorTemplateCommon", %"class.llvm::SmallVectorTemplateCommon"* %36, i64 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = ptrtoint i8* %38 to i64
  %43 = sub i64 %41, %42
  br label %44

44:                                               ; preds = %9, %5, %1, %34, %26, %11
  %45 = phi i8* [ %38, %34 ], [ %30, %26 ], [ %21, %11 ], [ null, %1 ], [ null, %5 ], [ %7, %9 ]
  %46 = phi i64 [ %43, %34 ], [ %33, %26 ], [ %25, %11 ], [ 0, %1 ], [ 0, %5 ], [ %10, %9 ]
  %47 = insertvalue { i8*, i64 } undef, i8* %45, 0
  %48 = insertvalue { i8*, i64 } %47, i64 %46, 1
  ret { i8*, i64 } %48
}

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN4llvm11raw_ostream13SetUnbufferedEv(%"class.llvm::raw_ostream"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 3
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.llvm::raw_ostream", %"class.llvm::raw_ostream"* %0, i64 0, i32 1
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %3, %5
  br i1 %6, label %8, label %7

7:                                                ; preds = %1
  tail call void @_ZN4llvm11raw_ostream14flush_nonemptyEv(%"class.llvm::raw_ostream"* %0) #9
  br label %8

8:                                                ; preds = %1, %7
  tail call void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"* %0, i8* null, i64 0, i32 0) #9
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN4llvm11raw_ostreamD2Ev(%"class.llvm::raw_ostream"*) unnamed_addr #4

; Function Attrs: optsize
declare void @_ZN4llvm11raw_ostream16SetBufferAndModeEPcmNS0_10BufferKindE(%"class.llvm::raw_ostream"*, i8*, i64, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEPKcm(%"class.llvm::raw_ostream"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare dereferenceable(40) %"class.llvm::raw_ostream"* @_ZN4llvm11raw_ostream5writeEh(%"class.llvm::raw_ostream"*, i8 zeroext) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: optsize
declare void @_ZN4llvm15SmallVectorBase8grow_podEPvmm(%"class.llvm::SmallVectorBase"*, i8*, i64, i64) local_unnamed_addr #2

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind optsize }
attributes #10 = { optsize }
attributes #11 = { noreturn nounwind optsize }
attributes #12 = { builtin nounwind optsize }
attributes #13 = { nounwind optsize readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4llvm9StringRef3strEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4llvm9StringRef3strEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
