; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_instruction_encoder.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_instruction_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackInstructionWithValues" = type { %"struct.quic::QpackInstruction"*, i8, i64, i64, %"class.absl::string_view", %"class.absl::string_view" }
%"class.absl::string_view" = type { i8*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::AlphaNum" = type { %"class.absl::string_view", [32 x i8] }

@switch.table._ZN4quic23QpackInstructionEncoder12DoStartFieldEv = private unnamed_addr constant [5 x i32] [i32 2, i32 3, i32 3, i32 4, i32 4], align 4

@_ZN4quic23QpackInstructionEncoderC1Ev = hidden unnamed_addr alias void (%"class.quic::QpackInstructionEncoder"*), void (%"class.quic::QpackInstructionEncoder"*)* @_ZN4quic23QpackInstructionEncoderC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4quic23QpackInstructionEncoderC2Ev(%"class.quic::QpackInstructionEncoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 1
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  %6 = bitcast i32* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %6, i8 0, i64 20, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder6EncodeERKNS_26QpackInstructionWithValuesEPNSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"*, %"class.quic::QpackInstructionWithValues"* nocapture readonly dereferenceable(64), %"class.std::__1::basic_string"*) local_unnamed_addr #1 align 2 {
  %4 = alloca <2 x i64>, align 16
  %5 = alloca <2 x i64>, align 16
  %6 = alloca <2 x i64>, align 16
  %7 = alloca <2 x i64>, align 16
  %8 = alloca %"class.absl::AlphaNum", align 8
  %9 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 0, i32* %9, align 4
  %10 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 0
  %11 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** %10, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 4
  store %"struct.quic::QpackInstruction"* %11, %"struct.quic::QpackInstruction"** %12, align 8
  %13 = getelementptr inbounds %"struct.quic::QpackInstruction", %"struct.quic::QpackInstruction"* %11, i64 0, i32 1, i32 0, i32 0
  %14 = bitcast %"struct.quic::QpackInstructionField"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %17 = bitcast %"struct.quic::QpackInstructionField"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 4, i32 0
  %19 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 5, i32 0
  %20 = bitcast <2 x i64>* %6 to i8*
  %21 = bitcast <2 x i64>* %7 to i8*
  %22 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 1
  %24 = bitcast %"class.absl::AlphaNum"* %8 to i8*
  %25 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %8, i64 0, i32 0, i32 1
  %27 = bitcast <2 x i64>* %4 to i8*
  %28 = bitcast <2 x i64>* %5 to i8*
  %29 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  %30 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 2
  %31 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 3
  %32 = getelementptr inbounds %"class.quic::QpackInstructionWithValues", %"class.quic::QpackInstructionWithValues"* %1, i64 0, i32 1
  %33 = inttoptr i64 %15 to %"struct.quic::QpackInstructionField"*
  %34 = bitcast i8** %18 to <2 x i64>*
  %35 = bitcast i8** %19 to <2 x i64>*
  %36 = bitcast i8** %18 to <2 x i64>*
  %37 = bitcast i8** %19 to <2 x i64>*
  br label %38

38:                                               ; preds = %128, %3
  %39 = phi %"struct.quic::QpackInstructionField"* [ %129, %128 ], [ %33, %3 ]
  %40 = phi %"struct.quic::QpackInstruction"* [ %131, %128 ], [ %11, %3 ]
  %41 = phi i32 [ %130, %128 ], [ 0, %3 ]
  switch i32 %41, label %128 [
    i32 0, label %42
    i32 1, label %45
    i32 2, label %51
    i32 3, label %61
    i32 4, label %82
    i32 5, label %108
  ]

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"struct.quic::QpackInstruction", %"struct.quic::QpackInstruction"* %40, i64 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8
  store i8 %44, i8* %29, align 8
  store i32 1, i32* %9, align 4
  br label %128

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  switch i32 %47, label %128 [
    i32 0, label %48
    i32 1, label %49
    i32 2, label %49
    i32 3, label %50
    i32 4, label %50
  ]

48:                                               ; preds = %45
  store i32 2, i32* %9, align 4
  br label %128

49:                                               ; preds = %45, %45
  store i32 3, i32* %9, align 4
  br label %128

50:                                               ; preds = %45, %45
  store i32 4, i32* %9, align 4
  br label %128

51:                                               ; preds = %38
  %52 = load i8, i8* %32, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 1
  %56 = load i8, i8* %55, align 4
  %57 = load i8, i8* %29, align 8
  %58 = or i8 %57, %56
  store i8 %58, i8* %29, align 8
  br label %59

59:                                               ; preds = %51, %54
  %60 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 1
  store %"struct.quic::QpackInstructionField"* %60, %"struct.quic::QpackInstructionField"** %16, align 8
  store i32 1, i32* %9, align 4
  br label %128

61:                                               ; preds = %38
  %62 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  switch i32 %63, label %65 [
    i32 1, label %66
    i32 2, label %64
  ]

64:                                               ; preds = %61
  br label %66

65:                                               ; preds = %61
  br label %66

66:                                               ; preds = %65, %64, %61
  %67 = phi i64* [ %23, %65 ], [ %31, %64 ], [ %30, %61 ]
  %68 = load i64, i64* %67, align 8
  %69 = load i8, i8* %29, align 8
  %70 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 1
  %71 = load i8, i8* %70, align 4
  call void @_ZN5http218HpackVarintEncoder6EncodeEhhmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8 zeroext %69, i8 zeroext %71, i64 %68, %"class.std::__1::basic_string"* %2) #5
  store i8 0, i8* %29, align 8
  %72 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %16, align 8
  %73 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = add i32 %74, -1
  %76 = icmp ult i32 %75, 2
  br i1 %76, label %77, label %79

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %72, i64 1
  store %"struct.quic::QpackInstructionField"* %78, %"struct.quic::QpackInstructionField"** %16, align 8
  br label %79

79:                                               ; preds = %66, %77
  %80 = phi %"struct.quic::QpackInstructionField"* [ %78, %77 ], [ %72, %66 ]
  %81 = phi i32 [ 1, %77 ], [ 5, %66 ]
  store i32 %81, i32* %9, align 4
  br label %128

82:                                               ; preds = %38
  %83 = load <2 x i64>, <2 x i64>* %36, align 8
  %84 = load <2 x i64>, <2 x i64>* %37, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28)
  store <2 x i64> %83, <2 x i64>* %4, align 16
  store <2 x i64> %84, <2 x i64>* %5, align 16
  %85 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 3
  %88 = select i1 %87, <2 x i64>* %4, <2 x i64>* %5
  %89 = bitcast <2 x i64>* %88 to %"class.absl::string_view"*
  %90 = bitcast <2 x i64>* %88 to i8**
  %91 = load i8*, i8** %90, align 16
  %92 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %89, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  store i64 %93, i64* %23, align 8
  %94 = call i64 @_ZN5http211HuffmanSizeEN4absl11string_viewE(i8* %91, i64 %93) #5
  %95 = load i64, i64* %23, align 8
  %96 = icmp ult i64 %94, %95
  %97 = zext i1 %96 to i8
  store i8 %97, i8* %22, align 8
  %98 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %16, align 8
  br i1 %96, label %99, label %107

99:                                               ; preds = %82
  %100 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %98, i64 0, i32 1
  %101 = load i8, i8* %100, align 4
  %102 = zext i8 %101 to i32
  %103 = shl i32 1, %102
  %104 = load i8, i8* %29, align 8
  %105 = trunc i32 %103 to i8
  %106 = or i8 %104, %105
  store i8 %106, i8* %29, align 8
  store i64 %94, i64* %23, align 8
  br label %107

107:                                              ; preds = %82, %99
  store i32 3, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28)
  br label %128

108:                                              ; preds = %38
  %109 = load <2 x i64>, <2 x i64>* %34, align 8
  %110 = load <2 x i64>, <2 x i64>* %35, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21)
  store <2 x i64> %109, <2 x i64>* %6, align 16
  store <2 x i64> %110, <2 x i64>* %7, align 16
  %111 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %39, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 3
  %114 = select i1 %113, <2 x i64>* %6, <2 x i64>* %7
  %115 = bitcast <2 x i64>* %114 to %"class.absl::string_view"*
  %116 = bitcast <2 x i64>* %114 to i8**
  %117 = load i8*, i8** %116, align 16
  %118 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %115, i64 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = load i8, i8* %22, align 8, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %108
  %123 = load i64, i64* %23, align 8
  call void @_ZN5http217HuffmanEncodeFastEN4absl11string_viewEmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %117, i64 %119, i64 %123, %"class.std::__1::basic_string"* %2) #5
  br label %125

124:                                              ; preds = %108
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #5
  store i8* %117, i8** %25, align 8
  store i64 %119, i64* %26, align 8
  call void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"* %2, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %8) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #5
  br label %125

125:                                              ; preds = %122, %124
  %126 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %16, align 8
  %127 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %126, i64 1
  store %"struct.quic::QpackInstructionField"* %127, %"struct.quic::QpackInstructionField"** %16, align 8
  store i32 1, i32* %9, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21)
  br label %128

128:                                              ; preds = %50, %49, %48, %45, %42, %59, %79, %107, %125, %38
  %129 = phi %"struct.quic::QpackInstructionField"* [ %39, %50 ], [ %39, %49 ], [ %39, %48 ], [ %39, %45 ], [ %39, %42 ], [ %60, %59 ], [ %80, %79 ], [ %98, %107 ], [ %127, %125 ], [ %39, %38 ]
  %130 = phi i32 [ 4, %50 ], [ 3, %49 ], [ 2, %48 ], [ 1, %45 ], [ 1, %42 ], [ 1, %59 ], [ %81, %79 ], [ 3, %107 ], [ 1, %125 ], [ %41, %38 ]
  %131 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** %12, align 8
  %132 = getelementptr inbounds %"struct.quic::QpackInstruction", %"struct.quic::QpackInstruction"* %131, i64 0, i32 1, i32 0, i32 1
  %133 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %132, align 8
  %134 = icmp eq %"struct.quic::QpackInstructionField"* %129, %133
  br i1 %134, label %135, label %38

135:                                              ; preds = %128
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder8DoOpcodeEv(%"class.quic::QpackInstructionEncoder"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 4
  %3 = load %"struct.quic::QpackInstruction"*, %"struct.quic::QpackInstruction"** %2, align 8
  %4 = getelementptr inbounds %"struct.quic::QpackInstruction", %"struct.quic::QpackInstruction"* %3, i64 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8
  %6 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  store i8 %5, i8* %6, align 8
  %7 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 1, i32* %7, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder12DoStartFieldEv(%"class.quic::QpackInstructionEncoder"* nocapture) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %3 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %2, align 8
  %4 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %3, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp ult i32 %5, 5
  br i1 %6, label %7, label %12

7:                                                ; preds = %1
  %8 = sext i32 %5 to i64
  %9 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN4quic23QpackInstructionEncoder12DoStartFieldEv, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 %10, i32* %11, align 4
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder6DoSBitEb(%"class.quic::QpackInstructionEncoder"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %4 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %3, align 8
  br i1 %1, label %5, label %11

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %4, i64 0, i32 1
  %7 = load i8, i8* %6, align 4
  %8 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  %9 = load i8, i8* %8, align 8
  %10 = or i8 %9, %7
  store i8 %10, i8* %8, align 8
  br label %11

11:                                               ; preds = %2, %5
  %12 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %13 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %4, i64 1
  store %"struct.quic::QpackInstructionField"* %13, %"struct.quic::QpackInstructionField"** %12, align 8
  %14 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 1, i32* %14, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder14DoVarintEncodeEmmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* nocapture, i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %6 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %5, align 8
  %7 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %10 [
    i32 1, label %13
    i32 2, label %9
  ]

9:                                                ; preds = %4
  br label %13

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %4, %10, %9
  %14 = phi i64 [ %12, %10 ], [ %2, %9 ], [ %1, %4 ]
  %15 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  %16 = load i8, i8* %15, align 8
  %17 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %6, i64 0, i32 1
  %18 = load i8, i8* %17, align 4
  tail call void @_ZN5http218HpackVarintEncoder6EncodeEhhmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8 zeroext %16, i8 zeroext %18, i64 %14, %"class.std::__1::basic_string"* %3) #5
  store i8 0, i8* %15, align 8
  %19 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %5, align 8
  %20 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %21, -1
  %23 = icmp ult i32 %22, 2
  br i1 %23, label %24, label %26

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %19, i64 1
  store %"struct.quic::QpackInstructionField"* %25, %"struct.quic::QpackInstructionField"** %5, align 8
  br label %26

26:                                               ; preds = %13, %24
  %27 = phi i32 [ 1, %24 ], [ 5, %13 ]
  %28 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 %27, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder13DoStartStringEN4absl11string_viewES2_(%"class.quic::QpackInstructionEncoder"* nocapture, i8*, i64, i8*, i64) local_unnamed_addr #1 align 2 {
  %6 = alloca %"class.absl::string_view", align 8
  %7 = alloca %"class.absl::string_view", align 8
  %8 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 0
  store i8* %1, i8** %8, align 8
  %9 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %6, i64 0, i32 1
  store i64 %2, i64* %9, align 8
  %10 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %7, i64 0, i32 0
  store i8* %3, i8** %10, align 8
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %7, i64 0, i32 1
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %13 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %12, align 8
  %14 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  %17 = select i1 %16, %"class.absl::string_view"* %6, %"class.absl::string_view"* %7
  %18 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %17, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 1
  store i64 %21, i64* %22, align 8
  %23 = tail call i64 @_ZN5http211HuffmanSizeEN4absl11string_viewE(i8* %19, i64 %21) #5
  %24 = load i64, i64* %22, align 8
  %25 = icmp ult i64 %23, %24
  %26 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 0
  %27 = zext i1 %25 to i8
  store i8 %27, i8* %26, align 8
  br i1 %25, label %28, label %38

28:                                               ; preds = %5
  %29 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %12, align 8
  %30 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %29, i64 0, i32 1
  %31 = load i8, i8* %30, align 4
  %32 = zext i8 %31 to i32
  %33 = shl i32 1, %32
  %34 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 2
  %35 = load i8, i8* %34, align 8
  %36 = trunc i32 %33 to i8
  %37 = or i8 %35, %36
  store i8 %37, i8* %34, align 8
  store i64 %23, i64* %22, align 8
  br label %38

38:                                               ; preds = %28, %5
  %39 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 3, i32* %39, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic23QpackInstructionEncoder13DoWriteStringEN4absl11string_viewES2_PNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE(%"class.quic::QpackInstructionEncoder"* nocapture, i8*, i64, i8*, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #1 align 2 {
  %7 = alloca %"class.absl::string_view", align 8
  %8 = alloca %"class.absl::string_view", align 8
  %9 = alloca %"class.absl::AlphaNum", align 8
  %10 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %7, i64 0, i32 0
  store i8* %1, i8** %10, align 8
  %11 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %7, i64 0, i32 1
  store i64 %2, i64* %11, align 8
  %12 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %8, i64 0, i32 0
  store i8* %3, i8** %12, align 8
  %13 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %8, i64 0, i32 1
  store i64 %4, i64* %13, align 8
  %14 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 5, i32 0
  %15 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %14, align 8
  %16 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %15, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 3
  %19 = select i1 %18, %"class.absl::string_view"* %7, %"class.absl::string_view"* %8
  %20 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %19, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  %22 = getelementptr inbounds %"class.absl::string_view", %"class.absl::string_view"* %19, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  tail call void @_ZN5http217HuffmanEncodeFastEN4absl11string_viewEmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8* %21, i64 %23, i64 %29, %"class.std::__1::basic_string"* %5) #5
  br label %34

30:                                               ; preds = %6
  %31 = bitcast %"class.absl::AlphaNum"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %31) #5
  %32 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 0
  store i8* %21, i8** %32, align 8
  %33 = getelementptr inbounds %"class.absl::AlphaNum", %"class.absl::AlphaNum"* %9, i64 0, i32 0, i32 1
  store i64 %23, i64* %33, align 8
  call void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"* %5, %"class.absl::AlphaNum"* nonnull dereferenceable(48) %9) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %31) #5
  br label %34

34:                                               ; preds = %30, %27
  %35 = load %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"** %14, align 8
  %36 = getelementptr inbounds %"struct.quic::QpackInstructionField", %"struct.quic::QpackInstructionField"* %35, i64 1
  store %"struct.quic::QpackInstructionField"* %36, %"struct.quic::QpackInstructionField"** %14, align 8
  %37 = getelementptr inbounds %"class.quic::QpackInstructionEncoder", %"class.quic::QpackInstructionEncoder"* %0, i64 0, i32 3
  store i32 1, i32* %37, align 4
  ret void
}

declare void @_ZN5http218HpackVarintEncoder6EncodeEhhmPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(i8 zeroext, i8 zeroext, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare i64 @_ZN5http211HuffmanSizeEN4absl11string_viewE(i8*, i64) local_unnamed_addr #4

declare void @_ZN5http217HuffmanEncodeFastEN4absl11string_viewEmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(i8*, i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #4

declare void @_ZN4absl9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEERKNS_8AlphaNumE(%"class.std::__1::basic_string"*, %"class.absl::AlphaNum"* dereferenceable(48)) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
