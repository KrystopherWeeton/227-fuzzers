; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_media_track_settings.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_media_track_settings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.160", i32, [4 x i8], %"class.std::__1::unique_ptr.296", %"class.std::__1::unique_ptr.296", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.306", %"class.std::__1::unique_ptr.312", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.324", %"class.std::__1::unique_ptr.330", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.337", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.163", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.193", %"class.std::__1::unique_ptr.204", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.211", %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.239", %"class.std::__1::unique_ptr.246", %"class.std::__1::unique_ptr.253", %"class.std::__1::unique_ptr.276", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.163" = type { %"class.std::__1::__compressed_pair.164" }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.193" = type { %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i64 }
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::Worklist.207"* }
%"class.blink::Worklist.207" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::Worklist.214"* }
%"class.blink::Worklist.214" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %"class.blink::Worklist.221"* }
%"class.blink::Worklist.221" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::Worklist.228"* }
%"class.blink::Worklist.228" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.blink::Worklist.235"* }
%"class.blink::Worklist.235" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.241" }
%"struct.std::__1::__compressed_pair_elem.241" = type { %"class.blink::Worklist.242"* }
%"class.blink::Worklist.242" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::Worklist.249"* }
%"class.blink::Worklist.249" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.196" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.256", %"class.std::__1::__compressed_pair.263", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.270", [4 x i8] }>
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258", %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.260" }
%"class.std::__1::__compressed_pair.260" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"struct.std::__1::__compressed_pair_elem.261" = type { i64 }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.261" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { float }
%"class.std::__1::unique_ptr.276" = type { %"class.std::__1::__compressed_pair.277" }
%"class.std::__1::__compressed_pair.277" = type { %"struct.std::__1::__compressed_pair_elem.278" }
%"struct.std::__1::__compressed_pair_elem.278" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.279", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.279" = type { %"class.std::__1::__compressed_pair.280" }
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.296" = type { %"class.std::__1::__compressed_pair.297" }
%"class.std::__1::__compressed_pair.297" = type { %"struct.std::__1::__compressed_pair_elem.298" }
%"struct.std::__1::__compressed_pair_elem.298" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.304" }
%"class.WTF::VectorBuffer.304" = type { %"class.WTF::VectorBufferBase.305" }
%"class.WTF::VectorBufferBase.305" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.306" = type { %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.308" }
%"struct.std::__1::__compressed_pair_elem.308" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.318" }
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.207"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.214"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.221"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.228"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.235"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.371" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.371" = type { %"struct.std::__1::__compressed_pair_elem.372" }
%"struct.std::__1::__compressed_pair_elem.372" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.324" = type { %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.336 }
%class.scoped_refptr.336 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__cxx_atomic_impl.339" }
%"struct.std::__1::__cxx_atomic_impl.339" = type { %"struct.std::__1::__cxx_atomic_base_impl.340" }
%"struct.std::__1::__cxx_atomic_base_impl.340" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.440" }
%"struct.std::__1::atomic.440" = type { %"struct.std::__1::__atomic_base.441" }
%"struct.std::__1::__atomic_base.441" = type { %"struct.std::__1::__atomic_base.442" }
%"struct.std::__1::__atomic_base.442" = type { %"struct.std::__1::__cxx_atomic_impl.443" }
%"struct.std::__1::__cxx_atomic_impl.443" = type { %"struct.std::__1::__cxx_atomic_base_impl.444" }
%"struct.std::__1::__cxx_atomic_base_impl.444" = type { i32 }
%"class.v8::Value" = type { i8 }
%"class.blink::MediaTrackSettings" = type { %"class.blink::IDLDictionaryBase", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, double, i8, double, %"class.blink::Member", i32, double, double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i8, double, %"class.WTF::String", double, %"class.WTF::String", double, %"class.WTF::String", double, %"class.WTF::String", i32, double, double, i8, i8, double, %"class.blink::HeapVector", %"class.WTF::String", i32, i32, double, double, double, i8, %"class.WTF::String", %"class.WTF::String", i32, double }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CaptureHandle"* }
%"class.blink::CaptureHandle" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.3"*, i32, i32 }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::Point2D"* }
%"class.blink::Point2D" = type { %"class.blink::IDLDictionaryBase", i8, i8, double, double }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap.99", %"class.WTF::HashMap.99", %"class.WTF::HashMap.104", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.154", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.341", %"class.std::__1::unique_ptr.346", %"class.blink::Persistent.352", %"class.blink::Persistent.356", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.81", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.93", i32, i32 }
%"class.std::__1::unique_ptr.81" = type { %"class.std::__1::__compressed_pair.82" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap.99" = type { %"class.WTF::HashTable.100" }
%"class.WTF::HashTable.100" = type <{ %"struct.WTF::KeyValuePair.103"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.103" = type opaque
%"class.WTF::HashMap.104" = type { %"class.WTF::HashTable.105" }
%"class.WTF::HashTable.105" = type <{ %"struct.WTF::KeyValuePair.108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.108" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.117", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.112", i8* }
%"class.WTF::HashMap.112" = type { %"class.WTF::HashTable.113" }
%"class.WTF::HashTable.113" = type <{ %"struct.WTF::KeyValuePair.116"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.116" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.117" = type { %"class.v8::PersistentValueMapBase.118" }
%"class.v8::PersistentValueMapBase.118" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.119", i8* }
%"class.WTF::HashMap.119" = type { %"class.WTF::HashTable.120" }
%"class.WTF::HashTable.120" = type <{ %"struct.WTF::KeyValuePair.123"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.123" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.124" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.138", %"class.WTF::Vector.144", i8, i32 }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.WTF::Vector.130"* }
%"class.WTF::Vector.130" = type { %"class.WTF::VectorBuffer.131" }
%"class.WTF::VectorBuffer.131" = type { %"class.WTF::VectorBufferBase.132" }
%"class.WTF::VectorBufferBase.132" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.144" = type { %"class.WTF::VectorBuffer.145" }
%"class.WTF::VectorBuffer.145" = type { %"class.WTF::VectorBufferBase.132", [32 x i8] }
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.378, %"class.blink::Member.399", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.378 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.379", i32, i32, %"class.blink::Persistent.381" }
%"class.WTF::RefCounted.379" = type { %"class.base::RefCounted.380" }
%"class.base::RefCounted.380" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.381" = type { %"class.blink::PersistentBase.382" }
%"class.blink::PersistentBase.382" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.385" }
%"class.blink::HeapHashMap.385" = type { %"class.WTF::HashMap.388" }
%"class.WTF::HashMap.388" = type { %"class.WTF::HashTable.389" }
%"class.WTF::HashTable.389" = type <{ %"struct.WTF::KeyValuePair.391"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.391" = type { %"class.blink::WeakMember.392", %"class.blink::TraceWrapperV8Reference.396" }
%"class.blink::WeakMember.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.396" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.396" = type { %"class.v8::TracedReference.397" }
%"class.v8::TracedReference.397" = type { %"class.v8::BasicTracedReference.398" }
%"class.v8::BasicTracedReference.398" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.399" = type { %"class.blink::MemberBase.400" }
%"class.blink::MemberBase.400" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.341" = type { %"class.WTF::VectorBuffer.342" }
%"class.WTF::VectorBuffer.342" = type { %"class.WTF::VectorBufferBase.343" }
%"class.WTF::VectorBufferBase.343" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.346" = type { %"class.std::__1::__compressed_pair.347" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.348" }
%"struct.std::__1::__compressed_pair_elem.348" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.352" = type { %"class.blink::PersistentBase.353" }
%"class.blink::PersistentBase.353" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.356" = type { %"class.blink::PersistentBase.357" }
%"class.blink::PersistentBase.357" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector.360", i64 }
%"class.blink::HeapVector.360" = type { %"class.WTF::Vector.363" }
%"class.WTF::Vector.363" = type { %"class.WTF::VectorBuffer.364" }
%"class.WTF::VectorBuffer.364" = type { %"class.WTF::VectorBufferBase.365" }
%"class.WTF::VectorBufferBase.365" = type { %"struct.std::__1::pair.366"*, i32, i32 }
%"struct.std::__1::pair.366" = type { %"class.blink::UntracedMember", %"class.blink::Member.368" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.401" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.35", i32, i8, [3 x i8], %"class.blink::HeapVector.37", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.45", %"class.blink::Member.47", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.56", %"class.blink::Member.62", %"class.blink::Member.64", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.14" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.12" }
%"class.WTF::HashTable.12" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::Supplementable.14" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.15" }
%"class.blink::HeapHashMap.15" = type { %"class.WTF::HashMap.18" }
%"class.WTF::HashMap.18" = type { %"class.WTF::HashTable.19" }
%"class.WTF::HashTable.19" = type <{ %"struct.WTF::KeyValuePair.21"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.21" = type { i8*, %"class.blink::Member.77" }
%"class.blink::Member.77" = type { %"class.blink::MemberBase.78" }
%"class.blink::MemberBase.78" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.79" }
%"class.blink::Member.79" = type { %"class.blink::MemberBase.80" }
%"class.blink::MemberBase.80" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.22, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.24", %"class.blink::Member.30", i32, [4 x i8], %"class.WTF::HashSet.32", i32, i32 }
%class.scoped_refptr.22 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type opaque
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::ExecutionContext"* }
%"class.WTF::HashSet.32" = type { %"class.WTF::HashTable.33" }
%"class.WTF::HashTable.33" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.35" = type { %"class.blink::MemberBase.36" }
%"class.blink::MemberBase.36" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.37" = type { %"class.WTF::Vector.40" }
%"class.WTF::Vector.40" = type { %"class.WTF::VectorBuffer.41" }
%"class.WTF::VectorBuffer.41" = type { %"class.WTF::VectorBufferBase.42" }
%"class.WTF::VectorBufferBase.42" = type { %"class.blink::Member.43"*, i32, i32 }
%"class.blink::Member.43" = type opaque
%"class.blink::Member.45" = type { %"class.blink::MemberBase.46" }
%"class.blink::MemberBase.46" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.49", i32, i32 }
%"class.blink::HeapHashMap.49" = type { %"class.WTF::HashMap.52" }
%"class.WTF::HashMap.52" = type { %"class.WTF::HashTable.53" }
%"class.WTF::HashTable.53" = type <{ %"struct.WTF::KeyValuePair.55"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.55" = type opaque
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.62" = type { %"class.blink::MemberBase.63" }
%"class.blink::MemberBase.63" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.64" = type { %"class.blink::MemberBase.65" }
%"class.blink::MemberBase.65" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.v8::Boolean" = type { i8 }
%"class.v8::Int32" = type { i8 }
%"class.v8::String" = type { i8 }
%"class.blink::ScriptIterator" = type { %"class.v8::Isolate"*, %"class.v8::Local.5", %"class.v8::Local", %"class.v8::Local.75", %"class.v8::Local.75", i8, %"class.v8::MaybeLocal" }
%"class.v8::Local.5" = type { %"class.v8::Object"* }
%"class.v8::Local.75" = type { %"class.v8::String"* }
%"class.v8::MaybeLocal" = type { %"class.v8::Value"* }
%"class.v8::Array" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.v8::Number" = type { i8 }
%"class.v8::Integer" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.445 }
%union.anon.445 = type { %"class.blink::RuntimeCallTimerScope" }
%"class.blink::RuntimeCallTimerScope" = type { %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallTimer" }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_7Point2DEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE = comdat any

$_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7Point2DEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7Point2DEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_7Point2DEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@_ZZN5blinkL31eternalV8MediaTrackSettingsKeysEPN2v87IsolateEE5kKeys = internal constant [37 x i8*] [i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.1, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.37, i32 0, i32 0)], align 16
@.str.1 = private unnamed_addr constant [12 x i8] c"aspectRatio\00", align 1
@.str.2 = private unnamed_addr constant [16 x i8] c"autoGainControl\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"brightness\00", align 1
@.str.4 = private unnamed_addr constant [14 x i8] c"captureHandle\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"channelCount\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"colorTemperature\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"contrast\00", align 1
@.str.8 = private unnamed_addr constant [7 x i8] c"cursor\00", align 1
@.str.9 = private unnamed_addr constant [9 x i8] c"deviceId\00", align 1
@.str.10 = private unnamed_addr constant [15 x i8] c"displaySurface\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"echoCancellation\00", align 1
@.str.12 = private unnamed_addr constant [21 x i8] c"exposureCompensation\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"exposureMode\00", align 1
@.str.14 = private unnamed_addr constant [13 x i8] c"exposureTime\00", align 1
@.str.15 = private unnamed_addr constant [11 x i8] c"facingMode\00", align 1
@.str.16 = private unnamed_addr constant [14 x i8] c"focusDistance\00", align 1
@.str.17 = private unnamed_addr constant [10 x i8] c"focusMode\00", align 1
@.str.18 = private unnamed_addr constant [10 x i8] c"frameRate\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"groupId\00", align 1
@.str.20 = private unnamed_addr constant [7 x i8] c"height\00", align 1
@.str.21 = private unnamed_addr constant [4 x i8] c"iso\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"latency\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"logicalSurface\00", align 1
@.str.24 = private unnamed_addr constant [17 x i8] c"noiseSuppression\00", align 1
@.str.25 = private unnamed_addr constant [4 x i8] c"pan\00", align 1
@.str.26 = private unnamed_addr constant [17 x i8] c"pointsOfInterest\00", align 1
@.str.27 = private unnamed_addr constant [11 x i8] c"resizeMode\00", align 1
@.str.28 = private unnamed_addr constant [11 x i8] c"sampleRate\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"sampleSize\00", align 1
@.str.30 = private unnamed_addr constant [11 x i8] c"saturation\00", align 1
@.str.31 = private unnamed_addr constant [10 x i8] c"sharpness\00", align 1
@.str.32 = private unnamed_addr constant [5 x i8] c"tilt\00", align 1
@.str.33 = private unnamed_addr constant [6 x i8] c"torch\00", align 1
@.str.34 = private unnamed_addr constant [10 x i8] c"videoKind\00", align 1
@.str.35 = private unnamed_addr constant [17 x i8] c"whiteBalanceMode\00", align 1
@.str.36 = private unnamed_addr constant [6 x i8] c"width\00", align 1
@.str.37 = private unnamed_addr constant [5 x i8] c"zoom\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 37, i8** getelementptr inbounds ([37 x i8*], [37 x i8*]* @_ZZN5blinkL31eternalV8MediaTrackSettingsKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase29is_get_display_media_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase42is_media_capture_depth_video_kind_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::IDLDictionaryBase]\00", align 1
@.str.38 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.39 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.40 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.41 = private unnamed_addr constant [54 x i8] c"The provided value cannot be converted to a sequence.\00", align 1
@.str.42 = private unnamed_addr constant [53 x i8] c"The object must have a callable @@iterator property.\00", align 1
@.str.43 = private unnamed_addr constant [38 x i8] c"Array length exceeds supported limit.\00", align 1
@.str.44 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.45 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.46 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.47 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7Point2DEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Point2D>, WTF::VectorTraits<blink::Member<blink::Point2D> > >]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.48 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.49 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E = external local_unnamed_addr global i8, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20V8MediaTrackSettings6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18MediaTrackSettingsERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::MediaTrackSettings"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.blink::V8StringResource", align 8
  %8 = alloca %"class.blink::V8StringResource", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.blink::V8StringResource", align 8
  %11 = alloca %"class.blink::HeapVector", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.blink::V8StringResource", align 8
  %14 = alloca %"class.blink::V8StringResource", align 8
  %15 = alloca %"class.blink::V8StringResource", align 8
  %16 = alloca %"class.blink::V8StringResource", align 8
  %17 = icmp eq %"class.v8::Value"* %1, null
  br i1 %17, label %2950, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.v8::Value"* %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 3
  %22 = icmp eq i64 %21, 1
  br i1 %22, label %23, label %39

23:                                               ; preds = %18
  %24 = add i64 %20, -1
  %25 = inttoptr i64 %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = and i64 %20, -4294967296
  %28 = zext i32 %26 to i64
  %29 = or i64 %27, %28
  %30 = add i64 %29, 7
  %31 = inttoptr i64 %30 to i16*
  %32 = load i16, i16* %31, align 2
  %33 = icmp eq i16 %32, 67
  br i1 %33, label %34, label %39

34:                                               ; preds = %23
  %35 = add i64 %20, 23
  %36 = inttoptr i64 %35 to i32*
  %37 = load i32, i32* %36, align 4
  %38 = ashr i32 %37, 1
  switch i32 %38, label %39 [
    i32 5, label %2950
    i32 3, label %2950
  ]

39:                                               ; preds = %34, %23, %18
  %40 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #8
  br i1 %40, label %42, label %41

41:                                               ; preds = %39
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str, i64 0, i64 0)) #8
  br label %2950

42:                                               ; preds = %39
  %43 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %44 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %45 = add i64 %44, 8
  %46 = inttoptr i64 %45 to %"class.blink::V8PerIsolateData"**
  %47 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %46, align 8
  %48 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %47, i8* bitcast ([37 x i8*]* @_ZZN5blinkL31eternalV8MediaTrackSettingsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.401"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.401"*)) #8
  %49 = extractvalue { i64, %"class.v8::Eternal"* } %48, 1
  %50 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %50) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #8
  %51 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #8
  %52 = call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %51) #8
  %53 = bitcast %"class.v8::Eternal"* %49 to %"class.v8::Value"**
  %54 = load %"class.v8::Value"*, %"class.v8::Value"** %53, align 8
  %55 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %54) #8
  %56 = icmp eq %"class.v8::Value"* %55, null
  br i1 %56, label %57, label %63

57:                                               ; preds = %42
  %58 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %59 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %60 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %60, i64 5
  %62 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %61, align 8
  call void %62(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %58) #8
  br label %2949

63:                                               ; preds = %42
  %64 = bitcast %"class.v8::Value"* %55 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 3
  %67 = icmp eq i64 %66, 1
  br i1 %67, label %68, label %85

68:                                               ; preds = %63
  %69 = add i64 %65, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = load i32, i32* %70, align 4
  %72 = and i64 %65, -4294967296
  %73 = zext i32 %71 to i64
  %74 = or i64 %72, %73
  %75 = add i64 %74, 7
  %76 = inttoptr i64 %75 to i16*
  %77 = load i16, i16* %76, align 2
  %78 = icmp eq i16 %77, 67
  br i1 %78, label %79, label %85

79:                                               ; preds = %68
  %80 = add i64 %65, 23
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = and i32 %82, -2
  %84 = icmp eq i32 %83, 10
  br i1 %84, label %93, label %85

85:                                               ; preds = %68, %63, %79
  %86 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %55, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %87 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %2949

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 27
  store double %86, double* %91, align 8
  %92 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 1
  store i8 1, i8* %92, align 8
  br label %93

93:                                               ; preds = %90, %79
  %94 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 1, i32 0
  %95 = bitcast %"class.v8::Name"** %94 to %"class.v8::Value"**
  %96 = load %"class.v8::Value"*, %"class.v8::Value"** %95, align 8
  %97 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %96) #8
  %98 = icmp eq %"class.v8::Value"* %97, null
  br i1 %98, label %99, label %105

99:                                               ; preds = %93
  %100 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %101 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %102 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %102, i64 5
  %104 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %103, align 8
  call void %104(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %100) #8
  br label %2949

105:                                              ; preds = %93
  %106 = bitcast %"class.v8::Value"* %97 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = and i64 %107, 3
  %109 = icmp eq i64 %108, 1
  br i1 %109, label %110, label %127

110:                                              ; preds = %105
  %111 = add i64 %107, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load i32, i32* %112, align 4
  %114 = and i64 %107, -4294967296
  %115 = zext i32 %113 to i64
  %116 = or i64 %114, %115
  %117 = add i64 %116, 7
  %118 = inttoptr i64 %117 to i16*
  %119 = load i16, i16* %118, align 2
  %120 = icmp eq i16 %119, 67
  br i1 %120, label %121, label %127

121:                                              ; preds = %110
  %122 = add i64 %107, 23
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = and i32 %124, -2
  %126 = icmp eq i32 %125, 10
  br i1 %126, label %143, label %127

127:                                              ; preds = %110, %105, %121
  %128 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %97) #8
  br i1 %128, label %129, label %132, !prof !2

129:                                              ; preds = %127
  %130 = bitcast %"class.v8::Value"* %97 to %"class.v8::Boolean"*
  %131 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %130) #8
  br label %134

132:                                              ; preds = %127
  %133 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %97, %"class.v8::Isolate"* %0) #8
  br label %134

134:                                              ; preds = %129, %132
  %135 = phi i1 [ %131, %129 ], [ %133, %132 ]
  %136 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %137 = load i32, i32* %136, align 8
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %2949

139:                                              ; preds = %134
  %140 = zext i1 %135 to i8
  %141 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 28
  store i8 %140, i8* %141, align 8
  %142 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 2
  store i8 1, i8* %142, align 1
  br label %143

143:                                              ; preds = %139, %121
  %144 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 2, i32 0
  %145 = bitcast %"class.v8::Name"** %144 to %"class.v8::Value"**
  %146 = load %"class.v8::Value"*, %"class.v8::Value"** %145, align 8
  %147 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %146) #8
  %148 = icmp eq %"class.v8::Value"* %147, null
  br i1 %148, label %149, label %155

149:                                              ; preds = %143
  %150 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %151 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %152 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %151, align 8
  %153 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %152, i64 5
  %154 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %153, align 8
  call void %154(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %150) #8
  br label %2949

155:                                              ; preds = %143
  %156 = bitcast %"class.v8::Value"* %147 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = and i64 %157, 3
  %159 = icmp eq i64 %158, 1
  br i1 %159, label %160, label %177

160:                                              ; preds = %155
  %161 = add i64 %157, -1
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = and i64 %157, -4294967296
  %165 = zext i32 %163 to i64
  %166 = or i64 %164, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load i16, i16* %168, align 2
  %170 = icmp eq i16 %169, 67
  br i1 %170, label %171, label %177

171:                                              ; preds = %160
  %172 = add i64 %157, 23
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, -2
  %176 = icmp eq i32 %175, 10
  br i1 %176, label %185, label %177

177:                                              ; preds = %160, %155, %171
  %178 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %147, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %179 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %182, label %2949

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 29
  store double %178, double* %183, align 8
  %184 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 3
  store i8 1, i8* %184, align 2
  br label %185

185:                                              ; preds = %182, %171
  %186 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 4, i32 0
  %187 = bitcast %"class.v8::Name"** %186 to %"class.v8::Value"**
  %188 = load %"class.v8::Value"*, %"class.v8::Value"** %187, align 8
  %189 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %188) #8
  %190 = icmp eq %"class.v8::Value"* %189, null
  br i1 %190, label %191, label %197

191:                                              ; preds = %185
  %192 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %193 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %194 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %193, align 8
  %195 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %194, i64 5
  %196 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %195, align 8
  call void %196(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %192) #8
  br label %2949

197:                                              ; preds = %185
  %198 = bitcast %"class.v8::Value"* %189 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = and i64 %199, 3
  %201 = icmp eq i64 %200, 1
  br i1 %201, label %202, label %219

202:                                              ; preds = %197
  %203 = add i64 %199, -1
  %204 = inttoptr i64 %203 to i32*
  %205 = load i32, i32* %204, align 4
  %206 = and i64 %199, -4294967296
  %207 = zext i32 %205 to i64
  %208 = or i64 %206, %207
  %209 = add i64 %208, 7
  %210 = inttoptr i64 %209 to i16*
  %211 = load i16, i16* %210, align 2
  %212 = icmp eq i16 %211, 67
  br i1 %212, label %213, label %219

213:                                              ; preds = %202
  %214 = add i64 %199, 23
  %215 = inttoptr i64 %214 to i32*
  %216 = load i32, i32* %215, align 4
  %217 = and i32 %216, -2
  %218 = icmp eq i32 %217, 10
  br i1 %218, label %234, label %219

219:                                              ; preds = %202, %197, %213
  %220 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %189) #8
  br i1 %220, label %221, label %224, !prof !2

221:                                              ; preds = %219
  %222 = bitcast %"class.v8::Value"* %189 to %"class.v8::Int32"*
  %223 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %222) #8
  br label %226

224:                                              ; preds = %219
  %225 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %189, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %226

226:                                              ; preds = %221, %224
  %227 = phi i32 [ %223, %221 ], [ %225, %224 ]
  %228 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %229 = load i32, i32* %228, align 8
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %2949

231:                                              ; preds = %226
  %232 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 31
  store i32 %227, i32* %232, align 8
  %233 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 4
  store i8 1, i8* %233, align 1
  br label %234

234:                                              ; preds = %231, %213
  %235 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 5, i32 0
  %236 = bitcast %"class.v8::Name"** %235 to %"class.v8::Value"**
  %237 = load %"class.v8::Value"*, %"class.v8::Value"** %236, align 8
  %238 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %237) #8
  %239 = icmp eq %"class.v8::Value"* %238, null
  br i1 %239, label %240, label %246

240:                                              ; preds = %234
  %241 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %242 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %243 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %242, align 8
  %244 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %243, i64 5
  %245 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %244, align 8
  call void %245(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %241) #8
  br label %2949

246:                                              ; preds = %234
  %247 = bitcast %"class.v8::Value"* %238 to i64*
  %248 = load i64, i64* %247, align 8
  %249 = and i64 %248, 3
  %250 = icmp eq i64 %249, 1
  br i1 %250, label %251, label %268

251:                                              ; preds = %246
  %252 = add i64 %248, -1
  %253 = inttoptr i64 %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = and i64 %248, -4294967296
  %256 = zext i32 %254 to i64
  %257 = or i64 %255, %256
  %258 = add i64 %257, 7
  %259 = inttoptr i64 %258 to i16*
  %260 = load i16, i16* %259, align 2
  %261 = icmp eq i16 %260, 67
  br i1 %261, label %262, label %268

262:                                              ; preds = %251
  %263 = add i64 %248, 23
  %264 = inttoptr i64 %263 to i32*
  %265 = load i32, i32* %264, align 4
  %266 = and i32 %265, -2
  %267 = icmp eq i32 %266, 10
  br i1 %267, label %276, label %268

268:                                              ; preds = %251, %246, %262
  %269 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %238, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %270 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %2949

273:                                              ; preds = %268
  %274 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 32
  store double %269, double* %274, align 8
  %275 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 5
  store i8 1, i8* %275, align 4
  br label %276

276:                                              ; preds = %273, %262
  %277 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 6, i32 0
  %278 = bitcast %"class.v8::Name"** %277 to %"class.v8::Value"**
  %279 = load %"class.v8::Value"*, %"class.v8::Value"** %278, align 8
  %280 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %279) #8
  %281 = icmp eq %"class.v8::Value"* %280, null
  br i1 %281, label %282, label %288

282:                                              ; preds = %276
  %283 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %284 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %285 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %284, align 8
  %286 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %285, i64 5
  %287 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %286, align 8
  call void %287(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %283) #8
  br label %2949

288:                                              ; preds = %276
  %289 = bitcast %"class.v8::Value"* %280 to i64*
  %290 = load i64, i64* %289, align 8
  %291 = and i64 %290, 3
  %292 = icmp eq i64 %291, 1
  br i1 %292, label %293, label %310

293:                                              ; preds = %288
  %294 = add i64 %290, -1
  %295 = inttoptr i64 %294 to i32*
  %296 = load i32, i32* %295, align 4
  %297 = and i64 %290, -4294967296
  %298 = zext i32 %296 to i64
  %299 = or i64 %297, %298
  %300 = add i64 %299, 7
  %301 = inttoptr i64 %300 to i16*
  %302 = load i16, i16* %301, align 2
  %303 = icmp eq i16 %302, 67
  br i1 %303, label %304, label %310

304:                                              ; preds = %293
  %305 = add i64 %290, 23
  %306 = inttoptr i64 %305 to i32*
  %307 = load i32, i32* %306, align 4
  %308 = and i32 %307, -2
  %309 = icmp eq i32 %308, 10
  br i1 %309, label %318, label %310

310:                                              ; preds = %293, %288, %304
  %311 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %280, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %312 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %313 = load i32, i32* %312, align 8
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %2949

315:                                              ; preds = %310
  %316 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 33
  store double %311, double* %316, align 8
  %317 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 6
  store i8 1, i8* %317, align 1
  br label %318

318:                                              ; preds = %315, %304
  %319 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 8, i32 0
  %320 = bitcast %"class.v8::Name"** %319 to %"class.v8::Value"**
  %321 = load %"class.v8::Value"*, %"class.v8::Value"** %320, align 8
  %322 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %321) #8
  %323 = icmp eq %"class.v8::Value"* %322, null
  br i1 %323, label %324, label %330

324:                                              ; preds = %318
  %325 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %326 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %327 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %326, align 8
  %328 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %327, i64 5
  %329 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %328, align 8
  call void %329(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %325) #8
  br label %2949

330:                                              ; preds = %318
  %331 = bitcast %"class.v8::Value"* %322 to i64*
  %332 = load i64, i64* %331, align 8
  %333 = and i64 %332, 3
  %334 = icmp eq i64 %333, 1
  br i1 %334, label %335, label %352

335:                                              ; preds = %330
  %336 = add i64 %332, -1
  %337 = inttoptr i64 %336 to i32*
  %338 = load i32, i32* %337, align 4
  %339 = and i64 %332, -4294967296
  %340 = zext i32 %338 to i64
  %341 = or i64 %339, %340
  %342 = add i64 %341, 7
  %343 = inttoptr i64 %342 to i16*
  %344 = load i16, i16* %343, align 2
  %345 = icmp eq i16 %344, 67
  br i1 %345, label %346, label %352

346:                                              ; preds = %335
  %347 = add i64 %332, 23
  %348 = inttoptr i64 %347 to i32*
  %349 = load i32, i32* %348, align 4
  %350 = and i32 %349, -2
  %351 = icmp eq i32 %350, 10
  br i1 %351, label %492, label %352

352:                                              ; preds = %335, %330, %346
  %353 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %353) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %353, i8 -86, i64 152, i1 false)
  %354 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %322, %"class.v8::Value"** %354, align 8
  %355 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %355, align 8
  %356 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %356, align 8
  %357 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %358 = bitcast %"class.std::__1::unique_ptr.67"* %357 to i64*
  store i64 0, i64* %358, align 8
  %359 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %359, label %360, label %470

360:                                              ; preds = %352
  %361 = load %"class.v8::Value"*, %"class.v8::Value"** %354, align 8
  %362 = icmp eq %"class.v8::Value"* %361, null
  br i1 %362, label %363, label %387, !prof !3

363:                                              ; preds = %360
  %364 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %365 = icmp eq %"class.WTF::StringImpl"* %364, null
  br i1 %365, label %366, label %368

366:                                              ; preds = %363
  %367 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 35
  br label %412

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %385

373:                                              ; preds = %368
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %364, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  %376 = zext i32 %375 to i33
  %377 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %376, i33 1) #8
  %378 = extractvalue { i33, i1 } %377, 1
  %379 = extractvalue { i33, i1 } %377, 0
  %380 = icmp slt i33 %379, 0
  %381 = or i1 %378, %380
  br i1 %381, label %382, label %383, !prof !3

382:                                              ; preds = %373
  call void @llvm.trap() #8
  unreachable

383:                                              ; preds = %373
  %384 = trunc i33 %379 to i32
  store i32 %384, i32* %374, align 4
  br label %385

385:                                              ; preds = %368, %383
  %386 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 35
  br label %393

387:                                              ; preds = %360
  %388 = bitcast %"class.v8::Value"* %361 to %"class.v8::String"*
  %389 = load i32, i32* %355, align 8
  %390 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %388, i32 %389) #8
  %391 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 35
  %392 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %392, label %412, label %393

393:                                              ; preds = %385, %387
  %394 = phi %"class.WTF::String"* [ %386, %385 ], [ %391, %387 ]
  %395 = phi %"class.WTF::StringImpl"* [ %364, %385 ], [ %390, %387 ]
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = and i32 %397, 2
  %399 = icmp eq i32 %398, 0
  br i1 %399, label %400, label %412

400:                                              ; preds = %393
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %395, i64 0, i32 0
  %402 = load i32, i32* %401, align 4
  %403 = zext i32 %402 to i33
  %404 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %403, i33 1) #8
  %405 = extractvalue { i33, i1 } %404, 1
  %406 = extractvalue { i33, i1 } %404, 0
  %407 = icmp slt i33 %406, 0
  %408 = or i1 %405, %407
  br i1 %408, label %409, label %410, !prof !3

409:                                              ; preds = %400
  call void @llvm.trap() #8
  unreachable

410:                                              ; preds = %400
  %411 = trunc i33 %406 to i32
  store i32 %411, i32* %401, align 4
  br label %412

412:                                              ; preds = %366, %410, %393, %387
  %413 = phi i1 [ false, %410 ], [ false, %393 ], [ true, %387 ], [ true, %366 ]
  %414 = phi %"class.WTF::String"* [ %394, %410 ], [ %394, %393 ], [ %391, %387 ], [ %367, %366 ]
  %415 = phi %"class.WTF::StringImpl"* [ %395, %410 ], [ %395, %393 ], [ null, %387 ], [ null, %366 ]
  %416 = ptrtoint %"class.WTF::StringImpl"* %415 to i64
  %417 = bitcast %"class.WTF::String"* %414 to i64*
  %418 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %414, i64 0, i32 0, i32 0
  %419 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %418, align 8
  store i64 %416, i64* %417, align 8
  %420 = icmp eq %"class.WTF::StringImpl"* %419, null
  br i1 %420, label %434, label %421

421:                                              ; preds = %412
  %422 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %423 = load atomic i32, i32* %422 monotonic, align 4
  %424 = and i32 %423, 2
  %425 = icmp eq i32 %424, 0
  %426 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %419, i64 0, i32 0
  %427 = load i32, i32* %426, align 4
  br i1 %425, label %428, label %430

428:                                              ; preds = %421
  %429 = add i32 %427, -1
  store i32 %429, i32* %426, align 4
  br label %430

430:                                              ; preds = %428, %421
  %431 = phi i32 [ %429, %428 ], [ %427, %421 ]
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %433, label %434

433:                                              ; preds = %430
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %419) #8
  br label %434

434:                                              ; preds = %412, %430, %433
  br i1 %413, label %448, label %435

435:                                              ; preds = %434
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %415, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %415) #8
  br label %448

448:                                              ; preds = %434, %444, %447
  %449 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %450 = load i8*, i8** %449, align 8
  store i8* null, i8** %449, align 8
  %451 = icmp eq i8* %450, null
  br i1 %451, label %453, label %452

452:                                              ; preds = %448
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %450) #8
  br label %453

453:                                              ; preds = %452, %448
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %455 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %455, label %469, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %458 = load atomic i32, i32* %457 monotonic, align 4
  %459 = and i32 %458, 2
  %460 = icmp eq i32 %459, 0
  %461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %462 = load i32, i32* %461, align 4
  br i1 %460, label %463, label %465

463:                                              ; preds = %456
  %464 = add i32 %462, -1
  store i32 %464, i32* %461, align 4
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i32 [ %464, %463 ], [ %462, %456 ]
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %469

468:                                              ; preds = %465
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %454) #8
  br label %469

469:                                              ; preds = %453, %465, %468
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %353) #8
  br label %492

470:                                              ; preds = %352
  %471 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %472 = load i8*, i8** %471, align 8
  store i8* null, i8** %471, align 8
  %473 = icmp eq i8* %472, null
  br i1 %473, label %475, label %474

474:                                              ; preds = %470
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %472) #8
  br label %475

475:                                              ; preds = %474, %470
  %476 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  %477 = icmp eq %"class.WTF::StringImpl"* %476, null
  br i1 %477, label %491, label %478

478:                                              ; preds = %475
  %479 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %480 = load atomic i32, i32* %479 monotonic, align 4
  %481 = and i32 %480, 2
  %482 = icmp eq i32 %481, 0
  %483 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %476, i64 0, i32 0
  %484 = load i32, i32* %483, align 4
  br i1 %482, label %485, label %487

485:                                              ; preds = %478
  %486 = add i32 %484, -1
  store i32 %486, i32* %483, align 4
  br label %487

487:                                              ; preds = %485, %478
  %488 = phi i32 [ %486, %485 ], [ %484, %478 ]
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %490, label %491

490:                                              ; preds = %487
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %476) #8
  br label %491

491:                                              ; preds = %475, %487, %490
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %353) #8
  br label %2949

492:                                              ; preds = %469, %346
  %493 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 10, i32 0
  %494 = bitcast %"class.v8::Name"** %493 to %"class.v8::Value"**
  %495 = load %"class.v8::Value"*, %"class.v8::Value"** %494, align 8
  %496 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %495) #8
  %497 = icmp eq %"class.v8::Value"* %496, null
  br i1 %497, label %498, label %504

498:                                              ; preds = %492
  %499 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %500 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %501 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %500, align 8
  %502 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %501, i64 5
  %503 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %502, align 8
  call void %503(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %499) #8
  br label %2949

504:                                              ; preds = %492
  %505 = bitcast %"class.v8::Value"* %496 to i64*
  %506 = load i64, i64* %505, align 8
  %507 = and i64 %506, 3
  %508 = icmp eq i64 %507, 1
  br i1 %508, label %509, label %526

509:                                              ; preds = %504
  %510 = add i64 %506, -1
  %511 = inttoptr i64 %510 to i32*
  %512 = load i32, i32* %511, align 4
  %513 = and i64 %506, -4294967296
  %514 = zext i32 %512 to i64
  %515 = or i64 %513, %514
  %516 = add i64 %515, 7
  %517 = inttoptr i64 %516 to i16*
  %518 = load i16, i16* %517, align 2
  %519 = icmp eq i16 %518, 67
  br i1 %519, label %520, label %526

520:                                              ; preds = %509
  %521 = add i64 %506, 23
  %522 = inttoptr i64 %521 to i32*
  %523 = load i32, i32* %522, align 4
  %524 = and i32 %523, -2
  %525 = icmp eq i32 %524, 10
  br i1 %525, label %542, label %526

526:                                              ; preds = %509, %504, %520
  %527 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %496) #8
  br i1 %527, label %528, label %531, !prof !2

528:                                              ; preds = %526
  %529 = bitcast %"class.v8::Value"* %496 to %"class.v8::Boolean"*
  %530 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %529) #8
  br label %533

531:                                              ; preds = %526
  %532 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %496, %"class.v8::Isolate"* %0) #8
  br label %533

533:                                              ; preds = %528, %531
  %534 = phi i1 [ %530, %528 ], [ %532, %531 ]
  %535 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %536 = load i32, i32* %535, align 8
  %537 = icmp eq i32 %536, 0
  br i1 %537, label %538, label %2949

538:                                              ; preds = %533
  %539 = zext i1 %534 to i8
  %540 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 37
  store i8 %539, i8* %540, align 8
  %541 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 7
  store i8 1, i8* %541, align 2
  br label %542

542:                                              ; preds = %538, %520
  %543 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 11, i32 0
  %544 = bitcast %"class.v8::Name"** %543 to %"class.v8::Value"**
  %545 = load %"class.v8::Value"*, %"class.v8::Value"** %544, align 8
  %546 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %545) #8
  %547 = icmp eq %"class.v8::Value"* %546, null
  br i1 %547, label %548, label %554

548:                                              ; preds = %542
  %549 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %550 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %551 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %550, align 8
  %552 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %551, i64 5
  %553 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %552, align 8
  call void %553(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %549) #8
  br label %2949

554:                                              ; preds = %542
  %555 = bitcast %"class.v8::Value"* %546 to i64*
  %556 = load i64, i64* %555, align 8
  %557 = and i64 %556, 3
  %558 = icmp eq i64 %557, 1
  br i1 %558, label %559, label %576

559:                                              ; preds = %554
  %560 = add i64 %556, -1
  %561 = inttoptr i64 %560 to i32*
  %562 = load i32, i32* %561, align 4
  %563 = and i64 %556, -4294967296
  %564 = zext i32 %562 to i64
  %565 = or i64 %563, %564
  %566 = add i64 %565, 7
  %567 = inttoptr i64 %566 to i16*
  %568 = load i16, i16* %567, align 2
  %569 = icmp eq i16 %568, 67
  br i1 %569, label %570, label %576

570:                                              ; preds = %559
  %571 = add i64 %556, 23
  %572 = inttoptr i64 %571 to i32*
  %573 = load i32, i32* %572, align 4
  %574 = and i32 %573, -2
  %575 = icmp eq i32 %574, 10
  br i1 %575, label %584, label %576

576:                                              ; preds = %559, %554, %570
  %577 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %546, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %578 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %579 = load i32, i32* %578, align 8
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %2949

581:                                              ; preds = %576
  %582 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 38
  store double %577, double* %582, align 8
  %583 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 8
  store i8 1, i8* %583, align 1
  br label %584

584:                                              ; preds = %581, %570
  %585 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 12, i32 0
  %586 = bitcast %"class.v8::Name"** %585 to %"class.v8::Value"**
  %587 = load %"class.v8::Value"*, %"class.v8::Value"** %586, align 8
  %588 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %587) #8
  %589 = icmp eq %"class.v8::Value"* %588, null
  br i1 %589, label %590, label %596

590:                                              ; preds = %584
  %591 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %592 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %593 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %592, align 8
  %594 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %593, i64 5
  %595 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %594, align 8
  call void %595(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %591) #8
  br label %2949

596:                                              ; preds = %584
  %597 = bitcast %"class.v8::Value"* %588 to i64*
  %598 = load i64, i64* %597, align 8
  %599 = and i64 %598, 3
  %600 = icmp eq i64 %599, 1
  br i1 %600, label %601, label %618

601:                                              ; preds = %596
  %602 = add i64 %598, -1
  %603 = inttoptr i64 %602 to i32*
  %604 = load i32, i32* %603, align 4
  %605 = and i64 %598, -4294967296
  %606 = zext i32 %604 to i64
  %607 = or i64 %605, %606
  %608 = add i64 %607, 7
  %609 = inttoptr i64 %608 to i16*
  %610 = load i16, i16* %609, align 2
  %611 = icmp eq i16 %610, 67
  br i1 %611, label %612, label %618

612:                                              ; preds = %601
  %613 = add i64 %598, 23
  %614 = inttoptr i64 %613 to i32*
  %615 = load i32, i32* %614, align 4
  %616 = and i32 %615, -2
  %617 = icmp eq i32 %616, 10
  br i1 %617, label %758, label %618

618:                                              ; preds = %601, %596, %612
  %619 = bitcast %"class.blink::V8StringResource"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %619) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %619, i8 -86, i64 152, i1 false)
  %620 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %588, %"class.v8::Value"** %620, align 8
  %621 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 1
  store i32 0, i32* %621, align 8
  %622 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %622, align 8
  %623 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1
  %624 = bitcast %"class.std::__1::unique_ptr.67"* %623 to i64*
  store i64 0, i64* %624, align 8
  %625 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %7, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %625, label %626, label %736

626:                                              ; preds = %618
  %627 = load %"class.v8::Value"*, %"class.v8::Value"** %620, align 8
  %628 = icmp eq %"class.v8::Value"* %627, null
  br i1 %628, label %629, label %653, !prof !3

629:                                              ; preds = %626
  %630 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %631 = icmp eq %"class.WTF::StringImpl"* %630, null
  br i1 %631, label %632, label %634

632:                                              ; preds = %629
  %633 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 39
  br label %678

634:                                              ; preds = %629
  %635 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %630, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = load atomic i32, i32* %635 monotonic, align 4
  %637 = and i32 %636, 2
  %638 = icmp eq i32 %637, 0
  br i1 %638, label %639, label %651

639:                                              ; preds = %634
  %640 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %630, i64 0, i32 0
  %641 = load i32, i32* %640, align 4
  %642 = zext i32 %641 to i33
  %643 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %642, i33 1) #8
  %644 = extractvalue { i33, i1 } %643, 1
  %645 = extractvalue { i33, i1 } %643, 0
  %646 = icmp slt i33 %645, 0
  %647 = or i1 %644, %646
  br i1 %647, label %648, label %649, !prof !3

648:                                              ; preds = %639
  call void @llvm.trap() #8
  unreachable

649:                                              ; preds = %639
  %650 = trunc i33 %645 to i32
  store i32 %650, i32* %640, align 4
  br label %651

651:                                              ; preds = %634, %649
  %652 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 39
  br label %659

653:                                              ; preds = %626
  %654 = bitcast %"class.v8::Value"* %627 to %"class.v8::String"*
  %655 = load i32, i32* %621, align 8
  %656 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %654, i32 %655) #8
  %657 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 39
  %658 = icmp eq %"class.WTF::StringImpl"* %656, null
  br i1 %658, label %678, label %659

659:                                              ; preds = %651, %653
  %660 = phi %"class.WTF::String"* [ %652, %651 ], [ %657, %653 ]
  %661 = phi %"class.WTF::StringImpl"* [ %630, %651 ], [ %656, %653 ]
  %662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %661, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %663 = load atomic i32, i32* %662 monotonic, align 4
  %664 = and i32 %663, 2
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %666, label %678

666:                                              ; preds = %659
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %661, i64 0, i32 0
  %668 = load i32, i32* %667, align 4
  %669 = zext i32 %668 to i33
  %670 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %669, i33 1) #8
  %671 = extractvalue { i33, i1 } %670, 1
  %672 = extractvalue { i33, i1 } %670, 0
  %673 = icmp slt i33 %672, 0
  %674 = or i1 %671, %673
  br i1 %674, label %675, label %676, !prof !3

675:                                              ; preds = %666
  call void @llvm.trap() #8
  unreachable

676:                                              ; preds = %666
  %677 = trunc i33 %672 to i32
  store i32 %677, i32* %667, align 4
  br label %678

678:                                              ; preds = %632, %676, %659, %653
  %679 = phi i1 [ false, %676 ], [ false, %659 ], [ true, %653 ], [ true, %632 ]
  %680 = phi %"class.WTF::String"* [ %660, %676 ], [ %660, %659 ], [ %657, %653 ], [ %633, %632 ]
  %681 = phi %"class.WTF::StringImpl"* [ %661, %676 ], [ %661, %659 ], [ null, %653 ], [ null, %632 ]
  %682 = ptrtoint %"class.WTF::StringImpl"* %681 to i64
  %683 = bitcast %"class.WTF::String"* %680 to i64*
  %684 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %680, i64 0, i32 0, i32 0
  %685 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %684, align 8
  store i64 %682, i64* %683, align 8
  %686 = icmp eq %"class.WTF::StringImpl"* %685, null
  br i1 %686, label %700, label %687

687:                                              ; preds = %678
  %688 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %689 = load atomic i32, i32* %688 monotonic, align 4
  %690 = and i32 %689, 2
  %691 = icmp eq i32 %690, 0
  %692 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %685, i64 0, i32 0
  %693 = load i32, i32* %692, align 4
  br i1 %691, label %694, label %696

694:                                              ; preds = %687
  %695 = add i32 %693, -1
  store i32 %695, i32* %692, align 4
  br label %696

696:                                              ; preds = %694, %687
  %697 = phi i32 [ %695, %694 ], [ %693, %687 ]
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %685) #8
  br label %700

700:                                              ; preds = %678, %696, %699
  br i1 %679, label %714, label %701

701:                                              ; preds = %700
  %702 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %703 = load atomic i32, i32* %702 monotonic, align 4
  %704 = and i32 %703, 2
  %705 = icmp eq i32 %704, 0
  %706 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %681, i64 0, i32 0
  %707 = load i32, i32* %706, align 4
  br i1 %705, label %708, label %710

708:                                              ; preds = %701
  %709 = add i32 %707, -1
  store i32 %709, i32* %706, align 4
  br label %710

710:                                              ; preds = %708, %701
  %711 = phi i32 [ %709, %708 ], [ %707, %701 ]
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %714

713:                                              ; preds = %710
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %681) #8
  br label %714

714:                                              ; preds = %700, %710, %713
  %715 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %716 = load i8*, i8** %715, align 8
  store i8* null, i8** %715, align 8
  %717 = icmp eq i8* %716, null
  br i1 %717, label %719, label %718

718:                                              ; preds = %714
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %716) #8
  br label %719

719:                                              ; preds = %718, %714
  %720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %721 = icmp eq %"class.WTF::StringImpl"* %720, null
  br i1 %721, label %735, label %722

722:                                              ; preds = %719
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %724 = load atomic i32, i32* %723 monotonic, align 4
  %725 = and i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  br i1 %726, label %729, label %731

729:                                              ; preds = %722
  %730 = add i32 %728, -1
  store i32 %730, i32* %727, align 4
  br label %731

731:                                              ; preds = %729, %722
  %732 = phi i32 [ %730, %729 ], [ %728, %722 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %735

734:                                              ; preds = %731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %720) #8
  br label %735

735:                                              ; preds = %719, %731, %734
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %619) #8
  br label %758

736:                                              ; preds = %618
  %737 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %7, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %738 = load i8*, i8** %737, align 8
  store i8* null, i8** %737, align 8
  %739 = icmp eq i8* %738, null
  br i1 %739, label %741, label %740

740:                                              ; preds = %736
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %738) #8
  br label %741

741:                                              ; preds = %740, %736
  %742 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %622, align 8
  %743 = icmp eq %"class.WTF::StringImpl"* %742, null
  br i1 %743, label %757, label %744

744:                                              ; preds = %741
  %745 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %746 = load atomic i32, i32* %745 monotonic, align 4
  %747 = and i32 %746, 2
  %748 = icmp eq i32 %747, 0
  %749 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %742, i64 0, i32 0
  %750 = load i32, i32* %749, align 4
  br i1 %748, label %751, label %753

751:                                              ; preds = %744
  %752 = add i32 %750, -1
  store i32 %752, i32* %749, align 4
  br label %753

753:                                              ; preds = %751, %744
  %754 = phi i32 [ %752, %751 ], [ %750, %744 ]
  %755 = icmp eq i32 %754, 0
  br i1 %755, label %756, label %757

756:                                              ; preds = %753
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %742) #8
  br label %757

757:                                              ; preds = %741, %753, %756
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %619) #8
  br label %2949

758:                                              ; preds = %735, %612
  %759 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 13, i32 0
  %760 = bitcast %"class.v8::Name"** %759 to %"class.v8::Value"**
  %761 = load %"class.v8::Value"*, %"class.v8::Value"** %760, align 8
  %762 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %761) #8
  %763 = icmp eq %"class.v8::Value"* %762, null
  br i1 %763, label %764, label %770

764:                                              ; preds = %758
  %765 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %766 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %767 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %766, align 8
  %768 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %767, i64 5
  %769 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %768, align 8
  call void %769(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %765) #8
  br label %2949

770:                                              ; preds = %758
  %771 = bitcast %"class.v8::Value"* %762 to i64*
  %772 = load i64, i64* %771, align 8
  %773 = and i64 %772, 3
  %774 = icmp eq i64 %773, 1
  br i1 %774, label %775, label %792

775:                                              ; preds = %770
  %776 = add i64 %772, -1
  %777 = inttoptr i64 %776 to i32*
  %778 = load i32, i32* %777, align 4
  %779 = and i64 %772, -4294967296
  %780 = zext i32 %778 to i64
  %781 = or i64 %779, %780
  %782 = add i64 %781, 7
  %783 = inttoptr i64 %782 to i16*
  %784 = load i16, i16* %783, align 2
  %785 = icmp eq i16 %784, 67
  br i1 %785, label %786, label %792

786:                                              ; preds = %775
  %787 = add i64 %772, 23
  %788 = inttoptr i64 %787 to i32*
  %789 = load i32, i32* %788, align 4
  %790 = and i32 %789, -2
  %791 = icmp eq i32 %790, 10
  br i1 %791, label %800, label %792

792:                                              ; preds = %775, %770, %786
  %793 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %762, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %794 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %795 = load i32, i32* %794, align 8
  %796 = icmp eq i32 %795, 0
  br i1 %796, label %797, label %2949

797:                                              ; preds = %792
  %798 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 40
  store double %793, double* %798, align 8
  %799 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 9
  store i8 1, i8* %799, align 8
  br label %800

800:                                              ; preds = %797, %786
  %801 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 14, i32 0
  %802 = bitcast %"class.v8::Name"** %801 to %"class.v8::Value"**
  %803 = load %"class.v8::Value"*, %"class.v8::Value"** %802, align 8
  %804 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %803) #8
  %805 = icmp eq %"class.v8::Value"* %804, null
  br i1 %805, label %806, label %812

806:                                              ; preds = %800
  %807 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %808 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %809 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %808, align 8
  %810 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %809, i64 5
  %811 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %810, align 8
  call void %811(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %807) #8
  br label %2949

812:                                              ; preds = %800
  %813 = bitcast %"class.v8::Value"* %804 to i64*
  %814 = load i64, i64* %813, align 8
  %815 = and i64 %814, 3
  %816 = icmp eq i64 %815, 1
  br i1 %816, label %817, label %834

817:                                              ; preds = %812
  %818 = add i64 %814, -1
  %819 = inttoptr i64 %818 to i32*
  %820 = load i32, i32* %819, align 4
  %821 = and i64 %814, -4294967296
  %822 = zext i32 %820 to i64
  %823 = or i64 %821, %822
  %824 = add i64 %823, 7
  %825 = inttoptr i64 %824 to i16*
  %826 = load i16, i16* %825, align 2
  %827 = icmp eq i16 %826, 67
  br i1 %827, label %828, label %834

828:                                              ; preds = %817
  %829 = add i64 %814, 23
  %830 = inttoptr i64 %829 to i32*
  %831 = load i32, i32* %830, align 4
  %832 = and i32 %831, -2
  %833 = icmp eq i32 %832, 10
  br i1 %833, label %974, label %834

834:                                              ; preds = %817, %812, %828
  %835 = bitcast %"class.blink::V8StringResource"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %835) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %835, i8 -86, i64 152, i1 false)
  %836 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %804, %"class.v8::Value"** %836, align 8
  %837 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 1
  store i32 0, i32* %837, align 8
  %838 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %838, align 8
  %839 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1
  %840 = bitcast %"class.std::__1::unique_ptr.67"* %839 to i64*
  store i64 0, i64* %840, align 8
  %841 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %841, label %842, label %952

842:                                              ; preds = %834
  %843 = load %"class.v8::Value"*, %"class.v8::Value"** %836, align 8
  %844 = icmp eq %"class.v8::Value"* %843, null
  br i1 %844, label %845, label %869, !prof !3

845:                                              ; preds = %842
  %846 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %838, align 8
  %847 = icmp eq %"class.WTF::StringImpl"* %846, null
  br i1 %847, label %848, label %850

848:                                              ; preds = %845
  %849 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 41
  br label %894

850:                                              ; preds = %845
  %851 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %846, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %852 = load atomic i32, i32* %851 monotonic, align 4
  %853 = and i32 %852, 2
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %867

855:                                              ; preds = %850
  %856 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %846, i64 0, i32 0
  %857 = load i32, i32* %856, align 4
  %858 = zext i32 %857 to i33
  %859 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %858, i33 1) #8
  %860 = extractvalue { i33, i1 } %859, 1
  %861 = extractvalue { i33, i1 } %859, 0
  %862 = icmp slt i33 %861, 0
  %863 = or i1 %860, %862
  br i1 %863, label %864, label %865, !prof !3

864:                                              ; preds = %855
  call void @llvm.trap() #8
  unreachable

865:                                              ; preds = %855
  %866 = trunc i33 %861 to i32
  store i32 %866, i32* %856, align 4
  br label %867

867:                                              ; preds = %850, %865
  %868 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 41
  br label %875

869:                                              ; preds = %842
  %870 = bitcast %"class.v8::Value"* %843 to %"class.v8::String"*
  %871 = load i32, i32* %837, align 8
  %872 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %870, i32 %871) #8
  %873 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 41
  %874 = icmp eq %"class.WTF::StringImpl"* %872, null
  br i1 %874, label %894, label %875

875:                                              ; preds = %867, %869
  %876 = phi %"class.WTF::String"* [ %868, %867 ], [ %873, %869 ]
  %877 = phi %"class.WTF::StringImpl"* [ %846, %867 ], [ %872, %869 ]
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %882, label %894

882:                                              ; preds = %875
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %877, i64 0, i32 0
  %884 = load i32, i32* %883, align 4
  %885 = zext i32 %884 to i33
  %886 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %885, i33 1) #8
  %887 = extractvalue { i33, i1 } %886, 1
  %888 = extractvalue { i33, i1 } %886, 0
  %889 = icmp slt i33 %888, 0
  %890 = or i1 %887, %889
  br i1 %890, label %891, label %892, !prof !3

891:                                              ; preds = %882
  call void @llvm.trap() #8
  unreachable

892:                                              ; preds = %882
  %893 = trunc i33 %888 to i32
  store i32 %893, i32* %883, align 4
  br label %894

894:                                              ; preds = %848, %892, %875, %869
  %895 = phi i1 [ false, %892 ], [ false, %875 ], [ true, %869 ], [ true, %848 ]
  %896 = phi %"class.WTF::String"* [ %876, %892 ], [ %876, %875 ], [ %873, %869 ], [ %849, %848 ]
  %897 = phi %"class.WTF::StringImpl"* [ %877, %892 ], [ %877, %875 ], [ null, %869 ], [ null, %848 ]
  %898 = ptrtoint %"class.WTF::StringImpl"* %897 to i64
  %899 = bitcast %"class.WTF::String"* %896 to i64*
  %900 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %896, i64 0, i32 0, i32 0
  %901 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %900, align 8
  store i64 %898, i64* %899, align 8
  %902 = icmp eq %"class.WTF::StringImpl"* %901, null
  br i1 %902, label %916, label %903

903:                                              ; preds = %894
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %901, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = load atomic i32, i32* %904 monotonic, align 4
  %906 = and i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %901, i64 0, i32 0
  %909 = load i32, i32* %908, align 4
  br i1 %907, label %910, label %912

910:                                              ; preds = %903
  %911 = add i32 %909, -1
  store i32 %911, i32* %908, align 4
  br label %912

912:                                              ; preds = %910, %903
  %913 = phi i32 [ %911, %910 ], [ %909, %903 ]
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %916

915:                                              ; preds = %912
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %901) #8
  br label %916

916:                                              ; preds = %894, %912, %915
  br i1 %895, label %930, label %917

917:                                              ; preds = %916
  %918 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %919 = load atomic i32, i32* %918 monotonic, align 4
  %920 = and i32 %919, 2
  %921 = icmp eq i32 %920, 0
  %922 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %897, i64 0, i32 0
  %923 = load i32, i32* %922, align 4
  br i1 %921, label %924, label %926

924:                                              ; preds = %917
  %925 = add i32 %923, -1
  store i32 %925, i32* %922, align 4
  br label %926

926:                                              ; preds = %924, %917
  %927 = phi i32 [ %925, %924 ], [ %923, %917 ]
  %928 = icmp eq i32 %927, 0
  br i1 %928, label %929, label %930

929:                                              ; preds = %926
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %897) #8
  br label %930

930:                                              ; preds = %916, %926, %929
  %931 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %932 = load i8*, i8** %931, align 8
  store i8* null, i8** %931, align 8
  %933 = icmp eq i8* %932, null
  br i1 %933, label %935, label %934

934:                                              ; preds = %930
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %932) #8
  br label %935

935:                                              ; preds = %934, %930
  %936 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %838, align 8
  %937 = icmp eq %"class.WTF::StringImpl"* %936, null
  br i1 %937, label %951, label %938

938:                                              ; preds = %935
  %939 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %936, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %940 = load atomic i32, i32* %939 monotonic, align 4
  %941 = and i32 %940, 2
  %942 = icmp eq i32 %941, 0
  %943 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %936, i64 0, i32 0
  %944 = load i32, i32* %943, align 4
  br i1 %942, label %945, label %947

945:                                              ; preds = %938
  %946 = add i32 %944, -1
  store i32 %946, i32* %943, align 4
  br label %947

947:                                              ; preds = %945, %938
  %948 = phi i32 [ %946, %945 ], [ %944, %938 ]
  %949 = icmp eq i32 %948, 0
  br i1 %949, label %950, label %951

950:                                              ; preds = %947
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %936) #8
  br label %951

951:                                              ; preds = %935, %947, %950
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %835) #8
  br label %974

952:                                              ; preds = %834
  %953 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %8, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %954 = load i8*, i8** %953, align 8
  store i8* null, i8** %953, align 8
  %955 = icmp eq i8* %954, null
  br i1 %955, label %957, label %956

956:                                              ; preds = %952
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %954) #8
  br label %957

957:                                              ; preds = %956, %952
  %958 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %838, align 8
  %959 = icmp eq %"class.WTF::StringImpl"* %958, null
  br i1 %959, label %973, label %960

960:                                              ; preds = %957
  %961 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %962 = load atomic i32, i32* %961 monotonic, align 4
  %963 = and i32 %962, 2
  %964 = icmp eq i32 %963, 0
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %958, i64 0, i32 0
  %966 = load i32, i32* %965, align 4
  br i1 %964, label %967, label %969

967:                                              ; preds = %960
  %968 = add i32 %966, -1
  store i32 %968, i32* %965, align 4
  br label %969

969:                                              ; preds = %967, %960
  %970 = phi i32 [ %968, %967 ], [ %966, %960 ]
  %971 = icmp eq i32 %970, 0
  br i1 %971, label %972, label %973

972:                                              ; preds = %969
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %958) #8
  br label %973

973:                                              ; preds = %957, %969, %972
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %835) #8
  br label %2949

974:                                              ; preds = %951, %828
  %975 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 15, i32 0
  %976 = bitcast %"class.v8::Name"** %975 to %"class.v8::Value"**
  %977 = load %"class.v8::Value"*, %"class.v8::Value"** %976, align 8
  %978 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %977) #8
  %979 = icmp eq %"class.v8::Value"* %978, null
  br i1 %979, label %980, label %986

980:                                              ; preds = %974
  %981 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %982 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %983 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %982, align 8
  %984 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %983, i64 5
  %985 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %984, align 8
  call void %985(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %981) #8
  br label %2949

986:                                              ; preds = %974
  %987 = bitcast %"class.v8::Value"* %978 to i64*
  %988 = load i64, i64* %987, align 8
  %989 = and i64 %988, 3
  %990 = icmp eq i64 %989, 1
  br i1 %990, label %991, label %1008

991:                                              ; preds = %986
  %992 = add i64 %988, -1
  %993 = inttoptr i64 %992 to i32*
  %994 = load i32, i32* %993, align 4
  %995 = and i64 %988, -4294967296
  %996 = zext i32 %994 to i64
  %997 = or i64 %995, %996
  %998 = add i64 %997, 7
  %999 = inttoptr i64 %998 to i16*
  %1000 = load i16, i16* %999, align 2
  %1001 = icmp eq i16 %1000, 67
  br i1 %1001, label %1002, label %1008

1002:                                             ; preds = %991
  %1003 = add i64 %988, 23
  %1004 = inttoptr i64 %1003 to i32*
  %1005 = load i32, i32* %1004, align 4
  %1006 = and i32 %1005, -2
  %1007 = icmp eq i32 %1006, 10
  br i1 %1007, label %1016, label %1008

1008:                                             ; preds = %991, %986, %1002
  %1009 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %978, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1010 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1011 = load i32, i32* %1010, align 8
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1013, label %2949

1013:                                             ; preds = %1008
  %1014 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 42
  store double %1009, double* %1014, align 8
  %1015 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 10
  store i8 1, i8* %1015, align 1
  br label %1016

1016:                                             ; preds = %1013, %1002
  %1017 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 16, i32 0
  %1018 = bitcast %"class.v8::Name"** %1017 to %"class.v8::Value"**
  %1019 = load %"class.v8::Value"*, %"class.v8::Value"** %1018, align 8
  %1020 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1019) #8
  %1021 = icmp eq %"class.v8::Value"* %1020, null
  br i1 %1021, label %1022, label %1028

1022:                                             ; preds = %1016
  %1023 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1024 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1025 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1024, align 8
  %1026 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1025, i64 5
  %1027 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1026, align 8
  call void %1027(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1023) #8
  br label %2949

1028:                                             ; preds = %1016
  %1029 = bitcast %"class.v8::Value"* %1020 to i64*
  %1030 = load i64, i64* %1029, align 8
  %1031 = and i64 %1030, 3
  %1032 = icmp eq i64 %1031, 1
  br i1 %1032, label %1033, label %1050

1033:                                             ; preds = %1028
  %1034 = add i64 %1030, -1
  %1035 = inttoptr i64 %1034 to i32*
  %1036 = load i32, i32* %1035, align 4
  %1037 = and i64 %1030, -4294967296
  %1038 = zext i32 %1036 to i64
  %1039 = or i64 %1037, %1038
  %1040 = add i64 %1039, 7
  %1041 = inttoptr i64 %1040 to i16*
  %1042 = load i16, i16* %1041, align 2
  %1043 = icmp eq i16 %1042, 67
  br i1 %1043, label %1044, label %1050

1044:                                             ; preds = %1033
  %1045 = add i64 %1030, 23
  %1046 = inttoptr i64 %1045 to i32*
  %1047 = load i32, i32* %1046, align 4
  %1048 = and i32 %1047, -2
  %1049 = icmp eq i32 %1048, 10
  br i1 %1049, label %1190, label %1050

1050:                                             ; preds = %1033, %1028, %1044
  %1051 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1051) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1051, i8 -86, i64 152, i1 false)
  %1052 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1020, %"class.v8::Value"** %1052, align 8
  %1053 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %1053, align 8
  %1054 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1054, align 8
  %1055 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %1056 = bitcast %"class.std::__1::unique_ptr.67"* %1055 to i64*
  store i64 0, i64* %1056, align 8
  %1057 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1057, label %1058, label %1168

1058:                                             ; preds = %1050
  %1059 = load %"class.v8::Value"*, %"class.v8::Value"** %1052, align 8
  %1060 = icmp eq %"class.v8::Value"* %1059, null
  br i1 %1060, label %1061, label %1085, !prof !3

1061:                                             ; preds = %1058
  %1062 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1054, align 8
  %1063 = icmp eq %"class.WTF::StringImpl"* %1062, null
  br i1 %1063, label %1064, label %1066

1064:                                             ; preds = %1061
  %1065 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 43
  br label %1110

1066:                                             ; preds = %1061
  %1067 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1068 = load atomic i32, i32* %1067 monotonic, align 4
  %1069 = and i32 %1068, 2
  %1070 = icmp eq i32 %1069, 0
  br i1 %1070, label %1071, label %1083

1071:                                             ; preds = %1066
  %1072 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1062, i64 0, i32 0
  %1073 = load i32, i32* %1072, align 4
  %1074 = zext i32 %1073 to i33
  %1075 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1074, i33 1) #8
  %1076 = extractvalue { i33, i1 } %1075, 1
  %1077 = extractvalue { i33, i1 } %1075, 0
  %1078 = icmp slt i33 %1077, 0
  %1079 = or i1 %1076, %1078
  br i1 %1079, label %1080, label %1081, !prof !3

1080:                                             ; preds = %1071
  call void @llvm.trap() #8
  unreachable

1081:                                             ; preds = %1071
  %1082 = trunc i33 %1077 to i32
  store i32 %1082, i32* %1072, align 4
  br label %1083

1083:                                             ; preds = %1066, %1081
  %1084 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 43
  br label %1091

1085:                                             ; preds = %1058
  %1086 = bitcast %"class.v8::Value"* %1059 to %"class.v8::String"*
  %1087 = load i32, i32* %1053, align 8
  %1088 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1086, i32 %1087) #8
  %1089 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 43
  %1090 = icmp eq %"class.WTF::StringImpl"* %1088, null
  br i1 %1090, label %1110, label %1091

1091:                                             ; preds = %1083, %1085
  %1092 = phi %"class.WTF::String"* [ %1084, %1083 ], [ %1089, %1085 ]
  %1093 = phi %"class.WTF::StringImpl"* [ %1062, %1083 ], [ %1088, %1085 ]
  %1094 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1095 = load atomic i32, i32* %1094 monotonic, align 4
  %1096 = and i32 %1095, 2
  %1097 = icmp eq i32 %1096, 0
  br i1 %1097, label %1098, label %1110

1098:                                             ; preds = %1091
  %1099 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1093, i64 0, i32 0
  %1100 = load i32, i32* %1099, align 4
  %1101 = zext i32 %1100 to i33
  %1102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1101, i33 1) #8
  %1103 = extractvalue { i33, i1 } %1102, 1
  %1104 = extractvalue { i33, i1 } %1102, 0
  %1105 = icmp slt i33 %1104, 0
  %1106 = or i1 %1103, %1105
  br i1 %1106, label %1107, label %1108, !prof !3

1107:                                             ; preds = %1098
  call void @llvm.trap() #8
  unreachable

1108:                                             ; preds = %1098
  %1109 = trunc i33 %1104 to i32
  store i32 %1109, i32* %1099, align 4
  br label %1110

1110:                                             ; preds = %1064, %1108, %1091, %1085
  %1111 = phi i1 [ false, %1108 ], [ false, %1091 ], [ true, %1085 ], [ true, %1064 ]
  %1112 = phi %"class.WTF::String"* [ %1092, %1108 ], [ %1092, %1091 ], [ %1089, %1085 ], [ %1065, %1064 ]
  %1113 = phi %"class.WTF::StringImpl"* [ %1093, %1108 ], [ %1093, %1091 ], [ null, %1085 ], [ null, %1064 ]
  %1114 = ptrtoint %"class.WTF::StringImpl"* %1113 to i64
  %1115 = bitcast %"class.WTF::String"* %1112 to i64*
  %1116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1112, i64 0, i32 0, i32 0
  %1117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1116, align 8
  store i64 %1114, i64* %1115, align 8
  %1118 = icmp eq %"class.WTF::StringImpl"* %1117, null
  br i1 %1118, label %1132, label %1119

1119:                                             ; preds = %1110
  %1120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1121 = load atomic i32, i32* %1120 monotonic, align 4
  %1122 = and i32 %1121, 2
  %1123 = icmp eq i32 %1122, 0
  %1124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1117, i64 0, i32 0
  %1125 = load i32, i32* %1124, align 4
  br i1 %1123, label %1126, label %1128

1126:                                             ; preds = %1119
  %1127 = add i32 %1125, -1
  store i32 %1127, i32* %1124, align 4
  br label %1128

1128:                                             ; preds = %1126, %1119
  %1129 = phi i32 [ %1127, %1126 ], [ %1125, %1119 ]
  %1130 = icmp eq i32 %1129, 0
  br i1 %1130, label %1131, label %1132

1131:                                             ; preds = %1128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1117) #8
  br label %1132

1132:                                             ; preds = %1110, %1128, %1131
  br i1 %1111, label %1146, label %1133

1133:                                             ; preds = %1132
  %1134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1135 = load atomic i32, i32* %1134 monotonic, align 4
  %1136 = and i32 %1135, 2
  %1137 = icmp eq i32 %1136, 0
  %1138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 0
  %1139 = load i32, i32* %1138, align 4
  br i1 %1137, label %1140, label %1142

1140:                                             ; preds = %1133
  %1141 = add i32 %1139, -1
  store i32 %1141, i32* %1138, align 4
  br label %1142

1142:                                             ; preds = %1140, %1133
  %1143 = phi i32 [ %1141, %1140 ], [ %1139, %1133 ]
  %1144 = icmp eq i32 %1143, 0
  br i1 %1144, label %1145, label %1146

1145:                                             ; preds = %1142
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1113) #8
  br label %1146

1146:                                             ; preds = %1132, %1142, %1145
  %1147 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1148 = load i8*, i8** %1147, align 8
  store i8* null, i8** %1147, align 8
  %1149 = icmp eq i8* %1148, null
  br i1 %1149, label %1151, label %1150

1150:                                             ; preds = %1146
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1148) #8
  br label %1151

1151:                                             ; preds = %1150, %1146
  %1152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1054, align 8
  %1153 = icmp eq %"class.WTF::StringImpl"* %1152, null
  br i1 %1153, label %1167, label %1154

1154:                                             ; preds = %1151
  %1155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1156 = load atomic i32, i32* %1155 monotonic, align 4
  %1157 = and i32 %1156, 2
  %1158 = icmp eq i32 %1157, 0
  %1159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1152, i64 0, i32 0
  %1160 = load i32, i32* %1159, align 4
  br i1 %1158, label %1161, label %1163

1161:                                             ; preds = %1154
  %1162 = add i32 %1160, -1
  store i32 %1162, i32* %1159, align 4
  br label %1163

1163:                                             ; preds = %1161, %1154
  %1164 = phi i32 [ %1162, %1161 ], [ %1160, %1154 ]
  %1165 = icmp eq i32 %1164, 0
  br i1 %1165, label %1166, label %1167

1166:                                             ; preds = %1163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1152) #8
  br label %1167

1167:                                             ; preds = %1151, %1163, %1166
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1051) #8
  br label %1190

1168:                                             ; preds = %1050
  %1169 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1170 = load i8*, i8** %1169, align 8
  store i8* null, i8** %1169, align 8
  %1171 = icmp eq i8* %1170, null
  br i1 %1171, label %1173, label %1172

1172:                                             ; preds = %1168
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1170) #8
  br label %1173

1173:                                             ; preds = %1172, %1168
  %1174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1054, align 8
  %1175 = icmp eq %"class.WTF::StringImpl"* %1174, null
  br i1 %1175, label %1189, label %1176

1176:                                             ; preds = %1173
  %1177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1174, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1178 = load atomic i32, i32* %1177 monotonic, align 4
  %1179 = and i32 %1178, 2
  %1180 = icmp eq i32 %1179, 0
  %1181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1174, i64 0, i32 0
  %1182 = load i32, i32* %1181, align 4
  br i1 %1180, label %1183, label %1185

1183:                                             ; preds = %1176
  %1184 = add i32 %1182, -1
  store i32 %1184, i32* %1181, align 4
  br label %1185

1185:                                             ; preds = %1183, %1176
  %1186 = phi i32 [ %1184, %1183 ], [ %1182, %1176 ]
  %1187 = icmp eq i32 %1186, 0
  br i1 %1187, label %1188, label %1189

1188:                                             ; preds = %1185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1174) #8
  br label %1189

1189:                                             ; preds = %1173, %1185, %1188
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1051) #8
  br label %2949

1190:                                             ; preds = %1167, %1044
  %1191 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 17, i32 0
  %1192 = bitcast %"class.v8::Name"** %1191 to %"class.v8::Value"**
  %1193 = load %"class.v8::Value"*, %"class.v8::Value"** %1192, align 8
  %1194 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1193) #8
  %1195 = icmp eq %"class.v8::Value"* %1194, null
  br i1 %1195, label %1196, label %1202

1196:                                             ; preds = %1190
  %1197 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1198 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1199 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1198, align 8
  %1200 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1199, i64 5
  %1201 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1200, align 8
  call void %1201(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1197) #8
  br label %2949

1202:                                             ; preds = %1190
  %1203 = bitcast %"class.v8::Value"* %1194 to i64*
  %1204 = load i64, i64* %1203, align 8
  %1205 = and i64 %1204, 3
  %1206 = icmp eq i64 %1205, 1
  br i1 %1206, label %1207, label %1224

1207:                                             ; preds = %1202
  %1208 = add i64 %1204, -1
  %1209 = inttoptr i64 %1208 to i32*
  %1210 = load i32, i32* %1209, align 4
  %1211 = and i64 %1204, -4294967296
  %1212 = zext i32 %1210 to i64
  %1213 = or i64 %1211, %1212
  %1214 = add i64 %1213, 7
  %1215 = inttoptr i64 %1214 to i16*
  %1216 = load i16, i16* %1215, align 2
  %1217 = icmp eq i16 %1216, 67
  br i1 %1217, label %1218, label %1224

1218:                                             ; preds = %1207
  %1219 = add i64 %1204, 23
  %1220 = inttoptr i64 %1219 to i32*
  %1221 = load i32, i32* %1220, align 4
  %1222 = and i32 %1221, -2
  %1223 = icmp eq i32 %1222, 10
  br i1 %1223, label %1232, label %1224

1224:                                             ; preds = %1207, %1202, %1218
  %1225 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1194, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1226 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1227 = load i32, i32* %1226, align 8
  %1228 = icmp eq i32 %1227, 0
  br i1 %1228, label %1229, label %2949

1229:                                             ; preds = %1224
  %1230 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 44
  store double %1225, double* %1230, align 8
  %1231 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 11
  store i8 1, i8* %1231, align 2
  br label %1232

1232:                                             ; preds = %1229, %1218
  %1233 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 18, i32 0
  %1234 = bitcast %"class.v8::Name"** %1233 to %"class.v8::Value"**
  %1235 = load %"class.v8::Value"*, %"class.v8::Value"** %1234, align 8
  %1236 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1235) #8
  %1237 = icmp eq %"class.v8::Value"* %1236, null
  br i1 %1237, label %1238, label %1244

1238:                                             ; preds = %1232
  %1239 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1240 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1241 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1240, align 8
  %1242 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1241, i64 5
  %1243 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1242, align 8
  call void %1243(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1239) #8
  br label %2949

1244:                                             ; preds = %1232
  %1245 = bitcast %"class.v8::Value"* %1236 to i64*
  %1246 = load i64, i64* %1245, align 8
  %1247 = and i64 %1246, 3
  %1248 = icmp eq i64 %1247, 1
  br i1 %1248, label %1249, label %1266

1249:                                             ; preds = %1244
  %1250 = add i64 %1246, -1
  %1251 = inttoptr i64 %1250 to i32*
  %1252 = load i32, i32* %1251, align 4
  %1253 = and i64 %1246, -4294967296
  %1254 = zext i32 %1252 to i64
  %1255 = or i64 %1253, %1254
  %1256 = add i64 %1255, 7
  %1257 = inttoptr i64 %1256 to i16*
  %1258 = load i16, i16* %1257, align 2
  %1259 = icmp eq i16 %1258, 67
  br i1 %1259, label %1260, label %1266

1260:                                             ; preds = %1249
  %1261 = add i64 %1246, 23
  %1262 = inttoptr i64 %1261 to i32*
  %1263 = load i32, i32* %1262, align 4
  %1264 = and i32 %1263, -2
  %1265 = icmp eq i32 %1264, 10
  br i1 %1265, label %1406, label %1266

1266:                                             ; preds = %1249, %1244, %1260
  %1267 = bitcast %"class.blink::V8StringResource"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1267) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1267, i8 -86, i64 152, i1 false)
  %1268 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1236, %"class.v8::Value"** %1268, align 8
  %1269 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 1
  store i32 0, i32* %1269, align 8
  %1270 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1270, align 8
  %1271 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1
  %1272 = bitcast %"class.std::__1::unique_ptr.67"* %1271 to i64*
  store i64 0, i64* %1272, align 8
  %1273 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %10, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1273, label %1274, label %1384

1274:                                             ; preds = %1266
  %1275 = load %"class.v8::Value"*, %"class.v8::Value"** %1268, align 8
  %1276 = icmp eq %"class.v8::Value"* %1275, null
  br i1 %1276, label %1277, label %1301, !prof !3

1277:                                             ; preds = %1274
  %1278 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1270, align 8
  %1279 = icmp eq %"class.WTF::StringImpl"* %1278, null
  br i1 %1279, label %1280, label %1282

1280:                                             ; preds = %1277
  %1281 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 45
  br label %1326

1282:                                             ; preds = %1277
  %1283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1284 = load atomic i32, i32* %1283 monotonic, align 4
  %1285 = and i32 %1284, 2
  %1286 = icmp eq i32 %1285, 0
  br i1 %1286, label %1287, label %1299

1287:                                             ; preds = %1282
  %1288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1278, i64 0, i32 0
  %1289 = load i32, i32* %1288, align 4
  %1290 = zext i32 %1289 to i33
  %1291 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1290, i33 1) #8
  %1292 = extractvalue { i33, i1 } %1291, 1
  %1293 = extractvalue { i33, i1 } %1291, 0
  %1294 = icmp slt i33 %1293, 0
  %1295 = or i1 %1292, %1294
  br i1 %1295, label %1296, label %1297, !prof !3

1296:                                             ; preds = %1287
  call void @llvm.trap() #8
  unreachable

1297:                                             ; preds = %1287
  %1298 = trunc i33 %1293 to i32
  store i32 %1298, i32* %1288, align 4
  br label %1299

1299:                                             ; preds = %1282, %1297
  %1300 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 45
  br label %1307

1301:                                             ; preds = %1274
  %1302 = bitcast %"class.v8::Value"* %1275 to %"class.v8::String"*
  %1303 = load i32, i32* %1269, align 8
  %1304 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1302, i32 %1303) #8
  %1305 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 45
  %1306 = icmp eq %"class.WTF::StringImpl"* %1304, null
  br i1 %1306, label %1326, label %1307

1307:                                             ; preds = %1299, %1301
  %1308 = phi %"class.WTF::String"* [ %1300, %1299 ], [ %1305, %1301 ]
  %1309 = phi %"class.WTF::StringImpl"* [ %1278, %1299 ], [ %1304, %1301 ]
  %1310 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1311 = load atomic i32, i32* %1310 monotonic, align 4
  %1312 = and i32 %1311, 2
  %1313 = icmp eq i32 %1312, 0
  br i1 %1313, label %1314, label %1326

1314:                                             ; preds = %1307
  %1315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1309, i64 0, i32 0
  %1316 = load i32, i32* %1315, align 4
  %1317 = zext i32 %1316 to i33
  %1318 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1317, i33 1) #8
  %1319 = extractvalue { i33, i1 } %1318, 1
  %1320 = extractvalue { i33, i1 } %1318, 0
  %1321 = icmp slt i33 %1320, 0
  %1322 = or i1 %1319, %1321
  br i1 %1322, label %1323, label %1324, !prof !3

1323:                                             ; preds = %1314
  call void @llvm.trap() #8
  unreachable

1324:                                             ; preds = %1314
  %1325 = trunc i33 %1320 to i32
  store i32 %1325, i32* %1315, align 4
  br label %1326

1326:                                             ; preds = %1280, %1324, %1307, %1301
  %1327 = phi i1 [ false, %1324 ], [ false, %1307 ], [ true, %1301 ], [ true, %1280 ]
  %1328 = phi %"class.WTF::String"* [ %1308, %1324 ], [ %1308, %1307 ], [ %1305, %1301 ], [ %1281, %1280 ]
  %1329 = phi %"class.WTF::StringImpl"* [ %1309, %1324 ], [ %1309, %1307 ], [ null, %1301 ], [ null, %1280 ]
  %1330 = ptrtoint %"class.WTF::StringImpl"* %1329 to i64
  %1331 = bitcast %"class.WTF::String"* %1328 to i64*
  %1332 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1328, i64 0, i32 0, i32 0
  %1333 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1332, align 8
  store i64 %1330, i64* %1331, align 8
  %1334 = icmp eq %"class.WTF::StringImpl"* %1333, null
  br i1 %1334, label %1348, label %1335

1335:                                             ; preds = %1326
  %1336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1337 = load atomic i32, i32* %1336 monotonic, align 4
  %1338 = and i32 %1337, 2
  %1339 = icmp eq i32 %1338, 0
  %1340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1333, i64 0, i32 0
  %1341 = load i32, i32* %1340, align 4
  br i1 %1339, label %1342, label %1344

1342:                                             ; preds = %1335
  %1343 = add i32 %1341, -1
  store i32 %1343, i32* %1340, align 4
  br label %1344

1344:                                             ; preds = %1342, %1335
  %1345 = phi i32 [ %1343, %1342 ], [ %1341, %1335 ]
  %1346 = icmp eq i32 %1345, 0
  br i1 %1346, label %1347, label %1348

1347:                                             ; preds = %1344
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1333) #8
  br label %1348

1348:                                             ; preds = %1326, %1344, %1347
  br i1 %1327, label %1362, label %1349

1349:                                             ; preds = %1348
  %1350 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1351 = load atomic i32, i32* %1350 monotonic, align 4
  %1352 = and i32 %1351, 2
  %1353 = icmp eq i32 %1352, 0
  %1354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1329, i64 0, i32 0
  %1355 = load i32, i32* %1354, align 4
  br i1 %1353, label %1356, label %1358

1356:                                             ; preds = %1349
  %1357 = add i32 %1355, -1
  store i32 %1357, i32* %1354, align 4
  br label %1358

1358:                                             ; preds = %1356, %1349
  %1359 = phi i32 [ %1357, %1356 ], [ %1355, %1349 ]
  %1360 = icmp eq i32 %1359, 0
  br i1 %1360, label %1361, label %1362

1361:                                             ; preds = %1358
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1329) #8
  br label %1362

1362:                                             ; preds = %1348, %1358, %1361
  %1363 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1364 = load i8*, i8** %1363, align 8
  store i8* null, i8** %1363, align 8
  %1365 = icmp eq i8* %1364, null
  br i1 %1365, label %1367, label %1366

1366:                                             ; preds = %1362
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1364) #8
  br label %1367

1367:                                             ; preds = %1366, %1362
  %1368 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1270, align 8
  %1369 = icmp eq %"class.WTF::StringImpl"* %1368, null
  br i1 %1369, label %1383, label %1370

1370:                                             ; preds = %1367
  %1371 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1368, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1372 = load atomic i32, i32* %1371 monotonic, align 4
  %1373 = and i32 %1372, 2
  %1374 = icmp eq i32 %1373, 0
  %1375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1368, i64 0, i32 0
  %1376 = load i32, i32* %1375, align 4
  br i1 %1374, label %1377, label %1379

1377:                                             ; preds = %1370
  %1378 = add i32 %1376, -1
  store i32 %1378, i32* %1375, align 4
  br label %1379

1379:                                             ; preds = %1377, %1370
  %1380 = phi i32 [ %1378, %1377 ], [ %1376, %1370 ]
  %1381 = icmp eq i32 %1380, 0
  br i1 %1381, label %1382, label %1383

1382:                                             ; preds = %1379
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1368) #8
  br label %1383

1383:                                             ; preds = %1367, %1379, %1382
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1267) #8
  br label %1406

1384:                                             ; preds = %1266
  %1385 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %10, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1386 = load i8*, i8** %1385, align 8
  store i8* null, i8** %1385, align 8
  %1387 = icmp eq i8* %1386, null
  br i1 %1387, label %1389, label %1388

1388:                                             ; preds = %1384
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1386) #8
  br label %1389

1389:                                             ; preds = %1388, %1384
  %1390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1270, align 8
  %1391 = icmp eq %"class.WTF::StringImpl"* %1390, null
  br i1 %1391, label %1405, label %1392

1392:                                             ; preds = %1389
  %1393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1394 = load atomic i32, i32* %1393 monotonic, align 4
  %1395 = and i32 %1394, 2
  %1396 = icmp eq i32 %1395, 0
  %1397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1390, i64 0, i32 0
  %1398 = load i32, i32* %1397, align 4
  br i1 %1396, label %1399, label %1401

1399:                                             ; preds = %1392
  %1400 = add i32 %1398, -1
  store i32 %1400, i32* %1397, align 4
  br label %1401

1401:                                             ; preds = %1399, %1392
  %1402 = phi i32 [ %1400, %1399 ], [ %1398, %1392 ]
  %1403 = icmp eq i32 %1402, 0
  br i1 %1403, label %1404, label %1405

1404:                                             ; preds = %1401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1390) #8
  br label %1405

1405:                                             ; preds = %1389, %1401, %1404
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1267) #8
  br label %2949

1406:                                             ; preds = %1383, %1260
  %1407 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 19, i32 0
  %1408 = bitcast %"class.v8::Name"** %1407 to %"class.v8::Value"**
  %1409 = load %"class.v8::Value"*, %"class.v8::Value"** %1408, align 8
  %1410 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1409) #8
  %1411 = icmp eq %"class.v8::Value"* %1410, null
  br i1 %1411, label %1412, label %1418

1412:                                             ; preds = %1406
  %1413 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1414 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1415 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1414, align 8
  %1416 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1415, i64 5
  %1417 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1416, align 8
  call void %1417(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1413) #8
  br label %2949

1418:                                             ; preds = %1406
  %1419 = bitcast %"class.v8::Value"* %1410 to i64*
  %1420 = load i64, i64* %1419, align 8
  %1421 = and i64 %1420, 3
  %1422 = icmp eq i64 %1421, 1
  br i1 %1422, label %1423, label %1440

1423:                                             ; preds = %1418
  %1424 = add i64 %1420, -1
  %1425 = inttoptr i64 %1424 to i32*
  %1426 = load i32, i32* %1425, align 4
  %1427 = and i64 %1420, -4294967296
  %1428 = zext i32 %1426 to i64
  %1429 = or i64 %1427, %1428
  %1430 = add i64 %1429, 7
  %1431 = inttoptr i64 %1430 to i16*
  %1432 = load i16, i16* %1431, align 2
  %1433 = icmp eq i16 %1432, 67
  br i1 %1433, label %1434, label %1440

1434:                                             ; preds = %1423
  %1435 = add i64 %1420, 23
  %1436 = inttoptr i64 %1435 to i32*
  %1437 = load i32, i32* %1436, align 4
  %1438 = and i32 %1437, -2
  %1439 = icmp eq i32 %1438, 10
  br i1 %1439, label %1455, label %1440

1440:                                             ; preds = %1423, %1418, %1434
  %1441 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1410) #8
  br i1 %1441, label %1442, label %1445, !prof !2

1442:                                             ; preds = %1440
  %1443 = bitcast %"class.v8::Value"* %1410 to %"class.v8::Int32"*
  %1444 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1443) #8
  br label %1447

1445:                                             ; preds = %1440
  %1446 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1410, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1447

1447:                                             ; preds = %1442, %1445
  %1448 = phi i32 [ %1444, %1442 ], [ %1446, %1445 ]
  %1449 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1450 = load i32, i32* %1449, align 8
  %1451 = icmp eq i32 %1450, 0
  br i1 %1451, label %1452, label %2949

1452:                                             ; preds = %1447
  %1453 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 46
  store i32 %1448, i32* %1453, align 8
  %1454 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 12
  store i8 1, i8* %1454, align 1
  br label %1455

1455:                                             ; preds = %1452, %1434
  %1456 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 20, i32 0
  %1457 = bitcast %"class.v8::Name"** %1456 to %"class.v8::Value"**
  %1458 = load %"class.v8::Value"*, %"class.v8::Value"** %1457, align 8
  %1459 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1458) #8
  %1460 = icmp eq %"class.v8::Value"* %1459, null
  br i1 %1460, label %1461, label %1467

1461:                                             ; preds = %1455
  %1462 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1463 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1464 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1463, align 8
  %1465 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1464, i64 5
  %1466 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1465, align 8
  call void %1466(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1462) #8
  br label %2949

1467:                                             ; preds = %1455
  %1468 = bitcast %"class.v8::Value"* %1459 to i64*
  %1469 = load i64, i64* %1468, align 8
  %1470 = and i64 %1469, 3
  %1471 = icmp eq i64 %1470, 1
  br i1 %1471, label %1472, label %1489

1472:                                             ; preds = %1467
  %1473 = add i64 %1469, -1
  %1474 = inttoptr i64 %1473 to i32*
  %1475 = load i32, i32* %1474, align 4
  %1476 = and i64 %1469, -4294967296
  %1477 = zext i32 %1475 to i64
  %1478 = or i64 %1476, %1477
  %1479 = add i64 %1478, 7
  %1480 = inttoptr i64 %1479 to i16*
  %1481 = load i16, i16* %1480, align 2
  %1482 = icmp eq i16 %1481, 67
  br i1 %1482, label %1483, label %1489

1483:                                             ; preds = %1472
  %1484 = add i64 %1469, 23
  %1485 = inttoptr i64 %1484 to i32*
  %1486 = load i32, i32* %1485, align 4
  %1487 = and i32 %1486, -2
  %1488 = icmp eq i32 %1487, 10
  br i1 %1488, label %1497, label %1489

1489:                                             ; preds = %1472, %1467, %1483
  %1490 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1459, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1491 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1492 = load i32, i32* %1491, align 8
  %1493 = icmp eq i32 %1492, 0
  br i1 %1493, label %1494, label %2949

1494:                                             ; preds = %1489
  %1495 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 47
  store double %1490, double* %1495, align 8
  %1496 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 13
  store i8 1, i8* %1496, align 4
  br label %1497

1497:                                             ; preds = %1494, %1483
  %1498 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 21, i32 0
  %1499 = bitcast %"class.v8::Name"** %1498 to %"class.v8::Value"**
  %1500 = load %"class.v8::Value"*, %"class.v8::Value"** %1499, align 8
  %1501 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1500) #8
  %1502 = icmp eq %"class.v8::Value"* %1501, null
  br i1 %1502, label %1503, label %1509

1503:                                             ; preds = %1497
  %1504 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1505 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1506 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1505, align 8
  %1507 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1506, i64 5
  %1508 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1507, align 8
  call void %1508(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1504) #8
  br label %2949

1509:                                             ; preds = %1497
  %1510 = bitcast %"class.v8::Value"* %1501 to i64*
  %1511 = load i64, i64* %1510, align 8
  %1512 = and i64 %1511, 3
  %1513 = icmp eq i64 %1512, 1
  br i1 %1513, label %1514, label %1531

1514:                                             ; preds = %1509
  %1515 = add i64 %1511, -1
  %1516 = inttoptr i64 %1515 to i32*
  %1517 = load i32, i32* %1516, align 4
  %1518 = and i64 %1511, -4294967296
  %1519 = zext i32 %1517 to i64
  %1520 = or i64 %1518, %1519
  %1521 = add i64 %1520, 7
  %1522 = inttoptr i64 %1521 to i16*
  %1523 = load i16, i16* %1522, align 2
  %1524 = icmp eq i16 %1523, 67
  br i1 %1524, label %1525, label %1531

1525:                                             ; preds = %1514
  %1526 = add i64 %1511, 23
  %1527 = inttoptr i64 %1526 to i32*
  %1528 = load i32, i32* %1527, align 4
  %1529 = and i32 %1528, -2
  %1530 = icmp eq i32 %1529, 10
  br i1 %1530, label %1539, label %1531

1531:                                             ; preds = %1514, %1509, %1525
  %1532 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1501, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1533 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1534 = load i32, i32* %1533, align 8
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1536, label %2949

1536:                                             ; preds = %1531
  %1537 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 48
  store double %1532, double* %1537, align 8
  %1538 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 14
  store i8 1, i8* %1538, align 1
  br label %1539

1539:                                             ; preds = %1536, %1525
  %1540 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 23, i32 0
  %1541 = bitcast %"class.v8::Name"** %1540 to %"class.v8::Value"**
  %1542 = load %"class.v8::Value"*, %"class.v8::Value"** %1541, align 8
  %1543 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1542) #8
  %1544 = icmp eq %"class.v8::Value"* %1543, null
  br i1 %1544, label %1545, label %1551

1545:                                             ; preds = %1539
  %1546 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1547 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1548 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1547, align 8
  %1549 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1548, i64 5
  %1550 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1549, align 8
  call void %1550(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1546) #8
  br label %2949

1551:                                             ; preds = %1539
  %1552 = bitcast %"class.v8::Value"* %1543 to i64*
  %1553 = load i64, i64* %1552, align 8
  %1554 = and i64 %1553, 3
  %1555 = icmp eq i64 %1554, 1
  br i1 %1555, label %1556, label %1573

1556:                                             ; preds = %1551
  %1557 = add i64 %1553, -1
  %1558 = inttoptr i64 %1557 to i32*
  %1559 = load i32, i32* %1558, align 4
  %1560 = and i64 %1553, -4294967296
  %1561 = zext i32 %1559 to i64
  %1562 = or i64 %1560, %1561
  %1563 = add i64 %1562, 7
  %1564 = inttoptr i64 %1563 to i16*
  %1565 = load i16, i16* %1564, align 2
  %1566 = icmp eq i16 %1565, 67
  br i1 %1566, label %1567, label %1573

1567:                                             ; preds = %1556
  %1568 = add i64 %1553, 23
  %1569 = inttoptr i64 %1568 to i32*
  %1570 = load i32, i32* %1569, align 4
  %1571 = and i32 %1570, -2
  %1572 = icmp eq i32 %1571, 10
  br i1 %1572, label %1589, label %1573

1573:                                             ; preds = %1556, %1551, %1567
  %1574 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %1543) #8
  br i1 %1574, label %1575, label %1578, !prof !2

1575:                                             ; preds = %1573
  %1576 = bitcast %"class.v8::Value"* %1543 to %"class.v8::Boolean"*
  %1577 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %1576) #8
  br label %1580

1578:                                             ; preds = %1573
  %1579 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %1543, %"class.v8::Isolate"* %0) #8
  br label %1580

1580:                                             ; preds = %1575, %1578
  %1581 = phi i1 [ %1577, %1575 ], [ %1579, %1578 ]
  %1582 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1583 = load i32, i32* %1582, align 8
  %1584 = icmp eq i32 %1583, 0
  br i1 %1584, label %1585, label %2949

1585:                                             ; preds = %1580
  %1586 = zext i1 %1581 to i8
  %1587 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 50
  store i8 %1586, i8* %1587, align 1
  %1588 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 16
  store i8 1, i8* %1588, align 1
  br label %1589

1589:                                             ; preds = %1585, %1567
  %1590 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 24, i32 0
  %1591 = bitcast %"class.v8::Name"** %1590 to %"class.v8::Value"**
  %1592 = load %"class.v8::Value"*, %"class.v8::Value"** %1591, align 8
  %1593 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1592) #8
  %1594 = icmp eq %"class.v8::Value"* %1593, null
  br i1 %1594, label %1595, label %1601

1595:                                             ; preds = %1589
  %1596 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1597 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1598 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1597, align 8
  %1599 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1598, i64 5
  %1600 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1599, align 8
  call void %1600(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1596) #8
  br label %2949

1601:                                             ; preds = %1589
  %1602 = bitcast %"class.v8::Value"* %1593 to i64*
  %1603 = load i64, i64* %1602, align 8
  %1604 = and i64 %1603, 3
  %1605 = icmp eq i64 %1604, 1
  br i1 %1605, label %1606, label %1623

1606:                                             ; preds = %1601
  %1607 = add i64 %1603, -1
  %1608 = inttoptr i64 %1607 to i32*
  %1609 = load i32, i32* %1608, align 4
  %1610 = and i64 %1603, -4294967296
  %1611 = zext i32 %1609 to i64
  %1612 = or i64 %1610, %1611
  %1613 = add i64 %1612, 7
  %1614 = inttoptr i64 %1613 to i16*
  %1615 = load i16, i16* %1614, align 2
  %1616 = icmp eq i16 %1615, 67
  br i1 %1616, label %1617, label %1623

1617:                                             ; preds = %1606
  %1618 = add i64 %1603, 23
  %1619 = inttoptr i64 %1618 to i32*
  %1620 = load i32, i32* %1619, align 4
  %1621 = and i32 %1620, -2
  %1622 = icmp eq i32 %1621, 10
  br i1 %1622, label %1631, label %1623

1623:                                             ; preds = %1606, %1601, %1617
  %1624 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1593, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1625 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1626 = load i32, i32* %1625, align 8
  %1627 = icmp eq i32 %1626, 0
  br i1 %1627, label %1628, label %2949

1628:                                             ; preds = %1623
  %1629 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 51
  store double %1624, double* %1629, align 8
  %1630 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 17
  store i8 1, i8* %1630, align 8
  br label %1631

1631:                                             ; preds = %1628, %1617
  %1632 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 25, i32 0
  %1633 = bitcast %"class.v8::Name"** %1632 to %"class.v8::Value"**
  %1634 = load %"class.v8::Value"*, %"class.v8::Value"** %1633, align 8
  %1635 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1634) #8
  %1636 = icmp eq %"class.v8::Value"* %1635, null
  br i1 %1636, label %1637, label %1643

1637:                                             ; preds = %1631
  %1638 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1639 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1640 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1639, align 8
  %1641 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1640, i64 5
  %1642 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1641, align 8
  call void %1642(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1638) #8
  br label %2949

1643:                                             ; preds = %1631
  %1644 = bitcast %"class.v8::Value"* %1635 to i64*
  %1645 = load i64, i64* %1644, align 8
  %1646 = and i64 %1645, 3
  %1647 = icmp eq i64 %1646, 1
  br i1 %1647, label %1648, label %1665

1648:                                             ; preds = %1643
  %1649 = add i64 %1645, -1
  %1650 = inttoptr i64 %1649 to i32*
  %1651 = load i32, i32* %1650, align 4
  %1652 = and i64 %1645, -4294967296
  %1653 = zext i32 %1651 to i64
  %1654 = or i64 %1652, %1653
  %1655 = add i64 %1654, 7
  %1656 = inttoptr i64 %1655 to i16*
  %1657 = load i16, i16* %1656, align 2
  %1658 = icmp eq i16 %1657, 67
  br i1 %1658, label %1659, label %1665

1659:                                             ; preds = %1648
  %1660 = add i64 %1645, 23
  %1661 = inttoptr i64 %1660 to i32*
  %1662 = load i32, i32* %1661, align 4
  %1663 = and i32 %1662, -2
  %1664 = icmp eq i32 %1663, 10
  br i1 %1664, label %1673, label %1665

1665:                                             ; preds = %1648, %1643, %1659
  %1666 = bitcast %"class.blink::HeapVector"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1666) #8
  %1667 = bitcast %"class.blink::HeapVector"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1667, i8 -86, i64 16, i1 false)
  call void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_7Point2DEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* nonnull sret %11, %"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1635, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  %1668 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1669 = load i32, i32* %1668, align 8
  %1670 = icmp eq i32 %1669, 0
  br i1 %1670, label %1671, label %1672

1671:                                             ; preds = %1665
  call void @_ZN5blink18MediaTrackSettings19setPointsOfInterestERKNS_10HeapVectorINS_6MemberINS_7Point2DEEELj0EEE(%"class.blink::MediaTrackSettings"* %2, %"class.blink::HeapVector"* nonnull dereferenceable(16) %11) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1666) #8
  br label %1673

1672:                                             ; preds = %1665
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1666) #8
  br label %2949

1673:                                             ; preds = %1671, %1659
  %1674 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 26, i32 0
  %1675 = bitcast %"class.v8::Name"** %1674 to %"class.v8::Value"**
  %1676 = load %"class.v8::Value"*, %"class.v8::Value"** %1675, align 8
  %1677 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1676) #8
  %1678 = icmp eq %"class.v8::Value"* %1677, null
  br i1 %1678, label %1679, label %1685

1679:                                             ; preds = %1673
  %1680 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1681 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1682 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1681, align 8
  %1683 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1682, i64 5
  %1684 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1683, align 8
  call void %1684(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1680) #8
  br label %2949

1685:                                             ; preds = %1673
  %1686 = bitcast %"class.v8::Value"* %1677 to i64*
  %1687 = load i64, i64* %1686, align 8
  %1688 = and i64 %1687, 3
  %1689 = icmp eq i64 %1688, 1
  br i1 %1689, label %1690, label %1707

1690:                                             ; preds = %1685
  %1691 = add i64 %1687, -1
  %1692 = inttoptr i64 %1691 to i32*
  %1693 = load i32, i32* %1692, align 4
  %1694 = and i64 %1687, -4294967296
  %1695 = zext i32 %1693 to i64
  %1696 = or i64 %1694, %1695
  %1697 = add i64 %1696, 7
  %1698 = inttoptr i64 %1697 to i16*
  %1699 = load i16, i16* %1698, align 2
  %1700 = icmp eq i16 %1699, 67
  br i1 %1700, label %1701, label %1707

1701:                                             ; preds = %1690
  %1702 = add i64 %1687, 23
  %1703 = inttoptr i64 %1702 to i32*
  %1704 = load i32, i32* %1703, align 4
  %1705 = and i32 %1704, -2
  %1706 = icmp eq i32 %1705, 10
  br i1 %1706, label %1847, label %1707

1707:                                             ; preds = %1690, %1685, %1701
  %1708 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %1708) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1708, i8 -86, i64 152, i1 false)
  %1709 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %1677, %"class.v8::Value"** %1709, align 8
  %1710 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %1710, align 8
  %1711 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1711, align 8
  %1712 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %1713 = bitcast %"class.std::__1::unique_ptr.67"* %1712 to i64*
  store i64 0, i64* %1713, align 8
  %1714 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %1714, label %1715, label %1825

1715:                                             ; preds = %1707
  %1716 = load %"class.v8::Value"*, %"class.v8::Value"** %1709, align 8
  %1717 = icmp eq %"class.v8::Value"* %1716, null
  br i1 %1717, label %1718, label %1742, !prof !3

1718:                                             ; preds = %1715
  %1719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1711, align 8
  %1720 = icmp eq %"class.WTF::StringImpl"* %1719, null
  br i1 %1720, label %1721, label %1723

1721:                                             ; preds = %1718
  %1722 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 53
  br label %1767

1723:                                             ; preds = %1718
  %1724 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1725 = load atomic i32, i32* %1724 monotonic, align 4
  %1726 = and i32 %1725, 2
  %1727 = icmp eq i32 %1726, 0
  br i1 %1727, label %1728, label %1740

1728:                                             ; preds = %1723
  %1729 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1719, i64 0, i32 0
  %1730 = load i32, i32* %1729, align 4
  %1731 = zext i32 %1730 to i33
  %1732 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1731, i33 1) #8
  %1733 = extractvalue { i33, i1 } %1732, 1
  %1734 = extractvalue { i33, i1 } %1732, 0
  %1735 = icmp slt i33 %1734, 0
  %1736 = or i1 %1733, %1735
  br i1 %1736, label %1737, label %1738, !prof !3

1737:                                             ; preds = %1728
  call void @llvm.trap() #8
  unreachable

1738:                                             ; preds = %1728
  %1739 = trunc i33 %1734 to i32
  store i32 %1739, i32* %1729, align 4
  br label %1740

1740:                                             ; preds = %1723, %1738
  %1741 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 53
  br label %1748

1742:                                             ; preds = %1715
  %1743 = bitcast %"class.v8::Value"* %1716 to %"class.v8::String"*
  %1744 = load i32, i32* %1710, align 8
  %1745 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %1743, i32 %1744) #8
  %1746 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 53
  %1747 = icmp eq %"class.WTF::StringImpl"* %1745, null
  br i1 %1747, label %1767, label %1748

1748:                                             ; preds = %1740, %1742
  %1749 = phi %"class.WTF::String"* [ %1741, %1740 ], [ %1746, %1742 ]
  %1750 = phi %"class.WTF::StringImpl"* [ %1719, %1740 ], [ %1745, %1742 ]
  %1751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1752 = load atomic i32, i32* %1751 monotonic, align 4
  %1753 = and i32 %1752, 2
  %1754 = icmp eq i32 %1753, 0
  br i1 %1754, label %1755, label %1767

1755:                                             ; preds = %1748
  %1756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1757 = load i32, i32* %1756, align 4
  %1758 = zext i32 %1757 to i33
  %1759 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1758, i33 1) #8
  %1760 = extractvalue { i33, i1 } %1759, 1
  %1761 = extractvalue { i33, i1 } %1759, 0
  %1762 = icmp slt i33 %1761, 0
  %1763 = or i1 %1760, %1762
  br i1 %1763, label %1764, label %1765, !prof !3

1764:                                             ; preds = %1755
  call void @llvm.trap() #8
  unreachable

1765:                                             ; preds = %1755
  %1766 = trunc i33 %1761 to i32
  store i32 %1766, i32* %1756, align 4
  br label %1767

1767:                                             ; preds = %1721, %1765, %1748, %1742
  %1768 = phi i1 [ false, %1765 ], [ false, %1748 ], [ true, %1742 ], [ true, %1721 ]
  %1769 = phi %"class.WTF::String"* [ %1749, %1765 ], [ %1749, %1748 ], [ %1746, %1742 ], [ %1722, %1721 ]
  %1770 = phi %"class.WTF::StringImpl"* [ %1750, %1765 ], [ %1750, %1748 ], [ null, %1742 ], [ null, %1721 ]
  %1771 = ptrtoint %"class.WTF::StringImpl"* %1770 to i64
  %1772 = bitcast %"class.WTF::String"* %1769 to i64*
  %1773 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1769, i64 0, i32 0, i32 0
  %1774 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1773, align 8
  store i64 %1771, i64* %1772, align 8
  %1775 = icmp eq %"class.WTF::StringImpl"* %1774, null
  br i1 %1775, label %1789, label %1776

1776:                                             ; preds = %1767
  %1777 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1778 = load atomic i32, i32* %1777 monotonic, align 4
  %1779 = and i32 %1778, 2
  %1780 = icmp eq i32 %1779, 0
  %1781 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1774, i64 0, i32 0
  %1782 = load i32, i32* %1781, align 4
  br i1 %1780, label %1783, label %1785

1783:                                             ; preds = %1776
  %1784 = add i32 %1782, -1
  store i32 %1784, i32* %1781, align 4
  br label %1785

1785:                                             ; preds = %1783, %1776
  %1786 = phi i32 [ %1784, %1783 ], [ %1782, %1776 ]
  %1787 = icmp eq i32 %1786, 0
  br i1 %1787, label %1788, label %1789

1788:                                             ; preds = %1785
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1774) #8
  br label %1789

1789:                                             ; preds = %1767, %1785, %1788
  br i1 %1768, label %1803, label %1790

1790:                                             ; preds = %1789
  %1791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1770, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1792 = load atomic i32, i32* %1791 monotonic, align 4
  %1793 = and i32 %1792, 2
  %1794 = icmp eq i32 %1793, 0
  %1795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1770, i64 0, i32 0
  %1796 = load i32, i32* %1795, align 4
  br i1 %1794, label %1797, label %1799

1797:                                             ; preds = %1790
  %1798 = add i32 %1796, -1
  store i32 %1798, i32* %1795, align 4
  br label %1799

1799:                                             ; preds = %1797, %1790
  %1800 = phi i32 [ %1798, %1797 ], [ %1796, %1790 ]
  %1801 = icmp eq i32 %1800, 0
  br i1 %1801, label %1802, label %1803

1802:                                             ; preds = %1799
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1770) #8
  br label %1803

1803:                                             ; preds = %1789, %1799, %1802
  %1804 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1805 = load i8*, i8** %1804, align 8
  store i8* null, i8** %1804, align 8
  %1806 = icmp eq i8* %1805, null
  br i1 %1806, label %1808, label %1807

1807:                                             ; preds = %1803
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1805) #8
  br label %1808

1808:                                             ; preds = %1807, %1803
  %1809 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1711, align 8
  %1810 = icmp eq %"class.WTF::StringImpl"* %1809, null
  br i1 %1810, label %1824, label %1811

1811:                                             ; preds = %1808
  %1812 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1813 = load atomic i32, i32* %1812 monotonic, align 4
  %1814 = and i32 %1813, 2
  %1815 = icmp eq i32 %1814, 0
  %1816 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1809, i64 0, i32 0
  %1817 = load i32, i32* %1816, align 4
  br i1 %1815, label %1818, label %1820

1818:                                             ; preds = %1811
  %1819 = add i32 %1817, -1
  store i32 %1819, i32* %1816, align 4
  br label %1820

1820:                                             ; preds = %1818, %1811
  %1821 = phi i32 [ %1819, %1818 ], [ %1817, %1811 ]
  %1822 = icmp eq i32 %1821, 0
  br i1 %1822, label %1823, label %1824

1823:                                             ; preds = %1820
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1809) #8
  br label %1824

1824:                                             ; preds = %1808, %1820, %1823
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1708) #8
  br label %1847

1825:                                             ; preds = %1707
  %1826 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %1827 = load i8*, i8** %1826, align 8
  store i8* null, i8** %1826, align 8
  %1828 = icmp eq i8* %1827, null
  br i1 %1828, label %1830, label %1829

1829:                                             ; preds = %1825
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %1827) #8
  br label %1830

1830:                                             ; preds = %1829, %1825
  %1831 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1711, align 8
  %1832 = icmp eq %"class.WTF::StringImpl"* %1831, null
  br i1 %1832, label %1846, label %1833

1833:                                             ; preds = %1830
  %1834 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1831, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1835 = load atomic i32, i32* %1834 monotonic, align 4
  %1836 = and i32 %1835, 2
  %1837 = icmp eq i32 %1836, 0
  %1838 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1831, i64 0, i32 0
  %1839 = load i32, i32* %1838, align 4
  br i1 %1837, label %1840, label %1842

1840:                                             ; preds = %1833
  %1841 = add i32 %1839, -1
  store i32 %1841, i32* %1838, align 4
  br label %1842

1842:                                             ; preds = %1840, %1833
  %1843 = phi i32 [ %1841, %1840 ], [ %1839, %1833 ]
  %1844 = icmp eq i32 %1843, 0
  br i1 %1844, label %1845, label %1846

1845:                                             ; preds = %1842
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1831) #8
  br label %1846

1846:                                             ; preds = %1830, %1842, %1845
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %1708) #8
  br label %2949

1847:                                             ; preds = %1824, %1701
  %1848 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 27, i32 0
  %1849 = bitcast %"class.v8::Name"** %1848 to %"class.v8::Value"**
  %1850 = load %"class.v8::Value"*, %"class.v8::Value"** %1849, align 8
  %1851 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1850) #8
  %1852 = icmp eq %"class.v8::Value"* %1851, null
  br i1 %1852, label %1853, label %1859

1853:                                             ; preds = %1847
  %1854 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1855 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1856 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1855, align 8
  %1857 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1856, i64 5
  %1858 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1857, align 8
  call void %1858(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1854) #8
  br label %2949

1859:                                             ; preds = %1847
  %1860 = bitcast %"class.v8::Value"* %1851 to i64*
  %1861 = load i64, i64* %1860, align 8
  %1862 = and i64 %1861, 3
  %1863 = icmp eq i64 %1862, 1
  br i1 %1863, label %1864, label %1881

1864:                                             ; preds = %1859
  %1865 = add i64 %1861, -1
  %1866 = inttoptr i64 %1865 to i32*
  %1867 = load i32, i32* %1866, align 4
  %1868 = and i64 %1861, -4294967296
  %1869 = zext i32 %1867 to i64
  %1870 = or i64 %1868, %1869
  %1871 = add i64 %1870, 7
  %1872 = inttoptr i64 %1871 to i16*
  %1873 = load i16, i16* %1872, align 2
  %1874 = icmp eq i16 %1873, 67
  br i1 %1874, label %1875, label %1881

1875:                                             ; preds = %1864
  %1876 = add i64 %1861, 23
  %1877 = inttoptr i64 %1876 to i32*
  %1878 = load i32, i32* %1877, align 4
  %1879 = and i32 %1878, -2
  %1880 = icmp eq i32 %1879, 10
  br i1 %1880, label %1896, label %1881

1881:                                             ; preds = %1864, %1859, %1875
  %1882 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1851) #8
  br i1 %1882, label %1883, label %1886, !prof !2

1883:                                             ; preds = %1881
  %1884 = bitcast %"class.v8::Value"* %1851 to %"class.v8::Int32"*
  %1885 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1884) #8
  br label %1888

1886:                                             ; preds = %1881
  %1887 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1851, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1888

1888:                                             ; preds = %1883, %1886
  %1889 = phi i32 [ %1885, %1883 ], [ %1887, %1886 ]
  %1890 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1891 = load i32, i32* %1890, align 8
  %1892 = icmp eq i32 %1891, 0
  br i1 %1892, label %1893, label %2949

1893:                                             ; preds = %1888
  %1894 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 54
  store i32 %1889, i32* %1894, align 8
  %1895 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 19
  store i8 1, i8* %1895, align 2
  br label %1896

1896:                                             ; preds = %1893, %1875
  %1897 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 28, i32 0
  %1898 = bitcast %"class.v8::Name"** %1897 to %"class.v8::Value"**
  %1899 = load %"class.v8::Value"*, %"class.v8::Value"** %1898, align 8
  %1900 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1899) #8
  %1901 = icmp eq %"class.v8::Value"* %1900, null
  br i1 %1901, label %1902, label %1908

1902:                                             ; preds = %1896
  %1903 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1904 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1905 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1904, align 8
  %1906 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1905, i64 5
  %1907 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1906, align 8
  call void %1907(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1903) #8
  br label %2949

1908:                                             ; preds = %1896
  %1909 = bitcast %"class.v8::Value"* %1900 to i64*
  %1910 = load i64, i64* %1909, align 8
  %1911 = and i64 %1910, 3
  %1912 = icmp eq i64 %1911, 1
  br i1 %1912, label %1913, label %1930

1913:                                             ; preds = %1908
  %1914 = add i64 %1910, -1
  %1915 = inttoptr i64 %1914 to i32*
  %1916 = load i32, i32* %1915, align 4
  %1917 = and i64 %1910, -4294967296
  %1918 = zext i32 %1916 to i64
  %1919 = or i64 %1917, %1918
  %1920 = add i64 %1919, 7
  %1921 = inttoptr i64 %1920 to i16*
  %1922 = load i16, i16* %1921, align 2
  %1923 = icmp eq i16 %1922, 67
  br i1 %1923, label %1924, label %1930

1924:                                             ; preds = %1913
  %1925 = add i64 %1910, 23
  %1926 = inttoptr i64 %1925 to i32*
  %1927 = load i32, i32* %1926, align 4
  %1928 = and i32 %1927, -2
  %1929 = icmp eq i32 %1928, 10
  br i1 %1929, label %1945, label %1930

1930:                                             ; preds = %1913, %1908, %1924
  %1931 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %1900) #8
  br i1 %1931, label %1932, label %1935, !prof !2

1932:                                             ; preds = %1930
  %1933 = bitcast %"class.v8::Value"* %1900 to %"class.v8::Int32"*
  %1934 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %1933) #8
  br label %1937

1935:                                             ; preds = %1930
  %1936 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1900, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %1937

1937:                                             ; preds = %1932, %1935
  %1938 = phi i32 [ %1934, %1932 ], [ %1936, %1935 ]
  %1939 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1940 = load i32, i32* %1939, align 8
  %1941 = icmp eq i32 %1940, 0
  br i1 %1941, label %1942, label %2949

1942:                                             ; preds = %1937
  %1943 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 55
  store i32 %1938, i32* %1943, align 4
  %1944 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 20
  store i8 1, i8* %1944, align 1
  br label %1945

1945:                                             ; preds = %1942, %1924
  %1946 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 29, i32 0
  %1947 = bitcast %"class.v8::Name"** %1946 to %"class.v8::Value"**
  %1948 = load %"class.v8::Value"*, %"class.v8::Value"** %1947, align 8
  %1949 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1948) #8
  %1950 = icmp eq %"class.v8::Value"* %1949, null
  br i1 %1950, label %1951, label %1957

1951:                                             ; preds = %1945
  %1952 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1953 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1954 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1953, align 8
  %1955 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1954, i64 5
  %1956 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1955, align 8
  call void %1956(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1952) #8
  br label %2949

1957:                                             ; preds = %1945
  %1958 = bitcast %"class.v8::Value"* %1949 to i64*
  %1959 = load i64, i64* %1958, align 8
  %1960 = and i64 %1959, 3
  %1961 = icmp eq i64 %1960, 1
  br i1 %1961, label %1962, label %1979

1962:                                             ; preds = %1957
  %1963 = add i64 %1959, -1
  %1964 = inttoptr i64 %1963 to i32*
  %1965 = load i32, i32* %1964, align 4
  %1966 = and i64 %1959, -4294967296
  %1967 = zext i32 %1965 to i64
  %1968 = or i64 %1966, %1967
  %1969 = add i64 %1968, 7
  %1970 = inttoptr i64 %1969 to i16*
  %1971 = load i16, i16* %1970, align 2
  %1972 = icmp eq i16 %1971, 67
  br i1 %1972, label %1973, label %1979

1973:                                             ; preds = %1962
  %1974 = add i64 %1959, 23
  %1975 = inttoptr i64 %1974 to i32*
  %1976 = load i32, i32* %1975, align 4
  %1977 = and i32 %1976, -2
  %1978 = icmp eq i32 %1977, 10
  br i1 %1978, label %1987, label %1979

1979:                                             ; preds = %1962, %1957, %1973
  %1980 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1949, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %1981 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %1982 = load i32, i32* %1981, align 8
  %1983 = icmp eq i32 %1982, 0
  br i1 %1983, label %1984, label %2949

1984:                                             ; preds = %1979
  %1985 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 56
  store double %1980, double* %1985, align 8
  %1986 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 21
  store i8 1, i8* %1986, align 4
  br label %1987

1987:                                             ; preds = %1984, %1973
  %1988 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 30, i32 0
  %1989 = bitcast %"class.v8::Name"** %1988 to %"class.v8::Value"**
  %1990 = load %"class.v8::Value"*, %"class.v8::Value"** %1989, align 8
  %1991 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %1990) #8
  %1992 = icmp eq %"class.v8::Value"* %1991, null
  br i1 %1992, label %1993, label %1999

1993:                                             ; preds = %1987
  %1994 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %1995 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %1996 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %1995, align 8
  %1997 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1996, i64 5
  %1998 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %1997, align 8
  call void %1998(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %1994) #8
  br label %2949

1999:                                             ; preds = %1987
  %2000 = bitcast %"class.v8::Value"* %1991 to i64*
  %2001 = load i64, i64* %2000, align 8
  %2002 = and i64 %2001, 3
  %2003 = icmp eq i64 %2002, 1
  br i1 %2003, label %2004, label %2021

2004:                                             ; preds = %1999
  %2005 = add i64 %2001, -1
  %2006 = inttoptr i64 %2005 to i32*
  %2007 = load i32, i32* %2006, align 4
  %2008 = and i64 %2001, -4294967296
  %2009 = zext i32 %2007 to i64
  %2010 = or i64 %2008, %2009
  %2011 = add i64 %2010, 7
  %2012 = inttoptr i64 %2011 to i16*
  %2013 = load i16, i16* %2012, align 2
  %2014 = icmp eq i16 %2013, 67
  br i1 %2014, label %2015, label %2021

2015:                                             ; preds = %2004
  %2016 = add i64 %2001, 23
  %2017 = inttoptr i64 %2016 to i32*
  %2018 = load i32, i32* %2017, align 4
  %2019 = and i32 %2018, -2
  %2020 = icmp eq i32 %2019, 10
  br i1 %2020, label %2029, label %2021

2021:                                             ; preds = %2004, %1999, %2015
  %2022 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %1991, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %2023 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2024 = load i32, i32* %2023, align 8
  %2025 = icmp eq i32 %2024, 0
  br i1 %2025, label %2026, label %2949

2026:                                             ; preds = %2021
  %2027 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 57
  store double %2022, double* %2027, align 8
  %2028 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 22
  store i8 1, i8* %2028, align 1
  br label %2029

2029:                                             ; preds = %2026, %2015
  %2030 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 31, i32 0
  %2031 = bitcast %"class.v8::Name"** %2030 to %"class.v8::Value"**
  %2032 = load %"class.v8::Value"*, %"class.v8::Value"** %2031, align 8
  %2033 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2032) #8
  %2034 = icmp eq %"class.v8::Value"* %2033, null
  br i1 %2034, label %2035, label %2041

2035:                                             ; preds = %2029
  %2036 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2037 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2038 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2037, align 8
  %2039 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2038, i64 5
  %2040 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2039, align 8
  call void %2040(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2036) #8
  br label %2949

2041:                                             ; preds = %2029
  %2042 = bitcast %"class.v8::Value"* %2033 to i64*
  %2043 = load i64, i64* %2042, align 8
  %2044 = and i64 %2043, 3
  %2045 = icmp eq i64 %2044, 1
  br i1 %2045, label %2046, label %2063

2046:                                             ; preds = %2041
  %2047 = add i64 %2043, -1
  %2048 = inttoptr i64 %2047 to i32*
  %2049 = load i32, i32* %2048, align 4
  %2050 = and i64 %2043, -4294967296
  %2051 = zext i32 %2049 to i64
  %2052 = or i64 %2050, %2051
  %2053 = add i64 %2052, 7
  %2054 = inttoptr i64 %2053 to i16*
  %2055 = load i16, i16* %2054, align 2
  %2056 = icmp eq i16 %2055, 67
  br i1 %2056, label %2057, label %2063

2057:                                             ; preds = %2046
  %2058 = add i64 %2043, 23
  %2059 = inttoptr i64 %2058 to i32*
  %2060 = load i32, i32* %2059, align 4
  %2061 = and i32 %2060, -2
  %2062 = icmp eq i32 %2061, 10
  br i1 %2062, label %2071, label %2063

2063:                                             ; preds = %2046, %2041, %2057
  %2064 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2033, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %2065 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2066 = load i32, i32* %2065, align 8
  %2067 = icmp eq i32 %2066, 0
  br i1 %2067, label %2068, label %2949

2068:                                             ; preds = %2063
  %2069 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 58
  store double %2064, double* %2069, align 8
  %2070 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 23
  store i8 1, i8* %2070, align 2
  br label %2071

2071:                                             ; preds = %2068, %2057
  %2072 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 32, i32 0
  %2073 = bitcast %"class.v8::Name"** %2072 to %"class.v8::Value"**
  %2074 = load %"class.v8::Value"*, %"class.v8::Value"** %2073, align 8
  %2075 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2074) #8
  %2076 = icmp eq %"class.v8::Value"* %2075, null
  br i1 %2076, label %2077, label %2083

2077:                                             ; preds = %2071
  %2078 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2079 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2080 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2079, align 8
  %2081 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2080, i64 5
  %2082 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2081, align 8
  call void %2082(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2078) #8
  br label %2949

2083:                                             ; preds = %2071
  %2084 = bitcast %"class.v8::Value"* %2075 to i64*
  %2085 = load i64, i64* %2084, align 8
  %2086 = and i64 %2085, 3
  %2087 = icmp eq i64 %2086, 1
  br i1 %2087, label %2088, label %2105

2088:                                             ; preds = %2083
  %2089 = add i64 %2085, -1
  %2090 = inttoptr i64 %2089 to i32*
  %2091 = load i32, i32* %2090, align 4
  %2092 = and i64 %2085, -4294967296
  %2093 = zext i32 %2091 to i64
  %2094 = or i64 %2092, %2093
  %2095 = add i64 %2094, 7
  %2096 = inttoptr i64 %2095 to i16*
  %2097 = load i16, i16* %2096, align 2
  %2098 = icmp eq i16 %2097, 67
  br i1 %2098, label %2099, label %2105

2099:                                             ; preds = %2088
  %2100 = add i64 %2085, 23
  %2101 = inttoptr i64 %2100 to i32*
  %2102 = load i32, i32* %2101, align 4
  %2103 = and i32 %2102, -2
  %2104 = icmp eq i32 %2103, 10
  br i1 %2104, label %2121, label %2105

2105:                                             ; preds = %2088, %2083, %2099
  %2106 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %2075) #8
  br i1 %2106, label %2107, label %2110, !prof !2

2107:                                             ; preds = %2105
  %2108 = bitcast %"class.v8::Value"* %2075 to %"class.v8::Boolean"*
  %2109 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %2108) #8
  br label %2112

2110:                                             ; preds = %2105
  %2111 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %2075, %"class.v8::Isolate"* %0) #8
  br label %2112

2112:                                             ; preds = %2107, %2110
  %2113 = phi i1 [ %2109, %2107 ], [ %2111, %2110 ]
  %2114 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2115 = load i32, i32* %2114, align 8
  %2116 = icmp eq i32 %2115, 0
  br i1 %2116, label %2117, label %2949

2117:                                             ; preds = %2112
  %2118 = zext i1 %2113 to i8
  %2119 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 59
  store i8 %2118, i8* %2119, align 8
  %2120 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 24
  store i8 1, i8* %2120, align 1
  br label %2121

2121:                                             ; preds = %2117, %2099
  %2122 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 34, i32 0
  %2123 = bitcast %"class.v8::Name"** %2122 to %"class.v8::Value"**
  %2124 = load %"class.v8::Value"*, %"class.v8::Value"** %2123, align 8
  %2125 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2124) #8
  %2126 = icmp eq %"class.v8::Value"* %2125, null
  br i1 %2126, label %2127, label %2133

2127:                                             ; preds = %2121
  %2128 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2129 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2130 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2129, align 8
  %2131 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2130, i64 5
  %2132 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2131, align 8
  call void %2132(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2128) #8
  br label %2949

2133:                                             ; preds = %2121
  %2134 = bitcast %"class.v8::Value"* %2125 to i64*
  %2135 = load i64, i64* %2134, align 8
  %2136 = and i64 %2135, 3
  %2137 = icmp eq i64 %2136, 1
  br i1 %2137, label %2138, label %2155

2138:                                             ; preds = %2133
  %2139 = add i64 %2135, -1
  %2140 = inttoptr i64 %2139 to i32*
  %2141 = load i32, i32* %2140, align 4
  %2142 = and i64 %2135, -4294967296
  %2143 = zext i32 %2141 to i64
  %2144 = or i64 %2142, %2143
  %2145 = add i64 %2144, 7
  %2146 = inttoptr i64 %2145 to i16*
  %2147 = load i16, i16* %2146, align 2
  %2148 = icmp eq i16 %2147, 67
  br i1 %2148, label %2149, label %2155

2149:                                             ; preds = %2138
  %2150 = add i64 %2135, 23
  %2151 = inttoptr i64 %2150 to i32*
  %2152 = load i32, i32* %2151, align 4
  %2153 = and i32 %2152, -2
  %2154 = icmp eq i32 %2153, 10
  br i1 %2154, label %2295, label %2155

2155:                                             ; preds = %2138, %2133, %2149
  %2156 = bitcast %"class.blink::V8StringResource"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2156) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2156, i8 -86, i64 152, i1 false)
  %2157 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2125, %"class.v8::Value"** %2157, align 8
  %2158 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 1
  store i32 0, i32* %2158, align 8
  %2159 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2159, align 8
  %2160 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1
  %2161 = bitcast %"class.std::__1::unique_ptr.67"* %2160 to i64*
  store i64 0, i64* %2161, align 8
  %2162 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %13, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2162, label %2163, label %2273

2163:                                             ; preds = %2155
  %2164 = load %"class.v8::Value"*, %"class.v8::Value"** %2157, align 8
  %2165 = icmp eq %"class.v8::Value"* %2164, null
  br i1 %2165, label %2166, label %2190, !prof !3

2166:                                             ; preds = %2163
  %2167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2159, align 8
  %2168 = icmp eq %"class.WTF::StringImpl"* %2167, null
  br i1 %2168, label %2169, label %2171

2169:                                             ; preds = %2166
  %2170 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 61
  br label %2215

2171:                                             ; preds = %2166
  %2172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2173 = load atomic i32, i32* %2172 monotonic, align 4
  %2174 = and i32 %2173, 2
  %2175 = icmp eq i32 %2174, 0
  br i1 %2175, label %2176, label %2188

2176:                                             ; preds = %2171
  %2177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2167, i64 0, i32 0
  %2178 = load i32, i32* %2177, align 4
  %2179 = zext i32 %2178 to i33
  %2180 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2179, i33 1) #8
  %2181 = extractvalue { i33, i1 } %2180, 1
  %2182 = extractvalue { i33, i1 } %2180, 0
  %2183 = icmp slt i33 %2182, 0
  %2184 = or i1 %2181, %2183
  br i1 %2184, label %2185, label %2186, !prof !3

2185:                                             ; preds = %2176
  call void @llvm.trap() #8
  unreachable

2186:                                             ; preds = %2176
  %2187 = trunc i33 %2182 to i32
  store i32 %2187, i32* %2177, align 4
  br label %2188

2188:                                             ; preds = %2171, %2186
  %2189 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 61
  br label %2196

2190:                                             ; preds = %2163
  %2191 = bitcast %"class.v8::Value"* %2164 to %"class.v8::String"*
  %2192 = load i32, i32* %2158, align 8
  %2193 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2191, i32 %2192) #8
  %2194 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 61
  %2195 = icmp eq %"class.WTF::StringImpl"* %2193, null
  br i1 %2195, label %2215, label %2196

2196:                                             ; preds = %2188, %2190
  %2197 = phi %"class.WTF::String"* [ %2189, %2188 ], [ %2194, %2190 ]
  %2198 = phi %"class.WTF::StringImpl"* [ %2167, %2188 ], [ %2193, %2190 ]
  %2199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2200 = load atomic i32, i32* %2199 monotonic, align 4
  %2201 = and i32 %2200, 2
  %2202 = icmp eq i32 %2201, 0
  br i1 %2202, label %2203, label %2215

2203:                                             ; preds = %2196
  %2204 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2198, i64 0, i32 0
  %2205 = load i32, i32* %2204, align 4
  %2206 = zext i32 %2205 to i33
  %2207 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2206, i33 1) #8
  %2208 = extractvalue { i33, i1 } %2207, 1
  %2209 = extractvalue { i33, i1 } %2207, 0
  %2210 = icmp slt i33 %2209, 0
  %2211 = or i1 %2208, %2210
  br i1 %2211, label %2212, label %2213, !prof !3

2212:                                             ; preds = %2203
  call void @llvm.trap() #8
  unreachable

2213:                                             ; preds = %2203
  %2214 = trunc i33 %2209 to i32
  store i32 %2214, i32* %2204, align 4
  br label %2215

2215:                                             ; preds = %2169, %2213, %2196, %2190
  %2216 = phi i1 [ false, %2213 ], [ false, %2196 ], [ true, %2190 ], [ true, %2169 ]
  %2217 = phi %"class.WTF::String"* [ %2197, %2213 ], [ %2197, %2196 ], [ %2194, %2190 ], [ %2170, %2169 ]
  %2218 = phi %"class.WTF::StringImpl"* [ %2198, %2213 ], [ %2198, %2196 ], [ null, %2190 ], [ null, %2169 ]
  %2219 = ptrtoint %"class.WTF::StringImpl"* %2218 to i64
  %2220 = bitcast %"class.WTF::String"* %2217 to i64*
  %2221 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2217, i64 0, i32 0, i32 0
  %2222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2221, align 8
  store i64 %2219, i64* %2220, align 8
  %2223 = icmp eq %"class.WTF::StringImpl"* %2222, null
  br i1 %2223, label %2237, label %2224

2224:                                             ; preds = %2215
  %2225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2226 = load atomic i32, i32* %2225 monotonic, align 4
  %2227 = and i32 %2226, 2
  %2228 = icmp eq i32 %2227, 0
  %2229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2222, i64 0, i32 0
  %2230 = load i32, i32* %2229, align 4
  br i1 %2228, label %2231, label %2233

2231:                                             ; preds = %2224
  %2232 = add i32 %2230, -1
  store i32 %2232, i32* %2229, align 4
  br label %2233

2233:                                             ; preds = %2231, %2224
  %2234 = phi i32 [ %2232, %2231 ], [ %2230, %2224 ]
  %2235 = icmp eq i32 %2234, 0
  br i1 %2235, label %2236, label %2237

2236:                                             ; preds = %2233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2222) #8
  br label %2237

2237:                                             ; preds = %2215, %2233, %2236
  br i1 %2216, label %2251, label %2238

2238:                                             ; preds = %2237
  %2239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2240 = load atomic i32, i32* %2239 monotonic, align 4
  %2241 = and i32 %2240, 2
  %2242 = icmp eq i32 %2241, 0
  %2243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2218, i64 0, i32 0
  %2244 = load i32, i32* %2243, align 4
  br i1 %2242, label %2245, label %2247

2245:                                             ; preds = %2238
  %2246 = add i32 %2244, -1
  store i32 %2246, i32* %2243, align 4
  br label %2247

2247:                                             ; preds = %2245, %2238
  %2248 = phi i32 [ %2246, %2245 ], [ %2244, %2238 ]
  %2249 = icmp eq i32 %2248, 0
  br i1 %2249, label %2250, label %2251

2250:                                             ; preds = %2247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2218) #8
  br label %2251

2251:                                             ; preds = %2237, %2247, %2250
  %2252 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2253 = load i8*, i8** %2252, align 8
  store i8* null, i8** %2252, align 8
  %2254 = icmp eq i8* %2253, null
  br i1 %2254, label %2256, label %2255

2255:                                             ; preds = %2251
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2253) #8
  br label %2256

2256:                                             ; preds = %2255, %2251
  %2257 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2159, align 8
  %2258 = icmp eq %"class.WTF::StringImpl"* %2257, null
  br i1 %2258, label %2272, label %2259

2259:                                             ; preds = %2256
  %2260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2261 = load atomic i32, i32* %2260 monotonic, align 4
  %2262 = and i32 %2261, 2
  %2263 = icmp eq i32 %2262, 0
  %2264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2257, i64 0, i32 0
  %2265 = load i32, i32* %2264, align 4
  br i1 %2263, label %2266, label %2268

2266:                                             ; preds = %2259
  %2267 = add i32 %2265, -1
  store i32 %2267, i32* %2264, align 4
  br label %2268

2268:                                             ; preds = %2266, %2259
  %2269 = phi i32 [ %2267, %2266 ], [ %2265, %2259 ]
  %2270 = icmp eq i32 %2269, 0
  br i1 %2270, label %2271, label %2272

2271:                                             ; preds = %2268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2257) #8
  br label %2272

2272:                                             ; preds = %2256, %2268, %2271
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2156) #8
  br label %2295

2273:                                             ; preds = %2155
  %2274 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %13, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2275 = load i8*, i8** %2274, align 8
  store i8* null, i8** %2274, align 8
  %2276 = icmp eq i8* %2275, null
  br i1 %2276, label %2278, label %2277

2277:                                             ; preds = %2273
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2275) #8
  br label %2278

2278:                                             ; preds = %2277, %2273
  %2279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2159, align 8
  %2280 = icmp eq %"class.WTF::StringImpl"* %2279, null
  br i1 %2280, label %2294, label %2281

2281:                                             ; preds = %2278
  %2282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2283 = load atomic i32, i32* %2282 monotonic, align 4
  %2284 = and i32 %2283, 2
  %2285 = icmp eq i32 %2284, 0
  %2286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2279, i64 0, i32 0
  %2287 = load i32, i32* %2286, align 4
  br i1 %2285, label %2288, label %2290

2288:                                             ; preds = %2281
  %2289 = add i32 %2287, -1
  store i32 %2289, i32* %2286, align 4
  br label %2290

2290:                                             ; preds = %2288, %2281
  %2291 = phi i32 [ %2289, %2288 ], [ %2287, %2281 ]
  %2292 = icmp eq i32 %2291, 0
  br i1 %2292, label %2293, label %2294

2293:                                             ; preds = %2290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2279) #8
  br label %2294

2294:                                             ; preds = %2278, %2290, %2293
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2156) #8
  br label %2949

2295:                                             ; preds = %2272, %2149
  %2296 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 35, i32 0
  %2297 = bitcast %"class.v8::Name"** %2296 to %"class.v8::Value"**
  %2298 = load %"class.v8::Value"*, %"class.v8::Value"** %2297, align 8
  %2299 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2298) #8
  %2300 = icmp eq %"class.v8::Value"* %2299, null
  br i1 %2300, label %2301, label %2307

2301:                                             ; preds = %2295
  %2302 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2303 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2304 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2303, align 8
  %2305 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2304, i64 5
  %2306 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2305, align 8
  call void %2306(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2302) #8
  br label %2949

2307:                                             ; preds = %2295
  %2308 = bitcast %"class.v8::Value"* %2299 to i64*
  %2309 = load i64, i64* %2308, align 8
  %2310 = and i64 %2309, 3
  %2311 = icmp eq i64 %2310, 1
  br i1 %2311, label %2312, label %2329

2312:                                             ; preds = %2307
  %2313 = add i64 %2309, -1
  %2314 = inttoptr i64 %2313 to i32*
  %2315 = load i32, i32* %2314, align 4
  %2316 = and i64 %2309, -4294967296
  %2317 = zext i32 %2315 to i64
  %2318 = or i64 %2316, %2317
  %2319 = add i64 %2318, 7
  %2320 = inttoptr i64 %2319 to i16*
  %2321 = load i16, i16* %2320, align 2
  %2322 = icmp eq i16 %2321, 67
  br i1 %2322, label %2323, label %2329

2323:                                             ; preds = %2312
  %2324 = add i64 %2309, 23
  %2325 = inttoptr i64 %2324 to i32*
  %2326 = load i32, i32* %2325, align 4
  %2327 = and i32 %2326, -2
  %2328 = icmp eq i32 %2327, 10
  br i1 %2328, label %2344, label %2329

2329:                                             ; preds = %2312, %2307, %2323
  %2330 = call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %2299) #8
  br i1 %2330, label %2331, label %2334, !prof !2

2331:                                             ; preds = %2329
  %2332 = bitcast %"class.v8::Value"* %2299 to %"class.v8::Int32"*
  %2333 = call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* nonnull %2332) #8
  br label %2336

2334:                                             ; preds = %2329
  %2335 = call i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2299, i32 0, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  br label %2336

2336:                                             ; preds = %2331, %2334
  %2337 = phi i32 [ %2333, %2331 ], [ %2335, %2334 ]
  %2338 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2339 = load i32, i32* %2338, align 8
  %2340 = icmp eq i32 %2339, 0
  br i1 %2340, label %2341, label %2949

2341:                                             ; preds = %2336
  %2342 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 62
  store i32 %2337, i32* %2342, align 8
  %2343 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 25
  store i8 1, i8* %2343, align 8
  br label %2344

2344:                                             ; preds = %2341, %2323
  %2345 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 36, i32 0
  %2346 = bitcast %"class.v8::Name"** %2345 to %"class.v8::Value"**
  %2347 = load %"class.v8::Value"*, %"class.v8::Value"** %2346, align 8
  %2348 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2347) #8
  %2349 = icmp eq %"class.v8::Value"* %2348, null
  br i1 %2349, label %2350, label %2356

2350:                                             ; preds = %2344
  %2351 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2352 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2353 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2352, align 8
  %2354 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2353, i64 5
  %2355 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2354, align 8
  call void %2355(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2351) #8
  br label %2949

2356:                                             ; preds = %2344
  %2357 = bitcast %"class.v8::Value"* %2348 to i64*
  %2358 = load i64, i64* %2357, align 8
  %2359 = and i64 %2358, 3
  %2360 = icmp eq i64 %2359, 1
  br i1 %2360, label %2361, label %2378

2361:                                             ; preds = %2356
  %2362 = add i64 %2358, -1
  %2363 = inttoptr i64 %2362 to i32*
  %2364 = load i32, i32* %2363, align 4
  %2365 = and i64 %2358, -4294967296
  %2366 = zext i32 %2364 to i64
  %2367 = or i64 %2365, %2366
  %2368 = add i64 %2367, 7
  %2369 = inttoptr i64 %2368 to i16*
  %2370 = load i16, i16* %2369, align 2
  %2371 = icmp eq i16 %2370, 67
  br i1 %2371, label %2372, label %2378

2372:                                             ; preds = %2361
  %2373 = add i64 %2358, 23
  %2374 = inttoptr i64 %2373 to i32*
  %2375 = load i32, i32* %2374, align 4
  %2376 = and i32 %2375, -2
  %2377 = icmp eq i32 %2376, 10
  br i1 %2377, label %2386, label %2378

2378:                                             ; preds = %2361, %2356, %2372
  %2379 = call double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2348, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %2380 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2381 = load i32, i32* %2380, align 8
  %2382 = icmp eq i32 %2381, 0
  br i1 %2382, label %2383, label %2949

2383:                                             ; preds = %2378
  %2384 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 63
  store double %2379, double* %2384, align 8
  %2385 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 26
  store i8 1, i8* %2385, align 1
  br label %2386

2386:                                             ; preds = %2383, %2372
  %2387 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_get_display_media_enabled_E, align 1, !range !4
  %2388 = icmp eq i8 %2387, 0
  br i1 %2388, label %2747, label %2389

2389:                                             ; preds = %2386
  %2390 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 7, i32 0
  %2391 = bitcast %"class.v8::Name"** %2390 to %"class.v8::Value"**
  %2392 = load %"class.v8::Value"*, %"class.v8::Value"** %2391, align 8
  %2393 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2392) #8
  %2394 = icmp eq %"class.v8::Value"* %2393, null
  br i1 %2394, label %2395, label %2401

2395:                                             ; preds = %2389
  %2396 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2397 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2398 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2397, align 8
  %2399 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2398, i64 5
  %2400 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2399, align 8
  call void %2400(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2396) #8
  br label %2949

2401:                                             ; preds = %2389
  %2402 = bitcast %"class.v8::Value"* %2393 to i64*
  %2403 = load i64, i64* %2402, align 8
  %2404 = and i64 %2403, 3
  %2405 = icmp eq i64 %2404, 1
  br i1 %2405, label %2406, label %2423

2406:                                             ; preds = %2401
  %2407 = add i64 %2403, -1
  %2408 = inttoptr i64 %2407 to i32*
  %2409 = load i32, i32* %2408, align 4
  %2410 = and i64 %2403, -4294967296
  %2411 = zext i32 %2409 to i64
  %2412 = or i64 %2410, %2411
  %2413 = add i64 %2412, 7
  %2414 = inttoptr i64 %2413 to i16*
  %2415 = load i16, i16* %2414, align 2
  %2416 = icmp eq i16 %2415, 67
  br i1 %2416, label %2417, label %2423

2417:                                             ; preds = %2406
  %2418 = add i64 %2403, 23
  %2419 = inttoptr i64 %2418 to i32*
  %2420 = load i32, i32* %2419, align 4
  %2421 = and i32 %2420, -2
  %2422 = icmp eq i32 %2421, 10
  br i1 %2422, label %2543, label %2423

2423:                                             ; preds = %2406, %2401, %2417
  %2424 = bitcast %"class.blink::V8StringResource"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2424) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2424, i8 -86, i64 152, i1 false)
  %2425 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2393, %"class.v8::Value"** %2425, align 8
  %2426 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 1
  store i32 0, i32* %2426, align 8
  %2427 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2427, align 8
  %2428 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1
  %2429 = bitcast %"class.std::__1::unique_ptr.67"* %2428 to i64*
  store i64 0, i64* %2429, align 8
  %2430 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2430, label %2431, label %2519

2431:                                             ; preds = %2423
  %2432 = load %"class.v8::Value"*, %"class.v8::Value"** %2425, align 8
  %2433 = icmp eq %"class.v8::Value"* %2432, null
  br i1 %2433, label %2434, label %2458, !prof !3

2434:                                             ; preds = %2431
  %2435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2427, align 8
  %2436 = icmp eq %"class.WTF::StringImpl"* %2435, null
  br i1 %2436, label %2437, label %2439

2437:                                             ; preds = %2434
  %2438 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 34
  br label %2483

2439:                                             ; preds = %2434
  %2440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2441 = load atomic i32, i32* %2440 monotonic, align 4
  %2442 = and i32 %2441, 2
  %2443 = icmp eq i32 %2442, 0
  br i1 %2443, label %2444, label %2456

2444:                                             ; preds = %2439
  %2445 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2435, i64 0, i32 0
  %2446 = load i32, i32* %2445, align 4
  %2447 = zext i32 %2446 to i33
  %2448 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2447, i33 1) #8
  %2449 = extractvalue { i33, i1 } %2448, 1
  %2450 = extractvalue { i33, i1 } %2448, 0
  %2451 = icmp slt i33 %2450, 0
  %2452 = or i1 %2449, %2451
  br i1 %2452, label %2453, label %2454, !prof !3

2453:                                             ; preds = %2444
  call void @llvm.trap() #8
  unreachable

2454:                                             ; preds = %2444
  %2455 = trunc i33 %2450 to i32
  store i32 %2455, i32* %2445, align 4
  br label %2456

2456:                                             ; preds = %2439, %2454
  %2457 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 34
  br label %2464

2458:                                             ; preds = %2431
  %2459 = bitcast %"class.v8::Value"* %2432 to %"class.v8::String"*
  %2460 = load i32, i32* %2426, align 8
  %2461 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2459, i32 %2460) #8
  %2462 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 34
  %2463 = icmp eq %"class.WTF::StringImpl"* %2461, null
  br i1 %2463, label %2483, label %2464

2464:                                             ; preds = %2456, %2458
  %2465 = phi %"class.WTF::String"* [ %2457, %2456 ], [ %2462, %2458 ]
  %2466 = phi %"class.WTF::StringImpl"* [ %2435, %2456 ], [ %2461, %2458 ]
  %2467 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2466, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2468 = load atomic i32, i32* %2467 monotonic, align 4
  %2469 = and i32 %2468, 2
  %2470 = icmp eq i32 %2469, 0
  br i1 %2470, label %2471, label %2483

2471:                                             ; preds = %2464
  %2472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2466, i64 0, i32 0
  %2473 = load i32, i32* %2472, align 4
  %2474 = zext i32 %2473 to i33
  %2475 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2474, i33 1) #8
  %2476 = extractvalue { i33, i1 } %2475, 1
  %2477 = extractvalue { i33, i1 } %2475, 0
  %2478 = icmp slt i33 %2477, 0
  %2479 = or i1 %2476, %2478
  br i1 %2479, label %2480, label %2481, !prof !3

2480:                                             ; preds = %2471
  call void @llvm.trap() #8
  unreachable

2481:                                             ; preds = %2471
  %2482 = trunc i33 %2477 to i32
  store i32 %2482, i32* %2472, align 4
  br label %2483

2483:                                             ; preds = %2437, %2481, %2464, %2458
  %2484 = phi i1 [ false, %2481 ], [ false, %2464 ], [ true, %2458 ], [ true, %2437 ]
  %2485 = phi %"class.WTF::String"* [ %2465, %2481 ], [ %2465, %2464 ], [ %2462, %2458 ], [ %2438, %2437 ]
  %2486 = phi %"class.WTF::StringImpl"* [ %2466, %2481 ], [ %2466, %2464 ], [ null, %2458 ], [ null, %2437 ]
  %2487 = ptrtoint %"class.WTF::StringImpl"* %2486 to i64
  %2488 = bitcast %"class.WTF::String"* %2485 to i64*
  %2489 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2485, i64 0, i32 0, i32 0
  %2490 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2489, align 8
  store i64 %2487, i64* %2488, align 8
  %2491 = icmp eq %"class.WTF::StringImpl"* %2490, null
  br i1 %2491, label %2505, label %2492

2492:                                             ; preds = %2483
  %2493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2490, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2494 = load atomic i32, i32* %2493 monotonic, align 4
  %2495 = and i32 %2494, 2
  %2496 = icmp eq i32 %2495, 0
  %2497 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2490, i64 0, i32 0
  %2498 = load i32, i32* %2497, align 4
  br i1 %2496, label %2499, label %2501

2499:                                             ; preds = %2492
  %2500 = add i32 %2498, -1
  store i32 %2500, i32* %2497, align 4
  br label %2501

2501:                                             ; preds = %2499, %2492
  %2502 = phi i32 [ %2500, %2499 ], [ %2498, %2492 ]
  %2503 = icmp eq i32 %2502, 0
  br i1 %2503, label %2504, label %2505

2504:                                             ; preds = %2501
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2490) #8
  br label %2505

2505:                                             ; preds = %2483, %2501, %2504
  br i1 %2484, label %2519, label %2506

2506:                                             ; preds = %2505
  %2507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2486, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2508 = load atomic i32, i32* %2507 monotonic, align 4
  %2509 = and i32 %2508, 2
  %2510 = icmp eq i32 %2509, 0
  %2511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2486, i64 0, i32 0
  %2512 = load i32, i32* %2511, align 4
  br i1 %2510, label %2513, label %2515

2513:                                             ; preds = %2506
  %2514 = add i32 %2512, -1
  store i32 %2514, i32* %2511, align 4
  br label %2515

2515:                                             ; preds = %2513, %2506
  %2516 = phi i32 [ %2514, %2513 ], [ %2512, %2506 ]
  %2517 = icmp eq i32 %2516, 0
  br i1 %2517, label %2518, label %2519

2518:                                             ; preds = %2515
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2486) #8
  br label %2519

2519:                                             ; preds = %2518, %2515, %2505, %2423
  %2520 = phi i32 [ 1, %2423 ], [ 0, %2505 ], [ 0, %2515 ], [ 0, %2518 ]
  %2521 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %14, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2522 = load i8*, i8** %2521, align 8
  store i8* null, i8** %2521, align 8
  %2523 = icmp eq i8* %2522, null
  br i1 %2523, label %2525, label %2524

2524:                                             ; preds = %2519
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2522) #8
  br label %2525

2525:                                             ; preds = %2524, %2519
  %2526 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2427, align 8
  %2527 = icmp eq %"class.WTF::StringImpl"* %2526, null
  br i1 %2527, label %2541, label %2528

2528:                                             ; preds = %2525
  %2529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2526, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2530 = load atomic i32, i32* %2529 monotonic, align 4
  %2531 = and i32 %2530, 2
  %2532 = icmp eq i32 %2531, 0
  %2533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2526, i64 0, i32 0
  %2534 = load i32, i32* %2533, align 4
  br i1 %2532, label %2535, label %2537

2535:                                             ; preds = %2528
  %2536 = add i32 %2534, -1
  store i32 %2536, i32* %2533, align 4
  br label %2537

2537:                                             ; preds = %2535, %2528
  %2538 = phi i32 [ %2536, %2535 ], [ %2534, %2528 ]
  %2539 = icmp eq i32 %2538, 0
  br i1 %2539, label %2540, label %2541

2540:                                             ; preds = %2537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2526) #8
  br label %2541

2541:                                             ; preds = %2525, %2537, %2540
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2424) #8
  %2542 = icmp eq i32 %2520, 0
  br i1 %2542, label %2543, label %2949

2543:                                             ; preds = %2541, %2417
  %2544 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 9, i32 0
  %2545 = bitcast %"class.v8::Name"** %2544 to %"class.v8::Value"**
  %2546 = load %"class.v8::Value"*, %"class.v8::Value"** %2545, align 8
  %2547 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2546) #8
  %2548 = icmp eq %"class.v8::Value"* %2547, null
  br i1 %2548, label %2549, label %2555

2549:                                             ; preds = %2543
  %2550 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2551 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2552 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2551, align 8
  %2553 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2552, i64 5
  %2554 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2553, align 8
  call void %2554(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2550) #8
  br label %2949

2555:                                             ; preds = %2543
  %2556 = bitcast %"class.v8::Value"* %2547 to i64*
  %2557 = load i64, i64* %2556, align 8
  %2558 = and i64 %2557, 3
  %2559 = icmp eq i64 %2558, 1
  br i1 %2559, label %2560, label %2577

2560:                                             ; preds = %2555
  %2561 = add i64 %2557, -1
  %2562 = inttoptr i64 %2561 to i32*
  %2563 = load i32, i32* %2562, align 4
  %2564 = and i64 %2557, -4294967296
  %2565 = zext i32 %2563 to i64
  %2566 = or i64 %2564, %2565
  %2567 = add i64 %2566, 7
  %2568 = inttoptr i64 %2567 to i16*
  %2569 = load i16, i16* %2568, align 2
  %2570 = icmp eq i16 %2569, 67
  br i1 %2570, label %2571, label %2577

2571:                                             ; preds = %2560
  %2572 = add i64 %2557, 23
  %2573 = inttoptr i64 %2572 to i32*
  %2574 = load i32, i32* %2573, align 4
  %2575 = and i32 %2574, -2
  %2576 = icmp eq i32 %2575, 10
  br i1 %2576, label %2697, label %2577

2577:                                             ; preds = %2560, %2555, %2571
  %2578 = bitcast %"class.blink::V8StringResource"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2578) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2578, i8 -86, i64 152, i1 false)
  %2579 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2547, %"class.v8::Value"** %2579, align 8
  %2580 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 1
  store i32 0, i32* %2580, align 8
  %2581 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2581, align 8
  %2582 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1
  %2583 = bitcast %"class.std::__1::unique_ptr.67"* %2582 to i64*
  store i64 0, i64* %2583, align 8
  %2584 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %15, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2584, label %2585, label %2673

2585:                                             ; preds = %2577
  %2586 = load %"class.v8::Value"*, %"class.v8::Value"** %2579, align 8
  %2587 = icmp eq %"class.v8::Value"* %2586, null
  br i1 %2587, label %2588, label %2612, !prof !3

2588:                                             ; preds = %2585
  %2589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2581, align 8
  %2590 = icmp eq %"class.WTF::StringImpl"* %2589, null
  br i1 %2590, label %2591, label %2593

2591:                                             ; preds = %2588
  %2592 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 36
  br label %2637

2593:                                             ; preds = %2588
  %2594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2595 = load atomic i32, i32* %2594 monotonic, align 4
  %2596 = and i32 %2595, 2
  %2597 = icmp eq i32 %2596, 0
  br i1 %2597, label %2598, label %2610

2598:                                             ; preds = %2593
  %2599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2589, i64 0, i32 0
  %2600 = load i32, i32* %2599, align 4
  %2601 = zext i32 %2600 to i33
  %2602 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2601, i33 1) #8
  %2603 = extractvalue { i33, i1 } %2602, 1
  %2604 = extractvalue { i33, i1 } %2602, 0
  %2605 = icmp slt i33 %2604, 0
  %2606 = or i1 %2603, %2605
  br i1 %2606, label %2607, label %2608, !prof !3

2607:                                             ; preds = %2598
  call void @llvm.trap() #8
  unreachable

2608:                                             ; preds = %2598
  %2609 = trunc i33 %2604 to i32
  store i32 %2609, i32* %2599, align 4
  br label %2610

2610:                                             ; preds = %2593, %2608
  %2611 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 36
  br label %2618

2612:                                             ; preds = %2585
  %2613 = bitcast %"class.v8::Value"* %2586 to %"class.v8::String"*
  %2614 = load i32, i32* %2580, align 8
  %2615 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2613, i32 %2614) #8
  %2616 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 36
  %2617 = icmp eq %"class.WTF::StringImpl"* %2615, null
  br i1 %2617, label %2637, label %2618

2618:                                             ; preds = %2610, %2612
  %2619 = phi %"class.WTF::String"* [ %2611, %2610 ], [ %2616, %2612 ]
  %2620 = phi %"class.WTF::StringImpl"* [ %2589, %2610 ], [ %2615, %2612 ]
  %2621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2620, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2622 = load atomic i32, i32* %2621 monotonic, align 4
  %2623 = and i32 %2622, 2
  %2624 = icmp eq i32 %2623, 0
  br i1 %2624, label %2625, label %2637

2625:                                             ; preds = %2618
  %2626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2620, i64 0, i32 0
  %2627 = load i32, i32* %2626, align 4
  %2628 = zext i32 %2627 to i33
  %2629 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2628, i33 1) #8
  %2630 = extractvalue { i33, i1 } %2629, 1
  %2631 = extractvalue { i33, i1 } %2629, 0
  %2632 = icmp slt i33 %2631, 0
  %2633 = or i1 %2630, %2632
  br i1 %2633, label %2634, label %2635, !prof !3

2634:                                             ; preds = %2625
  call void @llvm.trap() #8
  unreachable

2635:                                             ; preds = %2625
  %2636 = trunc i33 %2631 to i32
  store i32 %2636, i32* %2626, align 4
  br label %2637

2637:                                             ; preds = %2591, %2635, %2618, %2612
  %2638 = phi i1 [ false, %2635 ], [ false, %2618 ], [ true, %2612 ], [ true, %2591 ]
  %2639 = phi %"class.WTF::String"* [ %2619, %2635 ], [ %2619, %2618 ], [ %2616, %2612 ], [ %2592, %2591 ]
  %2640 = phi %"class.WTF::StringImpl"* [ %2620, %2635 ], [ %2620, %2618 ], [ null, %2612 ], [ null, %2591 ]
  %2641 = ptrtoint %"class.WTF::StringImpl"* %2640 to i64
  %2642 = bitcast %"class.WTF::String"* %2639 to i64*
  %2643 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2639, i64 0, i32 0, i32 0
  %2644 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2643, align 8
  store i64 %2641, i64* %2642, align 8
  %2645 = icmp eq %"class.WTF::StringImpl"* %2644, null
  br i1 %2645, label %2659, label %2646

2646:                                             ; preds = %2637
  %2647 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2644, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2648 = load atomic i32, i32* %2647 monotonic, align 4
  %2649 = and i32 %2648, 2
  %2650 = icmp eq i32 %2649, 0
  %2651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2644, i64 0, i32 0
  %2652 = load i32, i32* %2651, align 4
  br i1 %2650, label %2653, label %2655

2653:                                             ; preds = %2646
  %2654 = add i32 %2652, -1
  store i32 %2654, i32* %2651, align 4
  br label %2655

2655:                                             ; preds = %2653, %2646
  %2656 = phi i32 [ %2654, %2653 ], [ %2652, %2646 ]
  %2657 = icmp eq i32 %2656, 0
  br i1 %2657, label %2658, label %2659

2658:                                             ; preds = %2655
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2644) #8
  br label %2659

2659:                                             ; preds = %2637, %2655, %2658
  br i1 %2638, label %2673, label %2660

2660:                                             ; preds = %2659
  %2661 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2640, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2662 = load atomic i32, i32* %2661 monotonic, align 4
  %2663 = and i32 %2662, 2
  %2664 = icmp eq i32 %2663, 0
  %2665 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2640, i64 0, i32 0
  %2666 = load i32, i32* %2665, align 4
  br i1 %2664, label %2667, label %2669

2667:                                             ; preds = %2660
  %2668 = add i32 %2666, -1
  store i32 %2668, i32* %2665, align 4
  br label %2669

2669:                                             ; preds = %2667, %2660
  %2670 = phi i32 [ %2668, %2667 ], [ %2666, %2660 ]
  %2671 = icmp eq i32 %2670, 0
  br i1 %2671, label %2672, label %2673

2672:                                             ; preds = %2669
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2640) #8
  br label %2673

2673:                                             ; preds = %2672, %2669, %2659, %2577
  %2674 = phi i32 [ 1, %2577 ], [ 0, %2659 ], [ 0, %2669 ], [ 0, %2672 ]
  %2675 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %15, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2676 = load i8*, i8** %2675, align 8
  store i8* null, i8** %2675, align 8
  %2677 = icmp eq i8* %2676, null
  br i1 %2677, label %2679, label %2678

2678:                                             ; preds = %2673
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2676) #8
  br label %2679

2679:                                             ; preds = %2678, %2673
  %2680 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2581, align 8
  %2681 = icmp eq %"class.WTF::StringImpl"* %2680, null
  br i1 %2681, label %2695, label %2682

2682:                                             ; preds = %2679
  %2683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2684 = load atomic i32, i32* %2683 monotonic, align 4
  %2685 = and i32 %2684, 2
  %2686 = icmp eq i32 %2685, 0
  %2687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2680, i64 0, i32 0
  %2688 = load i32, i32* %2687, align 4
  br i1 %2686, label %2689, label %2691

2689:                                             ; preds = %2682
  %2690 = add i32 %2688, -1
  store i32 %2690, i32* %2687, align 4
  br label %2691

2691:                                             ; preds = %2689, %2682
  %2692 = phi i32 [ %2690, %2689 ], [ %2688, %2682 ]
  %2693 = icmp eq i32 %2692, 0
  br i1 %2693, label %2694, label %2695

2694:                                             ; preds = %2691
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2680) #8
  br label %2695

2695:                                             ; preds = %2679, %2691, %2694
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2578) #8
  %2696 = icmp eq i32 %2674, 0
  br i1 %2696, label %2697, label %2949

2697:                                             ; preds = %2695, %2571
  %2698 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 22, i32 0
  %2699 = bitcast %"class.v8::Name"** %2698 to %"class.v8::Value"**
  %2700 = load %"class.v8::Value"*, %"class.v8::Value"** %2699, align 8
  %2701 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2700) #8
  %2702 = icmp eq %"class.v8::Value"* %2701, null
  br i1 %2702, label %2703, label %2709

2703:                                             ; preds = %2697
  %2704 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2705 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2706 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2705, align 8
  %2707 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2706, i64 5
  %2708 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2707, align 8
  call void %2708(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2704) #8
  br label %2949

2709:                                             ; preds = %2697
  %2710 = bitcast %"class.v8::Value"* %2701 to i64*
  %2711 = load i64, i64* %2710, align 8
  %2712 = and i64 %2711, 3
  %2713 = icmp eq i64 %2712, 1
  br i1 %2713, label %2714, label %2731

2714:                                             ; preds = %2709
  %2715 = add i64 %2711, -1
  %2716 = inttoptr i64 %2715 to i32*
  %2717 = load i32, i32* %2716, align 4
  %2718 = and i64 %2711, -4294967296
  %2719 = zext i32 %2717 to i64
  %2720 = or i64 %2718, %2719
  %2721 = add i64 %2720, 7
  %2722 = inttoptr i64 %2721 to i16*
  %2723 = load i16, i16* %2722, align 2
  %2724 = icmp eq i16 %2723, 67
  br i1 %2724, label %2725, label %2731

2725:                                             ; preds = %2714
  %2726 = add i64 %2711, 23
  %2727 = inttoptr i64 %2726 to i32*
  %2728 = load i32, i32* %2727, align 4
  %2729 = and i32 %2728, -2
  %2730 = icmp eq i32 %2729, 10
  br i1 %2730, label %2747, label %2731

2731:                                             ; preds = %2714, %2709, %2725
  %2732 = call zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"* nonnull %2701) #8
  br i1 %2732, label %2733, label %2736, !prof !2

2733:                                             ; preds = %2731
  %2734 = bitcast %"class.v8::Value"* %2701 to %"class.v8::Boolean"*
  %2735 = call zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"* nonnull %2734) #8
  br label %2738

2736:                                             ; preds = %2731
  %2737 = call zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"* nonnull %2701, %"class.v8::Isolate"* %0) #8
  br label %2738

2738:                                             ; preds = %2733, %2736
  %2739 = phi i1 [ %2735, %2733 ], [ %2737, %2736 ]
  %2740 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2741 = load i32, i32* %2740, align 8
  %2742 = icmp eq i32 %2741, 0
  br i1 %2742, label %2743, label %2949

2743:                                             ; preds = %2738
  %2744 = zext i1 %2739 to i8
  %2745 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 49
  store i8 %2744, i8* %2745, align 8
  %2746 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 15
  store i8 1, i8* %2746, align 2
  br label %2747

2747:                                             ; preds = %2386, %2743, %2725
  %2748 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase42is_media_capture_depth_video_kind_enabled_E, align 1, !range !4
  %2749 = icmp eq i8 %2748, 0
  br i1 %2749, label %2904, label %2750

2750:                                             ; preds = %2747
  %2751 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 33, i32 0
  %2752 = bitcast %"class.v8::Name"** %2751 to %"class.v8::Value"**
  %2753 = load %"class.v8::Value"*, %"class.v8::Value"** %2752, align 8
  %2754 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2753) #8
  %2755 = icmp eq %"class.v8::Value"* %2754, null
  br i1 %2755, label %2756, label %2762

2756:                                             ; preds = %2750
  %2757 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2758 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2759 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2758, align 8
  %2760 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2759, i64 5
  %2761 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2760, align 8
  call void %2761(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2757) #8
  br label %2949

2762:                                             ; preds = %2750
  %2763 = bitcast %"class.v8::Value"* %2754 to i64*
  %2764 = load i64, i64* %2763, align 8
  %2765 = and i64 %2764, 3
  %2766 = icmp eq i64 %2765, 1
  br i1 %2766, label %2767, label %2784

2767:                                             ; preds = %2762
  %2768 = add i64 %2764, -1
  %2769 = inttoptr i64 %2768 to i32*
  %2770 = load i32, i32* %2769, align 4
  %2771 = and i64 %2764, -4294967296
  %2772 = zext i32 %2770 to i64
  %2773 = or i64 %2771, %2772
  %2774 = add i64 %2773, 7
  %2775 = inttoptr i64 %2774 to i16*
  %2776 = load i16, i16* %2775, align 2
  %2777 = icmp eq i16 %2776, 67
  br i1 %2777, label %2778, label %2784

2778:                                             ; preds = %2767
  %2779 = add i64 %2764, 23
  %2780 = inttoptr i64 %2779 to i32*
  %2781 = load i32, i32* %2780, align 4
  %2782 = and i32 %2781, -2
  %2783 = icmp eq i32 %2782, 10
  br i1 %2783, label %2904, label %2784

2784:                                             ; preds = %2767, %2762, %2778
  %2785 = bitcast %"class.blink::V8StringResource"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %2785) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2785, i8 -86, i64 152, i1 false)
  %2786 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %2754, %"class.v8::Value"** %2786, align 8
  %2787 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 1
  store i32 0, i32* %2787, align 8
  %2788 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %2788, align 8
  %2789 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1
  %2790 = bitcast %"class.std::__1::unique_ptr.67"* %2789 to i64*
  store i64 0, i64* %2790, align 8
  %2791 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %16, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %2791, label %2792, label %2880

2792:                                             ; preds = %2784
  %2793 = load %"class.v8::Value"*, %"class.v8::Value"** %2786, align 8
  %2794 = icmp eq %"class.v8::Value"* %2793, null
  br i1 %2794, label %2795, label %2819, !prof !3

2795:                                             ; preds = %2792
  %2796 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2788, align 8
  %2797 = icmp eq %"class.WTF::StringImpl"* %2796, null
  br i1 %2797, label %2798, label %2800

2798:                                             ; preds = %2795
  %2799 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 60
  br label %2844

2800:                                             ; preds = %2795
  %2801 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2796, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2802 = load atomic i32, i32* %2801 monotonic, align 4
  %2803 = and i32 %2802, 2
  %2804 = icmp eq i32 %2803, 0
  br i1 %2804, label %2805, label %2817

2805:                                             ; preds = %2800
  %2806 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2796, i64 0, i32 0
  %2807 = load i32, i32* %2806, align 4
  %2808 = zext i32 %2807 to i33
  %2809 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2808, i33 1) #8
  %2810 = extractvalue { i33, i1 } %2809, 1
  %2811 = extractvalue { i33, i1 } %2809, 0
  %2812 = icmp slt i33 %2811, 0
  %2813 = or i1 %2810, %2812
  br i1 %2813, label %2814, label %2815, !prof !3

2814:                                             ; preds = %2805
  call void @llvm.trap() #8
  unreachable

2815:                                             ; preds = %2805
  %2816 = trunc i33 %2811 to i32
  store i32 %2816, i32* %2806, align 4
  br label %2817

2817:                                             ; preds = %2800, %2815
  %2818 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 60
  br label %2825

2819:                                             ; preds = %2792
  %2820 = bitcast %"class.v8::Value"* %2793 to %"class.v8::String"*
  %2821 = load i32, i32* %2787, align 8
  %2822 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %2820, i32 %2821) #8
  %2823 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %2, i64 0, i32 60
  %2824 = icmp eq %"class.WTF::StringImpl"* %2822, null
  br i1 %2824, label %2844, label %2825

2825:                                             ; preds = %2817, %2819
  %2826 = phi %"class.WTF::String"* [ %2818, %2817 ], [ %2823, %2819 ]
  %2827 = phi %"class.WTF::StringImpl"* [ %2796, %2817 ], [ %2822, %2819 ]
  %2828 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2827, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2829 = load atomic i32, i32* %2828 monotonic, align 4
  %2830 = and i32 %2829, 2
  %2831 = icmp eq i32 %2830, 0
  br i1 %2831, label %2832, label %2844

2832:                                             ; preds = %2825
  %2833 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2827, i64 0, i32 0
  %2834 = load i32, i32* %2833, align 4
  %2835 = zext i32 %2834 to i33
  %2836 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %2835, i33 1) #8
  %2837 = extractvalue { i33, i1 } %2836, 1
  %2838 = extractvalue { i33, i1 } %2836, 0
  %2839 = icmp slt i33 %2838, 0
  %2840 = or i1 %2837, %2839
  br i1 %2840, label %2841, label %2842, !prof !3

2841:                                             ; preds = %2832
  call void @llvm.trap() #8
  unreachable

2842:                                             ; preds = %2832
  %2843 = trunc i33 %2838 to i32
  store i32 %2843, i32* %2833, align 4
  br label %2844

2844:                                             ; preds = %2798, %2842, %2825, %2819
  %2845 = phi i1 [ false, %2842 ], [ false, %2825 ], [ true, %2819 ], [ true, %2798 ]
  %2846 = phi %"class.WTF::String"* [ %2826, %2842 ], [ %2826, %2825 ], [ %2823, %2819 ], [ %2799, %2798 ]
  %2847 = phi %"class.WTF::StringImpl"* [ %2827, %2842 ], [ %2827, %2825 ], [ null, %2819 ], [ null, %2798 ]
  %2848 = ptrtoint %"class.WTF::StringImpl"* %2847 to i64
  %2849 = bitcast %"class.WTF::String"* %2846 to i64*
  %2850 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2846, i64 0, i32 0, i32 0
  %2851 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2850, align 8
  store i64 %2848, i64* %2849, align 8
  %2852 = icmp eq %"class.WTF::StringImpl"* %2851, null
  br i1 %2852, label %2866, label %2853

2853:                                             ; preds = %2844
  %2854 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2851, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2855 = load atomic i32, i32* %2854 monotonic, align 4
  %2856 = and i32 %2855, 2
  %2857 = icmp eq i32 %2856, 0
  %2858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2851, i64 0, i32 0
  %2859 = load i32, i32* %2858, align 4
  br i1 %2857, label %2860, label %2862

2860:                                             ; preds = %2853
  %2861 = add i32 %2859, -1
  store i32 %2861, i32* %2858, align 4
  br label %2862

2862:                                             ; preds = %2860, %2853
  %2863 = phi i32 [ %2861, %2860 ], [ %2859, %2853 ]
  %2864 = icmp eq i32 %2863, 0
  br i1 %2864, label %2865, label %2866

2865:                                             ; preds = %2862
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2851) #8
  br label %2866

2866:                                             ; preds = %2844, %2862, %2865
  br i1 %2845, label %2880, label %2867

2867:                                             ; preds = %2866
  %2868 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2847, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2869 = load atomic i32, i32* %2868 monotonic, align 4
  %2870 = and i32 %2869, 2
  %2871 = icmp eq i32 %2870, 0
  %2872 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2847, i64 0, i32 0
  %2873 = load i32, i32* %2872, align 4
  br i1 %2871, label %2874, label %2876

2874:                                             ; preds = %2867
  %2875 = add i32 %2873, -1
  store i32 %2875, i32* %2872, align 4
  br label %2876

2876:                                             ; preds = %2874, %2867
  %2877 = phi i32 [ %2875, %2874 ], [ %2873, %2867 ]
  %2878 = icmp eq i32 %2877, 0
  br i1 %2878, label %2879, label %2880

2879:                                             ; preds = %2876
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2847) #8
  br label %2880

2880:                                             ; preds = %2879, %2876, %2866, %2784
  %2881 = phi i32 [ 1, %2784 ], [ 0, %2866 ], [ 0, %2876 ], [ 0, %2879 ]
  %2882 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %16, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %2883 = load i8*, i8** %2882, align 8
  store i8* null, i8** %2882, align 8
  %2884 = icmp eq i8* %2883, null
  br i1 %2884, label %2886, label %2885

2885:                                             ; preds = %2880
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %2883) #8
  br label %2886

2886:                                             ; preds = %2885, %2880
  %2887 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2788, align 8
  %2888 = icmp eq %"class.WTF::StringImpl"* %2887, null
  br i1 %2888, label %2902, label %2889

2889:                                             ; preds = %2886
  %2890 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2887, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2891 = load atomic i32, i32* %2890 monotonic, align 4
  %2892 = and i32 %2891, 2
  %2893 = icmp eq i32 %2892, 0
  %2894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2887, i64 0, i32 0
  %2895 = load i32, i32* %2894, align 4
  br i1 %2893, label %2896, label %2898

2896:                                             ; preds = %2889
  %2897 = add i32 %2895, -1
  store i32 %2897, i32* %2894, align 4
  br label %2898

2898:                                             ; preds = %2896, %2889
  %2899 = phi i32 [ %2897, %2896 ], [ %2895, %2889 ]
  %2900 = icmp eq i32 %2899, 0
  br i1 %2900, label %2901, label %2902

2901:                                             ; preds = %2898
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2887) #8
  br label %2902

2902:                                             ; preds = %2886, %2898, %2901
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %2785) #8
  %2903 = icmp eq i32 %2881, 0
  br i1 %2903, label %2904, label %2949

2904:                                             ; preds = %2747, %2902, %2778
  %2905 = icmp eq %"class.blink::ExecutionContext"* %52, null
  %2906 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %52, i64 0, i32 4
  %2907 = select i1 %2905, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %2906
  %2908 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20CaptureHandleEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %2907) #8
  br i1 %2908, label %2909, label %2949

2909:                                             ; preds = %2904
  %2910 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %49, i64 3, i32 0
  %2911 = bitcast %"class.v8::Name"** %2910 to %"class.v8::Value"**
  %2912 = load %"class.v8::Value"*, %"class.v8::Value"** %2911, align 8
  %2913 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %43, %"class.v8::Context"* %51, %"class.v8::Value"* %2912) #8
  %2914 = icmp eq %"class.v8::Value"* %2913, null
  br i1 %2914, label %2915, label %2921

2915:                                             ; preds = %2909
  %2916 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #8
  %2917 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %2918 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %2917, align 8
  %2919 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2918, i64 5
  %2920 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %2919, align 8
  call void %2920(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %2916) #8
  br label %2949

2921:                                             ; preds = %2909
  %2922 = bitcast %"class.v8::Value"* %2913 to i64*
  %2923 = load i64, i64* %2922, align 8
  %2924 = and i64 %2923, 3
  %2925 = icmp eq i64 %2924, 1
  br i1 %2925, label %2926, label %2943

2926:                                             ; preds = %2921
  %2927 = add i64 %2923, -1
  %2928 = inttoptr i64 %2927 to i32*
  %2929 = load i32, i32* %2928, align 4
  %2930 = and i64 %2923, -4294967296
  %2931 = zext i32 %2929 to i64
  %2932 = or i64 %2930, %2931
  %2933 = add i64 %2932, 7
  %2934 = inttoptr i64 %2933 to i16*
  %2935 = load i16, i16* %2934, align 2
  %2936 = icmp eq i16 %2935, 67
  br i1 %2936, label %2937, label %2943

2937:                                             ; preds = %2926
  %2938 = add i64 %2923, 23
  %2939 = inttoptr i64 %2938 to i32*
  %2940 = load i32, i32* %2939, align 4
  %2941 = and i32 %2940, -2
  %2942 = icmp eq i32 %2941, 10
  br i1 %2942, label %2949, label %2943

2943:                                             ; preds = %2926, %2921, %2937
  %2944 = call %"class.blink::CaptureHandle"* @_ZN5blink17NativeValueTraitsINS_13CaptureHandleEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* nonnull %2913, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %2945 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %2946 = load i32, i32* %2945, align 8
  %2947 = icmp eq i32 %2946, 0
  br i1 %2947, label %2948, label %2949

2948:                                             ; preds = %2943
  call void @_ZN5blink18MediaTrackSettings16setCaptureHandleEPNS_13CaptureHandleE(%"class.blink::MediaTrackSettings"* %2, %"class.blink::CaptureHandle"* %2944) #8
  br label %2949

2949:                                             ; preds = %2738, %2943, %2378, %2336, %2112, %2063, %2021, %1979, %1937, %1888, %1623, %1580, %1531, %1489, %1447, %1224, %1008, %792, %576, %533, %310, %268, %226, %177, %134, %85, %2902, %2756, %2703, %2695, %2549, %2541, %2395, %99, %191, %282, %498, %590, %757, %806, %973, %1022, %1189, %1238, %1405, %1461, %1545, %1637, %1672, %1853, %1951, %2035, %2127, %2294, %2350, %2904, %2948, %2937, %2915, %2301, %2077, %1993, %1902, %1846, %1679, %1595, %1503, %1412, %1196, %980, %764, %548, %491, %324, %240, %149, %57
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %50) #8
  br label %2950

2950:                                             ; preds = %34, %34, %4, %2949, %41
  ret void
}

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #8
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #8
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #8
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #8
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #8
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #8
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #8
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #8
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17NativeValueTraitsINS_11IDLSequenceINS_7Point2DEEEvE11NativeValueEPN2v87IsolateENS5_5LocalINS5_5ValueEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptIterator", align 8
  %6 = tail call zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"* %2) #8
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = bitcast %"class.v8::Value"* %2 to %"class.v8::Array"*
  tail call void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.v8::Array"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %29

9:                                                ; preds = %4
  %10 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* %2) #8
  br i1 %10, label %13, label %11

11:                                               ; preds = %9
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.41, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %29

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::ScriptIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = bitcast %"class.v8::Value"* %2 to %"class.v8::Object"*
  call void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* nonnull sret %5, %"class.v8::Isolate"* %1, %"class.v8::Object"* %15, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  %16 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %21, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false)
  br label %28

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %5, i64 0, i32 1, i32 0
  %23 = load %"class.v8::Object"*, %"class.v8::Object"** %22, align 8
  %24 = icmp eq %"class.v8::Object"* %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.42, i64 0, i64 0)) #8
  %26 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false)
  br label %28

27:                                               ; preds = %21
  call void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* sret %0, %"class.v8::Isolate"* %1, %"class.blink::ScriptIterator"* nonnull byval(%"class.blink::ScriptIterator") align 8 %5, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br label %28

28:                                               ; preds = %27, %25, %19
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #8
  br label %29

29:                                               ; preds = %28, %11, %7
  ret void
}

declare void @_ZN5blink18MediaTrackSettings19setPointsOfInterestERKNS_10HeapVectorINS_6MemberINS_7Point2DEEELj0EEE(%"class.blink::MediaTrackSettings"*, %"class.blink::HeapVector"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20CaptureHandleEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare %"class.blink::CaptureHandle"* @_ZN5blink17NativeValueTraitsINS_13CaptureHandleEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink18MediaTrackSettings16setCaptureHandleEPNS_13CaptureHandleE(%"class.blink::MediaTrackSettings"*, %"class.blink::CaptureHandle"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink18MediaTrackSettings8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::MediaTrackSettings"*, %"class.v8::Object"*, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #8
  %5 = tail call zeroext i1 @_ZN5blink22toV8MediaTrackSettingsEPKNS_18MediaTrackSettingsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaTrackSettings"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* %1, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink22toV8MediaTrackSettingsEPKNS_18MediaTrackSettingsEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::MediaTrackSettings"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %16 = add i64 %15, 8
  %17 = inttoptr i64 %16 to %"class.blink::V8PerIsolateData"**
  %18 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %17, align 8
  %19 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %18, i8* bitcast ([37 x i8*]* @_ZZN5blinkL31eternalV8MediaTrackSettingsKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.401"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.401"*)) #8
  %20 = extractvalue { i64, %"class.v8::Eternal"* } %19, 1
  %21 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #8
  %22 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %21) #8
  %23 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 1
  %24 = load i8, i8* %23, align 8, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %38, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 27
  %28 = load double, double* %27, align 8
  %29 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %28) #8
  %30 = bitcast %"class.v8::Number"* %29 to %"class.v8::Value"*
  %31 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 0, i32 0
  %32 = load %"class.v8::Name"*, %"class.v8::Name"** %31, align 8
  %33 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %32, %"class.v8::Value"* %30) #8
  %34 = trunc i16 %33 to i8
  %35 = icmp ne i8 %34, 0
  %36 = icmp ugt i16 %33, 255
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %697

38:                                               ; preds = %4, %26
  %39 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 2
  %40 = load i8, i8* %39, align 1, !range !4
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %56, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 28
  %44 = load i8, i8* %43, align 8, !range !4
  %45 = icmp eq i8 %44, 0
  %46 = select i1 %45, i64 192, i64 184
  %47 = add i64 %46, %15
  %48 = inttoptr i64 %47 to %"class.v8::Value"*
  %49 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 1, i32 0
  %50 = load %"class.v8::Name"*, %"class.v8::Name"** %49, align 8
  %51 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %50, %"class.v8::Value"* %48) #8
  %52 = trunc i16 %51 to i8
  %53 = icmp ne i8 %52, 0
  %54 = icmp ugt i16 %51, 255
  %55 = and i1 %54, %53
  br i1 %55, label %56, label %697

56:                                               ; preds = %38, %42
  %57 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 3
  %58 = load i8, i8* %57, align 2, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %72, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 29
  %62 = load double, double* %61, align 8
  %63 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %62) #8
  %64 = bitcast %"class.v8::Number"* %63 to %"class.v8::Value"*
  %65 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 2, i32 0
  %66 = load %"class.v8::Name"*, %"class.v8::Name"** %65, align 8
  %67 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %66, %"class.v8::Value"* %64) #8
  %68 = trunc i16 %67 to i8
  %69 = icmp ne i8 %68, 0
  %70 = icmp ugt i16 %67, 255
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %697

72:                                               ; preds = %56, %60
  %73 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 4
  %74 = load i8, i8* %73, align 1, !range !4
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 31
  %78 = load i32, i32* %77, align 8
  %79 = tail call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %78) #8
  %80 = bitcast %"class.v8::Integer"* %79 to %"class.v8::Value"*
  %81 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 4, i32 0
  %82 = load %"class.v8::Name"*, %"class.v8::Name"** %81, align 8
  %83 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %82, %"class.v8::Value"* %80) #8
  %84 = trunc i16 %83 to i8
  %85 = icmp ne i8 %84, 0
  %86 = icmp ugt i16 %83, 255
  %87 = and i1 %86, %85
  br i1 %87, label %88, label %697

88:                                               ; preds = %72, %76
  %89 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 5
  %90 = load i8, i8* %89, align 4, !range !4
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %104, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 32
  %94 = load double, double* %93, align 8
  %95 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %94) #8
  %96 = bitcast %"class.v8::Number"* %95 to %"class.v8::Value"*
  %97 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 5, i32 0
  %98 = load %"class.v8::Name"*, %"class.v8::Name"** %97, align 8
  %99 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %98, %"class.v8::Value"* %96) #8
  %100 = trunc i16 %99 to i8
  %101 = icmp ne i8 %100, 0
  %102 = icmp ugt i16 %99, 255
  %103 = and i1 %102, %101
  br i1 %103, label %104, label %697

104:                                              ; preds = %88, %92
  %105 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 6
  %106 = load i8, i8* %105, align 1, !range !4
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %120, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 33
  %110 = load double, double* %109, align 8
  %111 = tail call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %110) #8
  %112 = bitcast %"class.v8::Number"* %111 to %"class.v8::Value"*
  %113 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 6, i32 0
  %114 = load %"class.v8::Name"*, %"class.v8::Name"** %113, align 8
  %115 = tail call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %114, %"class.v8::Value"* %112) #8
  %116 = trunc i16 %115 to i8
  %117 = icmp ne i8 %116, 0
  %118 = icmp ugt i16 %115, 255
  %119 = and i1 %118, %117
  br i1 %119, label %120, label %697

120:                                              ; preds = %104, %108
  %121 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 35, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %142, label %124

124:                                              ; preds = %120
  %125 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %125) #8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %122, %"class.WTF::StringImpl"** %126, align 8
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 1
  %128 = load i32, i32* %127, align 4
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 1
  %130 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %131 = bitcast i8** %130 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"** %131, align 8
  %132 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %128, i32* %132, align 8
  %133 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %125) #8
  %134 = bitcast %"class.v8::String"* %133 to %"class.v8::Value"*
  %135 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 8, i32 0
  %136 = load %"class.v8::Name"*, %"class.v8::Name"** %135, align 8
  %137 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %136, %"class.v8::Value"* %134) #8
  %138 = trunc i16 %137 to i8
  %139 = icmp ne i8 %138, 0
  %140 = icmp ugt i16 %137, 255
  %141 = and i1 %140, %139
  br i1 %141, label %142, label %697

142:                                              ; preds = %120, %124
  %143 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 7
  %144 = load i8, i8* %143, align 2, !range !4
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %160, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 37
  %148 = load i8, i8* %147, align 8, !range !4
  %149 = icmp eq i8 %148, 0
  %150 = select i1 %149, i64 192, i64 184
  %151 = add i64 %150, %15
  %152 = inttoptr i64 %151 to %"class.v8::Value"*
  %153 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 10, i32 0
  %154 = load %"class.v8::Name"*, %"class.v8::Name"** %153, align 8
  %155 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %154, %"class.v8::Value"* %152) #8
  %156 = trunc i16 %155 to i8
  %157 = icmp ne i8 %156, 0
  %158 = icmp ugt i16 %155, 255
  %159 = and i1 %158, %157
  br i1 %159, label %160, label %697

160:                                              ; preds = %142, %146
  %161 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 8
  %162 = load i8, i8* %161, align 1, !range !4
  %163 = icmp eq i8 %162, 0
  br i1 %163, label %176, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 38
  %166 = load double, double* %165, align 8
  %167 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %166) #8
  %168 = bitcast %"class.v8::Number"* %167 to %"class.v8::Value"*
  %169 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 11, i32 0
  %170 = load %"class.v8::Name"*, %"class.v8::Name"** %169, align 8
  %171 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %170, %"class.v8::Value"* %168) #8
  %172 = trunc i16 %171 to i8
  %173 = icmp ne i8 %172, 0
  %174 = icmp ugt i16 %171, 255
  %175 = and i1 %174, %173
  br i1 %175, label %176, label %697

176:                                              ; preds = %160, %164
  %177 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 39, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %198, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %181) #8
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %178, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  %188 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %184, i32* %188, align 8
  %189 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %181) #8
  %190 = bitcast %"class.v8::String"* %189 to %"class.v8::Value"*
  %191 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 12, i32 0
  %192 = load %"class.v8::Name"*, %"class.v8::Name"** %191, align 8
  %193 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %192, %"class.v8::Value"* %190) #8
  %194 = trunc i16 %193 to i8
  %195 = icmp ne i8 %194, 0
  %196 = icmp ugt i16 %193, 255
  %197 = and i1 %196, %195
  br i1 %197, label %198, label %697

198:                                              ; preds = %176, %180
  %199 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 9
  %200 = load i8, i8* %199, align 8, !range !4
  %201 = icmp eq i8 %200, 0
  br i1 %201, label %214, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 40
  %204 = load double, double* %203, align 8
  %205 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %204) #8
  %206 = bitcast %"class.v8::Number"* %205 to %"class.v8::Value"*
  %207 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 13, i32 0
  %208 = load %"class.v8::Name"*, %"class.v8::Name"** %207, align 8
  %209 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %208, %"class.v8::Value"* %206) #8
  %210 = trunc i16 %209 to i8
  %211 = icmp ne i8 %210, 0
  %212 = icmp ugt i16 %209, 255
  %213 = and i1 %212, %211
  br i1 %213, label %214, label %697

214:                                              ; preds = %198, %202
  %215 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 41, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %236, label %218

218:                                              ; preds = %214
  %219 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %219) #8
  %220 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %216, %"class.WTF::StringImpl"** %220, align 8
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 1
  %222 = load i32, i32* %221, align 4
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 1
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %225 = bitcast i8** %224 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %223, %"class.WTF::StringImpl"** %225, align 8
  %226 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %222, i32* %226, align 8
  %227 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %219) #8
  %228 = bitcast %"class.v8::String"* %227 to %"class.v8::Value"*
  %229 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 14, i32 0
  %230 = load %"class.v8::Name"*, %"class.v8::Name"** %229, align 8
  %231 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %230, %"class.v8::Value"* %228) #8
  %232 = trunc i16 %231 to i8
  %233 = icmp ne i8 %232, 0
  %234 = icmp ugt i16 %231, 255
  %235 = and i1 %234, %233
  br i1 %235, label %236, label %697

236:                                              ; preds = %214, %218
  %237 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 10
  %238 = load i8, i8* %237, align 1, !range !4
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %252, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 42
  %242 = load double, double* %241, align 8
  %243 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %242) #8
  %244 = bitcast %"class.v8::Number"* %243 to %"class.v8::Value"*
  %245 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 15, i32 0
  %246 = load %"class.v8::Name"*, %"class.v8::Name"** %245, align 8
  %247 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %246, %"class.v8::Value"* %244) #8
  %248 = trunc i16 %247 to i8
  %249 = icmp ne i8 %248, 0
  %250 = icmp ugt i16 %247, 255
  %251 = and i1 %250, %249
  br i1 %251, label %252, label %697

252:                                              ; preds = %236, %240
  %253 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 43, i32 0, i32 0
  %254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %253, align 8
  %255 = icmp eq %"class.WTF::StringImpl"* %254, null
  br i1 %255, label %274, label %256

256:                                              ; preds = %252
  %257 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #8
  %258 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %258, align 8
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 0, i32 1
  %260 = load i32, i32* %259, align 4
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %254, i64 1
  %262 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %263 = bitcast i8** %262 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %261, %"class.WTF::StringImpl"** %263, align 8
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %260, i32* %264, align 8
  %265 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #8
  %266 = bitcast %"class.v8::String"* %265 to %"class.v8::Value"*
  %267 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 16, i32 0
  %268 = load %"class.v8::Name"*, %"class.v8::Name"** %267, align 8
  %269 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %268, %"class.v8::Value"* %266) #8
  %270 = trunc i16 %269 to i8
  %271 = icmp ne i8 %270, 0
  %272 = icmp ugt i16 %269, 255
  %273 = and i1 %272, %271
  br i1 %273, label %274, label %697

274:                                              ; preds = %252, %256
  %275 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 11
  %276 = load i8, i8* %275, align 2, !range !4
  %277 = icmp eq i8 %276, 0
  br i1 %277, label %290, label %278

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 44
  %280 = load double, double* %279, align 8
  %281 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %280) #8
  %282 = bitcast %"class.v8::Number"* %281 to %"class.v8::Value"*
  %283 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 17, i32 0
  %284 = load %"class.v8::Name"*, %"class.v8::Name"** %283, align 8
  %285 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %284, %"class.v8::Value"* %282) #8
  %286 = trunc i16 %285 to i8
  %287 = icmp ne i8 %286, 0
  %288 = icmp ugt i16 %285, 255
  %289 = and i1 %288, %287
  br i1 %289, label %290, label %697

290:                                              ; preds = %274, %278
  %291 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 45, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %312, label %294

294:                                              ; preds = %290
  %295 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %295) #8
  %296 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %292, %"class.WTF::StringImpl"** %296, align 8
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 1
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 1
  %300 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %301 = bitcast i8** %300 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %299, %"class.WTF::StringImpl"** %301, align 8
  %302 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %298, i32* %302, align 8
  %303 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %295) #8
  %304 = bitcast %"class.v8::String"* %303 to %"class.v8::Value"*
  %305 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 18, i32 0
  %306 = load %"class.v8::Name"*, %"class.v8::Name"** %305, align 8
  %307 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %306, %"class.v8::Value"* %304) #8
  %308 = trunc i16 %307 to i8
  %309 = icmp ne i8 %308, 0
  %310 = icmp ugt i16 %307, 255
  %311 = and i1 %310, %309
  br i1 %311, label %312, label %697

312:                                              ; preds = %290, %294
  %313 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 12
  %314 = load i8, i8* %313, align 1, !range !4
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %328, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 46
  %318 = load i32, i32* %317, align 8
  %319 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %318) #8
  %320 = bitcast %"class.v8::Integer"* %319 to %"class.v8::Value"*
  %321 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 19, i32 0
  %322 = load %"class.v8::Name"*, %"class.v8::Name"** %321, align 8
  %323 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %322, %"class.v8::Value"* %320) #8
  %324 = trunc i16 %323 to i8
  %325 = icmp ne i8 %324, 0
  %326 = icmp ugt i16 %323, 255
  %327 = and i1 %326, %325
  br i1 %327, label %328, label %697

328:                                              ; preds = %312, %316
  %329 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 13
  %330 = load i8, i8* %329, align 4, !range !4
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %344, label %332

332:                                              ; preds = %328
  %333 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 47
  %334 = load double, double* %333, align 8
  %335 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %334) #8
  %336 = bitcast %"class.v8::Number"* %335 to %"class.v8::Value"*
  %337 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 20, i32 0
  %338 = load %"class.v8::Name"*, %"class.v8::Name"** %337, align 8
  %339 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %338, %"class.v8::Value"* %336) #8
  %340 = trunc i16 %339 to i8
  %341 = icmp ne i8 %340, 0
  %342 = icmp ugt i16 %339, 255
  %343 = and i1 %342, %341
  br i1 %343, label %344, label %697

344:                                              ; preds = %328, %332
  %345 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 14
  %346 = load i8, i8* %345, align 1, !range !4
  %347 = icmp eq i8 %346, 0
  br i1 %347, label %360, label %348

348:                                              ; preds = %344
  %349 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 48
  %350 = load double, double* %349, align 8
  %351 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %350) #8
  %352 = bitcast %"class.v8::Number"* %351 to %"class.v8::Value"*
  %353 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 21, i32 0
  %354 = load %"class.v8::Name"*, %"class.v8::Name"** %353, align 8
  %355 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %354, %"class.v8::Value"* %352) #8
  %356 = trunc i16 %355 to i8
  %357 = icmp ne i8 %356, 0
  %358 = icmp ugt i16 %355, 255
  %359 = and i1 %358, %357
  br i1 %359, label %360, label %697

360:                                              ; preds = %344, %348
  %361 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 16
  %362 = load i8, i8* %361, align 1, !range !4
  %363 = icmp eq i8 %362, 0
  br i1 %363, label %378, label %364

364:                                              ; preds = %360
  %365 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 50
  %366 = load i8, i8* %365, align 1, !range !4
  %367 = icmp eq i8 %366, 0
  %368 = select i1 %367, i64 192, i64 184
  %369 = add i64 %368, %15
  %370 = inttoptr i64 %369 to %"class.v8::Value"*
  %371 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 23, i32 0
  %372 = load %"class.v8::Name"*, %"class.v8::Name"** %371, align 8
  %373 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %372, %"class.v8::Value"* %370) #8
  %374 = trunc i16 %373 to i8
  %375 = icmp ne i8 %374, 0
  %376 = icmp ugt i16 %373, 255
  %377 = and i1 %376, %375
  br i1 %377, label %378, label %697

378:                                              ; preds = %360, %364
  %379 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 17
  %380 = load i8, i8* %379, align 8, !range !4
  %381 = icmp eq i8 %380, 0
  br i1 %381, label %394, label %382

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 51
  %384 = load double, double* %383, align 8
  %385 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %384) #8
  %386 = bitcast %"class.v8::Number"* %385 to %"class.v8::Value"*
  %387 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 24, i32 0
  %388 = load %"class.v8::Name"*, %"class.v8::Name"** %387, align 8
  %389 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %388, %"class.v8::Value"* %386) #8
  %390 = trunc i16 %389 to i8
  %391 = icmp ne i8 %390, 0
  %392 = icmp ugt i16 %389, 255
  %393 = and i1 %392, %391
  br i1 %393, label %394, label %697

394:                                              ; preds = %378, %382
  %395 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 18
  %396 = load i8, i8* %395, align 1, !range !4
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %409, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 52
  %400 = call %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_7Point2DEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16) %399, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %401 = bitcast %"class.v8::Array"* %400 to %"class.v8::Value"*
  %402 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 25, i32 0
  %403 = load %"class.v8::Name"*, %"class.v8::Name"** %402, align 8
  %404 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %403, %"class.v8::Value"* %401) #8
  %405 = trunc i16 %404 to i8
  %406 = icmp ne i8 %405, 0
  %407 = icmp ugt i16 %404, 255
  %408 = and i1 %407, %406
  br i1 %408, label %409, label %697

409:                                              ; preds = %394, %398
  %410 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 53, i32 0, i32 0
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %410, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %431, label %413

413:                                              ; preds = %409
  %414 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %414) #8
  %415 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %411, %"class.WTF::StringImpl"** %415, align 8
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 1
  %417 = load i32, i32* %416, align 4
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 1
  %419 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %420 = bitcast i8** %419 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %418, %"class.WTF::StringImpl"** %420, align 8
  %421 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %417, i32* %421, align 8
  %422 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %414) #8
  %423 = bitcast %"class.v8::String"* %422 to %"class.v8::Value"*
  %424 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 26, i32 0
  %425 = load %"class.v8::Name"*, %"class.v8::Name"** %424, align 8
  %426 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %425, %"class.v8::Value"* %423) #8
  %427 = trunc i16 %426 to i8
  %428 = icmp ne i8 %427, 0
  %429 = icmp ugt i16 %426, 255
  %430 = and i1 %429, %428
  br i1 %430, label %431, label %697

431:                                              ; preds = %409, %413
  %432 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 19
  %433 = load i8, i8* %432, align 2, !range !4
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %447, label %435

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 54
  %437 = load i32, i32* %436, align 8
  %438 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %437) #8
  %439 = bitcast %"class.v8::Integer"* %438 to %"class.v8::Value"*
  %440 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 27, i32 0
  %441 = load %"class.v8::Name"*, %"class.v8::Name"** %440, align 8
  %442 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %441, %"class.v8::Value"* %439) #8
  %443 = trunc i16 %442 to i8
  %444 = icmp ne i8 %443, 0
  %445 = icmp ugt i16 %442, 255
  %446 = and i1 %445, %444
  br i1 %446, label %447, label %697

447:                                              ; preds = %431, %435
  %448 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 20
  %449 = load i8, i8* %448, align 1, !range !4
  %450 = icmp eq i8 %449, 0
  br i1 %450, label %463, label %451

451:                                              ; preds = %447
  %452 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 55
  %453 = load i32, i32* %452, align 4
  %454 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %453) #8
  %455 = bitcast %"class.v8::Integer"* %454 to %"class.v8::Value"*
  %456 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 28, i32 0
  %457 = load %"class.v8::Name"*, %"class.v8::Name"** %456, align 8
  %458 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %457, %"class.v8::Value"* %455) #8
  %459 = trunc i16 %458 to i8
  %460 = icmp ne i8 %459, 0
  %461 = icmp ugt i16 %458, 255
  %462 = and i1 %461, %460
  br i1 %462, label %463, label %697

463:                                              ; preds = %447, %451
  %464 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 21
  %465 = load i8, i8* %464, align 4, !range !4
  %466 = icmp eq i8 %465, 0
  br i1 %466, label %479, label %467

467:                                              ; preds = %463
  %468 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 56
  %469 = load double, double* %468, align 8
  %470 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %469) #8
  %471 = bitcast %"class.v8::Number"* %470 to %"class.v8::Value"*
  %472 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 29, i32 0
  %473 = load %"class.v8::Name"*, %"class.v8::Name"** %472, align 8
  %474 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %473, %"class.v8::Value"* %471) #8
  %475 = trunc i16 %474 to i8
  %476 = icmp ne i8 %475, 0
  %477 = icmp ugt i16 %474, 255
  %478 = and i1 %477, %476
  br i1 %478, label %479, label %697

479:                                              ; preds = %463, %467
  %480 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 22
  %481 = load i8, i8* %480, align 1, !range !4
  %482 = icmp eq i8 %481, 0
  br i1 %482, label %495, label %483

483:                                              ; preds = %479
  %484 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 57
  %485 = load double, double* %484, align 8
  %486 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %485) #8
  %487 = bitcast %"class.v8::Number"* %486 to %"class.v8::Value"*
  %488 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 30, i32 0
  %489 = load %"class.v8::Name"*, %"class.v8::Name"** %488, align 8
  %490 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %489, %"class.v8::Value"* %487) #8
  %491 = trunc i16 %490 to i8
  %492 = icmp ne i8 %491, 0
  %493 = icmp ugt i16 %490, 255
  %494 = and i1 %493, %492
  br i1 %494, label %495, label %697

495:                                              ; preds = %479, %483
  %496 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 23
  %497 = load i8, i8* %496, align 2, !range !4
  %498 = icmp eq i8 %497, 0
  br i1 %498, label %511, label %499

499:                                              ; preds = %495
  %500 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 58
  %501 = load double, double* %500, align 8
  %502 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %501) #8
  %503 = bitcast %"class.v8::Number"* %502 to %"class.v8::Value"*
  %504 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 31, i32 0
  %505 = load %"class.v8::Name"*, %"class.v8::Name"** %504, align 8
  %506 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %505, %"class.v8::Value"* %503) #8
  %507 = trunc i16 %506 to i8
  %508 = icmp ne i8 %507, 0
  %509 = icmp ugt i16 %506, 255
  %510 = and i1 %509, %508
  br i1 %510, label %511, label %697

511:                                              ; preds = %495, %499
  %512 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 24
  %513 = load i8, i8* %512, align 1, !range !4
  %514 = icmp eq i8 %513, 0
  br i1 %514, label %529, label %515

515:                                              ; preds = %511
  %516 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 59
  %517 = load i8, i8* %516, align 8, !range !4
  %518 = icmp eq i8 %517, 0
  %519 = select i1 %518, i64 192, i64 184
  %520 = add i64 %519, %15
  %521 = inttoptr i64 %520 to %"class.v8::Value"*
  %522 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 32, i32 0
  %523 = load %"class.v8::Name"*, %"class.v8::Name"** %522, align 8
  %524 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %523, %"class.v8::Value"* %521) #8
  %525 = trunc i16 %524 to i8
  %526 = icmp ne i8 %525, 0
  %527 = icmp ugt i16 %524, 255
  %528 = and i1 %527, %526
  br i1 %528, label %529, label %697

529:                                              ; preds = %511, %515
  %530 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 61, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %532 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %532, label %551, label %533

533:                                              ; preds = %529
  %534 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %534) #8
  %535 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 0
  store %"class.WTF::StringImpl"* %531, %"class.WTF::StringImpl"** %535, align 8
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 1
  %537 = load i32, i32* %536, align 4
  %538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 1
  %539 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  %540 = bitcast i8** %539 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %538, %"class.WTF::StringImpl"** %540, align 8
  %541 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 %537, i32* %541, align 8
  %542 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %534) #8
  %543 = bitcast %"class.v8::String"* %542 to %"class.v8::Value"*
  %544 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 34, i32 0
  %545 = load %"class.v8::Name"*, %"class.v8::Name"** %544, align 8
  %546 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %545, %"class.v8::Value"* %543) #8
  %547 = trunc i16 %546 to i8
  %548 = icmp ne i8 %547, 0
  %549 = icmp ugt i16 %546, 255
  %550 = and i1 %549, %548
  br i1 %550, label %551, label %697

551:                                              ; preds = %529, %533
  %552 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 25
  %553 = load i8, i8* %552, align 8, !range !4
  %554 = icmp eq i8 %553, 0
  br i1 %554, label %567, label %555

555:                                              ; preds = %551
  %556 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 62
  %557 = load i32, i32* %556, align 8
  %558 = call %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %3, i32 %557) #8
  %559 = bitcast %"class.v8::Integer"* %558 to %"class.v8::Value"*
  %560 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 35, i32 0
  %561 = load %"class.v8::Name"*, %"class.v8::Name"** %560, align 8
  %562 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %561, %"class.v8::Value"* %559) #8
  %563 = trunc i16 %562 to i8
  %564 = icmp ne i8 %563, 0
  %565 = icmp ugt i16 %562, 255
  %566 = and i1 %565, %564
  br i1 %566, label %567, label %697

567:                                              ; preds = %551, %555
  %568 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 26
  %569 = load i8, i8* %568, align 1, !range !4
  %570 = icmp eq i8 %569, 0
  br i1 %570, label %583, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 63
  %573 = load double, double* %572, align 8
  %574 = call %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"* %3, double %573) #8
  %575 = bitcast %"class.v8::Number"* %574 to %"class.v8::Value"*
  %576 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 36, i32 0
  %577 = load %"class.v8::Name"*, %"class.v8::Name"** %576, align 8
  %578 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %577, %"class.v8::Value"* %575) #8
  %579 = trunc i16 %578 to i8
  %580 = icmp ne i8 %579, 0
  %581 = icmp ugt i16 %578, 255
  %582 = and i1 %581, %580
  br i1 %582, label %583, label %697

583:                                              ; preds = %567, %571
  %584 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase29is_get_display_media_enabled_E, align 1, !range !4
  %585 = icmp eq i8 %584, 0
  br i1 %585, label %648, label %586

586:                                              ; preds = %583
  %587 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 34, i32 0, i32 0
  %588 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %587, align 8
  %589 = icmp eq %"class.WTF::StringImpl"* %588, null
  br i1 %589, label %608, label %590

590:                                              ; preds = %586
  %591 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %591) #8
  %592 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %588, %"class.WTF::StringImpl"** %592, align 8
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 0, i32 1
  %594 = load i32, i32* %593, align 4
  %595 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %588, i64 1
  %596 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %597 = bitcast i8** %596 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %595, %"class.WTF::StringImpl"** %597, align 8
  %598 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %594, i32* %598, align 8
  %599 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %591) #8
  %600 = bitcast %"class.v8::String"* %599 to %"class.v8::Value"*
  %601 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 7, i32 0
  %602 = load %"class.v8::Name"*, %"class.v8::Name"** %601, align 8
  %603 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %602, %"class.v8::Value"* %600) #8
  %604 = trunc i16 %603 to i8
  %605 = icmp ne i8 %604, 0
  %606 = icmp ugt i16 %603, 255
  %607 = and i1 %606, %605
  br i1 %607, label %608, label %697

608:                                              ; preds = %586, %590
  %609 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 36, i32 0, i32 0
  %610 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %609, align 8
  %611 = icmp eq %"class.WTF::StringImpl"* %610, null
  br i1 %611, label %630, label %612

612:                                              ; preds = %608
  %613 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %613) #8
  %614 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 0
  store %"class.WTF::StringImpl"* %610, %"class.WTF::StringImpl"** %614, align 8
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %610, i64 0, i32 1
  %616 = load i32, i32* %615, align 4
  %617 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %610, i64 1
  %618 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  %619 = bitcast i8** %618 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %617, %"class.WTF::StringImpl"** %619, align 8
  %620 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 %616, i32* %620, align 8
  %621 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %613) #8
  %622 = bitcast %"class.v8::String"* %621 to %"class.v8::Value"*
  %623 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 9, i32 0
  %624 = load %"class.v8::Name"*, %"class.v8::Name"** %623, align 8
  %625 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %624, %"class.v8::Value"* %622) #8
  %626 = trunc i16 %625 to i8
  %627 = icmp ne i8 %626, 0
  %628 = icmp ugt i16 %625, 255
  %629 = and i1 %628, %627
  br i1 %629, label %630, label %697

630:                                              ; preds = %608, %612
  %631 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 15
  %632 = load i8, i8* %631, align 2, !range !4
  %633 = icmp eq i8 %632, 0
  br i1 %633, label %648, label %634

634:                                              ; preds = %630
  %635 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 49
  %636 = load i8, i8* %635, align 8, !range !4
  %637 = icmp eq i8 %636, 0
  %638 = select i1 %637, i64 192, i64 184
  %639 = add i64 %638, %15
  %640 = inttoptr i64 %639 to %"class.v8::Value"*
  %641 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 22, i32 0
  %642 = load %"class.v8::Name"*, %"class.v8::Name"** %641, align 8
  %643 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %642, %"class.v8::Value"* %640) #8
  %644 = trunc i16 %643 to i8
  %645 = icmp ne i8 %644, 0
  %646 = icmp ugt i16 %643, 255
  %647 = and i1 %646, %645
  br i1 %647, label %648, label %697

648:                                              ; preds = %630, %583, %634
  %649 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase42is_media_capture_depth_video_kind_enabled_E, align 1, !range !4
  %650 = icmp eq i8 %649, 0
  br i1 %650, label %673, label %651

651:                                              ; preds = %648
  %652 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 60, i32 0, i32 0
  %653 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %652, align 8
  %654 = icmp eq %"class.WTF::StringImpl"* %653, null
  br i1 %654, label %673, label %655

655:                                              ; preds = %651
  %656 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %656) #8
  %657 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %653, %"class.WTF::StringImpl"** %657, align 8
  %658 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %653, i64 0, i32 1
  %659 = load i32, i32* %658, align 4
  %660 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %653, i64 1
  %661 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %662 = bitcast i8** %661 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %660, %"class.WTF::StringImpl"** %662, align 8
  %663 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %659, i32* %663, align 8
  %664 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %656) #8
  %665 = bitcast %"class.v8::String"* %664 to %"class.v8::Value"*
  %666 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 33, i32 0
  %667 = load %"class.v8::Name"*, %"class.v8::Name"** %666, align 8
  %668 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %667, %"class.v8::Value"* %665) #8
  %669 = trunc i16 %668 to i8
  %670 = icmp ne i8 %669, 0
  %671 = icmp ugt i16 %668, 255
  %672 = and i1 %671, %670
  br i1 %672, label %673, label %697

673:                                              ; preds = %651, %648, %655
  %674 = icmp eq %"class.blink::ExecutionContext"* %22, null
  %675 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %22, i64 0, i32 4
  %676 = select i1 %674, %"class.blink::FeatureContext"* null, %"class.blink::FeatureContext"* %675
  %677 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase20CaptureHandleEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %676) #8
  br i1 %677, label %678, label %697

678:                                              ; preds = %673
  %679 = getelementptr inbounds %"class.blink::MediaTrackSettings", %"class.blink::MediaTrackSettings"* %0, i64 0, i32 30, i32 0, i32 0
  %680 = load %"class.blink::CaptureHandle"*, %"class.blink::CaptureHandle"** %679, align 8
  %681 = icmp eq %"class.blink::CaptureHandle"* %680, null
  br i1 %681, label %696, label %682

682:                                              ; preds = %678
  %683 = getelementptr inbounds %"class.blink::CaptureHandle", %"class.blink::CaptureHandle"* %680, i64 0, i32 0
  %684 = bitcast %"class.blink::CaptureHandle"* %680 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %685 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %684, align 8
  %686 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %685, i64 2
  %687 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %686, align 8
  %688 = call %"class.v8::Value"* %687(%"class.blink::IDLDictionaryBase"* nonnull %683, %"class.v8::Object"* %2, %"class.v8::Isolate"* %3) #8
  %689 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %20, i64 3, i32 0
  %690 = load %"class.v8::Name"*, %"class.v8::Name"** %689, align 8
  %691 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %21, %"class.v8::Name"* %690, %"class.v8::Value"* %688) #8
  %692 = trunc i16 %691 to i8
  %693 = icmp ne i8 %692, 0
  %694 = icmp ugt i16 %691, 255
  %695 = and i1 %694, %693
  br i1 %695, label %696, label %697

696:                                              ; preds = %678, %682
  br label %697

697:                                              ; preds = %634, %612, %590, %42, %76, %108, %146, %180, %218, %256, %294, %332, %364, %398, %435, %467, %499, %533, %571, %696, %673, %655, %682, %555, %515, %483, %451, %413, %382, %348, %316, %278, %240, %202, %164, %124, %92, %60, %26
  %698 = phi i1 [ false, %26 ], [ false, %42 ], [ false, %60 ], [ false, %76 ], [ false, %92 ], [ false, %108 ], [ false, %124 ], [ false, %146 ], [ false, %164 ], [ false, %180 ], [ false, %202 ], [ false, %218 ], [ false, %240 ], [ false, %256 ], [ false, %278 ], [ false, %294 ], [ false, %316 ], [ false, %332 ], [ false, %348 ], [ false, %364 ], [ false, %382 ], [ false, %398 ], [ false, %413 ], [ false, %435 ], [ false, %451 ], [ false, %467 ], [ false, %483 ], [ false, %499 ], [ false, %515 ], [ false, %533 ], [ false, %555 ], [ false, %571 ], [ true, %696 ], [ true, %673 ], [ false, %655 ], [ false, %682 ], [ false, %590 ], [ false, %612 ], [ false, %634 ]
  ret i1 %698
}

declare %"class.v8::Number"* @_ZN2v86Number3NewEPNS_7IsolateEd(%"class.v8::Isolate"*, double) local_unnamed_addr #1

declare %"class.v8::Integer"* @_ZN2v87Integer3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #8
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #8
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #8
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !3

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #8
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::MediaTrackSettings"* @_ZN5blink17NativeValueTraitsINS_18MediaTrackSettingsEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 328) #8
  %5 = bitcast i8* %4 to %"class.blink::MediaTrackSettings"*
  tail call void @_ZN5blink18MediaTrackSettingsC1Ev(%"class.blink::MediaTrackSettings"* %5) #8
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink20V8MediaTrackSettings6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_18MediaTrackSettingsERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::MediaTrackSettings"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::MediaTrackSettings"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.401"* dereferenceable(16)) local_unnamed_addr #1

declare double @_ZN5blink18ToRestrictedDoubleEPN2v87IsolateENS0_5LocalINS0_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value9IsBooleanEv(%"class.v8::Value"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v87Boolean5ValueEv(%"class.v8::Boolean"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value12BooleanValueEPNS_7IsolateE(%"class.v8::Value"*, %"class.v8::Isolate"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare void @_ZN5blink18MediaTrackSettingsC1Ev(%"class.blink::MediaTrackSettings"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17IDLDictionaryBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #8
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.38, i64 0, i64 0), i8* %21, i8* %22) #8
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.39, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #8
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #8
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #8
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare i32 @_ZN5blink11ToInt32SlowEPN2v87IsolateENS0_5LocalINS0_5ValueEEENS_30IntegerConversionConfigurationERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, i32, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !5

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !2

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #8
  br i1 %22, label %23, label %80, !prof !2

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #8
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #8
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #8
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #8
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsArrayEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings28CreateIDLSequenceFromV8ArrayINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS9_5LocalINS9_5ArrayEEERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.v8::Array"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.v8::TryCatch", align 8
  %7 = alloca %"class.blink::Point2D"*, align 8
  %8 = tail call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %9 = zext i32 %8 to i64
  %10 = icmp ugt i32 %8, 16777216
  br i1 %10, label %11, label %13

11:                                               ; preds = %4
  tail call void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.43, i64 0, i64 0)) #8
  %12 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false)
  br label %112

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 16, i1 false) #8
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  %19 = icmp eq i32 %8, 0
  br i1 %19, label %32, label %20

20:                                               ; preds = %13
  %21 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7Point2DEEEEEmm(i64 %9) #8
  %22 = lshr i64 %21, 3
  %23 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %22) #8
  %24 = ptrtoint %"class.blink::HeapVectorBacking"* %23 to i64
  %25 = bitcast %"class.blink::HeapVector"* %5 to i64*
  store atomic i64 %24, i64* %25 monotonic, align 8
  %26 = trunc i64 %22 to i32
  store i32 %26, i32* %16, align 8
  %27 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %23, i64 0, i32 0
  %31 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %30) #8
  br label %32

32:                                               ; preds = %13, %20, %29
  %33 = phi i32 [ 0, %13 ], [ %26, %20 ], [ %26, %29 ]
  %34 = phi i64 [ 0, %13 ], [ %24, %20 ], [ %24, %29 ]
  %35 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %36 = bitcast %"class.v8::TryCatch"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %36, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %6, %"class.v8::Isolate"* %1) #8
  %37 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %32
  %40 = bitcast %"class.blink::HeapVector"* %5 to i64*
  br label %90

41:                                               ; preds = %32
  %42 = bitcast %"class.v8::Array"* %2 to %"class.v8::Object"*
  %43 = bitcast %"class.blink::Point2D"** %7 to i8*
  %44 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  br label %45

45:                                               ; preds = %41, %81
  %46 = phi i32 [ 0, %41 ], [ %82, %81 ]
  %47 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"* %42, %"class.v8::Context"* %35, i32 %46) #8
  %48 = icmp eq %"class.v8::Value"* %47, null
  br i1 %48, label %49, label %56

49:                                               ; preds = %45
  %50 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %6) #8
  %51 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %52 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %52, i64 5
  %54 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %53, align 8
  call void %54(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %50) #8
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %111

56:                                               ; preds = %45
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #8
  %57 = call %"class.blink::Point2D"* @_ZN5blink17NativeValueTraitsINS_7Point2DEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* nonnull %47, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::Point2D"* %57, %"class.blink::Point2D"** %7, align 8
  %58 = load i32, i32* %44, align 8
  %59 = icmp eq i32 %58, 0
  %60 = ptrtoint %"class.blink::Point2D"* %57 to i64
  br i1 %59, label %61, label %79

61:                                               ; preds = %56
  %62 = load i32, i32* %17, align 4
  %63 = load i32, i32* %16, align 8
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %78, label %65, !prof !3

65:                                               ; preds = %61
  %66 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %15, align 8
  %67 = zext i32 %62 to i64
  %68 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %66, i64 %67
  %69 = bitcast %"class.blink::Member.3"* %68 to i64*
  store atomic i64 %60, i64* %69 monotonic, align 8
  %70 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = bitcast %"class.blink::Point2D"* %57 to i8*
  %74 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %73) #8
  br label %75

75:                                               ; preds = %72, %65
  %76 = load i32, i32* %17, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %17, align 4
  br label %81

78:                                               ; preds = %61
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::Point2D"** nonnull dereferenceable(8) %7) #8
  br label %81

79:                                               ; preds = %56
  %80 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  br label %111

81:                                               ; preds = %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #8
  %82 = add nuw i32 %46, 1
  %83 = call i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"* %2) #8
  %84 = icmp ult i32 %82, %83
  br i1 %84, label %45, label %85

85:                                               ; preds = %81
  %86 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load i32, i32* %16, align 8
  %89 = load i32, i32* %17, align 4
  br label %90

90:                                               ; preds = %39, %85
  %91 = phi i64* [ %40, %39 ], [ %86, %85 ]
  %92 = phi i32 [ 0, %39 ], [ %89, %85 ]
  %93 = phi i32 [ %33, %39 ], [ %88, %85 ]
  %94 = phi i64 [ %34, %39 ], [ %87, %85 ]
  %95 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %96 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %97 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %97, align 8
  %98 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store atomic i64 %94, i64* %98 monotonic, align 8
  store i32 %93, i32* %95, align 8
  store i32 0, i32* %16, align 8
  store i32 %92, i32* %96, align 4
  store i32 0, i32* %17, align 4
  %99 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %104, label %101

101:                                              ; preds = %90
  %102 = inttoptr i64 %94 to i8*
  %103 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %102) #8
  br label %104

104:                                              ; preds = %101, %90
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %111, label %107

107:                                              ; preds = %104
  %108 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %109) #8
  br label %111

111:                                              ; preds = %49, %79, %107, %104
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %36) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #8
  br label %112

112:                                              ; preds = %111, %11
  ret void
}

declare void @_ZN5blink14ScriptIterator12FromIterableEPN2v87IsolateENS1_5LocalINS1_6ObjectEEERNS_14ExceptionStateE(%"class.blink::ScriptIterator"* sret, %"class.v8::Isolate"*, %"class.v8::Object"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8bindings29CreateIDLSequenceFromIteratorINS_7Point2DEEENS_17NativeValueTraitsINS_11IDLSequenceIT_EEvE8ImplTypeEPN2v87IsolateENS_14ScriptIteratorERNS_14ExceptionStateE(%"class.blink::HeapVector"* noalias sret, %"class.v8::Isolate"*, %"class.blink::ScriptIterator"* byval(%"class.blink::ScriptIterator") align 8, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat {
  %5 = alloca %"class.blink::HeapVector", align 8
  %6 = alloca %"class.blink::Point2D"*, align 8
  %7 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %1) #8
  %8 = tail call %"class.blink::ExecutionContext"* @_ZN5blink18ToExecutionContextEN2v85LocalINS0_7ContextEEE(%"class.v8::Context"* %7) #8
  %9 = bitcast %"class.blink::HeapVector"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #8
  %10 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 16, i1 false) #8
  %13 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %13, label %14, label %50

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.blink::ScriptIterator", %"class.blink::ScriptIterator"* %2, i64 0, i32 6, i32 0
  %16 = bitcast %"class.blink::Point2D"** %6 to i8*
  %17 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %18 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %5, i64 0, i32 0
  br label %19

19:                                               ; preds = %14, %48
  %20 = load %"class.v8::Value"*, %"class.v8::Value"** %15, align 8
  %21 = icmp eq %"class.v8::Value"* %20, null
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %19
  call void @_ZN2v82V812ToLocalEmptyEv() #8
  br label %23

23:                                               ; preds = %19, %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %24 = call %"class.blink::Point2D"* @_ZN5blink17NativeValueTraitsINS_7Point2DEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"* %1, %"class.v8::Value"* %20, %"class.blink::ExceptionState"* dereferenceable(72) %3) #8
  store %"class.blink::Point2D"* %24, %"class.blink::Point2D"** %6, align 8
  %25 = load i32, i32* %17, align 8
  %26 = icmp eq i32 %25, 0
  %27 = ptrtoint %"class.blink::Point2D"* %24 to i64
  br i1 %26, label %30, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  br label %77

30:                                               ; preds = %23
  %31 = load i32, i32* %12, align 4
  %32 = load i32, i32* %11, align 8
  %33 = icmp eq i32 %31, %32
  br i1 %33, label %47, label %34, !prof !3

34:                                               ; preds = %30
  %35 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %10, align 8
  %36 = zext i32 %31 to i64
  %37 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %35, i64 %36
  %38 = bitcast %"class.blink::Member.3"* %37 to i64*
  store atomic i64 %27, i64* %38 monotonic, align 8
  %39 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %34
  %42 = bitcast %"class.blink::Point2D"* %24 to i8*
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #8
  br label %44

44:                                               ; preds = %41, %34
  %45 = load i32, i32* %12, align 4
  %46 = add i32 %45, 1
  store i32 %46, i32* %12, align 4
  br label %48

47:                                               ; preds = %30
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"* nonnull %18, %"class.blink::Point2D"** nonnull dereferenceable(8) %6) #8
  br label %48

48:                                               ; preds = %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %49 = call zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"* nonnull %2, %"class.blink::ExecutionContext"* %8, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.v8::Value"* null) #8
  br i1 %49, label %19, label %50

50:                                               ; preds = %48, %4
  %51 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %3, i64 0, i32 4
  %52 = load i32, i32* %51, align 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"class.blink::HeapVector"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false)
  br label %77

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %59 = bitcast %"class.blink::HeapVector"* %5 to i64*
  %60 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store i64 0, i64* %60, align 8
  %61 = load i64, i64* %59, align 8
  %62 = bitcast %"class.blink::HeapVector"* %0 to i64*
  store atomic i64 0, i64* %59 monotonic, align 8
  store atomic i64 %61, i64* %62 monotonic, align 8
  %63 = load i32, i32* %11, align 8
  store i32 %63, i32* %57, align 8
  store i32 0, i32* %11, align 8
  %64 = load i32, i32* %12, align 4
  store i32 %64, i32* %58, align 4
  store i32 0, i32* %12, align 4
  %65 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %70, label %67

67:                                               ; preds = %56
  %68 = inttoptr i64 %61 to i8*
  %69 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %68) #8
  br label %70

70:                                               ; preds = %67, %56
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %70
  %74 = bitcast %"class.blink::HeapVector"* %5 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #8
  br label %77

77:                                               ; preds = %73, %70, %28, %54
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #8
  ret void
}

declare i32 @_ZNK2v85Array6LengthEv(%"class.v8::Array"*) local_unnamed_addr #1

declare void @_ZN5blink14ExceptionState15ThrowRangeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEEj(%"class.v8::Object"*, %"class.v8::Context"*, i32) local_unnamed_addr #1

declare %"class.blink::Point2D"* @_ZN5blink17NativeValueTraitsINS_7Point2DEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7Point2DEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.44, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.45, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.46, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.47, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #8
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_7Point2DEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, {}*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)**, void (%"class.blink::Visitor"*, i8*, i8*, {}*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, {}*)*, void (%"class.blink::Visitor"*, i8*, i8*, {}*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, {}* bitcast (void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_7Point2DEE5TraceEPNS_7VisitorEPKv to {}*)) #8
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.40, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7Point2DEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Point2D"*
  %4 = bitcast i8* %1 to void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)**, void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)*, void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)*, void (%"class.blink::Point2D"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Point2D"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector"*, %"class.blink::Point2D"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"* %0, i32 %14) #8
  %15 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %16, i64 %18
  %20 = bitcast %"class.blink::Point2D"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #8
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7Point2DEEEEEmm(i64 %11) #8
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #8
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #8
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #8
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #8
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.48, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.49, i64 0, i64 0)) #8
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #8
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_7Point2DEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #8
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_7Point2DEEEEEmm(i64 %14) #8
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_7Point2DEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #8
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.3"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #8
  %33 = bitcast %"class.WTF::Vector"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #8
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #8
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14ScriptIterator4NextEPNS_16ExecutionContextERNS_14ExceptionStateEN2v85LocalINS5_5ValueEEE(%"class.blink::ScriptIterator"*, %"class.blink::ExecutionContext"*, %"class.blink::ExceptionState"* dereferenceable(72), %"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::Array"* @_ZN5blink20ToV8SequenceInternalINS_10HeapVectorINS_6MemberINS_7Point2DEEELj0EEEEEN2v85LocalINS6_5ArrayEEERKT_NS7_INS6_6ObjectEEEPNS6_7IsolateE(%"class.blink::HeapVector"* dereferenceable(16), %"class.v8::Object"*, %"class.v8::Isolate"*) local_unnamed_addr #4 comdat {
  %4 = alloca %"class.absl::optional", align 8
  %5 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %5) #8
  %6 = bitcast %"class.absl::optional"* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  store i8 0, i8* %5, align 8
  %7 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = bitcast %union.anon.445* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 48, i1 false) #8
  %9 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase36is_blink_runtime_call_stats_enabled_E, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11, !prof !2

11:                                               ; preds = %3
  %12 = tail call %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"* %2) #8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 3
  %14 = bitcast %"class.base::TickClock"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.blink::RuntimeCallStats"* %12, %"class.blink::RuntimeCallStats"** %16, align 8
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 4
  %20 = bitcast i64* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #8
  %21 = bitcast %"class.base::TickClock"** %19 to i64*
  store i64 %15, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 2, i64 5
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %12, i64 0, i32 0
  %24 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %23, align 8
  call void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallCounter"* %22, %"class.blink::RuntimeCallTimer"* %24) #8
  store %"class.blink::RuntimeCallTimer"* %17, %"class.blink::RuntimeCallTimer"** %23, align 8
  store i8 1, i8* %5, align 8
  br label %25

25:                                               ; preds = %3, %11
  %26 = call %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"* %1) #8
  call void @_ZN2v87Context5EnterEv(%"class.v8::Context"* %26) #8
  %27 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %31, label %30, !prof !2

30:                                               ; preds = %25
  call void @llvm.trap() #8
  unreachable

31:                                               ; preds = %25
  %32 = call %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"* %2, i32 %28) #8
  %33 = ptrtoint %"class.v8::Array"* %32 to i64
  call void @_ZN2v87Context4ExitEv(%"class.v8::Context"* %26) #8
  %34 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %2) #8
  %35 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Member.3"*, %"class.blink::Member.3"** %35, align 8
  %37 = load i32, i32* %27, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %36, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %75, label %41

41:                                               ; preds = %31
  %42 = bitcast %"class.v8::Array"* %32 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %44 = add i64 %43, 176
  %45 = inttoptr i64 %44 to %"class.v8::Value"*
  %46 = add i64 %43, 160
  br label %47

47:                                               ; preds = %41, %71
  %48 = phi i32 [ 0, %41 ], [ %72, %71 ]
  %49 = phi %"class.blink::Member.3"* [ %36, %41 ], [ %73, %71 ]
  %50 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %49, i64 0, i32 0, i32 0
  %51 = load %"class.blink::Point2D"*, %"class.blink::Point2D"** %50, align 8
  %52 = icmp eq %"class.blink::Point2D"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.blink::Point2D", %"class.blink::Point2D"* %51, i64 0, i32 0
  %55 = bitcast %"class.blink::Point2D"* %51 to %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)***
  %56 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)**, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*** %55, align 8
  %57 = getelementptr inbounds %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %56, i64 2
  %58 = load %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)*, %"class.v8::Value"* (%"class.blink::IDLDictionaryBase"*, %"class.v8::Object"*, %"class.v8::Isolate"*)** %57, align 8
  %59 = call %"class.v8::Value"* %58(%"class.blink::IDLDictionaryBase"* nonnull %54, %"class.v8::Object"* %42, %"class.v8::Isolate"* %2) #8
  br label %60

60:                                               ; preds = %47, %53
  %61 = phi %"class.v8::Value"* [ %59, %53 ], [ %45, %47 ]
  %62 = ptrtoint %"class.v8::Value"* %61 to i64
  %63 = icmp eq %"class.v8::Value"* %61, null
  %64 = select i1 %63, i64 %46, i64 %62
  %65 = inttoptr i64 %64 to %"class.v8::Value"*
  %66 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"* %42, %"class.v8::Context"* %34, i32 %48, %"class.v8::Value"* %65) #8
  %67 = trunc i16 %66 to i8
  %68 = icmp eq i8 %67, 0
  %69 = icmp ult i16 %66, 256
  %70 = or i1 %69, %68
  br i1 %70, label %75, label %71, !prof !6

71:                                               ; preds = %60
  %72 = add i32 %48, 1
  %73 = getelementptr inbounds %"class.blink::Member.3", %"class.blink::Member.3"* %49, i64 1
  %74 = icmp eq %"class.blink::Member.3"* %73, %39
  br i1 %74, label %75, label %47

75:                                               ; preds = %71, %60, %31
  %76 = phi i64 [ %33, %31 ], [ 0, %60 ], [ %33, %71 ]
  %77 = load i8, i8* %5, align 8, !range !4
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %85, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %81 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %80, align 8
  %82 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %83 = call %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* %82) #8
  %84 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %81, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* %83, %"class.blink::RuntimeCallTimer"** %84, align 8
  store i8 0, i8* %5, align 8
  br label %85

85:                                               ; preds = %75, %79
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %5) #8
  %86 = inttoptr i64 %76 to %"class.v8::Array"*
  ret %"class.v8::Array"* %86
}

declare %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v86Object15CreationContextEv(%"class.v8::Object"*) local_unnamed_addr #1

declare %"class.v8::Array"* @_ZN2v85Array3NewEPNS_7IsolateEi(%"class.v8::Isolate"*, i32) local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEEjNS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, i32, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #1

declare void @_ZN2v87Context5EnterEv(%"class.v8::Context"*) local_unnamed_addr #1

declare void @_ZN2v87Context4ExitEv(%"class.v8::Context"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!"branch_weights", i32 2146410443, i32 1073205}
!6 = !{!"branch_weights", i32 2002, i32 2000}
