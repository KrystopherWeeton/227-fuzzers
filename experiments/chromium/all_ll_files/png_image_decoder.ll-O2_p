; ModuleID = '../../third_party/blink/renderer/platform/image-decoders/png/png_image_decoder.cc'
source_filename = "../../third_party/blink/renderer/platform/image-decoders/png/png_image_decoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::PNGImageDecoder" = type { %"class.blink::ImageDecoder", %"class.std::__1::unique_ptr.28", i32, i64, i32, i8, i8, i8, i64, %"class.std::__1::unique_ptr.39" }
%"class.blink::ImageDecoder" = type { i32 (...)**, %class.scoped_refptr, %"class.WTF::Vector", i8, i32, %"class.blink::ColorBehavior", %"class.blink::ImageOrientation", %"class.blink::IntSize", i64, i8, %"class.std::__1::unique_ptr", i8, %"class.blink::IntSize", i8, i8, i8, %"class.std::__1::unique_ptr.9", %class.sk_sp.1, i8, %"class.std::__1::unique_ptr.22" }
%class.scoped_refptr = type { %"class.blink::SegmentReader"* }
%"class.blink::SegmentReader" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [128 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::ImageFrame"*, i32, i32 }
%"class.blink::ImageFrame" = type { %class.SkBitmap, %"class.SkBitmap::Allocator"*, i8, i32, %"class.blink::IntRect", i32, %"class.base::TimeDelta", i32, i32, i8, i8, i64 }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.1, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.SkBitmap::Allocator" = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::ColorBehavior" = type { i32 }
%"class.blink::ImageOrientation" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ImagePlanes"* }
%"class.blink::ImagePlanes" = type <{ [3 x i8*], [3 x i64], i32, i8, [3 x i8] }>
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::ColorProfile"* }
%"class.blink::ColorProfile" = type { %struct.skcms_ICCProfile, %"class.std::__1::unique_ptr.13" }
%struct.skcms_ICCProfile = type { i8*, i32, i32, i32, i32, i8, [3 x %union.skcms_Curve], i8, %struct.skcms_Matrix3x3, i8, %struct.skcms_A2B, i8, %struct.skcms_B2A }
%union.skcms_Curve = type { %struct.anon.12, [8 x i8] }
%struct.anon.12 = type { i32, i8*, i8* }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.skcms_A2B = type { i32, [4 x %union.skcms_Curve], [4 x i8], i8*, i8*, i32, [3 x %union.skcms_Curve], %struct.skcms_Matrix3x4, i32, [3 x %union.skcms_Curve] }
%struct.skcms_Matrix3x4 = type { [3 x [4 x float]] }
%struct.skcms_B2A = type { i32, [3 x %union.skcms_Curve], i32, %struct.skcms_Matrix3x4, [3 x %union.skcms_Curve], i32, [4 x i8], i8*, i8*, [4 x %union.skcms_Curve] }
%"class.std::__1::unique_ptr.13" = type { %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { i8* }
%class.sk_sp.1 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ColorProfileTransform"* }
%"class.blink::ColorProfileTransform" = type { %struct.skcms_ICCProfile*, %struct.skcms_ICCProfile }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PNGImageReader"* }
%"class.blink::PNGImageReader" = type { %struct.png_struct_def*, %struct.png_info_def*, i32, i32, %"class.blink::PNGImageDecoder"*, i64, i64, i64, i64, i64, i8, i8, i8, i8, i8, i8, i32, i32, i8, i8, %"class.std::__1::unique_ptr.13", %"struct.blink::PNGImageReader::FrameInfo", %"class.WTF::Vector.31" }
%struct.png_struct_def = type opaque
%struct.png_info_def = type opaque
%"struct.blink::PNGImageReader::FrameInfo" = type { i64, i64, i64, %"class.blink::IntRect", i32, i32 }
%"class.WTF::Vector.31" = type { %"class.WTF::VectorBuffer.32" }
%"class.WTF::VectorBuffer.32" = type { %"class.WTF::VectorBufferBase.33", [48 x i8] }
%"class.WTF::VectorBufferBase.33" = type { %"struct.blink::PNGImageReader::FrameInfo"*, i32, i32 }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { i32* }
%"class.WTF::Vector.45" = type { %"class.WTF::VectorBuffer.46" }
%"class.WTF::VectorBuffer.46" = type { %"class.WTF::VectorBufferBase.47" }
%"class.WTF::VectorBufferBase.47" = type { i64*, i32, i32 }
%struct.anon = type { i32, %struct.skcms_TransferFunction }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__sigset_t = type { [16 x i64] }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.51" }
%"struct.std::__1::atomic.51" = type { %"struct.std::__1::__atomic_base.52" }
%"struct.std::__1::__atomic_base.52" = type { %"struct.std::__1::__atomic_base.53" }
%"struct.std::__1::__atomic_base.53" = type { %"struct.std::__1::__cxx_atomic_impl.54" }
%"struct.std::__1::__cxx_atomic_impl.54" = type { %"struct.std::__1::__cxx_atomic_base_impl.55" }
%"struct.std::__1::__cxx_atomic_base_impl.55" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.50 }
%class.scoped_refptr.50 = type { %"class.WTF::StringImpl"* }
%"class.WTF::Vector.56" = type { %"class.WTF::VectorBuffer.57" }
%"class.WTF::VectorBuffer.57" = type { %"class.WTF::VectorBufferBase.58" }
%"class.WTF::VectorBufferBase.58" = type { %struct.SkISize*, i32, i32 }
%"struct.cc::ImageHeaderMetadata" = type <{ i32, i32, %"class.gfx::Size", %"class.absl::optional", i8, i8, %"class.absl::optional.61", %"class.absl::optional.61", [2 x i8] }>
%"class.gfx::Size" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.gfx::Size" }
%"class.absl::optional.61" = type { %"class.absl::optional_internal::optional_data.62" }
%"class.absl::optional_internal::optional_data.62" = type { %"class.absl::optional_internal::optional_data_base.63" }
%"class.absl::optional_internal::optional_data_base.63" = type { %"class.absl::optional_internal::optional_data_dtor_base.64" }
%"class.absl::optional_internal::optional_data_dtor_base.64" = type { i8, %union.anon.65 }
%union.anon.65 = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.68 }
%union.anon.68 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink12ImageDecoderD2Ev = comdat any

$_ZN5blink16ReadColorProfileEP14png_struct_defP12png_info_def = comdat any

$_ZNK5blink12ImageDecoder4SizeEv = comdat any

$_ZNK5blink15PNGImageDecoder17FilenameExtensionEv = comdat any

$_ZN5blink12ImageDecoder9OnSetDataEPNS_13SegmentReaderE = comdat any

$_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv = comdat any

$_ZNK5blink12ImageDecoder11DecodedSizeEv = comdat any

$_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv = comdat any

$_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE = comdat any

$_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv = comdat any

$_ZNK5blink12ImageDecoder14GetYUVBitDepthEv = comdat any

$_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm = comdat any

$_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE = comdat any

$_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE = comdat any

$_ZN5blink12ImageDecoder11DecodeToYUVEv = comdat any

$_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv = comdat any

$_ZN5blink15PNGImageDecoder10DecodeSizeEv = comdat any

$_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj = comdat any

$_ZN5blink12ImageDecoder17OnInitFrameBufferEm = comdat any

$_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZNK3WTF6VectorIN5blink14PNGImageReader9FrameInfoELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj = comdat any

@_ZTVN5blink15PNGImageDecoderE = hidden unnamed_addr constant { [37 x i8*] } { [37 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoderD2Ev to i8*), i8* bitcast (void (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoderD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::PNGImageDecoder"*)* @_ZNK5blink15PNGImageDecoder17FilenameExtensionEv to i8*), i8* bitcast (i1 (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoder19ImageIsHighBitDepthEv to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*)* @_ZN5blink12ImageDecoder9OnSetDataEPNS_13SegmentReaderE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder4SizeEv to i8*), i8* bitcast (void (%"class.WTF::Vector.56"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder11DecodedSizeEv to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i32)* @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE to i8*), i8* bitcast (i32 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv to i8*), i8* bitcast (i8 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv to i8*), i8* bitcast (void (%"struct.cc::ImageHeaderMetadata"*, %"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::PNGImageDecoder"*, i32, i32)* @_ZN5blink15PNGImageDecoder7SetSizeEjj to i8*), i8* bitcast (i32 (%"class.blink::PNGImageDecoder"*)* @_ZNK5blink15PNGImageDecoder15RepetitionCountEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::PNGImageDecoder"*, i64)* @_ZNK5blink15PNGImageDecoder22FrameIsReceivedAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::PNGImageDecoder"*, i64)* @_ZNK5blink15PNGImageDecoder20FrameDurationAtIndexEm to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm to i8*), i8* bitcast (i1 (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoder9SetFailedEv to i8*), i8* bitcast (i64 (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"*)* @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*)* @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*)* @_ZN5blink12ImageDecoder11DecodeToYUVEv to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*)* @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv to i8*), i8* bitcast (void (%"class.blink::PNGImageDecoder"*, i64)* @_ZN5blink15PNGImageDecoder16ClearFrameBufferEm to i8*), i8* bitcast (void (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoder10DecodeSizeEv to i8*), i8* bitcast (i64 (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoder16DecodeFrameCountEv to i8*), i8* bitcast (void (%"class.blink::PNGImageDecoder"*, i64)* @_ZN5blink15PNGImageDecoder18InitializeNewFrameEm to i8*), i8* bitcast (void (%"class.blink::PNGImageDecoder"*, i64)* @_ZN5blink15PNGImageDecoder6DecodeEm to i8*), i8* bitcast (i1 (%"class.blink::ImageDecoder"*, i32)* @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj to i8*), i8* bitcast (void (%"class.blink::ImageDecoder"*, i64)* @_ZN5blink12ImageDecoder17OnInitFrameBufferEm to i8*), i8* bitcast (i1 (%"class.blink::PNGImageDecoder"*, i64)* @_ZNK5blink15PNGImageDecoder27CanReusePreviousFrameBufferEm to i8*)] }, align 8
@_ZTVN5blink12ImageDecoderE = external unnamed_addr constant { [37 x i8*] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.1 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [4 x i8] c"png\00", align 1

@_ZN5blink15PNGImageDecoderC1ENS_12ImageDecoder11AlphaOptionENS1_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorEmm = hidden unnamed_addr alias void (%"class.blink::PNGImageDecoder"*, i32, i32, %"class.blink::ColorBehavior"*, i64, i64), void (%"class.blink::PNGImageDecoder"*, i32, i32, %"class.blink::ColorBehavior"*, i64, i64)* @_ZN5blink15PNGImageDecoderC2ENS_12ImageDecoder11AlphaOptionENS1_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorEmm
@_ZN5blink15PNGImageDecoderD1Ev = hidden unnamed_addr alias void (%"class.blink::PNGImageDecoder"*), void (%"class.blink::PNGImageDecoder"*)* @_ZN5blink15PNGImageDecoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoderC2ENS_12ImageDecoder11AlphaOptionENS1_26HighBitDepthDecodingOptionERKNS_13ColorBehaviorEmm(%"class.blink::PNGImageDecoder"*, i32, i32, %"class.blink::ColorBehavior"* nocapture readonly dereferenceable(4), i64, i64) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::SegmentReader"* null, %"class.blink::SegmentReader"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i64 0
  %11 = bitcast %"class.WTF::Vector"* %9 to i8**
  store i8* %10, i8** %11, align 8
  %12 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 1
  store i32 1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  store i32 0, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 3
  %15 = icmp eq i32 %1, 0
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %14, align 8
  %17 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 4
  store i32 %2, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::ColorBehavior", %"class.blink::ColorBehavior"* %3, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %20 = load i32, i32* %18, align 4
  store i32 %20, i32* %19, align 8
  %21 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 6, i32 0
  store i8 1, i8* %21, align 1
  %22 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 7, i32 0
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 7, i32 1
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 8
  store i64 %4, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 9
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 10
  %27 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 11
  store i8 0, i8* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 12, i32 0
  %30 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 16
  %31 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 19
  %32 = bitcast %"class.std::__1::unique_ptr.22"* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = bitcast i32* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 11, i1 false) #13
  %34 = bitcast %"class.std::__1::unique_ptr.9"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 17, i1 false) #13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15PNGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %35 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1
  %36 = bitcast %"class.std::__1::unique_ptr.28"* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 2
  %38 = trunc i64 %5 to i32
  store i32 %38, i32* %37, align 8
  %39 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 3
  %40 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 8
  %41 = bitcast i64* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 15, i1 false)
  %42 = bitcast i64* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoderD2Ev(%"class.blink::PNGImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15PNGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  store i32* null, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %9, align 8
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %9, align 8
  %11 = icmp eq %"class.blink::PNGImageReader"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %10) #13
  %13 = bitcast %"class.blink::PNGImageReader"* %10 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %15) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink12ImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %4 = load %"class.blink::ColorProfileTransform"*, %"class.blink::ColorProfileTransform"** %3, align 8
  store %"class.blink::ColorProfileTransform"* null, %"class.blink::ColorProfileTransform"** %3, align 8
  %5 = icmp eq %"class.blink::ColorProfileTransform"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ColorProfileTransform"* %4 to i8*
  tail call void @free(i8* %7) #13
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 17, i32 0
  %10 = load %class.SkColorSpace*, %class.SkColorSpace** %9, align 8
  %11 = icmp eq %class.SkColorSpace* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 -1 acq_rel
  %15 = icmp eq i32 %14, 1
  br i1 %15, label %16, label %18

16:                                               ; preds = %12
  %17 = bitcast %class.SkColorSpace* %10 to i8*
  tail call void @_ZdlPv(i8* %17) #14
  br label %18

18:                                               ; preds = %8, %12, %16
  %19 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %20 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %19, align 8
  store %"class.blink::ColorProfile"* null, %"class.blink::ColorProfile"** %19, align 8
  %21 = icmp eq %"class.blink::ColorProfile"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::ColorProfile", %"class.blink::ColorProfile"* %20, i64 0, i32 1, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  store i8* null, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZdaPv(i8* nonnull %24) #14
  br label %27

27:                                               ; preds = %26, %22
  %28 = bitcast %"class.blink::ColorProfile"* %20 to i8*
  tail call void @free(i8* %28) #13
  br label %29

29:                                               ; preds = %18, %27
  %30 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %31 = load %"class.blink::ImagePlanes"*, %"class.blink::ImagePlanes"** %30, align 8
  store %"class.blink::ImagePlanes"* null, %"class.blink::ImagePlanes"** %30, align 8
  %32 = icmp eq %"class.blink::ImagePlanes"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::ImagePlanes"* %31 to i8*
  tail call void @free(i8* %34) #13
  br label %35

35:                                               ; preds = %29, %33
  %36 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0, i32 0, i32 0
  br i1 %39, label %51, label %41, !prof !2

41:                                               ; preds = %35
  %42 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %43 = zext i32 %38 to i64
  %44 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %42, i64 %43
  br label %45

45:                                               ; preds = %45, %41
  %46 = phi %"class.blink::ImageFrame"* [ %48, %45 ], [ %42, %41 ]
  %47 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 0, i32 0
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %47) #13
  %48 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %46, i64 1
  %49 = icmp eq %"class.blink::ImageFrame"* %48, %44
  br i1 %49, label %50, label %45

50:                                               ; preds = %45
  store i32 0, i32* %37, align 4
  br label %51

51:                                               ; preds = %50, %35
  %52 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %40, align 8
  %53 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 1, i64 0
  %54 = bitcast i8* %53 to %"class.blink::ImageFrame"*
  %55 = icmp eq %"class.blink::ImageFrame"* %52, %54
  br i1 %55, label %58, label %56, !prof !3

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %36, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"* %57, %"class.blink::ImageFrame"* %52) #13
  br label %58

58:                                               ; preds = %51, %56
  store %"class.blink::ImageFrame"* null, %"class.blink::ImageFrame"** %40, align 8
  %59 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 1, i32 0
  %60 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %59, align 8
  %61 = icmp eq %"class.blink::SegmentReader"* %60, null
  br i1 %61, label %74, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::SegmentReader", %"class.blink::SegmentReader"* %60, i64 0, i32 1, i32 0
  %64 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = atomicrmw sub i32* %64, i32 1 acq_rel
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %67, label %74

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %63, i64 -2
  %69 = bitcast %"class.base::RefCountedThreadSafe"* %68 to %"class.blink::SegmentReader"*
  %70 = bitcast %"class.base::RefCountedThreadSafe"* %68 to void (%"class.blink::SegmentReader"*)***
  %71 = load void (%"class.blink::SegmentReader"*)**, void (%"class.blink::SegmentReader"*)*** %70, align 8
  %72 = getelementptr inbounds void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %71, i64 1
  %73 = load void (%"class.blink::SegmentReader"*)*, void (%"class.blink::SegmentReader"*)** %72, align 8
  tail call void %73(%"class.blink::SegmentReader"* nonnull %69) #13
  br label %74

74:                                               ; preds = %58, %62, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoderD0Ev(%"class.blink::PNGImageDecoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [37 x i8*] }, { [37 x i8*] }* @_ZTVN5blink15PNGImageDecoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  store i32* null, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast i32* %4 to i8*
  tail call void @_ZdaPv(i8* %7) #14
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %9, align 8
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %9, align 8
  %11 = icmp eq %"class.blink::PNGImageReader"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %8
  tail call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %10) #13
  %13 = bitcast %"class.blink::PNGImageReader"* %10 to i8*
  tail call void @free(i8* %13) #13
  br label %14

14:                                               ; preds = %8, %12
  %15 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoderD2Ev(%"class.blink::ImageDecoder"* %15) #13
  %16 = bitcast %"class.blink::PNGImageDecoder"* %0 to i8*
  tail call void @free(i8* %16) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15PNGImageDecoder9SetFailedEv(%"class.blink::PNGImageDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %2, align 8
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %2, align 8
  %4 = icmp eq %"class.blink::PNGImageReader"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %3) #13
  %6 = bitcast %"class.blink::PNGImageReader"* %3 to i8*
  tail call void @free(i8* %6) #13
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  store i8 1, i8* %8, align 2
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink15PNGImageDecoder16DecodeFrameCountEv(%"class.blink::PNGImageDecoder"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink15PNGImageDecoder5ParseENS_14PNGImageReader10ParseQueryE(%"class.blink::PNGImageDecoder"* %0, i32 1)
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  br label %11

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %9, i64 0, i32 22, i32 0, i32 0, i32 2
  br label %11

11:                                               ; preds = %7, %5
  %12 = phi i32* [ %6, %5 ], [ %10, %7 ]
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  ret i64 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder5ParseENS_14PNGImageReader10ParseQueryE(%"class.blink::PNGImageDecoder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  %4 = load i8, i8* %3, align 2, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %41

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.28"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %8, align 8
  %10 = icmp eq %"class.blink::PNGImageReader"* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %9, i64 0, i32 15
  %13 = load i8, i8* %12, align 1, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %29, label %41

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 2
  %17 = tail call noalias i8* @malloc(i64 216) #13
  %18 = bitcast i8* %17 to %"class.blink::PNGImageReader"*
  %19 = load i32, i32* %16, align 4
  %20 = zext i32 %19 to i64
  tail call void @_ZN5blink14PNGImageReaderC1EPNS_15PNGImageDecoderEm(%"class.blink::PNGImageReader"* %18, %"class.blink::PNGImageDecoder"* %0, i64 %20) #13
  %21 = ptrtoint i8* %17 to i64
  %22 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %8, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.28"* %7 to i64*
  store i64 %21, i64* %23, align 8
  %24 = icmp eq %"class.blink::PNGImageReader"* %22, null
  %25 = bitcast i8* %17 to %"class.blink::PNGImageReader"*
  br i1 %24, label %29, label %26

26:                                               ; preds = %15
  tail call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %22) #13
  %27 = bitcast %"class.blink::PNGImageReader"* %22 to i8*
  tail call void @free(i8* %27) #13
  %28 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %8, align 8
  br label %29

29:                                               ; preds = %11, %15, %26
  %30 = phi %"class.blink::PNGImageReader"* [ %9, %11 ], [ %25, %15 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %32 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %31, align 8
  %33 = tail call zeroext i1 @_ZN5blink14PNGImageReader5ParseERNS_13SegmentReaderENS0_10ParseQueryE(%"class.blink::PNGImageReader"* %30, %"class.blink::SegmentReader"* dereferenceable(16) %32, i32 %1) #13
  br i1 %33, label %41, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %35, align 8
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %35, align 8
  %37 = icmp eq %"class.blink::PNGImageReader"* %36, null
  br i1 %37, label %40, label %38

38:                                               ; preds = %34
  tail call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %36) #13
  %39 = bitcast %"class.blink::PNGImageReader"* %36 to i8*
  tail call void @free(i8* %39) #13
  br label %40

40:                                               ; preds = %34, %38
  store i8 1, i8* %3, align 2
  br label %41

41:                                               ; preds = %11, %2, %40, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder6DecodeEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.45", align 8
  tail call void @_ZN5blink15PNGImageDecoder5ParseENS_14PNGImageReader10ParseQueryE(%"class.blink::PNGImageDecoder"* %0, i32 1)
  %4 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  %6 = load i8, i8* %5, align 2, !range !4
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %72

8:                                                ; preds = %2
  tail call void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"* %4, i64 %1) #13
  %9 = bitcast %"class.WTF::Vector.45"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #13
  %10 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector.45", %"class.WTF::Vector.45"* %3, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.WTF::Vector.45"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink12ImageDecoder18FindFramesToDecodeEm(%"class.WTF::Vector.45"* nonnull sret %3, %"class.blink::ImageDecoder"* %4, i64 %1) #13
  %13 = load i32, i32* %11, align 4
  %14 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 3
  %15 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 1, i32 0
  %17 = icmp eq i32 %13, 0
  br i1 %17, label %43, label %18

18:                                               ; preds = %8
  %19 = zext i32 %13 to i64
  %20 = load i64*, i64** %10, align 8
  %21 = getelementptr inbounds i64, i64* %20, i64 %19
  br label %22

22:                                               ; preds = %36, %18
  %23 = phi i64* [ %21, %18 ], [ %24, %36 ]
  %24 = getelementptr inbounds i64, i64* %23, i64 -1
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %14, align 8
  %26 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %15, align 8
  %27 = load %"class.blink::SegmentReader"*, %"class.blink::SegmentReader"** %16, align 8
  %28 = load i64, i64* %24, align 8
  %29 = call zeroext i1 @_ZN5blink14PNGImageReader6DecodeERNS_13SegmentReaderEm(%"class.blink::PNGImageReader"* %26, %"class.blink::SegmentReader"* dereferenceable(16) %27, i64 %28) #13
  br i1 %29, label %36, label %30

30:                                               ; preds = %22
  %31 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %15, align 8
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %15, align 8
  %32 = icmp eq %"class.blink::PNGImageReader"* %31, null
  br i1 %32, label %35, label %33

33:                                               ; preds = %30
  call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %31) #13
  %34 = bitcast %"class.blink::PNGImageReader"* %31 to i8*
  call void @free(i8* %34) #13
  br label %35

35:                                               ; preds = %30, %33
  store i8 1, i8* %5, align 2
  br label %62

36:                                               ; preds = %22
  %37 = load i64, i64* %24, align 8
  %38 = call zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"* %4, i64 %37) #13
  %39 = xor i1 %38, true
  %40 = load i64*, i64** %10, align 8
  %41 = icmp eq i64* %24, %40
  %42 = or i1 %41, %39
  br i1 %42, label %43, label %22

43:                                               ; preds = %36, %8
  %44 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, -1
  %47 = zext i32 %46 to i64
  %48 = icmp ugt i64 %47, %1
  br i1 %48, label %62, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 14
  %51 = load i8, i8* %50, align 1, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %49
  %54 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %15, align 8
  %55 = icmp eq %"class.blink::PNGImageReader"* %54, null
  br i1 %55, label %62, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %54, i64 0, i32 15
  %58 = load i8, i8* %57, align 1, !range !4
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %56
  store %"class.blink::PNGImageReader"* null, %"class.blink::PNGImageReader"** %15, align 8
  call void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"* nonnull %54) #13
  %61 = bitcast %"class.blink::PNGImageReader"* %54 to i8*
  call void @free(i8* %61) #13
  store i8 1, i8* %5, align 2
  br label %62

62:                                               ; preds = %56, %53, %49, %60, %43, %35
  %63 = load i64*, i64** %10, align 8
  %64 = icmp eq i64* %63, null
  %65 = bitcast i64* %63 to i8*
  br i1 %64, label %71, label %66, !prof !3

66:                                               ; preds = %62
  %67 = load i32, i32* %11, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !2

69:                                               ; preds = %66
  store i32 0, i32* %11, align 4
  br label %70

70:                                               ; preds = %69, %66
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %65) #13
  store i64* null, i64** %10, align 8
  br label %71

71:                                               ; preds = %62, %70
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #13
  br label %72

72:                                               ; preds = %2, %71
  ret void
}

declare void @_ZN5blink12ImageDecoder23UpdateAggressivePurgingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZNK5blink12ImageDecoder18FindFramesToDecodeEm(%"class.WTF::Vector.45"* sret, %"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5blink14PNGImageReader6DecodeERNS_13SegmentReaderEm(%"class.blink::PNGImageReader"*, %"class.blink::SegmentReader"* dereferenceable(16), i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink12ImageDecoder20PostDecodeProcessingEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14PNGImageReader5ParseERNS_13SegmentReaderENS0_10ParseQueryE(%"class.blink::PNGImageReader"*, %"class.blink::SegmentReader"* dereferenceable(16), i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder16ClearFrameBufferEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %3, align 8
  %5 = icmp eq %"class.blink::PNGImageReader"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink14PNGImageReader16ClearDecodeStateEm(%"class.blink::PNGImageReader"* nonnull %4, i64 %1) #13
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  tail call void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"* %8, i64 %1) #13
  ret void
}

declare void @_ZN5blink14PNGImageReader16ClearDecodeStateEm(%"class.blink::PNGImageReader"*, i64) local_unnamed_addr #1

declare void @_ZN5blink12ImageDecoder16ClearFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15PNGImageDecoder27CanReusePreviousFrameBufferEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %4 = trunc i64 %1 to i32
  %5 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %4) #13
  %6 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %5, i64 0, i32 7
  %7 = load i32, i32* %6, align 8
  %8 = icmp ne i32 %7, 3
  ret i1 %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink15PNGImageDecoder18SetRepetitionCountEi(%"class.blink::PNGImageDecoder"* nocapture, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink15PNGImageDecoder15RepetitionCountEv(%"class.blink::PNGImageDecoder"* nocapture readonly) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  %3 = load i8, i8* %2, align 2, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi i32 [ %7, %5 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder18InitializeNewFrameEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %3, align 8
  %5 = tail call dereferenceable(48) %"struct.blink::PNGImageReader::FrameInfo"* @_ZNK5blink14PNGImageReader12GetFrameInfoEm(%"class.blink::PNGImageReader"* %4, i64 %1) #13
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %8 = trunc i64 %1 to i32
  %9 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %7, i32 %8) #13
  %10 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  %11 = load i8, i8* %10, align 2, !range !4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 3
  store i32 1, i32* %14, align 4
  br label %15

15:                                               ; preds = %2, %13
  %16 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %5, i64 0, i32 3
  %17 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 4
  %18 = bitcast %"class.blink::IntRect"* %17 to i8*
  %19 = bitcast %"class.blink::IntRect"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 16, i1 false) #13
  %20 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %5, i64 0, i32 2
  %21 = load i64, i64* %20, align 8
  %22 = icmp slt i64 %21, 0
  %23 = select i1 %22, i64 -9223372036854775808, i64 9223372036854775807
  %24 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %21, i64 1000) #13
  %25 = extractvalue { i64, i1 } %24, 1
  %26 = extractvalue { i64, i1 } %24, 0
  %27 = select i1 %25, i64 %23, i64 %26, !prof !2
  %28 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 6, i32 0
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %5, i64 0, i32 4
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 7
  store i32 %30, i32* %31, align 8
  %32 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %5, i64 0, i32 5
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 8
  store i32 %33, i32* %34, align 4
  %35 = tail call i64 @_ZN5blink12ImageDecoder25FindRequiredPreviousFrameEmb(%"class.blink::ImageDecoder"* %6, i64 %1, i1 zeroext false) #13
  %36 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %9, i64 0, i32 11
  store i64 %35, i64* %36, align 8
  ret void
}

declare dereferenceable(48) %"struct.blink::PNGImageReader::FrameInfo"* @_ZNK5blink14PNGImageReader12GetFrameInfoEm(%"class.blink::PNGImageReader"*, i64) local_unnamed_addr #1

declare i64 @_ZN5blink12ImageDecoder25FindRequiredPreviousFrameEmb(%"class.blink::ImageDecoder"*, i64, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder13SetColorSpaceEv(%"class.blink::PNGImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %8, i64 0, i32 0
  %10 = load %struct.png_struct_def*, %struct.png_struct_def** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %8, i64 0, i32 1
  %12 = load %struct.png_info_def*, %struct.png_info_def** %11, align 8
  %13 = tail call zeroext i8 @cr_png_get_color_type(%struct.png_struct_def* %10, %struct.png_info_def* %12) #13
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %6
  %17 = tail call %"class.blink::ColorProfile"* @_ZN5blink16ReadColorProfileEP14png_struct_defP12png_info_def(%struct.png_struct_def* %10, %struct.png_info_def* %12)
  %18 = icmp eq %"class.blink::ColorProfile"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %16
  tail call void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"* %2, %"class.blink::ColorProfile"* nonnull %17) #13
  br label %20

20:                                               ; preds = %16, %19, %6, %1
  ret void
}

declare zeroext i8 @cr_png_get_color_type(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ColorProfile"* @_ZN5blink16ReadColorProfileEP14png_struct_defP12png_info_def(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #5 comdat {
  %3 = alloca i8*, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca [8 x i32], align 16
  %8 = alloca i32, align 4
  %9 = alloca %struct.skcms_Matrix3x3, align 4
  %10 = alloca %struct.skcms_ICCProfile, align 8
  %11 = tail call i32 @cr_png_get_valid(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32 2048) #13
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %18, label %13

13:                                               ; preds = %2
  %14 = tail call %struct.skcms_ICCProfile* @skcms_sRGB_profile() #13
  %15 = tail call noalias i8* @malloc(i64 1016) #13
  %16 = bitcast i8* %15 to %"class.blink::ColorProfile"*
  tail call void @_ZN5blink12ColorProfileC1ERK16skcms_ICCProfileNSt3__110unique_ptrIA_hNS4_14default_deleteIS6_EEEE(%"class.blink::ColorProfile"* %16, %struct.skcms_ICCProfile* dereferenceable(1008) %14, i8* null) #13
  %17 = ptrtoint i8* %15 to i64
  br label %132

18:                                               ; preds = %2
  %19 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %20 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 -1431655766, i32* %4, align 4
  %21 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #13
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %22 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22) #13
  store i32 -1431655766, i32* %6, align 4
  %23 = call i32 @cr_png_get_iCCP(%struct.png_struct_def* %0, %struct.png_info_def* %1, i8** nonnull %3, i32* nonnull %4, i8** nonnull %5, i32* nonnull %6) #13
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %31, label %25

25:                                               ; preds = %18
  %26 = load i8*, i8** %5, align 8
  %27 = load i32, i32* %6, align 4
  %28 = zext i32 %27 to i64
  %29 = call %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8* %26, i64 %28) #13
  %30 = ptrtoint %"class.blink::ColorProfile"* %29 to i64
  br label %130

31:                                               ; preds = %18
  %32 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #13
  %33 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 0
  %34 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 1
  %35 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 2
  %36 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 3
  %37 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 4
  %38 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 5
  %39 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 6
  %40 = getelementptr inbounds [8 x i32], [8 x i32]* %7, i64 0, i64 7
  %41 = bitcast [8 x i32]* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %41, i8 -86, i64 32, i1 false)
  %42 = call i32 @cr_png_get_cHRM_fixed(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32* nonnull %33, i32* %34, i32* %35, i32* %36, i32* %37, i32* %38, i32* %39, i32* %40) #13
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %128, label %44

44:                                               ; preds = %31
  %45 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %45) #13
  store i32 -1431655766, i32* %8, align 4
  %46 = call i32 @cr_png_get_gAMA_fixed(%struct.png_struct_def* %0, %struct.png_info_def* %1, i32* nonnull %8) #13
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %126, label %48

48:                                               ; preds = %44
  %49 = load i32, i32* %35, align 8
  %50 = sitofp i32 %49 to float
  %51 = fmul float %50, 0x3EE4F8B580000000
  %52 = load i32, i32* %36, align 4
  %53 = sitofp i32 %52 to float
  %54 = fmul float %53, 0x3EE4F8B580000000
  %55 = load i32, i32* %37, align 16
  %56 = sitofp i32 %55 to float
  %57 = fmul float %56, 0x3EE4F8B580000000
  %58 = load i32, i32* %38, align 4
  %59 = sitofp i32 %58 to float
  %60 = fmul float %59, 0x3EE4F8B580000000
  %61 = load i32, i32* %39, align 8
  %62 = sitofp i32 %61 to float
  %63 = fmul float %62, 0x3EE4F8B580000000
  %64 = load i32, i32* %40, align 4
  %65 = sitofp i32 %64 to float
  %66 = fmul float %65, 0x3EE4F8B580000000
  %67 = load i32, i32* %33, align 16
  %68 = sitofp i32 %67 to float
  %69 = fmul float %68, 0x3EE4F8B580000000
  %70 = load i32, i32* %34, align 4
  %71 = sitofp i32 %70 to float
  %72 = fmul float %71, 0x3EE4F8B580000000
  %73 = bitcast %struct.skcms_Matrix3x3* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %73) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 -1, i64 36, i1 false)
  %74 = call zeroext i1 @skcms_PrimariesToXYZD50(float %51, float %54, float %57, float %60, float %63, float %66, float %69, float %72, %struct.skcms_Matrix3x3* nonnull %9) #13
  br i1 %74, label %75, label %124

75:                                               ; preds = %48
  %76 = load i32, i32* %8, align 4
  %77 = sitofp i32 %76 to float
  %78 = fmul float %77, 0x3EE4F8B580000000
  %79 = fdiv float 1.000000e+00, %78
  %80 = bitcast %struct.skcms_ICCProfile* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1008, i8* nonnull %80) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 0, i64 1008, i1 false) #13
  %81 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 2
  store i32 1380401696, i32* %81, align 4
  %82 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 3
  store i32 1482250784, i32* %82, align 8
  %83 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 5
  store i8 1, i8* %83, align 8
  %84 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 0
  %85 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %84, i64 0, i32 0, i32 0
  store i32 0, i32* %85, align 8
  %86 = bitcast %union.skcms_Curve* %84 to %struct.anon*
  %87 = getelementptr inbounds %struct.anon, %struct.anon* %86, i64 0, i32 1, i32 0
  store float %79, float* %87, align 4
  %88 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 0, i32 0, i32 1
  %89 = bitcast i8** %88 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %89, align 8
  %90 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 0, i32 1
  %91 = bitcast [8 x i8]* %90 to float*
  store float 0.000000e+00, float* %91, align 8
  %92 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 0, i32 1, i64 4
  %93 = bitcast i8* %92 to float*
  store float 0.000000e+00, float* %93, align 4
  %94 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 1
  %95 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %94, i64 0, i32 0, i32 0
  store i32 0, i32* %95, align 8
  %96 = bitcast %union.skcms_Curve* %94 to %struct.anon*
  %97 = getelementptr inbounds %struct.anon, %struct.anon* %96, i64 0, i32 1, i32 0
  store float %79, float* %97, align 4
  %98 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 1, i32 0, i32 1
  %99 = bitcast i8** %98 to float*
  store float 1.000000e+00, float* %99, align 8
  %100 = getelementptr inbounds %struct.anon, %struct.anon* %96, i64 0, i32 1, i32 2
  store float 0.000000e+00, float* %100, align 4
  %101 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 1, i32 0, i32 2
  %102 = bitcast i8** %101 to float*
  store float 0.000000e+00, float* %102, align 8
  %103 = getelementptr inbounds %struct.anon, %struct.anon* %96, i64 0, i32 1, i32 4
  store float 0.000000e+00, float* %103, align 4
  %104 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 1, i32 1
  %105 = bitcast [8 x i8]* %104 to float*
  store float 0.000000e+00, float* %105, align 8
  %106 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 1, i32 1, i64 4
  %107 = bitcast i8* %106 to float*
  store float 0.000000e+00, float* %107, align 4
  %108 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 2
  %109 = getelementptr inbounds %union.skcms_Curve, %union.skcms_Curve* %108, i64 0, i32 0, i32 0
  store i32 0, i32* %109, align 8
  %110 = bitcast %union.skcms_Curve* %108 to %struct.anon*
  %111 = getelementptr inbounds %struct.anon, %struct.anon* %110, i64 0, i32 1, i32 0
  store float %79, float* %111, align 4
  %112 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 2, i32 0, i32 1
  %113 = bitcast i8** %112 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %113, align 8
  %114 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 2, i32 1
  %115 = bitcast [8 x i8]* %114 to float*
  store float 0.000000e+00, float* %115, align 8
  %116 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 6, i64 2, i32 1, i64 4
  %117 = bitcast i8* %116 to float*
  store float 0.000000e+00, float* %117, align 4
  %118 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 7
  store i8 1, i8* %118, align 8
  %119 = getelementptr inbounds %struct.skcms_ICCProfile, %struct.skcms_ICCProfile* %10, i64 0, i32 8
  %120 = bitcast %struct.skcms_Matrix3x3* %119 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* nonnull align 4 %73, i64 36, i1 false) #13
  %121 = call noalias i8* @malloc(i64 1016) #13
  %122 = bitcast i8* %121 to %"class.blink::ColorProfile"*
  call void @_ZN5blink12ColorProfileC1ERK16skcms_ICCProfileNSt3__110unique_ptrIA_hNS4_14default_deleteIS6_EEEE(%"class.blink::ColorProfile"* %122, %struct.skcms_ICCProfile* nonnull dereferenceable(1008) %10, i8* null) #13
  %123 = ptrtoint i8* %121 to i64
  call void @llvm.lifetime.end.p0i8(i64 1008, i8* nonnull %80) #13
  br label %124

124:                                              ; preds = %48, %75
  %125 = phi i64 [ %123, %75 ], [ 0, %48 ]
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %73) #13
  br label %126

126:                                              ; preds = %44, %124
  %127 = phi i64 [ %125, %124 ], [ 0, %44 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %45) #13
  br label %128

128:                                              ; preds = %31, %126
  %129 = phi i64 [ %127, %126 ], [ 0, %31 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #13
  br label %130

130:                                              ; preds = %128, %25
  %131 = phi i64 [ %129, %128 ], [ %30, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #13
  br label %132

132:                                              ; preds = %130, %13
  %133 = phi i64 [ %131, %130 ], [ %17, %13 ]
  %134 = inttoptr i64 %133 to %"class.blink::ColorProfile"*
  ret %"class.blink::ColorProfile"* %134
}

declare void @_ZN5blink12ImageDecoder23SetEmbeddedColorProfileENSt3__110unique_ptrINS_12ColorProfileENS1_14default_deleteIS3_EEEE(%"class.blink::ImageDecoder"*, %"class.blink::ColorProfile"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder11SetBitDepthEv(%"class.blink::PNGImageDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %7, i64 0, i32 0
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %7, i64 0, i32 1
  %11 = load %struct.png_info_def*, %struct.png_info_def** %10, align 8
  %12 = tail call zeroext i8 @cr_png_get_bit_depth(%struct.png_struct_def* %9, %struct.png_info_def* %11) #13
  %13 = zext i8 %12 to i64
  store i64 %13, i64* %2, align 8
  %14 = icmp eq i8 %12, 16
  br i1 %14, label %15, label %24

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, -2
  %23 = zext i1 %22 to i8
  br label %24

24:                                               ; preds = %19, %15, %5
  %25 = phi i8 [ 0, %15 ], [ 0, %5 ], [ %23, %19 ]
  %26 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  store i8 %25, i8* %26, align 2
  br label %27

27:                                               ; preds = %1, %24
  ret void
}

declare zeroext i8 @cr_png_get_bit_depth(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15PNGImageDecoder19ImageIsHighBitDepthEv(%"class.blink::PNGImageDecoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 8
  %3 = load i64, i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %5, label %27

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %7 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %7, i64 0, i32 0
  %9 = load %struct.png_struct_def*, %struct.png_struct_def** %8, align 8
  %10 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %7, i64 0, i32 1
  %11 = load %struct.png_info_def*, %struct.png_info_def** %10, align 8
  %12 = tail call zeroext i8 @cr_png_get_bit_depth(%struct.png_struct_def* %9, %struct.png_info_def* %11) #13
  %13 = zext i8 %12 to i64
  store i64 %13, i64* %2, align 8
  %14 = icmp eq i8 %12, 16
  br i1 %14, label %15, label %24

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 4
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %24

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, -2
  %23 = zext i1 %22 to i8
  br label %24

24:                                               ; preds = %19, %15, %5
  %25 = phi i8 [ 0, %15 ], [ 0, %5 ], [ %23, %19 ]
  %26 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  store i8 %25, i8* %26, align 2
  br label %27

27:                                               ; preds = %1, %24
  %28 = phi i64 [ %3, %1 ], [ %13, %24 ]
  %29 = icmp eq i64 %28, 16
  br i1 %29, label %30, label %34

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 4
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, -2
  br label %34

34:                                               ; preds = %30, %27
  %35 = phi i1 [ false, %27 ], [ %33, %30 ]
  ret i1 %35
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink15PNGImageDecoder7SetSizeEjj(%"class.blink::PNGImageDecoder"*, i32, i32) unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, 1000001
  %5 = icmp ult i32 %2, 1000001
  %6 = and i1 %4, %5
  br i1 %6, label %7, label %54

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %9 = bitcast %"class.blink::PNGImageDecoder"* %0 to i1 (%"class.blink::ImageDecoder"*)***
  %10 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %10, i64 3
  %12 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::ImageDecoder"* %8) #13
  br i1 %13, label %14, label %19

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 4
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  %18 = select i1 %17, i32 8, i32 4
  br label %19

19:                                               ; preds = %14, %7
  %20 = phi i32 [ 4, %7 ], [ %18, %14 ]
  %21 = lshr i32 %1, 31
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %41, label %23

23:                                               ; preds = %19
  %24 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %1, i32 %2) #13
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = add nuw nsw i32 %21, 2147483647
  %28 = icmp ugt i32 %26, %27
  %29 = or i1 %25, %28
  br i1 %29, label %41, label %30

30:                                               ; preds = %23
  %31 = icmp slt i32 %26, 0
  %32 = sub i32 0, %26
  %33 = select i1 %31, i32 %32, i32 %26
  %34 = tail call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %33, i32 %20) #13
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = lshr i32 %26, 31
  %38 = add nuw i32 %37, 2147483647
  %39 = icmp ugt i32 %36, %38
  %40 = or i1 %35, %39
  br i1 %40, label %41, label %46

41:                                               ; preds = %30, %23, %19
  %42 = load i1 (%"class.blink::ImageDecoder"*)**, i1 (%"class.blink::ImageDecoder"*)*** %9, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %42, i64 21
  %44 = load i1 (%"class.blink::ImageDecoder"*)*, i1 (%"class.blink::ImageDecoder"*)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::ImageDecoder"* %8) #13
  br label %54

46:                                               ; preds = %30
  %47 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 12
  %48 = bitcast %"class.blink::IntSize"* %47 to i64*
  %49 = zext i32 %2 to i64
  %50 = shl nuw i64 %49, 32
  %51 = zext i32 %1 to i64
  %52 = or i64 %50, %51
  store i64 %52, i64* %48, align 4
  %53 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 13
  store i8 1, i8* %53, align 4
  br label %54

54:                                               ; preds = %46, %41, %3
  %55 = phi i1 [ false, %3 ], [ %45, %41 ], [ true, %46 ]
  ret i1 %55
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder15HeaderAvailableEv(%"class.blink::PNGImageDecoder"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca double, align 8
  %9 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %10, i64 0, i32 0
  %12 = load %struct.png_struct_def*, %struct.png_struct_def** %11, align 8
  %13 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %10, i64 0, i32 1
  %14 = load %struct.png_info_def*, %struct.png_info_def** %13, align 8
  %15 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #13
  store i32 -1431655766, i32* %2, align 4
  %16 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #13
  store i32 -1431655766, i32* %3, align 4
  %17 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #13
  store i32 -1431655766, i32* %4, align 4
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #13
  store i32 -1431655766, i32* %5, align 4
  %19 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #13
  store i32 -1431655766, i32* %6, align 4
  %20 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #13
  store i32 -1431655766, i32* %7, align 4
  %21 = call i32 @cr_png_get_IHDR(%struct.png_struct_def* %12, %struct.png_info_def* %14, i32* nonnull %2, i32* nonnull %3, i32* nonnull %4, i32* nonnull %5, i32* nonnull %6, i32* nonnull %7, i32* null) #13
  %22 = load i32, i32* %5, align 4
  %23 = icmp eq i32 %22, 3
  br i1 %23, label %29, label %24

24:                                               ; preds = %1
  %25 = icmp eq i32 %22, 0
  %26 = load i32, i32* %4, align 4
  %27 = icmp slt i32 %26, 8
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %30

29:                                               ; preds = %24, %1
  call void @cr_png_set_expand(%struct.png_struct_def* %12) #13
  br label %30

30:                                               ; preds = %29, %24
  %31 = call i32 @cr_png_get_valid(%struct.png_struct_def* %12, %struct.png_info_def* %14, i32 16) #13
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  call void @cr_png_set_expand(%struct.png_struct_def* %12) #13
  br label %34

34:                                               ; preds = %30, %33
  %35 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  %36 = load i8, i8* %35, align 2, !range !4
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  call void @cr_png_set_strip_16(%struct.png_struct_def* %12) #13
  br label %39

39:                                               ; preds = %34, %38
  %40 = load i32, i32* %5, align 4
  %41 = and i32 %40, -5
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %39
  call void @cr_png_set_gray_to_rgb(%struct.png_struct_def* %12) #13
  br label %44

44:                                               ; preds = %39, %43
  %45 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 16, i32 0, i32 0, i32 0
  %46 = load %"class.blink::ColorProfile"*, %"class.blink::ColorProfile"** %45, align 8
  %47 = icmp eq %"class.blink::ColorProfile"* %46, null
  br i1 %47, label %48, label %65

48:                                               ; preds = %44
  %49 = bitcast double* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #13
  store double 0xFFFFFFFFFFFFFFFF, double* %8, align 8
  %50 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 5, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %63, label %53

53:                                               ; preds = %48
  %54 = call i32 @cr_png_get_gAMA(%struct.png_struct_def* %12, %struct.png_info_def* %14, double* nonnull %8) #13
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %63, label %56

56:                                               ; preds = %53
  %57 = load double, double* %8, align 8
  %58 = fcmp ole double %57, 0.000000e+00
  %59 = fcmp ogt double %57, 0x40D4F8B51EB851EC
  %60 = or i1 %58, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  store double 4.545500e-01, double* %8, align 8
  call void @cr_png_set_gAMA(%struct.png_struct_def* %12, %struct.png_info_def* %14, double 4.545500e-01) #13
  %62 = load double, double* %8, align 8
  br label %63

63:                                               ; preds = %48, %53, %61, %56
  %64 = phi double [ %57, %56 ], [ %62, %61 ], [ 4.545500e-01, %53 ], [ 4.545500e-01, %48 ]
  call void @cr_png_set_gamma(%struct.png_struct_def* %12, double 2.200000e+00, double %64) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #13
  br label %65

65:                                               ; preds = %44, %63
  %66 = load i32, i32* %6, align 4
  %67 = icmp eq i32 %66, 1
  br i1 %67, label %68, label %70

68:                                               ; preds = %65
  %69 = call i32 @cr_png_set_interlace_handling(%struct.png_struct_def* %12) #13
  br label %70

70:                                               ; preds = %68, %65
  call void @cr_png_read_update_info(%struct.png_struct_def* %12, %struct.png_info_def* %14) #13
  %71 = call zeroext i8 @cr_png_get_channels(%struct.png_struct_def* %12, %struct.png_info_def* %14) #13
  %72 = icmp eq i8 %71, 4
  %73 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 5
  %74 = zext i1 %72 to i8
  store i8 %74, i8* %73, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #13
  ret void
}

declare i32 @cr_png_get_IHDR(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #1

declare void @cr_png_set_expand(%struct.png_struct_def*) local_unnamed_addr #1

declare i32 @cr_png_get_valid(%struct.png_struct_def*, %struct.png_info_def*, i32) local_unnamed_addr #1

declare void @cr_png_set_strip_16(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_set_gray_to_rgb(%struct.png_struct_def*) local_unnamed_addr #1

declare i32 @cr_png_get_gAMA(%struct.png_struct_def*, %struct.png_info_def*, double*) local_unnamed_addr #1

declare void @cr_png_set_gAMA(%struct.png_struct_def*, %struct.png_info_def*, double) local_unnamed_addr #1

declare void @cr_png_set_gamma(%struct.png_struct_def*, double, double) local_unnamed_addr #1

declare i32 @cr_png_set_interlace_handling(%struct.png_struct_def*) local_unnamed_addr #1

declare void @cr_png_read_update_info(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

declare zeroext i8 @cr_png_get_channels(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder12RowAvailableEPhji(%"class.blink::PNGImageDecoder"*, i8*, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.SkPixmap, align 8
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 3
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = icmp ult i64 %7, %12
  br i1 %13, label %14, label %539

14:                                               ; preds = %4
  %15 = trunc i64 %7 to i32
  %16 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %15) #13
  %17 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 5
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %95

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %22, i64 0, i32 0
  %24 = load %struct.png_struct_def*, %struct.png_struct_def** %23, align 8
  %25 = load i64, i64* %6, align 8
  %26 = tail call zeroext i1 @_ZN5blink12ImageDecoder15InitFrameBufferEm(%"class.blink::ImageDecoder"* %8, i64 %25) #13
  br i1 %26, label %30, label %27

27:                                               ; preds = %20
  %28 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %24, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #13
  %29 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %28, i64 0, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %29, i32 1) #15
  unreachable

30:                                               ; preds = %20
  %31 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %21, align 8
  %32 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %31, i64 0, i32 1
  %33 = load %struct.png_info_def*, %struct.png_info_def** %32, align 8
  %34 = tail call zeroext i8 @cr_png_get_interlace_type(%struct.png_struct_def* %24, %struct.png_info_def* %33) #13
  %35 = icmp eq i8 %34, 1
  br i1 %35, label %36, label %93

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 5
  %38 = load i8, i8* %37, align 4, !range !4
  %39 = icmp eq i8 %38, 0
  %40 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 12
  %41 = bitcast %"class.blink::IntSize"* %40 to i64*
  %42 = load i64, i64* %41, align 4
  %43 = shl i64 %42, 32
  %44 = ashr exact i64 %43, 32
  %45 = ashr i64 %42, 32
  %46 = mul nsw i64 %44, %45
  %47 = select i1 %39, i64 3, i64 4
  %48 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %47, i64 %46) #13
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = xor i1 %49, true
  %52 = icmp ult i64 %50, 2147483648
  %53 = and i1 %52, %51
  %54 = trunc i64 %50 to i32
  %55 = select i1 %53, i32 %54, i32 0
  %56 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  %57 = load i8, i8* %56, align 2, !range !4
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %36
  %60 = xor i1 %52, true
  %61 = or i1 %49, %60
  br i1 %61, label %69, label %62

62:                                               ; preds = %59
  %63 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %55, i32 2) #13
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = zext i32 %65 to i64
  br i1 %64, label %69, label %72

67:                                               ; preds = %36
  %68 = and i64 %50, 4294967295
  br i1 %53, label %72, label %69

69:                                               ; preds = %62, %59, %67
  %70 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %24, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #13
  %71 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %70, i64 0, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %71, i32 1) #15
  unreachable

72:                                               ; preds = %62, %67
  %73 = phi i64 [ %66, %62 ], [ %68, %67 ]
  %74 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %21, align 8
  %75 = shl nuw i64 %73, 32
  %76 = ashr exact i64 %75, 32
  %77 = tail call i8* @_Znam(i64 %76) #14
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %77, i8 0, i64 %76, i1 false) #13
  %78 = ptrtoint i8* %77 to i64
  %79 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %74, i64 0, i32 20
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.13", %"class.std::__1::unique_ptr.13"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load i8*, i8** %80, align 8
  %82 = bitcast %"class.std::__1::unique_ptr.13"* %79 to i64*
  store i64 %78, i64* %82, align 8
  %83 = icmp eq i8* %81, null
  br i1 %83, label %85, label %84

84:                                               ; preds = %72
  tail call void @_ZdaPv(i8* nonnull %81) #14
  br label %85

85:                                               ; preds = %72, %84
  %86 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %21, align 8
  %87 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %86, i64 0, i32 20, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = icmp eq i8* %88, null
  br i1 %89, label %90, label %93

90:                                               ; preds = %85
  %91 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %24, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #13
  %92 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %91, i64 0, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %92, i32 1) #15
  unreachable

93:                                               ; preds = %85, %30
  %94 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 6
  store i8 0, i8* %94, align 1
  br label %95

95:                                               ; preds = %93, %14
  %96 = icmp eq i8* %1, null
  br i1 %96, label %539, label %97

97:                                               ; preds = %95
  %98 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 4, i32 1, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp ugt i32 %99, %2
  br i1 %100, label %101, label %539

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 4, i32 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = add i32 %103, %2
  %105 = icmp slt i32 %104, 0
  br i1 %105, label %539, label %106

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 5
  %108 = load i8, i8* %107, align 4, !range !4
  %109 = icmp ne i8 %108, 0
  %110 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %111 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %111, i64 0, i32 20, i32 0, i32 0, i32 0
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, null
  br i1 %114, label %131, label %115

115:                                              ; preds = %106
  %116 = select i1 %109, i32 4, i32 3
  %117 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  %118 = load i8, i8* %117, align 2, !range !4
  %119 = zext i8 %118 to i32
  %120 = shl nuw nsw i32 %116, %119
  %121 = mul i32 %120, %2
  %122 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 12
  %123 = bitcast %"class.blink::IntSize"* %122 to i64*
  %124 = load i64, i64* %123, align 4
  %125 = trunc i64 %124 to i32
  %126 = mul i32 %121, %125
  %127 = zext i32 %126 to i64
  %128 = getelementptr inbounds i8, i8* %113, i64 %127
  %129 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %111, i64 0, i32 0
  %130 = load %struct.png_struct_def*, %struct.png_struct_def** %129, align 8
  tail call void @cr_png_progressive_combine_row(%struct.png_struct_def* %130, i8* %128, i8* nonnull %1) #13
  br label %131

131:                                              ; preds = %106, %115
  %132 = phi i8* [ %128, %115 ], [ %1, %106 ]
  %133 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 4, i32 1, i32 0
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 7
  %136 = load i8, i8* %135, align 2, !range !4
  %137 = icmp eq i8 %136, 0
  %138 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 4, i32 0, i32 0
  %139 = load i32, i32* %138, align 4
  br i1 %137, label %140, label %494

140:                                              ; preds = %131
  %141 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 0, i32 1, i32 0
  %142 = load i8*, i8** %141, align 8
  %143 = sext i32 %104 to i64
  %144 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 0, i32 1, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = mul i64 %145, %143
  %147 = getelementptr inbounds i8, i8* %142, i64 %146
  %148 = shl i32 %139, 2
  %149 = sext i32 %148 to i64
  %150 = getelementptr inbounds i8, i8* %147, i64 %149
  %151 = bitcast i8* %150 to i32*
  br i1 %109, label %182, label %152

152:                                              ; preds = %140
  %153 = sext i32 %134 to i64
  %154 = getelementptr inbounds i32, i32* %151, i64 %153
  %155 = icmp ugt i32* %154, %151
  br i1 %155, label %156, label %453

156:                                              ; preds = %152
  %157 = shl nsw i64 %153, 2
  %158 = add nsw i64 %157, -1
  %159 = and i64 %158, 4
  %160 = icmp eq i64 %159, 0
  br i1 %160, label %161, label %178

161:                                              ; preds = %156
  %162 = load i8, i8* %132, align 1
  %163 = zext i8 %162 to i32
  %164 = getelementptr inbounds i8, i8* %132, i64 1
  %165 = load i8, i8* %164, align 1
  %166 = zext i8 %165 to i32
  %167 = getelementptr inbounds i8, i8* %132, i64 2
  %168 = load i8, i8* %167, align 1
  %169 = zext i8 %168 to i32
  %170 = shl nuw nsw i32 %163, 16
  %171 = shl nuw nsw i32 %166, 8
  %172 = or i32 %170, %171
  %173 = or i32 %172, %169
  %174 = or i32 %173, -16777216
  store i32 %174, i32* %151, align 4
  %175 = getelementptr inbounds i8, i8* %132, i64 3
  %176 = getelementptr inbounds i8, i8* %150, i64 4
  %177 = bitcast i8* %176 to i32*
  br label %178

178:                                              ; preds = %161, %156
  %179 = phi i32* [ %151, %156 ], [ %177, %161 ]
  %180 = phi i8* [ %132, %156 ], [ %175, %161 ]
  %181 = icmp eq i64 %158, 3
  br i1 %181, label %453, label %456

182:                                              ; preds = %140
  %183 = tail call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %8) #13
  %184 = icmp eq %"class.blink::ColorProfileTransform"* %183, null
  br i1 %184, label %185, label %187

185:                                              ; preds = %182
  %186 = sext i32 %134 to i64
  br label %218

187:                                              ; preds = %182
  %188 = load i64, i64* %6, align 8
  %189 = trunc i64 %188 to i32
  %190 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %189) #13
  %191 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %190, i64 0, i32 8
  %192 = load i32, i32* %191, align 4
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %212

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = icmp eq i32* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %194
  %199 = bitcast i32* %196 to i8*
  br label %212

200:                                              ; preds = %194
  %201 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 12
  %202 = bitcast %"class.blink::IntSize"* %201 to i64*
  %203 = load i64, i64* %202, align 4
  %204 = shl i64 %203, 32
  %205 = ashr exact i64 %204, 32
  %206 = tail call { i64, i1 } @llvm.umul.with.overflow.i64(i64 %205, i64 4)
  %207 = extractvalue { i64, i1 } %206, 1
  %208 = extractvalue { i64, i1 } %206, 0
  %209 = select i1 %207, i64 -1, i64 %208
  %210 = tail call i8* @_Znam(i64 %209) #14
  %211 = bitcast i32** %195 to i8**
  store i8* %210, i8** %211, align 8
  br label %212

212:                                              ; preds = %200, %198, %187
  %213 = phi i8* [ %150, %187 ], [ %199, %198 ], [ %210, %200 ]
  %214 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %183) #13
  %215 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %183) #13
  %216 = sext i32 %134 to i64
  %217 = tail call zeroext i1 @skcms_Transform(i8* %132, i32 12, i32 1, %struct.skcms_ICCProfile* %214, i8* %213, i32 12, i32 1, %struct.skcms_ICCProfile* %215, i64 %216) #13
  br label %218

218:                                              ; preds = %185, %212
  %219 = phi i64 [ %186, %185 ], [ %216, %212 ]
  %220 = phi i8* [ %132, %185 ], [ %213, %212 ]
  %221 = load i64, i64* %6, align 8
  %222 = trunc i64 %221 to i32
  %223 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %9, i32 %222) #13
  %224 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %223, i64 0, i32 8
  %225 = load i32, i32* %224, align 4
  %226 = icmp eq i32 %225, 1
  %227 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 9
  %228 = load i8, i8* %227, align 8, !range !4
  %229 = icmp ne i8 %228, 0
  %230 = getelementptr inbounds i32, i32* %151, i64 %219
  %231 = icmp ugt i32* %230, %151
  br i1 %226, label %232, label %338

232:                                              ; preds = %218
  br i1 %229, label %243, label %233

233:                                              ; preds = %232
  br i1 %231, label %234, label %537

234:                                              ; preds = %233
  %235 = shl nsw i64 %219, 2
  %236 = add nsw i64 %235, -1
  %237 = lshr i64 %236, 2
  %238 = add nuw nsw i64 %237, 1
  %239 = and i64 %238, 1
  %240 = icmp eq i64 %237, 0
  br i1 %240, label %421, label %241

241:                                              ; preds = %234
  %242 = sub nuw nsw i64 %238, %239
  br label %287

243:                                              ; preds = %232
  br i1 %231, label %244, label %537

244:                                              ; preds = %243, %271
  %245 = phi i32* [ %284, %271 ], [ %151, %243 ]
  %246 = phi i32 [ %283, %271 ], [ 255, %243 ]
  %247 = phi i8* [ %285, %271 ], [ %220, %243 ]
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds i8, i8* %247, i64 1
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i32
  %253 = getelementptr inbounds i8, i8* %247, i64 2
  %254 = load i8, i8* %253, align 1
  %255 = zext i8 %254 to i32
  %256 = getelementptr inbounds i8, i8* %247, i64 3
  %257 = load i8, i8* %256, align 1
  %258 = zext i8 %257 to i32
  %259 = icmp eq i8 %257, -1
  br i1 %259, label %271, label %260

260:                                              ; preds = %244
  %261 = mul nuw nsw i32 %258, 257
  %262 = mul nuw nsw i32 %261, %249
  %263 = add nuw nsw i32 %262, 32896
  %264 = lshr i32 %263, 16
  %265 = mul nuw nsw i32 %261, %252
  %266 = add nuw nsw i32 %265, 32896
  %267 = lshr i32 %266, 16
  %268 = mul nuw nsw i32 %261, %255
  %269 = add nuw nsw i32 %268, 32896
  %270 = lshr i32 %269, 16
  br label %271

271:                                              ; preds = %244, %260
  %272 = phi i32 [ %270, %260 ], [ %255, %244 ]
  %273 = phi i32 [ %267, %260 ], [ %252, %244 ]
  %274 = phi i32 [ %264, %260 ], [ %249, %244 ]
  %275 = shl nuw i32 %258, 24
  %276 = shl nuw nsw i32 %274, 16
  %277 = shl nuw nsw i32 %273, 8
  %278 = or i32 %272, %275
  %279 = or i32 %278, %277
  %280 = or i32 %279, %276
  store i32 %280, i32* %245, align 4
  %281 = load i8, i8* %256, align 1
  %282 = zext i8 %281 to i32
  %283 = and i32 %246, %282
  %284 = getelementptr inbounds i32, i32* %245, i64 1
  %285 = getelementptr inbounds i8, i8* %247, i64 4
  %286 = icmp ult i32* %284, %230
  br i1 %286, label %244, label %448

287:                                              ; preds = %287, %241
  %288 = phi i32* [ %151, %241 ], [ %334, %287 ]
  %289 = phi i32 [ 255, %241 ], [ %333, %287 ]
  %290 = phi i8* [ %220, %241 ], [ %335, %287 ]
  %291 = phi i64 [ %242, %241 ], [ %336, %287 ]
  %292 = load i8, i8* %290, align 1
  %293 = zext i8 %292 to i32
  %294 = getelementptr inbounds i8, i8* %290, i64 1
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = getelementptr inbounds i8, i8* %290, i64 2
  %298 = load i8, i8* %297, align 1
  %299 = zext i8 %298 to i32
  %300 = getelementptr inbounds i8, i8* %290, i64 3
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = shl nuw i32 %302, 24
  %304 = shl nuw nsw i32 %293, 16
  %305 = shl nuw nsw i32 %296, 8
  %306 = or i32 %305, %304
  %307 = or i32 %306, %299
  %308 = or i32 %307, %303
  store i32 %308, i32* %288, align 4
  %309 = load i8, i8* %300, align 1
  %310 = zext i8 %309 to i32
  %311 = and i32 %289, %310
  %312 = getelementptr inbounds i32, i32* %288, i64 1
  %313 = getelementptr inbounds i8, i8* %290, i64 4
  %314 = load i8, i8* %313, align 1
  %315 = zext i8 %314 to i32
  %316 = getelementptr inbounds i8, i8* %290, i64 5
  %317 = load i8, i8* %316, align 1
  %318 = zext i8 %317 to i32
  %319 = getelementptr inbounds i8, i8* %290, i64 6
  %320 = load i8, i8* %319, align 1
  %321 = zext i8 %320 to i32
  %322 = getelementptr inbounds i8, i8* %290, i64 7
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl nuw i32 %324, 24
  %326 = shl nuw nsw i32 %315, 16
  %327 = shl nuw nsw i32 %318, 8
  %328 = or i32 %327, %326
  %329 = or i32 %328, %321
  %330 = or i32 %329, %325
  store i32 %330, i32* %312, align 4
  %331 = load i8, i8* %322, align 1
  %332 = zext i8 %331 to i32
  %333 = and i32 %311, %332
  %334 = getelementptr inbounds i32, i32* %288, i64 2
  %335 = getelementptr inbounds i8, i8* %290, i64 8
  %336 = add i64 %291, -2
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %421, label %287

338:                                              ; preds = %218
  br i1 %229, label %340, label %339

339:                                              ; preds = %338
  br i1 %231, label %400, label %537

340:                                              ; preds = %338
  br i1 %231, label %341, label %537

341:                                              ; preds = %340, %393
  %342 = phi i32* [ %397, %393 ], [ %151, %340 ]
  %343 = phi i32 [ %396, %393 ], [ 255, %340 ]
  %344 = phi i8* [ %398, %393 ], [ %220, %340 ]
  %345 = load i8, i8* %344, align 1
  %346 = zext i8 %345 to i32
  %347 = getelementptr inbounds i8, i8* %344, i64 1
  %348 = load i8, i8* %347, align 1
  %349 = zext i8 %348 to i32
  %350 = getelementptr inbounds i8, i8* %344, i64 2
  %351 = load i8, i8* %350, align 1
  %352 = zext i8 %351 to i32
  %353 = getelementptr inbounds i8, i8* %344, i64 3
  %354 = load i8, i8* %353, align 1
  %355 = zext i8 %354 to i32
  switch i8 %354, label %362 [
    i8 0, label %393
    i8 -1, label %356
  ]

356:                                              ; preds = %341
  %357 = shl nuw nsw i32 %346, 16
  %358 = shl nuw nsw i32 %349, 8
  %359 = or i32 %357, %352
  %360 = or i32 %359, %358
  %361 = or i32 %360, -16777216
  br label %391

362:                                              ; preds = %341
  %363 = mul nuw nsw i32 %355, 257
  %364 = mul nuw nsw i32 %363, %346
  %365 = add nuw nsw i32 %364, 32896
  %366 = and i32 %365, 67043328
  %367 = mul nuw nsw i32 %363, %349
  %368 = add nuw nsw i32 %367, 32896
  %369 = lshr i32 %368, 16
  %370 = mul nuw nsw i32 %363, %352
  %371 = add nuw nsw i32 %370, 32896
  %372 = lshr i32 %371, 16
  %373 = shl nuw i32 %355, 24
  %374 = shl nuw nsw i32 %369, 8
  %375 = or i32 %372, %373
  %376 = or i32 %375, %366
  %377 = or i32 %376, %374
  %378 = load i32, i32* %342, align 4
  %379 = lshr i32 %376, 24
  %380 = sub nuw nsw i32 256, %379
  %381 = and i32 %378, 16711935
  %382 = mul i32 %381, %380
  %383 = lshr i32 %382, 8
  %384 = lshr i32 %378, 8
  %385 = and i32 %384, 16711935
  %386 = mul i32 %385, %380
  %387 = and i32 %383, 16711935
  %388 = and i32 %386, -16711936
  %389 = or i32 %387, %388
  %390 = add i32 %389, %377
  br label %391

391:                                              ; preds = %362, %356
  %392 = phi i32 [ %361, %356 ], [ %390, %362 ]
  store i32 %392, i32* %342, align 4
  br label %393

393:                                              ; preds = %391, %341
  %394 = load i8, i8* %353, align 1
  %395 = zext i8 %394 to i32
  %396 = and i32 %343, %395
  %397 = getelementptr inbounds i32, i32* %342, i64 1
  %398 = getelementptr inbounds i8, i8* %344, i64 4
  %399 = icmp ult i32* %397, %230
  br i1 %399, label %341, label %448

400:                                              ; preds = %339, %400
  %401 = phi i32* [ %418, %400 ], [ %151, %339 ]
  %402 = phi i32 [ %417, %400 ], [ 255, %339 ]
  %403 = phi i8* [ %419, %400 ], [ %220, %339 ]
  %404 = load i8, i8* %403, align 1
  %405 = zext i8 %404 to i32
  %406 = getelementptr inbounds i8, i8* %403, i64 1
  %407 = load i8, i8* %406, align 1
  %408 = zext i8 %407 to i32
  %409 = getelementptr inbounds i8, i8* %403, i64 2
  %410 = load i8, i8* %409, align 1
  %411 = zext i8 %410 to i32
  %412 = getelementptr inbounds i8, i8* %403, i64 3
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  tail call void @_ZN5blink10ImageFrame12BlendRGBARawEPjjjjj(i32* %401, i32 %405, i32 %408, i32 %411, i32 %414) #13
  %415 = load i8, i8* %412, align 1
  %416 = zext i8 %415 to i32
  %417 = and i32 %402, %416
  %418 = getelementptr inbounds i32, i32* %401, i64 1
  %419 = getelementptr inbounds i8, i8* %403, i64 4
  %420 = icmp ult i32* %418, %230
  br i1 %420, label %400, label %448

421:                                              ; preds = %287, %234
  %422 = phi i32 [ undef, %234 ], [ %333, %287 ]
  %423 = phi i32* [ %151, %234 ], [ %334, %287 ]
  %424 = phi i32 [ 255, %234 ], [ %333, %287 ]
  %425 = phi i8* [ %220, %234 ], [ %335, %287 ]
  %426 = icmp eq i64 %239, 0
  br i1 %426, label %448, label %427

427:                                              ; preds = %421
  %428 = load i8, i8* %425, align 1
  %429 = zext i8 %428 to i32
  %430 = getelementptr inbounds i8, i8* %425, i64 1
  %431 = load i8, i8* %430, align 1
  %432 = zext i8 %431 to i32
  %433 = getelementptr inbounds i8, i8* %425, i64 2
  %434 = load i8, i8* %433, align 1
  %435 = zext i8 %434 to i32
  %436 = getelementptr inbounds i8, i8* %425, i64 3
  %437 = load i8, i8* %436, align 1
  %438 = zext i8 %437 to i32
  %439 = shl nuw i32 %438, 24
  %440 = shl nuw nsw i32 %429, 16
  %441 = shl nuw nsw i32 %432, 8
  %442 = or i32 %441, %440
  %443 = or i32 %442, %435
  %444 = or i32 %443, %439
  store i32 %444, i32* %423, align 4
  %445 = load i8, i8* %436, align 1
  %446 = zext i8 %445 to i32
  %447 = and i32 %424, %446
  br label %448

448:                                              ; preds = %400, %393, %427, %421, %271
  %449 = phi i32 [ %283, %271 ], [ %422, %421 ], [ %447, %427 ], [ %396, %393 ], [ %417, %400 ]
  %450 = icmp eq i32 %449, 255
  br i1 %450, label %537, label %451

451:                                              ; preds = %448
  %452 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 6
  store i8 1, i8* %452, align 1
  br label %537

453:                                              ; preds = %178, %456, %152
  %454 = tail call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %8) #13
  %455 = icmp eq %"class.blink::ColorProfileTransform"* %454, null
  br i1 %455, label %537, label %490

456:                                              ; preds = %178, %456
  %457 = phi i32* [ %488, %456 ], [ %179, %178 ]
  %458 = phi i8* [ %487, %456 ], [ %180, %178 ]
  %459 = load i8, i8* %458, align 1
  %460 = zext i8 %459 to i32
  %461 = getelementptr inbounds i8, i8* %458, i64 1
  %462 = load i8, i8* %461, align 1
  %463 = zext i8 %462 to i32
  %464 = getelementptr inbounds i8, i8* %458, i64 2
  %465 = load i8, i8* %464, align 1
  %466 = zext i8 %465 to i32
  %467 = shl nuw nsw i32 %460, 16
  %468 = shl nuw nsw i32 %463, 8
  %469 = or i32 %467, %468
  %470 = or i32 %469, %466
  %471 = or i32 %470, -16777216
  store i32 %471, i32* %457, align 4
  %472 = getelementptr inbounds i8, i8* %458, i64 3
  %473 = getelementptr inbounds i32, i32* %457, i64 1
  %474 = load i8, i8* %472, align 1
  %475 = zext i8 %474 to i32
  %476 = getelementptr inbounds i8, i8* %458, i64 4
  %477 = load i8, i8* %476, align 1
  %478 = zext i8 %477 to i32
  %479 = getelementptr inbounds i8, i8* %458, i64 5
  %480 = load i8, i8* %479, align 1
  %481 = zext i8 %480 to i32
  %482 = shl nuw nsw i32 %475, 16
  %483 = shl nuw nsw i32 %478, 8
  %484 = or i32 %482, %483
  %485 = or i32 %484, %481
  %486 = or i32 %485, -16777216
  store i32 %486, i32* %473, align 4
  %487 = getelementptr inbounds i8, i8* %458, i64 6
  %488 = getelementptr inbounds i32, i32* %457, i64 2
  %489 = icmp ult i32* %488, %154
  br i1 %489, label %456, label %453

490:                                              ; preds = %453
  %491 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %454) #13
  %492 = tail call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %454) #13
  %493 = tail call zeroext i1 @skcms_Transform(i8* %150, i32 13, i32 1, %struct.skcms_ICCProfile* %491, i8* %150, i32 13, i32 1, %struct.skcms_ICCProfile* %492, i64 %153) #13
  br label %537

494:                                              ; preds = %131
  %495 = bitcast %class.SkPixmap* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %495) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %495, i8 0, i64 40, i1 false) #13
  %496 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 0
  %497 = call zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap* %496, %class.SkPixmap* nonnull %5) #13
  %498 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 0
  %499 = load i8*, i8** %498, align 8
  %500 = sext i32 %104 to i64
  %501 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 1
  %502 = load i64, i64* %501, align 8
  %503 = mul i64 %502, %500
  %504 = getelementptr inbounds i8, i8* %499, i64 %503
  %505 = shl i32 %139, 3
  %506 = sext i32 %505 to i64
  %507 = getelementptr inbounds i8, i8* %504, i64 %506
  %508 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %509 = load %class.SkColorSpace*, %class.SkColorSpace** %508, align 8
  %510 = icmp eq %class.SkColorSpace* %509, null
  br i1 %510, label %517, label %511

511:                                              ; preds = %494
  %512 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %509, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %513 = atomicrmw add i32* %512, i32 -1 acq_rel
  %514 = icmp eq i32 %513, 1
  br i1 %514, label %515, label %517

515:                                              ; preds = %511
  %516 = bitcast %class.SkColorSpace* %509 to i8*
  call void @_ZdlPv(i8* %516) #14
  br label %517

517:                                              ; preds = %494, %511, %515
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %495) #13
  %518 = call %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"* %8) #13
  %519 = icmp eq %"class.blink::ColorProfileTransform"* %518, null
  br i1 %519, label %523, label %520

520:                                              ; preds = %517
  %521 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"* nonnull %518) #13
  %522 = call %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"* nonnull %518) #13
  br label %523

523:                                              ; preds = %517, %520
  %524 = phi %struct.skcms_ICCProfile* [ %521, %520 ], [ null, %517 ]
  %525 = phi %struct.skcms_ICCProfile* [ %522, %520 ], [ null, %517 ]
  %526 = select i1 %109, i32 24, i32 22
  br i1 %109, label %527, label %532

527:                                              ; preds = %523
  %528 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 9
  %529 = load i8, i8* %528, align 8, !range !4
  %530 = icmp eq i8 %529, 0
  %531 = select i1 %530, i32 1, i32 2
  br label %532

532:                                              ; preds = %527, %523
  %533 = phi i32 [ 1, %523 ], [ %531, %527 ]
  %534 = sext i32 %134 to i64
  %535 = call zeroext i1 @skcms_Transform(i8* %132, i32 %526, i32 1, %struct.skcms_ICCProfile* %524, i8* %507, i32 32, i32 %533, %struct.skcms_ICCProfile* %525, i64 %534) #13
  %536 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 6
  store i8 %108, i8* %536, align 1
  br label %537

537:                                              ; preds = %339, %340, %233, %243, %448, %451, %453, %490, %532
  %538 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %16, i64 0, i32 10
  store i8 1, i8* %538, align 1
  br label %539

539:                                              ; preds = %95, %97, %101, %537, %4
  ret void
}

declare zeroext i1 @_ZN5blink12ImageDecoder15InitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

; Function Attrs: noreturn nounwind
declare void @__longjmp_chk(%struct.__jmp_buf_tag*, i32) #6

declare [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def*, void (%struct.__jmp_buf_tag*, i32)*, i64) local_unnamed_addr #1

declare zeroext i8 @cr_png_get_interlace_type(%struct.png_struct_def*, %struct.png_info_def*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder4SizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 12
  %3 = bitcast %"class.blink::IntSize"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  ret i64 %4
}

declare void @cr_png_progressive_combine_row(%struct.png_struct_def*, i8*, i8*) local_unnamed_addr #1

declare %"class.blink::ColorProfileTransform"* @_ZN5blink12ImageDecoder14ColorTransformEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.umul.with.overflow.i64(i64, i64) #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #8

declare zeroext i1 @skcms_Transform(i8*, i32, i32, %struct.skcms_ICCProfile*, i8*, i32, i32, %struct.skcms_ICCProfile*, i64) local_unnamed_addr #1

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10SrcProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #1

declare %struct.skcms_ICCProfile* @_ZNK5blink21ColorProfileTransform10DstProfileEv(%"class.blink::ColorProfileTransform"*) local_unnamed_addr #1

declare void @_ZN5blink10ImageFrame12BlendRGBARawEPjjjjj(i32*, i32, i32, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink15PNGImageDecoder13FrameCompleteEv(%"class.blink::PNGImageDecoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 3
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %6 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = zext i32 %7 to i64
  %9 = icmp ult i64 %3, %8
  br i1 %9, label %10, label %38

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %12 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %12, i64 0, i32 20, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %18, label %16

16:                                               ; preds = %10
  store i8* null, i8** %13, align 8
  tail call void @_ZdaPv(i8* nonnull %14) #14
  %17 = load i64, i64* %2, align 8
  br label %18

18:                                               ; preds = %10, %16
  %19 = phi i64 [ %3, %10 ], [ %17, %16 ]
  %20 = trunc i64 %19 to i32
  %21 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %5, i32 %20) #13
  %22 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %21, i64 0, i32 5
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %31

25:                                               ; preds = %18
  %26 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %11, align 8
  %27 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %26, i64 0, i32 0
  %28 = load %struct.png_struct_def*, %struct.png_struct_def** %27, align 8
  %29 = tail call [1 x %struct.__jmp_buf_tag]* @cr_png_set_longjmp_fn(%struct.png_struct_def* %28, void (%struct.__jmp_buf_tag*, i32)* nonnull @__longjmp_chk, i64 200) #13
  %30 = getelementptr inbounds [1 x %struct.__jmp_buf_tag], [1 x %struct.__jmp_buf_tag]* %29, i64 0, i64 0
  tail call void @__longjmp_chk(%struct.__jmp_buf_tag* %30, i32 1) #15
  unreachable

31:                                               ; preds = %18
  %32 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 6
  %33 = load i8, i8* %32, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = load i64, i64* %2, align 8
  tail call void @_ZN5blink12ImageDecoder37CorrectAlphaWhenFrameBufferSawNoAlphaEm(%"class.blink::ImageDecoder"* %4, i64 %36) #13
  br label %37

37:                                               ; preds = %31, %35
  tail call void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"* %21, i32 3) #13
  br label %38

38:                                               ; preds = %1, %37
  ret void
}

declare void @_ZN5blink12ImageDecoder37CorrectAlphaWhenFrameBufferSawNoAlphaEm(%"class.blink::ImageDecoder"*, i64) local_unnamed_addr #1

declare void @_ZN5blink10ImageFrame9SetStatusENS0_6StatusE(%"class.blink::ImageFrame"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink15PNGImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 15
  %5 = load i8, i8* %4, align 2, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %36

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 13
  %9 = load i8, i8* %8, align 4, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %36, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %13 = load %"class.blink::PNGImageReader"*, %"class.blink::PNGImageReader"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %13, i64 0, i32 15
  %15 = load i8, i8* %14, align 1, !range !4
  %16 = icmp ne i8 %15, 0
  %17 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %13, i64 0, i32 22, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 1
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %23

21:                                               ; preds = %11
  %22 = tail call zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"* %3, i64 %1) #13
  br label %36

23:                                               ; preds = %11
  %24 = icmp eq i64 %1, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %23
  %26 = icmp eq i32 %18, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.blink::PNGImageReader", %"class.blink::PNGImageReader"* %13, i64 0, i32 22
  %29 = tail call dereferenceable(48) %"struct.blink::PNGImageReader::FrameInfo"* @_ZNK3WTF6VectorIN5blink14PNGImageReader9FrameInfoELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"* %28, i32 0) #13
  %30 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %29, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp ne i64 %31, 1
  br label %36

33:                                               ; preds = %23
  %34 = zext i32 %18 to i64
  %35 = icmp ugt i64 %34, %1
  br label %36

36:                                               ; preds = %7, %2, %33, %27, %25, %21
  %37 = phi i1 [ %22, %21 ], [ false, %7 ], [ %35, %33 ], [ false, %25 ], [ %32, %27 ], [ false, %2 ]
  ret i1 %37
}

declare zeroext i1 @_ZNK5blink12ImageDecoder22FrameIsReceivedAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink15PNGImageDecoder20FrameDurationAtIndexEm(%"class.blink::PNGImageDecoder"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = zext i32 %4 to i64
  %6 = icmp ugt i64 %5, %1
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::PNGImageDecoder", %"class.blink::PNGImageDecoder"* %0, i64 0, i32 0, i32 2
  %9 = trunc i64 %1 to i32
  %10 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %9) #13
  %11 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %10, i64 0, i32 6, i32 0
  %12 = load i64, i64* %11, align 8
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i64 [ %12, %7 ], [ 0, %2 ]
  ret i64 %14
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink15PNGImageDecoder17FilenameExtensionEv(%"class.blink::PNGImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.2, i64 0, i64 0), i64 3) #13
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder9OnSetDataEPNS_13SegmentReaderE(%"class.blink::ImageDecoder"*, %"class.blink::SegmentReader"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12ImageDecoder23GetSupportedDecodeSizesEv(%"class.WTF::Vector.56"* noalias sret, %"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.WTF::Vector.56"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder11DecodedSizeEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %3 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %2, align 8
  %4 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %3, i64 5
  %5 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, align 8
  %6 = tail call i64 %5(%"class.blink::ImageDecoder"* %0) #13
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder17GetYUVSubsamplingEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder14DecodedYUVSizeEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder20DecodedYUVWidthBytesEN2cc8YUVIndexE(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12ImageDecoder16GetYUVColorSpaceEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i32 10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink12ImageDecoder14GetYUVBitDepthEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i8 8
}

declare void @_ZNK5blink12ImageDecoder33MakeMetadataForDecodeAccelerationEv(%"struct.cc::ImageHeaderMetadata"* sret, %"class.blink::ImageDecoder"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12ImageDecoder16FrameSizeAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::ImageDecoder"* %0 to i64 (%"class.blink::ImageDecoder"*)***
  %4 = load i64 (%"class.blink::ImageDecoder"*)**, i64 (%"class.blink::ImageDecoder"*)*** %3, align 8
  %5 = getelementptr inbounds i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %4, i64 5
  %6 = load i64 (%"class.blink::ImageDecoder"*)*, i64 (%"class.blink::ImageDecoder"*)** %5, align 8
  %7 = tail call i64 %6(%"class.blink::ImageDecoder"* %0) #13
  ret i64 %7
}

declare zeroext i1 @_ZNK5blink12ImageDecoder20FrameHasAlphaAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

declare i64 @_ZNK5blink12ImageDecoder17FrameBytesAtIndexEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

declare i64 @_ZN5blink12ImageDecoder21ClearCacheExceptFrameEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder7HotSpotERNS_8IntPointE(%"class.blink::ImageDecoder"*, %"class.blink::IntPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder18SetMemoryAllocatorEPN8SkBitmap9AllocatorE(%"class.blink::ImageDecoder"*, %"class.SkBitmap::Allocator"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = tail call i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"* %0) #13
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %7, %2
  %11 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 0) #13
  %12 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %11, i64 0, i32 1
  store %"class.SkBitmap::Allocator"* %1, %"class.SkBitmap::Allocator"** %12, align 8
  br label %13

13:                                               ; preds = %7, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder11DecodeToYUVEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12ImageDecoder37ImageHasBothStillAndAnimatedSubImagesEv(%"class.blink::ImageDecoder"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15PNGImageDecoder10DecodeSizeEv(%"class.blink::PNGImageDecoder"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5blink15PNGImageDecoder5ParseENS_14PNGImageReader10ParseQueryE(%"class.blink::PNGImageDecoder"* %0, i32 0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12ImageDecoder34FrameStatusSufficientForSuccessorsEj(%"class.blink::ImageDecoder"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::ImageDecoder", %"class.blink::ImageDecoder"* %0, i64 0, i32 2
  %4 = tail call dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %3, i32 %1) #13
  %5 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %4, i64 0, i32 5
  %6 = load i32, i32* %5, align 8
  %7 = or i32 %6, 1
  %8 = icmp eq i32 %7, 3
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12ImageDecoder17OnInitFrameBufferEm(%"class.blink::ImageDecoder"*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #9

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer"*, %"class.blink::ImageFrame"*) local_unnamed_addr #11 comdat align 2 {
  %3 = bitcast %"class.blink::ImageFrame"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #13
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

declare %struct.skcms_ICCProfile* @skcms_sRGB_profile() local_unnamed_addr #1

declare i32 @cr_png_get_iCCP(%struct.png_struct_def*, %struct.png_info_def*, i8**, i32*, i8**, i32*) local_unnamed_addr #1

declare %"class.blink::ColorProfile"* @_ZN5blink12ColorProfile6CreateEPKvm(i8*, i64) local_unnamed_addr #1

declare i32 @cr_png_get_cHRM_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32*, i32*, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #1

declare i32 @cr_png_get_gAMA_fixed(%struct.png_struct_def*, %struct.png_info_def*, i32*) local_unnamed_addr #1

declare zeroext i1 @skcms_PrimariesToXYZD50(float, float, float, float, float, float, float, float, %struct.skcms_Matrix3x3*) local_unnamed_addr #1

declare void @_ZN5blink12ColorProfileC1ERK16skcms_ICCProfileNSt3__110unique_ptrIA_hNS4_14default_deleteIS6_EEEE(%"class.blink::ColorProfile"*, %struct.skcms_ICCProfile* dereferenceable(1008), i8*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #7

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #10

declare zeroext i1 @_ZNK8SkBitmap10peekPixelsEP8SkPixmap(%class.SkBitmap*, %class.SkPixmap*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(48) %"struct.blink::PNGImageReader::FrameInfo"* @_ZNK3WTF6VectorIN5blink14PNGImageReader9FrameInfoELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.31"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector.31", %"class.WTF::Vector.31"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.blink::PNGImageReader::FrameInfo"*, %"struct.blink::PNGImageReader::FrameInfo"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.blink::PNGImageReader::FrameInfo", %"struct.blink::PNGImageReader::FrameInfo"* %24, i64 %25
  ret %"struct.blink::PNGImageReader::FrameInfo"* %26
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare i64 @_ZN5blink12ImageDecoder10FrameCountEv(%"class.blink::ImageDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZN3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

; Function Attrs: nounwind
declare void @_ZN5blink14PNGImageReaderD1Ev(%"class.blink::PNGImageReader"*) unnamed_addr #9

declare void @_ZN5blink14PNGImageReaderC1EPNS_15PNGImageDecoderEm(%"class.blink::PNGImageReader"*, %"class.blink::PNGImageDecoder"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(128) %"class.blink::ImageFrame"* @_ZNK3WTF6VectorIN5blink10ImageFrameELj1ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #13
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #13
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #13
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i8* %14, i8* %15) #13
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #13
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.1, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #13
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #13
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::ImageFrame"*, %"class.blink::ImageFrame"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::ImageFrame", %"class.blink::ImageFrame"* %24, i64 %25
  ret %"class.blink::ImageFrame"* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i8 0, i8 2}
