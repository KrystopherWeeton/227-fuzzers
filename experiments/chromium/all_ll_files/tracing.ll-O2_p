; ModuleID = 'gen/headless/public/devtools/domains/tracing.cc'
source_filename = "gen/headless/public/devtools/domains/tracing.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.headless::tracing::Domain" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8, [7 x i8] }>
%"class.base::ObserverList" = type <{ %"class.std::__1::vector", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.headless::internal::MessageDispatcher" = type { i32 (...)** }
%"class.headless::tracing::ExperimentalDomain" = type { %"class.headless::tracing::Domain.base", [7 x i8] }
%"class.headless::tracing::Domain.base" = type <{ %"class.headless::internal::MessageDispatcher"*, %"class.base::ObserverList", i8 }>
%"class.headless::tracing::Observer" = type { %"class.headless::tracing::ExperimentalObserver" }
%"class.headless::tracing::ExperimentalObserver" = type { i32 (...)** }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.2" }
%"union.absl::variant_internal::DestructibleUnionImpl.2" = type { %"union.absl::variant_internal::DestructibleUnionImpl.3" }
%"union.absl::variant_internal::DestructibleUnionImpl.3" = type { %"union.absl::variant_internal::DestructibleUnionImpl.4" }
%"union.absl::variant_internal::DestructibleUnionImpl.4" = type { %"union.absl::variant_internal::DestructibleUnionImpl.5" }
%"union.absl::variant_internal::DestructibleUnionImpl.5" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.headless::ErrorReporter" = type { %"class.std::__1::vector.165", %"class.std::__1::vector.118" }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { i8**, i8**, %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { i8** }
%"class.std::__1::vector.118" = type { %"class.std::__1::__vector_base.119" }
%"class.std::__1::__vector_base.119" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.std::__1::basic_string"* }
%"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter" = type { %"class.base::internal::WeakLinkNode", i64, i64 }
%"class.base::internal::WeakLinkNode" = type { %"class.base::LinkNode", %"class.base::ObserverList"* }
%"class.headless::tracing::BufferUsageParams" = type { %"class.absl::optional.80", %"class.absl::optional.80", %"class.absl::optional.80" }
%"class.absl::optional.80" = type { %"class.absl::optional_internal::optional_data.81" }
%"class.absl::optional_internal::optional_data.81" = type { %"class.absl::optional_internal::optional_data_base.82" }
%"class.absl::optional_internal::optional_data_base.82" = type { %"class.absl::optional_internal::optional_data_dtor_base.83" }
%"class.absl::optional_internal::optional_data_dtor_base.83" = type { i8, %union.anon.84 }
%union.anon.84 = type { double }
%"class.headless::tracing::DataCollectedParams" = type { %"class.std::__1::vector.205" }
%"class.std::__1::vector.205" = type { %"class.std::__1::__vector_base.206" }
%"class.std::__1::__vector_base.206" = type { %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"*, %"class.std::__1::__compressed_pair.207" }
%"class.std::__1::unique_ptr.39" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.base::Value"* }
%"class.std::__1::__compressed_pair.207" = type { %"struct.std::__1::__compressed_pair_elem.208" }
%"struct.std::__1::__compressed_pair_elem.208" = type { %"class.std::__1::unique_ptr.39"* }
%"class.headless::tracing::TracingCompleteParams" = type { i8, %"class.absl::optional.75", %"class.absl::optional.90", %"class.absl::optional.95" }
%"class.absl::optional.75" = type { %"class.absl::optional_internal::optional_data.76" }
%"class.absl::optional_internal::optional_data.76" = type { %"class.absl::optional_internal::optional_data_base.77" }
%"class.absl::optional_internal::optional_data_base.77" = type { %"class.absl::optional_internal::optional_data_dtor_base.78" }
%"class.absl::optional_internal::optional_data_dtor_base.78" = type { i8, %union.anon.79 }
%union.anon.79 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.90" = type { %"class.absl::optional_internal::optional_data.91" }
%"class.absl::optional_internal::optional_data.91" = type { %"class.absl::optional_internal::optional_data_base.92" }
%"class.absl::optional_internal::optional_data_base.92" = type { %"class.absl::optional_internal::optional_data_dtor_base.93" }
%"class.absl::optional_internal::optional_data_dtor_base.93" = type { i8, %union.anon.94 }
%union.anon.94 = type { i32 }
%"class.absl::optional.95" = type { %"class.absl::optional_internal::optional_data.96" }
%"class.absl::optional_internal::optional_data.96" = type { %"class.absl::optional_internal::optional_data_base.97" }
%"class.absl::optional_internal::optional_data_base.97" = type { %"class.absl::optional_internal::optional_data_dtor_base.98" }
%"class.absl::optional_internal::optional_data_dtor_base.98" = type { i8, %union.anon.99 }
%union.anon.99 = type { i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.headless::tracing::EndParams" = type { i8 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.44" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.headless::tracing::EndResult"* }
%"class.headless::tracing::EndResult" = type { i8 }
%"class.headless::tracing::GetCategoriesParams" = type { i8 }
%"class.base::OnceCallback.51" = type { %"class.base::internal::CallbackBase" }
%"class.headless::tracing::GetCategoriesResult" = type { %"class.std::__1::vector.118" }
%"class.headless::tracing::RecordClockSyncMarkerParams" = type { %"class.std::__1::basic_string" }
%"class.base::OnceCallback.58" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.headless::tracing::RecordClockSyncMarkerResult"* }
%"class.headless::tracing::RecordClockSyncMarkerResult" = type { i8 }
%"class.headless::tracing::RequestMemoryDumpParams" = type { %"class.absl::optional", %"class.absl::optional.63" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.62 }
%union.anon.62 = type { i8 }
%"class.absl::optional.63" = type { %"class.absl::optional_internal::optional_data.64" }
%"class.absl::optional_internal::optional_data.64" = type { %"class.absl::optional_internal::optional_data_base.65" }
%"class.absl::optional_internal::optional_data_base.65" = type { %"class.absl::optional_internal::optional_data_dtor_base.66" }
%"class.absl::optional_internal::optional_data_dtor_base.66" = type { i8, %union.anon.67 }
%union.anon.67 = type { i32 }
%"class.base::OnceCallback.71" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.headless::tracing::RequestMemoryDumpResult"* }
%"class.headless::tracing::RequestMemoryDumpResult" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.headless::tracing::StartParams" = type { %"class.absl::optional.75", %"class.absl::optional.75", %"class.absl::optional.80", %"class.absl::optional.85", %"class.absl::optional.90", %"class.absl::optional.95", %"class.absl::optional.100", %"class.absl::optional.143", %"class.absl::optional.150" }
%"class.absl::optional.85" = type { %"class.absl::optional_internal::optional_data.86" }
%"class.absl::optional_internal::optional_data.86" = type { %"class.absl::optional_internal::optional_data_base.87" }
%"class.absl::optional_internal::optional_data_base.87" = type { %"class.absl::optional_internal::optional_data_dtor_base.88" }
%"class.absl::optional_internal::optional_data_dtor_base.88" = type { i8, %union.anon.89 }
%union.anon.89 = type { i32 }
%"class.absl::optional.100" = type { %"class.absl::optional_internal::optional_data.101" }
%"class.absl::optional_internal::optional_data.101" = type { %"class.absl::optional_internal::optional_data_base.102" }
%"class.absl::optional_internal::optional_data_base.102" = type { %"class.absl::optional_internal::optional_data_dtor_base.103" }
%"class.absl::optional_internal::optional_data_dtor_base.103" = type { i8, %union.anon.104 }
%union.anon.104 = type { %"class.std::__1::unique_ptr.105" }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.headless::tracing::TraceConfig"* }
%"class.headless::tracing::TraceConfig" = type { %"class.absl::optional.108", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional", %"class.absl::optional.113", %"class.absl::optional.113", %"class.absl::optional.113", %"class.absl::optional.125" }
%"class.absl::optional.108" = type { %"class.absl::optional_internal::optional_data.109" }
%"class.absl::optional_internal::optional_data.109" = type { %"class.absl::optional_internal::optional_data_base.110" }
%"class.absl::optional_internal::optional_data_base.110" = type { %"class.absl::optional_internal::optional_data_dtor_base.111" }
%"class.absl::optional_internal::optional_data_dtor_base.111" = type { i8, %union.anon.112 }
%union.anon.112 = type { i32 }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"class.std::__1::vector.118" }
%"class.absl::optional.125" = type { %"class.absl::optional_internal::optional_data.126" }
%"class.absl::optional_internal::optional_data.126" = type { %"class.absl::optional_internal::optional_data_base.127" }
%"class.absl::optional_internal::optional_data_base.127" = type { %"class.absl::optional_internal::optional_data_dtor_base.128" }
%"class.absl::optional_internal::optional_data_dtor_base.128" = type { i8, %union.anon.129 }
%union.anon.129 = type { %"class.std::__1::unique_ptr.130" }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"class.base::DictionaryValue"* }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.absl::optional.143" = type { %"class.absl::optional_internal::optional_data.144" }
%"class.absl::optional_internal::optional_data.144" = type { %"class.absl::optional_internal::optional_data_base.145" }
%"class.absl::optional_internal::optional_data_base.145" = type { %"class.absl::optional_internal::optional_data_dtor_base.146" }
%"class.absl::optional_internal::optional_data_dtor_base.146" = type { i8, %union.anon.147 }
%union.anon.147 = type { %"class.headless::protocol::Binary" }
%"class.headless::protocol::Binary" = type { %"class.crdtp::Serializable", %class.scoped_refptr.148 }
%"class.crdtp::Serializable" = type { i32 (...)** }
%class.scoped_refptr.148 = type { %"class.base::RefCountedMemory"* }
%"class.base::RefCountedMemory" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.149", [4 x i8] }>
%"class.base::RefCountedThreadSafe.149" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.150" = type { %"class.absl::optional_internal::optional_data.151" }
%"class.absl::optional_internal::optional_data.151" = type { %"class.absl::optional_internal::optional_data_base.152" }
%"class.absl::optional_internal::optional_data_base.152" = type { %"class.absl::optional_internal::optional_data_dtor_base.153" }
%"class.absl::optional_internal::optional_data_dtor_base.153" = type { i8, %union.anon.154 }
%union.anon.154 = type { i32 }
%"class.base::OnceCallback.158" = type { %"class.base::internal::CallbackBase" }
%"class.std::__1::unique_ptr.190" = type { %"class.std::__1::__compressed_pair.191" }
%"class.std::__1::__compressed_pair.191" = type { %"struct.std::__1::__compressed_pair_elem.192" }
%"struct.std::__1::__compressed_pair_elem.192" = type { %"class.headless::tracing::StartResult"* }
%"class.headless::tracing::StartResult" = type { i8 }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.headless::tracing::GetCategoriesResult"* }

$_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS1_14default_deleteIS5_EEEEEE3RunES8_ = comdat any

$_ZN8headless7tracing11StartParamsD2Ev = comdat any

$_ZN8headless7tracing11TraceConfigD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ = comdat any

$_ZN4base8internal9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ = comdat any

$_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@.str = private unnamed_addr constant [20 x i8] c"Tracing.bufferUsage\00", align 1
@.str.1 = private unnamed_addr constant [22 x i8] c"Tracing.dataCollected\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"Tracing.tracingComplete\00", align 1
@.str.3 = private unnamed_addr constant [12 x i8] c"Tracing.end\00", align 1
@.str.4 = private unnamed_addr constant [22 x i8] c"Tracing.getCategories\00", align 1
@.str.5 = private unnamed_addr constant [30 x i8] c"Tracing.recordClockSyncMarker\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Tracing.requestMemoryDump\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"Tracing.start\00", align 1

@_ZN8headless7tracing6DomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::tracing::Domain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::tracing::Domain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless7tracing6DomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless7tracing6DomainD1Ev = hidden unnamed_addr alias void (%"class.headless::tracing::Domain"*), void (%"class.headless::tracing::Domain"*)* @_ZN8headless7tracing6DomainD2Ev
@_ZN8headless7tracing18ExperimentalDomainC1EPNS_8internal17MessageDispatcherE = hidden unnamed_addr alias void (%"class.headless::tracing::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*), void (%"class.headless::tracing::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*)* @_ZN8headless7tracing18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE
@_ZN8headless7tracing18ExperimentalDomainD2Ev = hidden unnamed_addr alias void (%"class.headless::tracing::ExperimentalDomain"*), bitcast (void (%"class.headless::tracing::Domain"*)* @_ZN8headless7tracing6DomainD2Ev to void (%"class.headless::tracing::ExperimentalDomain"*)*)
@_ZN8headless7tracing18ExperimentalDomainD1Ev = hidden unnamed_addr alias void (%"class.headless::tracing::ExperimentalDomain"*), bitcast (void (%"class.headless::tracing::Domain"*)* @_ZN8headless7tracing6DomainD2Ev to void (%"class.headless::tracing::ExperimentalDomain"*)*)

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %"class.headless::tracing::ExperimentalDomain"* @_ZN8headless7tracing6Domain15GetExperimentalEv(%"class.headless::tracing::Domain"* readnone) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.headless::tracing::Domain"* %0 to %"class.headless::tracing::ExperimentalDomain"*
  ret %"class.headless::tracing::ExperimentalDomain"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain11AddObserverEPNS0_8ObserverE(%"class.headless::tracing::Domain"*, %"class.headless::tracing::Observer"*) local_unnamed_addr #1 align 2 {
  tail call void @_ZN8headless7tracing6Domain29RegisterEventHandlersIfNeededEv(%"class.headless::tracing::Domain"* %0)
  %3 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1
  %4 = icmp eq %"class.headless::tracing::Observer"* %1, null
  br i1 %4, label %5, label %8

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %7 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %6, align 8
  br label %26

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %9, align 8
  %11 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %12 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %11, align 8
  %13 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %10, %12
  %14 = bitcast %"class.headless::tracing::Observer"* %1 to i8*
  br i1 %13, label %23, label %15

15:                                               ; preds = %8, %20
  %16 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %21, %20 ], [ %10, %8 ]
  %17 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, %14
  br i1 %19, label %23, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %16, i64 1
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, %12
  br i1 %22, label %26, label %15

23:                                               ; preds = %15, %8
  %24 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %10, %8 ], [ %16, %15 ]
  %25 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %24, %12
  br i1 %25, label %26, label %99

26:                                               ; preds = %20, %5, %23
  %27 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %7, %5 ], [ %12, %23 ], [ %12, %20 ]
  %28 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = ptrtoint %"class.headless::tracing::Observer"* %1 to i64
  %32 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %34 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %33, align 8
  %35 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %27, %34
  %36 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %34 to i64
  br i1 %35, label %37, label %42

37:                                               ; preds = %26
  %38 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %27 to i64*
  store i64 %31, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %27, i64 1
  %40 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %39 to i64
  %41 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  store i64 %40, i64* %41, align 8
  br label %99

42:                                               ; preds = %26
  %43 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %27 to i64
  %44 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %32 to i64*
  %45 = bitcast %"class.base::ObserverList"* %3 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %43, %46
  %48 = ashr exact i64 %47, 3
  %49 = add nsw i64 %48, 1
  %50 = icmp ugt i64 %49, 2305843009213693951
  br i1 %50, label %51, label %53

51:                                               ; preds = %42
  %52 = bitcast %"class.base::ObserverList"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %52) #9
  unreachable

53:                                               ; preds = %42
  %54 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %55 = sub i64 %36, %46
  %56 = ashr exact i64 %55, 3
  %57 = icmp ult i64 %56, 1152921504606846975
  br i1 %57, label %58, label %66

58:                                               ; preds = %53
  %59 = ashr exact i64 %55, 2
  %60 = icmp ult i64 %59, %49
  %61 = select i1 %60, i64 %49, i64 %59
  %62 = icmp eq i64 %61, 0
  br i1 %62, label %71, label %63

63:                                               ; preds = %58
  %64 = icmp ugt i64 %61, 2305843009213693951
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @abort() #9
  unreachable

66:                                               ; preds = %63, %53
  %67 = phi i64 [ %61, %63 ], [ 2305843009213693951, %53 ]
  %68 = shl i64 %67, 3
  %69 = tail call i8* @_Znwm(i64 %68) #10
  %70 = bitcast i8* %69 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %71

71:                                               ; preds = %66, %58
  %72 = phi i64 [ %67, %66 ], [ 0, %58 ]
  %73 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %70, %66 ], [ null, %58 ]
  %74 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %48
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %73, i64 %72
  %76 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %75 to i64
  %77 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %74 to i64*
  store i64 %31, i64* %77, align 8
  %78 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 1
  %79 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %78 to i64
  %80 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %3, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  %82 = load i64, i64* %44, align 8
  %83 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %81 to i64
  %84 = sub i64 %82, %83
  %85 = ashr exact i64 %84, 3
  %86 = sub nsw i64 0, %85
  %87 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %86
  %88 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %87 to i64
  %89 = icmp sgt i64 %84, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %71
  %91 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %87 to i8*
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %81 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 %84, i1 false) #11
  %93 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %80, align 8
  br label %94

94:                                               ; preds = %90, %71
  %95 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %81, %71 ], [ %93, %90 ]
  store i64 %88, i64* %45, align 8
  store i64 %79, i64* %44, align 8
  store i64 %76, i64* %54, align 8
  %96 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %94
  %98 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %95 to i8*
  tail call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %97, %94, %37, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain29RegisterEventHandlersIfNeededEv(%"class.headless::tracing::Domain"*) local_unnamed_addr #1 align 2 {
  %2 = alloca %"class.base::RepeatingCallback", align 8
  %3 = alloca %"class.base::RepeatingCallback", align 8
  %4 = alloca %"class.base::RepeatingCallback", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 2
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %50

8:                                                ; preds = %1
  store i8 1, i8* %5, align 8
  %9 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 0
  %10 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %11 = ptrtoint %"class.headless::tracing::Domain"* %0 to i64
  %12 = tail call i8* @_Znwm(i64 56) #10, !noalias !3
  %13 = bitcast i8* %12 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %13, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !3
  %14 = getelementptr inbounds i8, i8* %12, i64 32
  %15 = bitcast i8* %14 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain24DispatchBufferUsageEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %15, align 8, !noalias !3
  %16 = getelementptr inbounds i8, i8* %12, i64 48
  %17 = bitcast i8* %16 to i64*
  store i64 %11, i64* %17, align 8, !noalias !3
  %18 = bitcast %"class.base::RepeatingCallback"* %2 to i8**
  store i8* %12, i8** %18, align 8, !alias.scope !3
  %19 = bitcast %"class.headless::internal::MessageDispatcher"* %10 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %20, i64 2
  %22 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %21, align 8
  call void %22(%"class.headless::internal::MessageDispatcher"* %10, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %2) #11
  %23 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %2, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %23) #11
  %24 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %25 = call i8* @_Znwm(i64 56) #10, !noalias !8
  %26 = bitcast i8* %25 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %26, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !8
  %27 = getelementptr inbounds i8, i8* %25, i64 32
  %28 = bitcast i8* %27 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain26DispatchDataCollectedEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %28, align 8, !noalias !8
  %29 = getelementptr inbounds i8, i8* %25, i64 48
  %30 = bitcast i8* %29 to i64*
  store i64 %11, i64* %30, align 8, !noalias !8
  %31 = bitcast %"class.base::RepeatingCallback"* %3 to i8**
  store i8* %25, i8** %31, align 8, !alias.scope !8
  %32 = bitcast %"class.headless::internal::MessageDispatcher"* %24 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %33 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %33, i64 2
  %35 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %34, align 8
  call void %35(%"class.headless::internal::MessageDispatcher"* %24, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.1, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %3) #11
  %36 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %36) #11
  %37 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %9, align 8
  %38 = call i8* @_Znwm(i64 56) #10, !noalias !13
  %39 = bitcast i8* %38 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %39, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !13
  %40 = getelementptr inbounds i8, i8* %38, i64 32
  %41 = bitcast i8* %40 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain28DispatchTracingCompleteEventERKN4base5ValueE to i64), i64 0>, <2 x i64>* %41, align 8, !noalias !13
  %42 = getelementptr inbounds i8, i8* %38, i64 48
  %43 = bitcast i8* %42 to i64*
  store i64 %11, i64* %43, align 8, !noalias !13
  %44 = bitcast %"class.base::RepeatingCallback"* %4 to i8**
  store i8* %38, i8** %44, align 8, !alias.scope !13
  %45 = bitcast %"class.headless::internal::MessageDispatcher"* %37 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)***
  %46 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %46, i64 2
  %48 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::RepeatingCallback"*)** %47, align 8
  call void %48(%"class.headless::internal::MessageDispatcher"* %37, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), %"class.base::RepeatingCallback"* nonnull %4) #11
  %49 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %4, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #11
  br label %50

50:                                               ; preds = %1, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain14RemoveObserverEPNS0_8ObserverE(%"class.headless::tracing::Domain"*, %"class.headless::tracing::Observer"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::tracing::Observer"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #11
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain24DispatchBufferUsageEventERKN4base5ValueE(%"class.headless::tracing::Domain"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  %7 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  %8 = call %"class.headless::tracing::BufferUsageParams"* @_ZN8headless7tracing17BufferUsageParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #11
  %9 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !18
  %17 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !18
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br i1 %19, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.base::ObserverList"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11, !alias.scope !18
  br label %63

23:                                               ; preds = %2
  store %"class.base::ObserverList"* %9, %"class.base::ObserverList"** %11, align 8
  %24 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #11
  store i64 0, i64* %12, align 8
  %25 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::ObserverList"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8
  %37 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %58, %54, %48, %35, %21
  %64 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  %70 = bitcast %"class.base::ObserverList"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11, !alias.scope !21
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  br label %72

72:                                               ; preds = %316, %63
  %73 = phi %"class.base::ObserverList"* [ %71, %63 ], [ %314, %316 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %304

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !24

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %406
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %408, %406 ], [ %173, %171 ]
  %178 = phi i64 [ %407, %406 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %384, label %378

193:                                              ; preds = %406, %171
  %194 = phi i64 [ %172, %171 ], [ %407, %406 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #11
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !26

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %374
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %376, %374 ], [ %266, %264 ]
  %271 = phi i64 [ %375, %374 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %352, label %346

286:                                              ; preds = %374, %264
  %287 = phi i64 [ %265, %264 ], [ %375, %374 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  %300 = icmp eq %"class.headless::tracing::BufferUsageParams"* %8, null
  br i1 %300, label %303, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"class.headless::tracing::BufferUsageParams", %"class.headless::tracing::BufferUsageParams"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %302) #10
  br label %303

303:                                              ; preds = %299, %301
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret void

304:                                              ; preds = %106
  %305 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %306 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %305, align 8
  %307 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %306, i64 %109
  %308 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %307 to %"class.headless::tracing::ExperimentalObserver"**
  %309 = load %"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::ExperimentalObserver"** %308, align 8
  %310 = bitcast %"class.headless::tracing::ExperimentalObserver"* %309 to void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)***
  %311 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)**, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)*** %310, align 8
  %312 = getelementptr inbounds void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)** %311, i64 2
  %313 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::BufferUsageParams"*)** %312, align 8
  call void %313(%"class.headless::tracing::ExperimentalObserver"* %309, %"class.headless::tracing::BufferUsageParams"* dereferenceable(48) %8) #11
  %314 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %315 = icmp eq %"class.base::ObserverList"* %314, null
  br i1 %315, label %316, label %317

316:                                              ; preds = %341, %337, %304, %317, %331
  br label %72

317:                                              ; preds = %304
  %318 = load i64, i64* %12, align 8
  %319 = add i64 %318, 1
  store i64 %319, i64* %12, align 8
  %320 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 1
  %321 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %320 to i64*
  %322 = load i64, i64* %321, align 8
  %323 = bitcast %"class.base::ObserverList"* %314 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = sub i64 %322, %324
  %326 = ashr exact i64 %325, 3
  %327 = load i64, i64* %13, align 8
  %328 = icmp ult i64 %326, %327
  %329 = select i1 %328, i64 %326, i64 %327
  %330 = icmp ult i64 %319, %329
  br i1 %330, label %331, label %316

331:                                              ; preds = %317
  %332 = inttoptr i64 %324 to %"class.base::internal::UncheckedObserverAdapter"*
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %314, i64 0, i32 0, i32 0, i32 0
  %334 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %332, i64 %319, i32 0
  %335 = load i8*, i8** %334, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %337, label %316

337:                                              ; preds = %331, %341
  %338 = phi i64 [ %339, %341 ], [ %319, %331 ]
  %339 = add nuw i64 %338, 1
  store i64 %339, i64* %12, align 8
  %340 = icmp ult i64 %339, %329
  br i1 %340, label %341, label %316

341:                                              ; preds = %337
  %342 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %333, align 8
  %343 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %342, i64 %339, i32 0
  %344 = load i8*, i8** %343, align 8
  %345 = icmp eq i8* %344, null
  br i1 %345, label %337, label %316

346:                                              ; preds = %281
  %347 = ptrtoint i8* %284 to i64
  %348 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %349 = inttoptr i64 %282 to i64*
  store i64 %347, i64* %349, align 8
  %350 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %348, i64 1
  %351 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %350 to i64
  br label %352

352:                                              ; preds = %346, %281
  %353 = phi i64 [ %282, %281 ], [ %351, %346 ]
  %354 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %355 = load i8*, i8** %354, align 8
  %356 = icmp eq i8* %355, null
  br i1 %356, label %363, label %357

357:                                              ; preds = %352
  %358 = ptrtoint i8* %355 to i64
  %359 = inttoptr i64 %353 to %"class.base::internal::UncheckedObserverAdapter"*
  %360 = inttoptr i64 %353 to i64*
  store i64 %358, i64* %360, align 8
  %361 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %359, i64 1
  %362 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %361 to i64
  br label %363

363:                                              ; preds = %357, %352
  %364 = phi i64 [ %353, %352 ], [ %362, %357 ]
  %365 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %366 = load i8*, i8** %365, align 8
  %367 = icmp eq i8* %366, null
  br i1 %367, label %374, label %368

368:                                              ; preds = %363
  %369 = ptrtoint i8* %366 to i64
  %370 = inttoptr i64 %364 to %"class.base::internal::UncheckedObserverAdapter"*
  %371 = inttoptr i64 %364 to i64*
  store i64 %369, i64* %371, align 8
  %372 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %370, i64 1
  %373 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %372 to i64
  br label %374

374:                                              ; preds = %368, %363
  %375 = phi i64 [ %364, %363 ], [ %373, %368 ]
  %376 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %377 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %376, %221
  br i1 %377, label %286, label %269

378:                                              ; preds = %188
  %379 = ptrtoint i8* %191 to i64
  %380 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %381 = inttoptr i64 %189 to i64*
  store i64 %379, i64* %381, align 8
  %382 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %380, i64 1
  %383 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %382 to i64
  br label %384

384:                                              ; preds = %378, %188
  %385 = phi i64 [ %189, %188 ], [ %383, %378 ]
  %386 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %387 = load i8*, i8** %386, align 8
  %388 = icmp eq i8* %387, null
  br i1 %388, label %395, label %389

389:                                              ; preds = %384
  %390 = ptrtoint i8* %387 to i64
  %391 = inttoptr i64 %385 to %"class.base::internal::UncheckedObserverAdapter"*
  %392 = inttoptr i64 %385 to i64*
  store i64 %390, i64* %392, align 8
  %393 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %391, i64 1
  %394 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %393 to i64
  br label %395

395:                                              ; preds = %389, %384
  %396 = phi i64 [ %385, %384 ], [ %394, %389 ]
  %397 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %398 = load i8*, i8** %397, align 8
  %399 = icmp eq i8* %398, null
  br i1 %399, label %406, label %400

400:                                              ; preds = %395
  %401 = ptrtoint i8* %398 to i64
  %402 = inttoptr i64 %396 to %"class.base::internal::UncheckedObserverAdapter"*
  %403 = inttoptr i64 %396 to i64*
  store i64 %401, i64* %403, align 8
  %404 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %402, i64 1
  %405 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %404 to i64
  br label %406

406:                                              ; preds = %400, %395
  %407 = phi i64 [ %396, %395 ], [ %405, %400 ]
  %408 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %409 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %408, %128
  br i1 %409, label %193, label %176
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain26DispatchDataCollectedEventERKN4base5ValueE(%"class.headless::tracing::Domain"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  %7 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  %8 = call %"class.headless::tracing::DataCollectedParams"* @_ZN8headless7tracing19DataCollectedParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #11
  %9 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !27
  %17 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !27
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br i1 %19, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.base::ObserverList"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11, !alias.scope !27
  br label %63

23:                                               ; preds = %2
  store %"class.base::ObserverList"* %9, %"class.base::ObserverList"** %11, align 8
  %24 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #11
  store i64 0, i64* %12, align 8
  %25 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::ObserverList"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8
  %37 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %58, %54, %48, %35, %21
  %64 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  %70 = bitcast %"class.base::ObserverList"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11, !alias.scope !30
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  br label %72

72:                                               ; preds = %340, %63
  %73 = phi %"class.base::ObserverList"* [ %71, %63 ], [ %338, %340 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %328

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !33

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %430
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %432, %430 ], [ %173, %171 ]
  %178 = phi i64 [ %431, %430 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %408, label %402

193:                                              ; preds = %430, %171
  %194 = phi i64 [ %172, %171 ], [ %431, %430 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #11
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !34

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %398
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %400, %398 ], [ %266, %264 ]
  %271 = phi i64 [ %399, %398 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %376, label %370

286:                                              ; preds = %398, %264
  %287 = phi i64 [ %265, %264 ], [ %399, %398 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  %300 = icmp eq %"class.headless::tracing::DataCollectedParams"* %8, null
  br i1 %300, label %327, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"class.headless::tracing::DataCollectedParams", %"class.headless::tracing::DataCollectedParams"* %8, i64 0, i32 0, i32 0, i32 0
  %303 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %302, align 8
  %304 = icmp eq %"class.std::__1::unique_ptr.39"* %303, null
  br i1 %304, label %325, label %305

305:                                              ; preds = %301
  %306 = bitcast %"class.std::__1::unique_ptr.39"* %303 to i8*
  %307 = getelementptr inbounds %"class.headless::tracing::DataCollectedParams", %"class.headless::tracing::DataCollectedParams"* %8, i64 0, i32 0, i32 0, i32 1
  %308 = load %"class.std::__1::unique_ptr.39"*, %"class.std::__1::unique_ptr.39"** %307, align 8
  %309 = icmp eq %"class.std::__1::unique_ptr.39"* %308, %303
  br i1 %309, label %323, label %310

310:                                              ; preds = %305, %318
  %311 = phi %"class.std::__1::unique_ptr.39"* [ %312, %318 ], [ %308, %305 ]
  %312 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %311, i64 -1
  %313 = getelementptr inbounds %"class.std::__1::unique_ptr.39", %"class.std::__1::unique_ptr.39"* %312, i64 0, i32 0, i32 0, i32 0
  %314 = load %"class.base::Value"*, %"class.base::Value"** %313, align 8
  store %"class.base::Value"* null, %"class.base::Value"** %313, align 8
  %315 = icmp eq %"class.base::Value"* %314, null
  br i1 %315, label %318, label %316

316:                                              ; preds = %310
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %314) #11
  %317 = bitcast %"class.base::Value"* %314 to i8*
  call void @_ZdlPv(i8* %317) #10
  br label %318

318:                                              ; preds = %316, %310
  %319 = icmp eq %"class.std::__1::unique_ptr.39"* %312, %303
  br i1 %319, label %320, label %310

320:                                              ; preds = %318
  %321 = bitcast %"class.headless::tracing::DataCollectedParams"* %8 to i8**
  %322 = load i8*, i8** %321, align 8
  br label %323

323:                                              ; preds = %320, %305
  %324 = phi i8* [ %322, %320 ], [ %306, %305 ]
  store %"class.std::__1::unique_ptr.39"* %303, %"class.std::__1::unique_ptr.39"** %307, align 8
  call void @_ZdlPv(i8* %324) #10
  br label %325

325:                                              ; preds = %323, %301
  %326 = bitcast %"class.headless::tracing::DataCollectedParams"* %8 to i8*
  call void @_ZdlPv(i8* %326) #10
  br label %327

327:                                              ; preds = %299, %325
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret void

328:                                              ; preds = %106
  %329 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %330 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %329, align 8
  %331 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %330, i64 %109
  %332 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %331 to %"class.headless::tracing::ExperimentalObserver"**
  %333 = load %"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::ExperimentalObserver"** %332, align 8
  %334 = bitcast %"class.headless::tracing::ExperimentalObserver"* %333 to void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)***
  %335 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)**, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)*** %334, align 8
  %336 = getelementptr inbounds void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)** %335, i64 3
  %337 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::DataCollectedParams"*)** %336, align 8
  call void %337(%"class.headless::tracing::ExperimentalObserver"* %333, %"class.headless::tracing::DataCollectedParams"* dereferenceable(24) %8) #11
  %338 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %339 = icmp eq %"class.base::ObserverList"* %338, null
  br i1 %339, label %340, label %341

340:                                              ; preds = %365, %361, %328, %341, %355
  br label %72

341:                                              ; preds = %328
  %342 = load i64, i64* %12, align 8
  %343 = add i64 %342, 1
  store i64 %343, i64* %12, align 8
  %344 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %338, i64 0, i32 0, i32 0, i32 1
  %345 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %344 to i64*
  %346 = load i64, i64* %345, align 8
  %347 = bitcast %"class.base::ObserverList"* %338 to i64*
  %348 = load i64, i64* %347, align 8
  %349 = sub i64 %346, %348
  %350 = ashr exact i64 %349, 3
  %351 = load i64, i64* %13, align 8
  %352 = icmp ult i64 %350, %351
  %353 = select i1 %352, i64 %350, i64 %351
  %354 = icmp ult i64 %343, %353
  br i1 %354, label %355, label %340

355:                                              ; preds = %341
  %356 = inttoptr i64 %348 to %"class.base::internal::UncheckedObserverAdapter"*
  %357 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %338, i64 0, i32 0, i32 0, i32 0
  %358 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %356, i64 %343, i32 0
  %359 = load i8*, i8** %358, align 8
  %360 = icmp eq i8* %359, null
  br i1 %360, label %361, label %340

361:                                              ; preds = %355, %365
  %362 = phi i64 [ %363, %365 ], [ %343, %355 ]
  %363 = add nuw i64 %362, 1
  store i64 %363, i64* %12, align 8
  %364 = icmp ult i64 %363, %353
  br i1 %364, label %365, label %340

365:                                              ; preds = %361
  %366 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %357, align 8
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %366, i64 %363, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %361, label %340

370:                                              ; preds = %281
  %371 = ptrtoint i8* %284 to i64
  %372 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %282 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %281
  %377 = phi i64 [ %282, %281 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %390 = load i8*, i8** %389, align 8
  %391 = icmp eq i8* %390, null
  br i1 %391, label %398, label %392

392:                                              ; preds = %387
  %393 = ptrtoint i8* %390 to i64
  %394 = inttoptr i64 %388 to %"class.base::internal::UncheckedObserverAdapter"*
  %395 = inttoptr i64 %388 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %394, i64 1
  %397 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %396 to i64
  br label %398

398:                                              ; preds = %392, %387
  %399 = phi i64 [ %388, %387 ], [ %397, %392 ]
  %400 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %401 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %400, %221
  br i1 %401, label %286, label %269

402:                                              ; preds = %188
  %403 = ptrtoint i8* %191 to i64
  %404 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %405 = inttoptr i64 %189 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %407 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %406 to i64
  br label %408

408:                                              ; preds = %402, %188
  %409 = phi i64 [ %189, %188 ], [ %407, %402 ]
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %408
  %414 = ptrtoint i8* %411 to i64
  %415 = inttoptr i64 %409 to %"class.base::internal::UncheckedObserverAdapter"*
  %416 = inttoptr i64 %409 to i64*
  store i64 %414, i64* %416, align 8
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %415, i64 1
  %418 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %417 to i64
  br label %419

419:                                              ; preds = %413, %408
  %420 = phi i64 [ %409, %408 ], [ %418, %413 ]
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %422 = load i8*, i8** %421, align 8
  %423 = icmp eq i8* %422, null
  br i1 %423, label %430, label %424

424:                                              ; preds = %419
  %425 = ptrtoint i8* %422 to i64
  %426 = inttoptr i64 %420 to %"class.base::internal::UncheckedObserverAdapter"*
  %427 = inttoptr i64 %420 to i64*
  store i64 %425, i64* %427, align 8
  %428 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %426, i64 1
  %429 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %428 to i64
  br label %430

430:                                              ; preds = %424, %419
  %431 = phi i64 [ %420, %419 ], [ %429, %424 ]
  %432 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %433 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %432, %128
  br i1 %433, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain28DispatchTracingCompleteEventERKN4base5ValueE(%"class.headless::tracing::Domain"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %5 = alloca %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", align 8
  %6 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #11
  %7 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  %8 = call %"class.headless::tracing::TracingCompleteParams"* @_ZN8headless7tracing21TracingCompleteParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #11
  %9 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1
  %10 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 1
  %13 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 2
  %14 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %9, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  %16 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %14, align 8, !noalias !35
  %17 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %17, align 8, !noalias !35
  %19 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %18
  %20 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %4, i64 0, i32 0, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br i1 %19, label %21, label %23

21:                                               ; preds = %2
  %22 = bitcast %"class.base::ObserverList"** %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #11, !alias.scope !35
  br label %63

23:                                               ; preds = %2
  store %"class.base::ObserverList"* %9, %"class.base::ObserverList"** %11, align 8
  %24 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  call void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"* nonnull %20, %"class.base::internal::LinkNodeBase"* %24) #11
  store i64 0, i64* %12, align 8
  %25 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %35, label %28

28:                                               ; preds = %23
  %29 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %17 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.base::ObserverList"* %9 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = ashr exact i64 %33, 3
  br label %35

35:                                               ; preds = %28, %23
  %36 = phi i64 [ %34, %28 ], [ -1, %23 ]
  store i64 %36, i64* %13, align 8
  %37 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %38 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 1
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.base::ObserverList"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = ashr exact i64 %43, 3
  %45 = icmp ult i64 %44, %36
  %46 = select i1 %45, i64 %44, i64 %36
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %63, label %48

48:                                               ; preds = %35
  %49 = inttoptr i64 %42 to %"class.base::internal::UncheckedObserverAdapter"*
  %50 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %37, i64 0, i32 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %49, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %48, %58
  %55 = phi i64 [ %56, %58 ], [ 0, %48 ]
  %56 = add nuw i64 %55, 1
  store i64 %56, i64* %12, align 8
  %57 = icmp ult i64 %56, %46
  br i1 %57, label %58, label %63

58:                                               ; preds = %54
  %59 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %50, align 8
  %60 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %59, i64 %56, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %54, label %63

63:                                               ; preds = %58, %54, %48, %35, %21
  %64 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %64) #11
  %65 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 1
  %66 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 1
  %67 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 2
  %68 = getelementptr inbounds %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter", %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5, i64 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.base::ObserverList<headless::tracing::ExperimentalObserver, false, true, base::internal::UncheckedObserverAdapter>::Iter"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 40, i1 false)
  call void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  %70 = bitcast %"class.base::ObserverList"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 24, i1 false) #11, !alias.scope !38
  %71 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  br label %72

72:                                               ; preds = %329, %63
  %73 = phi %"class.base::ObserverList"* [ %71, %63 ], [ %327, %329 ]
  %74 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %74, label %90, label %75

75:                                               ; preds = %72
  %76 = load i64, i64* %12, align 8
  %77 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 1
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = bitcast %"class.base::ObserverList"* %73 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = sub i64 %79, %81
  %83 = ashr exact i64 %82, 3
  %84 = load i64, i64* %13, align 8
  %85 = icmp ult i64 %83, %84
  %86 = select i1 %85, i64 %83, i64 %84
  %87 = icmp eq i64 %76, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %75
  %89 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  br label %106

90:                                               ; preds = %75, %72
  %91 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %92 = icmp eq %"class.base::ObserverList"* %91, null
  br i1 %92, label %206, label %93

93:                                               ; preds = %90
  %94 = load i64, i64* %66, align 8
  %95 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %91, i64 0, i32 0, i32 0, i32 1
  %96 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"class.base::ObserverList"* %91 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = sub i64 %97, %99
  %101 = ashr exact i64 %100, 3
  %102 = load i64, i64* %67, align 8
  %103 = icmp ult i64 %101, %102
  %104 = select i1 %103, i64 %101, i64 %102
  %105 = icmp eq i64 %94, %104
  br i1 %105, label %115, label %106

106:                                              ; preds = %93, %88
  %107 = phi %"class.base::ObserverList"* [ %89, %88 ], [ %91, %93 ]
  %108 = icmp eq %"class.base::ObserverList"* %73, %107
  %109 = load i64, i64* %12, align 8
  %110 = load i64, i64* %66, align 8
  %111 = icmp eq i64 %109, %110
  %112 = and i1 %108, %111
  br i1 %112, label %113, label %317

113:                                              ; preds = %106
  %114 = icmp eq %"class.base::ObserverList"* %73, null
  br i1 %114, label %206, label %115

115:                                              ; preds = %93, %113
  %116 = phi %"class.base::ObserverList"* [ %73, %113 ], [ %91, %93 ]
  %117 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1
  %118 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"class.base::internal::LinkNodeBase"** %118 to %"class.base::LinkNode"**
  %120 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %119, align 8
  %121 = bitcast %"class.base::LinkedList"* %117 to %"class.base::LinkNode"**
  %122 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %121, align 8
  %123 = icmp eq %"class.base::LinkNode"* %120, %122
  br i1 %123, label %124, label %202

124:                                              ; preds = %115
  %125 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %125, align 8
  %127 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %116, i64 0, i32 0, i32 0, i32 1
  %128 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  %129 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %126, %128
  br i1 %129, label %138, label %130

130:                                              ; preds = %124, %135
  %131 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %136, %135 ], [ %126, %124 ]
  %132 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 0, i32 0
  %133 = load i8*, i8** %132, align 8
  %134 = icmp eq i8* %133, null
  br i1 %134, label %138, label %135

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %131, i64 1
  %137 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %136, %128
  br i1 %137, label %202, label %130

138:                                              ; preds = %130, %124
  %139 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %126, %124 ], [ %131, %130 ]
  %140 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %139 to i64
  %141 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %139, %128
  br i1 %141, label %202, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %139, i64 1
  %144 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %143, %128
  br i1 %144, label %197, label %145

145:                                              ; preds = %142
  %146 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %128, i64 -2, i32 0
  %147 = ptrtoint i8** %146 to i64
  %148 = sub i64 %147, %140
  %149 = lshr i64 %148, 3
  %150 = add nuw nsw i64 %149, 1
  %151 = and i64 %150, 3
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %171, label %153

153:                                              ; preds = %145, %166
  %154 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %168, %166 ], [ %143, %145 ]
  %155 = phi i64 [ %167, %166 ], [ %140, %145 ]
  %156 = phi i64 [ %169, %166 ], [ %151, %145 ]
  %157 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 0, i32 0
  %158 = load i8*, i8** %157, align 8
  %159 = icmp eq i8* %158, null
  br i1 %159, label %166, label %160

160:                                              ; preds = %153
  %161 = ptrtoint i8* %158 to i64
  %162 = inttoptr i64 %155 to %"class.base::internal::UncheckedObserverAdapter"*
  %163 = inttoptr i64 %155 to i64*
  store i64 %161, i64* %163, align 8
  %164 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %162, i64 1
  %165 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %164 to i64
  br label %166

166:                                              ; preds = %160, %153
  %167 = phi i64 [ %155, %153 ], [ %165, %160 ]
  %168 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %154, i64 1
  %169 = add i64 %156, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %153, !llvm.loop !41

171:                                              ; preds = %166, %145
  %172 = phi i64 [ undef, %145 ], [ %167, %166 ]
  %173 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %143, %145 ], [ %168, %166 ]
  %174 = phi i64 [ %140, %145 ], [ %167, %166 ]
  %175 = icmp ult i64 %148, 24
  br i1 %175, label %193, label %176

176:                                              ; preds = %171, %419
  %177 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %421, %419 ], [ %173, %171 ]
  %178 = phi i64 [ %420, %419 ], [ %174, %171 ]
  %179 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 0, i32 0
  %180 = load i8*, i8** %179, align 8
  %181 = icmp eq i8* %180, null
  br i1 %181, label %188, label %182

182:                                              ; preds = %176
  %183 = ptrtoint i8* %180 to i64
  %184 = inttoptr i64 %178 to %"class.base::internal::UncheckedObserverAdapter"*
  %185 = inttoptr i64 %178 to i64*
  store i64 %183, i64* %185, align 8
  %186 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %184, i64 1
  %187 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %186 to i64
  br label %188

188:                                              ; preds = %182, %176
  %189 = phi i64 [ %178, %176 ], [ %187, %182 ]
  %190 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 1, i32 0
  %191 = load i8*, i8** %190, align 8
  %192 = icmp eq i8* %191, null
  br i1 %192, label %397, label %391

193:                                              ; preds = %419, %171
  %194 = phi i64 [ %172, %171 ], [ %420, %419 ]
  %195 = inttoptr i64 %194 to %"class.base::internal::UncheckedObserverAdapter"*
  %196 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %197

197:                                              ; preds = %193, %142
  %198 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %128, %142 ], [ %196, %193 ]
  %199 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %139, %142 ], [ %195, %193 ]
  %200 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %199, %198
  br i1 %200, label %202, label %201

201:                                              ; preds = %197
  store %"class.base::internal::UncheckedObserverAdapter"* %199, %"class.base::internal::UncheckedObserverAdapter"** %127, align 8
  br label %202

202:                                              ; preds = %135, %201, %197, %138, %115
  %203 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %65, align 8
  %204 = icmp eq %"class.base::ObserverList"* %203, null
  br i1 %204, label %206, label %205

205:                                              ; preds = %202
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %65, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %68) #11
  br label %206

206:                                              ; preds = %90, %113, %202, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %64) #11
  %207 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %208 = icmp eq %"class.base::ObserverList"* %207, null
  br i1 %208, label %299, label %209

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1
  %211 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 1, i32 0, i32 0, i32 1
  %212 = bitcast %"class.base::internal::LinkNodeBase"** %211 to %"class.base::LinkNode"**
  %213 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %212, align 8
  %214 = bitcast %"class.base::LinkedList"* %210 to %"class.base::LinkNode"**
  %215 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %214, align 8
  %216 = icmp eq %"class.base::LinkNode"* %213, %215
  br i1 %216, label %217, label %295

217:                                              ; preds = %209
  %218 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 0
  %219 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %218, align 8
  %220 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %207, i64 0, i32 0, i32 0, i32 1
  %221 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  %222 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %219, %221
  br i1 %222, label %231, label %223

223:                                              ; preds = %217, %228
  %224 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %229, %228 ], [ %219, %217 ]
  %225 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 0, i32 0
  %226 = load i8*, i8** %225, align 8
  %227 = icmp eq i8* %226, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %223
  %229 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %224, i64 1
  %230 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %229, %221
  br i1 %230, label %295, label %223

231:                                              ; preds = %223, %217
  %232 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %219, %217 ], [ %224, %223 ]
  %233 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %232 to i64
  %234 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %232, %221
  br i1 %234, label %295, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %232, i64 1
  %237 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %236, %221
  br i1 %237, label %290, label %238

238:                                              ; preds = %235
  %239 = getelementptr %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %221, i64 -2, i32 0
  %240 = ptrtoint i8** %239 to i64
  %241 = sub i64 %240, %233
  %242 = lshr i64 %241, 3
  %243 = add nuw nsw i64 %242, 1
  %244 = and i64 %243, 3
  %245 = icmp eq i64 %244, 0
  br i1 %245, label %264, label %246

246:                                              ; preds = %238, %259
  %247 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %261, %259 ], [ %236, %238 ]
  %248 = phi i64 [ %260, %259 ], [ %233, %238 ]
  %249 = phi i64 [ %262, %259 ], [ %244, %238 ]
  %250 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 0, i32 0
  %251 = load i8*, i8** %250, align 8
  %252 = icmp eq i8* %251, null
  br i1 %252, label %259, label %253

253:                                              ; preds = %246
  %254 = ptrtoint i8* %251 to i64
  %255 = inttoptr i64 %248 to %"class.base::internal::UncheckedObserverAdapter"*
  %256 = inttoptr i64 %248 to i64*
  store i64 %254, i64* %256, align 8
  %257 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %255, i64 1
  %258 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %257 to i64
  br label %259

259:                                              ; preds = %253, %246
  %260 = phi i64 [ %248, %246 ], [ %258, %253 ]
  %261 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %247, i64 1
  %262 = add i64 %249, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %246, !llvm.loop !42

264:                                              ; preds = %259, %238
  %265 = phi i64 [ undef, %238 ], [ %260, %259 ]
  %266 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %236, %238 ], [ %261, %259 ]
  %267 = phi i64 [ %233, %238 ], [ %260, %259 ]
  %268 = icmp ult i64 %241, 24
  br i1 %268, label %286, label %269

269:                                              ; preds = %264, %387
  %270 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %389, %387 ], [ %266, %264 ]
  %271 = phi i64 [ %388, %387 ], [ %267, %264 ]
  %272 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 0, i32 0
  %273 = load i8*, i8** %272, align 8
  %274 = icmp eq i8* %273, null
  br i1 %274, label %281, label %275

275:                                              ; preds = %269
  %276 = ptrtoint i8* %273 to i64
  %277 = inttoptr i64 %271 to %"class.base::internal::UncheckedObserverAdapter"*
  %278 = inttoptr i64 %271 to i64*
  store i64 %276, i64* %278, align 8
  %279 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %277, i64 1
  %280 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %279 to i64
  br label %281

281:                                              ; preds = %275, %269
  %282 = phi i64 [ %271, %269 ], [ %280, %275 ]
  %283 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 1, i32 0
  %284 = load i8*, i8** %283, align 8
  %285 = icmp eq i8* %284, null
  br i1 %285, label %365, label %359

286:                                              ; preds = %387, %264
  %287 = phi i64 [ %265, %264 ], [ %388, %387 ]
  %288 = inttoptr i64 %287 to %"class.base::internal::UncheckedObserverAdapter"*
  %289 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %290

290:                                              ; preds = %286, %235
  %291 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %221, %235 ], [ %289, %286 ]
  %292 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %232, %235 ], [ %288, %286 ]
  %293 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %292, %291
  br i1 %293, label %295, label %294

294:                                              ; preds = %290
  store %"class.base::internal::UncheckedObserverAdapter"* %292, %"class.base::internal::UncheckedObserverAdapter"** %220, align 8
  br label %295

295:                                              ; preds = %228, %294, %290, %231, %209
  %296 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %297 = icmp eq %"class.base::ObserverList"* %296, null
  br i1 %297, label %299, label %298

298:                                              ; preds = %295
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %11, align 8
  call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* nonnull %20) #11
  br label %299

299:                                              ; preds = %206, %295, %298
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #11
  %300 = icmp eq %"class.headless::tracing::TracingCompleteParams"* %8, null
  br i1 %300, label %316, label %301

301:                                              ; preds = %299
  %302 = getelementptr inbounds %"class.headless::tracing::TracingCompleteParams", %"class.headless::tracing::TracingCompleteParams"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %303 = load i8, i8* %302, align 8, !range !2
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %314, label %305

305:                                              ; preds = %301
  %306 = getelementptr inbounds %"class.headless::tracing::TracingCompleteParams", %"class.headless::tracing::TracingCompleteParams"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %307 = bitcast %"class.std::__1::basic_string"* %306 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %308 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %307, i64 0, i32 1, i32 0
  %309 = load i8, i8* %308, align 1
  %310 = icmp slt i8 %309, 0
  br i1 %310, label %311, label %314

311:                                              ; preds = %305
  %312 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %306, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load i8*, i8** %312, align 8
  call void @_ZdlPv(i8* %313) #10
  br label %314

314:                                              ; preds = %311, %305, %301
  %315 = getelementptr inbounds %"class.headless::tracing::TracingCompleteParams", %"class.headless::tracing::TracingCompleteParams"* %8, i64 0, i32 0
  call void @_ZdlPv(i8* %315) #10
  br label %316

316:                                              ; preds = %299, %314
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #11
  ret void

317:                                              ; preds = %106
  %318 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %73, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %318, align 8
  %320 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %319, i64 %109
  %321 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %320 to %"class.headless::tracing::ExperimentalObserver"**
  %322 = load %"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::ExperimentalObserver"** %321, align 8
  %323 = bitcast %"class.headless::tracing::ExperimentalObserver"* %322 to void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)***
  %324 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)**, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)** %324, i64 4
  %326 = load void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)*, void (%"class.headless::tracing::ExperimentalObserver"*, %"class.headless::tracing::TracingCompleteParams"*)** %325, align 8
  call void %326(%"class.headless::tracing::ExperimentalObserver"* %322, %"class.headless::tracing::TracingCompleteParams"* dereferenceable(56) %8) #11
  %327 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %11, align 8
  %328 = icmp eq %"class.base::ObserverList"* %327, null
  br i1 %328, label %329, label %330

329:                                              ; preds = %354, %350, %317, %330, %344
  br label %72

330:                                              ; preds = %317
  %331 = load i64, i64* %12, align 8
  %332 = add i64 %331, 1
  store i64 %332, i64* %12, align 8
  %333 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %327, i64 0, i32 0, i32 0, i32 1
  %334 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %333 to i64*
  %335 = load i64, i64* %334, align 8
  %336 = bitcast %"class.base::ObserverList"* %327 to i64*
  %337 = load i64, i64* %336, align 8
  %338 = sub i64 %335, %337
  %339 = ashr exact i64 %338, 3
  %340 = load i64, i64* %13, align 8
  %341 = icmp ult i64 %339, %340
  %342 = select i1 %341, i64 %339, i64 %340
  %343 = icmp ult i64 %332, %342
  br i1 %343, label %344, label %329

344:                                              ; preds = %330
  %345 = inttoptr i64 %337 to %"class.base::internal::UncheckedObserverAdapter"*
  %346 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %327, i64 0, i32 0, i32 0, i32 0
  %347 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %345, i64 %332, i32 0
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, null
  br i1 %349, label %350, label %329

350:                                              ; preds = %344, %354
  %351 = phi i64 [ %352, %354 ], [ %332, %344 ]
  %352 = add nuw i64 %351, 1
  store i64 %352, i64* %12, align 8
  %353 = icmp ult i64 %352, %342
  br i1 %353, label %354, label %329

354:                                              ; preds = %350
  %355 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %346, align 8
  %356 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %355, i64 %352, i32 0
  %357 = load i8*, i8** %356, align 8
  %358 = icmp eq i8* %357, null
  br i1 %358, label %350, label %329

359:                                              ; preds = %281
  %360 = ptrtoint i8* %284 to i64
  %361 = inttoptr i64 %282 to %"class.base::internal::UncheckedObserverAdapter"*
  %362 = inttoptr i64 %282 to i64*
  store i64 %360, i64* %362, align 8
  %363 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %361, i64 1
  %364 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %363 to i64
  br label %365

365:                                              ; preds = %359, %281
  %366 = phi i64 [ %282, %281 ], [ %364, %359 ]
  %367 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 2, i32 0
  %368 = load i8*, i8** %367, align 8
  %369 = icmp eq i8* %368, null
  br i1 %369, label %376, label %370

370:                                              ; preds = %365
  %371 = ptrtoint i8* %368 to i64
  %372 = inttoptr i64 %366 to %"class.base::internal::UncheckedObserverAdapter"*
  %373 = inttoptr i64 %366 to i64*
  store i64 %371, i64* %373, align 8
  %374 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %372, i64 1
  %375 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %374 to i64
  br label %376

376:                                              ; preds = %370, %365
  %377 = phi i64 [ %366, %365 ], [ %375, %370 ]
  %378 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 3, i32 0
  %379 = load i8*, i8** %378, align 8
  %380 = icmp eq i8* %379, null
  br i1 %380, label %387, label %381

381:                                              ; preds = %376
  %382 = ptrtoint i8* %379 to i64
  %383 = inttoptr i64 %377 to %"class.base::internal::UncheckedObserverAdapter"*
  %384 = inttoptr i64 %377 to i64*
  store i64 %382, i64* %384, align 8
  %385 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %383, i64 1
  %386 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %385 to i64
  br label %387

387:                                              ; preds = %381, %376
  %388 = phi i64 [ %377, %376 ], [ %386, %381 ]
  %389 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %270, i64 4
  %390 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %389, %221
  br i1 %390, label %286, label %269

391:                                              ; preds = %188
  %392 = ptrtoint i8* %191 to i64
  %393 = inttoptr i64 %189 to %"class.base::internal::UncheckedObserverAdapter"*
  %394 = inttoptr i64 %189 to i64*
  store i64 %392, i64* %394, align 8
  %395 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %393, i64 1
  %396 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %395 to i64
  br label %397

397:                                              ; preds = %391, %188
  %398 = phi i64 [ %189, %188 ], [ %396, %391 ]
  %399 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 2, i32 0
  %400 = load i8*, i8** %399, align 8
  %401 = icmp eq i8* %400, null
  br i1 %401, label %408, label %402

402:                                              ; preds = %397
  %403 = ptrtoint i8* %400 to i64
  %404 = inttoptr i64 %398 to %"class.base::internal::UncheckedObserverAdapter"*
  %405 = inttoptr i64 %398 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %404, i64 1
  %407 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %406 to i64
  br label %408

408:                                              ; preds = %402, %397
  %409 = phi i64 [ %398, %397 ], [ %407, %402 ]
  %410 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 3, i32 0
  %411 = load i8*, i8** %410, align 8
  %412 = icmp eq i8* %411, null
  br i1 %412, label %419, label %413

413:                                              ; preds = %408
  %414 = ptrtoint i8* %411 to i64
  %415 = inttoptr i64 %409 to %"class.base::internal::UncheckedObserverAdapter"*
  %416 = inttoptr i64 %409 to i64*
  store i64 %414, i64* %416, align 8
  %417 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %415, i64 1
  %418 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %417 to i64
  br label %419

419:                                              ; preds = %413, %408
  %420 = phi i64 [ %409, %408 ], [ %418, %413 ]
  %421 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %177, i64 4
  %422 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %421, %128
  br i1 %422, label %193, label %176
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain3EndENSt3__110unique_ptrINS0_9EndParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_9EndResultENS5_ISA_EEEEEEE(%"class.headless::tracing::ExperimentalDomain"* nocapture readonly, %"class.headless::tracing::EndParams"*, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless7tracing9EndParams9SerializeEv(%"class.headless::tracing::EndParams"* %1) #11
  %8 = tail call i8* @_Znwm(i64 48) #10, !noalias !43
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !43
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain17HandleEndResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_9EndResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !43
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !43
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !43
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !43
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !43
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.3, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq %"class.headless::tracing::EndParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::tracing::EndParams", %"class.headless::tracing::EndParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless7tracing9EndParams9SerializeEv(%"class.headless::tracing::EndParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain17HandleEndResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_9EndResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.159", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"class.std::__1::unique_ptr.159", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.159"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.159"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::EndResult"* null, %"class.headless::tracing::EndResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.159"* nonnull dereferenceable(8) %3) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %26 = load %"class.headless::tracing::EndResult"*, %"class.headless::tracing::EndResult"** %19, align 8
  store %"class.headless::tracing::EndResult"* null, %"class.headless::tracing::EndResult"** %19, align 8
  %27 = icmp eq %"class.headless::tracing::EndResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::tracing::EndResult", %"class.headless::tracing::EndResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  %34 = call %"class.headless::tracing::EndResult"* @_ZN8headless7tracing9EndResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #11
  %35 = bitcast %"class.std::__1::unique_ptr.159"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.159", %"class.std::__1::unique_ptr.159"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::EndResult"* %34, %"class.headless::tracing::EndResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.base::OnceCallback"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.159"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.159"* nonnull dereferenceable(8) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %46 = load %"class.headless::tracing::EndResult"*, %"class.headless::tracing::EndResult"** %36, align 8
  store %"class.headless::tracing::EndResult"* null, %"class.headless::tracing::EndResult"** %36, align 8
  %47 = icmp eq %"class.headless::tracing::EndResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::tracing::EndResult", %"class.headless::tracing::EndResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain13GetCategoriesENSt3__110unique_ptrINS0_19GetCategoriesParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_19GetCategoriesResultENS5_ISA_EEEEEEE(%"class.headless::tracing::ExperimentalDomain"* nocapture readonly, %"class.headless::tracing::GetCategoriesParams"*, %"class.base::OnceCallback.51"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless7tracing19GetCategoriesParams9SerializeEv(%"class.headless::tracing::GetCategoriesParams"* %1) #11
  %8 = tail call i8* @_Znwm(i64 48) #10, !noalias !48
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !48
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.51"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain27HandleGetCategoriesResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19GetCategoriesResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !48
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.51", %"class.base::OnceCallback.51"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.51"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !48
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !48
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !48
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !48
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.4, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq %"class.headless::tracing::GetCategoriesParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::tracing::GetCategoriesParams", %"class.headless::tracing::GetCategoriesParams"* %1, i64 0, i32 0
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless7tracing19GetCategoriesParams9SerializeEv(%"class.headless::tracing::GetCategoriesParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain27HandleGetCategoriesResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_19GetCategoriesResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.51"*, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.headless::ErrorReporter", align 8
  %4 = getelementptr inbounds %"class.base::OnceCallback.51", %"class.base::OnceCallback.51"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = icmp eq %"class.base::internal::BindStateBase"* %5, null
  br i1 %6, label %17, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = trunc i64 %9 to i8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %13

12:                                               ; preds = %7
  tail call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.51"* %0, %"class.headless::tracing::GetCategoriesResult"* null)
  br label %17

13:                                               ; preds = %7
  %14 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #11
  %15 = bitcast %"class.headless::ErrorReporter"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  %16 = call %"class.headless::tracing::GetCategoriesResult"* @_ZN8headless7tracing19GetCategoriesResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %3) #11
  call void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.51"* %0, %"class.headless::tracing::GetCategoriesResult"* %16)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #11
  br label %17

17:                                               ; preds = %2, %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain21RecordClockSyncMarkerENSt3__110unique_ptrINS0_27RecordClockSyncMarkerParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_27RecordClockSyncMarkerResultENS5_ISA_EEEEEEE(%"class.headless::tracing::ExperimentalDomain"* nocapture readonly, %"class.headless::tracing::RecordClockSyncMarkerParams"*, %"class.base::OnceCallback.58"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless7tracing27RecordClockSyncMarkerParams9SerializeEv(%"class.headless::tracing::RecordClockSyncMarkerParams"* %1) #11
  %8 = tail call i8* @_Znwm(i64 48) #10, !noalias !53
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !53
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.58"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain35HandleRecordClockSyncMarkerResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_27RecordClockSyncMarkerResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !53
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.58"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !53
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !53
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !53
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !53
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.5, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq %"class.headless::tracing::RecordClockSyncMarkerParams"* %1, null
  br i1 %22, label %33, label %23

23:                                               ; preds = %3
  %24 = bitcast %"class.headless::tracing::RecordClockSyncMarkerParams"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.headless::tracing::RecordClockSyncMarkerParams", %"class.headless::tracing::RecordClockSyncMarkerParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %28, %23
  %32 = bitcast %"class.headless::tracing::RecordClockSyncMarkerParams"* %1 to i8*
  call void @_ZdlPv(i8* %32) #10
  br label %33

33:                                               ; preds = %3, %31
  ret void
}

declare %"class.base::Value"* @_ZNK8headless7tracing27RecordClockSyncMarkerParams9SerializeEv(%"class.headless::tracing::RecordClockSyncMarkerParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain35HandleRecordClockSyncMarkerResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_27RecordClockSyncMarkerResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.58"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.178", align 8
  %4 = alloca %"class.base::OnceCallback.58", align 8
  %5 = alloca %"class.std::__1::unique_ptr.178", align 8
  %6 = alloca %"class.base::OnceCallback.58", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.178"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::RecordClockSyncMarkerResult"* null, %"class.headless::tracing::RecordClockSyncMarkerResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.58"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = bitcast %"class.base::OnceCallback.58"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.178"* nonnull dereferenceable(8) %3) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %26 = load %"class.headless::tracing::RecordClockSyncMarkerResult"*, %"class.headless::tracing::RecordClockSyncMarkerResult"** %19, align 8
  store %"class.headless::tracing::RecordClockSyncMarkerResult"* null, %"class.headless::tracing::RecordClockSyncMarkerResult"** %19, align 8
  %27 = icmp eq %"class.headless::tracing::RecordClockSyncMarkerResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::tracing::RecordClockSyncMarkerResult", %"class.headless::tracing::RecordClockSyncMarkerResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  %34 = call %"class.headless::tracing::RecordClockSyncMarkerResult"* @_ZN8headless7tracing27RecordClockSyncMarkerResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #11
  %35 = bitcast %"class.std::__1::unique_ptr.178"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.178", %"class.std::__1::unique_ptr.178"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::RecordClockSyncMarkerResult"* %34, %"class.headless::tracing::RecordClockSyncMarkerResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.58"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.base::OnceCallback.58"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.58"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.178"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.178"* nonnull dereferenceable(8) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %46 = load %"class.headless::tracing::RecordClockSyncMarkerResult"*, %"class.headless::tracing::RecordClockSyncMarkerResult"** %36, align 8
  store %"class.headless::tracing::RecordClockSyncMarkerResult"* null, %"class.headless::tracing::RecordClockSyncMarkerResult"** %36, align 8
  %47 = icmp eq %"class.headless::tracing::RecordClockSyncMarkerResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::tracing::RecordClockSyncMarkerResult", %"class.headless::tracing::RecordClockSyncMarkerResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain17RequestMemoryDumpENSt3__110unique_ptrINS0_23RequestMemoryDumpParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_23RequestMemoryDumpResultENS5_ISA_EEEEEEE(%"class.headless::tracing::ExperimentalDomain"* nocapture readonly, %"class.headless::tracing::RequestMemoryDumpParams"*, %"class.base::OnceCallback.71"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless7tracing23RequestMemoryDumpParams9SerializeEv(%"class.headless::tracing::RequestMemoryDumpParams"* %1) #11
  %8 = tail call i8* @_Znwm(i64 48) #10, !noalias !58
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !58
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.71"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain31HandleRequestMemoryDumpResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_23RequestMemoryDumpResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !58
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.71", %"class.base::OnceCallback.71"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.71"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !58
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !58
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !58
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !58
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq %"class.headless::tracing::RequestMemoryDumpParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.headless::tracing::RequestMemoryDumpParams", %"class.headless::tracing::RequestMemoryDumpParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless7tracing23RequestMemoryDumpParams9SerializeEv(%"class.headless::tracing::RequestMemoryDumpParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain31HandleRequestMemoryDumpResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_23RequestMemoryDumpResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.71"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.184", align 8
  %4 = alloca %"class.base::OnceCallback.71", align 8
  %5 = alloca %"class.std::__1::unique_ptr.184", align 8
  %6 = alloca %"class.base::OnceCallback.71", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.71", %"class.base::OnceCallback.71"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %67, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %39

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.184"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::RequestMemoryDumpResult"* null, %"class.headless::tracing::RequestMemoryDumpResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.71"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = bitcast %"class.base::OnceCallback.71"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.71", %"class.base::OnceCallback.71"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.184"* nonnull dereferenceable(8) %3) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %26 = load %"class.headless::tracing::RequestMemoryDumpResult"*, %"class.headless::tracing::RequestMemoryDumpResult"** %19, align 8
  store %"class.headless::tracing::RequestMemoryDumpResult"* null, %"class.headless::tracing::RequestMemoryDumpResult"** %19, align 8
  %27 = icmp eq %"class.headless::tracing::RequestMemoryDumpResult"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.headless::tracing::RequestMemoryDumpResult"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  %31 = load i8, i8* %30, align 1
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %36

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.headless::tracing::RequestMemoryDumpResult", %"class.headless::tracing::RequestMemoryDumpResult"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %35) #10
  br label %36

36:                                               ; preds = %33, %28
  %37 = bitcast %"class.headless::tracing::RequestMemoryDumpResult"* %26 to i8*
  call void @_ZdlPv(i8* %37) #10
  br label %38

38:                                               ; preds = %17, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %67

39:                                               ; preds = %12
  %40 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %40) #11
  %41 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  %42 = call %"class.headless::tracing::RequestMemoryDumpResult"* @_ZN8headless7tracing23RequestMemoryDumpResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #11
  %43 = bitcast %"class.std::__1::unique_ptr.184"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.184", %"class.std::__1::unique_ptr.184"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::RequestMemoryDumpResult"* %42, %"class.headless::tracing::RequestMemoryDumpResult"** %44, align 8
  %45 = bitcast %"class.base::OnceCallback.71"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #11
  %46 = bitcast %"class.base::OnceCallback.71"* %0 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.base::OnceCallback.71"* %6 to i64*
  store i64 %47, i64* %48, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %49 = getelementptr inbounds %"class.base::OnceCallback.71", %"class.base::OnceCallback.71"* %6, i64 0, i32 0
  %50 = inttoptr i64 %47 to %"class.base::internal::BindStateBase"*
  %51 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %50, i64 0, i32 1
  %52 = bitcast void ()** %51 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)**
  %53 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.184"*)** %52, align 8
  call void %53(%"class.base::internal::BindStateBase"* %50, %"class.std::__1::unique_ptr.184"* nonnull dereferenceable(8) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %49) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #11
  %54 = load %"class.headless::tracing::RequestMemoryDumpResult"*, %"class.headless::tracing::RequestMemoryDumpResult"** %44, align 8
  store %"class.headless::tracing::RequestMemoryDumpResult"* null, %"class.headless::tracing::RequestMemoryDumpResult"** %44, align 8
  %55 = icmp eq %"class.headless::tracing::RequestMemoryDumpResult"* %54, null
  br i1 %55, label %66, label %56

56:                                               ; preds = %39
  %57 = bitcast %"class.headless::tracing::RequestMemoryDumpResult"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %58 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %57, i64 0, i32 1, i32 0
  %59 = load i8, i8* %58, align 1
  %60 = icmp slt i8 %59, 0
  br i1 %60, label %61, label %64

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.headless::tracing::RequestMemoryDumpResult", %"class.headless::tracing::RequestMemoryDumpResult"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  call void @_ZdlPv(i8* %63) #10
  br label %64

64:                                               ; preds = %61, %56
  %65 = bitcast %"class.headless::tracing::RequestMemoryDumpResult"* %54 to i8*
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %64, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %40) #11
  br label %67

67:                                               ; preds = %2, %66, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain5StartENSt3__110unique_ptrINS0_11StartParamsENS2_14default_deleteIS4_EEEEN4base12OnceCallbackIFvNS3_INS0_11StartResultENS5_ISA_EEEEEEE(%"class.headless::tracing::ExperimentalDomain"* nocapture readonly, %"class.headless::tracing::StartParams"*, %"class.base::OnceCallback.158"* nocapture) local_unnamed_addr #1 align 2 {
  %4 = alloca %"class.base::OnceCallback.44", align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  %6 = load %"class.headless::internal::MessageDispatcher"*, %"class.headless::internal::MessageDispatcher"** %5, align 8
  %7 = tail call %"class.base::Value"* @_ZNK8headless7tracing11StartParams9SerializeEv(%"class.headless::tracing::StartParams"* %1) #11
  %8 = tail call i8* @_Znwm(i64 48) #10, !noalias !63
  %9 = bitcast i8* %8 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %9, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Value"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !63
  %10 = getelementptr inbounds i8, i8* %8, i64 32
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (void (%"class.base::OnceCallback.158"*, %"class.base::Value"*)* @_ZN8headless7tracing6Domain19HandleStartResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_11StartResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE to i64), i64* %11, align 8, !noalias !63
  %12 = getelementptr inbounds i8, i8* %8, i64 40
  %13 = getelementptr inbounds %"class.base::OnceCallback.158", %"class.base::OnceCallback.158"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.base::OnceCallback.158"* %2 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !63
  %16 = bitcast i8* %12 to i64*
  store i64 %15, i64* %16, align 8, !noalias !63
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8, !noalias !63
  %17 = bitcast %"class.base::OnceCallback.44"* %4 to i8**
  store i8* %8, i8** %17, align 8, !alias.scope !63
  %18 = bitcast %"class.headless::internal::MessageDispatcher"* %6 to void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)***
  %19 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)**, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*** %18, align 8
  %20 = load void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)*, void (%"class.headless::internal::MessageDispatcher"*, i8*, %"class.base::Value"*, %"class.base::OnceCallback.44"*)** %19, align 8
  call void %20(%"class.headless::internal::MessageDispatcher"* %6, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i64 0, i64 0), %"class.base::Value"* %7, %"class.base::OnceCallback.44"* nonnull %4) #11
  %21 = getelementptr inbounds %"class.base::OnceCallback.44", %"class.base::OnceCallback.44"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %21) #11
  %22 = icmp eq %"class.headless::tracing::StartParams"* %1, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %3
  call void @_ZN8headless7tracing11StartParamsD2Ev(%"class.headless::tracing::StartParams"* nonnull %1) #11
  %24 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %24) #10
  br label %25

25:                                               ; preds = %3, %23
  ret void
}

declare %"class.base::Value"* @_ZNK8headless7tracing11StartParams9SerializeEv(%"class.headless::tracing::StartParams"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6Domain19HandleStartResponseEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_11StartResultENS4_14default_deleteIS6_EEEEEEERKNS2_5ValueE(%"class.base::OnceCallback.158"* nocapture, %"class.base::Value"* dereferenceable(32)) #1 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.190", align 8
  %4 = alloca %"class.base::OnceCallback.158", align 8
  %5 = alloca %"class.std::__1::unique_ptr.190", align 8
  %6 = alloca %"class.base::OnceCallback.158", align 8
  %7 = alloca %"class.headless::ErrorReporter", align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback.158", %"class.base::OnceCallback.158"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %8, align 8
  %10 = icmp eq %"class.base::internal::BindStateBase"* %9, null
  %11 = ptrtoint %"class.base::internal::BindStateBase"* %9 to i64
  br i1 %10, label %51, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %31

17:                                               ; preds = %12
  %18 = bitcast %"class.std::__1::unique_ptr.190"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::StartResult"* null, %"class.headless::tracing::StartResult"** %19, align 8
  %20 = bitcast %"class.base::OnceCallback.158"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  %21 = bitcast %"class.base::OnceCallback.158"* %4 to i64*
  store i64 %11, i64* %21, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %22 = getelementptr inbounds %"class.base::OnceCallback.158", %"class.base::OnceCallback.158"* %4, i64 0, i32 0
  %23 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %9, i64 0, i32 1
  %24 = bitcast void ()** %23 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)**
  %25 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)** %24, align 8
  call void %25(%"class.base::internal::BindStateBase"* nonnull %9, %"class.std::__1::unique_ptr.190"* nonnull dereferenceable(8) %3) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %22) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  %26 = load %"class.headless::tracing::StartResult"*, %"class.headless::tracing::StartResult"** %19, align 8
  store %"class.headless::tracing::StartResult"* null, %"class.headless::tracing::StartResult"** %19, align 8
  %27 = icmp eq %"class.headless::tracing::StartResult"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.headless::tracing::StartResult", %"class.headless::tracing::StartResult"* %26, i64 0, i32 0
  call void @_ZdlPv(i8* %29) #10
  br label %30

30:                                               ; preds = %17, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  br label %51

31:                                               ; preds = %12
  %32 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %32) #11
  %33 = bitcast %"class.headless::ErrorReporter"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 48, i1 false)
  call void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  %34 = call %"class.headless::tracing::StartResult"* @_ZN8headless7tracing11StartResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32) %1, %"class.headless::ErrorReporter"* nonnull %7) #11
  %35 = bitcast %"class.std::__1::unique_ptr.190"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr.190", %"class.std::__1::unique_ptr.190"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::StartResult"* %34, %"class.headless::tracing::StartResult"** %36, align 8
  %37 = bitcast %"class.base::OnceCallback.158"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #11
  %38 = bitcast %"class.base::OnceCallback.158"* %0 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.base::OnceCallback.158"* %6 to i64*
  store i64 %39, i64* %40, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %41 = getelementptr inbounds %"class.base::OnceCallback.158", %"class.base::OnceCallback.158"* %6, i64 0, i32 0
  %42 = inttoptr i64 %39 to %"class.base::internal::BindStateBase"*
  %43 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %42, i64 0, i32 1
  %44 = bitcast void ()** %43 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)**
  %45 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.190"*)** %44, align 8
  call void %45(%"class.base::internal::BindStateBase"* %42, %"class.std::__1::unique_ptr.190"* nonnull dereferenceable(8) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #11
  %46 = load %"class.headless::tracing::StartResult"*, %"class.headless::tracing::StartResult"** %36, align 8
  store %"class.headless::tracing::StartResult"* null, %"class.headless::tracing::StartResult"** %36, align 8
  %47 = icmp eq %"class.headless::tracing::StartResult"* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %31
  %49 = getelementptr inbounds %"class.headless::tracing::StartResult", %"class.headless::tracing::StartResult"* %46, i64 0, i32 0
  call void @_ZdlPv(i8* %49) #10
  br label %50

50:                                               ; preds = %48, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %32) #11
  br label %51

51:                                               ; preds = %2, %50, %30
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN8headless13ErrorReporterC1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #4

declare %"class.headless::tracing::EndResult"* @_ZN8headless7tracing9EndResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN8headless13ErrorReporterD1Ev(%"class.headless::ErrorReporter"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNO4base12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS1_14default_deleteIS5_EEEEEE3RunES8_(%"class.base::OnceCallback.51"*, %"class.headless::tracing::GetCategoriesResult"*) local_unnamed_addr #1 comdat align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.172", align 8
  %4 = alloca %"class.base::OnceCallback.51", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.172"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.headless::tracing::GetCategoriesResult"* %1, %"class.headless::tracing::GetCategoriesResult"** %5, align 8
  %6 = bitcast %"class.base::OnceCallback.51"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.base::OnceCallback.51", %"class.base::OnceCallback.51"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.base::OnceCallback.51"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::OnceCallback.51"* %4 to i64*
  store i64 %9, i64* %10, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %7, align 8
  %11 = getelementptr inbounds %"class.base::OnceCallback.51", %"class.base::OnceCallback.51"* %4, i64 0, i32 0
  %12 = inttoptr i64 %9 to %"class.base::internal::BindStateBase"*
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %12, i64 0, i32 1
  %14 = bitcast void ()** %13 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.172"*)**
  %15 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.172"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.172"*)** %14, align 8
  call void %15(%"class.base::internal::BindStateBase"* %12, %"class.std::__1::unique_ptr.172"* nonnull dereferenceable(8) %3) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #11
  %16 = load %"class.headless::tracing::GetCategoriesResult"*, %"class.headless::tracing::GetCategoriesResult"** %5, align 8
  store %"class.headless::tracing::GetCategoriesResult"* null, %"class.headless::tracing::GetCategoriesResult"** %5, align 8
  %17 = icmp eq %"class.headless::tracing::GetCategoriesResult"* %16, null
  br i1 %17, label %46, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.headless::tracing::GetCategoriesResult", %"class.headless::tracing::GetCategoriesResult"* %16, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::tracing::GetCategoriesResult", %"class.headless::tracing::GetCategoriesResult"* %16, i64 0, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %20
  br i1 %26, label %42, label %27

27:                                               ; preds = %22, %37
  %28 = phi %"class.std::__1::basic_string"* [ %29, %37 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 -1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %34, %27
  %38 = icmp eq %"class.std::__1::basic_string"* %29, %20
  br i1 %38, label %39, label %27

39:                                               ; preds = %37
  %40 = bitcast %"class.headless::tracing::GetCategoriesResult"* %16 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %22
  %43 = phi i8* [ %41, %39 ], [ %23, %22 ]
  store %"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"** %24, align 8
  call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %18
  %45 = bitcast %"class.headless::tracing::GetCategoriesResult"* %16 to i8*
  call void @_ZdlPv(i8* %45) #10
  br label %46

46:                                               ; preds = %2, %44
  ret void
}

declare %"class.headless::tracing::GetCategoriesResult"* @_ZN8headless7tracing19GetCategoriesResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::RecordClockSyncMarkerResult"* @_ZN8headless7tracing27RecordClockSyncMarkerResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::RequestMemoryDumpResult"* @_ZN8headless7tracing23RequestMemoryDumpResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::StartResult"* @_ZN8headless7tracing11StartResult5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::BufferUsageParams"* @_ZN8headless7tracing17BufferUsageParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::DataCollectedParams"* @_ZN8headless7tracing19DataCollectedParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

declare %"class.headless::tracing::TracingCompleteParams"* @_ZN8headless7tracing21TracingCompleteParams5ParseERKN4base5ValueEPNS_13ErrorReporterE(%"class.base::Value"* dereferenceable(32), %"class.headless::ErrorReporter"*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6DomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::tracing::Domain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #11
  %7 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing6DomainD2Ev(%"class.headless::tracing::Domain"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %3 = bitcast %"class.base::internal::LinkNodeBase"** %2 to %"class.base::LinkNode"**
  %4 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 1, i32 0
  %5 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  %6 = icmp eq %"class.base::LinkNode"* %5, %4
  br i1 %6, label %19, label %7

7:                                                ; preds = %1, %16
  %8 = phi %"class.base::LinkNode"* [ %17, %16 ], [ %5, %1 ]
  %9 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 1
  %10 = bitcast %"class.base::LinkNode"* %9 to %"class.base::ObserverList"**
  %11 = load %"class.base::ObserverList"*, %"class.base::ObserverList"** %10, align 8
  %12 = icmp eq %"class.base::ObserverList"* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %7
  store %"class.base::ObserverList"* null, %"class.base::ObserverList"** %10, align 8
  %14 = getelementptr inbounds %"class.base::LinkNode", %"class.base::LinkNode"* %8, i64 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"* %14) #11
  %15 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %3, align 8
  br label %16

16:                                               ; preds = %13, %7
  %17 = phi %"class.base::LinkNode"* [ %8, %7 ], [ %15, %13 ]
  %18 = icmp eq %"class.base::LinkNode"* %17, %4
  br i1 %18, label %19, label %7

19:                                               ; preds = %16, %1
  %20 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %21 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %20, align 8
  %22 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %21 to i64
  %25 = getelementptr inbounds %"class.headless::tracing::Domain", %"class.headless::tracing::Domain"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #10
  br label %28

28:                                               ; preds = %19, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomainC2EPNS_8internal17MessageDispatcherE(%"class.headless::tracing::ExperimentalDomain"*, %"class.headless::internal::MessageDispatcher"*) unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 0
  store %"class.headless::internal::MessageDispatcher"* %1, %"class.headless::internal::MessageDispatcher"** %3, align 8
  %4 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.base::ObserverList"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #11
  %6 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  tail call void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6, %"class.base::internal::LinkNodeBase"* %6) #11
  %7 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 3
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 2
  store i8 0, i8* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain11AddObserverEPNS0_20ExperimentalObserverE(%"class.headless::tracing::ExperimentalDomain"*, %"class.headless::tracing::ExperimentalObserver"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.headless::tracing::ExperimentalDomain"* %0 to %"class.headless::tracing::Domain"*
  tail call void @_ZN8headless7tracing6Domain29RegisterEventHandlersIfNeededEv(%"class.headless::tracing::Domain"* %3)
  %4 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1
  %5 = icmp eq %"class.headless::tracing::ExperimentalObserver"* %1, null
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %8 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %7, align 8
  br label %27

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %11 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %10, align 8
  %12 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %12, align 8
  %14 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %11, %13
  %15 = bitcast %"class.headless::tracing::ExperimentalObserver"* %1 to i8*
  br i1 %14, label %24, label %16

16:                                               ; preds = %9, %21
  %17 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %22, %21 ], [ %11, %9 ]
  %18 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %17, i64 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, %15
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %17, i64 1
  %23 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %22, %13
  br i1 %23, label %27, label %16

24:                                               ; preds = %16, %9
  %25 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %11, %9 ], [ %17, %16 ]
  %26 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %25, %13
  br i1 %26, label %27, label %100

27:                                               ; preds = %21, %6, %24
  %28 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %8, %6 ], [ %13, %24 ], [ %13, %21 ]
  %29 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, 1
  store i64 %31, i64* %29, align 8
  %32 = ptrtoint %"class.headless::tracing::ExperimentalObserver"* %1 to i64
  %33 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %35 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %34, align 8
  %36 = icmp ult %"class.base::internal::UncheckedObserverAdapter"* %28, %35
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %35 to i64
  br i1 %36, label %38, label %43

38:                                               ; preds = %27
  %39 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %28 to i64*
  store i64 %32, i64* %39, align 8
  %40 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %28, i64 1
  %41 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %40 to i64
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  store i64 %41, i64* %42, align 8
  br label %100

43:                                               ; preds = %27
  %44 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %28 to i64
  %45 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %33 to i64*
  %46 = bitcast %"class.base::ObserverList"* %4 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 %44, %47
  %49 = ashr exact i64 %48, 3
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 2305843009213693951
  br i1 %51, label %52, label %54

52:                                               ; preds = %43
  %53 = bitcast %"class.base::ObserverList"* %4 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %53) #9
  unreachable

54:                                               ; preds = %43
  %55 = bitcast %"class.base::internal::UncheckedObserverAdapter"** %34 to i64*
  %56 = sub i64 %37, %47
  %57 = ashr exact i64 %56, 3
  %58 = icmp ult i64 %57, 1152921504606846975
  br i1 %58, label %59, label %67

59:                                               ; preds = %54
  %60 = ashr exact i64 %56, 2
  %61 = icmp ult i64 %60, %50
  %62 = select i1 %61, i64 %50, i64 %60
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %72, label %64

64:                                               ; preds = %59
  %65 = icmp ugt i64 %62, 2305843009213693951
  br i1 %65, label %66, label %67

66:                                               ; preds = %64
  tail call void @abort() #9
  unreachable

67:                                               ; preds = %64, %54
  %68 = phi i64 [ %62, %64 ], [ 2305843009213693951, %54 ]
  %69 = shl i64 %68, 3
  %70 = tail call i8* @_Znwm(i64 %69) #10
  %71 = bitcast i8* %70 to %"class.base::internal::UncheckedObserverAdapter"*
  br label %72

72:                                               ; preds = %67, %59
  %73 = phi i64 [ %68, %67 ], [ 0, %59 ]
  %74 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %71, %67 ], [ null, %59 ]
  %75 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %49
  %76 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %74, i64 %73
  %77 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %76 to i64
  %78 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %75 to i64*
  store i64 %32, i64* %78, align 8
  %79 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 1
  %80 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %79 to i64
  %81 = getelementptr inbounds %"class.base::ObserverList", %"class.base::ObserverList"* %4, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8
  %83 = load i64, i64* %45, align 8
  %84 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %82 to i64
  %85 = sub i64 %83, %84
  %86 = ashr exact i64 %85, 3
  %87 = sub nsw i64 0, %86
  %88 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %75, i64 %87
  %89 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %88 to i64
  %90 = icmp sgt i64 %85, 0
  br i1 %90, label %91, label %95

91:                                               ; preds = %72
  %92 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %88 to i8*
  %93 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %82 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 8 %93, i64 %85, i1 false) #11
  %94 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %81, align 8
  br label %95

95:                                               ; preds = %91, %72
  %96 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %82, %72 ], [ %94, %91 ]
  store i64 %89, i64* %46, align 8
  store i64 %80, i64* %45, align 8
  store i64 %77, i64* %55, align 8
  %97 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %96, null
  br i1 %97, label %100, label %98

98:                                               ; preds = %95
  %99 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %96 to i8*
  tail call void @_ZdlPv(i8* %99) #10
  br label %100

100:                                              ; preds = %98, %95, %38, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8headless7tracing18ExperimentalDomain14RemoveObserverEPNS0_20ExperimentalObserverE(%"class.headless::tracing::ExperimentalDomain"*, %"class.headless::tracing::ExperimentalObserver"* readnone) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %3, align 8
  %5 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %6 = load %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  %7 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %4, %6
  %8 = bitcast %"class.headless::tracing::ExperimentalObserver"* %1 to i8*
  %9 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %6 to i64
  br i1 %7, label %18, label %10

10:                                               ; preds = %2, %15
  %11 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %16, %15 ], [ %4, %2 ]
  %12 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, %8
  br i1 %14, label %18, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %11, i64 1
  %17 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %16, %6
  br i1 %17, label %47, label %10

18:                                               ; preds = %10, %2
  %19 = phi %"class.base::internal::UncheckedObserverAdapter"* [ %4, %2 ], [ %11, %10 ]
  %20 = icmp eq %"class.base::internal::UncheckedObserverAdapter"* %19, %6
  br i1 %20, label %47, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = add i64 %27, -1
  store i64 %28, i64* %26, align 8
  br label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0, i32 1
  %31 = bitcast %"class.base::internal::LinkNodeBase"** %30 to %"class.base::LinkNode"**
  %32 = load %"class.base::LinkNode"*, %"class.base::LinkNode"** %31, align 8
  %33 = getelementptr inbounds %"class.headless::tracing::ExperimentalDomain", %"class.headless::tracing::ExperimentalDomain"* %0, i64 0, i32 0, i32 1, i32 1, i32 0
  %34 = icmp eq %"class.base::LinkNode"* %32, %33
  br i1 %34, label %35, label %46

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 1
  %37 = ptrtoint %"class.base::internal::UncheckedObserverAdapter"* %36 to i64
  %38 = sub i64 %9, %37
  %39 = ashr exact i64 %38, 3
  %40 = icmp eq i64 %38, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %19 to i8*
  %43 = bitcast %"class.base::internal::UncheckedObserverAdapter"* %36 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 %38, i1 false) #11
  br label %44

44:                                               ; preds = %41, %35
  %45 = getelementptr inbounds %"class.base::internal::UncheckedObserverAdapter", %"class.base::internal::UncheckedObserverAdapter"* %19, i64 %39
  store %"class.base::internal::UncheckedObserverAdapter"* %45, %"class.base::internal::UncheckedObserverAdapter"** %5, align 8
  br label %47

46:                                               ; preds = %29
  store i8* null, i8** %22, align 8
  br label %47

47:                                               ; preds = %15, %18, %44, %46
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless7tracing11StartParamsD2Ev(%"class.headless::tracing::StartParams"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  tail call void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"* %6) #11
  store i8 0, i8* %2, align 8
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.headless::tracing::TraceConfig"*, %"class.headless::tracing::TraceConfig"** %12, align 8
  store %"class.headless::tracing::TraceConfig"* null, %"class.headless::tracing::TraceConfig"** %12, align 8
  %14 = icmp eq %"class.headless::tracing::TraceConfig"* %13, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  tail call void @_ZN8headless7tracing11TraceConfigD2Ev(%"class.headless::tracing::TraceConfig"* nonnull %13) #11
  %16 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %16) #10
  br label %17

17:                                               ; preds = %15, %11
  store i8 0, i8* %8, align 8
  br label %18

18:                                               ; preds = %7, %17
  %19 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #10
  br label %31

31:                                               ; preds = %28, %22
  store i8 0, i8* %19, align 8
  br label %32

32:                                               ; preds = %18, %31
  %33 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %46, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.headless::tracing::StartParams", %"class.headless::tracing::StartParams"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  tail call void @_ZdlPv(i8* %44) #10
  br label %45

45:                                               ; preds = %42, %36
  store i8 0, i8* %33, align 8
  br label %46

46:                                               ; preds = %32, %45
  ret void
}

; Function Attrs: nounwind
declare void @_ZN8headless8protocol6BinaryD1Ev(%"class.headless::protocol::Binary"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8headless7tracing11TraceConfigD2Ev(%"class.headless::tracing::TraceConfig"*) unnamed_addr #1 comdat align 2 {
  %2 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load %"class.base::DictionaryValue"*, %"class.base::DictionaryValue"** %6, align 8
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %6, align 8
  %8 = icmp eq %"class.base::DictionaryValue"* %7, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %7, i64 0, i32 0
  tail call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %10) #11
  %11 = bitcast %"class.base::DictionaryValue"* %7 to i8*
  tail call void @_ZdlPv(i8* %11) #10
  br label %12

12:                                               ; preds = %9, %5
  store i8 0, i8* %2, align 8
  br label %13

13:                                               ; preds = %1, %12
  %14 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.std::__1::vector.118", %"class.std::__1::vector.118"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %19, align 8
  %21 = icmp eq %"class.std::__1::basic_string"* %20, null
  br i1 %21, label %44, label %22

22:                                               ; preds = %17
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %24 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %25 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %24, align 8
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %20
  br i1 %26, label %42, label %27

27:                                               ; preds = %22, %37
  %28 = phi %"class.std::__1::basic_string"* [ %29, %37 ], [ %25, %22 ]
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 -1
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #10
  br label %37

37:                                               ; preds = %34, %27
  %38 = icmp eq %"class.std::__1::basic_string"* %29, %20
  br i1 %38, label %39, label %27

39:                                               ; preds = %37
  %40 = bitcast %"class.std::__1::vector.118"* %18 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %22
  %43 = phi i8* [ %41, %39 ], [ %23, %22 ]
  store %"class.std::__1::basic_string"* %20, %"class.std::__1::basic_string"** %24, align 8
  tail call void @_ZdlPv(i8* %43) #10
  br label %44

44:                                               ; preds = %42, %17
  store i8 0, i8* %14, align 8
  br label %45

45:                                               ; preds = %13, %44
  %46 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %77, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.std::__1::vector.118", %"class.std::__1::vector.118"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %51, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %52, null
  br i1 %53, label %76, label %54

54:                                               ; preds = %49
  %55 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  %56 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %56, align 8
  %58 = icmp eq %"class.std::__1::basic_string"* %57, %52
  br i1 %58, label %74, label %59

59:                                               ; preds = %54, %69
  %60 = phi %"class.std::__1::basic_string"* [ %61, %69 ], [ %57, %54 ]
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 -1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #10
  br label %69

69:                                               ; preds = %66, %59
  %70 = icmp eq %"class.std::__1::basic_string"* %61, %52
  br i1 %70, label %71, label %59

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.118"* %50 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %54
  %75 = phi i8* [ %73, %71 ], [ %55, %54 ]
  store %"class.std::__1::basic_string"* %52, %"class.std::__1::basic_string"** %56, align 8
  tail call void @_ZdlPv(i8* %75) #10
  br label %76

76:                                               ; preds = %74, %49
  store i8 0, i8* %46, align 8
  br label %77

77:                                               ; preds = %45, %76
  %78 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %109, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = getelementptr inbounds %"class.std::__1::vector.118", %"class.std::__1::vector.118"* %82, i64 0, i32 0, i32 0
  %84 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %83, align 8
  %85 = icmp eq %"class.std::__1::basic_string"* %84, null
  br i1 %85, label %108, label %86

86:                                               ; preds = %81
  %87 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %88 = getelementptr inbounds %"class.headless::tracing::TraceConfig", %"class.headless::tracing::TraceConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %89 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %88, align 8
  %90 = icmp eq %"class.std::__1::basic_string"* %89, %84
  br i1 %90, label %106, label %91

91:                                               ; preds = %86, %101
  %92 = phi %"class.std::__1::basic_string"* [ %93, %101 ], [ %89, %86 ]
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 -1
  %94 = bitcast %"class.std::__1::basic_string"* %93 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %95 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %94, i64 0, i32 1, i32 0
  %96 = load i8, i8* %95, align 1
  %97 = icmp slt i8 %96, 0
  br i1 %97, label %98, label %101

98:                                               ; preds = %91
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  tail call void @_ZdlPv(i8* %100) #10
  br label %101

101:                                              ; preds = %98, %91
  %102 = icmp eq %"class.std::__1::basic_string"* %93, %84
  br i1 %102, label %103, label %91

103:                                              ; preds = %101
  %104 = bitcast %"class.std::__1::vector.118"* %82 to i8**
  %105 = load i8*, i8** %104, align 8
  br label %106

106:                                              ; preds = %103, %86
  %107 = phi i8* [ %105, %103 ], [ %87, %86 ]
  store %"class.std::__1::basic_string"* %84, %"class.std::__1::basic_string"** %88, align 8
  tail call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %106, %81
  store i8 0, i8* %78, align 8
  br label %109

109:                                              ; preds = %77, %108
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEFvS8_EE3RunEPNS0_13BindStateBaseES8_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.headless::tracing::Domain"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)**
  %22 = load void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)*, void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.headless::tracing::Domain"*, %"class.base::Value"*)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.headless::tracing::Domain"* %13, %"class.base::Value"* dereferenceable(32) %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.51", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.51"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.51"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback.51"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.51"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.51"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.51"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback.51", %"class.base::OnceCallback.51"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.58", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.58"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.58"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback.58"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.58"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.58"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.58"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback.58", %"class.base::OnceCallback.58"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.71", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.71"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.71"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback.71"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.71"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.71"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.71"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback.71", %"class.base::OnceCallback.71"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS4_14default_deleteIS8_EEEEEEERKNS_5ValueEEJSD_EEEFvSG_EE7RunOnceEPNS0_13BindStateBaseESG_(%"class.base::internal::BindStateBase"*, %"class.base::Value"* dereferenceable(32)) #1 comdat align 2 {
  %3 = alloca %"class.base::OnceCallback.158", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::OnceCallback.158"*, %"class.base::Value"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast %"class.base::OnceCallback.158"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #11
  %8 = load void (%"class.base::OnceCallback.158"*, %"class.base::Value"*)*, void (%"class.base::OnceCallback.158"*, %"class.base::Value"*)** %5, align 8
  %9 = bitcast void ()** %6 to %"class.base::internal::BindStateBase"**
  %10 = bitcast void ()** %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback.158"* %3 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  call void %8(%"class.base::OnceCallback.158"* nonnull %3, %"class.base::Value"* dereferenceable(32) %1) #11
  %13 = getelementptr inbounds %"class.base::OnceCallback.158", %"class.base::OnceCallback.158"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #1 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal12LinkNodeBaseC2Ev(%"class.base::internal::LinkNodeBase"*) unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase16InsertBeforeBaseEPS1_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBase14RemoveFromListEv(%"class.base::internal::LinkNodeBase"*) local_unnamed_addr #4

declare void @_ZN4base8internal12LinkNodeBaseC2EPS1_S2_(%"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"*) unnamed_addr #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6}
!4 = distinct !{!4, !5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!5 = distinct !{!5, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!6 = distinct !{!6, !7, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!7 = distinct !{!7, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!8 = !{!9, !11}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!12 = distinct !{!12, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!13 = !{!14, !16}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS0_17UnretainedWrapperIS5_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!17 = distinct !{!17, !"_ZN4base13BindRepeatingIMN8headless7tracing6DomainEFvRKNS_5ValueEEJNS_8internal17UnretainedWrapperIS3_EEEEENS_17RepeatingCallbackINS9_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!20 = distinct !{!20, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.unroll.disable"}
!26 = distinct !{!26, !25}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!29 = distinct !{!29, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!32 = distinct !{!32, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!33 = distinct !{!33, !25}
!34 = distinct !{!34, !25}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv: argument 0"}
!40 = distinct !{!40, !"_ZNK4base12ObserverListIN8headless7tracing20ExperimentalObserverELb0ELb1ENS_8internal24UncheckedObserverAdapterEE3endEv"}
!41 = distinct !{!41, !25}
!42 = distinct !{!42, !25}
!43 = !{!44, !46}
!44 = distinct !{!44, !45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!45 = distinct !{!45, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!46 = distinct !{!46, !47, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!47 = distinct !{!47, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing9EndResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!48 = !{!49, !51}
!49 = distinct !{!49, !50, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!50 = distinct !{!50, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!51 = distinct !{!51, !52, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!52 = distinct !{!52, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing19GetCategoriesResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!53 = !{!54, !56}
!54 = distinct !{!54, !55, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!56 = distinct !{!56, !57, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!57 = distinct !{!57, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing27RecordClockSyncMarkerResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!58 = !{!59, !61}
!59 = distinct !{!59, !60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!60 = distinct !{!60, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!61 = distinct !{!61, !62, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing23RequestMemoryDumpResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!63 = !{!64, !66}
!64 = distinct !{!64, !65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_: argument 0"}
!65 = distinct !{!65, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFvNS2_IFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS3_14default_deleteIS7_EEEEEEERKNS_5ValueEEJSC_EEEDcOT0_DpOT1_"}
!66 = distinct !{!66, !67, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!67 = distinct !{!67, !"_ZN4base8BindOnceIPFvNS_12OnceCallbackIFvNSt3__110unique_ptrIN8headless7tracing11StartResultENS2_14default_deleteIS6_EEEEEEERKNS_5ValueEEJSB_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
