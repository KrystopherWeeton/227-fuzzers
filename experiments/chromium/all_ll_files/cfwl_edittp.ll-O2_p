; ModuleID = '../../third_party/pdfium/xfa/fwl/theme/cfwl_edittp.cpp'
source_filename = "../../third_party/pdfium/xfa/fwl/theme/cfwl_edittp.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CFWL_EditTP = type { %class.CFWL_WidgetTP }
%class.CFWL_WidgetTP = type { i32 (...)**, %"class.std::__1::unique_ptr", %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.5" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.CFDE_TextOut* }
%class.CFDE_TextOut = type opaque
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr.1" }
%"class.std::__1::unique_ptr.1" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.CFGAS_GEFont* }
%class.CFGAS_GEFont = type opaque
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.CFWL_WidgetTP::CColorData"* }
%"struct.CFWL_WidgetTP::CColorData" = type { [4 x i32], [4 x i32], [4 x i32], [4 x i32] }
%class.CFWL_ThemeBackground = type { %class.CFWL_ThemePart, %"class.fxcrt::UnownedPtr.17", %"class.fxcrt::UnownedPtr.21" }
%class.CFWL_ThemePart = type { %class.CFX_Matrix, %class.CFX_RectF, %"class.fxcrt::UnownedPtr", i32, i8, i8, i8, %"class.fxcrt::UnownedPtr.11" }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CFX_RectF = type { float, float, float, float }
%"class.fxcrt::UnownedPtr" = type { %class.CFX_RectF* }
%"class.fxcrt::UnownedPtr.11" = type { %class.CFWL_Widget* }
%class.CFWL_Widget = type { %class.IFWL_WidgetDelegate, %"class.CFWL_Widget::Properties", %class.CFX_RectF, i32, i64, %"class.cppgc::internal::BasicMember", %"class.cppgc::internal::BasicMember.13", %"class.cppgc::internal::BasicMember.14", %"class.cppgc::internal::BasicMember.15", %"class.cppgc::internal::BasicMember.16" }
%class.IFWL_WidgetDelegate = type { %"class.cppgc::GarbageCollectedMixin" }
%"class.cppgc::GarbageCollectedMixin" = type { i32 (...)** }
%"class.CFWL_Widget::Properties" = type { i32, i32, i32 }
%"class.cppgc::internal::BasicMember" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::MemberBase" = type { i8* }
%"class.cppgc::internal::BasicMember.13" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.14" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.15" = type { %"class.cppgc::internal::MemberBase" }
%"class.cppgc::internal::BasicMember.16" = type { %"class.cppgc::internal::MemberBase" }
%"class.fxcrt::UnownedPtr.17" = type { %class.CFGAS_GEPath* }
%class.CFGAS_GEPath = type { %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.18" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %class.FX_PATHPOINT* }
%"class.fxcrt::UnownedPtr.21" = type { %class.CFGAS_GEGraphics* }
%class.CFGAS_GEGraphics = type { %"class.fxcrt::UnownedPtr.22", %"struct.CFGAS_GEGraphics::TInfo", %"class.std::__1::vector.32" }
%"class.fxcrt::UnownedPtr.22" = type { %class.CFX_RenderDevice* }
%class.CFX_RenderDevice = type opaque
%"struct.CFGAS_GEGraphics::TInfo" = type { %class.CFX_GraphStateData, %class.CFX_Matrix, i8, %class.CFGAS_GEColor, %class.CFGAS_GEColor }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.23" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { float*, float*, %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { float* }
%class.CFGAS_GEColor = type { i32, i32, %"class.fxcrt::UnownedPtr.30", %"class.fxcrt::UnownedPtr.31" }
%"class.fxcrt::UnownedPtr.30" = type { %class.CFGAS_GEPattern* }
%class.CFGAS_GEPattern = type opaque
%"class.fxcrt::UnownedPtr.31" = type { %class.CFGAS_GEShading* }
%class.CFGAS_GEShading = type opaque
%"class.std::__1::vector.32" = type { %"class.std::__1::__vector_base.33" }
%"class.std::__1::__vector_base.33" = type { %"class.std::__1::unique_ptr.34"*, %"class.std::__1::unique_ptr.34"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::unique_ptr.34" = type opaque
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.std::__1::unique_ptr.34"* }
%"class.CFWL_Widget::AdapterIface" = type { %"class.cppgc::GarbageCollectedMixin" }
%class.CFWL_ThemeText = type opaque

@_ZTV11CFWL_EditTP = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CFWL_EditTP*)* @_ZN11CFWL_EditTPD2Ev to i8*), i8* bitcast (void (%class.CFWL_EditTP*)* @_ZN11CFWL_EditTPD0Ev to i8*), i8* bitcast (void (%class.CFWL_EditTP*, %class.CFWL_ThemeBackground*)* @_ZN11CFWL_EditTP14DrawBackgroundERK20CFWL_ThemeBackground to i8*), i8* bitcast (void (%class.CFWL_WidgetTP*, %class.CFWL_ThemeText*)* @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText to i8*)] }, align 8

@_ZN11CFWL_EditTPC1Ev = hidden unnamed_addr alias void (%class.CFWL_EditTP*), void (%class.CFWL_EditTP*)* @_ZN11CFWL_EditTPC2Ev
@_ZN11CFWL_EditTPD1Ev = hidden unnamed_addr alias void (%class.CFWL_EditTP*), void (%class.CFWL_EditTP*)* @_ZN11CFWL_EditTPD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_EditTPC2Ev(%class.CFWL_EditTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_EditTP, %class.CFWL_EditTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPC2Ev(%class.CFWL_WidgetTP* %2) #4
  %3 = getelementptr inbounds %class.CFWL_EditTP, %class.CFWL_EditTP* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTV11CFWL_EditTP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  ret void
}

declare void @_ZN13CFWL_WidgetTPC2Ev(%class.CFWL_WidgetTP*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_EditTPD2Ev(%class.CFWL_EditTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_EditTP, %class.CFWL_EditTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_EditTPD0Ev(%class.CFWL_EditTP*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CFWL_EditTP, %class.CFWL_EditTP* %0, i64 0, i32 0
  tail call void @_ZN13CFWL_WidgetTPD2Ev(%class.CFWL_WidgetTP* %2) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11CFWL_EditTP14DrawBackgroundERK20CFWL_ThemeBackground(%class.CFWL_EditTP*, %class.CFWL_ThemeBackground* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFGAS_GEColor, align 8
  %4 = alloca %class.CFGAS_GEPath, align 8
  %5 = alloca %class.CFGAS_GEColor, align 8
  %6 = alloca %class.CFGAS_GEColor, align 8
  %7 = alloca %class.CFGAS_GEColor, align 8
  %8 = alloca %class.CFGAS_GEColor, align 8
  %9 = alloca i32, align 4
  %10 = alloca float, align 4
  %11 = alloca %class.CFGAS_GEColor, align 8
  %12 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 4
  %13 = load i8, i8* %12, align 4
  switch i8 %13, label %100 [
    i8 3, label %14
    i8 2, label %20
    i8 8, label %74
  ]

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.CFWL_EditTP, %class.CFWL_EditTP* %0, i64 0, i32 0
  %16 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 2, i32 0
  %17 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %16, align 8
  %18 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1
  %19 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 0
  tail call void @_ZN13CFWL_WidgetTP10DrawBorderEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP* %15, %class.CFGAS_GEGraphics* %17, %class.CFX_RectF* dereferenceable(16) %18, %class.CFX_Matrix* dereferenceable(24) %19) #4
  br label %100

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 1, i32 0
  %22 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %21, align 8
  %23 = icmp eq %class.CFGAS_GEPath* %22, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 2, i32 0
  %26 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %25, align 8
  tail call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %26) #4
  %27 = bitcast %class.CFGAS_GEColor* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %3, i32 -6700582) #4
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %26, %class.CFGAS_GEColor* nonnull dereferenceable(24) %3) #4
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %3) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #4
  %28 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %21, align 8
  %29 = icmp eq %class.CFGAS_GEPath* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 0
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %26, %class.CFGAS_GEPath* nonnull dereferenceable(24) %28, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %31) #4
  br label %32

32:                                               ; preds = %24, %30
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %26) #4
  br label %100

33:                                               ; preds = %20
  %34 = bitcast %class.CFGAS_GEPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #4
  %35 = bitcast %class.CFGAS_GEPath* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %35, i8 -86, i64 24, i1 false)
  call void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath* nonnull %4) #4
  %36 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1, i32 0
  %37 = load float, float* %36, align 8
  %38 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1, i32 1
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1, i32 2
  %41 = load float, float* %40, align 8
  %42 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 1, i32 3
  %43 = load float, float* %42, align 4
  call void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath* nonnull %4, float %37, float %39, float %41, float %43) #4
  %44 = bitcast %class.CFGAS_GEColor* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #4
  %45 = bitcast %class.CFGAS_GEColor* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false)
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %5, i32 -1250856) #4
  %46 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 6
  %47 = load i8, i8* %46, align 2, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %67

49:                                               ; preds = %33
  %50 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 3
  %51 = load i32, i32* %50, align 8
  %52 = and i32 %51, 8
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %49
  %55 = bitcast %class.CFGAS_GEColor* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %6, i32 -921630) #4
  br label %63

56:                                               ; preds = %49
  %57 = and i32 %51, 2048
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = bitcast %class.CFGAS_GEColor* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %7, i32 -1250856) #4
  br label %63

61:                                               ; preds = %56
  %62 = bitcast %class.CFGAS_GEColor* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %62) #4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %8, i32 -1) #4
  br label %63

63:                                               ; preds = %59, %61, %54
  %64 = phi %class.CFGAS_GEColor* [ %6, %54 ], [ %8, %61 ], [ %7, %59 ]
  %65 = phi i8* [ %55, %54 ], [ %62, %61 ], [ %60, %59 ]
  %66 = call dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor* nonnull %5, %class.CFGAS_GEColor* nonnull dereferenceable(24) %64) #4
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %64) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #4
  br label %67

67:                                               ; preds = %63, %33
  %68 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 2, i32 0
  %69 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %68, align 8
  call void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics* %69) #4
  %70 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %68, align 8
  call void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %70, %class.CFGAS_GEColor* nonnull dereferenceable(24) %5) #4
  %71 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %68, align 8
  %72 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 0
  call void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics* %71, %class.CFGAS_GEPath* nonnull dereferenceable(24) %4, i8 zeroext 2, %class.CFX_Matrix* dereferenceable(24) %72) #4
  %73 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %68, align 8
  call void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics* %73) #4
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %5) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #4
  call void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath* nonnull %4) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #4
  br label %100

74:                                               ; preds = %2
  %75 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 7, i32 0
  %76 = load %class.CFWL_Widget*, %class.CFWL_Widget** %75, align 8
  %77 = tail call %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget* %76) #4
  %78 = getelementptr inbounds %class.CFWL_Widget, %class.CFWL_Widget* %77, i64 0, i32 5
  %79 = bitcast %"class.cppgc::internal::BasicMember"* %78 to %"class.CFWL_Widget::AdapterIface"**
  %80 = load %"class.CFWL_Widget::AdapterIface"*, %"class.CFWL_Widget::AdapterIface"** %79, align 8
  %81 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %81) #4
  store i32 -16777216, i32* %9, align 4
  %82 = bitcast float* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #4
  store float 1.000000e+00, float* %10, align 4
  %83 = bitcast %"class.CFWL_Widget::AdapterIface"* %80 to void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)***
  %84 = load void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)**, void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)*** %83, align 8
  %85 = getelementptr inbounds void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)*, void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)** %84, i64 5
  %86 = load void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)*, void (%"class.CFWL_Widget::AdapterIface"*, i32*, float*)** %85, align 8
  call void %86(%"class.CFWL_Widget::AdapterIface"* %80, i32* nonnull %9, float* nonnull %10) #4
  %87 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 2, i32 0
  %88 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %87, align 8
  %89 = bitcast %class.CFGAS_GEColor* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %89) #4
  %90 = load i32, i32* %9, align 4
  call void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor* nonnull %11, i32 %90) #4
  call void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics* %88, %class.CFGAS_GEColor* nonnull dereferenceable(24) %11) #4
  call void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor* nonnull %11) #4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %89) #4
  %91 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %87, align 8
  %92 = load float, float* %10, align 4
  call void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics* %91, float %92) #4
  %93 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 1, i32 0
  %94 = load %class.CFGAS_GEPath*, %class.CFGAS_GEPath** %93, align 8
  %95 = icmp eq %class.CFGAS_GEPath* %94, null
  br i1 %95, label %99, label %96

96:                                               ; preds = %74
  %97 = load %class.CFGAS_GEGraphics*, %class.CFGAS_GEGraphics** %87, align 8
  %98 = getelementptr inbounds %class.CFWL_ThemeBackground, %class.CFWL_ThemeBackground* %1, i64 0, i32 0, i32 0
  call void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics* %97, %class.CFGAS_GEPath* nonnull dereferenceable(24) %94, %class.CFX_Matrix* dereferenceable(24) %98) #4
  br label %99

99:                                               ; preds = %74, %96
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %81) #4
  br label %100

100:                                              ; preds = %2, %32, %67, %99, %14
  ret void
}

declare void @_ZN13CFWL_WidgetTP10DrawBorderEP16CFGAS_GEGraphicsRK9CFX_RectFRK10CFX_Matrix(%class.CFWL_WidgetTP*, %class.CFGAS_GEGraphics*, %class.CFX_RectF* dereferenceable(16), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN16CFGAS_GEGraphics14SaveGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics12SetFillColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN13CFGAS_GEColorC1Ej(%class.CFGAS_GEColor*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN13CFGAS_GEColorD1Ev(%class.CFGAS_GEColor*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN16CFGAS_GEGraphics8FillPathERK12CFGAS_GEPathN21CFX_FillRenderOptions8FillTypeERK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), i8 zeroext, %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics17RestoreGraphStateEv(%class.CFGAS_GEGraphics*) local_unnamed_addr #1

declare void @_ZN12CFGAS_GEPathC1Ev(%class.CFGAS_GEPath*) unnamed_addr #1

declare void @_ZN12CFGAS_GEPath12AddRectangleEffff(%class.CFGAS_GEPath*, float, float, float, float) local_unnamed_addr #1

declare dereferenceable(24) %class.CFGAS_GEColor* @_ZN13CFGAS_GEColoraSERKS_(%class.CFGAS_GEColor*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN12CFGAS_GEPathD1Ev(%class.CFGAS_GEPath*) unnamed_addr #2

declare %class.CFWL_Widget* @_ZNK11CFWL_Widget10GetOutmostEv(%class.CFWL_Widget*) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics14SetStrokeColorERK13CFGAS_GEColor(%class.CFGAS_GEGraphics*, %class.CFGAS_GEColor* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics12SetLineWidthEf(%class.CFGAS_GEGraphics*, float) local_unnamed_addr #1

declare void @_ZN16CFGAS_GEGraphics10StrokePathERK12CFGAS_GEPathRK10CFX_Matrix(%class.CFGAS_GEGraphics*, %class.CFGAS_GEPath* dereferenceable(24), %class.CFX_Matrix* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN13CFWL_WidgetTP8DrawTextERK14CFWL_ThemeText(%class.CFWL_WidgetTP*, %class.CFWL_ThemeText*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
