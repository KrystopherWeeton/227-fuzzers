; ModuleID = '../../third_party/blink/renderer/platform/bindings/runtime_call_stats.cc'
source_filename = "../../third_party/blink/renderer/platform/bindings/runtime_call_stats.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<blink::RuntimeCallStats>::InstanceStorage" }
%"class.WTF::StaticSingleton<blink::RuntimeCallStats>::InstanceStorage" = type { %"class.blink::RuntimeCallStats"* }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.v8::Isolate" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.29", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.226", %"class.std::__1::unique_ptr.231", %"class.blink::Persistent.237", %"class.blink::Persistent.239", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.11", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.17", %"class.std::__1::unique_ptr.23", i32, i32 }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.29" = type { %"class.WTF::HashTable.30" }
%"class.WTF::HashTable.30" = type <{ %"struct.WTF::KeyValuePair.33"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.33" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.46", i32, [4 x i8], %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.181", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.222", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.55", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.67", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.90", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.118", %"class.std::__1::unique_ptr.125", %"class.std::__1::unique_ptr.132", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.164", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.55" = type { %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.82" = type { %"struct.std::__1::__atomic_base.83" }
%"struct.std::__1::__atomic_base.83" = type { %"struct.std::__1::__atomic_base.84" }
%"struct.std::__1::__atomic_base.84" = type { %"struct.std::__1::__cxx_atomic_impl.85" }
%"struct.std::__1::__cxx_atomic_impl.85" = type { %"struct.std::__1::__cxx_atomic_base_impl.86" }
%"struct.std::__1::__cxx_atomic_base_impl.86" = type { i64 }
%"class.std::__1::unique_ptr.90" = type { %"class.std::__1::__compressed_pair.91" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem.92" }
%"struct.std::__1::__compressed_pair_elem.92" = type { %"class.blink::Worklist.93"* }
%"class.blink::Worklist.93" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::Worklist.100"* }
%"class.blink::Worklist.100" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::Worklist.107"* }
%"class.blink::Worklist.107" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.blink::Worklist.114"* }
%"class.blink::Worklist.114" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.blink::Worklist.121"* }
%"class.blink::Worklist.121" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.125" = type { %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"class.blink::Worklist.128"* }
%"class.blink::Worklist.128" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.132" = type { %"class.std::__1::__compressed_pair.133" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.blink::Worklist.135"* }
%"class.blink::Worklist.135" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.82" }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.142", %"class.std::__1::__compressed_pair.151", %"class.std::__1::__compressed_pair.156", %"class.std::__1::__compressed_pair.158", [4 x i8] }>
%"class.std::__1::unique_ptr.142" = type { %"class.std::__1::__compressed_pair.143" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.144", %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.144" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { i64 }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"class.std::__1::__compressed_pair.158" = type { %"struct.std::__1::__compressed_pair_elem.159" }
%"struct.std::__1::__compressed_pair_elem.159" = type { float }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.167", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.189" }
%"class.WTF::VectorBuffer.189" = type { %"class.WTF::VectorBufferBase.190" }
%"class.WTF::VectorBufferBase.190" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.203" }
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.93"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.100"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.107"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.114"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.121"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.250" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.221 }
%class.scoped_refptr.221 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.222" = type { %"struct.std::__1::__atomic_base.223" }
%"struct.std::__1::__atomic_base.223" = type { %"struct.std::__1::__cxx_atomic_impl.224" }
%"struct.std::__1::__cxx_atomic_impl.224" = type { %"struct.std::__1::__cxx_atomic_base_impl.225" }
%"struct.std::__1::__cxx_atomic_base_impl.225" = type { i8 }
%"class.WTF::Vector.226" = type { %"class.WTF::VectorBuffer.227" }
%"class.WTF::VectorBuffer.227" = type { %"class.WTF::VectorBufferBase.228" }
%"class.WTF::VectorBufferBase.228" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.237" = type { %"class.blink::PersistentBase.238" }
%"class.blink::PersistentBase.238" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.239" = type { %"class.blink::PersistentBase.240" }
%"class.blink::PersistentBase.240" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.245" }
%"class.WTF::Vector.245" = type { %"class.WTF::VectorBuffer.246" }
%"class.WTF::VectorBuffer.246" = type { %"class.WTF::VectorBufferBase.247" }
%"class.WTF::VectorBufferBase.247" = type { %"struct.std::__1::pair.248"*, i32, i32 }
%"struct.std::__1::pair.248" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.274" }
%"class.blink::MemberBase.274" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.255, i32, i8, i8, [2 x i8] }>
%union.anon.255 = type { %"class.WTF::Vector.256" }
%"class.WTF::Vector.256" = type { %"class.WTF::VectorBuffer.257" }
%"class.WTF::VectorBuffer.257" = type { %"class.WTF::VectorBufferBase.258", [16 x i8] }
%"class.WTF::VectorBufferBase.258" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr" }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.base::trace_event::TracedValue"* }
%"class.base::trace_event::TracedValue" = type { %"class.base::trace_event::ConvertableToTraceFormat", %"class.std::__1::unique_ptr.4" }
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.base::trace_event::TracedValue::Writer"* }
%"class.base::trace_event::TracedValue::Writer" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.base::DefaultTickClock" = type { %"class.base::TickClock" }
%"class.blink::RuntimeCallStatsScopedTracer" = type { %"class.blink::RuntimeCallStats"* }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::TracedValue"* }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.275", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"class.std::__1::vector.275" = type { %"class.std::__1::__vector_base.276" }
%"class.std::__1::__vector_base.276" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.277", i64, i64 }
%"class.std::__1::unique_ptr.277" = type { %"class.std::__1::__compressed_pair.278" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.279" }
%"struct.std::__1::__compressed_pair_elem.279" = type { i8* }
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.288" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@.str = private unnamed_addr constant [73 x i8] c"../../third_party/blink/renderer/platform/bindings/runtime_call_stats.cc\00", align 1
@.str.1 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@_ZZN5blink16RuntimeCallStatsC1EPKN4base9TickClockEE5names = internal unnamed_addr constant [40 x i8*] [i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i32 0, i32 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.5, i32 0, i32 0), i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.41, i32 0, i32 0)], align 16
@.str.2 = private unnamed_addr constant [42 x i8] c"Blink_Bindings_AssociateObjectWithWrapper\00", align 1
@.str.3 = private unnamed_addr constant [29 x i8] c"Blink_Bindings_CreateWrapper\00", align 1
@.str.4 = private unnamed_addr constant [27 x i8] c"Blink_Bindings_HasInstance\00", align 1
@.str.5 = private unnamed_addr constant [34 x i8] c"Blink_Bindings_ToExecutionContext\00", align 1
@.str.6 = private unnamed_addr constant [29 x i8] c"Blink_Bindings_ToV8DOMWindow\00", align 1
@.str.7 = private unnamed_addr constant [36 x i8] c"Blink_Bindings_ToV8SequenceInternal\00", align 1
@.str.8 = private unnamed_addr constant [44 x i8] c"Blink_Bindings_SetReturnValueFromStringSlow\00", align 1
@.str.9 = private unnamed_addr constant [36 x i8] c"Blink_Bindings_V8ExternalStringSlow\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Blink_GC_CollectGarbage\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Blink_GC_GcEpilogue\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"Blink_GC_GcPrologue\00", align 1
@.str.13 = private unnamed_addr constant [30 x i8] c"Blink_GC_PerformIdleLazySweep\00", align 1
@.str.14 = private unnamed_addr constant [40 x i8] c"Blink_Parsing_DocumentFragmentParseHTML\00", align 1
@.str.15 = private unnamed_addr constant [32 x i8] c"Blink_Parsing_ParserAppendChild\00", align 1
@.str.16 = private unnamed_addr constant [42 x i8] c"Blink_Parsing_ReplaceChildrenWithFragment\00", align 1
@.str.17 = private unnamed_addr constant [37 x i8] c"Blink_Parsing_HTMLTokenizerNextToken\00", align 1
@.str.18 = private unnamed_addr constant [28 x i8] c"Blink_Parsing_ConstructTree\00", align 1
@.str.19 = private unnamed_addr constant [30 x i8] c"Blink_Style_ProcessStyleSheet\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"Blink_Style_UpdateStyle\00", align 1
@.str.21 = private unnamed_addr constant [26 x i8] c"Blink_Layout_UpdateLayout\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"Blink_Layout_UpdateLayerPositionsAfterLayout\00", align 1
@.str.23 = private unnamed_addr constant [35 x i8] c"Blink_ElementGetBoundingClientRect\00", align 1
@.str.24 = private unnamed_addr constant [26 x i8] c"Blink_ElementGetInnerHTML\00", align 1
@.str.25 = private unnamed_addr constant [31 x i8] c"Blink_EventTargetDispatchEvent\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"Blink_HTMLElementClick\00", align 1
@.str.27 = private unnamed_addr constant [22 x i8] c"Blink_NodeAppendChild\00", align 1
@.str.28 = private unnamed_addr constant [22 x i8] c"Blink_NodeRemoveChild\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"Blink_WindowSetTimeout\00", align 1
@.str.30 = private unnamed_addr constant [28 x i8] c"Blink_DocumentCookie_Getter\00", align 1
@.str.31 = private unnamed_addr constant [28 x i8] c"Blink_DocumentCookie_Setter\00", align 1
@.str.32 = private unnamed_addr constant [30 x i8] c"Blink_ElementInnerHTML_Getter\00", align 1
@.str.33 = private unnamed_addr constant [30 x i8] c"Blink_ElementInnerHTML_Setter\00", align 1
@.str.34 = private unnamed_addr constant [22 x i8] c"Blink_NodeName_Getter\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"Blink_V8\00", align 1
@.str.36 = private unnamed_addr constant [19 x i8] c"Blink_TestCounter1\00", align 1
@.str.37 = private unnamed_addr constant [19 x i8] c"Blink_TestCounter2\00", align 1
@.str.38 = private unnamed_addr constant [32 x i8] c"Blink_BindingsMethodTestCounter\00", align 1
@.str.39 = private unnamed_addr constant [50 x i8] c"Blink_BindingsReadOnlyAttributeTestCounter_Getter\00", align 1
@.str.40 = private unnamed_addr constant [42 x i8] c"Blink_BindingsAttributeTestCounter_Getter\00", align 1
@.str.41 = private unnamed_addr constant [42 x i8] c"Blink_BindingsAttributeTestCounter_Setter\00", align 1
@_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE = internal unnamed_addr global %"class.blink::RuntimeCallStats"* null, align 8
@.str.42 = private unnamed_addr constant [31 x i8] c"Runtime Call Stats for Blink \0A\00", align 1
@.str.43 = private unnamed_addr constant [78 x i8] c"Name                                                    Count     Time (ms)\0A\0A\00", align 1
@_ZN5blink12_GLOBAL__N_110row_formatE = internal constant [20 x i8] c"%-55s  %8lu  %9.3f\0A\00", align 16
@_ZZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing = internal unnamed_addr global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing = internal global i64 0, align 8
@.str.44 = private unnamed_addr constant [37 x i8] c"disabled-by-default-v8.runtime_stats\00", align 1
@_ZN5blink28RuntimeCallStatsScopedTracer17s_category_group_E = hidden local_unnamed_addr constant i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), align 8
@.str.45 = private unnamed_addr constant [22 x i8] c"BlinkRuntimeCallStats\00", align 1
@_ZN5blink28RuntimeCallStatsScopedTracer7s_name_E = hidden local_unnamed_addr constant i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), align 8
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.46 = private unnamed_addr constant [19 x i8] c"runtime-call-stats\00", align 1
@.str.47 = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.48 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN5blink16RuntimeCallStatsC1EPKN4base9TickClockE = hidden unnamed_addr alias void (%"class.blink::RuntimeCallStats"*, %"class.base::TickClock"*), void (%"class.blink::RuntimeCallStats"*, %"class.base::TickClock"*)* @_ZN5blink16RuntimeCallStatsC2EPKN4base9TickClockE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19LogRuntimeCallStatsEv() local_unnamed_addr #0 {
  %1 = alloca %"class.logging::LogMessage", align 8
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 0) #13
  br i1 %4, label %5, label %58

5:                                                ; preds = %0
  %6 = bitcast %"class.logging::LogMessage"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %6) #13
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %1, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str, i64 0, i64 0), i32 23, i32 0) #13
  %7 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::basic_ostringstream"* %7 to %"class.std::__1::basic_ostream"*
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %8, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.1, i64 0, i64 0), i64 1) #13
  %10 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #13
  %11 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #13
  %12 = call %"class.v8::Isolate"* @_ZN5blink17MainThreadIsolateEv() #13
  %13 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** @_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE, align 8
  %14 = icmp eq %"class.blink::RuntimeCallStats"* %13, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = ptrtoint %"class.v8::Isolate"* %12 to i64
  %17 = add i64 %16, 8
  %18 = inttoptr i64 %17 to %"class.blink::V8PerIsolateData"**
  %19 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %19, i64 0, i32 15
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi %"class.blink::RuntimeCallStats"* [ %20, %15 ], [ %13, %5 ]
  %23 = call %"class.WTF::StringImpl"* @_ZNK5blink16RuntimeCallStats8ToStringEv(%"class.blink::RuntimeCallStats"* %22)
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3, i32 0) #13
  %25 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %27 to i64
  %34 = select i1 %28, i8* %30, i8* %10
  %35 = select i1 %28, i64 %32, i64 %33
  %36 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* %34, i64 %35) #13
  %37 = load i8, i8* %26, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %21
  %40 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %40) #14
  br label %41

41:                                               ; preds = %21, %39
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #13
  br label %57

57:                                               ; preds = %41, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #13
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #13
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %1) #13
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %6) #13
  br label %58

58:                                               ; preds = %0, %57
  ret void
}

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::RuntimeCallStats"* @_ZN5blink16RuntimeCallStats4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #3 align 2 {
  %2 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** @_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE, align 8
  %3 = icmp eq %"class.blink::RuntimeCallStats"* %2, null
  br i1 %3, label %4, label %10

4:                                                ; preds = %1
  %5 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %6 = add i64 %5, 8
  %7 = inttoptr i64 %6 to %"class.blink::V8PerIsolateData"**
  %8 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %8, i64 0, i32 15
  br label %10

10:                                               ; preds = %1, %4
  %11 = phi %"class.blink::RuntimeCallStats"* [ %9, %4 ], [ %2, %1 ]
  ret %"class.blink::RuntimeCallStats"* %11
}

declare %"class.v8::Isolate"* @_ZN5blink17MainThreadIsolateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink16RuntimeCallStats8ToStringEv(%"class.blink::RuntimeCallStats"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.base::TimeDelta", align 8
  %6 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 48, i1 false)
  %7 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %9 = bitcast %union.anon.255* %8 to i8*
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %11, align 4
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %12, align 1
  %13 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #13
  %14 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %15 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.42, i64 0, i64 0), i8** %16, align 8
  %17 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 30, i32* %17, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #13
  %18 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #13
  %19 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %20 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.43, i64 0, i64 0), i8** %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 77, i32* %22, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #13
  %23 = bitcast %"class.base::TimeDelta"* %5 to i8*
  %24 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %5, i64 0, i32 0
  br label %43

25:                                               ; preds = %43
  %26 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #13
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #13
  br label %42

42:                                               ; preds = %25, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #13
  ret %"class.WTF::StringImpl"* %26

43:                                               ; preds = %43, %1
  %44 = phi i64 [ 0, %1 ], [ %52, %43 ]
  %45 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %44, i32 2
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %44, i32 0
  %48 = load i64, i64* %47, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #13
  %49 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %44, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  store i64 %50, i64* %24, align 8
  %51 = call double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"* nonnull %5) #13
  call void (%"class.WTF::StringBuilder"*, i8*, ...) @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"* nonnull %2, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @_ZN5blink12_GLOBAL__N_110row_formatE, i64 0, i64 0), i8* %46, i64 %48, double %51) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #13
  %52 = add nuw nsw i64 %44, 1
  %53 = icmp eq i64 %52, 40
  br i1 %53, label %25, label %43
}

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18RuntimeCallCounter4DumpERNS_11TracedValueE(%"class.blink::RuntimeCallCounter"*, %"class.blink::TracedValue"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RuntimeCallCounter", %"class.blink::RuntimeCallCounter"* %0, i64 0, i32 2
  %4 = load i8*, i8** %3, align 8
  tail call void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"* %1, i8* %4) #13
  %5 = getelementptr inbounds %"class.blink::RuntimeCallCounter", %"class.blink::RuntimeCallCounter"* %0, i64 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = uitofp i64 %6 to double
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* %1, double %7) #13
  %8 = getelementptr inbounds %"class.blink::RuntimeCallCounter", %"class.blink::RuntimeCallCounter"* %0, i64 0, i32 1
  %9 = tail call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* %8) #13
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* %1, double %9) #13
  tail call void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"* %1) #13
  ret void
}

declare void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"*, double) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RuntimeCallTimer5StartEPNS_18RuntimeCallCounterEPS0_(%"class.blink::RuntimeCallTimer"* nocapture, %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 0
  store %"class.blink::RuntimeCallCounter"* %1, %"class.blink::RuntimeCallCounter"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 1
  store %"class.blink::RuntimeCallTimer"* %2, %"class.blink::RuntimeCallTimer"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 4
  %8 = load %"class.base::TickClock"*, %"class.base::TickClock"** %7, align 8
  %9 = bitcast %"class.base::TickClock"* %8 to i64 (%"class.base::TickClock"*)***
  %10 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %9, align 8
  %11 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %10, i64 2
  %12 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %11, align 8
  %13 = tail call i64 %12(%"class.base::TickClock"* %8) #13
  %14 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 2, i32 0, i32 0
  store i64 %13, i64* %14, align 8
  %15 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %6, align 8
  %16 = icmp eq %"class.blink::RuntimeCallTimer"* %15, null
  br i1 %16, label %42, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %15, i64 0, i32 2, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %13, %19
  %21 = add i64 %20, -9223372036854775807
  %22 = icmp ult i64 %21, 2
  %23 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %15, i64 0, i32 3, i32 0
  %24 = load i64, i64* %23, align 8
  br i1 %22, label %32, label %25

25:                                               ; preds = %17
  %26 = icmp slt i64 %20, 0
  %27 = select i1 %26, i64 -9223372036854775808, i64 9223372036854775807
  %28 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %24, i64 %20) #13
  %29 = extractvalue { i64, i1 } %28, 1
  %30 = extractvalue { i64, i1 } %28, 0
  %31 = select i1 %29, i64 %27, i64 %30, !prof !2
  br label %40

32:                                               ; preds = %17
  %33 = add i64 %24, -9223372036854775807
  %34 = icmp ugt i64 %33, 1
  %35 = icmp eq i64 %24, %20
  %36 = or i1 %35, %34
  br i1 %36, label %40, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0)) #13
  %39 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #13
  br label %40

40:                                               ; preds = %25, %32, %37
  %41 = phi i64 [ %31, %25 ], [ %20, %32 ], [ %20, %37 ]
  store i64 %41, i64* %23, align 8
  store i64 0, i64* %18, align 8
  br label %42

42:                                               ; preds = %3, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::RuntimeCallTimer"* @_ZN5blink16RuntimeCallTimer4StopEv(%"class.blink::RuntimeCallTimer"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 4
  %5 = load %"class.base::TickClock"*, %"class.base::TickClock"** %4, align 8
  %6 = bitcast %"class.base::TickClock"* %5 to i64 (%"class.base::TickClock"*)***
  %7 = load i64 (%"class.base::TickClock"*)**, i64 (%"class.base::TickClock"*)*** %6, align 8
  %8 = getelementptr inbounds i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %7, i64 2
  %9 = load i64 (%"class.base::TickClock"*)*, i64 (%"class.base::TickClock"*)** %8, align 8
  %10 = tail call i64 %9(%"class.base::TickClock"* %5) #13
  %11 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = sub nsw i64 %10, %12
  %14 = add i64 %13, -9223372036854775807
  %15 = icmp ult i64 %14, 2
  %16 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 3, i32 0
  %17 = load i64, i64* %16, align 8
  br i1 %15, label %26, label %18

18:                                               ; preds = %1
  %19 = icmp slt i64 %13, 0
  %20 = select i1 %19, i64 -9223372036854775808, i64 9223372036854775807
  %21 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %17, i64 %13) #13
  %22 = extractvalue { i64, i1 } %21, 1
  %23 = extractvalue { i64, i1 } %21, 0
  %24 = select i1 %22, i64 %20, i64 %23, !prof !2
  %25 = add i64 %24, -9223372036854775807
  br label %34

26:                                               ; preds = %1
  %27 = add i64 %17, -9223372036854775807
  %28 = icmp ugt i64 %27, 1
  %29 = icmp eq i64 %17, %13
  %30 = or i1 %29, %28
  br i1 %30, label %34, label %31

31:                                               ; preds = %26
  %32 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0)) #13
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #13
  br label %34

34:                                               ; preds = %18, %26, %31
  %35 = phi i64 [ %25, %18 ], [ %14, %26 ], [ %14, %31 ]
  %36 = phi i64 [ %24, %18 ], [ %13, %26 ], [ %13, %31 ]
  store i64 %36, i64* %16, align 8
  store i64 0, i64* %11, align 8
  %37 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 0
  %38 = load %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallCounter"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::RuntimeCallCounter", %"class.blink::RuntimeCallCounter"* %38, i64 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %39, align 8
  %42 = icmp ult i64 %35, 2
  %43 = getelementptr inbounds %"class.blink::RuntimeCallCounter", %"class.blink::RuntimeCallCounter"* %38, i64 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  br i1 %42, label %52, label %45

45:                                               ; preds = %34
  %46 = icmp slt i64 %36, 0
  %47 = select i1 %46, i64 -9223372036854775808, i64 9223372036854775807
  %48 = call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %44, i64 %36) #13
  %49 = extractvalue { i64, i1 } %48, 1
  %50 = extractvalue { i64, i1 } %48, 0
  %51 = select i1 %49, i64 %47, i64 %50, !prof !2
  br label %60

52:                                               ; preds = %34
  %53 = add i64 %44, -9223372036854775807
  %54 = icmp ugt i64 %53, 1
  %55 = icmp eq i64 %44, %36
  %56 = or i1 %55, %54
  br i1 %56, label %60, label %57

57:                                               ; preds = %52
  %58 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #13
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.47, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.48, i64 0, i64 0)) #13
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #13
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #13
  br label %60

60:                                               ; preds = %45, %52, %57
  %61 = phi i64 [ %51, %45 ], [ %36, %52 ], [ %36, %57 ]
  store i64 %61, i64* %43, align 8
  %62 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %0, i64 0, i32 1
  %63 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %62, align 8
  %64 = icmp eq %"class.blink::RuntimeCallTimer"* %63, null
  br i1 %64, label %68, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::RuntimeCallTimer", %"class.blink::RuntimeCallTimer"* %63, i64 0, i32 2, i32 0, i32 0
  store i64 %10, i64* %66, align 8
  %67 = load %"class.blink::RuntimeCallTimer"*, %"class.blink::RuntimeCallTimer"** %62, align 8
  br label %68

68:                                               ; preds = %60, %65
  %69 = phi %"class.blink::RuntimeCallTimer"* [ null, %60 ], [ %67, %65 ]
  ret %"class.blink::RuntimeCallTimer"* %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RuntimeCallStatsC2EPKN4base9TickClockE(%"class.blink::RuntimeCallStats"*, %"class.base::TickClock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 0
  store %"class.blink::RuntimeCallTimer"* null, %"class.blink::RuntimeCallTimer"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 0, i32 1, i32 0
  store i64 0, i64* %5, align 8
  %6 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 1, i32 1, i32 0
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 2, i32 1, i32 0
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 3, i32 1, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 4, i32 1, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 5, i32 1, i32 0
  store i64 0, i64* %10, align 8
  %11 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 6, i32 1, i32 0
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 7, i32 1, i32 0
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 8, i32 1, i32 0
  store i64 0, i64* %13, align 8
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 9, i32 1, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 10, i32 1, i32 0
  store i64 0, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 11, i32 1, i32 0
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 12, i32 1, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 13, i32 1, i32 0
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 14, i32 1, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 15, i32 1, i32 0
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 16, i32 1, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 17, i32 1, i32 0
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 18, i32 1, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 19, i32 1, i32 0
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 20, i32 1, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 21, i32 1, i32 0
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 22, i32 1, i32 0
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 23, i32 1, i32 0
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 24, i32 1, i32 0
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 25, i32 1, i32 0
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 26, i32 1, i32 0
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 27, i32 1, i32 0
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 28, i32 1, i32 0
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 29, i32 1, i32 0
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 30, i32 1, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 31, i32 1, i32 0
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 32, i32 1, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 33, i32 1, i32 0
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 34, i32 1, i32 0
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 35, i32 1, i32 0
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 36, i32 1, i32 0
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 37, i32 1, i32 0
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 38, i32 1, i32 0
  store i64 0, i64* %43, align 8
  %44 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 39, i32 1, i32 0
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 3
  store %"class.base::TickClock"* %1, %"class.base::TickClock"** %45, align 8
  br label %47

46:                                               ; preds = %47
  ret void

47:                                               ; preds = %47, %2
  %48 = phi i64 [ 0, %2 ], [ %64, %47 ]
  %49 = getelementptr inbounds [40 x i8*], [40 x i8*]* @_ZZN5blink16RuntimeCallStatsC1EPKN4base9TickClockEE5names, i64 0, i64 %48
  %50 = bitcast i8** %49 to i64*
  %51 = load i64, i64* %50, align 16
  %52 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %48
  %53 = bitcast %"class.blink::RuntimeCallCounter"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false)
  %54 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %48, i32 2
  %55 = bitcast i8** %54 to i64*
  store i64 %51, i64* %55, align 8
  %56 = or i64 %48, 1
  %57 = getelementptr inbounds [40 x i8*], [40 x i8*]* @_ZZN5blink16RuntimeCallStatsC1EPKN4base9TickClockEE5names, i64 0, i64 %56
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %56
  %61 = bitcast %"class.blink::RuntimeCallCounter"* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false)
  %62 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %56, i32 2
  %63 = bitcast i8** %62 to i64*
  store i64 %59, i64* %63, align 8
  %64 = add nuw nsw i64 %48, 2
  %65 = icmp eq i64 %64, 40
  br i1 %65, label %46, label %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RuntimeCallStats5ResetEv(%"class.blink::RuntimeCallStats"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 0
  %3 = bitcast %"class.blink::RuntimeCallCounter"* %2 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false) #13
  %4 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 1
  %5 = bitcast %"class.blink::RuntimeCallCounter"* %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #13
  %6 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 2
  %7 = bitcast %"class.blink::RuntimeCallCounter"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #13
  %8 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 3
  %9 = bitcast %"class.blink::RuntimeCallCounter"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 16, i1 false) #13
  %10 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 4
  %11 = bitcast %"class.blink::RuntimeCallCounter"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #13
  %12 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 5
  %13 = bitcast %"class.blink::RuntimeCallCounter"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #13
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 6
  %15 = bitcast %"class.blink::RuntimeCallCounter"* %14 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #13
  %16 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 7
  %17 = bitcast %"class.blink::RuntimeCallCounter"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #13
  %18 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 8
  %19 = bitcast %"class.blink::RuntimeCallCounter"* %18 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #13
  %20 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 9
  %21 = bitcast %"class.blink::RuntimeCallCounter"* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #13
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 10
  %23 = bitcast %"class.blink::RuntimeCallCounter"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #13
  %24 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 11
  %25 = bitcast %"class.blink::RuntimeCallCounter"* %24 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 16, i1 false) #13
  %26 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 12
  %27 = bitcast %"class.blink::RuntimeCallCounter"* %26 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #13
  %28 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 13
  %29 = bitcast %"class.blink::RuntimeCallCounter"* %28 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false) #13
  %30 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 14
  %31 = bitcast %"class.blink::RuntimeCallCounter"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 16, i1 false) #13
  %32 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 15
  %33 = bitcast %"class.blink::RuntimeCallCounter"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #13
  %34 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 16
  %35 = bitcast %"class.blink::RuntimeCallCounter"* %34 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #13
  %36 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 17
  %37 = bitcast %"class.blink::RuntimeCallCounter"* %36 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 16, i1 false) #13
  %38 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 18
  %39 = bitcast %"class.blink::RuntimeCallCounter"* %38 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 16, i1 false) #13
  %40 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 19
  %41 = bitcast %"class.blink::RuntimeCallCounter"* %40 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #13
  %42 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 20
  %43 = bitcast %"class.blink::RuntimeCallCounter"* %42 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #13
  %44 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 21
  %45 = bitcast %"class.blink::RuntimeCallCounter"* %44 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 16, i1 false) #13
  %46 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 22
  %47 = bitcast %"class.blink::RuntimeCallCounter"* %46 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 16, i1 false) #13
  %48 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 23
  %49 = bitcast %"class.blink::RuntimeCallCounter"* %48 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 16, i1 false) #13
  %50 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 24
  %51 = bitcast %"class.blink::RuntimeCallCounter"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 16, i1 false) #13
  %52 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 25
  %53 = bitcast %"class.blink::RuntimeCallCounter"* %52 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 16, i1 false) #13
  %54 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 26
  %55 = bitcast %"class.blink::RuntimeCallCounter"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #13
  %56 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 27
  %57 = bitcast %"class.blink::RuntimeCallCounter"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 16, i1 false) #13
  %58 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 28
  %59 = bitcast %"class.blink::RuntimeCallCounter"* %58 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 16, i1 false) #13
  %60 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 29
  %61 = bitcast %"class.blink::RuntimeCallCounter"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #13
  %62 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 30
  %63 = bitcast %"class.blink::RuntimeCallCounter"* %62 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 16, i1 false) #13
  %64 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 31
  %65 = bitcast %"class.blink::RuntimeCallCounter"* %64 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #13
  %66 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 32
  %67 = bitcast %"class.blink::RuntimeCallCounter"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #13
  %68 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 33
  %69 = bitcast %"class.blink::RuntimeCallCounter"* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false) #13
  %70 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 34
  %71 = bitcast %"class.blink::RuntimeCallCounter"* %70 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %71, i8 0, i64 16, i1 false) #13
  %72 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 35
  %73 = bitcast %"class.blink::RuntimeCallCounter"* %72 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %73, i8 0, i64 16, i1 false) #13
  %74 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 36
  %75 = bitcast %"class.blink::RuntimeCallCounter"* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #13
  %76 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 37
  %77 = bitcast %"class.blink::RuntimeCallCounter"* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #13
  %78 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 38
  %79 = bitcast %"class.blink::RuntimeCallCounter"* %78 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %79, i8 0, i64 16, i1 false) #13
  %80 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 39
  %81 = bitcast %"class.blink::RuntimeCallCounter"* %80 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %81, i8 0, i64 16, i1 false) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink16RuntimeCallStats4DumpERNS_11TracedValueE(%"class.blink::RuntimeCallStats"*, %"class.blink::TracedValue"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  br label %4

3:                                                ; preds = %16
  ret void

4:                                                ; preds = %16, %2
  %5 = phi i64 [ 0, %2 ], [ %17, %16 ]
  %6 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %5, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %5, i32 2
  %11 = load i8*, i8** %10, align 8
  tail call void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"* %1, i8* %11) #13
  %12 = load i64, i64* %6, align 8
  %13 = uitofp i64 %12 to double
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* %1, double %13) #13
  %14 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %0, i64 0, i32 2, i64 %5, i32 1
  %15 = tail call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* %14) #13
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* %1, double %15) #13
  tail call void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"* %1) #13
  br label %16

16:                                               ; preds = %4, %9
  %17 = add nuw nsw i64 %5, 1
  %18 = icmp eq i64 %17, 40
  br i1 %18, label %3, label %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !3
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #13
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #13
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #13
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #13
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #13
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare void @_ZN3WTF13StringBuilder12AppendFormatEPKcz(%"class.WTF::StringBuilder"*, i8*, ...) local_unnamed_addr #1

declare double @_ZNK4base9TimeDelta15InMillisecondsFEv(%"class.base::TimeDelta"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %115, !prof !4

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing) #13
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %115, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @malloc(i64 984) #13
  %8 = bitcast i8* %7 to %"class.blink::RuntimeCallStats"*
  %9 = tail call %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() #13
  %10 = getelementptr inbounds %"class.base::DefaultTickClock", %"class.base::DefaultTickClock"* %9, i64 0, i32 0
  %11 = bitcast i8* %7 to %"class.blink::RuntimeCallTimer"**
  store %"class.blink::RuntimeCallTimer"* null, %"class.blink::RuntimeCallTimer"** %11, align 8
  %12 = getelementptr inbounds i8, i8* %7, i64 8
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 24
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 48
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = getelementptr inbounds i8, i8* %7, i64 72
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %7, i64 96
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %7, i64 120
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %7, i64 144
  %24 = bitcast i8* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds i8, i8* %7, i64 168
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %7, i64 192
  %28 = bitcast i8* %27 to i64*
  store i64 0, i64* %28, align 8
  %29 = getelementptr inbounds i8, i8* %7, i64 216
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %7, i64 240
  %32 = bitcast i8* %31 to i64*
  store i64 0, i64* %32, align 8
  %33 = getelementptr inbounds i8, i8* %7, i64 264
  %34 = bitcast i8* %33 to i64*
  store i64 0, i64* %34, align 8
  %35 = getelementptr inbounds i8, i8* %7, i64 288
  %36 = bitcast i8* %35 to i64*
  store i64 0, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %7, i64 312
  %38 = bitcast i8* %37 to i64*
  store i64 0, i64* %38, align 8
  %39 = getelementptr inbounds i8, i8* %7, i64 336
  %40 = bitcast i8* %39 to i64*
  store i64 0, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %7, i64 360
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %7, i64 384
  %44 = bitcast i8* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %7, i64 408
  %46 = bitcast i8* %45 to i64*
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds i8, i8* %7, i64 432
  %48 = bitcast i8* %47 to i64*
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds i8, i8* %7, i64 456
  %50 = bitcast i8* %49 to i64*
  store i64 0, i64* %50, align 8
  %51 = getelementptr inbounds i8, i8* %7, i64 480
  %52 = bitcast i8* %51 to i64*
  store i64 0, i64* %52, align 8
  %53 = getelementptr inbounds i8, i8* %7, i64 504
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %7, i64 528
  %56 = bitcast i8* %55 to i64*
  store i64 0, i64* %56, align 8
  %57 = getelementptr inbounds i8, i8* %7, i64 552
  %58 = bitcast i8* %57 to i64*
  store i64 0, i64* %58, align 8
  %59 = getelementptr inbounds i8, i8* %7, i64 576
  %60 = bitcast i8* %59 to i64*
  store i64 0, i64* %60, align 8
  %61 = getelementptr inbounds i8, i8* %7, i64 600
  %62 = bitcast i8* %61 to i64*
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds i8, i8* %7, i64 624
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %7, i64 648
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds i8, i8* %7, i64 672
  %68 = bitcast i8* %67 to i64*
  store i64 0, i64* %68, align 8
  %69 = getelementptr inbounds i8, i8* %7, i64 696
  %70 = bitcast i8* %69 to i64*
  store i64 0, i64* %70, align 8
  %71 = getelementptr inbounds i8, i8* %7, i64 720
  %72 = bitcast i8* %71 to i64*
  store i64 0, i64* %72, align 8
  %73 = getelementptr inbounds i8, i8* %7, i64 744
  %74 = bitcast i8* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %7, i64 768
  %76 = bitcast i8* %75 to i64*
  store i64 0, i64* %76, align 8
  %77 = getelementptr inbounds i8, i8* %7, i64 792
  %78 = bitcast i8* %77 to i64*
  store i64 0, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %7, i64 816
  %80 = bitcast i8* %79 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds i8, i8* %7, i64 840
  %82 = bitcast i8* %81 to i64*
  store i64 0, i64* %82, align 8
  %83 = getelementptr inbounds i8, i8* %7, i64 864
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8
  %85 = getelementptr inbounds i8, i8* %7, i64 888
  %86 = bitcast i8* %85 to i64*
  store i64 0, i64* %86, align 8
  %87 = getelementptr inbounds i8, i8* %7, i64 912
  %88 = bitcast i8* %87 to i64*
  store i64 0, i64* %88, align 8
  %89 = getelementptr inbounds i8, i8* %7, i64 936
  %90 = bitcast i8* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = getelementptr inbounds i8, i8* %7, i64 960
  %92 = bitcast i8* %91 to i64*
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds i8, i8* %7, i64 976
  %94 = bitcast i8* %93 to %"class.base::TickClock"**
  store %"class.base::TickClock"* %10, %"class.base::TickClock"** %94, align 8
  br label %95

95:                                               ; preds = %95, %6
  %96 = phi i64 [ 0, %6 ], [ %112, %95 ]
  %97 = getelementptr inbounds [40 x i8*], [40 x i8*]* @_ZZN5blink16RuntimeCallStatsC1EPKN4base9TickClockEE5names, i64 0, i64 %96
  %98 = bitcast i8** %97 to i64*
  %99 = load i64, i64* %98, align 16
  %100 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %8, i64 0, i32 2, i64 %96
  %101 = bitcast %"class.blink::RuntimeCallCounter"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %101, i8 0, i64 16, i1 false) #13
  %102 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %8, i64 0, i32 2, i64 %96, i32 2
  %103 = bitcast i8** %102 to i64*
  store i64 %99, i64* %103, align 8
  %104 = or i64 %96, 1
  %105 = getelementptr inbounds [40 x i8*], [40 x i8*]* @_ZZN5blink16RuntimeCallStatsC1EPKN4base9TickClockEE5names, i64 0, i64 %104
  %106 = bitcast i8** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %8, i64 0, i32 2, i64 %104
  %109 = bitcast %"class.blink::RuntimeCallCounter"* %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #13
  %110 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %8, i64 0, i32 2, i64 %104, i32 2
  %111 = bitcast i8** %110 to i64*
  store i64 %107, i64* %111, align 8
  %112 = add nuw nsw i64 %96, 2
  %113 = icmp eq i64 %112, 40
  br i1 %113, label %114, label %95

114:                                              ; preds = %95
  store i8* %7, i8** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing to i8**), align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing) #13
  br label %115

115:                                              ; preds = %3, %114, %0
  %116 = load i64, i64* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink16RuntimeCallStats29SetRuntimeCallStatsForTestingEvE19s_s_rcs_for_testing to i64*), align 8
  store i64 %116, i64* bitcast (%"class.blink::RuntimeCallStats"** @_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE to i64*), align 8
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #5

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink16RuntimeCallStats31ClearRuntimeCallStatsForTestingEv() local_unnamed_addr #6 align 2 {
  store %"class.blink::RuntimeCallStats"* null, %"class.blink::RuntimeCallStats"** @_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28RuntimeCallStatsScopedTracer27AddBeginTraceEventIfEnabledEPN2v87IsolateE(%"class.blink::RuntimeCallStatsScopedTracer"* nocapture, %"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeTicks", align 8
  %4 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 218, i32 0), align 16
  %5 = and i8 %4, 9
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %114, label %7, !prof !5

7:                                                ; preds = %2
  %8 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** @_ZN5blink12_GLOBAL__N_132g_runtime_call_stats_for_testingE, align 8
  %9 = icmp eq %"class.blink::RuntimeCallStats"* %8, null
  br i1 %9, label %10, label %16

10:                                               ; preds = %7
  %11 = ptrtoint %"class.v8::Isolate"* %1 to i64
  %12 = add i64 %11, 8
  %13 = inttoptr i64 %12 to %"class.blink::V8PerIsolateData"**
  %14 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %14, i64 0, i32 15
  br label %16

16:                                               ; preds = %7, %10
  %17 = phi %"class.blink::RuntimeCallStats"* [ %15, %10 ], [ %8, %7 ]
  %18 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 1
  %19 = load i8, i8* %18, align 8, !range !3
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %114

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.blink::RuntimeCallStatsScopedTracer", %"class.blink::RuntimeCallStatsScopedTracer"* %0, i64 0, i32 0
  store %"class.blink::RuntimeCallStats"* %17, %"class.blink::RuntimeCallStats"** %22, align 8
  %23 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 0
  %24 = bitcast %"class.blink::RuntimeCallCounter"* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #13
  %25 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 1
  %26 = bitcast %"class.blink::RuntimeCallCounter"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #13
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 2
  %28 = bitcast %"class.blink::RuntimeCallCounter"* %27 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 16, i1 false) #13
  %29 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 3
  %30 = bitcast %"class.blink::RuntimeCallCounter"* %29 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #13
  %31 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 4
  %32 = bitcast %"class.blink::RuntimeCallCounter"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #13
  %33 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 5
  %34 = bitcast %"class.blink::RuntimeCallCounter"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 16, i1 false) #13
  %35 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 6
  %36 = bitcast %"class.blink::RuntimeCallCounter"* %35 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #13
  %37 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 7
  %38 = bitcast %"class.blink::RuntimeCallCounter"* %37 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 16, i1 false) #13
  %39 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 8
  %40 = bitcast %"class.blink::RuntimeCallCounter"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 16, i1 false) #13
  %41 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 9
  %42 = bitcast %"class.blink::RuntimeCallCounter"* %41 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #13
  %43 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 10
  %44 = bitcast %"class.blink::RuntimeCallCounter"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 16, i1 false) #13
  %45 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 11
  %46 = bitcast %"class.blink::RuntimeCallCounter"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 16, i1 false) #13
  %47 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 12
  %48 = bitcast %"class.blink::RuntimeCallCounter"* %47 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 16, i1 false) #13
  %49 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 13
  %50 = bitcast %"class.blink::RuntimeCallCounter"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 16, i1 false) #13
  %51 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 14
  %52 = bitcast %"class.blink::RuntimeCallCounter"* %51 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 16, i1 false) #13
  %53 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 15
  %54 = bitcast %"class.blink::RuntimeCallCounter"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 16, i1 false) #13
  %55 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 16
  %56 = bitcast %"class.blink::RuntimeCallCounter"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 16, i1 false) #13
  %57 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 17
  %58 = bitcast %"class.blink::RuntimeCallCounter"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #13
  %59 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 18
  %60 = bitcast %"class.blink::RuntimeCallCounter"* %59 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 16, i1 false) #13
  %61 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 19
  %62 = bitcast %"class.blink::RuntimeCallCounter"* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #13
  %63 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 20
  %64 = bitcast %"class.blink::RuntimeCallCounter"* %63 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 16, i1 false) #13
  %65 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 21
  %66 = bitcast %"class.blink::RuntimeCallCounter"* %65 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 16, i1 false) #13
  %67 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 22
  %68 = bitcast %"class.blink::RuntimeCallCounter"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 16, i1 false) #13
  %69 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 23
  %70 = bitcast %"class.blink::RuntimeCallCounter"* %69 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #13
  %71 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 24
  %72 = bitcast %"class.blink::RuntimeCallCounter"* %71 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 16, i1 false) #13
  %73 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 25
  %74 = bitcast %"class.blink::RuntimeCallCounter"* %73 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 16, i1 false) #13
  %75 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 26
  %76 = bitcast %"class.blink::RuntimeCallCounter"* %75 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 16, i1 false) #13
  %77 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 27
  %78 = bitcast %"class.blink::RuntimeCallCounter"* %77 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #13
  %79 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 28
  %80 = bitcast %"class.blink::RuntimeCallCounter"* %79 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 16, i1 false) #13
  %81 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 29
  %82 = bitcast %"class.blink::RuntimeCallCounter"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 16, i1 false) #13
  %83 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 30
  %84 = bitcast %"class.blink::RuntimeCallCounter"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #13
  %85 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 31
  %86 = bitcast %"class.blink::RuntimeCallCounter"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #13
  %87 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 32
  %88 = bitcast %"class.blink::RuntimeCallCounter"* %87 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #13
  %89 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 33
  %90 = bitcast %"class.blink::RuntimeCallCounter"* %89 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #13
  %91 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 34
  %92 = bitcast %"class.blink::RuntimeCallCounter"* %91 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #13
  %93 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 35
  %94 = bitcast %"class.blink::RuntimeCallCounter"* %93 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 16, i1 false) #13
  %95 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 36
  %96 = bitcast %"class.blink::RuntimeCallCounter"* %95 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 16, i1 false) #13
  %97 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 37
  %98 = bitcast %"class.blink::RuntimeCallCounter"* %97 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %98, i8 0, i64 16, i1 false) #13
  %99 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 38
  %100 = bitcast %"class.blink::RuntimeCallCounter"* %99 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %100, i8 0, i64 16, i1 false) #13
  %101 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %17, i64 0, i32 2, i64 39
  %102 = bitcast %"class.blink::RuntimeCallCounter"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 16, i1 false) #13
  %103 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %22, align 8
  %104 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %103, i64 0, i32 1
  store i8 1, i8* %104, align 8
  %105 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 218, i32 0), align 16
  %106 = and i8 %105, 25
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %114, label %108, !prof !5

108:                                              ; preds = %21
  %109 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %110 = bitcast %"class.base::TimeTicks"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #13
  %111 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %3, i64 0, i32 0, i32 0
  %112 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %112, i64* %111, align 8
  %113 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 66, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 218, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %109, %"class.base::TimeTicks"* nonnull dereferenceable(8) %3, %"class.base::trace_event::TraceArguments"* null, i32 0) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #13
  br label %114

114:                                              ; preds = %16, %21, %108, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink28RuntimeCallStatsScopedTracer16AddEndTraceEventEv(%"class.blink::RuntimeCallStatsScopedTracer"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.268", align 8
  %3 = bitcast %"class.std::__1::unique_ptr.268"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #13
  %4 = getelementptr inbounds %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.268"* %2, i64 0, i32 0, i32 0, i32 0
  %5 = tail call i8* @_Znwm(i64 16) #14
  %6 = bitcast i8* %5 to %"class.blink::TracedValue"*
  tail call void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"* nonnull %6) #13
  %7 = bitcast %"class.std::__1::unique_ptr.268"* %2 to i8**
  store i8* %5, i8** %7, align 8
  %8 = getelementptr inbounds %"class.blink::RuntimeCallStatsScopedTracer", %"class.blink::RuntimeCallStatsScopedTracer"* %0, i64 0, i32 0
  %9 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %8, align 8
  br label %10

10:                                               ; preds = %22, %1
  %11 = phi i64 [ 0, %1 ], [ %23, %22 ]
  %12 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %9, i64 0, i32 2, i64 %11, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %9, i64 0, i32 2, i64 %11, i32 2
  %17 = load i8*, i8** %16, align 8
  tail call void @_ZN5blink11TracedValue10BeginArrayEPKc(%"class.blink::TracedValue"* nonnull %6, i8* %17) #13
  %18 = load i64, i64* %12, align 8
  %19 = uitofp i64 %18 to double
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* nonnull %6, double %19) #13
  %20 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %9, i64 0, i32 2, i64 %11, i32 1
  %21 = tail call double @_ZNK4base9TimeDelta15InMicrosecondsFEv(%"class.base::TimeDelta"* %20) #13
  tail call void @_ZN5blink11TracedValue10PushDoubleEd(%"class.blink::TracedValue"* nonnull %6, double %21) #13
  tail call void @_ZN5blink11TracedValue8EndArrayEv(%"class.blink::TracedValue"* nonnull %6) #13
  br label %22

22:                                               ; preds = %15, %10
  %23 = add nuw nsw i64 %11, 1
  %24 = icmp eq i64 %23, 40
  br i1 %24, label %25, label %10

25:                                               ; preds = %22
  %26 = load %"class.blink::RuntimeCallStats"*, %"class.blink::RuntimeCallStats"** %8, align 8
  %27 = getelementptr inbounds %"class.blink::RuntimeCallStats", %"class.blink::RuntimeCallStats"* %26, i64 0, i32 1
  store i8 0, i8* %27, align 8
  %28 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 218, i32 0), align 16
  %29 = and i8 %28, 25
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %32, !prof !5

31:                                               ; preds = %25
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %4, align 8
  br label %36

32:                                               ; preds = %25
  %33 = call i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext 69, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 218, i32 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.45, i64 0, i64 0), i8* null, i64 0, i32 0, i64 0, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.46, i64 0, i64 0), %"class.std::__1::unique_ptr.268"* nonnull dereferenceable(8) %2)
  %34 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %4, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %4, align 8
  %35 = icmp eq %"class.blink::TracedValue"* %34, null
  br i1 %35, label %42, label %36

36:                                               ; preds = %31, %32
  %37 = phi %"class.blink::TracedValue"* [ %6, %31 ], [ %34, %32 ]
  %38 = bitcast %"class.blink::TracedValue"* %37 to void (%"class.blink::TracedValue"*)***
  %39 = load void (%"class.blink::TracedValue"*)**, void (%"class.blink::TracedValue"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %39, i64 1
  %41 = load void (%"class.blink::TracedValue"*)*, void (%"class.blink::TracedValue"*)** %40, align 8
  call void %41(%"class.blink::TracedValue"* nonnull %37) #13
  br label %42

42:                                               ; preds = %32, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #13
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal13AddTraceEventINSt3__110unique_ptrIN5blink11TracedValueENS1_14default_deleteIS4_EEEEEEN4base11trace_event16TraceEventHandleEcPKhPKcSE_yjySE_OT_(i8 signext, i8*, i8*, i8*, i64, i32, i64, i8*, %"class.std::__1::unique_ptr.268"* dereferenceable(8)) local_unnamed_addr #7 comdat {
  %10 = alloca %"class.base::trace_event::TraceArguments", align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #13
  %13 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #13
  %14 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %15 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #13
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 40, i1 false) #13
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 0
  store i8 8, i8* %17, align 1
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 2, i64 0
  store i8* %7, i8** %18, align 8
  %19 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 0
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.268"* %8, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::TracedValue"*, %"class.blink::TracedValue"** %20, align 8
  store %"class.blink::TracedValue"* null, %"class.blink::TracedValue"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TracedValue", %"class.blink::TracedValue"* %21, i64 0, i32 0
  %23 = bitcast %"union.base::trace_event::TraceValue"* %19 to %"class.base::trace_event::ConvertableToTraceFormat"**
  store %"class.base::trace_event::ConvertableToTraceFormat"* %22, %"class.base::trace_event::ConvertableToTraceFormat"** %23, align 8
  %24 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %6, i32 %12, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, %"class.base::trace_event::TraceArguments"* nonnull %10, i32 %5) #13
  %25 = load i8, i8* %16, align 8
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %61, label %27

27:                                               ; preds = %9, %56
  %28 = phi i64 [ %57, %56 ], [ 0, %9 ]
  %29 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 1, i64 %28
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 8
  br i1 %31, label %32, label %43

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %34 = bitcast %"union.base::trace_event::TraceValue"* %33 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %35 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %34, align 8
  %36 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %35, null
  br i1 %36, label %56, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %35 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %39 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %39, i64 1
  %41 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %40, align 8
  call void %41(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %35) #13
  %42 = load i8, i8* %29, align 1
  br label %43

43:                                               ; preds = %37, %27
  %44 = phi i8 [ %30, %27 ], [ %42, %37 ]
  %45 = icmp eq i8 %44, 9
  br i1 %45, label %46, label %56

46:                                               ; preds = %43
  %47 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %10, i64 0, i32 3, i64 %28
  %48 = bitcast %"union.base::trace_event::TraceValue"* %47 to %"class.protozero::HeapBuffered"**
  %49 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %48, align 8
  %50 = icmp eq %"class.protozero::HeapBuffered"* %49, null
  br i1 %50, label %56, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %52) #13
  %53 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %53) #13
  %54 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %49, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %54) #13
  %55 = bitcast %"class.protozero::HeapBuffered"* %49 to i8*
  call void @_ZdlPv(i8* %55) #14
  br label %56

56:                                               ; preds = %51, %46, %43, %32
  %57 = add nuw nsw i64 %28, 1
  %58 = load i8, i8* %16, align 8
  %59 = zext i8 %58 to i64
  %60 = icmp ult i64 %57, %59
  br i1 %60, label %27, label %61

61:                                               ; preds = %56, %9
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %16) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #13
  ret i64 %24
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #8

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #8

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #14
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #14
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare %"class.base::DefaultTickClock"* @_ZN4base16DefaultTickClock11GetInstanceEv() local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #12

declare void @_ZN5blink11TracedValueC1Ev(%"class.blink::TracedValue"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readnone speculatable }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 1, i32 1048575}
!5 = !{!"branch_weights", i32 2000, i32 1}
