; ModuleID = '../../chrome/browser/ui/commander/commander_view_model.cc'
source_filename = "../../chrome/browser/ui/commander/commander_view_model.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.commander::CommandItemViewModel" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", i32, %"class.std::__1::basic_string" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Range"*, %"class.gfx::Range"*, %"class.std::__1::__compressed_pair.1" }
%"class.gfx::Range" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.gfx::Range"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.commander::CommandItem" = type { i32 (...)**, %"class.std::__1::basic_string", i32, %"class.std::__1::basic_string", %"class.absl::variant", double, %"class.std::__1::vector" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.commander::CommanderViewModel" = type <{ i32, [4 x i8], %"class.std::__1::vector.9", %"class.std::__1::basic_string", i32, [4 x i8] }>
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.commander::CommandItemViewModel"* }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN9commander20CommandItemViewModelC1ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEENS_11CommandItem6EntityES9_ = hidden unnamed_addr alias void (%"struct.commander::CommandItemViewModel"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*, i32, %"class.std::__1::basic_string"*), void (%"struct.commander::CommandItemViewModel"*, %"class.std::__1::basic_string"*, %"class.std::__1::vector"*, i32, %"class.std::__1::basic_string"*)* @_ZN9commander20CommandItemViewModelC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEENS_11CommandItem6EntityES9_
@_ZN9commander20CommandItemViewModelC1ERKNS_11CommandItemE = hidden unnamed_addr alias void (%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItem"*), void (%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItem"*)* @_ZN9commander20CommandItemViewModelC2ERKNS_11CommandItemE
@_ZN9commander20CommandItemViewModelD1Ev = hidden unnamed_addr alias void (%"struct.commander::CommandItemViewModel"*), void (%"struct.commander::CommandItemViewModel"*)* @_ZN9commander20CommandItemViewModelD2Ev
@_ZN9commander20CommandItemViewModelC1ERKS0_ = hidden unnamed_addr alias void (%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"*), void (%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"*)* @_ZN9commander20CommandItemViewModelC2ERKS0_
@_ZN9commander18CommanderViewModelC1Ev = hidden unnamed_addr alias void (%"struct.commander::CommanderViewModel"*), void (%"struct.commander::CommanderViewModel"*)* @_ZN9commander18CommanderViewModelC2Ev
@_ZN9commander18CommanderViewModelD1Ev = hidden unnamed_addr alias void (%"struct.commander::CommanderViewModel"*), void (%"struct.commander::CommanderViewModel"*)* @_ZN9commander18CommanderViewModelD2Ev
@_ZN9commander18CommanderViewModelC1ERKS0_ = hidden unnamed_addr alias void (%"struct.commander::CommanderViewModel"*, %"struct.commander::CommanderViewModel"*), void (%"struct.commander::CommanderViewModel"*, %"struct.commander::CommanderViewModel"*)* @_ZN9commander18CommanderViewModelC2ERKS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20CommandItemViewModelC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEENS_11CommandItem6EntityES9_(%"struct.commander::CommandItemViewModel"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), i32, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %6, i64 0, i32 1, i32 1
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %5
  %11 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #6
  br label %188

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i16*, i16** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = icmp ult i64 %17, 11
  br i1 %18, label %19, label %24

19:                                               ; preds = %13
  %20 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i16*
  %21 = trunc i64 %17 to i8
  %22 = bitcast %"struct.commander::CommandItemViewModel"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %22, i64 0, i32 1, i32 1
  store i8 %21, i8* %23, align 1
  br label %41

24:                                               ; preds = %13
  %25 = icmp ugt i64 %17, 9223372036854775791
  br i1 %25, label %26, label %28

26:                                               ; preds = %24
  %27 = bitcast %"struct.commander::CommandItemViewModel"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %27) #7
  unreachable

28:                                               ; preds = %24
  %29 = add nuw nsw i64 %17, 8
  %30 = and i64 %29, -8
  %31 = icmp slt i64 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %28
  tail call void @abort() #7
  unreachable

33:                                               ; preds = %28
  %34 = shl i64 %30, 1
  %35 = tail call i8* @_Znwm(i64 %34) #8
  %36 = bitcast i8* %35 to i16*
  %37 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i8**
  store i8* %35, i8** %37, align 8
  %38 = or i64 %30, -9223372036854775808
  %39 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  br label %41

41:                                               ; preds = %33, %19
  %42 = phi i16* [ %20, %19 ], [ %36, %33 ]
  %43 = add nuw nsw i64 %17, 1
  %44 = add i64 %17, 1
  %45 = icmp ult i64 %44, 16
  br i1 %45, label %135, label %46

46:                                               ; preds = %41
  %47 = add i64 %17, 1
  %48 = getelementptr i16, i16* %42, i64 %47
  %49 = getelementptr i16, i16* %15, i64 %47
  %50 = icmp ult i16* %42, %49
  %51 = icmp ult i16* %15, %48
  %52 = and i1 %50, %51
  br i1 %52, label %135, label %53

53:                                               ; preds = %46
  %54 = and i64 %44, -16
  %55 = sub i64 %43, %54
  %56 = getelementptr i16, i16* %15, i64 %54
  %57 = getelementptr i16, i16* %42, i64 %54
  %58 = add i64 %54, -16
  %59 = lshr exact i64 %58, 4
  %60 = add nuw nsw i64 %59, 1
  %61 = and i64 %60, 3
  %62 = icmp ult i64 %58, 48
  br i1 %62, label %114, label %63

63:                                               ; preds = %53
  %64 = sub nsw i64 %60, %61
  br label %65

65:                                               ; preds = %65, %63
  %66 = phi i64 [ 0, %63 ], [ %111, %65 ]
  %67 = phi i64 [ %64, %63 ], [ %112, %65 ]
  %68 = getelementptr i16, i16* %15, i64 %66
  %69 = getelementptr i16, i16* %42, i64 %66
  %70 = bitcast i16* %68 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !2
  %72 = getelementptr i16, i16* %68, i64 8
  %73 = bitcast i16* %72 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = bitcast i16* %69 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %75, align 2, !alias.scope !5, !noalias !2
  %76 = getelementptr i16, i16* %69, i64 8
  %77 = bitcast i16* %76 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %77, align 2, !alias.scope !5, !noalias !2
  %78 = or i64 %66, 16
  %79 = getelementptr i16, i16* %15, i64 %78
  %80 = getelementptr i16, i16* %42, i64 %78
  %81 = bitcast i16* %79 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !2
  %83 = getelementptr i16, i16* %79, i64 8
  %84 = bitcast i16* %83 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = bitcast i16* %80 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %86, align 2, !alias.scope !5, !noalias !2
  %87 = getelementptr i16, i16* %80, i64 8
  %88 = bitcast i16* %87 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %88, align 2, !alias.scope !5, !noalias !2
  %89 = or i64 %66, 32
  %90 = getelementptr i16, i16* %15, i64 %89
  %91 = getelementptr i16, i16* %42, i64 %89
  %92 = bitcast i16* %90 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !2
  %94 = getelementptr i16, i16* %90, i64 8
  %95 = bitcast i16* %94 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = bitcast i16* %91 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %97, align 2, !alias.scope !5, !noalias !2
  %98 = getelementptr i16, i16* %91, i64 8
  %99 = bitcast i16* %98 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %99, align 2, !alias.scope !5, !noalias !2
  %100 = or i64 %66, 48
  %101 = getelementptr i16, i16* %15, i64 %100
  %102 = getelementptr i16, i16* %42, i64 %100
  %103 = bitcast i16* %101 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !2
  %105 = getelementptr i16, i16* %101, i64 8
  %106 = bitcast i16* %105 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = bitcast i16* %102 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %108, align 2, !alias.scope !5, !noalias !2
  %109 = getelementptr i16, i16* %102, i64 8
  %110 = bitcast i16* %109 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %110, align 2, !alias.scope !5, !noalias !2
  %111 = add i64 %66, 64
  %112 = add i64 %67, -4
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %114, label %65, !llvm.loop !7

114:                                              ; preds = %65, %53
  %115 = phi i64 [ 0, %53 ], [ %111, %65 ]
  %116 = icmp eq i64 %61, 0
  br i1 %116, label %133, label %117

117:                                              ; preds = %114, %117
  %118 = phi i64 [ %130, %117 ], [ %115, %114 ]
  %119 = phi i64 [ %131, %117 ], [ %61, %114 ]
  %120 = getelementptr i16, i16* %15, i64 %118
  %121 = getelementptr i16, i16* %42, i64 %118
  %122 = bitcast i16* %120 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !2
  %124 = getelementptr i16, i16* %120, i64 8
  %125 = bitcast i16* %124 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = bitcast i16* %121 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %127, align 2, !alias.scope !5, !noalias !2
  %128 = getelementptr i16, i16* %121, i64 8
  %129 = bitcast i16* %128 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %129, align 2, !alias.scope !5, !noalias !2
  %130 = add i64 %118, 16
  %131 = add i64 %119, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %117, !llvm.loop !9

133:                                              ; preds = %117, %114
  %134 = icmp eq i64 %44, %54
  br i1 %134, label %188, label %135

135:                                              ; preds = %133, %46, %41
  %136 = phi i64 [ %43, %46 ], [ %43, %41 ], [ %55, %133 ]
  %137 = phi i16* [ %15, %46 ], [ %15, %41 ], [ %56, %133 ]
  %138 = phi i16* [ %42, %46 ], [ %42, %41 ], [ %57, %133 ]
  %139 = add i64 %136, -1
  %140 = and i64 %136, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %135, %142
  %143 = phi i64 [ %148, %142 ], [ %136, %135 ]
  %144 = phi i16* [ %150, %142 ], [ %137, %135 ]
  %145 = phi i16* [ %149, %142 ], [ %138, %135 ]
  %146 = phi i64 [ %151, %142 ], [ %140, %135 ]
  %147 = load i16, i16* %144, align 2
  store i16 %147, i16* %145, align 2
  %148 = add i64 %143, -1
  %149 = getelementptr inbounds i16, i16* %145, i64 1
  %150 = getelementptr inbounds i16, i16* %144, i64 1
  %151 = add i64 %146, -1
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %153, label %142, !llvm.loop !11

153:                                              ; preds = %142, %135
  %154 = phi i64 [ %136, %135 ], [ %148, %142 ]
  %155 = phi i16* [ %137, %135 ], [ %150, %142 ]
  %156 = phi i16* [ %138, %135 ], [ %149, %142 ]
  %157 = icmp ult i64 %139, 7
  br i1 %157, label %188, label %158

158:                                              ; preds = %153, %158
  %159 = phi i64 [ %184, %158 ], [ %154, %153 ]
  %160 = phi i16* [ %186, %158 ], [ %155, %153 ]
  %161 = phi i16* [ %185, %158 ], [ %156, %153 ]
  %162 = load i16, i16* %160, align 2
  store i16 %162, i16* %161, align 2
  %163 = getelementptr inbounds i16, i16* %161, i64 1
  %164 = getelementptr inbounds i16, i16* %160, i64 1
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %161, i64 2
  %167 = getelementptr inbounds i16, i16* %160, i64 2
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %161, i64 3
  %170 = getelementptr inbounds i16, i16* %160, i64 3
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %161, i64 4
  %173 = getelementptr inbounds i16, i16* %160, i64 4
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %161, i64 5
  %176 = getelementptr inbounds i16, i16* %160, i64 5
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %161, i64 6
  %179 = getelementptr inbounds i16, i16* %160, i64 6
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %161, i64 7
  %182 = getelementptr inbounds i16, i16* %160, i64 7
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = add i64 %159, -8
  %185 = getelementptr inbounds i16, i16* %161, i64 8
  %186 = getelementptr inbounds i16, i16* %160, i64 8
  %187 = icmp eq i64 %184, 0
  br i1 %187, label %188, label %158, !llvm.loop !12

188:                                              ; preds = %153, %158, %133, %10
  %189 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1
  %190 = bitcast %"class.std::__1::vector"* %189 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %190, i8 0, i64 24, i1 false) #6
  %191 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %192 = bitcast %"class.gfx::Range"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector"* %2 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = ashr exact i64 %196, 3
  %198 = icmp eq i64 %196, 0
  br i1 %198, label %226, label %199

199:                                              ; preds = %188
  %200 = icmp ugt i64 %197, 2305843009213693951
  br i1 %200, label %201, label %203

201:                                              ; preds = %199
  %202 = bitcast %"class.std::__1::vector"* %189 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %202) #7
  unreachable

203:                                              ; preds = %199
  %204 = tail call i8* @_Znwm(i64 %196) #8
  %205 = bitcast i8* %204 to %"class.gfx::Range"*
  %206 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 1
  %207 = bitcast %"class.gfx::Range"** %206 to i8**
  store i8* %204, i8** %207, align 8
  %208 = bitcast %"class.std::__1::vector"* %189 to i8**
  store i8* %204, i8** %208, align 8
  %209 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %205, i64 %197
  %210 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %209, %"class.gfx::Range"** %210, align 8
  %211 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 0
  %212 = load %"class.gfx::Range"*, %"class.gfx::Range"** %211, align 8
  %213 = load i64, i64* %192, align 8
  %214 = bitcast %"class.gfx::Range"** %206 to i64*
  %215 = ptrtoint i8* %204 to i64
  %216 = ptrtoint %"class.gfx::Range"* %212 to i64
  %217 = sub i64 %213, %216
  %218 = icmp sgt i64 %217, 0
  br i1 %218, label %219, label %224

219:                                              ; preds = %203
  %220 = lshr exact i64 %217, 3
  %221 = bitcast %"class.gfx::Range"* %212 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %204, i8* align 4 %221, i64 %217, i1 false) #6
  %222 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %205, i64 %220
  %223 = ptrtoint %"class.gfx::Range"* %222 to i64
  br label %224

224:                                              ; preds = %219, %203
  %225 = phi i64 [ %223, %219 ], [ %215, %203 ]
  store i64 %225, i64* %214, align 8
  br label %226

226:                                              ; preds = %188, %224
  %227 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 2
  store i32 %3, i32* %227, align 8
  %228 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3
  %229 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %229, i64 0, i32 1, i32 1
  %231 = load i8, i8* %230, align 1
  %232 = icmp slt i8 %231, 0
  br i1 %232, label %236, label %233

233:                                              ; preds = %226
  %234 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  %235 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %234, i8* align 8 %235, i64 24, i1 false) #6
  br label %411

236:                                              ; preds = %226
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i16*, i16** %237, align 8
  %239 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %240 = load i64, i64* %239, align 8
  %241 = icmp ult i64 %240, 11
  br i1 %241, label %242, label %247

242:                                              ; preds = %236
  %243 = bitcast %"class.std::__1::basic_string"* %228 to i16*
  %244 = trunc i64 %240 to i8
  %245 = bitcast %"class.std::__1::basic_string"* %228 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %246 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %245, i64 0, i32 1, i32 1
  store i8 %244, i8* %246, align 1
  br label %264

247:                                              ; preds = %236
  %248 = icmp ugt i64 %240, 9223372036854775791
  br i1 %248, label %249, label %251

249:                                              ; preds = %247
  %250 = bitcast %"class.std::__1::basic_string"* %228 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %250) #7
  unreachable

251:                                              ; preds = %247
  %252 = add nuw nsw i64 %240, 8
  %253 = and i64 %252, -8
  %254 = icmp slt i64 %253, 0
  br i1 %254, label %255, label %256

255:                                              ; preds = %251
  tail call void @abort() #7
  unreachable

256:                                              ; preds = %251
  %257 = shl i64 %253, 1
  %258 = tail call i8* @_Znwm(i64 %257) #8
  %259 = bitcast i8* %258 to i16*
  %260 = bitcast %"class.std::__1::basic_string"* %228 to i8**
  store i8* %258, i8** %260, align 8
  %261 = or i64 %253, -9223372036854775808
  %262 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %261, i64* %262, align 8
  %263 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %240, i64* %263, align 8
  br label %264

264:                                              ; preds = %256, %242
  %265 = phi i16* [ %243, %242 ], [ %259, %256 ]
  %266 = add nuw nsw i64 %240, 1
  %267 = add i64 %240, 1
  %268 = icmp ult i64 %267, 16
  br i1 %268, label %358, label %269

269:                                              ; preds = %264
  %270 = add i64 %240, 1
  %271 = getelementptr i16, i16* %265, i64 %270
  %272 = getelementptr i16, i16* %238, i64 %270
  %273 = icmp ult i16* %265, %272
  %274 = icmp ult i16* %238, %271
  %275 = and i1 %273, %274
  br i1 %275, label %358, label %276

276:                                              ; preds = %269
  %277 = and i64 %267, -16
  %278 = sub i64 %266, %277
  %279 = getelementptr i16, i16* %238, i64 %277
  %280 = getelementptr i16, i16* %265, i64 %277
  %281 = add i64 %277, -16
  %282 = lshr exact i64 %281, 4
  %283 = add nuw nsw i64 %282, 1
  %284 = and i64 %283, 3
  %285 = icmp ult i64 %281, 48
  br i1 %285, label %337, label %286

286:                                              ; preds = %276
  %287 = sub nsw i64 %283, %284
  br label %288

288:                                              ; preds = %288, %286
  %289 = phi i64 [ 0, %286 ], [ %334, %288 ]
  %290 = phi i64 [ %287, %286 ], [ %335, %288 ]
  %291 = getelementptr i16, i16* %238, i64 %289
  %292 = getelementptr i16, i16* %265, i64 %289
  %293 = bitcast i16* %291 to <8 x i16>*
  %294 = load <8 x i16>, <8 x i16>* %293, align 2, !alias.scope !13
  %295 = getelementptr i16, i16* %291, i64 8
  %296 = bitcast i16* %295 to <8 x i16>*
  %297 = load <8 x i16>, <8 x i16>* %296, align 2, !alias.scope !13
  %298 = bitcast i16* %292 to <8 x i16>*
  store <8 x i16> %294, <8 x i16>* %298, align 2, !alias.scope !16, !noalias !13
  %299 = getelementptr i16, i16* %292, i64 8
  %300 = bitcast i16* %299 to <8 x i16>*
  store <8 x i16> %297, <8 x i16>* %300, align 2, !alias.scope !16, !noalias !13
  %301 = or i64 %289, 16
  %302 = getelementptr i16, i16* %238, i64 %301
  %303 = getelementptr i16, i16* %265, i64 %301
  %304 = bitcast i16* %302 to <8 x i16>*
  %305 = load <8 x i16>, <8 x i16>* %304, align 2, !alias.scope !13
  %306 = getelementptr i16, i16* %302, i64 8
  %307 = bitcast i16* %306 to <8 x i16>*
  %308 = load <8 x i16>, <8 x i16>* %307, align 2, !alias.scope !13
  %309 = bitcast i16* %303 to <8 x i16>*
  store <8 x i16> %305, <8 x i16>* %309, align 2, !alias.scope !16, !noalias !13
  %310 = getelementptr i16, i16* %303, i64 8
  %311 = bitcast i16* %310 to <8 x i16>*
  store <8 x i16> %308, <8 x i16>* %311, align 2, !alias.scope !16, !noalias !13
  %312 = or i64 %289, 32
  %313 = getelementptr i16, i16* %238, i64 %312
  %314 = getelementptr i16, i16* %265, i64 %312
  %315 = bitcast i16* %313 to <8 x i16>*
  %316 = load <8 x i16>, <8 x i16>* %315, align 2, !alias.scope !13
  %317 = getelementptr i16, i16* %313, i64 8
  %318 = bitcast i16* %317 to <8 x i16>*
  %319 = load <8 x i16>, <8 x i16>* %318, align 2, !alias.scope !13
  %320 = bitcast i16* %314 to <8 x i16>*
  store <8 x i16> %316, <8 x i16>* %320, align 2, !alias.scope !16, !noalias !13
  %321 = getelementptr i16, i16* %314, i64 8
  %322 = bitcast i16* %321 to <8 x i16>*
  store <8 x i16> %319, <8 x i16>* %322, align 2, !alias.scope !16, !noalias !13
  %323 = or i64 %289, 48
  %324 = getelementptr i16, i16* %238, i64 %323
  %325 = getelementptr i16, i16* %265, i64 %323
  %326 = bitcast i16* %324 to <8 x i16>*
  %327 = load <8 x i16>, <8 x i16>* %326, align 2, !alias.scope !13
  %328 = getelementptr i16, i16* %324, i64 8
  %329 = bitcast i16* %328 to <8 x i16>*
  %330 = load <8 x i16>, <8 x i16>* %329, align 2, !alias.scope !13
  %331 = bitcast i16* %325 to <8 x i16>*
  store <8 x i16> %327, <8 x i16>* %331, align 2, !alias.scope !16, !noalias !13
  %332 = getelementptr i16, i16* %325, i64 8
  %333 = bitcast i16* %332 to <8 x i16>*
  store <8 x i16> %330, <8 x i16>* %333, align 2, !alias.scope !16, !noalias !13
  %334 = add i64 %289, 64
  %335 = add i64 %290, -4
  %336 = icmp eq i64 %335, 0
  br i1 %336, label %337, label %288, !llvm.loop !18

337:                                              ; preds = %288, %276
  %338 = phi i64 [ 0, %276 ], [ %334, %288 ]
  %339 = icmp eq i64 %284, 0
  br i1 %339, label %356, label %340

340:                                              ; preds = %337, %340
  %341 = phi i64 [ %353, %340 ], [ %338, %337 ]
  %342 = phi i64 [ %354, %340 ], [ %284, %337 ]
  %343 = getelementptr i16, i16* %238, i64 %341
  %344 = getelementptr i16, i16* %265, i64 %341
  %345 = bitcast i16* %343 to <8 x i16>*
  %346 = load <8 x i16>, <8 x i16>* %345, align 2, !alias.scope !13
  %347 = getelementptr i16, i16* %343, i64 8
  %348 = bitcast i16* %347 to <8 x i16>*
  %349 = load <8 x i16>, <8 x i16>* %348, align 2, !alias.scope !13
  %350 = bitcast i16* %344 to <8 x i16>*
  store <8 x i16> %346, <8 x i16>* %350, align 2, !alias.scope !16, !noalias !13
  %351 = getelementptr i16, i16* %344, i64 8
  %352 = bitcast i16* %351 to <8 x i16>*
  store <8 x i16> %349, <8 x i16>* %352, align 2, !alias.scope !16, !noalias !13
  %353 = add i64 %341, 16
  %354 = add i64 %342, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %340, !llvm.loop !19

356:                                              ; preds = %340, %337
  %357 = icmp eq i64 %267, %277
  br i1 %357, label %411, label %358

358:                                              ; preds = %356, %269, %264
  %359 = phi i64 [ %266, %269 ], [ %266, %264 ], [ %278, %356 ]
  %360 = phi i16* [ %238, %269 ], [ %238, %264 ], [ %279, %356 ]
  %361 = phi i16* [ %265, %269 ], [ %265, %264 ], [ %280, %356 ]
  %362 = add i64 %359, -1
  %363 = and i64 %359, 7
  %364 = icmp eq i64 %363, 0
  br i1 %364, label %376, label %365

365:                                              ; preds = %358, %365
  %366 = phi i64 [ %371, %365 ], [ %359, %358 ]
  %367 = phi i16* [ %373, %365 ], [ %360, %358 ]
  %368 = phi i16* [ %372, %365 ], [ %361, %358 ]
  %369 = phi i64 [ %374, %365 ], [ %363, %358 ]
  %370 = load i16, i16* %367, align 2
  store i16 %370, i16* %368, align 2
  %371 = add i64 %366, -1
  %372 = getelementptr inbounds i16, i16* %368, i64 1
  %373 = getelementptr inbounds i16, i16* %367, i64 1
  %374 = add i64 %369, -1
  %375 = icmp eq i64 %374, 0
  br i1 %375, label %376, label %365, !llvm.loop !20

376:                                              ; preds = %365, %358
  %377 = phi i64 [ %359, %358 ], [ %371, %365 ]
  %378 = phi i16* [ %360, %358 ], [ %373, %365 ]
  %379 = phi i16* [ %361, %358 ], [ %372, %365 ]
  %380 = icmp ult i64 %362, 7
  br i1 %380, label %411, label %381

381:                                              ; preds = %376, %381
  %382 = phi i64 [ %407, %381 ], [ %377, %376 ]
  %383 = phi i16* [ %409, %381 ], [ %378, %376 ]
  %384 = phi i16* [ %408, %381 ], [ %379, %376 ]
  %385 = load i16, i16* %383, align 2
  store i16 %385, i16* %384, align 2
  %386 = getelementptr inbounds i16, i16* %384, i64 1
  %387 = getelementptr inbounds i16, i16* %383, i64 1
  %388 = load i16, i16* %387, align 2
  store i16 %388, i16* %386, align 2
  %389 = getelementptr inbounds i16, i16* %384, i64 2
  %390 = getelementptr inbounds i16, i16* %383, i64 2
  %391 = load i16, i16* %390, align 2
  store i16 %391, i16* %389, align 2
  %392 = getelementptr inbounds i16, i16* %384, i64 3
  %393 = getelementptr inbounds i16, i16* %383, i64 3
  %394 = load i16, i16* %393, align 2
  store i16 %394, i16* %392, align 2
  %395 = getelementptr inbounds i16, i16* %384, i64 4
  %396 = getelementptr inbounds i16, i16* %383, i64 4
  %397 = load i16, i16* %396, align 2
  store i16 %397, i16* %395, align 2
  %398 = getelementptr inbounds i16, i16* %384, i64 5
  %399 = getelementptr inbounds i16, i16* %383, i64 5
  %400 = load i16, i16* %399, align 2
  store i16 %400, i16* %398, align 2
  %401 = getelementptr inbounds i16, i16* %384, i64 6
  %402 = getelementptr inbounds i16, i16* %383, i64 6
  %403 = load i16, i16* %402, align 2
  store i16 %403, i16* %401, align 2
  %404 = getelementptr inbounds i16, i16* %384, i64 7
  %405 = getelementptr inbounds i16, i16* %383, i64 7
  %406 = load i16, i16* %405, align 2
  store i16 %406, i16* %404, align 2
  %407 = add i64 %382, -8
  %408 = getelementptr inbounds i16, i16* %384, i64 8
  %409 = getelementptr inbounds i16, i16* %383, i64 8
  %410 = icmp eq i64 %407, 0
  br i1 %410, label %411, label %381, !llvm.loop !21

411:                                              ; preds = %376, %381, %356, %233
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20CommandItemViewModelC2ERKNS_11CommandItemE(%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItem"* nocapture readonly dereferenceable(136)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %1, i64 0, i32 6
  %5 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %1, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.commander::CommandItem", %"struct.commander::CommandItem"* %1, i64 0, i32 3
  tail call void @_ZN9commander20CommandItemViewModelC2ERKNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEERKNS1_6vectorIN3gfx5RangeENS5_ISC_EEEENS_11CommandItem6EntityES9_(%"struct.commander::CommandItemViewModel"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::vector"* dereferenceable(24) %4, i32 %6, %"class.std::__1::basic_string"* dereferenceable(24) %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20CommandItemViewModelD2Ev(%"struct.commander::CommandItemViewModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.gfx::Range"*, %"class.gfx::Range"** %11, align 8
  %13 = icmp eq %"class.gfx::Range"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint %"class.gfx::Range"* %12 to i64
  %16 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 1
  %17 = bitcast %"class.gfx::Range"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.gfx::Range"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #8
  br label %19

19:                                               ; preds = %10, %14
  %20 = bitcast %"struct.commander::CommandItemViewModel"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %20, i64 0, i32 1, i32 1
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_ZdlPv(i8* %26) #8
  br label %27

27:                                               ; preds = %19, %24
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander20CommandItemViewModelC2ERKS0_(%"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"* nocapture readonly dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.commander::CommandItemViewModel"* %1 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i8*
  %9 = bitcast %"struct.commander::CommandItemViewModel"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #6
  br label %185

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i16*, i16** %11, align 8
  %13 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp ult i64 %14, 11
  br i1 %15, label %16, label %21

16:                                               ; preds = %10
  %17 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i16*
  %18 = trunc i64 %14 to i8
  %19 = bitcast %"struct.commander::CommandItemViewModel"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %19, i64 0, i32 1, i32 1
  store i8 %18, i8* %20, align 1
  br label %38

21:                                               ; preds = %10
  %22 = icmp ugt i64 %14, 9223372036854775791
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = bitcast %"struct.commander::CommandItemViewModel"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %24) #7
  unreachable

25:                                               ; preds = %21
  %26 = add nuw nsw i64 %14, 8
  %27 = and i64 %26, -8
  %28 = icmp slt i64 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %25
  tail call void @abort() #7
  unreachable

30:                                               ; preds = %25
  %31 = shl i64 %27, 1
  %32 = tail call i8* @_Znwm(i64 %31) #8
  %33 = bitcast i8* %32 to i16*
  %34 = bitcast %"struct.commander::CommandItemViewModel"* %0 to i8**
  store i8* %32, i8** %34, align 8
  %35 = or i64 %27, -9223372036854775808
  %36 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %14, i64* %37, align 8
  br label %38

38:                                               ; preds = %30, %16
  %39 = phi i16* [ %17, %16 ], [ %33, %30 ]
  %40 = add nuw nsw i64 %14, 1
  %41 = add i64 %14, 1
  %42 = icmp ult i64 %41, 16
  br i1 %42, label %132, label %43

43:                                               ; preds = %38
  %44 = add i64 %14, 1
  %45 = getelementptr i16, i16* %39, i64 %44
  %46 = getelementptr i16, i16* %12, i64 %44
  %47 = icmp ult i16* %39, %46
  %48 = icmp ult i16* %12, %45
  %49 = and i1 %47, %48
  br i1 %49, label %132, label %50

50:                                               ; preds = %43
  %51 = and i64 %41, -16
  %52 = sub i64 %40, %51
  %53 = getelementptr i16, i16* %12, i64 %51
  %54 = getelementptr i16, i16* %39, i64 %51
  %55 = add i64 %51, -16
  %56 = lshr exact i64 %55, 4
  %57 = add nuw nsw i64 %56, 1
  %58 = and i64 %57, 3
  %59 = icmp ult i64 %55, 48
  br i1 %59, label %111, label %60

60:                                               ; preds = %50
  %61 = sub nsw i64 %57, %58
  br label %62

62:                                               ; preds = %62, %60
  %63 = phi i64 [ 0, %60 ], [ %108, %62 ]
  %64 = phi i64 [ %61, %60 ], [ %109, %62 ]
  %65 = getelementptr i16, i16* %12, i64 %63
  %66 = getelementptr i16, i16* %39, i64 %63
  %67 = bitcast i16* %65 to <8 x i16>*
  %68 = load <8 x i16>, <8 x i16>* %67, align 2, !alias.scope !22
  %69 = getelementptr i16, i16* %65, i64 8
  %70 = bitcast i16* %69 to <8 x i16>*
  %71 = load <8 x i16>, <8 x i16>* %70, align 2, !alias.scope !22
  %72 = bitcast i16* %66 to <8 x i16>*
  store <8 x i16> %68, <8 x i16>* %72, align 2, !alias.scope !25, !noalias !22
  %73 = getelementptr i16, i16* %66, i64 8
  %74 = bitcast i16* %73 to <8 x i16>*
  store <8 x i16> %71, <8 x i16>* %74, align 2, !alias.scope !25, !noalias !22
  %75 = or i64 %63, 16
  %76 = getelementptr i16, i16* %12, i64 %75
  %77 = getelementptr i16, i16* %39, i64 %75
  %78 = bitcast i16* %76 to <8 x i16>*
  %79 = load <8 x i16>, <8 x i16>* %78, align 2, !alias.scope !22
  %80 = getelementptr i16, i16* %76, i64 8
  %81 = bitcast i16* %80 to <8 x i16>*
  %82 = load <8 x i16>, <8 x i16>* %81, align 2, !alias.scope !22
  %83 = bitcast i16* %77 to <8 x i16>*
  store <8 x i16> %79, <8 x i16>* %83, align 2, !alias.scope !25, !noalias !22
  %84 = getelementptr i16, i16* %77, i64 8
  %85 = bitcast i16* %84 to <8 x i16>*
  store <8 x i16> %82, <8 x i16>* %85, align 2, !alias.scope !25, !noalias !22
  %86 = or i64 %63, 32
  %87 = getelementptr i16, i16* %12, i64 %86
  %88 = getelementptr i16, i16* %39, i64 %86
  %89 = bitcast i16* %87 to <8 x i16>*
  %90 = load <8 x i16>, <8 x i16>* %89, align 2, !alias.scope !22
  %91 = getelementptr i16, i16* %87, i64 8
  %92 = bitcast i16* %91 to <8 x i16>*
  %93 = load <8 x i16>, <8 x i16>* %92, align 2, !alias.scope !22
  %94 = bitcast i16* %88 to <8 x i16>*
  store <8 x i16> %90, <8 x i16>* %94, align 2, !alias.scope !25, !noalias !22
  %95 = getelementptr i16, i16* %88, i64 8
  %96 = bitcast i16* %95 to <8 x i16>*
  store <8 x i16> %93, <8 x i16>* %96, align 2, !alias.scope !25, !noalias !22
  %97 = or i64 %63, 48
  %98 = getelementptr i16, i16* %12, i64 %97
  %99 = getelementptr i16, i16* %39, i64 %97
  %100 = bitcast i16* %98 to <8 x i16>*
  %101 = load <8 x i16>, <8 x i16>* %100, align 2, !alias.scope !22
  %102 = getelementptr i16, i16* %98, i64 8
  %103 = bitcast i16* %102 to <8 x i16>*
  %104 = load <8 x i16>, <8 x i16>* %103, align 2, !alias.scope !22
  %105 = bitcast i16* %99 to <8 x i16>*
  store <8 x i16> %101, <8 x i16>* %105, align 2, !alias.scope !25, !noalias !22
  %106 = getelementptr i16, i16* %99, i64 8
  %107 = bitcast i16* %106 to <8 x i16>*
  store <8 x i16> %104, <8 x i16>* %107, align 2, !alias.scope !25, !noalias !22
  %108 = add i64 %63, 64
  %109 = add i64 %64, -4
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %111, label %62, !llvm.loop !27

111:                                              ; preds = %62, %50
  %112 = phi i64 [ 0, %50 ], [ %108, %62 ]
  %113 = icmp eq i64 %58, 0
  br i1 %113, label %130, label %114

114:                                              ; preds = %111, %114
  %115 = phi i64 [ %127, %114 ], [ %112, %111 ]
  %116 = phi i64 [ %128, %114 ], [ %58, %111 ]
  %117 = getelementptr i16, i16* %12, i64 %115
  %118 = getelementptr i16, i16* %39, i64 %115
  %119 = bitcast i16* %117 to <8 x i16>*
  %120 = load <8 x i16>, <8 x i16>* %119, align 2, !alias.scope !22
  %121 = getelementptr i16, i16* %117, i64 8
  %122 = bitcast i16* %121 to <8 x i16>*
  %123 = load <8 x i16>, <8 x i16>* %122, align 2, !alias.scope !22
  %124 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %120, <8 x i16>* %124, align 2, !alias.scope !25, !noalias !22
  %125 = getelementptr i16, i16* %118, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  store <8 x i16> %123, <8 x i16>* %126, align 2, !alias.scope !25, !noalias !22
  %127 = add i64 %115, 16
  %128 = add i64 %116, -1
  %129 = icmp eq i64 %128, 0
  br i1 %129, label %130, label %114, !llvm.loop !28

130:                                              ; preds = %114, %111
  %131 = icmp eq i64 %41, %51
  br i1 %131, label %185, label %132

132:                                              ; preds = %130, %43, %38
  %133 = phi i64 [ %40, %43 ], [ %40, %38 ], [ %52, %130 ]
  %134 = phi i16* [ %12, %43 ], [ %12, %38 ], [ %53, %130 ]
  %135 = phi i16* [ %39, %43 ], [ %39, %38 ], [ %54, %130 ]
  %136 = add i64 %133, -1
  %137 = and i64 %133, 7
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %150, label %139

139:                                              ; preds = %132, %139
  %140 = phi i64 [ %145, %139 ], [ %133, %132 ]
  %141 = phi i16* [ %147, %139 ], [ %134, %132 ]
  %142 = phi i16* [ %146, %139 ], [ %135, %132 ]
  %143 = phi i64 [ %148, %139 ], [ %137, %132 ]
  %144 = load i16, i16* %141, align 2
  store i16 %144, i16* %142, align 2
  %145 = add i64 %140, -1
  %146 = getelementptr inbounds i16, i16* %142, i64 1
  %147 = getelementptr inbounds i16, i16* %141, i64 1
  %148 = add i64 %143, -1
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %139, !llvm.loop !29

150:                                              ; preds = %139, %132
  %151 = phi i64 [ %133, %132 ], [ %145, %139 ]
  %152 = phi i16* [ %134, %132 ], [ %147, %139 ]
  %153 = phi i16* [ %135, %132 ], [ %146, %139 ]
  %154 = icmp ult i64 %136, 7
  br i1 %154, label %185, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %181, %155 ], [ %151, %150 ]
  %157 = phi i16* [ %183, %155 ], [ %152, %150 ]
  %158 = phi i16* [ %182, %155 ], [ %153, %150 ]
  %159 = load i16, i16* %157, align 2
  store i16 %159, i16* %158, align 2
  %160 = getelementptr inbounds i16, i16* %158, i64 1
  %161 = getelementptr inbounds i16, i16* %157, i64 1
  %162 = load i16, i16* %161, align 2
  store i16 %162, i16* %160, align 2
  %163 = getelementptr inbounds i16, i16* %158, i64 2
  %164 = getelementptr inbounds i16, i16* %157, i64 2
  %165 = load i16, i16* %164, align 2
  store i16 %165, i16* %163, align 2
  %166 = getelementptr inbounds i16, i16* %158, i64 3
  %167 = getelementptr inbounds i16, i16* %157, i64 3
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %158, i64 4
  %170 = getelementptr inbounds i16, i16* %157, i64 4
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %158, i64 5
  %173 = getelementptr inbounds i16, i16* %157, i64 5
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %158, i64 6
  %176 = getelementptr inbounds i16, i16* %157, i64 6
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %158, i64 7
  %179 = getelementptr inbounds i16, i16* %157, i64 7
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = add i64 %156, -8
  %182 = getelementptr inbounds i16, i16* %158, i64 8
  %183 = getelementptr inbounds i16, i16* %157, i64 8
  %184 = icmp eq i64 %181, 0
  br i1 %184, label %185, label %155, !llvm.loop !30

185:                                              ; preds = %150, %155, %130, %7
  %186 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1
  %187 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 1
  %188 = bitcast %"class.std::__1::vector"* %186 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 24, i1 false) #6
  %189 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 1, i32 0, i32 1
  %190 = bitcast %"class.gfx::Range"** %189 to i64*
  %191 = load i64, i64* %190, align 8
  %192 = bitcast %"class.std::__1::vector"* %187 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = sub i64 %191, %193
  %195 = ashr exact i64 %194, 3
  %196 = icmp eq i64 %194, 0
  br i1 %196, label %224, label %197

197:                                              ; preds = %185
  %198 = icmp ugt i64 %195, 2305843009213693951
  br i1 %198, label %199, label %201

199:                                              ; preds = %197
  %200 = bitcast %"class.std::__1::vector"* %186 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %200) #7
  unreachable

201:                                              ; preds = %197
  %202 = tail call i8* @_Znwm(i64 %194) #8
  %203 = bitcast i8* %202 to %"class.gfx::Range"*
  %204 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 1
  %205 = bitcast %"class.gfx::Range"** %204 to i8**
  store i8* %202, i8** %205, align 8
  %206 = bitcast %"class.std::__1::vector"* %186 to i8**
  store i8* %202, i8** %206, align 8
  %207 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %203, i64 %195
  %208 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  store %"class.gfx::Range"* %207, %"class.gfx::Range"** %208, align 8
  %209 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %187, i64 0, i32 0, i32 0
  %210 = load %"class.gfx::Range"*, %"class.gfx::Range"** %209, align 8
  %211 = load i64, i64* %190, align 8
  %212 = bitcast %"class.gfx::Range"** %204 to i64*
  %213 = ptrtoint i8* %202 to i64
  %214 = ptrtoint %"class.gfx::Range"* %210 to i64
  %215 = sub i64 %211, %214
  %216 = icmp sgt i64 %215, 0
  br i1 %216, label %217, label %222

217:                                              ; preds = %201
  %218 = lshr exact i64 %215, 3
  %219 = bitcast %"class.gfx::Range"* %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %202, i8* align 4 %219, i64 %215, i1 false) #6
  %220 = getelementptr inbounds %"class.gfx::Range", %"class.gfx::Range"* %203, i64 %218
  %221 = ptrtoint %"class.gfx::Range"* %220 to i64
  br label %222

222:                                              ; preds = %217, %201
  %223 = phi i64 [ %221, %217 ], [ %213, %201 ]
  store i64 %223, i64* %212, align 8
  br label %224

224:                                              ; preds = %185, %222
  %225 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 2
  %226 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 2
  %227 = load i32, i32* %226, align 8
  store i32 %227, i32* %225, align 8
  %228 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3
  %229 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 3
  %230 = bitcast %"class.std::__1::basic_string"* %229 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %231 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %230, i64 0, i32 1, i32 1
  %232 = load i8, i8* %231, align 1
  %233 = icmp slt i8 %232, 0
  br i1 %233, label %237, label %234

234:                                              ; preds = %224
  %235 = bitcast %"class.std::__1::basic_string"* %228 to i8*
  %236 = bitcast %"class.std::__1::basic_string"* %229 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %235, i8* align 8 %236, i64 24, i1 false) #6
  br label %412

237:                                              ; preds = %224
  %238 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %229, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %239 = load i16*, i16** %238, align 8
  %240 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %241 = load i64, i64* %240, align 8
  %242 = icmp ult i64 %241, 11
  br i1 %242, label %243, label %248

243:                                              ; preds = %237
  %244 = bitcast %"class.std::__1::basic_string"* %228 to i16*
  %245 = trunc i64 %241 to i8
  %246 = bitcast %"class.std::__1::basic_string"* %228 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %247 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %246, i64 0, i32 1, i32 1
  store i8 %245, i8* %247, align 1
  br label %265

248:                                              ; preds = %237
  %249 = icmp ugt i64 %241, 9223372036854775791
  br i1 %249, label %250, label %252

250:                                              ; preds = %248
  %251 = bitcast %"class.std::__1::basic_string"* %228 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %251) #7
  unreachable

252:                                              ; preds = %248
  %253 = add nuw nsw i64 %241, 8
  %254 = and i64 %253, -8
  %255 = icmp slt i64 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %252
  tail call void @abort() #7
  unreachable

257:                                              ; preds = %252
  %258 = shl i64 %254, 1
  %259 = tail call i8* @_Znwm(i64 %258) #8
  %260 = bitcast i8* %259 to i16*
  %261 = bitcast %"class.std::__1::basic_string"* %228 to i8**
  store i8* %259, i8** %261, align 8
  %262 = or i64 %254, -9223372036854775808
  %263 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %262, i64* %263, align 8
  %264 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %241, i64* %264, align 8
  br label %265

265:                                              ; preds = %257, %243
  %266 = phi i16* [ %244, %243 ], [ %260, %257 ]
  %267 = add nuw nsw i64 %241, 1
  %268 = add i64 %241, 1
  %269 = icmp ult i64 %268, 16
  br i1 %269, label %359, label %270

270:                                              ; preds = %265
  %271 = add i64 %241, 1
  %272 = getelementptr i16, i16* %266, i64 %271
  %273 = getelementptr i16, i16* %239, i64 %271
  %274 = icmp ult i16* %266, %273
  %275 = icmp ult i16* %239, %272
  %276 = and i1 %274, %275
  br i1 %276, label %359, label %277

277:                                              ; preds = %270
  %278 = and i64 %268, -16
  %279 = sub i64 %267, %278
  %280 = getelementptr i16, i16* %239, i64 %278
  %281 = getelementptr i16, i16* %266, i64 %278
  %282 = add i64 %278, -16
  %283 = lshr exact i64 %282, 4
  %284 = add nuw nsw i64 %283, 1
  %285 = and i64 %284, 3
  %286 = icmp ult i64 %282, 48
  br i1 %286, label %338, label %287

287:                                              ; preds = %277
  %288 = sub nsw i64 %284, %285
  br label %289

289:                                              ; preds = %289, %287
  %290 = phi i64 [ 0, %287 ], [ %335, %289 ]
  %291 = phi i64 [ %288, %287 ], [ %336, %289 ]
  %292 = getelementptr i16, i16* %239, i64 %290
  %293 = getelementptr i16, i16* %266, i64 %290
  %294 = bitcast i16* %292 to <8 x i16>*
  %295 = load <8 x i16>, <8 x i16>* %294, align 2, !alias.scope !31
  %296 = getelementptr i16, i16* %292, i64 8
  %297 = bitcast i16* %296 to <8 x i16>*
  %298 = load <8 x i16>, <8 x i16>* %297, align 2, !alias.scope !31
  %299 = bitcast i16* %293 to <8 x i16>*
  store <8 x i16> %295, <8 x i16>* %299, align 2, !alias.scope !34, !noalias !31
  %300 = getelementptr i16, i16* %293, i64 8
  %301 = bitcast i16* %300 to <8 x i16>*
  store <8 x i16> %298, <8 x i16>* %301, align 2, !alias.scope !34, !noalias !31
  %302 = or i64 %290, 16
  %303 = getelementptr i16, i16* %239, i64 %302
  %304 = getelementptr i16, i16* %266, i64 %302
  %305 = bitcast i16* %303 to <8 x i16>*
  %306 = load <8 x i16>, <8 x i16>* %305, align 2, !alias.scope !31
  %307 = getelementptr i16, i16* %303, i64 8
  %308 = bitcast i16* %307 to <8 x i16>*
  %309 = load <8 x i16>, <8 x i16>* %308, align 2, !alias.scope !31
  %310 = bitcast i16* %304 to <8 x i16>*
  store <8 x i16> %306, <8 x i16>* %310, align 2, !alias.scope !34, !noalias !31
  %311 = getelementptr i16, i16* %304, i64 8
  %312 = bitcast i16* %311 to <8 x i16>*
  store <8 x i16> %309, <8 x i16>* %312, align 2, !alias.scope !34, !noalias !31
  %313 = or i64 %290, 32
  %314 = getelementptr i16, i16* %239, i64 %313
  %315 = getelementptr i16, i16* %266, i64 %313
  %316 = bitcast i16* %314 to <8 x i16>*
  %317 = load <8 x i16>, <8 x i16>* %316, align 2, !alias.scope !31
  %318 = getelementptr i16, i16* %314, i64 8
  %319 = bitcast i16* %318 to <8 x i16>*
  %320 = load <8 x i16>, <8 x i16>* %319, align 2, !alias.scope !31
  %321 = bitcast i16* %315 to <8 x i16>*
  store <8 x i16> %317, <8 x i16>* %321, align 2, !alias.scope !34, !noalias !31
  %322 = getelementptr i16, i16* %315, i64 8
  %323 = bitcast i16* %322 to <8 x i16>*
  store <8 x i16> %320, <8 x i16>* %323, align 2, !alias.scope !34, !noalias !31
  %324 = or i64 %290, 48
  %325 = getelementptr i16, i16* %239, i64 %324
  %326 = getelementptr i16, i16* %266, i64 %324
  %327 = bitcast i16* %325 to <8 x i16>*
  %328 = load <8 x i16>, <8 x i16>* %327, align 2, !alias.scope !31
  %329 = getelementptr i16, i16* %325, i64 8
  %330 = bitcast i16* %329 to <8 x i16>*
  %331 = load <8 x i16>, <8 x i16>* %330, align 2, !alias.scope !31
  %332 = bitcast i16* %326 to <8 x i16>*
  store <8 x i16> %328, <8 x i16>* %332, align 2, !alias.scope !34, !noalias !31
  %333 = getelementptr i16, i16* %326, i64 8
  %334 = bitcast i16* %333 to <8 x i16>*
  store <8 x i16> %331, <8 x i16>* %334, align 2, !alias.scope !34, !noalias !31
  %335 = add i64 %290, 64
  %336 = add i64 %291, -4
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %289, !llvm.loop !36

338:                                              ; preds = %289, %277
  %339 = phi i64 [ 0, %277 ], [ %335, %289 ]
  %340 = icmp eq i64 %285, 0
  br i1 %340, label %357, label %341

341:                                              ; preds = %338, %341
  %342 = phi i64 [ %354, %341 ], [ %339, %338 ]
  %343 = phi i64 [ %355, %341 ], [ %285, %338 ]
  %344 = getelementptr i16, i16* %239, i64 %342
  %345 = getelementptr i16, i16* %266, i64 %342
  %346 = bitcast i16* %344 to <8 x i16>*
  %347 = load <8 x i16>, <8 x i16>* %346, align 2, !alias.scope !31
  %348 = getelementptr i16, i16* %344, i64 8
  %349 = bitcast i16* %348 to <8 x i16>*
  %350 = load <8 x i16>, <8 x i16>* %349, align 2, !alias.scope !31
  %351 = bitcast i16* %345 to <8 x i16>*
  store <8 x i16> %347, <8 x i16>* %351, align 2, !alias.scope !34, !noalias !31
  %352 = getelementptr i16, i16* %345, i64 8
  %353 = bitcast i16* %352 to <8 x i16>*
  store <8 x i16> %350, <8 x i16>* %353, align 2, !alias.scope !34, !noalias !31
  %354 = add i64 %342, 16
  %355 = add i64 %343, -1
  %356 = icmp eq i64 %355, 0
  br i1 %356, label %357, label %341, !llvm.loop !37

357:                                              ; preds = %341, %338
  %358 = icmp eq i64 %268, %278
  br i1 %358, label %412, label %359

359:                                              ; preds = %357, %270, %265
  %360 = phi i64 [ %267, %270 ], [ %267, %265 ], [ %279, %357 ]
  %361 = phi i16* [ %239, %270 ], [ %239, %265 ], [ %280, %357 ]
  %362 = phi i16* [ %266, %270 ], [ %266, %265 ], [ %281, %357 ]
  %363 = add i64 %360, -1
  %364 = and i64 %360, 7
  %365 = icmp eq i64 %364, 0
  br i1 %365, label %377, label %366

366:                                              ; preds = %359, %366
  %367 = phi i64 [ %372, %366 ], [ %360, %359 ]
  %368 = phi i16* [ %374, %366 ], [ %361, %359 ]
  %369 = phi i16* [ %373, %366 ], [ %362, %359 ]
  %370 = phi i64 [ %375, %366 ], [ %364, %359 ]
  %371 = load i16, i16* %368, align 2
  store i16 %371, i16* %369, align 2
  %372 = add i64 %367, -1
  %373 = getelementptr inbounds i16, i16* %369, i64 1
  %374 = getelementptr inbounds i16, i16* %368, i64 1
  %375 = add i64 %370, -1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %377, label %366, !llvm.loop !38

377:                                              ; preds = %366, %359
  %378 = phi i64 [ %360, %359 ], [ %372, %366 ]
  %379 = phi i16* [ %361, %359 ], [ %374, %366 ]
  %380 = phi i16* [ %362, %359 ], [ %373, %366 ]
  %381 = icmp ult i64 %363, 7
  br i1 %381, label %412, label %382

382:                                              ; preds = %377, %382
  %383 = phi i64 [ %408, %382 ], [ %378, %377 ]
  %384 = phi i16* [ %410, %382 ], [ %379, %377 ]
  %385 = phi i16* [ %409, %382 ], [ %380, %377 ]
  %386 = load i16, i16* %384, align 2
  store i16 %386, i16* %385, align 2
  %387 = getelementptr inbounds i16, i16* %385, i64 1
  %388 = getelementptr inbounds i16, i16* %384, i64 1
  %389 = load i16, i16* %388, align 2
  store i16 %389, i16* %387, align 2
  %390 = getelementptr inbounds i16, i16* %385, i64 2
  %391 = getelementptr inbounds i16, i16* %384, i64 2
  %392 = load i16, i16* %391, align 2
  store i16 %392, i16* %390, align 2
  %393 = getelementptr inbounds i16, i16* %385, i64 3
  %394 = getelementptr inbounds i16, i16* %384, i64 3
  %395 = load i16, i16* %394, align 2
  store i16 %395, i16* %393, align 2
  %396 = getelementptr inbounds i16, i16* %385, i64 4
  %397 = getelementptr inbounds i16, i16* %384, i64 4
  %398 = load i16, i16* %397, align 2
  store i16 %398, i16* %396, align 2
  %399 = getelementptr inbounds i16, i16* %385, i64 5
  %400 = getelementptr inbounds i16, i16* %384, i64 5
  %401 = load i16, i16* %400, align 2
  store i16 %401, i16* %399, align 2
  %402 = getelementptr inbounds i16, i16* %385, i64 6
  %403 = getelementptr inbounds i16, i16* %384, i64 6
  %404 = load i16, i16* %403, align 2
  store i16 %404, i16* %402, align 2
  %405 = getelementptr inbounds i16, i16* %385, i64 7
  %406 = getelementptr inbounds i16, i16* %384, i64 7
  %407 = load i16, i16* %406, align 2
  store i16 %407, i16* %405, align 2
  %408 = add i64 %383, -8
  %409 = getelementptr inbounds i16, i16* %385, i64 8
  %410 = getelementptr inbounds i16, i16* %384, i64 8
  %411 = icmp eq i64 %408, 0
  br i1 %411, label %412, label %382, !llvm.loop !39

412:                                              ; preds = %377, %382, %357, %234
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander18CommanderViewModelC2Ev(%"struct.commander::CommanderViewModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2
  %3 = bitcast %"class.std::__1::vector.9"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 48, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander18CommanderViewModelD2Ev(%"struct.commander::CommanderViewModel"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 3
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %3, i64 0, i32 1, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %2 to i8**
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #8
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %11, i64 0, i32 0, i32 0
  %13 = load %"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"** %12, align 8
  %14 = icmp eq %"struct.commander::CommandItemViewModel"* %13, null
  br i1 %14, label %55, label %15

15:                                               ; preds = %10
  %16 = bitcast %"struct.commander::CommandItemViewModel"* %13 to i8*
  %17 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2, i32 0, i32 1
  %18 = load %"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"** %17, align 8
  %19 = icmp eq %"struct.commander::CommandItemViewModel"* %18, %13
  br i1 %19, label %53, label %20

20:                                               ; preds = %15, %48
  %21 = phi %"struct.commander::CommandItemViewModel"* [ %22, %48 ], [ %18, %15 ]
  %22 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %21, i64 -1
  %23 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %21, i64 -1, i32 3
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %24, i64 0, i32 1, i32 1
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = bitcast %"class.std::__1::basic_string"* %23 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #8
  br label %31

31:                                               ; preds = %28, %20
  %32 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %21, i64 -1, i32 1, i32 0, i32 0
  %33 = load %"class.gfx::Range"*, %"class.gfx::Range"** %32, align 8
  %34 = icmp eq %"class.gfx::Range"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %31
  %36 = ptrtoint %"class.gfx::Range"* %33 to i64
  %37 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %21, i64 -1, i32 1, i32 0, i32 1
  %38 = bitcast %"class.gfx::Range"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = bitcast %"class.gfx::Range"* %33 to i8*
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %35, %31
  %41 = bitcast %"struct.commander::CommandItemViewModel"* %22 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %41, i64 0, i32 1, i32 1
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = bitcast %"struct.commander::CommandItemViewModel"* %22 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %45, %40
  %49 = icmp eq %"struct.commander::CommandItemViewModel"* %22, %13
  br i1 %49, label %50, label %20

50:                                               ; preds = %48
  %51 = bitcast %"class.std::__1::vector.9"* %11 to i8**
  %52 = load i8*, i8** %51, align 8
  br label %53

53:                                               ; preds = %50, %15
  %54 = phi i8* [ %52, %50 ], [ %16, %15 ]
  store %"struct.commander::CommandItemViewModel"* %13, %"struct.commander::CommandItemViewModel"** %17, align 8
  tail call void @_ZdlPv(i8* %54) #8
  br label %55

55:                                               ; preds = %10, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9commander18CommanderViewModelC2ERKS0_(%"struct.commander::CommanderViewModel"*, %"struct.commander::CommanderViewModel"* nocapture readonly dereferenceable(64)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 2
  %8 = bitcast %"class.std::__1::vector.9"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #6
  %9 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 2, i32 0, i32 1
  %10 = bitcast %"struct.commander::CommandItemViewModel"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.9"* %7 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 80
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %15, 230584300921369395
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector.9"* %6 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #7
  unreachable

21:                                               ; preds = %17
  %22 = tail call i8* @_Znwm(i64 %14) #8
  %23 = bitcast i8* %22 to %"struct.commander::CommandItemViewModel"*
  %24 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2, i32 0, i32 1
  %25 = bitcast %"struct.commander::CommandItemViewModel"** %24 to i8**
  store i8* %22, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector.9"* %6 to i8**
  store i8* %22, i8** %26, align 8
  %27 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %23, i64 %15
  %28 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  store %"struct.commander::CommandItemViewModel"* %27, %"struct.commander::CommandItemViewModel"** %28, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %7, i64 0, i32 0, i32 0
  %30 = load %"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"** %29, align 8
  %31 = load %"struct.commander::CommandItemViewModel"*, %"struct.commander::CommandItemViewModel"** %9, align 8
  %32 = bitcast %"struct.commander::CommandItemViewModel"** %24 to i64*
  %33 = ptrtoint i8* %22 to i64
  %34 = icmp eq %"struct.commander::CommandItemViewModel"* %30, %31
  br i1 %34, label %43, label %35

35:                                               ; preds = %21, %35
  %36 = phi %"struct.commander::CommandItemViewModel"* [ %39, %35 ], [ %23, %21 ]
  %37 = phi %"struct.commander::CommandItemViewModel"* [ %38, %35 ], [ %30, %21 ]
  tail call void @_ZN9commander20CommandItemViewModelC2ERKS0_(%"struct.commander::CommandItemViewModel"* %36, %"struct.commander::CommandItemViewModel"* dereferenceable(80) %37) #6
  %38 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %37, i64 1
  %39 = getelementptr inbounds %"struct.commander::CommandItemViewModel", %"struct.commander::CommandItemViewModel"* %36, i64 1
  %40 = icmp eq %"struct.commander::CommandItemViewModel"* %38, %31
  br i1 %40, label %41, label %35

41:                                               ; preds = %35
  %42 = ptrtoint %"struct.commander::CommandItemViewModel"* %39 to i64
  br label %43

43:                                               ; preds = %41, %21
  %44 = phi i64 [ %33, %21 ], [ %42, %41 ]
  store i64 %44, i64* %32, align 8
  br label %45

45:                                               ; preds = %2, %43
  %46 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 3
  %47 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 3
  %48 = bitcast %"class.std::__1::basic_string"* %47 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %48, i64 0, i32 1, i32 1
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %45
  %53 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %54 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %54, i64 24, i1 false) #6
  br label %230

55:                                               ; preds = %45
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i16*, i16** %56, align 8
  %58 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = icmp ult i64 %59, 11
  br i1 %60, label %61, label %66

61:                                               ; preds = %55
  %62 = bitcast %"class.std::__1::basic_string"* %46 to i16*
  %63 = trunc i64 %59 to i8
  %64 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %64, i64 0, i32 1, i32 1
  store i8 %63, i8* %65, align 1
  br label %83

66:                                               ; preds = %55
  %67 = icmp ugt i64 %59, 9223372036854775791
  br i1 %67, label %68, label %70

68:                                               ; preds = %66
  %69 = bitcast %"class.std::__1::basic_string"* %46 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %69) #7
  unreachable

70:                                               ; preds = %66
  %71 = add nuw nsw i64 %59, 8
  %72 = and i64 %71, -8
  %73 = icmp slt i64 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %70
  tail call void @abort() #7
  unreachable

75:                                               ; preds = %70
  %76 = shl i64 %72, 1
  %77 = tail call i8* @_Znwm(i64 %76) #8
  %78 = bitcast i8* %77 to i16*
  %79 = bitcast %"class.std::__1::basic_string"* %46 to i8**
  store i8* %77, i8** %79, align 8
  %80 = or i64 %72, -9223372036854775808
  %81 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %80, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %59, i64* %82, align 8
  br label %83

83:                                               ; preds = %75, %61
  %84 = phi i16* [ %62, %61 ], [ %78, %75 ]
  %85 = add nuw nsw i64 %59, 1
  %86 = add i64 %59, 1
  %87 = icmp ult i64 %86, 16
  br i1 %87, label %177, label %88

88:                                               ; preds = %83
  %89 = add i64 %59, 1
  %90 = getelementptr i16, i16* %84, i64 %89
  %91 = getelementptr i16, i16* %57, i64 %89
  %92 = icmp ult i16* %84, %91
  %93 = icmp ult i16* %57, %90
  %94 = and i1 %92, %93
  br i1 %94, label %177, label %95

95:                                               ; preds = %88
  %96 = and i64 %86, -16
  %97 = sub i64 %85, %96
  %98 = getelementptr i16, i16* %57, i64 %96
  %99 = getelementptr i16, i16* %84, i64 %96
  %100 = add i64 %96, -16
  %101 = lshr exact i64 %100, 4
  %102 = add nuw nsw i64 %101, 1
  %103 = and i64 %102, 3
  %104 = icmp ult i64 %100, 48
  br i1 %104, label %156, label %105

105:                                              ; preds = %95
  %106 = sub nsw i64 %102, %103
  br label %107

107:                                              ; preds = %107, %105
  %108 = phi i64 [ 0, %105 ], [ %153, %107 ]
  %109 = phi i64 [ %106, %105 ], [ %154, %107 ]
  %110 = getelementptr i16, i16* %57, i64 %108
  %111 = getelementptr i16, i16* %84, i64 %108
  %112 = bitcast i16* %110 to <8 x i16>*
  %113 = load <8 x i16>, <8 x i16>* %112, align 2, !alias.scope !40
  %114 = getelementptr i16, i16* %110, i64 8
  %115 = bitcast i16* %114 to <8 x i16>*
  %116 = load <8 x i16>, <8 x i16>* %115, align 2, !alias.scope !40
  %117 = bitcast i16* %111 to <8 x i16>*
  store <8 x i16> %113, <8 x i16>* %117, align 2, !alias.scope !43, !noalias !40
  %118 = getelementptr i16, i16* %111, i64 8
  %119 = bitcast i16* %118 to <8 x i16>*
  store <8 x i16> %116, <8 x i16>* %119, align 2, !alias.scope !43, !noalias !40
  %120 = or i64 %108, 16
  %121 = getelementptr i16, i16* %57, i64 %120
  %122 = getelementptr i16, i16* %84, i64 %120
  %123 = bitcast i16* %121 to <8 x i16>*
  %124 = load <8 x i16>, <8 x i16>* %123, align 2, !alias.scope !40
  %125 = getelementptr i16, i16* %121, i64 8
  %126 = bitcast i16* %125 to <8 x i16>*
  %127 = load <8 x i16>, <8 x i16>* %126, align 2, !alias.scope !40
  %128 = bitcast i16* %122 to <8 x i16>*
  store <8 x i16> %124, <8 x i16>* %128, align 2, !alias.scope !43, !noalias !40
  %129 = getelementptr i16, i16* %122, i64 8
  %130 = bitcast i16* %129 to <8 x i16>*
  store <8 x i16> %127, <8 x i16>* %130, align 2, !alias.scope !43, !noalias !40
  %131 = or i64 %108, 32
  %132 = getelementptr i16, i16* %57, i64 %131
  %133 = getelementptr i16, i16* %84, i64 %131
  %134 = bitcast i16* %132 to <8 x i16>*
  %135 = load <8 x i16>, <8 x i16>* %134, align 2, !alias.scope !40
  %136 = getelementptr i16, i16* %132, i64 8
  %137 = bitcast i16* %136 to <8 x i16>*
  %138 = load <8 x i16>, <8 x i16>* %137, align 2, !alias.scope !40
  %139 = bitcast i16* %133 to <8 x i16>*
  store <8 x i16> %135, <8 x i16>* %139, align 2, !alias.scope !43, !noalias !40
  %140 = getelementptr i16, i16* %133, i64 8
  %141 = bitcast i16* %140 to <8 x i16>*
  store <8 x i16> %138, <8 x i16>* %141, align 2, !alias.scope !43, !noalias !40
  %142 = or i64 %108, 48
  %143 = getelementptr i16, i16* %57, i64 %142
  %144 = getelementptr i16, i16* %84, i64 %142
  %145 = bitcast i16* %143 to <8 x i16>*
  %146 = load <8 x i16>, <8 x i16>* %145, align 2, !alias.scope !40
  %147 = getelementptr i16, i16* %143, i64 8
  %148 = bitcast i16* %147 to <8 x i16>*
  %149 = load <8 x i16>, <8 x i16>* %148, align 2, !alias.scope !40
  %150 = bitcast i16* %144 to <8 x i16>*
  store <8 x i16> %146, <8 x i16>* %150, align 2, !alias.scope !43, !noalias !40
  %151 = getelementptr i16, i16* %144, i64 8
  %152 = bitcast i16* %151 to <8 x i16>*
  store <8 x i16> %149, <8 x i16>* %152, align 2, !alias.scope !43, !noalias !40
  %153 = add i64 %108, 64
  %154 = add i64 %109, -4
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %107, !llvm.loop !45

156:                                              ; preds = %107, %95
  %157 = phi i64 [ 0, %95 ], [ %153, %107 ]
  %158 = icmp eq i64 %103, 0
  br i1 %158, label %175, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %172, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %173, %159 ], [ %103, %156 ]
  %162 = getelementptr i16, i16* %57, i64 %160
  %163 = getelementptr i16, i16* %84, i64 %160
  %164 = bitcast i16* %162 to <8 x i16>*
  %165 = load <8 x i16>, <8 x i16>* %164, align 2, !alias.scope !40
  %166 = getelementptr i16, i16* %162, i64 8
  %167 = bitcast i16* %166 to <8 x i16>*
  %168 = load <8 x i16>, <8 x i16>* %167, align 2, !alias.scope !40
  %169 = bitcast i16* %163 to <8 x i16>*
  store <8 x i16> %165, <8 x i16>* %169, align 2, !alias.scope !43, !noalias !40
  %170 = getelementptr i16, i16* %163, i64 8
  %171 = bitcast i16* %170 to <8 x i16>*
  store <8 x i16> %168, <8 x i16>* %171, align 2, !alias.scope !43, !noalias !40
  %172 = add i64 %160, 16
  %173 = add i64 %161, -1
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %159, !llvm.loop !46

175:                                              ; preds = %159, %156
  %176 = icmp eq i64 %86, %96
  br i1 %176, label %230, label %177

177:                                              ; preds = %175, %88, %83
  %178 = phi i64 [ %85, %88 ], [ %85, %83 ], [ %97, %175 ]
  %179 = phi i16* [ %57, %88 ], [ %57, %83 ], [ %98, %175 ]
  %180 = phi i16* [ %84, %88 ], [ %84, %83 ], [ %99, %175 ]
  %181 = add i64 %178, -1
  %182 = and i64 %178, 7
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %195, label %184

184:                                              ; preds = %177, %184
  %185 = phi i64 [ %190, %184 ], [ %178, %177 ]
  %186 = phi i16* [ %192, %184 ], [ %179, %177 ]
  %187 = phi i16* [ %191, %184 ], [ %180, %177 ]
  %188 = phi i64 [ %193, %184 ], [ %182, %177 ]
  %189 = load i16, i16* %186, align 2
  store i16 %189, i16* %187, align 2
  %190 = add i64 %185, -1
  %191 = getelementptr inbounds i16, i16* %187, i64 1
  %192 = getelementptr inbounds i16, i16* %186, i64 1
  %193 = add i64 %188, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !47

195:                                              ; preds = %184, %177
  %196 = phi i64 [ %178, %177 ], [ %190, %184 ]
  %197 = phi i16* [ %179, %177 ], [ %192, %184 ]
  %198 = phi i16* [ %180, %177 ], [ %191, %184 ]
  %199 = icmp ult i64 %181, 7
  br i1 %199, label %230, label %200

200:                                              ; preds = %195, %200
  %201 = phi i64 [ %226, %200 ], [ %196, %195 ]
  %202 = phi i16* [ %228, %200 ], [ %197, %195 ]
  %203 = phi i16* [ %227, %200 ], [ %198, %195 ]
  %204 = load i16, i16* %202, align 2
  store i16 %204, i16* %203, align 2
  %205 = getelementptr inbounds i16, i16* %203, i64 1
  %206 = getelementptr inbounds i16, i16* %202, i64 1
  %207 = load i16, i16* %206, align 2
  store i16 %207, i16* %205, align 2
  %208 = getelementptr inbounds i16, i16* %203, i64 2
  %209 = getelementptr inbounds i16, i16* %202, i64 2
  %210 = load i16, i16* %209, align 2
  store i16 %210, i16* %208, align 2
  %211 = getelementptr inbounds i16, i16* %203, i64 3
  %212 = getelementptr inbounds i16, i16* %202, i64 3
  %213 = load i16, i16* %212, align 2
  store i16 %213, i16* %211, align 2
  %214 = getelementptr inbounds i16, i16* %203, i64 4
  %215 = getelementptr inbounds i16, i16* %202, i64 4
  %216 = load i16, i16* %215, align 2
  store i16 %216, i16* %214, align 2
  %217 = getelementptr inbounds i16, i16* %203, i64 5
  %218 = getelementptr inbounds i16, i16* %202, i64 5
  %219 = load i16, i16* %218, align 2
  store i16 %219, i16* %217, align 2
  %220 = getelementptr inbounds i16, i16* %203, i64 6
  %221 = getelementptr inbounds i16, i16* %202, i64 6
  %222 = load i16, i16* %221, align 2
  store i16 %222, i16* %220, align 2
  %223 = getelementptr inbounds i16, i16* %203, i64 7
  %224 = getelementptr inbounds i16, i16* %202, i64 7
  %225 = load i16, i16* %224, align 2
  store i16 %225, i16* %223, align 2
  %226 = add i64 %201, -8
  %227 = getelementptr inbounds i16, i16* %203, i64 8
  %228 = getelementptr inbounds i16, i16* %202, i64 8
  %229 = icmp eq i64 %226, 0
  br i1 %229, label %230, label %200, !llvm.loop !48

230:                                              ; preds = %195, %200, %175, %52
  %231 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %0, i64 0, i32 4
  %232 = getelementptr inbounds %"struct.commander::CommanderViewModel", %"struct.commander::CommanderViewModel"* %1, i64 0, i32 4
  %233 = load i32, i32* %232, align 8
  store i32 %233, i32* %231, align 8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { noreturn nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !8}
!19 = distinct !{!19, !10}
!20 = distinct !{!20, !10}
!21 = distinct !{!21, !8}
!22 = !{!23}
!23 = distinct !{!23, !24}
!24 = distinct !{!24, !"LVerDomain"}
!25 = !{!26}
!26 = distinct !{!26, !24}
!27 = distinct !{!27, !8}
!28 = distinct !{!28, !10}
!29 = distinct !{!29, !10}
!30 = distinct !{!30, !8}
!31 = !{!32}
!32 = distinct !{!32, !33}
!33 = distinct !{!33, !"LVerDomain"}
!34 = !{!35}
!35 = distinct !{!35, !33}
!36 = distinct !{!36, !8}
!37 = distinct !{!37, !10}
!38 = distinct !{!38, !10}
!39 = distinct !{!39, !8}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !8}
!46 = distinct !{!46, !10}
!47 = distinct !{!47, !10}
!48 = distinct !{!48, !8}
