; ModuleID = '../../net/base/datagram_buffer.cc'
source_filename = "../../net/base/datagram_buffer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::DatagramBufferPool" = type { i32 (...)**, i64, %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.net::DatagramBuffer" = type { %"class.std::__1::unique_ptr.3", i64 }
%"class.std::__1::unique_ptr.3" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.net::DatagramBuffer"* }

@_ZTVN3net18DatagramBufferPoolE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DatagramBufferPool"*)* @_ZN3net18DatagramBufferPoolD2Ev to i8*), i8* bitcast (void (%"class.net::DatagramBufferPool"*)* @_ZN3net18DatagramBufferPoolD0Ev to i8*)] }, align 8

@_ZN3net18DatagramBufferPoolC1Em = hidden unnamed_addr alias void (%"class.net::DatagramBufferPool"*, i64), void (%"class.net::DatagramBufferPool"*, i64)* @_ZN3net18DatagramBufferPoolC2Em
@_ZN3net18DatagramBufferPoolD1Ev = hidden unnamed_addr alias void (%"class.net::DatagramBufferPool"*), void (%"class.net::DatagramBufferPool"*)* @_ZN3net18DatagramBufferPoolD2Ev
@_ZN3net14DatagramBufferC1Em = hidden unnamed_addr alias void (%"class.net::DatagramBuffer"*, i64), void (%"class.net::DatagramBuffer"*, i64)* @_ZN3net14DatagramBufferC2Em
@_ZN3net14DatagramBufferD1Ev = hidden unnamed_addr alias void (%"class.net::DatagramBuffer"*), void (%"class.net::DatagramBuffer"*)* @_ZN3net14DatagramBufferD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net18DatagramBufferPoolC2Em(%"class.net::DatagramBufferPool"*, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net18DatagramBufferPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 1
  store i64 %1, i64* %4, align 8
  %5 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2
  %6 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %5, i64 0, i32 0, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %6, %"struct.std::__1::__list_node_base"** %7, align 8
  %8 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  store %"struct.std::__1::__list_node_base"* %6, %"struct.std::__1::__list_node_base"** %8, align 8
  %9 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  store i64 0, i64* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DatagramBufferPoolD2Ev(%"class.net::DatagramBufferPool"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net18DatagramBufferPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %4, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %43, label %25

25:                                               ; preds = %7, %40
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %40 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 1
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to %"class.net::DatagramBuffer"**
  %31 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %30, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %30, align 8
  %32 = icmp eq %"class.net::DatagramBuffer"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  store i8* null, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZdaPv(i8* nonnull %35) #8
  br label %38

38:                                               ; preds = %37, %33
  %39 = bitcast %"class.net::DatagramBuffer"* %31 to i8*
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %38, %25
  %41 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %41) #8
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %42, label %43, label %25

43:                                               ; preds = %40, %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DatagramBufferPoolD0Ev(%"class.net::DatagramBufferPool"*) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN3net18DatagramBufferPoolE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0
  %4 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %43, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %9 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::__list_imp", %"class.std::__1::__list_imp"* %3, i64 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %9, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %9 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  store i64 0, i64* %4, align 8
  %24 = icmp eq %"struct.std::__1::__list_node_base"* %9, %10
  br i1 %24, label %43, label %25

25:                                               ; preds = %7, %40
  %26 = phi %"struct.std::__1::__list_node_base"* [ %28, %40 ], [ %9, %7 ]
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %27, align 8
  %29 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 1
  %30 = bitcast %"struct.std::__1::__list_node_base"* %29 to %"class.net::DatagramBuffer"**
  %31 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %30, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %30, align 8
  %32 = icmp eq %"class.net::DatagramBuffer"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  store i8* null, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %38, label %37

37:                                               ; preds = %33
  tail call void @_ZdaPv(i8* nonnull %35) #8
  br label %38

38:                                               ; preds = %37, %33
  %39 = bitcast %"class.net::DatagramBuffer"* %31 to i8*
  tail call void @_ZdlPv(i8* %39) #8
  br label %40

40:                                               ; preds = %38, %25
  %41 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %41) #8
  %42 = icmp eq %"struct.std::__1::__list_node_base"* %28, %10
  br i1 %42, label %43, label %25

43:                                               ; preds = %40, %1, %7
  %44 = bitcast %"class.net::DatagramBufferPool"* %0 to i8*
  tail call void @_ZdlPv(i8* %44) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DatagramBufferPool7EnqueueEPKcmPNSt3__14listINS3_10unique_ptrINS_14DatagramBufferENS3_14default_deleteIS6_EEEENS3_9allocatorIS9_EEEE(%"class.net::DatagramBufferPool"* nocapture, i8* nocapture readonly, i64, %"class.std::__1::list"*) local_unnamed_addr #1 align 2 {
  %5 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %18

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 16) #8
  %10 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = tail call i8* @_Znam(i64 %11) #8
  %13 = ptrtoint i8* %12 to i64
  %14 = bitcast i8* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %9, i64 8
  %16 = bitcast i8* %15 to i64*
  store i64 0, i64* %16, align 8
  %17 = ptrtoint i8* %9 to i64
  br label %53

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %20 = bitcast %"struct.std::__1::__list_node_base"** %19 to %"struct.std::__1::__list_node"**
  %21 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %21, i64 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  %25 = load i64, i64* %24, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %23, align 8
  %26 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %19, align 8
  %27 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 1
  %28 = bitcast %"struct.std::__1::__list_node_base"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 0, i32 0
  %31 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %30, align 8
  %32 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %31, i64 0, i32 1
  %33 = bitcast %"struct.std::__1::__list_node_base"** %32 to i64*
  store i64 %29, i64* %33, align 8
  %34 = bitcast %"struct.std::__1::__list_node_base"* %26 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"struct.std::__1::__list_node_base"** %27 to i64**
  %37 = load i64*, i64** %36, align 8
  store i64 %35, i64* %37, align 8
  %38 = load i64, i64* %5, align 8
  %39 = add i64 %38, -1
  store i64 %39, i64* %5, align 8
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %26, i64 1
  %41 = bitcast %"struct.std::__1::__list_node_base"* %40 to %"class.net::DatagramBuffer"**
  %42 = load %"class.net::DatagramBuffer"*, %"class.net::DatagramBuffer"** %41, align 8
  store %"class.net::DatagramBuffer"* null, %"class.net::DatagramBuffer"** %41, align 8
  %43 = icmp eq %"class.net::DatagramBuffer"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %18
  %45 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  store i8* null, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @_ZdaPv(i8* nonnull %46) #8
  br label %49

49:                                               ; preds = %48, %44
  %50 = bitcast %"class.net::DatagramBuffer"* %42 to i8*
  tail call void @_ZdlPv(i8* %50) #8
  br label %51

51:                                               ; preds = %18, %49
  %52 = bitcast %"struct.std::__1::__list_node_base"* %26 to i8*
  tail call void @_ZdlPv(i8* %52) #8
  br label %53

53:                                               ; preds = %8, %51
  %54 = phi i64 [ %17, %8 ], [ %25, %51 ]
  %55 = inttoptr i64 %54 to %"class.net::DatagramBuffer"*
  %56 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %55, i64 0, i32 1
  store i64 %2, i64* %56, align 8
  %57 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %58, i8* align 1 %1, i64 %2, i1 false) #9
  %59 = tail call i8* @_Znwm(i64 24) #8, !noalias !2
  %60 = bitcast i8* %59 to %"struct.std::__1::__list_node_base"**
  %61 = getelementptr inbounds i8, i8* %59, i64 16
  %62 = bitcast i8* %61 to i64*
  store i64 %54, i64* %62, align 8
  %63 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0
  %64 = getelementptr inbounds i8, i8* %59, i64 8
  %65 = bitcast i8* %64 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %63, %"struct.std::__1::__list_node_base"** %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 0, i32 0
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  store %"struct.std::__1::__list_node_base"* %67, %"struct.std::__1::__list_node_base"** %60, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = bitcast %"struct.std::__1::__list_node_base"** %68 to i8**
  store i8* %59, i8** %69, align 8
  %70 = bitcast %"class.std::__1::list"* %3 to i8**
  store i8* %59, i8** %70, align 8
  %71 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %72 = load i64, i64* %71, align 8
  %73 = add i64 %72, 1
  store i64 %73, i64* %71, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14DatagramBuffer3SetEPKcm(%"class.net::DatagramBuffer"* nocapture, i8* nocapture readonly, i64) local_unnamed_addr #1 align 2 {
  %4 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 1
  store i64 %2, i64* %4, align 8
  %5 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %6, i8* align 1 %1, i64 %2, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net18DatagramBufferPool7DequeueEPNSt3__14listINS1_10unique_ptrINS_14DatagramBufferENS1_14default_deleteIS4_EEEENS1_9allocatorIS7_EEEE(%"class.net::DatagramBufferPool"*, %"class.std::__1::list"* nocapture) local_unnamed_addr #4 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %33, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2
  %8 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %1, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %12, i64 0, i32 1
  %14 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %10, i64 0, i32 0
  %17 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %17, i64 0, i32 1
  %19 = bitcast %"struct.std::__1::__list_node_base"** %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = bitcast %"struct.std::__1::__list_node_base"* %10 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"struct.std::__1::__list_node_base"** %13 to i64**
  %23 = load i64*, i64** %22, align 8
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %7, i64 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %25, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %10, %"struct.std::__1::__list_node_base"** %26, align 8
  %27 = bitcast %"class.std::__1::list"* %7 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %20, align 8
  store %"struct.std::__1::__list_node_base"* %12, %"struct.std::__1::__list_node_base"** %24, align 8
  store %"struct.std::__1::__list_node_base"* %8, %"struct.std::__1::__list_node_base"** %13, align 8
  %29 = load i64, i64* %3, align 8
  %30 = getelementptr inbounds %"class.net::DatagramBufferPool", %"class.net::DatagramBufferPool"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %29
  store i64 %32, i64* %30, align 8
  store i64 0, i64* %3, align 8
  br label %33

33:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN3net14DatagramBufferC2Em(%"class.net::DatagramBuffer"* nocapture, i64) unnamed_addr #5 align 2 {
  %3 = tail call i8* @_Znam(i64 %1) #8
  %4 = ptrtoint i8* %3 to i64
  %5 = bitcast %"class.net::DatagramBuffer"* %0 to i64*
  store i64 %4, i64* %5, align 8
  %6 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 1
  store i64 0, i64* %6, align 8
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14DatagramBufferD2Ev(%"class.net::DatagramBuffer"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  store i8* null, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZdaPv(i8* nonnull %3) #8
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #6

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK3net14DatagramBuffer4dataEv(%"class.net::DatagramBuffer"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK3net14DatagramBuffer6lengthEv(%"class.net::DatagramBuffer"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::DatagramBuffer", %"class.net::DatagramBuffer"* %0, i64 0, i32 1
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { builtin nounwind }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__14listINS_10unique_ptrIN3net14DatagramBufferENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__14listINS_10unique_ptrIN3net14DatagramBufferENS_14default_deleteIS3_EEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_PvEEEE"}
