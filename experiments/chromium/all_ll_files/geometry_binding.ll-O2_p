; ModuleID = '../../components/viz/service/display/geometry_binding.cc'
source_filename = "../../components/viz/service/display/geometry_binding.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.viz::GeometryBindingQuad" = type { %"struct.viz::GeometryBindingVertex", %"struct.viz::GeometryBindingVertex", %"struct.viz::GeometryBindingVertex", %"struct.viz::GeometryBindingVertex" }
%"struct.viz::GeometryBindingVertex" = type { [3 x float], [2 x float], float }
%"struct.viz::GeometryBindingQuadIndex" = type { [6 x i16] }
%"class.gpu::gles2::GLES2Interface" = type { %"class.gpu::InterfaceBase" }
%"class.gpu::InterfaceBase" = type { i32 (...)** }

@_ZN3viz19GeometryBindingQuadC1Ev = hidden unnamed_addr alias void (%"struct.viz::GeometryBindingQuad"*), void (%"struct.viz::GeometryBindingQuad"*)* @_ZN3viz19GeometryBindingQuadC2Ev
@_ZN3viz19GeometryBindingQuadC1ERKNS_21GeometryBindingVertexES3_S3_S3_ = hidden unnamed_addr alias void (%"struct.viz::GeometryBindingQuad"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*), void (%"struct.viz::GeometryBindingQuad"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*, %"struct.viz::GeometryBindingVertex"*)* @_ZN3viz19GeometryBindingQuadC2ERKNS_21GeometryBindingVertexES3_S3_S3_
@_ZN3viz24GeometryBindingQuadIndexC1Ev = hidden unnamed_addr alias void (%"struct.viz::GeometryBindingQuadIndex"*), void (%"struct.viz::GeometryBindingQuadIndex"*)* @_ZN3viz24GeometryBindingQuadIndexC2Ev
@_ZN3viz24GeometryBindingQuadIndexC1Etttttt = hidden unnamed_addr alias void (%"struct.viz::GeometryBindingQuadIndex"*, i16, i16, i16, i16, i16, i16), void (%"struct.viz::GeometryBindingQuadIndex"*, i16, i16, i16, i16, i16, i16)* @_ZN3viz24GeometryBindingQuadIndexC2Etttttt

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz14SetupGLContextEPN3gpu5gles214GLES2InterfaceEjj(%"class.gpu::gles2::GLES2Interface"*, i32, i32) local_unnamed_addr #0 {
  %4 = bitcast %"class.gpu::gles2::GLES2Interface"* %0 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)***
  %5 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %5, i64 12
  %7 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %6, align 8
  tail call void %7(%"class.gpu::gles2::GLES2Interface"* %0, i32 34963, i32 %1) #3
  %8 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*** %4, align 8
  %9 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %8, i64 12
  %10 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32)** %9, align 8
  tail call void %10(%"class.gpu::gles2::GLES2Interface"* %0, i32 34962, i32 %2) #3
  %11 = bitcast %"class.gpu::gles2::GLES2Interface"* %0 to void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)***
  %12 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %12, i64 234
  %14 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %13, align 8
  tail call void %14(%"class.gpu::gles2::GLES2Interface"* %0, i32 0, i32 3, i32 5126, i8 zeroext 0, i32 24, i8* null) #3
  %15 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*** %11, align 8
  %16 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %15, i64 234
  %17 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %16, align 8
  tail call void %17(%"class.gpu::gles2::GLES2Interface"* %0, i32 1, i32 2, i32 5126, i8 zeroext 0, i32 24, i8* nonnull inttoptr (i64 12 to i8*)) #3
  %18 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)**, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*** %11, align 8
  %19 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %18, i64 234
  %20 = load void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)*, void (%"class.gpu::gles2::GLES2Interface"*, i32, i32, i32, i8, i32, i8*)** %19, align 8
  tail call void %20(%"class.gpu::gles2::GLES2Interface"* %0, i32 2, i32 1, i32 5126, i8 zeroext 0, i32 24, i8* nonnull inttoptr (i64 20 to i8*)) #3
  %21 = bitcast %"class.gpu::gles2::GLES2Interface"* %0 to void (%"class.gpu::gles2::GLES2Interface"*, i32)***
  %22 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %22, i64 69
  %24 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %23, align 8
  tail call void %24(%"class.gpu::gles2::GLES2Interface"* %0, i32 0) #3
  %25 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %21, align 8
  %26 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %25, i64 69
  %27 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %26, align 8
  tail call void %27(%"class.gpu::gles2::GLES2Interface"* %0, i32 1) #3
  %28 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)**, void (%"class.gpu::gles2::GLES2Interface"*, i32)*** %21, align 8
  %29 = getelementptr inbounds void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %28, i64 69
  %30 = load void (%"class.gpu::gles2::GLES2Interface"*, i32)*, void (%"class.gpu::gles2::GLES2Interface"*, i32)** %29, align 8
  tail call void %30(%"class.gpu::gles2::GLES2Interface"* %0, i32 2) #3
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz19GeometryBindingQuadC2Ev(%"struct.viz::GeometryBindingQuad"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"struct.viz::GeometryBindingQuad"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz19GeometryBindingQuadC2ERKNS_21GeometryBindingVertexES3_S3_S3_(%"struct.viz::GeometryBindingQuad"* nocapture, %"struct.viz::GeometryBindingVertex"* nocapture readonly dereferenceable(24), %"struct.viz::GeometryBindingVertex"* nocapture readonly dereferenceable(24), %"struct.viz::GeometryBindingVertex"* nocapture readonly dereferenceable(24), %"struct.viz::GeometryBindingVertex"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %6 = bitcast %"struct.viz::GeometryBindingQuad"* %0 to i8*
  %7 = bitcast %"struct.viz::GeometryBindingVertex"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %6, i8* align 4 %7, i64 24, i1 false)
  %8 = getelementptr inbounds %"struct.viz::GeometryBindingQuad", %"struct.viz::GeometryBindingQuad"* %0, i64 0, i32 1
  %9 = bitcast %"struct.viz::GeometryBindingVertex"* %8 to i8*
  %10 = bitcast %"struct.viz::GeometryBindingVertex"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %9, i8* align 4 %10, i64 24, i1 false)
  %11 = getelementptr inbounds %"struct.viz::GeometryBindingQuad", %"struct.viz::GeometryBindingQuad"* %0, i64 0, i32 2
  %12 = bitcast %"struct.viz::GeometryBindingVertex"* %11 to i8*
  %13 = bitcast %"struct.viz::GeometryBindingVertex"* %3 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 24, i1 false)
  %14 = getelementptr inbounds %"struct.viz::GeometryBindingQuad", %"struct.viz::GeometryBindingQuad"* %0, i64 0, i32 3
  %15 = bitcast %"struct.viz::GeometryBindingVertex"* %14 to i8*
  %16 = bitcast %"struct.viz::GeometryBindingVertex"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %15, i8* align 4 %16, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz24GeometryBindingQuadIndexC2Ev(%"struct.viz::GeometryBindingQuadIndex"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.viz::GeometryBindingQuadIndex"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %2, i8 0, i64 12, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3viz24GeometryBindingQuadIndexC2Etttttt(%"struct.viz::GeometryBindingQuadIndex"* nocapture, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext, i16 zeroext) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 0
  store i16 %1, i16* %8, align 2
  %9 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 1
  store i16 %2, i16* %9, align 2
  %10 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 2
  store i16 %3, i16* %10, align 2
  %11 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 3
  store i16 %4, i16* %11, align 2
  %12 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 4
  store i16 %5, i16* %12, align 2
  %13 = getelementptr inbounds %"struct.viz::GeometryBindingQuadIndex", %"struct.viz::GeometryBindingQuadIndex"* %0, i64 0, i32 0, i64 5
  store i16 %6, i16* %13, align 2
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
