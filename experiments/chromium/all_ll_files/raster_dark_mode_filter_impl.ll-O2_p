; ModuleID = '../../third_party/blink/renderer/platform/graphics/raster_dark_mode_filter_impl.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/raster_dark_mode_filter_impl.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::RasterDarkModeFilterImpl" = type { %"class.cc::RasterDarkModeFilter", %"class.std::__1::unique_ptr" }
%"class.cc::RasterDarkModeFilter" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::DarkModeFilter"* }
%"class.blink::DarkModeFilter" = type { %"struct.blink::DarkModeFilter::ImmutableData", %"class.absl::optional", %"class.std::__1::unique_ptr.17" }
%"struct.blink::DarkModeFilter::ImmutableData" = type { %"struct.blink::DarkModeSettings", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.0", %"class.std::__1::unique_ptr.4", %"class.std::__1::unique_ptr.10", %class.sk_sp }
%"struct.blink::DarkModeSettings" = type <{ i32, i8, [3 x i8], float, float, i32, i32, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.blink::DarkModeColorClassifier"* }
%"class.blink::DarkModeColorClassifier" = type opaque
%"class.std::__1::unique_ptr.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"class.blink::DarkModeImageClassifier"* }
%"class.blink::DarkModeImageClassifier" = type opaque
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::DarkModeColorFilter"* }
%"class.blink::DarkModeColorFilter" = type opaque
%class.sk_sp = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.blink::DarkModeInvertedColorCache"* }
%"class.blink::DarkModeInvertedColorCache" = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.26, i32, i32 }
%class.sk_sp.26 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%struct.SkISize = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }

$_ZN5blink24RasterDarkModeFilterImplD2Ev = comdat any

$_ZN5blink24RasterDarkModeFilterImplD0Ev = comdat any

@_ZTVN5blink24RasterDarkModeFilterImplE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::RasterDarkModeFilterImpl"*)* @_ZN5blink24RasterDarkModeFilterImplD2Ev to i8*), i8* bitcast (void (%"class.blink::RasterDarkModeFilterImpl"*)* @_ZN5blink24RasterDarkModeFilterImplD0Ev to i8*), i8* bitcast (void (%class.sk_sp*, %"class.blink::RasterDarkModeFilterImpl"*, %class.SkPixmap*, %struct.SkIRect*)* @_ZNK5blink24RasterDarkModeFilterImpl12ApplyToImageERK8SkPixmapRK7SkIRect to i8*)] }, align 8

@_ZN5blink24RasterDarkModeFilterImplC1ERKNS_16DarkModeSettingsE = hidden unnamed_addr alias void (%"class.blink::RasterDarkModeFilterImpl"*, %"struct.blink::DarkModeSettings"*), void (%"class.blink::RasterDarkModeFilterImpl"*, %"struct.blink::DarkModeSettings"*)* @_ZN5blink24RasterDarkModeFilterImplC2ERKNS_16DarkModeSettingsE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink24RasterDarkModeFilterImplC2ERKNS_16DarkModeSettingsE(%"class.blink::RasterDarkModeFilterImpl"* nocapture, %"struct.blink::DarkModeSettings"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24RasterDarkModeFilterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 0, i64* %5, align 8
  %6 = tail call i8* @_Znwm(i64 88) #6
  %7 = bitcast i8* %6 to %"class.blink::DarkModeFilter"*
  tail call void @_ZN5blink14DarkModeFilterC1ERKNS_16DarkModeSettingsE(%"class.blink::DarkModeFilter"* nonnull %7, %"struct.blink::DarkModeSettings"* dereferenceable(32) %1) #7
  %8 = ptrtoint i8* %6 to i64
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.blink::DarkModeFilter"*, %"class.blink::DarkModeFilter"** %9, align 8
  store i64 %8, i64* %5, align 8
  %11 = icmp eq %"class.blink::DarkModeFilter"* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %2
  tail call void @_ZN5blink14DarkModeFilterD1Ev(%"class.blink::DarkModeFilter"* nonnull %10) #7
  %13 = bitcast %"class.blink::DarkModeFilter"* %10 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %12, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink24RasterDarkModeFilterImpl12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp* noalias sret, %"class.blink::RasterDarkModeFilterImpl"* nocapture readonly, %class.SkPixmap* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DarkModeFilter"*, %"class.blink::DarkModeFilter"** %5, align 8
  tail call void @_ZNK5blink14DarkModeFilter12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp* sret %0, %"class.blink::DarkModeFilter"* %6, %class.SkPixmap* dereferenceable(40) %2, %struct.SkIRect* dereferenceable(16) %3) #7
  ret void
}

declare void @_ZNK5blink14DarkModeFilter12ApplyToImageERK8SkPixmapRK7SkIRect(%class.sk_sp* sret, %"class.blink::DarkModeFilter"*, %class.SkPixmap* dereferenceable(40), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24RasterDarkModeFilterImplD2Ev(%"class.blink::RasterDarkModeFilterImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24RasterDarkModeFilterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DarkModeFilter"*, %"class.blink::DarkModeFilter"** %3, align 8
  store %"class.blink::DarkModeFilter"* null, %"class.blink::DarkModeFilter"** %3, align 8
  %5 = icmp eq %"class.blink::DarkModeFilter"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14DarkModeFilterD1Ev(%"class.blink::DarkModeFilter"* nonnull %4) #7
  %7 = bitcast %"class.blink::DarkModeFilter"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink24RasterDarkModeFilterImplD0Ev(%"class.blink::RasterDarkModeFilterImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink24RasterDarkModeFilterImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::RasterDarkModeFilterImpl", %"class.blink::RasterDarkModeFilterImpl"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DarkModeFilter"*, %"class.blink::DarkModeFilter"** %3, align 8
  store %"class.blink::DarkModeFilter"* null, %"class.blink::DarkModeFilter"** %3, align 8
  %5 = icmp eq %"class.blink::DarkModeFilter"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN5blink14DarkModeFilterD1Ev(%"class.blink::DarkModeFilter"* nonnull %4) #7
  %7 = bitcast %"class.blink::DarkModeFilter"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = bitcast %"class.blink::RasterDarkModeFilterImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %9) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14DarkModeFilterD1Ev(%"class.blink::DarkModeFilter"*) unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @_ZN5blink14DarkModeFilterC1ERKNS_16DarkModeSettingsE(%"class.blink::DarkModeFilter"*, %"struct.blink::DarkModeSettings"* dereferenceable(32)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { builtin nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
