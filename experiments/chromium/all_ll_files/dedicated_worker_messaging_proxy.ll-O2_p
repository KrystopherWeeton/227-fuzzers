; ModuleID = '../../third_party/blink/renderer/core/workers/dedicated_worker_messaging_proxy.cc'
source_filename = "../../third_party/blink/renderer/core/workers/dedicated_worker_messaging_proxy.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.278" }
%"struct.std::__1::atomic.278" = type { %"struct.std::__1::__atomic_base.279" }
%"struct.std::__1::__atomic_base.279" = type { %"struct.std::__1::__atomic_base.280" }
%"struct.std::__1::__atomic_base.280" = type { %"struct.std::__1::__cxx_atomic_impl.281" }
%"struct.std::__1::__cxx_atomic_impl.281" = type { %"struct.std::__1::__cxx_atomic_base_impl.282" }
%"struct.std::__1::__cxx_atomic_base_impl.282" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.176", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.411" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.411" = type { %"struct.std::__1::__compressed_pair_elem.412" }
%"struct.std::__1::__compressed_pair_elem.412" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.176" = type { %"struct.std::__1::__atomic_base.177" }
%"struct.std::__1::__atomic_base.177" = type { %"struct.std::__1::__cxx_atomic_impl.178" }
%"struct.std::__1::__cxx_atomic_impl.178" = type { %"struct.std::__1::__cxx_atomic_base_impl.179" }
%"struct.std::__1::__cxx_atomic_base_impl.179" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::DedicatedWorkerMessagingProxy" = type { %"class.blink::ThreadedMessagingProxyBase", %"class.std::__1::unique_ptr.257", %"class.blink::WeakMember.265", i8, %"class.WTF::Vector.326", %"class.mojo::PendingRemote.325" }
%"class.blink::ThreadedMessagingProxyBase" = type { i32 (...)**, %"class.blink::Member", %"class.blink::CrossThreadPersistent", %"class.std::__1::unique_ptr.180", i8, [7 x i8], %"class.base::WaitableEvent", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.blink::SelfKeepAlive" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ExecutionContext"* }
%"class.blink::CrossThreadPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ParentExecutionContextTaskRunners"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ParentExecutionContextTaskRunners" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.WTF::Mutex", %"class.WTF::HashMap" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember.5"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.5" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::CrossThreadPersistentNodePtr" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::WorkerThread"* }
%"class.blink::WorkerThread" = type { %"class.base::TaskObserver", %"class.base::TimeTicks", i32, i8, i32, i32, %"class.base::TimeDelta", %class.scoped_refptr.183, %"class.base::UnguessableToken", %"class.blink::InspectorIssueStorage", i32, %"class.blink::WorkerReportingProxy"*, %class.scoped_refptr.195, %"class.std::__1::unique_ptr.201", %"class.WTF::HashMap", %"class.WTF::Mutex", i32, %"class.blink::Platform::NestedMessageLoopRunner"*, %"class.blink::CrossThreadPersistent.229", %"class.blink::CrossThreadPersistent.231", %"class.blink::CrossThreadPersistent.233", %class.scoped_refptr.235, %"class.blink::TaskHandle", %"class.WTF::HashSet.237", %"class.WTF::HashSet.241" }
%"class.base::TaskObserver" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%class.scoped_refptr.183 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.184" }
%"class.WTF::Deque.184" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.187" }
%"class.WTF::VectorBuffer.187" = type { %"class.WTF::VectorBufferBase.188" }
%"class.WTF::VectorBufferBase.188" = type { %"class.std::__1::unique_ptr.189"*, i32, i32 }
%"class.std::__1::unique_ptr.189" = type { %"class.std::__1::__compressed_pair.190" }
%"class.std::__1::__compressed_pair.190" = type { %"struct.std::__1::__compressed_pair_elem.191" }
%"struct.std::__1::__compressed_pair_elem.191" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::WorkerReportingProxy" = type { i32 (...)** }
%class.scoped_refptr.195 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.196" }
%"struct.std::__1::atomic.196" = type { %"struct.std::__1::__atomic_base.197" }
%"struct.std::__1::__atomic_base.197" = type { %"struct.std::__1::__atomic_base.198" }
%"struct.std::__1::__atomic_base.198" = type { %"struct.std::__1::__cxx_atomic_impl.199" }
%"struct.std::__1::__cxx_atomic_impl.199" = type { %"struct.std::__1::__cxx_atomic_base_impl.200" }
%"struct.std::__1::__cxx_atomic_base_impl.200" = type { i32 }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %"class.blink::scheduler::WorkerScheduler"* }
%"class.blink::scheduler::WorkerScheduler" = type { %"class.blink::FrameOrWorkerScheduler", %class.scoped_refptr.216, %class.scoped_refptr.216, %class.scoped_refptr.216, %"class.std::__1::map", i32, %"class.blink::scheduler::WorkerThreadScheduler"*, i8, i32, %"class.base::WeakPtrFactory.225" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.204", %"class.base::WeakPtrFactory" }
%"class.WTF::HashMap.204" = type { %"class.WTF::HashTable.205" }
%"class.WTF::HashTable.205" = type <{ %"struct.WTF::KeyValuePair.208"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.208" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.209 }
%class.scoped_refptr.209 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.210", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.210" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.211" }
%"struct.std::__1::atomic.211" = type { %"struct.std::__1::__atomic_base.212" }
%"struct.std::__1::__atomic_base.212" = type { %"struct.std::__1::__atomic_base.213" }
%"struct.std::__1::__atomic_base.213" = type { %"struct.std::__1::__cxx_atomic_impl.214" }
%"struct.std::__1::__cxx_atomic_impl.214" = type { %"struct.std::__1::__cxx_atomic_base_impl.215" }
%"struct.std::__1::__cxx_atomic_base_impl.215" = type { i8 }
%class.scoped_refptr.216 = type { %"class.blink::scheduler::NonMainThreadTaskQueue"* }
%"class.blink::scheduler::NonMainThreadTaskQueue" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.217", %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::scheduler::WorkerThreadScheduler" = type opaque
%"class.base::WeakPtrFactory.225" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Platform::NestedMessageLoopRunner" = type { i32 (...)** }
%"class.blink::CrossThreadPersistent.229" = type { %"class.blink::PersistentBase.230" }
%"class.blink::PersistentBase.230" = type { %"class.blink::ConsoleMessageStorage"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::CrossThreadPersistent.231" = type { %"class.blink::PersistentBase.232" }
%"class.blink::PersistentBase.232" = type { %"class.blink::WorkerOrWorkletGlobalScope"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerOrWorkletGlobalScope" = type opaque
%"class.blink::CrossThreadPersistent.233" = type { %"class.blink::PersistentBase.234" }
%"class.blink::PersistentBase.234" = type { %"class.blink::WorkerInspectorController"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerInspectorController" = type opaque
%class.scoped_refptr.235 = type { %"class.blink::WorkerThread::RefCountedWaitableEvent"* }
%"class.blink::WorkerThread::RefCountedWaitableEvent" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.236 }
%class.scoped_refptr.236 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::HashSet.237" = type { %"class.WTF::HashTable.238" }
%"class.WTF::HashTable.238" = type <{ %"class.blink::WorkerThread"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.241" = type { %"class.WTF::HashTable.242" }
%"class.WTF::HashTable.242" = type <{ %"class.std::__1::unique_ptr.245"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.245" = type opaque
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.249, i8, [7 x i8] }>
%class.scoped_refptr.249 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.250", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.250" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.251" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.255 }
%class.scoped_refptr.255 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.256" }
%"class.blink::PersistentBase.256" = type { %"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.257" = type { %"class.std::__1::__compressed_pair.258" }
%"class.std::__1::__compressed_pair.258" = type { %"struct.std::__1::__compressed_pair_elem.259" }
%"struct.std::__1::__compressed_pair_elem.259" = type { %"class.blink::DedicatedWorkerObjectProxy"* }
%"class.blink::DedicatedWorkerObjectProxy" = type { %"class.blink::ThreadedObjectProxyBase", %"class.util::TokenType", %"class.blink::CrossThreadWeakPersistent" }
%"class.blink::ThreadedObjectProxyBase" = type { %"class.blink::WorkerReportingProxy", %"class.blink::CrossThreadPersistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.blink::CrossThreadWeakPersistent" = type { %"class.blink::PersistentBase.260" }
%"class.blink::PersistentBase.260" = type { %"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::CrossThreadPersistentNodePtr.261" }
%"class.blink::CrossThreadPersistentNodePtr.261" = type { %"struct.std::__1::atomic" }
%"class.blink::WeakMember.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::DedicatedWorker"* }
%"class.WTF::Vector.326" = type { %"class.WTF::VectorBuffer.327" }
%"class.WTF::VectorBuffer.327" = type { %"class.WTF::VectorBufferBase.328" }
%"class.WTF::VectorBufferBase.328" = type { %"struct.blink::BlinkTransferableMessage"*, i32, i32 }
%"struct.blink::BlinkTransferableMessage" = type <{ %"struct.blink::BlinkCloneableMessage", %"class.WTF::Vector.404", %"class.mojo::InlinedStructPtr", i8, [7 x i8] }>
%"struct.blink::BlinkCloneableMessage" = type { %class.scoped_refptr.329, %class.scoped_refptr.309, %"struct.v8_inspector::V8StackTraceId", %"class.absl::optional.399" }
%class.scoped_refptr.329 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted", [4 x i8], %"class.std::__1::unique_ptr.331", i64, %"class.WTF::Vector.335", %"class.WTF::Vector.340", %"class.WTF::Vector.346", %"class.WTF::Vector.364", %class.scoped_refptr.375, %"class.WTF::HashMap.377", %"class.WTF::Vector.382", %"class.WTF::Vector.335", %"class.WTF::Vector.388", %"class.WTF::HashMap.394", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.330" }
%"class.base::RefCountedThreadSafe.330" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { i8* }
%"class.WTF::Vector.340" = type { %"class.WTF::VectorBuffer.341" }
%"class.WTF::VectorBuffer.341" = type { %"class.WTF::VectorBufferBase.342", [8 x i8] }
%"class.WTF::VectorBufferBase.342" = type { %class.scoped_refptr.343*, i32, i32 }
%class.scoped_refptr.343 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.346" = type { %"class.WTF::VectorBuffer.347" }
%"class.WTF::VectorBuffer.347" = type { %"class.WTF::VectorBufferBase.348" }
%"class.WTF::VectorBufferBase.348" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.350", %"class.std::__1::unique_ptr.356" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.349 }
%class.scoped_refptr.349 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.350" = type { %"class.std::__1::__compressed_pair.351" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.352" }
%"struct.std::__1::__compressed_pair_elem.352" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.356" = type { %"class.std::__1::__compressed_pair.357" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.358" }
%"struct.std::__1::__compressed_pair_elem.358" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.364" = type { %"class.WTF::VectorBuffer.365" }
%"class.WTF::VectorBuffer.365" = type { %"class.WTF::VectorBufferBase.366" }
%"class.WTF::VectorBufferBase.366" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.367", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.367" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr.375 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.309 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::String" = type { %class.scoped_refptr.277 }
%class.scoped_refptr.277 = type { %"class.WTF::StringImpl"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.376 }
%union.anon.376 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.WTF::HashMap.377" = type { %"class.WTF::HashTable.378" }
%"class.WTF::HashTable.378" = type <{ %"struct.WTF::KeyValuePair.381"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.381" = type opaque
%"class.WTF::Vector.382" = type { %"class.WTF::VectorBuffer.383" }
%"class.WTF::VectorBuffer.383" = type { %"class.WTF::VectorBufferBase.384" }
%"class.WTF::VectorBufferBase.384" = type { %"class.mojo::ScopedHandleBase.385"*, i32, i32 }
%"class.mojo::ScopedHandleBase.385" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.335" = type { %"class.WTF::VectorBuffer.336" }
%"class.WTF::VectorBuffer.336" = type { %"class.WTF::VectorBufferBase.337", [16 x i8] }
%"class.WTF::VectorBufferBase.337" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.388" = type { %"class.WTF::VectorBuffer.389" }
%"class.WTF::VectorBuffer.389" = type { %"class.WTF::VectorBufferBase.390" }
%"class.WTF::VectorBufferBase.390" = type { %"class.mojo::PendingRemote.391"*, i32, i32 }
%"class.mojo::PendingRemote.391" = type opaque
%"class.WTF::HashMap.394" = type { %"class.WTF::HashTable.395" }
%"class.WTF::HashTable.395" = type <{ %"struct.WTF::KeyValuePair.398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.398" = type { i8**, %"class.std::__1::unique_ptr.1083" }
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%class.scoped_refptr.309 = type { %"class.blink::SecurityOrigin"* }
%"struct.v8_inspector::V8StackTraceId" = type <{ i64, %"struct.std::__1::pair.324", i8, [7 x i8] }>
%"struct.std::__1::pair.324" = type { i64, i64 }
%"class.absl::optional.399" = type { %"class.absl::optional_internal::optional_data.400" }
%"class.absl::optional_internal::optional_data.400" = type { %"class.absl::optional_internal::optional_data_base.401" }
%"class.absl::optional_internal::optional_data_base.401" = type { %"class.absl::optional_internal::optional_data_dtor_base.402" }
%"class.absl::optional_internal::optional_data_dtor_base.402" = type { i8, %union.anon.403 }
%union.anon.403 = type { %"class.base::UnguessableToken" }
%"class.WTF::Vector.404" = type { %"class.WTF::VectorBuffer.405" }
%"class.WTF::VectorBuffer.405" = type { %"class.WTF::VectorBufferBase.406" }
%"class.WTF::VectorBufferBase.406" = type { %"class.blink::MessagePortChannel"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::UserActivationSnapshot", i32 }
%"class.blink::mojom::blink::UserActivationSnapshot" = type { i8, i8 }
%"class.mojo::PendingRemote.325" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.463", i32, i8, [3 x i8], %"class.blink::HeapVector.465", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.473", %"class.blink::Member.475", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.484", %"class.blink::Member.490", %"class.blink::Member.492", i8, [7 x i8] }>
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.418" }
%"class.WTF::HashMap.418" = type { %"class.WTF::HashTable.419" }
%"class.WTF::HashTable.419" = type <{ %"struct.WTF::KeyValuePair.421"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.421" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.422" }
%"class.blink::Supplementable.422" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.423" }
%"class.blink::HeapHashMap.423" = type { %"class.WTF::HashMap.426" }
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.429" = type { i8*, %"class.blink::Member.1093" }
%"class.blink::Member.1093" = type { %"class.blink::MemberBase.1094" }
%"class.blink::MemberBase.1094" = type { %"class.blink::Supplement.1095"* }
%"class.blink::Supplement.1095" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1096" }
%"class.blink::Member.1096" = type { %"class.blink::MemberBase.1097" }
%"class.blink::MemberBase.1097" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.375, %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.430", %"class.std::__1::unique_ptr.457", %"class.std::__1::unique_ptr.457", %"class.blink::Member", i32, [4 x i8], %"class.WTF::HashSet.310", i32, i32 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map.433", %"class.std::__1::map.444", %"class.std::__1::map.453"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map.433" = type { %"class.std::__1::__tree.434" }
%"class.std::__1::__tree.434" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.435", %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.444" = type { %"class.std::__1::__tree.445" }
%"class.std::__1::__tree.445" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.446", %"class.std::__1::__compressed_pair.450" }
%"class.std::__1::__compressed_pair.446" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.450" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.453" = type opaque
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.310" = type { %"class.WTF::HashTable.311" }
%"class.WTF::HashTable.311" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.465" = type { %"class.WTF::Vector.468" }
%"class.WTF::Vector.468" = type { %"class.WTF::VectorBuffer.469" }
%"class.WTF::VectorBuffer.469" = type { %"class.WTF::VectorBufferBase.470" }
%"class.WTF::VectorBufferBase.470" = type { %"class.blink::Member.471"*, i32, i32 }
%"class.blink::Member.471" = type opaque
%"class.blink::Member.473" = type { %"class.blink::MemberBase.474" }
%"class.blink::MemberBase.474" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.475" = type { %"class.blink::MemberBase.476" }
%"class.blink::MemberBase.476" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.477", i32, i32 }
%"class.blink::HeapHashMap.477" = type { %"class.WTF::HashMap.480" }
%"class.WTF::HashMap.480" = type { %"class.WTF::HashTable.481" }
%"class.WTF::HashTable.481" = type <{ %"struct.WTF::KeyValuePair.483"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.483" = type opaque
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.490" = type { %"class.blink::MemberBase.491" }
%"class.blink::MemberBase.491" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.492" = type { %"class.blink::MemberBase.493" }
%"class.blink::MemberBase.493" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.475", i8, [7 x i8], %"class.WTF::Vector.496", %"class.blink::HeapVector.537", i8, [7 x i8], %"class.WTF::HashSet.310", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %"class.mojo::StructPtr"*, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.499" }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.502", %"class.WTF::HashMap.509", %"class.WTF::HashMap.514", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.519", i8, %"class.WTF::Vector.520", i32, %"class.mojo::StructPtr.525", %"class.WTF::Vector.520" }
%"class.mojo::StructPtr.502" = type { %"class.std::__1::unique_ptr.503" }
%"class.std::__1::unique_ptr.503" = type { %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.505" }
%"struct.std::__1::__compressed_pair_elem.505" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.509" = type { %"class.WTF::HashTable.510" }
%"class.WTF::HashTable.510" = type <{ %"struct.WTF::KeyValuePair.513"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.513" = type opaque
%"class.WTF::HashMap.514" = type { %"class.WTF::HashTable.515" }
%"class.WTF::HashTable.515" = type <{ %"struct.WTF::KeyValuePair.518"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.518" = type opaque
%"class.mojo::InlinedStructPtr.519" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.525" = type { %"class.std::__1::unique_ptr.526" }
%"class.std::__1::unique_ptr.526" = type { %"class.std::__1::__compressed_pair.527" }
%"class.std::__1::__compressed_pair.527" = type { %"struct.std::__1::__compressed_pair_elem.528" }
%"struct.std::__1::__compressed_pair_elem.528" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.520", i8, i8, [6 x i8] }>
%"class.WTF::Vector.520" = type { %"class.WTF::VectorBuffer.521" }
%"class.WTF::VectorBuffer.521" = type { %"class.WTF::VectorBufferBase.522" }
%"class.WTF::VectorBufferBase.522" = type { %"class.WTF::String"*, i32, i32 }
%"class.blink::HeapVector.537" = type { %"class.WTF::Vector.540" }
%"class.WTF::Vector.540" = type { %"class.WTF::VectorBuffer.541" }
%"class.WTF::VectorBuffer.541" = type { %"class.WTF::VectorBufferBase.542" }
%"class.WTF::VectorBufferBase.542" = type { %"class.blink::Member.543"*, i32, i32 }
%"class.blink::Member.543" = type opaque
%"class.blink::DedicatedWorker" = type <{ %"class.blink::AbstractWorker.base", [4 x i8], %"class.blink::ActiveScriptWrappable", %"class.blink::WebDedicatedWorker", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.util::TokenType", %"class.blink::KURL", %"class.blink::Member.301", %"class.blink::Member.305", %"class.blink::Member.314", %"class.blink::Member.316", %"class.std::__1::unique_ptr.318", %"struct.v8_inspector::V8StackTraceId", %"class.mojo::PendingRemote", %"class.mojo::PendingRemote.325", i8, [7 x i8] }>
%"class.blink::AbstractWorker.base" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ExecutionContextLifecycleStateObserver.base" }>
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.288" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.273" }
%"class.WTF::Vector.273" = type { %"class.WTF::VectorBuffer.274" }
%"class.WTF::VectorBuffer.274" = type { %"class.WTF::VectorBufferBase.275", [32 x i8] }
%"class.WTF::VectorBufferBase.275" = type { %"struct.std::__1::pair.276"*, i32, i32 }
%"struct.std::__1::pair.276" = type { %"class.WTF::AtomicString", %"class.blink::Member.283" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::HeapVector.285"* }
%"class.blink::HeapVector.285" = type opaque
%"class.std::__1::unique_ptr.288" = type { %"class.std::__1::__compressed_pair.289" }
%"class.std::__1::__compressed_pair.289" = type { %"struct.std::__1::__compressed_pair_elem.290" }
%"struct.std::__1::__compressed_pair_elem.290" = type { %"class.WTF::Vector.291"* }
%"class.WTF::Vector.291" = type opaque
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::WebDedicatedWorker" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.295" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::KURL"* }
%"class.blink::Member.301" = type { %"class.blink::MemberBase.302" }
%"class.blink::MemberBase.302" = type { %"class.blink::WorkerOptions"* }
%"class.blink::WorkerOptions" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.blink::Member.305" = type { %"class.blink::MemberBase.306" }
%"class.blink::MemberBase.306" = type { %"class.blink::FetchClientSettingsObjectSnapshot"* }
%"class.blink::FetchClientSettingsObjectSnapshot" = type { %"class.blink::FetchClientSettingsObject", %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.309, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.310" }
%"class.blink::FetchClientSettingsObject" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::DedicatedWorkerMessagingProxy"* }
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::WorkerClassicScriptLoader"* }
%"class.blink::WorkerClassicScriptLoader" = type opaque
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"class.blink::WebDedicatedWorkerHostFactoryClient"* }
%"class.blink::WebDedicatedWorkerHostFactoryClient" = type { i32 (...)** }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.blink::GlobalScopeCreationParams" = type <{ %"class.blink::KURL", i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", %"struct.blink::UserAgentMetadata", %class.scoped_refptr.555, %"class.WTF::Vector.496", i32, [4 x i8], %"class.std::__1::unique_ptr.557", %class.scoped_refptr.309, i8, [3 x i8], i32, %"class.blink::CrossThreadPersistent.563", %"class.std::__1::unique_ptr.575", %"class.absl::optional.581", %"class.base::UnguessableToken", %"class.std::__1::unique_ptr.586", i32, [4 x i8], %"class.blink::CrossThreadPersistent.604", %"class.mojo::PendingRemote", %"struct.blink::BeginFrameProviderParams", %"class.std::__1::unique_ptr.430", %"class.base::UnguessableToken", i64, %"class.absl::optional.613", i8, i8, [6 x i8] }>
%"struct.blink::UserAgentMetadata" = type <{ %"class.std::__1::vector.548", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::vector.548" = type { %"class.std::__1::__vector_base.549" }
%"class.std::__1::__vector_base.549" = type { %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"*, %"class.std::__1::__compressed_pair.550" }
%"struct.blink::UserAgentBrandVersion" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.550" = type { %"struct.std::__1::__compressed_pair_elem.551" }
%"struct.std::__1::__compressed_pair_elem.551" = type { %"struct.blink::UserAgentBrandVersion"* }
%class.scoped_refptr.555 = type { %"class.blink::WebWorkerFetchContext"* }
%"class.blink::WebWorkerFetchContext" = type <{ i32 (...)**, %"class.base::RefCounted.556", [4 x i8] }>
%"class.base::RefCounted.556" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.557" = type { %"class.std::__1::__compressed_pair.558" }
%"class.std::__1::__compressed_pair.558" = type { %"struct.std::__1::__compressed_pair_elem.559" }
%"struct.std::__1::__compressed_pair_elem.559" = type { %"class.WTF::Vector.520"* }
%"class.blink::CrossThreadPersistent.563" = type { %"class.blink::PersistentBase.564" }
%"class.blink::PersistentBase.564" = type { %"class.blink::WorkerClients"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkerClients" = type { %"class.blink::Supplementable.567" }
%"class.blink::Supplementable.567" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.568" }
%"class.blink::HeapHashMap.568" = type { %"class.WTF::HashMap.571" }
%"class.WTF::HashMap.571" = type { %"class.WTF::HashTable.572" }
%"class.WTF::HashTable.572" = type <{ %"struct.WTF::KeyValuePair.574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.574" = type { i8*, %"class.blink::Member.1089" }
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1091" }
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::WorkerClients"* }
%"class.std::__1::unique_ptr.575" = type { %"class.std::__1::__compressed_pair.576" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"class.blink::WebContentSettingsClient"* }
%"class.blink::WebContentSettingsClient" = type { i32 (...)** }
%"class.absl::optional.581" = type { %"class.absl::optional_internal::optional_data.582" }
%"class.absl::optional_internal::optional_data.582" = type { %"class.absl::optional_internal::optional_data_base.583" }
%"class.absl::optional_internal::optional_data_base.583" = type { %"class.absl::optional_internal::optional_data_dtor_base.584" }
%"class.absl::optional_internal::optional_data_dtor_base.584" = type { i8, %union.anon.585 }
%union.anon.585 = type { i32 }
%"class.std::__1::unique_ptr.586" = type { %"class.std::__1::__compressed_pair.587" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"class.blink::WorkerSettings"* }
%"class.blink::WorkerSettings" = type { i8, i8, i8, i8, %"class.blink::GenericFontFamilySettings" }
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.WTF::HashMap.589", %"class.std::__1::unique_ptr.594" }
%"class.WTF::HashMap.589" = type { %"class.WTF::HashTable.590" }
%"class.WTF::HashTable.590" = type <{ %"struct.WTF::KeyValuePair.593"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.593" = type { i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.594" = type { %"class.std::__1::__compressed_pair.595" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.WTF::Vector.597"* }
%"class.WTF::Vector.597" = type { %"class.WTF::VectorBuffer.1098" }
%"class.WTF::VectorBuffer.1098" = type { %"class.WTF::VectorBufferBase.1099" }
%"class.WTF::VectorBufferBase.1099" = type { %"struct.std::__1::pair.1100"*, i32, i32 }
%"struct.std::__1::pair.1100" = type { i32, %"class.WTF::String" }
%"class.blink::CrossThreadPersistent.604" = type { %"class.blink::PersistentBase.605" }
%"class.blink::PersistentBase.605" = type { %"class.blink::WorkletModuleResponsesMap"*, %"class.blink::CrossThreadPersistentNodePtr" }
%"class.blink::WorkletModuleResponsesMap" = type { i8, [7 x i8], %"class.WTF::HashMap.608", %"class.WTF::Mutex" }
%"class.WTF::HashMap.608" = type { %"class.WTF::HashTable.609" }
%"class.WTF::HashTable.609" = type <{ %"struct.WTF::KeyValuePair.612"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.612" = type opaque
%"struct.blink::BeginFrameProviderParams" = type { %"class.viz::FrameSinkId", %"class.viz::FrameSinkId" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.absl::optional.613" = type { %"class.absl::optional_internal::optional_data.614" }
%"class.absl::optional_internal::optional_data.614" = type { %"class.absl::optional_internal::optional_data_base.615" }
%"class.absl::optional_internal::optional_data_base.615" = type { %"class.absl::optional_internal::optional_data_dtor_base.616" }
%"class.absl::optional_internal::optional_data_dtor_base.616" = type { i8, [7 x i8], %union.anon.617 }
%union.anon.617 = type { %"class.blink::MultiToken" }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"struct.blink::WorkerMainScriptLoadParameters" = type { i32, %"class.mojo::StructPtr.624", %"class.mojo::ScopedHandleBase.827", %"class.mojo::StructPtr.828", %"class.std::__1::vector.837", %"class.std::__1::vector.844" }
%"class.mojo::StructPtr.624" = type { %"class.std::__1::unique_ptr.625" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.network::mojom::URLResponseHead"* }
%"class.network::mojom::URLResponseHead" = type <{ %"class.base::Time", %"class.base::Time", %class.scoped_refptr.629, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], i64, i64, i64, i8, [7 x i8], i64, %class.GURL, %"struct.net::LoadTimingInfo", %"class.mojo::StructPtr.644", i8, i8, i8, i8, i32, %"class.std::__1::basic_string", %"class.net::IPEndPoint", i8, i8, [2 x i8], %"class.net::ProxyServer", i8, [3 x i8], i32, %"class.std::__1::vector.660", i32, [4 x i8], i64, %"class.std::__1::basic_string", i32, [4 x i8], %"class.absl::optional.666", %"class.std::__1::vector.673", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [5 x i8], %"class.absl::optional.708", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.mojo::StructPtr.713", %"class.absl::optional.813", %"class.absl::optional.399", %"class.std::__1::vector.673", %class.GURL, i8, [7 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.628" }
%"class.base::time_internal::TimeBase.628" = type { i64 }
%class.scoped_refptr.629 = type { %"class.net::HttpResponseHeaders"* }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.630", %"class.std::__1::vector.631", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.630" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.631" = type { %"class.std::__1::__vector_base.632" }
%"class.std::__1::__vector_base.632" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.633" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.634" }
%"struct.std::__1::__compressed_pair_elem.634" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"struct.net::LoadTimingInfo" = type { i8, i32, %"class.base::Time", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"struct.net::LoadTimingInfo::ConnectTiming", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"struct.net::LoadTimingInfo::ConnectTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.mojo::StructPtr.644" = type { %"class.std::__1::unique_ptr.645" }
%"class.std::__1::unique_ptr.645" = type { %"class.std::__1::__compressed_pair.646" }
%"class.std::__1::__compressed_pair.646" = type { %"struct.std::__1::__compressed_pair_elem.647" }
%"struct.std::__1::__compressed_pair_elem.647" = type { %"class.network::mojom::HttpRawRequestResponseInfo"* }
%"class.network::mojom::HttpRawRequestResponseInfo" = type { i32, %"class.std::__1::basic_string", %"class.std::__1::vector.648", %"class.std::__1::vector.648", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.648" = type { %"class.std::__1::__vector_base.649" }
%"class.std::__1::__vector_base.649" = type { %"class.mojo::InlinedStructPtr.650"*, %"class.mojo::InlinedStructPtr.650"*, %"class.std::__1::__compressed_pair.652" }
%"class.mojo::InlinedStructPtr.650" = type <{ %"class.network::mojom::HttpRawHeaderPair", i32, [4 x i8] }>
%"class.network::mojom::HttpRawHeaderPair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.mojo::InlinedStructPtr.650"* }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::vector.660" = type { %"class.std::__1::__vector_base.661" }
%"class.std::__1::__vector_base.661" = type { %class.GURL*, %class.GURL*, %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"struct.std::__1::__compressed_pair_elem.640" = type { %class.GURL* }
%"class.absl::optional.666" = type { %"class.absl::optional_internal::optional_data.667" }
%"class.absl::optional_internal::optional_data.667" = type { %"class.absl::optional_internal::optional_data_base.668" }
%"class.absl::optional_internal::optional_data_base.668" = type { %"class.absl::optional_internal::optional_data_dtor_base.669" }
%"class.absl::optional_internal::optional_data_dtor_base.669" = type { i8, [7 x i8], %union.anon.670 }
%union.anon.670 = type { %"class.net::SSLInfo" }
%"class.net::SSLInfo" = type <{ %class.scoped_refptr.671, %class.scoped_refptr.671, i32, i16, i16, i32, i8, i8, i8, i8, i32, [4 x i8], %"class.std::__1::vector.691", %"class.std::__1::basic_string", %"class.std::__1::vector.699", i32, %"struct.net::OCSPVerifyResult", i8, [3 x i8] }>
%class.scoped_refptr.671 = type { %"class.net::X509Certificate"* }
%"class.net::X509Certificate" = type { %"class.base::RefCountedThreadSafe.672", %"struct.net::CertPrincipal", %"struct.net::CertPrincipal", %"class.base::Time", %"class.base::Time", %"class.std::__1::basic_string", %"class.std::__1::unique_ptr.680", %"class.std::__1::vector.684" }
%"class.base::RefCountedThreadSafe.672" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::CertPrincipal" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.673", %"class.std::__1::vector.673", %"class.std::__1::vector.673", %"class.std::__1::vector.673" }
%"class.std::__1::unique_ptr.680" = type { %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %struct.crypto_buffer_st* }
%struct.crypto_buffer_st = type opaque
%"class.std::__1::vector.684" = type { %"class.std::__1::__vector_base.685" }
%"class.std::__1::__vector_base.685" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.686" }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.687" }
%"struct.std::__1::__compressed_pair_elem.687" = type { %"class.std::__1::unique_ptr.680"* }
%"class.std::__1::vector.691" = type { %"class.std::__1::__vector_base.692" }
%"class.std::__1::__vector_base.692" = type { %"class.net::HashValue"*, %"class.net::HashValue"*, %"class.std::__1::__compressed_pair.694" }
%"class.net::HashValue" = type { i32, %union.anon.693 }
%union.anon.693 = type { %"struct.net::SHA256HashValue" }
%"struct.net::SHA256HashValue" = type { [32 x i8] }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.net::HashValue"* }
%"class.std::__1::vector.699" = type { %"class.std::__1::__vector_base.700" }
%"class.std::__1::__vector_base.700" = type { %"struct.net::SignedCertificateTimestampAndStatus"*, %"struct.net::SignedCertificateTimestampAndStatus"*, %"class.std::__1::__compressed_pair.703" }
%"struct.net::SignedCertificateTimestampAndStatus" = type <{ %class.scoped_refptr.701, i32, [4 x i8] }>
%class.scoped_refptr.701 = type { %"struct.net::ct::SignedCertificateTimestamp"* }
%"struct.net::ct::SignedCertificateTimestamp" = type { %"class.base::RefCountedThreadSafe.702", i32, %"class.std::__1::basic_string", %"class.base::Time", %"class.std::__1::basic_string", %"struct.net::ct::DigitallySigned", i32, %"class.std::__1::basic_string" }
%"class.base::RefCountedThreadSafe.702" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.net::ct::DigitallySigned" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.703" = type { %"struct.std::__1::__compressed_pair_elem.704" }
%"struct.std::__1::__compressed_pair_elem.704" = type { %"struct.net::SignedCertificateTimestampAndStatus"* }
%"struct.net::OCSPVerifyResult" = type { i32, i32 }
%"class.absl::optional.708" = type { %"class.absl::optional_internal::optional_data.709" }
%"class.absl::optional_internal::optional_data.709" = type { %"class.absl::optional_internal::optional_data_base.710" }
%"class.absl::optional_internal::optional_data_base.710" = type { %"class.absl::optional_internal::optional_data_dtor_base.711" }
%"class.absl::optional_internal::optional_data_dtor_base.711" = type { i8, %union.anon.712 }
%union.anon.712 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::StructPtr.713" = type { %"class.std::__1::unique_ptr.714" }
%"class.std::__1::unique_ptr.714" = type { %"class.std::__1::__compressed_pair.715" }
%"class.std::__1::__compressed_pair.715" = type { %"struct.std::__1::__compressed_pair_elem.716" }
%"struct.std::__1::__compressed_pair_elem.716" = type { %"class.network::mojom::ParsedHeaders"* }
%"class.network::mojom::ParsedHeaders" = type <{ %"class.std::__1::vector.717", %"class.mojo::StructPtr.765", %"struct.network::CrossOriginEmbedderPolicy", %"struct.network::CrossOriginOpenerPolicy", i8, [7 x i8], %"class.absl::optional.777", %"class.base::TimeDelta", %"class.absl::optional.777", i32, [4 x i8], %"class.std::__1::vector.789", %"class.mojo::StructPtr.803", i8, [7 x i8] }>
%"class.std::__1::vector.717" = type { %"class.std::__1::__vector_base.718" }
%"class.std::__1::__vector_base.718" = type { %"class.mojo::StructPtr.719"*, %"class.mojo::StructPtr.719"*, %"class.std::__1::__compressed_pair.760" }
%"class.mojo::StructPtr.719" = type { %"class.std::__1::unique_ptr.720" }
%"class.std::__1::unique_ptr.720" = type { %"class.std::__1::__compressed_pair.721" }
%"class.std::__1::__compressed_pair.721" = type { %"struct.std::__1::__compressed_pair_elem.722" }
%"struct.std::__1::__compressed_pair_elem.722" = type { %"class.network::mojom::ContentSecurityPolicy"* }
%"class.network::mojom::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.723", %"class.base::flat_map", %"class.base::flat_map.738", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr.748", i8, %"class.std::__1::vector.673", i32, %"class.mojo::StructPtr.750", %"class.std::__1::vector.673" }
%"class.mojo::StructPtr.723" = type { %"class.std::__1::unique_ptr.724" }
%"class.std::__1::unique_ptr.724" = type { %"class.std::__1::__compressed_pair.725" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.726" }
%"struct.std::__1::__compressed_pair_elem.726" = type { %"class.network::mojom::CSPSource"* }
%"class.network::mojom::CSPSource" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, [4 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.730" }
%"class.std::__1::vector.730" = type { %"class.std::__1::__vector_base.731" }
%"class.std::__1::__vector_base.731" = type { %"struct.std::__1::pair.732"*, %"struct.std::__1::pair.732"*, %"class.std::__1::__compressed_pair.733" }
%"struct.std::__1::pair.732" = type opaque
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.734" }
%"struct.std::__1::__compressed_pair_elem.734" = type { %"struct.std::__1::pair.732"* }
%"class.base::flat_map.738" = type { %"class.base::internal::flat_tree.739" }
%"class.base::internal::flat_tree.739" = type { %"class.std::__1::vector.740" }
%"class.std::__1::vector.740" = type { %"class.std::__1::__vector_base.741" }
%"class.std::__1::__vector_base.741" = type { %"struct.std::__1::pair.742"*, %"struct.std::__1::pair.742"*, %"class.std::__1::__compressed_pair.743" }
%"struct.std::__1::pair.742" = type opaque
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"struct.std::__1::pair.742"* }
%"class.mojo::InlinedStructPtr.748" = type <{ %"class.network::mojom::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::ContentSecurityPolicyHeader" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.mojo::StructPtr.750" = type { %"class.std::__1::unique_ptr.751" }
%"class.std::__1::unique_ptr.751" = type { %"class.std::__1::__compressed_pair.752" }
%"class.std::__1::__compressed_pair.752" = type { %"struct.std::__1::__compressed_pair_elem.753" }
%"struct.std::__1::__compressed_pair_elem.753" = type { %"class.network::mojom::CSPTrustedTypes"* }
%"class.network::mojom::CSPTrustedTypes" = type <{ %"class.std::__1::vector.673", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.mojo::StructPtr.719"* }
%"class.mojo::StructPtr.765" = type { %"class.std::__1::unique_ptr.766" }
%"class.std::__1::unique_ptr.766" = type { %"class.std::__1::__compressed_pair.767" }
%"class.std::__1::__compressed_pair.767" = type { %"struct.std::__1::__compressed_pair_elem.768" }
%"struct.std::__1::__compressed_pair_elem.768" = type { %"class.network::mojom::AllowCSPFromHeaderValue"* }
%"class.network::mojom::AllowCSPFromHeaderValue" = type { i32, %"union.network::mojom::AllowCSPFromHeaderValue::Union_" }
%"union.network::mojom::AllowCSPFromHeaderValue::Union_" = type { %"class.url::Origin"* }
%"struct.network::CrossOriginEmbedderPolicy" = type { i32, %"class.absl::optional.772", i32, %"class.absl::optional.772" }
%"class.absl::optional.772" = type { %"class.absl::optional_internal::optional_data.773" }
%"class.absl::optional_internal::optional_data.773" = type { %"class.absl::optional_internal::optional_data_base.774" }
%"class.absl::optional_internal::optional_data_base.774" = type { %"class.absl::optional_internal::optional_data_dtor_base.775" }
%"class.absl::optional_internal::optional_data_dtor_base.775" = type { i8, %union.anon.776 }
%union.anon.776 = type { %"class.std::__1::basic_string" }
%"struct.network::CrossOriginOpenerPolicy" = type { i32, %"class.absl::optional.772", i32, %"class.absl::optional.772" }
%"class.absl::optional.777" = type { %"class.absl::optional_internal::optional_data.778" }
%"class.absl::optional_internal::optional_data.778" = type { %"class.absl::optional_internal::optional_data_base.779" }
%"class.absl::optional_internal::optional_data_base.779" = type { %"class.absl::optional_internal::optional_data_dtor_base.780" }
%"class.absl::optional_internal::optional_data_dtor_base.780" = type { i8, %union.anon.781 }
%union.anon.781 = type { %"class.std::__1::vector.782" }
%"class.std::__1::vector.782" = type { %"class.std::__1::__vector_base.783" }
%"class.std::__1::__vector_base.783" = type { i32*, i32*, %"class.std::__1::__compressed_pair.784" }
%"class.std::__1::__compressed_pair.784" = type { %"struct.std::__1::__compressed_pair_elem.785" }
%"struct.std::__1::__compressed_pair_elem.785" = type { i32* }
%"class.std::__1::vector.789" = type { %"class.std::__1::__vector_base.790" }
%"class.std::__1::__vector_base.790" = type { %"class.mojo::StructPtr.791"*, %"class.mojo::StructPtr.791"*, %"class.std::__1::__compressed_pair.798" }
%"class.mojo::StructPtr.791" = type { %"class.std::__1::unique_ptr.792" }
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.network::mojom::LinkHeader"* }
%"class.network::mojom::LinkHeader" = type { %class.GURL, i32, i32, i32, %"class.absl::optional.772" }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.mojo::StructPtr.791"* }
%"class.mojo::StructPtr.803" = type { %"class.std::__1::unique_ptr.804" }
%"class.std::__1::unique_ptr.804" = type { %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { %"class.network::mojom::TimingAllowOrigin"* }
%"class.network::mojom::TimingAllowOrigin" = type { i32, %"union.network::mojom::TimingAllowOrigin::Union_" }
%"union.network::mojom::TimingAllowOrigin::Union_" = type { %"class.std::__1::vector.673"* }
%"class.absl::optional.813" = type { %"class.absl::optional_internal::optional_data.814" }
%"class.absl::optional_internal::optional_data.814" = type { %"class.absl::optional_internal::optional_data_base.815" }
%"class.absl::optional_internal::optional_data_base.815" = type { %"class.absl::optional_internal::optional_data_dtor_base.816" }
%"class.absl::optional_internal::optional_data_dtor_base.816" = type { i8, %union.anon.817 }
%union.anon.817 = type { %"struct.network::OriginPolicy" }
%"struct.network::OriginPolicy" = type { i32, %class.GURL, %"class.std::__1::unique_ptr.818" }
%"class.std::__1::unique_ptr.818" = type { %"class.std::__1::__compressed_pair.819" }
%"class.std::__1::__compressed_pair.819" = type { %"struct.std::__1::__compressed_pair_elem.820" }
%"struct.std::__1::__compressed_pair_elem.820" = type { %"struct.network::OriginPolicyContents"* }
%"struct.network::OriginPolicyContents" = type { %"class.std::__1::vector.673", %"class.absl::optional.772", %"class.std::__1::vector.673", %"class.std::__1::vector.673" }
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.std::__1::basic_string"* }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr.638" }
%"class.std::__1::unique_ptr.638" = type { %"class.std::__1::__compressed_pair.639" }
%"class.std::__1::__compressed_pair.639" = type { %"struct.std::__1::__compressed_pair_elem.640" }
%"class.mojo::ScopedHandleBase.827" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::StructPtr.828" = type { %"class.std::__1::unique_ptr.829" }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.network::mojom::URLLoaderClientEndpoints"* }
%"class.network::mojom::URLLoaderClientEndpoints" = type { %"class.mojo::PendingRemote.832", %"class.mojo::PendingReceiver" }
%"class.mojo::PendingRemote.832" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.833 }
%class.scoped_refptr.833 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.854", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.857, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.278", [4 x i8] }>
%"class.base::RefCountedThreadSafe.854" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.855 }
%class.scoped_refptr.855 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.856", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.856" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.857 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.std::__1::vector.837" = type { %"class.std::__1::__vector_base.838" }
%"class.std::__1::__vector_base.838" = type { %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"*, %"class.std::__1::__compressed_pair.839" }
%"struct.net::RedirectInfo" = type { i32, %"class.std::__1::basic_string", %class.GURL, %"class.net::SiteForCookies", %"class.std::__1::basic_string", i8, i8, i32 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"struct.net::RedirectInfo"* }
%"class.std::__1::vector.844" = type { %"class.std::__1::__vector_base.845" }
%"class.std::__1::__vector_base.845" = type { %"class.mojo::StructPtr.624"*, %"class.mojo::StructPtr.624"*, %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.mojo::StructPtr.624"* }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.absl::optional_internal::optional_data_dtor_base.862" = type { i8, %union.anon.863 }
%union.anon.863 = type { %"struct.blink::WorkerBackingThreadStartupData" }
%"struct.blink::WorkerBackingThreadStartupData" = type { i32, i32 }
%"class.absl::optional.859" = type { %"class.absl::optional_internal::optional_data.860" }
%"class.absl::optional_internal::optional_data.860" = type { %"class.absl::optional_internal::optional_data_base.861" }
%"class.absl::optional_internal::optional_data_base.861" = type { %"class.absl::optional_internal::optional_data_dtor_base.862" }
%"class.absl::optional.864" = type { %"class.absl::optional_internal::optional_data.865" }
%"class.absl::optional_internal::optional_data.865" = type { %"class.absl::optional_internal::optional_data_base.866" }
%"class.absl::optional_internal::optional_data_base.866" = type { %"class.absl::optional_internal::optional_data_dtor_base.867" }
%"class.absl::optional_internal::optional_data_dtor_base.867" = type { i8, %union.anon.868 }
%union.anon.868 = type { %"class.util::TokenType" }
%"class.blink::WorkerResourceTimingNotifierImpl" = type { %"class.blink::WorkerResourceTimingNotifier", %class.scoped_refptr.195, %"class.blink::Member", %"class.blink::CrossThreadWeakPersistent.873" }
%"class.blink::WorkerResourceTimingNotifier" = type { i32 (...)** }
%"class.blink::CrossThreadWeakPersistent.873" = type { %"class.blink::PersistentBase.874" }
%"class.blink::PersistentBase.874" = type { %"class.blink::ExecutionContext"*, %"class.blink::CrossThreadPersistentNodePtr.261" }
%"struct.blink::CrossThreadFetchClientSettingsObjectData" = type { %"class.blink::KURL", %"class.blink::KURL", %class.scoped_refptr.309, i32, %"class.WTF::String", i32, i32, i32, i32, %"class.WTF::HashSet.310" }
%"class.WTF::Vector.884" = type { %"class.WTF::VectorBuffer.885" }
%"class.WTF::VectorBuffer.885" = type { %"class.WTF::VectorBufferBase.886" }
%"class.WTF::VectorBufferBase.886" = type { i8*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::CrossThreadOnceFunction" = type { %"class.base::OnceCallback" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.blink::ThreadDebugger" = type { %"class.v8_inspector::V8InspectorClient", %"class.blink::V8PerIsolateData::Data", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.898", %"class.WTF::Vector.904", %"class.WTF::Vector.910", %"class.WTF::Vector.915" }
%"class.v8_inspector::V8InspectorClient" = type { i32 (...)** }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8_inspector::V8Inspector"* }
%"class.v8_inspector::V8Inspector" = type { i32 (...)** }
%"class.WTF::Vector.904" = type { %"class.WTF::VectorBuffer.905" }
%"class.WTF::VectorBuffer.905" = type { %"class.WTF::VectorBufferBase.906" }
%"class.WTF::VectorBufferBase.906" = type { %"class.std::__1::unique_ptr.907"*, i32, i32 }
%"class.std::__1::unique_ptr.907" = type opaque
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912" }
%"class.WTF::VectorBufferBase.912" = type { void (i8*)**, i32, i32 }
%"class.WTF::Vector.915" = type { %"class.WTF::VectorBuffer.916" }
%"class.WTF::VectorBuffer.916" = type { %"class.WTF::VectorBufferBase.917" }
%"class.WTF::VectorBufferBase.917" = type { i8**, i32, i32 }
%"class.blink::HeapVector.920" = type { %"class.WTF::Vector.923" }
%"class.WTF::Vector.923" = type { %"class.WTF::VectorBuffer.924" }
%"class.WTF::VectorBuffer.924" = type { %"class.WTF::VectorBufferBase.925" }
%"class.WTF::VectorBufferBase.925" = type { %"class.blink::Member.926"*, i32, i32 }
%"class.blink::Member.926" = type { %"class.blink::MemberBase.927" }
%"class.blink::MemberBase.927" = type { %"class.blink::MessagePort"* }
%"class.blink::MessagePort" = type { %"class.blink::EventTargetWithInlineData", %"class.mojo::MessageReceiver", %"class.blink::ActiveScriptWrappable.928", %"class.blink::ExecutionContextLifecycleObserver.base", %"class.std::__1::unique_ptr.929", i8, i8, %class.scoped_refptr.195, %"class.blink::MessagePortDescriptor" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.blink::ActiveScriptWrappable.928" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.mojo::Connector"* }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.857, %"class.std::__1::unique_ptr.932", %"class.absl::optional.942", %"struct.std::__1::atomic.176", i8, i8, i8, i8, i32, i32, %"class.absl::optional.950", %"class.std::__1::unique_ptr.955", i8, i64, %class.scoped_refptr.988, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.989", %"class.base::WeakPtrFactory.990" }
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.857, i8, %"class.mojo::ScopedHandleBase.935", %class.scoped_refptr.936, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.937", i8*, %"class.base::WeakPtrFactory.938" }
%"class.mojo::ScopedHandleBase.935" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.936 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.937" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.938" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.942" = type { %"class.absl::optional_internal::optional_data.943" }
%"class.absl::optional_internal::optional_data.943" = type { %"class.absl::optional_internal::optional_data_base.944" }
%"class.absl::optional_internal::optional_data_base.944" = type { %"class.absl::optional_internal::optional_data_dtor_base.945" }
%"class.absl::optional_internal::optional_data_dtor_base.945" = type { i8, %union.anon.946 }
%union.anon.946 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.947", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.947" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.absl::optional.950" = type { %"class.absl::optional_internal::optional_data.951" }
%"class.absl::optional_internal::optional_data.951" = type { %"class.absl::optional_internal::optional_data_base.952" }
%"class.absl::optional_internal::optional_data_base.952" = type { %"class.absl::optional_internal::optional_data_dtor_base.953" }
%"class.absl::optional_internal::optional_data_dtor_base.953" = type { i8, %union.anon.954 }
%union.anon.954 = type { %"class.base::Lock" }
%"class.std::__1::unique_ptr.955" = type { %"class.std::__1::__compressed_pair.956" }
%"class.std::__1::__compressed_pair.956" = type { %"struct.std::__1::__compressed_pair_elem.957" }
%"struct.std::__1::__compressed_pair_elem.957" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.958", i8, i64, %class.scoped_refptr.959, %class.scoped_refptr.984 }
%"class.base::RepeatingCallback.958" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.959 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.960", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.962", %"class.std::__1::map.973", i8, [7 x i8] }>
%"class.base::RefCounted.960" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.961 }
%class.scoped_refptr.961 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.962" = type { %"class.std::__1::__tree.963" }
%"class.std::__1::__tree.963" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.964", %"class.std::__1::__compressed_pair.968" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.973" = type { %"class.std::__1::__tree.974" }
%"class.std::__1::__tree.974" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.975", %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%class.scoped_refptr.984 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.988 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.989" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.990" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.blink::MessageEvent" = type <{ %"class.blink::Event", i32, [4 x i8], %"class.blink::WorldSafeV8Reference", %"class.blink::Member.1025", %"class.WTF::String", %"class.blink::Member.1046", %"class.blink::Member.1052", i8, [7 x i8], %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.1000", %"class.blink::Member.1054", i8, [7 x i8], %"class.WTF::Vector.404", %"class.blink::Member.1056", i8, [7 x i8], i64, i8, [7 x i8] }>
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.1000", %"class.blink::Member.1000", %"class.blink::Member.1002", %"class.blink::Member.1004", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.995" }
%"class.absl::optional.995" = type { %"class.absl::optional_internal::optional_data.996" }
%"class.absl::optional_internal::optional_data.996" = type { %"class.absl::optional_internal::optional_data_base.997" }
%"class.absl::optional_internal::optional_data_base.997" = type { %"class.absl::optional_internal::optional_data_dtor_base.998" }
%"class.absl::optional_internal::optional_data_dtor_base.998" = type { i8, %union.anon.999 }
%union.anon.999 = type { i64 }
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::Event"* }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference.1006", %class.scoped_refptr.1009 }
%"class.blink::TraceWrapperV8Reference.1006" = type { %"class.v8::TracedReference.1007" }
%"class.v8::TracedReference.1007" = type { %"class.v8::BasicTracedReference.1008" }
%"class.v8::BasicTracedReference.1008" = type { %"class.v8::TracedReferenceBase" }
%class.scoped_refptr.1009 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1010", i32, i32, %"class.blink::Persistent.1012" }
%"class.WTF::RefCounted.1010" = type { %"class.base::RefCounted.1011" }
%"class.base::RefCounted.1011" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1012" = type { %"class.blink::PersistentBase.1013" }
%"class.blink::PersistentBase.1013" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1016" }
%"class.blink::HeapHashMap.1016" = type { %"class.WTF::HashMap.1019" }
%"class.WTF::HashMap.1019" = type { %"class.WTF::HashTable.1020" }
%"class.WTF::HashTable.1020" = type <{ %"struct.WTF::KeyValuePair.1022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1022" = type { %"class.blink::WeakMember.1023", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1023" = type { %"class.blink::MemberBase.1024" }
%"class.blink::MemberBase.1024" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1025" = type { %"class.blink::MemberBase.1026" }
%"class.blink::MemberBase.1026" = type { %"class.blink::UnpackedSerializedScriptValue"* }
%"class.blink::UnpackedSerializedScriptValue" = type { %class.scoped_refptr.329, %"class.blink::HeapVector.1029", %"class.blink::HeapVector.1038" }
%"class.blink::HeapVector.1029" = type { %"class.WTF::Vector.1032" }
%"class.WTF::Vector.1032" = type { %"class.WTF::VectorBuffer.1033" }
%"class.WTF::VectorBuffer.1033" = type { %"class.WTF::VectorBufferBase.1034" }
%"class.WTF::VectorBufferBase.1034" = type { %"class.blink::Member.1035"*, i32, i32 }
%"class.blink::Member.1035" = type { %"class.blink::MemberBase.1036" }
%"class.blink::MemberBase.1036" = type { %"class.blink::DOMArrayBufferBase"* }
%"class.blink::DOMArrayBufferBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8, [7 x i8] }>
%"class.blink::HeapVector.1038" = type { %"class.WTF::Vector.1041" }
%"class.WTF::Vector.1041" = type { %"class.WTF::VectorBuffer.1042" }
%"class.WTF::VectorBuffer.1042" = type { %"class.WTF::VectorBufferBase.1043" }
%"class.WTF::VectorBufferBase.1043" = type { %"class.blink::Member.1044"*, i32, i32 }
%"class.blink::Member.1044" = type opaque
%"class.blink::Member.1046" = type { %"class.blink::MemberBase.1047" }
%"class.blink::MemberBase.1047" = type { %"class.blink::Blob"* }
%"class.blink::Blob" = type { %"class.blink::ScriptWrappable", %"class.blink::URLRegistrable", %"class.blink::ImageBitmapSource", %class.scoped_refptr.1048 }
%"class.blink::URLRegistrable" = type { i32 (...)** }
%"class.blink::ImageBitmapSource" = type { i32 (...)** }
%class.scoped_refptr.1048 = type { %"class.blink::BlobDataHandle"* }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted.1049", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote.1051", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted.1049" = type { %"class.base::RefCountedThreadSafe.1050" }
%"class.base::RefCountedThreadSafe.1050" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote.1051" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.blink::Member.1052" = type { %"class.blink::MemberBase.1053" }
%"class.blink::MemberBase.1053" = type { %"class.blink::DOMArrayBuffer"* }
%"class.blink::DOMArrayBuffer" = type { %"class.blink::DOMArrayBufferBase.base", [7 x i8] }
%"class.blink::DOMArrayBufferBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::ArrayBufferContents", i8 }>
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.1054" = type { %"class.blink::MemberBase.1055" }
%"class.blink::MemberBase.1055" = type { %"class.blink::HeapVector.920"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::UserActivation"* }
%"class.blink::UserActivation" = type opaque
%"class.blink::SourceLocation" = type <{ %"class.WTF::String", i32, i32, %"class.std::__1::unique_ptr.1061", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1061" = type { %"class.std::__1::__compressed_pair.1062" }
%"class.std::__1::__compressed_pair.1062" = type { %"struct.std::__1::__compressed_pair_elem.1063" }
%"struct.std::__1::__compressed_pair_elem.1063" = type { %"class.v8_inspector::V8StackTrace"* }
%"class.v8_inspector::V8StackTrace" = type { i32 (...)** }
%"class.blink::ErrorEvent" = type { %"class.blink::Event", %"class.WTF::String", %"class.WTF::String", %"class.std::__1::unique_ptr.1058", %"class.blink::WorldSafeV8Reference", %class.scoped_refptr.1070 }
%"class.std::__1::unique_ptr.1058" = type { %"class.std::__1::__compressed_pair.1059" }
%"class.std::__1::__compressed_pair.1059" = type { %"struct.std::__1::__compressed_pair_elem.1060" }
%"struct.std::__1::__compressed_pair_elem.1060" = type { %"class.blink::SourceLocation"* }
%class.scoped_refptr.1070 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::DedicatedWorkerThread" = type { %"class.blink::WorkerThread", %"class.std::__1::unique_ptr.1074", %"class.blink::DedicatedWorkerObjectProxy"*, i64, %"class.mojo::PendingRemote.325" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.blink::WorkerBackingThread"* }
%"class.blink::WorkerBackingThread" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::CrossThreadPersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv = comdat any

$_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE = comdat any

$_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS2_24BlinkTransferableMessageEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_NSA_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_ = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEiNSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEiNS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink25GlobalScopeCreationParamsD2Ev = comdat any

$_ZN5blink17UserAgentMetadataD2Ev = comdat any

$_ZN5blink25GenericFontFamilySettingsD2Ev = comdat any

$_ZN5blink30WorkerMainScriptLoadParametersD2Ev = comdat any

$_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24BlinkTransferableMessageEEEmm = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_15DedicatedWorkerEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_15DedicatedWorkerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink29DedicatedWorkerMessagingProxyE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DedicatedWorkerMessagingProxy"*)* @_ZN5blink29DedicatedWorkerMessagingProxyD2Ev to i8*), i8* bitcast (void (%"class.blink::DedicatedWorkerMessagingProxy"*)* @_ZN5blink29DedicatedWorkerMessagingProxyD0Ev to i8*), i8* bitcast (void (%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::Visitor"*)* @_ZNK5blink29DedicatedWorkerMessagingProxy5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.blink::WorkerThread"* (%"class.blink::DedicatedWorkerMessagingProxy"*)* @_ZN5blink29DedicatedWorkerMessagingProxy18CreateWorkerThreadEv to i8*)] }, align 8
@.str = private unnamed_addr constant [8 x i8] c"classic\00", align 1
@_ZN5blink8features19kPlzDedicatedWorkerE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [7 x i8] c"module\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"PostMessageToWorkerGlobalScope\00", align 1
@.str.3 = private unnamed_addr constant [82 x i8] c"../../third_party/blink/renderer/core/workers/dedicated_worker_messaging_proxy.cc\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"DidEvaluateScript\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"DispatchErrorEvent\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.6 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.10 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24BlinkTransferableMessageEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::BlinkTransferableMessage]\00", align 1

@_ZN5blink29DedicatedWorkerMessagingProxyC1EPNS_16ExecutionContextEPNS_15DedicatedWorkerE = hidden unnamed_addr alias void (%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::ExecutionContext"*, %"class.blink::DedicatedWorker"*), void (%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::ExecutionContext"*, %"class.blink::DedicatedWorker"*)* @_ZN5blink29DedicatedWorkerMessagingProxyC2EPNS_16ExecutionContextEPNS_15DedicatedWorkerE
@_ZN5blink29DedicatedWorkerMessagingProxyD1Ev = hidden unnamed_addr alias void (%"class.blink::DedicatedWorkerMessagingProxy"*), void (%"class.blink::DedicatedWorkerMessagingProxy"*)* @_ZN5blink29DedicatedWorkerMessagingProxyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxyC2EPNS_16ExecutionContextEPNS_15DedicatedWorkerE(%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::ExecutionContext"*, %"class.blink::DedicatedWorker"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseC2EPNS_16ExecutionContextE(%"class.blink::ThreadedMessagingProxyBase"* %4, %"class.blink::ExecutionContext"* %1) #11
  %5 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink29DedicatedWorkerMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1
  %7 = bitcast %"class.std::__1::unique_ptr.257"* %6 to i64*
  store i64 0, i64* %7, align 8
  %8 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::DedicatedWorker"* %2, %"class.blink::DedicatedWorker"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 3
  store i8 0, i8* %9, align 8
  %10 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4
  %11 = bitcast %"class.WTF::Vector.326"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %12) #11
  %13 = icmp eq %"class.blink::DedicatedWorker"* %2, null
  br i1 %13, label %28, label %14

14:                                               ; preds = %3
  %15 = tail call %"class.blink::ParentExecutionContextTaskRunners"* @_ZNK5blink26ThreadedMessagingProxyBase36GetParentExecutionContextTaskRunnersEv(%"class.blink::ThreadedMessagingProxyBase"* %4) #11
  %16 = getelementptr inbounds %"class.blink::DedicatedWorker", %"class.blink::DedicatedWorker"* %2, i64 0, i32 6
  %17 = tail call noalias i8* @malloc(i64 56) #11
  %18 = bitcast i8* %17 to %"class.blink::DedicatedWorkerObjectProxy"*
  tail call void @_ZN5blink26DedicatedWorkerObjectProxyC1EPNS_29DedicatedWorkerMessagingProxyEPNS_33ParentExecutionContextTaskRunnersERKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEE(%"class.blink::DedicatedWorkerObjectProxy"* %18, %"class.blink::DedicatedWorkerMessagingProxy"* %0, %"class.blink::ParentExecutionContextTaskRunners"* %15, %"class.util::TokenType"* dereferenceable(16) %16) #11
  %19 = ptrtoint i8* %17 to i64
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.257", %"class.std::__1::unique_ptr.257"* %6, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::DedicatedWorkerObjectProxy"*, %"class.blink::DedicatedWorkerObjectProxy"** %20, align 8
  store i64 %19, i64* %7, align 8
  %22 = icmp eq %"class.blink::DedicatedWorkerObjectProxy"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %14
  %24 = bitcast %"class.blink::DedicatedWorkerObjectProxy"* %21 to void (%"class.blink::DedicatedWorkerObjectProxy"*)***
  %25 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)**, void (%"class.blink::DedicatedWorkerObjectProxy"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %25, i64 1
  %27 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %26, align 8
  tail call void %27(%"class.blink::DedicatedWorkerObjectProxy"* nonnull %21) #11
  br label %28

28:                                               ; preds = %14, %23, %3
  ret void
}

declare void @_ZN5blink26ThreadedMessagingProxyBaseC2EPNS_16ExecutionContextE(%"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::ExecutionContext"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare %"class.blink::ParentExecutionContextTaskRunners"* @_ZNK5blink26ThreadedMessagingProxyBase36GetParentExecutionContextTaskRunnersEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxyD2Ev(%"class.blink::DedicatedWorkerMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink29DedicatedWorkerMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %3) #11
  %4 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %5, align 8
  %7 = icmp eq %"struct.blink::BlinkTransferableMessage"* %6, null
  br i1 %7, label %25, label %8, !prof !2

8:                                                ; preds = %1
  %9 = bitcast %"struct.blink::BlinkTransferableMessage"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13, !prof !3

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %6, i64 %14
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi %"struct.blink::BlinkTransferableMessage"* [ %18, %16 ], [ %6, %13 ]
  tail call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %17) #11
  %18 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %17, i64 1
  %19 = icmp eq %"struct.blink::BlinkTransferableMessage"* %18, %15
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  store i32 0, i32* %10, align 4
  %21 = bitcast %"class.WTF::Vector.326"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %8
  %24 = phi i8* [ %22, %20 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #11
  store %"struct.blink::BlinkTransferableMessage"* null, %"struct.blink::BlinkTransferableMessage"** %5, align 8
  br label %25

25:                                               ; preds = %1, %23
  %26 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.blink::DedicatedWorkerObjectProxy"*, %"class.blink::DedicatedWorkerObjectProxy"** %26, align 8
  store %"class.blink::DedicatedWorkerObjectProxy"* null, %"class.blink::DedicatedWorkerObjectProxy"** %26, align 8
  %28 = icmp eq %"class.blink::DedicatedWorkerObjectProxy"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::DedicatedWorkerObjectProxy"* %27 to void (%"class.blink::DedicatedWorkerObjectProxy"*)***
  %31 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)**, void (%"class.blink::DedicatedWorkerObjectProxy"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %31, i64 1
  %33 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %32, align 8
  tail call void %33(%"class.blink::DedicatedWorkerObjectProxy"* nonnull %27) #11
  br label %34

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %35) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxyD0Ev(%"class.blink::DedicatedWorkerMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink29DedicatedWorkerMessagingProxyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 5, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %3) #11
  %4 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4
  %5 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %5, align 8
  %7 = icmp eq %"struct.blink::BlinkTransferableMessage"* %6, null
  br i1 %7, label %25, label %8, !prof !2

8:                                                ; preds = %1
  %9 = bitcast %"struct.blink::BlinkTransferableMessage"* %6 to i8*
  %10 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %23, label %13, !prof !3

13:                                               ; preds = %8
  %14 = zext i32 %11 to i64
  %15 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %6, i64 %14
  br label %16

16:                                               ; preds = %16, %13
  %17 = phi %"struct.blink::BlinkTransferableMessage"* [ %18, %16 ], [ %6, %13 ]
  tail call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %17) #11
  %18 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %17, i64 1
  %19 = icmp eq %"struct.blink::BlinkTransferableMessage"* %18, %15
  br i1 %19, label %20, label %16

20:                                               ; preds = %16
  store i32 0, i32* %10, align 4
  %21 = bitcast %"class.WTF::Vector.326"* %4 to i8**
  %22 = load i8*, i8** %21, align 8
  br label %23

23:                                               ; preds = %20, %8
  %24 = phi i8* [ %22, %20 ], [ %9, %8 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %24) #11
  store %"struct.blink::BlinkTransferableMessage"* null, %"struct.blink::BlinkTransferableMessage"** %5, align 8
  br label %25

25:                                               ; preds = %23, %1
  %26 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %27 = load %"class.blink::DedicatedWorkerObjectProxy"*, %"class.blink::DedicatedWorkerObjectProxy"** %26, align 8
  store %"class.blink::DedicatedWorkerObjectProxy"* null, %"class.blink::DedicatedWorkerObjectProxy"** %26, align 8
  %28 = icmp eq %"class.blink::DedicatedWorkerObjectProxy"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::DedicatedWorkerObjectProxy"* %27 to void (%"class.blink::DedicatedWorkerObjectProxy"*)***
  %31 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)**, void (%"class.blink::DedicatedWorkerObjectProxy"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %31, i64 1
  %33 = load void (%"class.blink::DedicatedWorkerObjectProxy"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*)** %32, align 8
  tail call void %33(%"class.blink::DedicatedWorkerObjectProxy"* nonnull %27) #11
  br label %34

34:                                               ; preds = %25, %29
  %35 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZN5blink26ThreadedMessagingProxyBaseD2Ev(%"class.blink::ThreadedMessagingProxyBase"* %35) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy22StartWorkerGlobalScopeENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEENS2_INS_30WorkerMainScriptLoadParametersENS4_IS7_EEEEPKNS_13WorkerOptionsERKNS_4KURLERKNS_33FetchClientSettingsObjectSnapshotERKN12v8_inspector14V8StackTraceIdERKN3WTF6StringEN4base11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEERKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEEN4mojo13PendingRemoteINS_5mojom5blink19DedicatedWorkerHostEEE(%"class.blink::DedicatedWorkerMessagingProxy"*, %"struct.blink::GlobalScopeCreationParams"*, %"struct.blink::WorkerMainScriptLoadParameters"*, %"class.blink::WorkerOptions"*, %"class.blink::KURL"* dereferenceable(112), %"class.blink::FetchClientSettingsObjectSnapshot"* dereferenceable(296), %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32), %"class.WTF::String"* dereferenceable(8), i8, %"class.util::TokenType"* nocapture readonly dereferenceable(16), %"class.mojo::PendingRemote.325"*) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.absl::optional_internal::optional_data_dtor_base.862", align 8
  %17 = alloca %"class.absl::optional.859", align 8
  %18 = alloca %"class.absl::optional.864", align 8
  %19 = ptrtoint %"struct.blink::GlobalScopeCreationParams"* %1 to i64
  %20 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %22 = load i8, i8* %21, align 8, !range !4
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %142

24:                                               ; preds = %11
  %25 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 5, i32 0
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.325", %"class.mojo::PendingRemote.325"* %10, i64 0, i32 0
  %27 = tail call dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"* %25, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %26) #11
  %28 = getelementptr inbounds %"class.absl::optional.859", %"class.absl::optional.859"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %28) #11
  %29 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %30 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %29, i64 0, i32 5
  %31 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %30, align 8
  %32 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.862", %"class.absl::optional_internal::optional_data_dtor_base.862"* %16, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %32)
  %33 = tail call zeroext i1 @_ZN2v87Isolate32IsHeapLimitIncreasedForDebuggingEv(%"class.v8::Isolate"* %31) #11
  store i8 1, i8* %32, align 8
  %34 = zext i1 %33 to i64
  %35 = or i64 %34, 4294967296
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.862", %"class.absl::optional_internal::optional_data_dtor_base.862"* %16, i64 0, i32 1
  %37 = bitcast %union.anon.863* %36 to i64*
  store i64 %35, i64* %37, align 4
  %38 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.862"* %16 to i64*
  %39 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %32)
  %40 = bitcast %"class.absl::optional.859"* %17 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.absl::optional.859", %"class.absl::optional.859"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  store i32 1, i32* %41, align 4
  %42 = getelementptr inbounds %"class.absl::optional.864", %"class.absl::optional.864"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #11
  store i8 1, i8* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.864", %"class.absl::optional.864"* %18, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = bitcast %"class.util::TokenType"* %43 to i8*
  %45 = bitcast %"class.util::TokenType"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* align 8 %45, i64 16, i1 false) #11
  call void @_ZN5blink26ThreadedMessagingProxyBase22InitializeWorkerThreadENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEERKNS8_IKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEEEE(%"class.blink::ThreadedMessagingProxyBase"* %20, %"struct.blink::GlobalScopeCreationParams"* %1, %"class.absl::optional.859"* nonnull dereferenceable(12) %17, %"class.absl::optional.864"* nonnull dereferenceable(24) %18) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #11
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %28) #11
  %46 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #11
  %47 = getelementptr inbounds %"class.blink::WorkerOptions", %"class.blink::WorkerOptions"* %3, i64 0, i32 3, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %50, label %54

50:                                               ; preds = %24
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %51, align 8
  %52 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %53 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %52, i64* %53, align 8
  br label %62

54:                                               ; preds = %24
  %55 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 1
  %59 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %60 = bitcast i8** %59 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %60, align 8
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

62:                                               ; preds = %54, %50
  %63 = phi i64 [ %61, %54 ], [ %52, %50 ]
  %64 = phi i32 [ %57, %54 ], [ 0, %50 ]
  %65 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %64, i32* %65, align 8
  %66 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %63, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 7, i32* %69, align 8
  %70 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #11
  br i1 %70, label %71, label %92

71:                                               ; preds = %62
  %72 = call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %73 = icmp eq %"class.blink::ExecutionContext"* %72, null
  %74 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %72, i64 0, i32 3
  %75 = icmp eq %"class.blink::UseCounter"* %74, null
  %76 = or i1 %73, %75
  br i1 %76, label %82, label %77

77:                                               ; preds = %71
  %78 = bitcast %"class.blink::UseCounter"* %74 to void (%"class.blink::UseCounter"*, i32)***
  %79 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %79, i64 3
  %81 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %80, align 8
  call void %81(%"class.blink::UseCounter"* nonnull %74, i32 3084) #11
  br label %82

82:                                               ; preds = %71, %77
  %83 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features19kPlzDedicatedWorkerE) #11
  br i1 %83, label %84, label %90

84:                                               ; preds = %82
  %85 = call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %86 = call %"class.blink::WorkerResourceTimingNotifierImpl"* @_ZN5blink32WorkerResourceTimingNotifierImpl31CreateForOutsideResourceFetcherERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %85) #11
  %87 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %88 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"* %5)
  %89 = getelementptr inbounds %"class.blink::WorkerResourceTimingNotifierImpl", %"class.blink::WorkerResourceTimingNotifierImpl"* %86, i64 0, i32 0
  call void @_ZN5blink12WorkerThread24FetchAndRunClassicScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"* %87, %"class.blink::KURL"* dereferenceable(112) %4, %"struct.blink::WorkerMainScriptLoadParameters"* %2, %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %88, %"class.blink::WorkerResourceTimingNotifier"* %89, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %6) #11
  br label %152

90:                                               ; preds = %82
  %91 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  call void @_ZN5blink12WorkerThread21EvaluateClassicScriptERKNS_4KURLERKN3WTF6StringENSt3__110unique_ptrINS4_6VectorIhLj0ENS4_18PartitionAllocatorEEENS8_14default_deleteISC_EEEERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"* %91, %"class.blink::KURL"* dereferenceable(112) %4, %"class.WTF::String"* dereferenceable(8) %7, %"class.WTF::Vector.884"* null, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %6) #11
  br label %142

92:                                               ; preds = %62
  %93 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %93) #11
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %96, label %100

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %97, align 8
  %98 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %99 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %98, i64* %99, align 8
  br label %108

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 1
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %106 = bitcast i8** %105 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %104, %"class.WTF::StringImpl"** %106, align 8
  %107 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %108

108:                                              ; preds = %100, %96
  %109 = phi i64 [ %107, %100 ], [ %98, %96 ]
  %110 = phi i32 [ %103, %100 ], [ 0, %96 ]
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %110, i32* %111, align 8
  %112 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %112) #11
  %113 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %109, i64* %113, align 8
  %114 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.1, i64 0, i64 0), i8** %114, align 8
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 6, i32* %115, align 8
  %116 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %112) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %93) #11
  br i1 %116, label %117, label %142

117:                                              ; preds = %108
  %118 = call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %119 = icmp eq %"class.blink::ExecutionContext"* %118, null
  %120 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %118, i64 0, i32 3
  %121 = icmp eq %"class.blink::UseCounter"* %120, null
  %122 = or i1 %119, %121
  br i1 %122, label %128, label %123

123:                                              ; preds = %117
  %124 = bitcast %"class.blink::UseCounter"* %120 to void (%"class.blink::UseCounter"*, i32)***
  %125 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %124, align 8
  %126 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %125, i64 3
  %127 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %126, align 8
  call void %127(%"class.blink::UseCounter"* nonnull %120, i32 3085) #11
  br label %128

128:                                              ; preds = %117, %123
  %129 = getelementptr inbounds %"class.blink::WorkerOptions", %"class.blink::WorkerOptions"* %3, i64 0, i32 1
  %130 = call i64 @_ZN5blink7Request20ParseCredentialsModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %129) #11
  %131 = trunc i64 %130 to i8
  %132 = call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %133 = call %"class.blink::WorkerResourceTimingNotifierImpl"* @_ZN5blink32WorkerResourceTimingNotifierImpl31CreateForOutsideResourceFetcherERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376) %132) #11
  %134 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %20) #11
  %135 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"* %5)
  %136 = icmp eq i8 %131, 0
  br i1 %136, label %137, label %138, !prof !3

137:                                              ; preds = %128
  call void @llvm.trap() #11
  unreachable

138:                                              ; preds = %128
  %139 = getelementptr inbounds %"class.blink::WorkerResourceTimingNotifierImpl", %"class.blink::WorkerResourceTimingNotifierImpl"* %133, i64 0, i32 0
  %140 = lshr i64 %130, 32
  %141 = trunc i64 %140 to i32
  call void @_ZN5blink12WorkerThread23FetchAndRunModuleScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierEN7network5mojom15CredentialsModeEN4base11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEE(%"class.blink::WorkerThread"* %134, %"class.blink::KURL"* dereferenceable(112) %4, %"struct.blink::WorkerMainScriptLoadParameters"* %2, %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %135, %"class.blink::WorkerResourceTimingNotifier"* %139, i32 %141, i8 %8) #11
  br label %152

142:                                              ; preds = %11, %90, %108
  %143 = phi i64 [ %19, %11 ], [ 0, %90 ], [ 0, %108 ]
  %144 = icmp eq %"struct.blink::WorkerMainScriptLoadParameters"* %2, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  call void @_ZN5blink30WorkerMainScriptLoadParametersD2Ev(%"struct.blink::WorkerMainScriptLoadParameters"* nonnull %2) #11
  %146 = bitcast %"struct.blink::WorkerMainScriptLoadParameters"* %2 to i8*
  call void @_ZdlPv(i8* %146) #12
  br label %147

147:                                              ; preds = %142, %145
  %148 = inttoptr i64 %143 to %"struct.blink::GlobalScopeCreationParams"*
  %149 = icmp eq i64 %143, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %147
  call void @_ZN5blink25GlobalScopeCreationParamsD2Ev(%"struct.blink::GlobalScopeCreationParams"* nonnull %148) #11
  %151 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %148, i64 0, i32 0, i32 0
  call void @free(i8* %151) #11
  br label %152

152:                                              ; preds = %84, %138, %147, %150
  ret void
}

declare void @_ZN5blink26ThreadedMessagingProxyBase22InitializeWorkerThreadENSt3__110unique_ptrINS_25GlobalScopeCreationParamsENS1_14default_deleteIS3_EEEERKN4absl8optionalINS_30WorkerBackingThreadStartupDataEEERKNS8_IKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEEEE(%"class.blink::ThreadedMessagingProxyBase"*, %"struct.blink::GlobalScopeCreationParams"*, %"class.absl::optional.859"* dereferenceable(12), %"class.absl::optional.864"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink29DedicatedWorkerMessagingProxy30CreateBackingThreadStartupDataEPN2v87IsolateE(%"class.blink::DedicatedWorkerMessagingProxy"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional_internal::optional_data_dtor_base.862", align 8
  %4 = tail call zeroext i1 @_ZN2v87Isolate32IsHeapLimitIncreasedForDebuggingEv(%"class.v8::Isolate"* %1) #11
  %5 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.862", %"class.absl::optional_internal::optional_data_dtor_base.862"* %3, i64 0, i32 0
  store i8 1, i8* %5, align 8
  %6 = zext i1 %4 to i64
  %7 = or i64 %6, 4294967296
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data_dtor_base.862", %"class.absl::optional_internal::optional_data_dtor_base.862"* %3, i64 0, i32 1
  %9 = bitcast %union.anon.863* %8 to i64*
  store i64 %7, i64* %9, align 4
  %10 = bitcast %"class.absl::optional_internal::optional_data_dtor_base.862"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = insertvalue { i64, i32 } undef, i64 %11, 0
  %13 = insertvalue { i64, i32 } %12, i32 1, 1
  ret { i64, i32 } %13
}

declare %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare %"class.blink::WorkerResourceTimingNotifierImpl"* @_ZN5blink32WorkerResourceTimingNotifierImpl31CreateForOutsideResourceFetcherERNS_16ExecutionContextE(%"class.blink::ExecutionContext"* dereferenceable(376)) local_unnamed_addr #1

declare %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"*) local_unnamed_addr #1

declare void @_ZN5blink12WorkerThread24FetchAndRunClassicScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::WorkerMainScriptLoadParameters"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNK5blink33FetchClientSettingsObjectSnapshot8CopyDataEv(%"class.blink::FetchClientSettingsObjectSnapshot"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::KURL", align 8
  %3 = alloca %"class.blink::KURL", align 8
  %4 = alloca %class.scoped_refptr.375, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #11
  %7 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 1
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %2, %"class.blink::KURL"* %7) #11
  %8 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 2
  call void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* nonnull sret %3, %"class.blink::KURL"* %9) #11
  %10 = bitcast %class.scoped_refptr.375* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #11
  %11 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 3, i32 0
  %12 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %11, align 8
  %13 = call %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"* %12) #11
  %14 = getelementptr inbounds %class.scoped_refptr.375, %class.scoped_refptr.375* %4, i64 0, i32 0
  store %"class.blink::SecurityOrigin"* %13, %"class.blink::SecurityOrigin"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 4
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 5
  %18 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"* %17) #11
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 6
  %21 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 7
  %22 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 8
  %23 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 9
  %24 = getelementptr inbounds %"class.blink::FetchClientSettingsObjectSnapshot", %"class.blink::FetchClientSettingsObjectSnapshot"* %0, i64 0, i32 10
  %25 = call %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* nonnull dereferenceable(112) %2, %"class.blink::KURL"* nonnull dereferenceable(112) %3, %class.scoped_refptr.375* nonnull dereferenceable(8) %4, i32* dereferenceable(4) %15, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32* dereferenceable(4) %20, i32* dereferenceable(4) %21, i32* dereferenceable(4) %22, i32* dereferenceable(4) %23, %"class.WTF::HashSet.310"* dereferenceable(24) %24)
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #11
  br label %41

41:                                               ; preds = %1, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  %42 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %14, align 8
  %43 = icmp eq %"class.blink::SecurityOrigin"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #11
  %46 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %42) #11
  %50 = bitcast %"class.blink::SecurityOrigin"* %42 to i8*
  call void @free(i8* %50) #11
  br label %51

51:                                               ; preds = %41, %44, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %8) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #11
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %25
}

declare void @_ZN5blink12WorkerThread21EvaluateClassicScriptERKNS_4KURLERKN3WTF6StringENSt3__110unique_ptrINS4_6VectorIhLj0ENS4_18PartitionAllocatorEEENS8_14default_deleteISC_EEEERKN12v8_inspector14V8StackTraceIdE(%"class.blink::WorkerThread"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.884"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #1

declare i64 @_ZN5blink7Request20ParseCredentialsModeERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink12WorkerThread23FetchAndRunModuleScriptERKNS_4KURLENSt3__110unique_ptrINS_30WorkerMainScriptLoadParametersENS4_14default_deleteIS6_EEEENS5_INS_40CrossThreadFetchClientSettingsObjectDataENS7_ISA_EEEEPNS_28WorkerResourceTimingNotifierEN7network5mojom15CredentialsModeEN4base11StrongAliasINS_23RejectCoepUnsafeNoneTagEbEE(%"class.blink::WorkerThread"*, %"class.blink::KURL"* dereferenceable(112), %"struct.blink::WorkerMainScriptLoadParameters"*, %"struct.blink::CrossThreadFetchClientSettingsObjectData"*, %"class.blink::WorkerResourceTimingNotifier"*, i32, i8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy30PostMessageToWorkerGlobalScopeENS_24BlinkTransferableMessageE(%"class.blink::DedicatedWorkerMessagingProxy"*, %"struct.blink::BlinkTransferableMessage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %6 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %13 = load i8, i8* %12, align 8, !range !4
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %84

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 3
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %34

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4
  %21 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %33, label %26, !prof !3

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %20, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %27, align 8
  %29 = zext i32 %22 to i64
  %30 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %28, i64 %29
  tail call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %30, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %1) #11
  %31 = load i32, i32* %21, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %21, align 4
  br label %84

33:                                               ; preds = %19
  tail call void @_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.326"* %20, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %1) #11
  br label %84

34:                                               ; preds = %15
  %35 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %11) #11
  %36 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %35, i8 zeroext 13) #11
  %37 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %37) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i64 0, i64 0), i32 130) #11
  %38 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.blink::DedicatedWorkerObjectProxy"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %11) #11
  %42 = ptrtoint %"class.blink::WorkerThread"* %41 to i64
  %43 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"struct.blink::BlinkTransferableMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %44)
  %45 = bitcast %"struct.blink::BlinkTransferableMessage"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %45) #11, !noalias !5
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %6, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %1) #11, !noalias !5
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %5, %"struct.blink::BlinkTransferableMessage"* nonnull dereferenceable(104) %6) #11, !noalias !5
  %46 = call i8* @_Znwm(i64 168) #12, !noalias !8
  %47 = bitcast i8* %46 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %47, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS2_24BlinkTransferableMessageEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_NSA_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !8
  %48 = getelementptr inbounds i8, i8* %46, i64 32
  %49 = bitcast i8* %48 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)* @_ZN5blink26DedicatedWorkerObjectProxy30ProcessMessageFromWorkerObjectENS_24BlinkTransferableMessageEPNS_12WorkerThreadE to i64), i64 0>, <2 x i64>* %49, align 8, !noalias !8
  %50 = getelementptr inbounds i8, i8* %46, i64 48
  %51 = bitcast i8* %50 to i64*
  store i64 %40, i64* %51, align 8, !noalias !8
  %52 = getelementptr inbounds i8, i8* %46, i64 56
  %53 = bitcast i8* %52 to %"struct.blink::BlinkTransferableMessage"*
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %53, %"struct.blink::BlinkTransferableMessage"* nonnull dereferenceable(104) %5) #11, !noalias !8
  %54 = getelementptr inbounds i8, i8* %46, i64 160
  %55 = bitcast i8* %54 to i64*
  store i64 %42, i64* %55, align 8, !noalias !8
  %56 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #11, !noalias !5
  %57 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = ptrtoint i8* %46 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8, !noalias !13
  %59 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %59, align 8, !noalias !13
  %60 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %60) #11, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #11, !noalias !5
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #11, !noalias !5
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %5) #11, !noalias !5
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %6) #11, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %45) #11, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %44)
  %62 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62)
  %63 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63)
  %64 = bitcast %"class.base::SingleThreadTaskRunner"* %36 to %"class.base::TaskRunner"*
  %65 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %65, align 8
  %66 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %58, i64* %67, align 8, !alias.scope !16
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %66, align 8, !noalias !16
  %68 = bitcast %"class.base::SingleThreadTaskRunner"* %36 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %69 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %68, align 8
  %70 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %69, align 8
  %71 = call zeroext i1 %70(%"class.base::TaskRunner"* %64, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 0) #11
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #11
  %73 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %73) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63)
  %74 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %74) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %37) #11
  %75 = icmp eq %"class.base::SingleThreadTaskRunner"* %36, null
  br i1 %75, label %84, label %76

76:                                               ; preds = %34
  %77 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %36, i64 0, i32 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = atomicrmw sub i32* %78, i32 1 acq_rel
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %81, label %84

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %77, i64 -2
  %83 = bitcast %"class.base::RefCountedThreadSafe"* %82 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %83) #11
  br label %84

84:                                               ; preds = %2, %81, %76, %34, %33, %26
  ret void
}

declare %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

declare void @_ZN5blink26DedicatedWorkerObjectProxy30ProcessMessageFromWorkerObjectENS_24BlinkTransferableMessageEPNS_12WorkerThreadE(%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*) #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink29DedicatedWorkerMessagingProxy18HasPendingActivityEv(%"class.blink::DedicatedWorkerMessagingProxy"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = icmp eq i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy20DidFailToFetchScriptEv(%"class.blink::DedicatedWorkerMessagingProxy"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %2, align 8
  %4 = icmp eq %"class.blink::DedicatedWorker"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  tail call void @_ZN5blink15DedicatedWorker39DispatchErrorEventForScriptFetchFailureEv(%"class.blink::DedicatedWorker"* nonnull %3) #11
  br label %10

10:                                               ; preds = %5, %1, %9
  ret void
}

declare void @_ZN5blink15DedicatedWorker39DispatchErrorEventForScriptFetchFailureEv(%"class.blink::DedicatedWorker"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy6FreezeEv(%"class.blink::DedicatedWorkerMessagingProxy"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %2) #11
  %4 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  %7 = icmp ne %"class.blink::WorkerThread"* %3, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN5blink12WorkerThread6FreezeEv(%"class.blink::WorkerThread"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN5blink12WorkerThread6FreezeEv(%"class.blink::WorkerThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy6ResumeEv(%"class.blink::DedicatedWorkerMessagingProxy"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %3 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %2) #11
  %4 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  %7 = icmp ne %"class.blink::WorkerThread"* %3, null
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  tail call void @_ZN5blink12WorkerThread6ResumeEv(%"class.blink::WorkerThread"* nonnull %3) #11
  br label %10

10:                                               ; preds = %1, %9
  ret void
}

declare void @_ZN5blink12WorkerThread6ResumeEv(%"class.blink::WorkerThread"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy17DidEvaluateScriptEb(%"class.blink::DedicatedWorkerMessagingProxy"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %6 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 3
  store i8 1, i8* %11, align 8
  %12 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4
  %13 = bitcast %"class.WTF::Vector.326"* %12 to i64*
  %14 = load i64, i64* %13, align 8
  store atomic i64 0, i64* %13 monotonic, align 8
  %15 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 1
  store i32 0, i32* %15, align 4
  %16 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  store i32 0, i32* %16, align 4
  %18 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %19 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %18) #11
  %20 = icmp eq %"class.blink::WorkerThread"* %19, null
  %21 = inttoptr i64 %14 to %"struct.blink::BlinkTransferableMessage"*
  br i1 %20, label %83, label %22

22:                                               ; preds = %2
  %23 = zext i32 %17 to i64
  %24 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %21, i64 %23
  %25 = icmp eq i32 %17, 0
  br i1 %25, label %83, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.base::Location"* %9 to i8*
  %28 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %29 = bitcast %"class.blink::DedicatedWorkerObjectProxy"** %28 to i64*
  %30 = bitcast %"class.base::OnceCallback"* %4 to i8*
  %31 = bitcast %"struct.blink::BlinkTransferableMessage"* %6 to i8*
  %32 = bitcast %"struct.blink::BlinkTransferableMessage"* %5 to i8*
  %33 = bitcast %"class.base::OnceCallback"* %3 to i8*
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.WTF::CrossThreadOnceFunction"* %10 to i64*
  %37 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %38 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %39 = bitcast %"class.base::OnceCallback"* %7 to i8*
  %40 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  %41 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %44 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  %45 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  %46 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  br label %47

47:                                               ; preds = %26, %80
  %48 = phi %"struct.blink::BlinkTransferableMessage"* [ %21, %26 ], [ %81, %80 ]
  %49 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %18) #11
  %50 = call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %49, i8 zeroext 13) #11
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i64 0, i64 0), i32 183) #11
  %51 = load i64, i64* %29, align 8
  %52 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %18) #11
  %53 = ptrtoint %"class.blink::WorkerThread"* %52 to i64
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30)
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %31)
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %32) #11, !noalias !19
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %6, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %48) #11, !noalias !19
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %5, %"struct.blink::BlinkTransferableMessage"* nonnull dereferenceable(104) %6) #11, !noalias !19
  %54 = call i8* @_Znwm(i64 168) #12, !noalias !22
  %55 = bitcast i8* %54 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %55, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS2_24BlinkTransferableMessageEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_NSA_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !22
  %56 = getelementptr inbounds i8, i8* %54, i64 32
  %57 = bitcast i8* %56 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)* @_ZN5blink26DedicatedWorkerObjectProxy30ProcessMessageFromWorkerObjectENS_24BlinkTransferableMessageEPNS_12WorkerThreadE to i64), i64 0>, <2 x i64>* %57, align 8, !noalias !22
  %58 = getelementptr inbounds i8, i8* %54, i64 48
  %59 = bitcast i8* %58 to i64*
  store i64 %51, i64* %59, align 8, !noalias !22
  %60 = getelementptr inbounds i8, i8* %54, i64 56
  %61 = bitcast i8* %60 to %"struct.blink::BlinkTransferableMessage"*
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %61, %"struct.blink::BlinkTransferableMessage"* nonnull dereferenceable(104) %5) #11, !noalias !22
  %62 = getelementptr inbounds i8, i8* %54, i64 160
  %63 = bitcast i8* %62 to i64*
  store i64 %53, i64* %63, align 8, !noalias !22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11, !noalias !19
  %64 = ptrtoint i8* %54 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8, !noalias !27
  store i64 %64, i64* %36, align 8, !alias.scope !27
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %35, align 8, !noalias !27
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %37) #11, !noalias !27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11, !noalias !19
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %38) #11, !noalias !19
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %5) #11, !noalias !19
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %6) #11, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %32) #11, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30)
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %31)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  %65 = bitcast %"class.base::SingleThreadTaskRunner"* %50 to %"class.base::TaskRunner"*
  %66 = load i64, i64* %36, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %41, align 8
  store i64 %66, i64* %43, align 8, !alias.scope !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %42, align 8, !noalias !30
  %67 = bitcast %"class.base::SingleThreadTaskRunner"* %50 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %68 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %67, align 8
  %69 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %68, align 8
  %70 = call zeroext i1 %69(%"class.base::TaskRunner"* %65, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 0) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %44) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #11
  %71 = icmp eq %"class.base::SingleThreadTaskRunner"* %50, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %47
  %73 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %50, i64 0, i32 0, i32 0, i32 1
  %74 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = atomicrmw sub i32* %74, i32 1 acq_rel
  %76 = icmp eq i32 %75, 1
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %73, i64 -2
  %79 = bitcast %"class.base::RefCountedThreadSafe"* %78 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %79) #11
  br label %80

80:                                               ; preds = %47, %72, %77
  %81 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %48, i64 1
  %82 = icmp eq %"struct.blink::BlinkTransferableMessage"* %81, %24
  br i1 %82, label %83, label %47

83:                                               ; preds = %80, %2, %22
  %84 = icmp eq i64 %14, 0
  br i1 %84, label %96, label %85, !prof !2

85:                                               ; preds = %83
  %86 = icmp eq i32 %17, 0
  br i1 %86, label %94, label %87, !prof !3

87:                                               ; preds = %85
  %88 = zext i32 %17 to i64
  %89 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %21, i64 %88
  br label %90

90:                                               ; preds = %90, %87
  %91 = phi %"struct.blink::BlinkTransferableMessage"* [ %92, %90 ], [ %21, %87 ]
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %91) #11
  %92 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %91, i64 1
  %93 = icmp eq %"struct.blink::BlinkTransferableMessage"* %92, %89
  br i1 %93, label %94, label %90

94:                                               ; preds = %90, %85
  %95 = inttoptr i64 %14 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #11
  br label %96

96:                                               ; preds = %83, %94
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy25PostMessageToWorkerObjectENS_24BlinkTransferableMessageE(%"class.blink::DedicatedWorkerMessagingProxy"*, %"struct.blink::BlinkTransferableMessage"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::Vector.404", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %6, align 8
  %8 = icmp eq %"class.blink::DedicatedWorker"* %7, null
  br i1 %8, label %101, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0, i32 4
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %101

14:                                               ; preds = %9
  %15 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %10) #11
  %16 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %15, i64 0, i32 5
  %17 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %16, align 8
  %18 = tail call %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"* %17) #11
  %19 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %10) #11
  %20 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1
  %21 = getelementptr inbounds %"class.WTF::Vector.404", %"class.WTF::Vector.404"* %3, i64 0, i32 0, i32 0, i32 1
  %22 = getelementptr inbounds %"class.WTF::Vector.404", %"class.WTF::Vector.404"* %3, i64 0, i32 0, i32 0, i32 2
  %23 = bitcast %"class.WTF::Vector.404"* %20 to i64*
  %24 = bitcast %"class.WTF::Vector.404"* %3 to i64*
  store i64 0, i64* %24, align 8
  %25 = load i64, i64* %23, align 8
  %26 = bitcast %"class.WTF::Vector.404"* %3 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store atomic i64 %25, i64* %26 monotonic, align 8
  %27 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  store i32 %28, i32* %21, align 8
  store i32 0, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  store i32 %30, i32* %22, align 4
  store i32 0, i32* %29, align 4
  %31 = call %"class.blink::HeapVector.920"* @_ZN5blink11MessagePort13EntanglePortsERNS_16ExecutionContextEN3WTF6VectorINS_18MessagePortChannelELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* dereferenceable(376) %19, %"class.WTF::Vector.404"* nonnull %3) #11
  %32 = getelementptr inbounds %"class.WTF::Vector.404", %"class.WTF::Vector.404"* %3, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %32, align 8
  %34 = icmp eq %"class.blink::MessagePortChannel"* %33, null
  br i1 %34, label %51, label %35, !prof !2

35:                                               ; preds = %14
  %36 = bitcast %"class.blink::MessagePortChannel"* %33 to i8*
  %37 = load i32, i32* %22, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %49, label %39, !prof !3

39:                                               ; preds = %35
  %40 = zext i32 %37 to i64
  %41 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %33, i64 %40
  br label %42

42:                                               ; preds = %42, %39
  %43 = phi %"class.blink::MessagePortChannel"* [ %44, %42 ], [ %33, %39 ]
  call void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"* %43) #11
  %44 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %43, i64 1
  %45 = icmp eq %"class.blink::MessagePortChannel"* %44, %41
  br i1 %45, label %46, label %42

46:                                               ; preds = %42
  store i32 0, i32* %22, align 4
  %47 = bitcast %"class.WTF::Vector.404"* %3 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %35
  %50 = phi i8* [ %48, %46 ], [ %36, %35 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #11
  store %"class.blink::MessagePortChannel"* null, %"class.blink::MessagePortChannel"** %32, align 8
  br label %51

51:                                               ; preds = %14, %49
  %52 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 0, i32 2
  call void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* %18, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %52) #11
  %53 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %6, align 8
  %54 = getelementptr inbounds %"class.blink::DedicatedWorker", %"class.blink::DedicatedWorker"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %1, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::SerializedScriptValue"*, %"class.blink::SerializedScriptValue"** %55, align 8
  store %"class.blink::SerializedScriptValue"* null, %"class.blink::SerializedScriptValue"** %55, align 8
  %57 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #11
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %58, align 8
  %59 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #11
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %60, align 8
  %61 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 256) #11
  %62 = bitcast i8* %61 to %"class.blink::MessageEvent"*
  call void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationE(%"class.blink::MessageEvent"* %62, %"class.blink::SerializedScriptValue"* %56, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::EventTarget"* null, %"class.blink::HeapVector.920"* %31, %"class.blink::UserActivation"* null) #11
  %63 = getelementptr inbounds i8, i8* %61, i64 -4
  %64 = bitcast i8* %63 to i16*
  %65 = load atomic i16, i16* %64 monotonic, align 2
  %66 = or i16 %65, 1
  store atomic i16 %66, i16* %64 release, align 2
  %67 = bitcast i8* %61 to %"class.blink::Event"*
  %68 = call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %54, %"class.blink::Event"* dereferenceable(104) %67) #11
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #11
  br label %84

84:                                               ; preds = %51, %80, %83
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #11
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %84
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #11
  br label %100

100:                                              ; preds = %84, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #11
  call void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"* %18, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32) %52) #11
  br label %101

101:                                              ; preds = %9, %2, %100
  ret void
}

declare %"class.blink::ThreadDebugger"* @_ZN5blink14ThreadDebugger4FromEPN2v87IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.blink::HeapVector.920"* @_ZN5blink11MessagePort13EntanglePortsERNS_16ExecutionContextEN3WTF6VectorINS_18MessagePortChannelELj0ENS3_18PartitionAllocatorEEE(%"class.blink::ExecutionContext"* dereferenceable(376), %"class.WTF::Vector.404"*) local_unnamed_addr #1

declare void @_ZN5blink14ThreadDebugger24ExternalAsyncTaskStartedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #1

declare i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink14ThreadDebugger25ExternalAsyncTaskFinishedERKN12v8_inspector14V8StackTraceIdE(%"class.blink::ThreadDebugger"*, %"struct.v8_inspector::V8StackTraceId"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29DedicatedWorkerMessagingProxy18DispatchErrorEventERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEi(%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.WTF::CrossThreadOnceFunction", align 8
  %11 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %11, align 8
  %13 = icmp eq %"class.blink::DedicatedWorker"* %12, null
  br i1 %13, label %76, label %14

14:                                               ; preds = %4
  %15 = tail call %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"* %2) #11
  %16 = tail call %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE(%"class.WTF::String"* dereferenceable(8) %1, %"class.blink::SourceLocation"* %15, %"class.blink::DOMWrapperWorld"* null)
  %17 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %11, align 8
  %18 = getelementptr inbounds %"class.blink::DedicatedWorker", %"class.blink::DedicatedWorker"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ErrorEvent", %"class.blink::ErrorEvent"* %16, i64 0, i32 0
  %20 = tail call i32 @_ZN5blink11EventTarget13DispatchEventERNS_5EventE(%"class.blink::EventTarget"* %18, %"class.blink::Event"* dereferenceable(104) %19) #11
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %76

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %24 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %23) #11
  %25 = icmp eq %"class.blink::WorkerThread"* %24, null
  br i1 %25, label %76, label %26

26:                                               ; preds = %22
  %27 = tail call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %23) #11
  %28 = tail call %"class.base::SingleThreadTaskRunner"* @_ZN5blink12WorkerThread13GetTaskRunnerENS_8TaskTypeE(%"class.blink::WorkerThread"* %27, i8 zeroext 1) #11
  %29 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.3, i64 0, i64 0), i32 239) #11
  %30 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"class.blink::DedicatedWorkerObjectProxy"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = call %"class.blink::WorkerThread"* @_ZNK5blink26ThreadedMessagingProxyBase15GetWorkerThreadEv(%"class.blink::ThreadedMessagingProxyBase"* %23) #11
  %34 = ptrtoint %"class.blink::WorkerThread"* %33 to i64
  %35 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  %36 = call i8* @_Znwm(i64 72) #12, !noalias !33
  %37 = bitcast i8* %36 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %37, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEiNSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEiNS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !33
  %38 = getelementptr inbounds i8, i8* %36, i64 32
  %39 = bitcast i8* %38 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)* @_ZN5blink26DedicatedWorkerObjectProxy25ProcessUnhandledExceptionEiPNS_12WorkerThreadE to i64), i64 0>, <2 x i64>* %39, align 8, !noalias !33
  %40 = getelementptr inbounds i8, i8* %36, i64 48
  %41 = bitcast i8* %40 to i64*
  store i64 %32, i64* %41, align 8, !noalias !33
  %42 = getelementptr inbounds i8, i8* %36, i64 56
  %43 = bitcast i8* %42 to i32*
  store i32 %3, i32* %43, align 4, !noalias !33
  %44 = getelementptr inbounds i8, i8* %36, i64 64
  %45 = bitcast i8* %44 to i64*
  store i64 %34, i64* %45, align 8, !noalias !33
  %46 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11, !noalias !40
  %47 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0, i32 0, i32 0
  %48 = ptrtoint i8* %36 to i64
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %47, align 8, !noalias !41
  %49 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %49, align 8, !noalias !41
  %50 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %50) #11, !noalias !41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11, !noalias !40
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %51) #11, !noalias !40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  %52 = bitcast %"class.base::OnceCallback"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %"class.WTF::CrossThreadOnceFunction"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = bitcast %"class.base::SingleThreadTaskRunner"* %28 to %"class.base::TaskRunner"*
  %55 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %48, i64* %57, align 8, !alias.scope !44
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %56, align 8, !noalias !44
  %58 = bitcast %"class.base::SingleThreadTaskRunner"* %28 to i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)***
  %59 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)**, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*** %58, align 8
  %60 = load i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)*, i1 (%"class.base::TaskRunner"*, %"class.base::Location"*, %"class.base::OnceCallback"*, i64)** %59, align 8
  %61 = call zeroext i1 %60(%"class.base::TaskRunner"* %54, %"class.base::Location"* nonnull dereferenceable(32) %9, %"class.base::OnceCallback"* nonnull %7, i64 0) #11
  %62 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %62) #11
  %63 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %63) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %64 = getelementptr inbounds %"class.WTF::CrossThreadOnceFunction", %"class.WTF::CrossThreadOnceFunction"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %64) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #11
  %65 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %65, label %74, label %66

66:                                               ; preds = %26
  %67 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = atomicrmw sub i32* %68, i32 1 acq_rel
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %67, i64 -2
  %73 = bitcast %"class.base::RefCountedThreadSafe"* %72 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %73) #11
  br label %74

74:                                               ; preds = %26, %66, %71
  %75 = call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %23) #11
  call void @_ZN5blink16ExecutionContext18DispatchErrorEventEPNS_10ErrorEventENS_20SanitizeScriptErrorsE(%"class.blink::ExecutionContext"* %75, %"class.blink::ErrorEvent"* %16, i32 0) #11
  br label %76

76:                                               ; preds = %4, %74, %14, %22
  %77 = icmp eq %"class.blink::SourceLocation"* %2, null
  br i1 %77, label %80, label %78

78:                                               ; preds = %76
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %2) #11
  %79 = bitcast %"class.blink::SourceLocation"* %2 to i8*
  call void @free(i8* %79) #11
  br label %80

80:                                               ; preds = %76, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ErrorEvent"* @_ZN5blink10ErrorEvent6CreateERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEEPNS_15DOMWrapperWorldE(%"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*, %"class.blink::DOMWrapperWorld"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.1058", align 8
  %5 = alloca %"class.blink::DOMWrapperWorld"*, align 8
  %6 = alloca %"class.blink::ScriptValue", align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1058"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::SourceLocation"* %1, %"class.blink::SourceLocation"** %7, align 8
  store %"class.blink::DOMWrapperWorld"* %2, %"class.blink::DOMWrapperWorld"** %5, align 8
  %8 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %8) #11
  %9 = bitcast %"class.blink::ScriptValue"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false)
  %10 = call %"class.blink::ErrorEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_(%"class.WTF::String"* dereferenceable(8) %0, %"class.std::__1::unique_ptr.1058"* nonnull dereferenceable(8) %4, %"class.blink::ScriptValue"* nonnull dereferenceable(24) %6, %"class.blink::DOMWrapperWorld"** nonnull dereferenceable(8) %5) #11
  %11 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %6, i64 0, i32 1, i32 1, i32 0
  %12 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %11, align 8
  %13 = icmp eq %"class.blink::DOMWrapperWorld"* %12, null
  br i1 %13, label %21, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %12, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %15) #11
  %16 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %12) #11
  %20 = bitcast %"class.blink::DOMWrapperWorld"* %12 to i8*
  call void @free(i8* %20) #11
  br label %21

21:                                               ; preds = %3, %14, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %8) #11
  %22 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %7, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %7, align 8
  %23 = icmp eq %"class.blink::SourceLocation"* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  call void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"* nonnull %22) #11
  %25 = bitcast %"class.blink::SourceLocation"* %22 to i8*
  call void @free(i8* %25) #11
  br label %26

26:                                               ; preds = %21, %24
  ret %"class.blink::ErrorEvent"* %10
}

declare %"class.blink::SourceLocation"* @_ZNK5blink14SourceLocation5CloneEv(%"class.blink::SourceLocation"*) local_unnamed_addr #1

declare void @_ZN5blink26DedicatedWorkerObjectProxy25ProcessUnhandledExceptionEiPNS_12WorkerThreadE(%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*) #1

declare void @_ZN5blink16ExecutionContext18DispatchErrorEventEPNS_10ErrorEventENS_20SanitizeScriptErrorsE(%"class.blink::ExecutionContext"*, %"class.blink::ErrorEvent"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink29DedicatedWorkerMessagingProxy5TraceEPNS_7VisitorE(%"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::WeakMember.265"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::WeakMember.265"* %3 to i8*
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, i64 6
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %9, i8* %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15DedicatedWorkerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_15DedicatedWorkerEEEvRKNS_14LivenessBrokerEPKv) #11
  br label %14

14:                                               ; preds = %2, %7
  %15 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  tail call void @_ZNK5blink26ThreadedMessagingProxyBase5TraceEPNS_7VisitorE(%"class.blink::ThreadedMessagingProxyBase"* %15, %"class.blink::Visitor"* %1) #11
  ret void
}

declare void @_ZNK5blink26ThreadedMessagingProxyBase5TraceEPNS_7VisitorE(%"class.blink::ThreadedMessagingProxyBase"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate32IsHeapLimitIncreasedForDebuggingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::WorkerThread"* @_ZN5blink29DedicatedWorkerMessagingProxy18CreateWorkerThreadEv(%"class.blink::DedicatedWorkerMessagingProxy"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.mojo::PendingRemote.325", align 4
  %3 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 0
  %4 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink26ThreadedMessagingProxyBase19GetExecutionContextEv(%"class.blink::ThreadedMessagingProxyBase"* %3) #11
  %5 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %6 = load %"class.blink::DedicatedWorkerObjectProxy"*, %"class.blink::DedicatedWorkerObjectProxy"** %5, align 8
  %7 = bitcast %"class.mojo::PendingRemote.325"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = tail call i8* @_Znwm(i64 352) #12
  %9 = bitcast i8* %8 to %"class.blink::DedicatedWorkerThread"*
  %10 = getelementptr inbounds %"class.mojo::PendingRemote.325", %"class.mojo::PendingRemote.325"* %2, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::DedicatedWorkerMessagingProxy", %"class.blink::DedicatedWorkerMessagingProxy"* %0, i64 0, i32 5, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %10, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %11) #11
  call void @_ZN5blink21DedicatedWorkerThreadC1EPNS_16ExecutionContextERNS_26DedicatedWorkerObjectProxyEN4mojo13PendingRemoteINS_5mojom5blink19DedicatedWorkerHostEEE(%"class.blink::DedicatedWorkerThread"* nonnull %9, %"class.blink::ExecutionContext"* %4, %"class.blink::DedicatedWorkerObjectProxy"* dereferenceable(56) %6, %"class.mojo::PendingRemote.325"* nonnull %2) #11
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  %12 = bitcast i8* %8 to %"class.blink::WorkerThread"*
  ret %"class.blink::WorkerThread"* %12
}

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"*) unnamed_addr #3

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::CrossThreadFetchClientSettingsObjectData"* @_ZNSt3__111make_uniqueIN5blink40CrossThreadFetchClientSettingsObjectDataEJNS1_4KURLES3_13scoped_refptrINS1_14SecurityOriginEERKN7network5mojom14ReferrerPolicyEN3WTF6StringERKNS1_10HttpsStateERKNS1_16AllowedByNosniff13MimeTypeCheckERKNS8_14IPAddressSpaceERKNS1_5mojom21InsecureRequestPolicyERKNSC_7HashSetIjNSC_13AlreadyHashedENSC_10HashTraitsIjEENSC_18PartitionAllocatorEEEEEENS_11__unique_ifIT_E15__unique_singleEDpOT0_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %class.scoped_refptr.375* dereferenceable(8), i32* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::HashSet.310"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::HashSet.310", align 8
  %14 = tail call noalias i8* @malloc(i64 288) #11
  %15 = bitcast i8* %14 to %"struct.blink::CrossThreadFetchClientSettingsObjectData"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %11, %"class.blink::KURL"* dereferenceable(112) %0) #11
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* nonnull %12, %"class.blink::KURL"* dereferenceable(112) %1) #11
  %16 = getelementptr inbounds %class.scoped_refptr.375, %class.scoped_refptr.375* %2, i64 0, i32 0
  %17 = bitcast %class.scoped_refptr.375* %2 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.blink::SecurityOrigin"* null, %"class.blink::SecurityOrigin"** %16, align 8
  %19 = load i32, i32* %3, align 4
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %21 = bitcast %"class.WTF::String"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %20, align 8
  %23 = load i32, i32* %5, align 4
  %24 = load i32, i32* %6, align 4
  %25 = load i32, i32* %7, align 4
  %26 = load i32, i32* %8, align 4
  %27 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %13, i64 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %9, i64 0, i32 0, i32 2
  %29 = bitcast %"class.WTF::HashSet.310"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 20, i1 false) #11
  %30 = load i32, i32* %28, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %69, label %32

32:                                               ; preds = %10
  call void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.311"* nonnull %27, i32 %30) #11
  %33 = load i32, i32* %28, align 4
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %9, i64 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %9, i64 0, i32 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %36, i64 %39
  br i1 %34, label %69, label %41

41:                                               ; preds = %32
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %41, %48
  %44 = phi i32* [ %49, %48 ], [ %36, %41 ]
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, 1
  %47 = icmp ult i32 %46, 2
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds i32, i32* %44, i64 1
  %50 = icmp eq i32* %49, %40
  br i1 %50, label %69, label %43

51:                                               ; preds = %43, %41
  %52 = phi i32* [ %36, %41 ], [ %44, %43 ]
  %53 = icmp eq i32* %52, %40
  br i1 %53, label %69, label %54

54:                                               ; preds = %51, %67
  %55 = phi i32* [ %60, %67 ], [ %52, %51 ]
  %56 = call { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.311"* nonnull %27, i32* dereferenceable(4) %55, i32* dereferenceable(4) %55) #11
  %57 = getelementptr inbounds i32, i32* %55, i64 1
  %58 = icmp eq i32* %57, %40
  br i1 %58, label %69, label %59

59:                                               ; preds = %54, %64
  %60 = phi i32* [ %65, %64 ], [ %57, %54 ]
  %61 = load i32, i32* %60, align 4
  %62 = add i32 %61, 1
  %63 = icmp ult i32 %62, 2
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = getelementptr inbounds i32, i32* %60, i64 1
  %66 = icmp eq i32* %65, %40
  br i1 %66, label %69, label %59

67:                                               ; preds = %59
  %68 = icmp eq i32* %60, %40
  br i1 %68, label %69, label %54

69:                                               ; preds = %48, %67, %54, %64, %51, %32, %10
  %70 = bitcast i8* %14 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %70, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #11
  %71 = getelementptr inbounds i8, i8* %14, i64 112
  %72 = bitcast i8* %71 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %72, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #11
  %73 = getelementptr inbounds i8, i8* %14, i64 224
  %74 = bitcast i8* %73 to i64*
  store i64 %18, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %14, i64 232
  %76 = bitcast i8* %75 to i32*
  store i32 %19, i32* %76, align 8
  %77 = getelementptr inbounds i8, i8* %14, i64 240
  %78 = bitcast i8* %77 to i64*
  store i64 %22, i64* %78, align 8
  %79 = getelementptr inbounds i8, i8* %14, i64 248
  %80 = bitcast i8* %79 to i32*
  store i32 %23, i32* %80, align 8
  %81 = getelementptr inbounds i8, i8* %14, i64 252
  %82 = bitcast i8* %81 to i32*
  store i32 %24, i32* %82, align 4
  %83 = getelementptr inbounds i8, i8* %14, i64 256
  %84 = bitcast i8* %83 to i32*
  store i32 %25, i32* %84, align 8
  %85 = getelementptr inbounds i8, i8* %14, i64 260
  %86 = bitcast i8* %85 to i32*
  store i32 %26, i32* %86, align 4
  %87 = getelementptr inbounds i8, i8* %14, i64 264
  %88 = getelementptr inbounds i8, i8* %14, i64 272
  %89 = bitcast i8* %88 to i32*
  %90 = getelementptr inbounds i8, i8* %14, i64 276
  %91 = bitcast i8* %90 to i32*
  %92 = getelementptr inbounds i8, i8* %14, i64 280
  %93 = bitcast i8* %92 to i32*
  %94 = bitcast %"class.WTF::HashSet.310"* %13 to i64*
  %95 = bitcast i8* %87 to i64*
  store i64 0, i64* %95, align 8
  %96 = load i64, i64* %94, align 8
  %97 = bitcast i8* %87 to i64*
  store atomic i64 0, i64* %94 monotonic, align 8
  store atomic i64 %96, i64* %97 monotonic, align 8
  %98 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %13, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  store i32 %99, i32* %89, align 4
  store i32 0, i32* %98, align 8
  %100 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %13, i64 0, i32 0, i32 2
  %101 = load i32, i32* %100, align 4
  store i32 %101, i32* %91, align 4
  store i32 0, i32* %100, align 4
  %102 = getelementptr inbounds %"class.WTF::HashSet.310", %"class.WTF::HashSet.310"* %13, i64 0, i32 0, i32 3
  %103 = load i32, i32* %102, align 8
  %104 = and i32 %103, 2147483647
  store i32 %104, i32* %93, align 8
  %105 = and i32 %103, -2147483648
  store i32 %105, i32* %102, align 8
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #11
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #11
  ret %"struct.blink::CrossThreadFetchClientSettingsObjectData"* %15
}

declare void @_ZNK5blink4KURL4CopyEv(%"class.blink::KURL"* sret, %"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZNK5blink14SecurityOrigin12IsolatedCopyEv(%"class.blink::SecurityOrigin"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String12IsolatedCopyEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.311"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #11
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0)) #11
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #11
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 2
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #11
  %30 = bitcast i8* %29 to i32*
  %31 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.311"* %0, i32* %30, i32 %17, i32* null) #11
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.311"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.311"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %99
  %19 = bitcast %"class.WTF::HashTable.311"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %100, %18 ]
  %23 = phi i32* [ null, %10 ], [ %103, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #11
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %99
  %32 = phi i64 [ %17, %13 ], [ %100, %99 ]
  %33 = phi i32 [ %7, %13 ], [ %101, %99 ]
  %34 = phi i32* [ %16, %13 ], [ %102, %99 ]
  %35 = phi i32* [ null, %13 ], [ %103, %99 ]
  %36 = phi i32 [ 0, %13 ], [ %104, %99 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %99, label %42

42:                                               ; preds = %31
  %43 = and i32 %39, %14
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i32, i32* %1, i64 %44
  %46 = ptrtoint i32* %45 to i64
  %47 = load i32, i32* %45, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %66, label %49

49:                                               ; preds = %42
  %50 = xor i32 %39, -1
  %51 = lshr i32 %39, 23
  %52 = add i32 %51, %50
  %53 = shl i32 %52, 12
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 7
  %56 = xor i32 %55, %54
  %57 = shl i32 %56, 2
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 20
  %60 = xor i32 %59, %58
  %61 = or i32 %60, 1
  %62 = zext i32 %61 to i64
  br label %72

63:                                               ; preds = %79
  %64 = ptrtoint i32* %86 to i64
  %65 = inttoptr i64 %81 to i32*
  br label %66

66:                                               ; preds = %63, %42
  %67 = phi i64 [ %64, %63 ], [ %46, %42 ]
  %68 = phi i32* [ %65, %63 ], [ null, %42 ]
  %69 = icmp eq i32* %68, null
  %70 = ptrtoint i32* %68 to i64
  %71 = select i1 %69, i64 %67, i64 %70
  br label %90

72:                                               ; preds = %79, %49
  %73 = phi i64 [ 0, %49 ], [ %81, %79 ]
  %74 = phi i32 [ %47, %49 ], [ %88, %79 ]
  %75 = phi i64 [ %46, %49 ], [ %87, %79 ]
  %76 = phi i64 [ %44, %49 ], [ %85, %79 ]
  %77 = phi i64 [ 0, %49 ], [ %83, %79 ]
  %78 = icmp eq i32 %74, %39
  br i1 %78, label %90, label %79

79:                                               ; preds = %72
  %80 = icmp eq i32 %74, -1
  %81 = select i1 %80, i64 %75, i64 %73
  %82 = icmp eq i64 %77, 0
  %83 = select i1 %82, i64 %62, i64 %77
  %84 = add i64 %83, %76
  %85 = and i64 %84, %15
  %86 = getelementptr inbounds i32, i32* %1, i64 %85
  %87 = ptrtoint i32* %86 to i64
  %88 = load i32, i32* %86, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %63, label %72

90:                                               ; preds = %72, %66
  %91 = phi i64 [ %71, %66 ], [ %75, %72 ]
  %92 = inttoptr i64 %91 to i32*
  store i32 %39, i32* %92, align 4
  %93 = load i32*, i32** %9, align 8
  %94 = getelementptr inbounds i32, i32* %93, i64 %37
  %95 = icmp eq i32* %94, %3
  %96 = select i1 %95, i32* %92, i32* %35
  %97 = load i32, i32* %6, align 8
  %98 = ptrtoint i32* %93 to i64
  br label %99

99:                                               ; preds = %31, %90
  %100 = phi i64 [ %32, %31 ], [ %98, %90 ]
  %101 = phi i32 [ %33, %31 ], [ %97, %90 ]
  %102 = phi i32* [ %34, %31 ], [ %93, %90 ]
  %103 = phi i32* [ %35, %31 ], [ %96, %90 ]
  %104 = add i32 %36, 1
  %105 = icmp eq i32 %104, %101
  br i1 %105, label %18, label %31
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS2_S4_S5_EERKjSB_EENS_18HashTableAddResultIS6_jEEOT0_OT1_(%"class.WTF::HashTable.311"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.311"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = and i32 %16, %14
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds i32, i32* %11, i64 %18
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %62, label %22

22:                                               ; preds = %10
  %23 = xor i32 %16, -1
  %24 = lshr i32 %16, 23
  %25 = add i32 %24, %23
  %26 = shl i32 %25, 12
  %27 = xor i32 %26, %25
  %28 = lshr i32 %27, 7
  %29 = xor i32 %28, %27
  %30 = shl i32 %29, 2
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 20
  %33 = xor i32 %32, %31
  %34 = or i32 %33, 1
  %35 = zext i32 %34 to i64
  br label %36

36:                                               ; preds = %22, %43
  %37 = phi i32 [ %20, %22 ], [ %51, %43 ]
  %38 = phi i32* [ %19, %22 ], [ %50, %43 ]
  %39 = phi i32* [ null, %22 ], [ %45, %43 ]
  %40 = phi i64 [ %18, %22 ], [ %49, %43 ]
  %41 = phi i64 [ 0, %22 ], [ %47, %43 ]
  %42 = icmp eq i32 %37, %16
  br i1 %42, label %76, label %43

43:                                               ; preds = %36
  %44 = icmp eq i32 %37, -1
  %45 = select i1 %44, i32* %38, i32* %39
  %46 = icmp eq i64 %41, 0
  %47 = select i1 %46, i64 %35, i64 %41
  %48 = add i64 %47, %40
  %49 = and i64 %48, %15
  %50 = getelementptr inbounds i32, i32* %11, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %36

53:                                               ; preds = %43
  %54 = icmp eq i32* %45, null
  br i1 %54, label %62, label %55

55:                                               ; preds = %53
  store i32 0, i32* %45, align 4
  %56 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 3
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 2147483647
  %59 = and i32 %58, 2147483647
  %60 = and i32 %57, -2147483648
  %61 = or i32 %59, %60
  store i32 %61, i32* %56, align 8
  br label %62

62:                                               ; preds = %10, %53, %55
  %63 = phi i32* [ %45, %55 ], [ %50, %53 ], [ %19, %10 ]
  %64 = load i32, i32* %2, align 4
  store i32 %64, i32* %63, align 4
  %65 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = add i32 %69, %67
  %71 = shl i32 %70, 1
  %72 = load i32, i32* %12, align 8
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %76, label %74

74:                                               ; preds = %62
  %75 = tail call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.311"* %0, i32* %63)
  br label %76

76:                                               ; preds = %36, %62, %74
  %77 = phi i8 [ 1, %62 ], [ 1, %74 ], [ 0, %36 ]
  %78 = phi i32* [ %63, %62 ], [ %75, %74 ], [ %38, %36 ]
  %79 = insertvalue { i32*, i8 } undef, i32* %78, 0
  %80 = insertvalue { i32*, i8 } %79, i8 %77, 1
  ret { i32*, i8 } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE6ExpandEPj(%"class.WTF::HashTable.311"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.311", %"class.WTF::HashTable.311"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #11
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #11
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.6, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #11
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #11
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #11
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #11
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIjjNS_17IdentityExtractorENS_13AlreadyHashedENS_10HashTraitsIjEES4_NS_18PartitionAllocatorEE8RehashToEPjjS7_(%"class.WTF::HashTable.311"* %0, i32* %36, i32 %32, i32* %1) #11
  ret i32* %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #11
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #11
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #11
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #11
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #11
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #11
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = alloca %"struct.blink::BlinkTransferableMessage", align 8
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"struct.blink::BlinkTransferableMessage"*
  %9 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %4, i64 14
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %9 to %"class.blink::WorkerThread"**
  %11 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %10, align 8
  %12 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %15 = bitcast void ()** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"struct.blink::BlinkTransferableMessage"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %17) #11
  %18 = getelementptr inbounds i8, i8* %6, i64 %16
  %19 = bitcast i8* %18 to %"class.blink::DedicatedWorkerObjectProxy"*
  %20 = and i64 %13, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %13, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)**
  %28 = load void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %13 to void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi void (%"class.blink::DedicatedWorkerObjectProxy"*, %"struct.blink::BlinkTransferableMessage"*, %"class.blink::WorkerThread"*)* [ %28, %22 ], [ %30, %29 ]
  call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* nonnull %2, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %8) #11
  call void %32(%"class.blink::DedicatedWorkerObjectProxy"* %19, %"struct.blink::BlinkTransferableMessage"* nonnull %2, %"class.blink::WorkerThread"* %11) #11
  call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* nonnull %2) #11
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %17) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFvNS2_24BlinkTransferableMessageEPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EES4_NSA_IS5_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"struct.blink::BlinkTransferableMessage"*
  tail call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN5blink18MessagePortChannelD1Ev(%"class.blink::MessagePortChannel"*) unnamed_addr #3

declare void @_ZN5blink12MessageEventC1E13scoped_refptrINS_21SerializedScriptValueEERKN3WTF6StringES7_PNS_11EventTargetEPNS_10HeapVectorINS_6MemberINS_11MessagePortEEELj0EEEPNS_14UserActivationE(%"class.blink::MessageEvent"*, %"class.blink::SerializedScriptValue"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::EventTarget"*, %"class.blink::HeapVector.920"*, %"class.blink::UserActivation"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #11
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #11
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.278"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.278"*)) #11
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #11
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #11
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #11
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0), i8* %40, i8* %41) #11
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #11
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.10, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #11
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #11
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #11
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !3

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #11
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #11
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.278"*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ErrorEvent"* @_ZN5blink25MakeGarbageCollectedTraitINS_10ErrorEventEE4CallIJRKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS8_14default_deleteISA_EEEENS_11ScriptValueERPNS_15DOMWrapperWorldEEEEPS1_DpOT_(%"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.1058"* dereferenceable(8), %"class.blink::ScriptValue"* dereferenceable(24), %"class.blink::DOMWrapperWorld"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.blink::ScriptValue", align 8
  %6 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 152) #11
  %7 = bitcast i8* %6 to %"class.blink::ErrorEvent"*
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.1058", %"class.std::__1::unique_ptr.1058"* %1, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::SourceLocation"*, %"class.blink::SourceLocation"** %8, align 8
  store %"class.blink::SourceLocation"* null, %"class.blink::SourceLocation"** %8, align 8
  %10 = bitcast %"class.blink::ScriptValue"* %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.blink::ScriptValue"* %5 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1
  %14 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %13, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::WorldSafeV8Reference", %"class.blink::WorldSafeV8Reference"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64* null, i64** %15, align 8
  %16 = icmp eq %"class.blink::ScriptValue"* %5, %2
  br i1 %16, label %22, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i64*, i64** %18, align 8
  %20 = icmp eq i64* %19, null
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  call void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64** %18, i64** %15) #11
  br label %22

22:                                               ; preds = %21, %17, %4
  call void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.1006"* dereferenceable(8) %14) #11
  %23 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %2, i64 0, i32 1, i32 1, i32 0
  %24 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ScriptValue", %"class.blink::ScriptValue"* %5, i64 0, i32 1, i32 1, i32 0
  store %"class.blink::DOMWrapperWorld"* %24, %"class.blink::DOMWrapperWorld"** %25, align 8
  %26 = icmp eq %"class.blink::DOMWrapperWorld"* %24, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %24, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %28) #11
  br label %29

29:                                               ; preds = %22, %27
  %30 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %3, align 8
  call void @_ZN5blink10ErrorEventC1ERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEENS_11ScriptValueEPNS_15DOMWrapperWorldE(%"class.blink::ErrorEvent"* %7, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::SourceLocation"* %9, %"class.blink::ScriptValue"* nonnull %5, %"class.blink::DOMWrapperWorld"* %30) #11
  %31 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %25, align 8
  %32 = icmp eq %"class.blink::DOMWrapperWorld"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %31, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %34) #11
  %35 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %31, i64 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %33
  call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %31) #11
  %39 = bitcast %"class.blink::DOMWrapperWorld"* %31 to i8*
  call void @free(i8* %39) #11
  br label %40

40:                                               ; preds = %29, %33, %38
  %41 = getelementptr inbounds i8, i8* %6, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  ret %"class.blink::ErrorEvent"* %7
}

declare void @_ZN5blink10ErrorEventC1ERKN3WTF6StringENSt3__110unique_ptrINS_14SourceLocationENS5_14default_deleteIS7_EEEENS_11ScriptValueEPNS_15DOMWrapperWorldE(%"class.blink::ErrorEvent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceLocation"*, %"class.blink::ScriptValue"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

declare void @_ZN2v82V825CopyTracedGlobalReferenceEPKPKmPPm(i64**, i64**) local_unnamed_addr #1

declare void @_ZN5blink25UnifiedHeapMarkingVisitor12WriteBarrierERKNS_23TraceWrapperV8ReferenceIN2v85ValueEEE(%"class.blink::TraceWrapperV8Reference.1006"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEiNSA_IS5_EEEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %5 = load i8*, i8** %4, align 8
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i32*
  %8 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %8 to %"class.blink::WorkerThread"**
  %10 = load %"class.blink::WorkerThread"*, %"class.blink::WorkerThread"** %9, align 8
  %11 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %14 = bitcast void ()** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 %15
  %17 = bitcast i8* %16 to %"class.blink::DedicatedWorkerObjectProxy"*
  %18 = and i64 %12, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %1
  %21 = bitcast i8* %16 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = add i64 %12, -1
  %24 = getelementptr i8, i8* %22, i64 %23
  %25 = bitcast i8* %24 to void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)**
  %26 = load void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)*, void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)** %25, align 8
  br label %29

27:                                               ; preds = %1
  %28 = inttoptr i64 %12 to void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)*
  br label %29

29:                                               ; preds = %20, %27
  %30 = phi void (%"class.blink::DedicatedWorkerObjectProxy"*, i32, %"class.blink::WorkerThread"*)* [ %26, %20 ], [ %28, %27 ]
  %31 = load i32, i32* %7, align 4
  tail call void %30(%"class.blink::DedicatedWorkerObjectProxy"* %17, i32 %31, %"class.blink::WorkerThread"* %10) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink26DedicatedWorkerObjectProxyEFviPNS2_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS3_EEiNS9_IS4_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14SourceLocationD1Ev(%"class.blink::SourceLocation"*) unnamed_addr #3

declare void @_ZN5blink26DedicatedWorkerObjectProxyC1EPNS_29DedicatedWorkerMessagingProxyEPNS_33ParentExecutionContextTaskRunnersERKN4util9TokenTypeINS_30DedicatedWorkerTokenTypeMarkerEEE(%"class.blink::DedicatedWorkerObjectProxy"*, %"class.blink::DedicatedWorkerMessagingProxy"*, %"class.blink::ParentExecutionContextTaskRunners"*, %"class.util::TokenType"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25GlobalScopeCreationParamsD2Ev(%"struct.blink::GlobalScopeCreationParams"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 25, i32 0, i32 0, i32 0
  %3 = load %"class.blink::PermissionsPolicy"*, %"class.blink::PermissionsPolicy"** %2, align 8
  store %"class.blink::PermissionsPolicy"* null, %"class.blink::PermissionsPolicy"** %2, align 8
  %4 = icmp eq %"class.blink::PermissionsPolicy"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"* nonnull %3) #11
  %6 = bitcast %"class.blink::PermissionsPolicy"* %3 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 23, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* %8) #11
  %9 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 22, i32 0, i32 1
  %10 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %9 to i64*
  %11 = load atomic i64, i64* %10 acquire, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %27, label %13

13:                                               ; preds = %7
  %14 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %15 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %15) #11
  %16 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %17 = load atomic i64, i64* %10 monotonic, align 8
  %18 = inttoptr i64 %17 to %"class.blink::PersistentNode"*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %26, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %16, i64 0, i32 0, i32 0
  %22 = bitcast %"class.blink::CrossThreadPersistentRegion"* %16 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = inttoptr i64 %17 to i64*
  store i64 %23, i64* %24, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %25, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %21, align 8
  br label %26

26:                                               ; preds = %20, %13
  store atomic i64 0, i64* %10 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %15) #11
  br label %27

27:                                               ; preds = %7, %26
  %28 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 19, i32 0, i32 0, i32 0
  %29 = load %"class.blink::WorkerSettings"*, %"class.blink::WorkerSettings"** %28, align 8
  store %"class.blink::WorkerSettings"* null, %"class.blink::WorkerSettings"** %28, align 8
  %30 = icmp eq %"class.blink::WorkerSettings"* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %29, i64 0, i32 4
  tail call void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"* %32) #11
  %33 = getelementptr inbounds %"class.blink::WorkerSettings", %"class.blink::WorkerSettings"* %29, i64 0, i32 0
  tail call void @free(i8* %33) #11
  br label %34

34:                                               ; preds = %27, %31
  %35 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 16, i32 0, i32 0, i32 0
  %36 = load %"class.blink::WebContentSettingsClient"*, %"class.blink::WebContentSettingsClient"** %35, align 8
  store %"class.blink::WebContentSettingsClient"* null, %"class.blink::WebContentSettingsClient"** %35, align 8
  %37 = icmp eq %"class.blink::WebContentSettingsClient"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = bitcast %"class.blink::WebContentSettingsClient"* %36 to void (%"class.blink::WebContentSettingsClient"*)***
  %40 = load void (%"class.blink::WebContentSettingsClient"*)**, void (%"class.blink::WebContentSettingsClient"*)*** %39, align 8
  %41 = getelementptr inbounds void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %40, i64 17
  %42 = load void (%"class.blink::WebContentSettingsClient"*)*, void (%"class.blink::WebContentSettingsClient"*)** %41, align 8
  tail call void %42(%"class.blink::WebContentSettingsClient"* nonnull %36) #11
  br label %43

43:                                               ; preds = %34, %38
  %44 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 15, i32 0, i32 1
  %45 = bitcast %"class.blink::CrossThreadPersistentNodePtr"* %44 to i64*
  %46 = load atomic i64, i64* %45 acquire, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %62, label %48

48:                                               ; preds = %43
  %49 = tail call dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() #11
  %50 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %49, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %50) #11
  %51 = tail call dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() #11
  %52 = load atomic i64, i64* %45 monotonic, align 8
  %53 = inttoptr i64 %52 to %"class.blink::PersistentNode"*
  %54 = icmp eq i64 %52, 0
  br i1 %54, label %61, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"class.blink::CrossThreadPersistentRegion", %"class.blink::CrossThreadPersistentRegion"* %51, i64 0, i32 0, i32 0
  %57 = bitcast %"class.blink::CrossThreadPersistentRegion"* %51 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = inttoptr i64 %52 to i64*
  store i64 %58, i64* %59, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %53, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %60, align 8
  store %"class.blink::PersistentNode"* %53, %"class.blink::PersistentNode"** %56, align 8
  br label %61

61:                                               ; preds = %55, %48
  store atomic i64 0, i64* %45 release, align 8
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %50) #11
  br label %62

62:                                               ; preds = %43, %61
  %63 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 11, i32 0
  %64 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %63, align 8
  %65 = icmp eq %"class.blink::SecurityOrigin"* %64, null
  br i1 %65, label %73, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %64, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %67) #11
  %68 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %64, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %73

71:                                               ; preds = %66
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %64) #11
  %72 = bitcast %"class.blink::SecurityOrigin"* %64 to i8*
  tail call void @free(i8* %72) #11
  br label %73

73:                                               ; preds = %62, %66, %71
  %74 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %75 = load %"class.WTF::Vector.520"*, %"class.WTF::Vector.520"** %74, align 8
  store %"class.WTF::Vector.520"* null, %"class.WTF::Vector.520"** %74, align 8
  %76 = icmp eq %"class.WTF::Vector.520"* %75, null
  br i1 %76, label %117, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.WTF::Vector.520", %"class.WTF::Vector.520"* %75, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::String"*, %"class.WTF::String"** %78, align 8
  %80 = icmp eq %"class.WTF::String"* %79, null
  br i1 %80, label %115, label %81, !prof !2

81:                                               ; preds = %77
  %82 = bitcast %"class.WTF::String"* %79 to i8*
  %83 = getelementptr inbounds %"class.WTF::Vector.520", %"class.WTF::Vector.520"* %75, i64 0, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %113, label %86, !prof !3

86:                                               ; preds = %81
  %87 = zext i32 %84 to i64
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 %87
  br label %89

89:                                               ; preds = %107, %86
  %90 = phi %"class.WTF::String"* [ %108, %107 ], [ %79, %86 ]
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #11
  br label %107

107:                                              ; preds = %106, %103, %89
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %90, i64 1
  %109 = icmp eq %"class.WTF::String"* %108, %88
  br i1 %109, label %110, label %89

110:                                              ; preds = %107
  store i32 0, i32* %83, align 4
  %111 = bitcast %"class.WTF::Vector.520"* %75 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %110, %81
  %114 = phi i8* [ %112, %110 ], [ %82, %81 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %114) #11
  store %"class.WTF::String"* null, %"class.WTF::String"** %78, align 8
  br label %115

115:                                              ; preds = %113, %77
  %116 = bitcast %"class.WTF::Vector.520"* %75 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %116) #11
  br label %117

117:                                              ; preds = %73, %115
  %118 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 7
  %119 = getelementptr inbounds %"class.WTF::Vector.496", %"class.WTF::Vector.496"* %118, i64 0, i32 0, i32 0, i32 0
  %120 = load %"class.mojo::StructPtr"*, %"class.mojo::StructPtr"** %119, align 8
  %121 = icmp eq %"class.mojo::StructPtr"* %120, null
  br i1 %121, label %145, label %122, !prof !2

122:                                              ; preds = %117
  %123 = bitcast %"class.mojo::StructPtr"* %120 to i8*
  %124 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %143, label %127, !prof !3

127:                                              ; preds = %122
  %128 = zext i32 %125 to i64
  %129 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %120, i64 %128
  br label %130

130:                                              ; preds = %137, %127
  %131 = phi %"class.mojo::StructPtr"* [ %138, %137 ], [ %120, %127 ]
  %132 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = load %"class.network::mojom::blink::ContentSecurityPolicy"*, %"class.network::mojom::blink::ContentSecurityPolicy"** %132, align 8
  store %"class.network::mojom::blink::ContentSecurityPolicy"* null, %"class.network::mojom::blink::ContentSecurityPolicy"** %132, align 8
  %134 = icmp eq %"class.network::mojom::blink::ContentSecurityPolicy"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %130
  tail call void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"* nonnull %133) #11
  %136 = bitcast %"class.network::mojom::blink::ContentSecurityPolicy"* %133 to i8*
  tail call void @_ZdlPv(i8* %136) #12
  br label %137

137:                                              ; preds = %135, %130
  %138 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %131, i64 1
  %139 = icmp eq %"class.mojo::StructPtr"* %138, %129
  br i1 %139, label %140, label %130

140:                                              ; preds = %137
  store i32 0, i32* %124, align 4
  %141 = bitcast %"class.WTF::Vector.496"* %118 to i8**
  %142 = load i8*, i8** %141, align 8
  br label %143

143:                                              ; preds = %140, %122
  %144 = phi i8* [ %142, %140 ], [ %123, %122 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %144) #11
  store %"class.mojo::StructPtr"* null, %"class.mojo::StructPtr"** %119, align 8
  br label %145

145:                                              ; preds = %117, %143
  %146 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 6, i32 0
  %147 = load %"class.blink::WebWorkerFetchContext"*, %"class.blink::WebWorkerFetchContext"** %146, align 8
  %148 = icmp eq %"class.blink::WebWorkerFetchContext"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::WebWorkerFetchContext", %"class.blink::WebWorkerFetchContext"* %147, i64 0, i32 1
  %151 = getelementptr inbounds %"class.base::RefCounted.556", %"class.base::RefCounted.556"* %150, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %151) #11
  %152 = getelementptr inbounds %"class.base::RefCounted.556", %"class.base::RefCounted.556"* %150, i64 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %162

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.base::RefCounted.556", %"class.base::RefCounted.556"* %150, i64 -2
  %157 = bitcast %"class.base::RefCounted.556"* %156 to %"class.blink::WebWorkerFetchContext"*
  %158 = bitcast %"class.base::RefCounted.556"* %156 to void (%"class.blink::WebWorkerFetchContext"*)***
  %159 = load void (%"class.blink::WebWorkerFetchContext"*)**, void (%"class.blink::WebWorkerFetchContext"*)*** %158, align 8
  %160 = getelementptr inbounds void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %159, i64 1
  %161 = load void (%"class.blink::WebWorkerFetchContext"*)*, void (%"class.blink::WebWorkerFetchContext"*)** %160, align 8
  tail call void %161(%"class.blink::WebWorkerFetchContext"* nonnull %157) #11
  br label %162

162:                                              ; preds = %145, %149, %155
  %163 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 5
  tail call void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"* %163) #11
  %164 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 4, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %180, label %167

167:                                              ; preds = %162
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #11
  br label %180

180:                                              ; preds = %162, %176, %179
  %181 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 3, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #11
  br label %197

197:                                              ; preds = %180, %193, %196
  %198 = getelementptr inbounds %"struct.blink::GlobalScopeCreationParams", %"struct.blink::GlobalScopeCreationParams"* %0, i64 0, i32 0
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %198) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17UserAgentMetadataD2Ev(%"struct.blink::UserAgentMetadata"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 5
  %3 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #12
  br label %10

10:                                               ; preds = %1, %7
  %11 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 4
  %12 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %10, %16
  %20 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 3
  %21 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %21, i64 0, i32 1, i32 0
  %23 = load i8, i8* %22, align 1
  %24 = icmp slt i8 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  tail call void @_ZdlPv(i8* %27) #12
  br label %28

28:                                               ; preds = %19, %25
  %29 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 2
  %30 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %37

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  tail call void @_ZdlPv(i8* %36) #12
  br label %37

37:                                               ; preds = %28, %34
  %38 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 1
  %39 = bitcast %"class.std::__1::basic_string"* %38 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %40 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %39, i64 0, i32 1, i32 0
  %41 = load i8, i8* %40, align 1
  %42 = icmp slt i8 %41, 0
  br i1 %42, label %43, label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  tail call void @_ZdlPv(i8* %45) #12
  br label %46

46:                                               ; preds = %37, %43
  %47 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %47, align 8
  %49 = icmp eq %"struct.blink::UserAgentBrandVersion"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.blink::UserAgentBrandVersion"* %48 to i8*
  %52 = getelementptr inbounds %"struct.blink::UserAgentMetadata", %"struct.blink::UserAgentMetadata"* %0, i64 0, i32 0, i32 0, i32 1
  %53 = load %"struct.blink::UserAgentBrandVersion"*, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  %54 = icmp eq %"struct.blink::UserAgentBrandVersion"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"struct.blink::UserAgentBrandVersion"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1
  %58 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %56, i64 -1, i32 1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  tail call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %63, %55
  %67 = bitcast %"struct.blink::UserAgentBrandVersion"* %57 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.blink::UserAgentBrandVersion", %"struct.blink::UserAgentBrandVersion"* %57, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #12
  br label %74

74:                                               ; preds = %71, %66
  %75 = icmp eq %"struct.blink::UserAgentBrandVersion"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"struct.blink::UserAgentMetadata"* %0 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"struct.blink::UserAgentBrandVersion"* %48, %"struct.blink::UserAgentBrandVersion"** %52, align 8
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %46, %79
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink17PermissionsPolicyD1Ev(%"class.blink::PermissionsPolicy"*) unnamed_addr #3

declare dereferenceable(40) %"class.WTF::Mutex"* @_ZN5blink11ProcessHeap26CrossThreadPersistentMutexEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::CrossThreadPersistentRegion"* @_ZN5blink11ProcessHeap30GetCrossThreadPersistentRegionEv() local_unnamed_addr #1

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25GenericFontFamilySettingsD2Ev(%"class.blink::GenericFontFamilySettings"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::Vector.597"*, %"class.WTF::Vector.597"** %2, align 8
  store %"class.WTF::Vector.597"* null, %"class.WTF::Vector.597"** %2, align 8
  %4 = icmp eq %"class.WTF::Vector.597"* %3, null
  br i1 %4, label %56, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::Vector.597", %"class.WTF::Vector.597"* %3, i64 -1, i32 0, i32 0, i32 1
  %7 = bitcast i32* %6 to i8*
  %8 = bitcast i32* %6 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %55, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.WTF::Vector.597", %"class.WTF::Vector.597"* %3, i64 %9
  br label %13

13:                                               ; preds = %53, %11
  %14 = phi %"class.WTF::Vector.597"* [ %15, %53 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.WTF::Vector.597", %"class.WTF::Vector.597"* %14, i64 -1
  %16 = getelementptr inbounds %"class.WTF::Vector.597", %"class.WTF::Vector.597"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::pair.1100"*, %"struct.std::__1::pair.1100"** %16, align 8
  %18 = icmp eq %"struct.std::__1::pair.1100"* %17, null
  br i1 %18, label %53, label %19, !prof !2

19:                                               ; preds = %13
  %20 = bitcast %"struct.std::__1::pair.1100"* %17 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.597", %"class.WTF::Vector.597"* %14, i64 -1, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %51, label %24, !prof !3

24:                                               ; preds = %19
  %25 = zext i32 %22 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.1100", %"struct.std::__1::pair.1100"* %17, i64 %25
  br label %27

27:                                               ; preds = %45, %24
  %28 = phi %"struct.std::__1::pair.1100"* [ %46, %45 ], [ %17, %24 ]
  %29 = getelementptr inbounds %"struct.std::__1::pair.1100", %"struct.std::__1::pair.1100"* %28, i64 0, i32 1, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #11
  br label %45

45:                                               ; preds = %44, %41, %27
  %46 = getelementptr inbounds %"struct.std::__1::pair.1100", %"struct.std::__1::pair.1100"* %28, i64 1
  %47 = icmp eq %"struct.std::__1::pair.1100"* %46, %26
  br i1 %47, label %48, label %27

48:                                               ; preds = %45
  store i32 0, i32* %21, align 4
  %49 = bitcast %"class.WTF::Vector.597"* %15 to i8**
  %50 = load i8*, i8** %49, align 8
  br label %51

51:                                               ; preds = %48, %19
  %52 = phi i8* [ %50, %48 ], [ %20, %19 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %52) #11
  store %"struct.std::__1::pair.1100"* null, %"struct.std::__1::pair.1100"** %16, align 8
  br label %53

53:                                               ; preds = %51, %13
  %54 = icmp eq %"class.WTF::Vector.597"* %15, %3
  br i1 %54, label %55, label %13

55:                                               ; preds = %53, %5
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* %7) #11
  br label %56

56:                                               ; preds = %1, %55
  %57 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 0
  %58 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %57, align 8
  %59 = icmp eq %"struct.WTF::KeyValuePair.593"* %58, null
  br i1 %59, label %93, label %60, !prof !2

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 6, i32 0, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %91, label %64

64:                                               ; preds = %60
  %65 = zext i32 %62 to i64
  br label %66

66:                                               ; preds = %88, %64
  %67 = phi i64 [ 0, %64 ], [ %89, %88 ]
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %58, i64 %67, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, -3
  br i1 %70, label %88, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %58, i64 %67, i32 1, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #11
  br label %88

88:                                               ; preds = %87, %84, %71, %66
  %89 = add nuw nsw i64 %67, 1
  %90 = icmp eq i64 %89, %65
  br i1 %90, label %91, label %66

91:                                               ; preds = %88, %60
  %92 = bitcast %"struct.WTF::KeyValuePair.593"* %58 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %57, align 8
  br label %93

93:                                               ; preds = %56, %91
  %94 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 0
  %95 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %94, align 8
  %96 = icmp eq %"struct.WTF::KeyValuePair.593"* %95, null
  br i1 %96, label %130, label %97, !prof !2

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 5, i32 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %128, label %101

101:                                              ; preds = %97
  %102 = zext i32 %99 to i64
  br label %103

103:                                              ; preds = %125, %101
  %104 = phi i64 [ 0, %101 ], [ %126, %125 ]
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %95, i64 %104, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = icmp eq i32 %106, -3
  br i1 %107, label %125, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %95, i64 %104, i32 1, i32 0, i32 0, i32 0
  %110 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %109, align 8
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %125, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #11
  br label %125

125:                                              ; preds = %124, %121, %108, %103
  %126 = add nuw nsw i64 %104, 1
  %127 = icmp eq i64 %126, %102
  br i1 %127, label %128, label %103

128:                                              ; preds = %125, %97
  %129 = bitcast %"struct.WTF::KeyValuePair.593"* %95 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %129) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %94, align 8
  br label %130

130:                                              ; preds = %93, %128
  %131 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 0
  %132 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %131, align 8
  %133 = icmp eq %"struct.WTF::KeyValuePair.593"* %132, null
  br i1 %133, label %167, label %134, !prof !2

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 4, i32 0, i32 1
  %136 = load i32, i32* %135, align 8
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %165, label %138

138:                                              ; preds = %134
  %139 = zext i32 %136 to i64
  br label %140

140:                                              ; preds = %162, %138
  %141 = phi i64 [ 0, %138 ], [ %163, %162 ]
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %132, i64 %141, i32 0
  %143 = load i32, i32* %142, align 4
  %144 = icmp eq i32 %143, -3
  br i1 %144, label %162, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %132, i64 %141, i32 1, i32 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #11
  br label %162

162:                                              ; preds = %161, %158, %145, %140
  %163 = add nuw nsw i64 %141, 1
  %164 = icmp eq i64 %163, %139
  br i1 %164, label %165, label %140

165:                                              ; preds = %162, %134
  %166 = bitcast %"struct.WTF::KeyValuePair.593"* %132 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %131, align 8
  br label %167

167:                                              ; preds = %130, %165
  %168 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 0
  %169 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %168, align 8
  %170 = icmp eq %"struct.WTF::KeyValuePair.593"* %169, null
  br i1 %170, label %204, label %171, !prof !2

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 3, i32 0, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %202, label %175

175:                                              ; preds = %171
  %176 = zext i32 %173 to i64
  br label %177

177:                                              ; preds = %199, %175
  %178 = phi i64 [ 0, %175 ], [ %200, %199 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %169, i64 %178, i32 0
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %180, -3
  br i1 %181, label %199, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %169, i64 %178, i32 1, i32 0, i32 0, i32 0
  %184 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %183, align 8
  %185 = icmp eq %"class.WTF::StringImpl"* %184, null
  br i1 %185, label %199, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %188 = load atomic i32, i32* %187 monotonic, align 4
  %189 = and i32 %188, 2
  %190 = icmp eq i32 %189, 0
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %184, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  br i1 %190, label %193, label %195

193:                                              ; preds = %186
  %194 = add i32 %192, -1
  store i32 %194, i32* %191, align 4
  br label %195

195:                                              ; preds = %193, %186
  %196 = phi i32 [ %194, %193 ], [ %192, %186 ]
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %199

198:                                              ; preds = %195
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %184) #11
  br label %199

199:                                              ; preds = %198, %195, %182, %177
  %200 = add nuw nsw i64 %178, 1
  %201 = icmp eq i64 %200, %176
  br i1 %201, label %202, label %177

202:                                              ; preds = %199, %171
  %203 = bitcast %"struct.WTF::KeyValuePair.593"* %169 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %203) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %168, align 8
  br label %204

204:                                              ; preds = %167, %202
  %205 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 0
  %206 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %205, align 8
  %207 = icmp eq %"struct.WTF::KeyValuePair.593"* %206, null
  br i1 %207, label %241, label %208, !prof !2

208:                                              ; preds = %204
  %209 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 2, i32 0, i32 1
  %210 = load i32, i32* %209, align 8
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %239, label %212

212:                                              ; preds = %208
  %213 = zext i32 %210 to i64
  br label %214

214:                                              ; preds = %236, %212
  %215 = phi i64 [ 0, %212 ], [ %237, %236 ]
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %206, i64 %215, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = icmp eq i32 %217, -3
  br i1 %218, label %236, label %219

219:                                              ; preds = %214
  %220 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %206, i64 %215, i32 1, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #11
  br label %236

236:                                              ; preds = %235, %232, %219, %214
  %237 = add nuw nsw i64 %215, 1
  %238 = icmp eq i64 %237, %213
  br i1 %238, label %239, label %214

239:                                              ; preds = %236, %208
  %240 = bitcast %"struct.WTF::KeyValuePair.593"* %206 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %240) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %205, align 8
  br label %241

241:                                              ; preds = %204, %239
  %242 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 0
  %243 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %242, align 8
  %244 = icmp eq %"struct.WTF::KeyValuePair.593"* %243, null
  br i1 %244, label %278, label %245, !prof !2

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 1, i32 0, i32 1
  %247 = load i32, i32* %246, align 8
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %276, label %249

249:                                              ; preds = %245
  %250 = zext i32 %247 to i64
  br label %251

251:                                              ; preds = %273, %249
  %252 = phi i64 [ 0, %249 ], [ %274, %273 ]
  %253 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %243, i64 %252, i32 0
  %254 = load i32, i32* %253, align 4
  %255 = icmp eq i32 %254, -3
  br i1 %255, label %273, label %256

256:                                              ; preds = %251
  %257 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %243, i64 %252, i32 1, i32 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %256
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #11
  br label %273

273:                                              ; preds = %272, %269, %256, %251
  %274 = add nuw nsw i64 %252, 1
  %275 = icmp eq i64 %274, %250
  br i1 %275, label %276, label %251

276:                                              ; preds = %273, %245
  %277 = bitcast %"struct.WTF::KeyValuePair.593"* %243 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %277) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %242, align 8
  br label %278

278:                                              ; preds = %241, %276
  %279 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 0
  %280 = load %"struct.WTF::KeyValuePair.593"*, %"struct.WTF::KeyValuePair.593"** %279, align 8
  %281 = icmp eq %"struct.WTF::KeyValuePair.593"* %280, null
  br i1 %281, label %315, label %282, !prof !2

282:                                              ; preds = %278
  %283 = getelementptr inbounds %"class.blink::GenericFontFamilySettings", %"class.blink::GenericFontFamilySettings"* %0, i64 0, i32 0, i32 0, i32 1
  %284 = load i32, i32* %283, align 8
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %313, label %286

286:                                              ; preds = %282
  %287 = zext i32 %284 to i64
  br label %288

288:                                              ; preds = %310, %286
  %289 = phi i64 [ 0, %286 ], [ %311, %310 ]
  %290 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %280, i64 %289, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = icmp eq i32 %291, -3
  br i1 %292, label %310, label %293

293:                                              ; preds = %288
  %294 = getelementptr inbounds %"struct.WTF::KeyValuePair.593", %"struct.WTF::KeyValuePair.593"* %280, i64 %289, i32 1, i32 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %293
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #11
  br label %310

310:                                              ; preds = %309, %306, %293, %288
  %311 = add nuw nsw i64 %289, 1
  %312 = icmp eq i64 %311, %287
  br i1 %312, label %313, label %288

313:                                              ; preds = %310, %282
  %314 = bitcast %"struct.WTF::KeyValuePair.593"* %280 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %314) #11
  store %"struct.WTF::KeyValuePair.593"* null, %"struct.WTF::KeyValuePair.593"** %279, align 8
  br label %315

315:                                              ; preds = %278, %313
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom5blink21ContentSecurityPolicyD1Ev(%"class.network::mojom::blink::ContentSecurityPolicy"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink30WorkerMainScriptLoadParametersD2Ev(%"struct.blink::WorkerMainScriptLoadParameters"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 5
  %3 = getelementptr inbounds %"class.std::__1::vector.844", %"class.std::__1::vector.844"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.mojo::StructPtr.624"*, %"class.mojo::StructPtr.624"** %3, align 8
  %5 = icmp eq %"class.mojo::StructPtr.624"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::StructPtr.624"* %4 to i8*
  %8 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 5, i32 0, i32 1
  %9 = load %"class.mojo::StructPtr.624"*, %"class.mojo::StructPtr.624"** %8, align 8
  %10 = icmp eq %"class.mojo::StructPtr.624"* %9, %4
  br i1 %10, label %24, label %11

11:                                               ; preds = %6, %19
  %12 = phi %"class.mojo::StructPtr.624"* [ %13, %19 ], [ %9, %6 ]
  %13 = getelementptr inbounds %"class.mojo::StructPtr.624", %"class.mojo::StructPtr.624"* %12, i64 -1
  %14 = getelementptr inbounds %"class.mojo::StructPtr.624", %"class.mojo::StructPtr.624"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.network::mojom::URLResponseHead"*, %"class.network::mojom::URLResponseHead"** %14, align 8
  store %"class.network::mojom::URLResponseHead"* null, %"class.network::mojom::URLResponseHead"** %14, align 8
  %16 = icmp eq %"class.network::mojom::URLResponseHead"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  tail call void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"* nonnull %15) #11
  %18 = bitcast %"class.network::mojom::URLResponseHead"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  br label %19

19:                                               ; preds = %17, %11
  %20 = icmp eq %"class.mojo::StructPtr.624"* %13, %4
  br i1 %20, label %21, label %11

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.844"* %2 to i8**
  %23 = load i8*, i8** %22, align 8
  br label %24

24:                                               ; preds = %21, %6
  %25 = phi i8* [ %23, %21 ], [ %7, %6 ]
  store %"class.mojo::StructPtr.624"* %4, %"class.mojo::StructPtr.624"** %8, align 8
  tail call void @_ZdlPv(i8* %25) #12
  br label %26

26:                                               ; preds = %1, %24
  %27 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 4
  %28 = getelementptr inbounds %"class.std::__1::vector.837", %"class.std::__1::vector.837"* %27, i64 0, i32 0, i32 0
  %29 = load %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"** %28, align 8
  %30 = icmp eq %"struct.net::RedirectInfo"* %29, null
  br i1 %30, label %45, label %31

31:                                               ; preds = %26
  %32 = bitcast %"struct.net::RedirectInfo"* %29 to i8*
  %33 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 4, i32 0, i32 1
  %34 = load %"struct.net::RedirectInfo"*, %"struct.net::RedirectInfo"** %33, align 8
  %35 = icmp eq %"struct.net::RedirectInfo"* %34, %29
  br i1 %35, label %43, label %36

36:                                               ; preds = %31, %36
  %37 = phi %"struct.net::RedirectInfo"* [ %38, %36 ], [ %34, %31 ]
  %38 = getelementptr inbounds %"struct.net::RedirectInfo", %"struct.net::RedirectInfo"* %37, i64 -1
  tail call void @_ZN3net12RedirectInfoD1Ev(%"struct.net::RedirectInfo"* %38) #11
  %39 = icmp eq %"struct.net::RedirectInfo"* %38, %29
  br i1 %39, label %40, label %36

40:                                               ; preds = %36
  %41 = bitcast %"class.std::__1::vector.837"* %27 to i8**
  %42 = load i8*, i8** %41, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi i8* [ %42, %40 ], [ %32, %31 ]
  store %"struct.net::RedirectInfo"* %29, %"struct.net::RedirectInfo"** %33, align 8
  tail call void @_ZdlPv(i8* %44) #12
  br label %45

45:                                               ; preds = %26, %43
  %46 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %47 = load %"class.network::mojom::URLLoaderClientEndpoints"*, %"class.network::mojom::URLLoaderClientEndpoints"** %46, align 8
  store %"class.network::mojom::URLLoaderClientEndpoints"* null, %"class.network::mojom::URLLoaderClientEndpoints"** %46, align 8
  %48 = icmp eq %"class.network::mojom::URLLoaderClientEndpoints"* %47, null
  br i1 %48, label %51, label %49

49:                                               ; preds = %45
  tail call void @_ZN7network5mojom24URLLoaderClientEndpointsD1Ev(%"class.network::mojom::URLLoaderClientEndpoints"* nonnull %47) #11
  %50 = bitcast %"class.network::mojom::URLLoaderClientEndpoints"* %47 to i8*
  tail call void @_ZdlPv(i8* %50) #12
  br label %51

51:                                               ; preds = %45, %49
  %52 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = tail call i32 @MojoClose(i32 %53) #11
  br label %57

57:                                               ; preds = %51, %55
  %58 = getelementptr inbounds %"struct.blink::WorkerMainScriptLoadParameters", %"struct.blink::WorkerMainScriptLoadParameters"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %59 = load %"class.network::mojom::URLResponseHead"*, %"class.network::mojom::URLResponseHead"** %58, align 8
  store %"class.network::mojom::URLResponseHead"* null, %"class.network::mojom::URLResponseHead"** %58, align 8
  %60 = icmp eq %"class.network::mojom::URLResponseHead"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %57
  tail call void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"* nonnull %59) #11
  %62 = bitcast %"class.network::mojom::URLResponseHead"* %59 to i8*
  tail call void @_ZdlPv(i8* %62) #12
  br label %63

63:                                               ; preds = %57, %61
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net12RedirectInfoD1Ev(%"struct.net::RedirectInfo"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7network5mojom24URLLoaderClientEndpointsD1Ev(%"class.network::mojom::URLLoaderClientEndpoints"*) unnamed_addr #3

declare i32 @MojoClose(i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7network5mojom15URLResponseHeadD1Ev(%"class.network::mojom::URLResponseHead"*) unnamed_addr #3

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS2_EEvOT_(%"class.WTF::Vector.326"*, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104)) local_unnamed_addr #10 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %6, align 8
  %8 = icmp ugt %"struct.blink::BlinkTransferableMessage"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %7, i64 %10
  %12 = icmp ugt %"struct.blink::BlinkTransferableMessage"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !2

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::BlinkTransferableMessage"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24BlinkTransferableMessageEEEmm(i64 %27) #11
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24BlinkTransferableMessageEEEPKcv, i64 0, i64 0)) #11
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.326"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %28, 104
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"struct.blink::BlinkTransferableMessage"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.326"* %0, i32 %22) #11
  %36 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"struct.blink::BlinkTransferableMessage"* %1 to i64
  %39 = ptrtoint %"struct.blink::BlinkTransferableMessage"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = sdiv exact i64 %40, 104
  %42 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !2

52:                                               ; preds = %37
  %53 = icmp eq %"struct.blink::BlinkTransferableMessage"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24BlinkTransferableMessageEEEmm(i64 %55) #11
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24BlinkTransferableMessageEEEPKcv, i64 0, i64 0)) #11
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.326"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = udiv i64 %56, 104
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"struct.blink::BlinkTransferableMessage"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.326"* %0, i32 %50) #11
  %64 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"struct.blink::BlinkTransferableMessage"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"struct.blink::BlinkTransferableMessage"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"struct.blink::BlinkTransferableMessage"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %69, i64 %72
  tail call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %73, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %70) #11
  %74 = load i32, i32* %3, align 4
  %75 = add i32 %74, 1
  store i32 %75, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink24BlinkTransferableMessageELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.326"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.326"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"struct.blink::BlinkTransferableMessage"* [ %18, %14 ], [ %6, %4 ]
  %16 = phi %"struct.blink::BlinkTransferableMessage"* [ %17, %14 ], [ null, %4 ]
  tail call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %16, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %15) #11
  tail call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %15) #11
  %17 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %16, i64 1
  %18 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %15, i64 1
  %19 = icmp eq %"struct.blink::BlinkTransferableMessage"* %18, %10
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %4
  %21 = bitcast %"struct.blink::BlinkTransferableMessage"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %21) #11
  br label %53

22:                                               ; preds = %2
  %23 = zext i32 %1 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24BlinkTransferableMessageEEEmm(i64 %23) #11
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink24BlinkTransferableMessageEEEPKcv, i64 0, i64 0)) #11
  %26 = udiv i64 %24, 104
  %27 = ptrtoint i8* %25 to i64
  %28 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.blink::BlinkTransferableMessage"*, %"struct.blink::BlinkTransferableMessage"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %29, i64 %32
  %34 = icmp eq i32 %31, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %22
  %36 = bitcast %"struct.blink::BlinkTransferableMessage"* %29 to i8*
  br label %48

37:                                               ; preds = %22
  %38 = bitcast i8* %25 to %"struct.blink::BlinkTransferableMessage"*
  br label %39

39:                                               ; preds = %37, %39
  %40 = phi %"struct.blink::BlinkTransferableMessage"* [ %43, %39 ], [ %29, %37 ]
  %41 = phi %"struct.blink::BlinkTransferableMessage"* [ %42, %39 ], [ %38, %37 ]
  tail call void @_ZN5blink24BlinkTransferableMessageC1EOS0_(%"struct.blink::BlinkTransferableMessage"* %41, %"struct.blink::BlinkTransferableMessage"* dereferenceable(104) %40) #11
  tail call void @_ZN5blink24BlinkTransferableMessageD1Ev(%"struct.blink::BlinkTransferableMessage"* %40) #11
  %42 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %41, i64 1
  %43 = getelementptr inbounds %"struct.blink::BlinkTransferableMessage", %"struct.blink::BlinkTransferableMessage"* %40, i64 1
  %44 = icmp eq %"struct.blink::BlinkTransferableMessage"* %43, %33
  br i1 %44, label %45, label %39

45:                                               ; preds = %39
  %46 = bitcast %"class.WTF::Vector.326"* %0 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %35, %45
  %49 = phi i8* [ %47, %45 ], [ %36, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #11
  %50 = bitcast %"class.WTF::Vector.326"* %0 to i64*
  store atomic i64 %27, i64* %50 monotonic, align 8
  %51 = trunc i64 %26 to i32
  %52 = getelementptr inbounds %"class.WTF::Vector.326", %"class.WTF::Vector.326"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %51, i32* %52, align 8
  br label %53

53:                                               ; preds = %48, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink24BlinkTransferableMessageEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 20628716
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #11
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 20628716) #11
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #11
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #11
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #11
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  %20 = mul i64 %0, 104
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #11
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_15DedicatedWorkerEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DedicatedWorker"**
  %4 = load %"class.blink::DedicatedWorker"*, %"class.blink::DedicatedWorker"** %3, align 8
  %5 = ptrtoint %"class.blink::DedicatedWorker"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #11
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #11
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #11
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DedicatedWorker", %"class.blink::DedicatedWorker"* %4, i64 -1, i32 16
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15DedicatedWorkerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DedicatedWorker"*
  tail call void @_ZNK5blink15DedicatedWorker5TraceEPNS_7VisitorE(%"class.blink::DedicatedWorker"* %3, %"class.blink::Visitor"* %0) #11
  ret void
}

declare void @_ZNK5blink15DedicatedWorker5TraceEPNS_7VisitorE(%"class.blink::DedicatedWorker"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink21DedicatedWorkerThreadC1EPNS_16ExecutionContextERNS_26DedicatedWorkerObjectProxyEN4mojo13PendingRemoteINS_5mojom5blink19DedicatedWorkerHostEEE(%"class.blink::DedicatedWorkerThread"*, %"class.blink::ExecutionContext"*, %"class.blink::DedicatedWorkerObjectProxy"* dereferenceable(56), %"class.mojo::PendingRemote.325"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_NS8_IS4_EEEEEDaOT_DpOT0_: argument 0"}
!7 = distinct !{!7, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_NS8_IS4_EEEEEDaOT_DpOT0_"}
!8 = !{!9, !11, !6}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_NS9_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_NS9_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!13 = !{!14, !6}
!14 = distinct !{!14, !15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!15 = distinct !{!15, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!18 = distinct !{!18, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_NS8_IS4_EEEEEDaOT_DpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EES3_NS8_IS4_EEEEEDaOT_DpOT0_"}
!22 = !{!23, !25, !20}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFvNS3_24BlinkTransferableMessageEPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EES5_NSB_IS6_EEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_NS9_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFvNS1_24BlinkTransferableMessageEPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EES3_NS9_IS4_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSF_DpOSG_"}
!27 = !{!28, !20}
!28 = distinct !{!28, !29, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!29 = distinct !{!29, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!32 = distinct !{!32, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
!33 = !{!34, !36, !38}
!34 = distinct !{!34, !35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFviPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEiNSA_IS5_EEEEEDcOT0_DpOT1_: argument 0"}
!35 = distinct !{!35, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink26DedicatedWorkerObjectProxyEFviPNS3_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS4_EEiNSA_IS5_EEEEEDcOT0_DpOT1_"}
!36 = distinct !{!36, !37, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFviPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEiNS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!37 = distinct !{!37, !"_ZN4base8BindOnceIMN5blink26DedicatedWorkerObjectProxyEFviPNS1_12WorkerThreadEEJN3WTF28CrossThreadUnretainedWrapperIS2_EEiNS8_IS3_EEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!38 = distinct !{!38, !39, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFviPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EERiNS7_IS3_EEEEEDaOT_DpOT0_: argument 0"}
!39 = distinct !{!39, !"_ZN3WTF19CrossThreadBindOnceIMN5blink26DedicatedWorkerObjectProxyEFviPNS1_12WorkerThreadEEJNS_28CrossThreadUnretainedWrapperIS2_EERiNS7_IS3_EEEEEDaOT_DpOT0_"}
!40 = !{!38}
!41 = !{!42, !38}
!42 = distinct !{!42, !43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE: argument 0"}
!43 = distinct !{!43, !"_ZN3WTF8internal27MakeCrossThreadOnceFunctionIFvvEEEDaN4base12OnceCallbackIT_EE"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE: argument 0"}
!46 = distinct !{!46, !"_ZN3WTF25ConvertToBaseOnceCallbackENS_23CrossThreadOnceFunctionIFvvEEE"}
