; ModuleID = '../../third_party/boringssl/src/crypto/x509/x509_cmp.c'
source_filename = "../../third_party/boringssl/src/crypto/x509/x509_cmp.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type { %struct.asn1_string_st*, %struct.asn1_string_st* }
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type { %struct.X509_algor_st*, %struct.asn1_string_st*, %struct.evp_pkey_st* }
%struct.evp_pkey_st = type { i32, i32, %union.anon.0, %struct.evp_pkey_asn1_method_st* }
%union.anon.0 = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type { %struct.stack_st_ASN1_OBJECT*, %struct.stack_st_ASN1_OBJECT*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_ALGOR* }
%struct.stack_st_ASN1_OBJECT = type opaque
%struct.stack_st_X509_ALGOR = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.1, %struct.X509_name_st* }
%union.anon.1 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.env_md_st = type opaque
%struct.engine_st = type opaque
%struct.env_md_ctx_st = type { %struct.env_md_st*, i8*, %struct.evp_pkey_ctx_st*, %struct.evp_md_pctx_ops* }
%struct.evp_pkey_ctx_st = type opaque
%struct.evp_md_pctx_ops = type opaque
%struct.stack_st_X509 = type opaque
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.ec_key_st = type opaque
%struct.ec_group_st = type opaque

@__const.X509_find_by_issuer_and_serial.x = private unnamed_addr constant { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st } { %struct.x509_cinf_st* inttoptr (i64 -6148914691236517206 to %struct.x509_cinf_st*), %struct.X509_algor_st* inttoptr (i64 -6148914691236517206 to %struct.X509_algor_st*), %struct.asn1_string_st* inttoptr (i64 -6148914691236517206 to %struct.asn1_string_st*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", %struct.crypto_ex_data_st { %struct.stack_st_void* inttoptr (i64 -6148914691236517206 to %struct.stack_st_void*) }, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, %struct.asn1_string_st* inttoptr (i64 -6148914691236517206 to %struct.asn1_string_st*), %struct.AUTHORITY_KEYID_st* inttoptr (i64 -6148914691236517206 to %struct.AUTHORITY_KEYID_st*), %struct.X509_POLICY_CACHE_st* inttoptr (i64 -6148914691236517206 to %struct.X509_POLICY_CACHE_st*), %struct.stack_st_DIST_POINT* inttoptr (i64 -6148914691236517206 to %struct.stack_st_DIST_POINT*), %struct.stack_st_GENERAL_NAME* inttoptr (i64 -6148914691236517206 to %struct.stack_st_GENERAL_NAME*), %struct.NAME_CONSTRAINTS_st* inttoptr (i64 -6148914691236517206 to %struct.NAME_CONSTRAINTS_st*), [20 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA", [4 x i8] c"\AA\AA\AA\AA", %struct.x509_cert_aux_st* inttoptr (i64 -6148914691236517206 to %struct.x509_cert_aux_st*), %struct.crypto_buffer_st* inttoptr (i64 -6148914691236517206 to %struct.crypto_buffer_st*), %union.crypto_mutex_st { double 0xFFFFFFFFFFFFFFFF, [48 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, align 8
@.str = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509/x509_cmp.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_issuer_and_serial_cmp(%struct.x509_st* nocapture readonly, %struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 1
  %8 = load %struct.asn1_string_st*, %struct.asn1_string_st** %7, align 8
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 1
  %10 = load %struct.asn1_string_st*, %struct.asn1_string_st** %9, align 8
  %11 = tail call i32 @ASN1_INTEGER_cmp(%struct.asn1_string_st* %8, %struct.asn1_string_st* %10) #7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %53

13:                                               ; preds = %2
  %14 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 3
  %15 = load %struct.X509_name_st*, %struct.X509_name_st** %14, align 8
  %16 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 3
  %17 = load %struct.X509_name_st*, %struct.X509_name_st** %16, align 8
  %18 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %15, i64 0, i32 3
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %15, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %21, %13
  %26 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %15, i8** null) #7
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %53, label %28

28:                                               ; preds = %25, %21
  %29 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %17, i64 0, i32 3
  %30 = load i8*, i8** %29, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %17, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32, %28
  %37 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %17, i8** null) #7
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %53, label %39

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %15, i64 0, i32 4
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %17, i64 0, i32 4
  %43 = load i32, i32* %42, align 8
  %44 = sub nsw i32 %41, %43
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %53

46:                                               ; preds = %39
  %47 = icmp eq i32 %41, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %46
  %49 = sext i32 %41 to i64
  %50 = load i8*, i8** %29, align 8
  %51 = load i8*, i8** %18, align 8
  %52 = tail call i32 @memcmp(i8* %51, i8* %50, i64 %49) #8
  br label %53

53:                                               ; preds = %48, %46, %39, %36, %25, %2
  %54 = phi i32 [ %11, %2 ], [ -2, %25 ], [ -2, %36 ], [ %44, %39 ], [ %52, %48 ], [ 0, %46 ]
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare i32 @ASN1_INTEGER_cmp(%struct.asn1_string_st*, %struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_NAME_cmp(%struct.X509_name_st*, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 3
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %6, %2
  %11 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %0, i8** null) #7
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %38, label %13

13:                                               ; preds = %6, %10
  %14 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17, %13
  %22 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %1, i8** null) #7
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %17, %21
  %25 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 4
  %28 = load i32, i32* %27, align 8
  %29 = sub nsw i32 %26, %28
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %24
  %32 = icmp eq i32 %26, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %31
  %34 = sext i32 %26 to i64
  %35 = load i8*, i8** %14, align 8
  %36 = load i8*, i8** %3, align 8
  %37 = tail call i32 @memcmp(i8* %36, i8* %35, i64 %34) #8
  br label %38

38:                                               ; preds = %33, %31, %24, %21, %10
  %39 = phi i32 [ -2, %10 ], [ -2, %21 ], [ %29, %24 ], [ %37, %33 ], [ 0, %31 ]
  ret i32 %39
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_issuer_name_cmp(%struct.x509_st* nocapture readonly, %struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 3
  %6 = load %struct.X509_name_st*, %struct.X509_name_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 0
  %8 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %7, align 8
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %8, i64 0, i32 3
  %10 = load %struct.X509_name_st*, %struct.X509_name_st** %9, align 8
  %11 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %2
  %19 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %6, i8** null) #7
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25, %21
  %30 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %10, i8** null) #7
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = sub nsw i32 %34, %36
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = icmp eq i32 %34, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = sext i32 %34 to i64
  %43 = load i8*, i8** %22, align 8
  %44 = load i8*, i8** %11, align 8
  %45 = tail call i32 @memcmp(i8* %44, i8* %43, i64 %42) #8
  br label %46

46:                                               ; preds = %18, %29, %32, %39, %41
  %47 = phi i32 [ -2, %18 ], [ -2, %29 ], [ %37, %32 ], [ %45, %41 ], [ 0, %39 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_subject_name_cmp(%struct.x509_st* nocapture readonly, %struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 5
  %6 = load %struct.X509_name_st*, %struct.X509_name_st** %5, align 8
  %7 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 0
  %8 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %7, align 8
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %8, i64 0, i32 5
  %10 = load %struct.X509_name_st*, %struct.X509_name_st** %9, align 8
  %11 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %2
  %19 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %6, i8** null) #7
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25, %21
  %30 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %10, i8** null) #7
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = sub nsw i32 %34, %36
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = icmp eq i32 %34, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = sext i32 %34 to i64
  %43 = load i8*, i8** %22, align 8
  %44 = load i8*, i8** %11, align 8
  %45 = tail call i32 @memcmp(i8* %44, i8* %43, i64 %42) #8
  br label %46

46:                                               ; preds = %18, %29, %32, %39, %41
  %47 = phi i32 [ -2, %18 ], [ -2, %29 ], [ %37, %32 ], [ %45, %41 ], [ 0, %39 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_CRL_cmp(%struct.X509_crl_st* nocapture readonly, %struct.X509_crl_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %0, i64 0, i32 0
  %4 = load %struct.X509_crl_info_st*, %struct.X509_crl_info_st** %3, align 8
  %5 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %4, i64 0, i32 2
  %6 = load %struct.X509_name_st*, %struct.X509_name_st** %5, align 8
  %7 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %1, i64 0, i32 0
  %8 = load %struct.X509_crl_info_st*, %struct.X509_crl_info_st** %7, align 8
  %9 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %8, i64 0, i32 2
  %10 = load %struct.X509_name_st*, %struct.X509_name_st** %9, align 8
  %11 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 3
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %14, %2
  %19 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %6, i8** null) #7
  %20 = icmp slt i32 %19, 0
  br i1 %20, label %46, label %21

21:                                               ; preds = %18, %14
  %22 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = icmp eq i8* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %25, %21
  %30 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %10, i8** null) #7
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %46, label %32

32:                                               ; preds = %29, %25
  %33 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 4
  %34 = load i32, i32* %33, align 8
  %35 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %10, i64 0, i32 4
  %36 = load i32, i32* %35, align 8
  %37 = sub nsw i32 %34, %36
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %32
  %40 = icmp eq i32 %34, 0
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  %42 = sext i32 %34 to i64
  %43 = load i8*, i8** %22, align 8
  %44 = load i8*, i8** %11, align 8
  %45 = tail call i32 @memcmp(i8* %44, i8* %43, i64 %42) #8
  br label %46

46:                                               ; preds = %18, %29, %32, %39, %41
  %47 = phi i32 [ -2, %18 ], [ -2, %29 ], [ %37, %32 ], [ %45, %41 ], [ 0, %39 ]
  ret i32 %47
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @X509_CRL_match(%struct.X509_crl_st* nocapture readonly, %struct.X509_crl_st* nocapture readonly) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %0, i64 0, i32 11, i64 0
  %4 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %1, i64 0, i32 11, i64 0
  %5 = tail call i32 @memcmp(i8* %3, i8* %4, i64 20) #8
  ret i32 %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_name_st* @X509_get_issuer_name(%struct.x509_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 3
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %4, align 8
  ret %struct.X509_name_st* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_issuer_name_hash(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [20 x i8], align 16
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 3
  %6 = load %struct.X509_name_st*, %struct.X509_name_st** %5, align 8
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 20, i1 false) #7
  %8 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %6, i8** null) #7
  %9 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = tail call %struct.env_md_st* @EVP_sha1() #7
  %15 = call i32 @EVP_Digest(i8* %10, i64 %13, i8* nonnull %7, i32* null, %struct.env_md_st* %14, %struct.engine_st* null) #7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 3
  %19 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 2
  %20 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 1
  %21 = load i8, i8* %7, align 16
  %22 = zext i8 %21 to i64
  %23 = load i8, i8* %20, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 8
  %26 = or i64 %25, %22
  %27 = load i8, i8* %19, align 2
  %28 = zext i8 %27 to i64
  %29 = shl nuw nsw i64 %28, 16
  %30 = or i64 %26, %29
  %31 = load i8, i8* %18, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 24
  %34 = or i64 %30, %33
  br label %35

35:                                               ; preds = %1, %17
  %36 = phi i64 [ %34, %17 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #7
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_NAME_hash(%struct.X509_name_st*) local_unnamed_addr #0 {
  %2 = alloca [20 x i8], align 16
  %3 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %3) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %3, i8 -86, i64 20, i1 false)
  %4 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %0, i8** null) #7
  %5 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 3
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = tail call %struct.env_md_st* @EVP_sha1() #7
  %11 = call i32 @EVP_Digest(i8* %6, i64 %9, i8* nonnull %3, i32* null, %struct.env_md_st* %10, %struct.engine_st* null) #7
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %31, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 3
  %15 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 2
  %16 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 1
  %17 = load i8, i8* %3, align 16
  %18 = zext i8 %17 to i64
  %19 = load i8, i8* %16, align 1
  %20 = zext i8 %19 to i64
  %21 = shl nuw nsw i64 %20, 8
  %22 = or i64 %21, %18
  %23 = load i8, i8* %15, align 2
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 16
  %26 = or i64 %22, %25
  %27 = load i8, i8* %14, align 1
  %28 = zext i8 %27 to i64
  %29 = shl nuw nsw i64 %28, 24
  %30 = or i64 %26, %29
  br label %31

31:                                               ; preds = %1, %13
  %32 = phi i64 [ %30, %13 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %3) #7
  ret i64 %32
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_issuer_name_hash_old(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 3
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %4, align 8
  %6 = tail call i64 @X509_NAME_hash_old(%struct.X509_name_st* %5)
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_NAME_hash_old(%struct.X509_name_st*) local_unnamed_addr #0 {
  %2 = alloca %struct.env_md_ctx_st, align 8
  %3 = alloca [16 x i8], align 16
  %4 = bitcast %struct.env_md_ctx_st* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #7
  %5 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 0
  %6 = bitcast %struct.env_md_ctx_st* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #7
  %7 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 1
  %8 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 2
  %9 = getelementptr inbounds [16 x i8], [16 x i8]* %3, i64 0, i64 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %5, i8 -86, i64 16, i1 false)
  %10 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %0, i8** null) #7
  call void @EVP_MD_CTX_init(%struct.env_md_ctx_st* nonnull %2) #7
  %11 = call %struct.env_md_st* @EVP_md5() #7
  %12 = call i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st* nonnull %2, %struct.env_md_st* %11, %struct.engine_st* null) #7
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %41, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %0, i64 0, i32 2
  %16 = load %struct.buf_mem_st*, %struct.buf_mem_st** %15, align 8
  %17 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %16, i64 0, i32 1
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %struct.buf_mem_st, %struct.buf_mem_st* %16, i64 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = call i32 @EVP_DigestUpdate(%struct.env_md_ctx_st* nonnull %2, i8* %18, i64 %20) #7
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %41, label %23

23:                                               ; preds = %14
  %24 = call i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st* nonnull %2, i8* nonnull %5, i32* null) #7
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %41, label %26

26:                                               ; preds = %23
  %27 = load i8, i8* %5, align 16
  %28 = zext i8 %27 to i64
  %29 = load i8, i8* %7, align 1
  %30 = zext i8 %29 to i64
  %31 = shl nuw nsw i64 %30, 8
  %32 = or i64 %31, %28
  %33 = load i8, i8* %8, align 2
  %34 = zext i8 %33 to i64
  %35 = shl nuw nsw i64 %34, 16
  %36 = or i64 %32, %35
  %37 = load i8, i8* %9, align 1
  %38 = zext i8 %37 to i64
  %39 = shl nuw nsw i64 %38, 24
  %40 = or i64 %36, %39
  br label %41

41:                                               ; preds = %23, %14, %1, %26
  %42 = phi i64 [ %40, %26 ], [ 0, %23 ], [ 0, %14 ], [ 0, %1 ]
  %43 = call i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st* nonnull %2) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #7
  ret i64 %42
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 5
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %4, align 8
  ret %struct.X509_name_st* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get_serialNumber(%struct.x509_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 1
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  ret %struct.asn1_string_st* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_serialNumber(%struct.x509_st* nocapture readonly) local_unnamed_addr #4 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 1
  %5 = load %struct.asn1_string_st*, %struct.asn1_string_st** %4, align 8
  ret %struct.asn1_string_st* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_subject_name_hash(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca [20 x i8], align 16
  %3 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %4 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %3, align 8
  %5 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 5
  %6 = load %struct.X509_name_st*, %struct.X509_name_st** %5, align 8
  %7 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 20, i1 false) #7
  %8 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %6, i8** null) #7
  %9 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 3
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %6, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = tail call %struct.env_md_st* @EVP_sha1() #7
  %15 = call i32 @EVP_Digest(i8* %10, i64 %13, i8* nonnull %7, i32* null, %struct.env_md_st* %14, %struct.engine_st* null) #7
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %35, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 3
  %19 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 2
  %20 = getelementptr inbounds [20 x i8], [20 x i8]* %2, i64 0, i64 1
  %21 = load i8, i8* %7, align 16
  %22 = zext i8 %21 to i64
  %23 = load i8, i8* %20, align 1
  %24 = zext i8 %23 to i64
  %25 = shl nuw nsw i64 %24, 8
  %26 = or i64 %25, %22
  %27 = load i8, i8* %19, align 2
  %28 = zext i8 %27 to i64
  %29 = shl nuw nsw i64 %28, 16
  %30 = or i64 %26, %29
  %31 = load i8, i8* %18, align 1
  %32 = zext i8 %31 to i64
  %33 = shl nuw nsw i64 %32, 24
  %34 = or i64 %30, %33
  br label %35

35:                                               ; preds = %1, %17
  %36 = phi i64 [ %34, %17 ], [ 0, %1 ]
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %7) #7
  ret i64 %36
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @X509_subject_name_hash_old(%struct.x509_st* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %3 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %2, align 8
  %4 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %3, i64 0, i32 5
  %5 = load %struct.X509_name_st*, %struct.X509_name_st** %4, align 8
  %6 = tail call i64 @X509_NAME_hash_old(%struct.X509_name_st* %5)
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_cmp(%struct.x509_st*, %struct.x509_st*) local_unnamed_addr #0 {
  %3 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %0) #7
  %4 = tail call i32 @x509v3_cache_extensions(%struct.x509_st* %1) #7
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 17, i64 0
  %6 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 17, i64 0
  %7 = tail call i32 @memcmp(i8* %5, i8* %6, i64 20) #8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %37

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %11 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %10, align 8
  %12 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %11, i64 0, i32 10, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %37

15:                                               ; preds = %9
  %16 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %1, i64 0, i32 0
  %17 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %16, align 8
  %18 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %17, i64 0, i32 10, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %37

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %11, i64 0, i32 10, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %17, i64 0, i32 10, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = sub nsw i64 %23, %25
  %27 = trunc i64 %26 to i32
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %21
  %30 = icmp eq i64 %23, 0
  br i1 %30, label %37, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %17, i64 0, i32 10, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %11, i64 0, i32 10, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = tail call i32 @memcmp(i8* %35, i8* %33, i64 %23) #8
  br label %37

37:                                               ; preds = %31, %29, %9, %15, %21, %2
  %38 = phi i32 [ %7, %2 ], [ %27, %21 ], [ 0, %15 ], [ 0, %9 ], [ %36, %31 ], [ 0, %29 ]
  ret i32 %38
}

declare i32 @x509v3_cache_extensions(%struct.x509_st*) local_unnamed_addr #2

declare i32 @i2d_X509_NAME(%struct.X509_name_st*, i8**) local_unnamed_addr #2

declare i32 @EVP_Digest(i8*, i64, i8*, i32*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_sha1() local_unnamed_addr #2

declare void @EVP_MD_CTX_init(%struct.env_md_ctx_st*) local_unnamed_addr #2

declare i32 @EVP_DigestInit_ex(%struct.env_md_ctx_st*, %struct.env_md_st*, %struct.engine_st*) local_unnamed_addr #2

declare %struct.env_md_st* @EVP_md5() local_unnamed_addr #2

declare i32 @EVP_DigestUpdate(%struct.env_md_ctx_st*, i8*, i64) local_unnamed_addr #2

declare i32 @EVP_DigestFinal_ex(%struct.env_md_ctx_st*, i8*, i32*) local_unnamed_addr #2

declare i32 @EVP_MD_CTX_cleanup(%struct.env_md_ctx_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @X509_find_by_issuer_and_serial(%struct.stack_st_X509*, %struct.X509_name_st*, %struct.asn1_string_st*) local_unnamed_addr #0 {
  %4 = alloca %struct.x509_cinf_st, align 8
  %5 = alloca %struct.x509_st, align 8
  %6 = bitcast %struct.x509_cinf_st* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %6) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 104, i1 false)
  %7 = bitcast %struct.x509_st* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %7) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast ({ %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, [4 x i8], %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], [4 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }* @__const.X509_find_by_issuer_and_serial.x to i8*), i64 232, i1 false)
  %8 = icmp eq %struct.stack_st_X509* %0, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %5, i64 0, i32 0
  store %struct.x509_cinf_st* %4, %struct.x509_cinf_st** %10, align 8
  %11 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 1
  store %struct.asn1_string_st* %2, %struct.asn1_string_st** %11, align 8
  %12 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %4, i64 0, i32 3
  store %struct.X509_name_st* %1, %struct.X509_name_st** %12, align 8
  %13 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*
  %14 = call i64 @sk_num(%struct.stack_st* nonnull %13) #7
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %28, label %19

16:                                               ; preds = %19
  %17 = call i64 @sk_num(%struct.stack_st* nonnull %13) #7
  %18 = icmp ult i64 %25, %17
  br i1 %18, label %19, label %28

19:                                               ; preds = %9, %16
  %20 = phi i64 [ %25, %16 ], [ 0, %9 ]
  %21 = call i8* @sk_value(%struct.stack_st* nonnull %13, i64 %20) #7
  %22 = bitcast i8* %21 to %struct.x509_st*
  %23 = call i32 @X509_issuer_and_serial_cmp(%struct.x509_st* %22, %struct.x509_st* nonnull %5)
  %24 = icmp eq i32 %23, 0
  %25 = add nuw i64 %20, 1
  br i1 %24, label %26, label %16

26:                                               ; preds = %19
  %27 = bitcast i8* %21 to %struct.x509_st*
  br label %28

28:                                               ; preds = %16, %26, %9, %3
  %29 = phi %struct.x509_st* [ null, %3 ], [ null, %9 ], [ %27, %26 ], [ null, %16 ]
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %6) #7
  ret %struct.x509_st* %29
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.x509_st* @X509_find_by_subject(%struct.stack_st_X509*, %struct.X509_name_st*) local_unnamed_addr #0 {
  %3 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*
  %4 = tail call i64 @sk_num(%struct.stack_st* %3) #7
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %57, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 3
  %8 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 1
  %9 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %1, i64 0, i32 4
  br label %10

10:                                               ; preds = %6, %49
  %11 = phi i64 [ 0, %6 ], [ %50, %49 ]
  %12 = tail call i8* @sk_value(%struct.stack_st* %3, i64 %11) #7
  %13 = bitcast i8* %12 to %struct.x509_cinf_st**
  %14 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %13, align 8
  %15 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %14, i64 0, i32 5
  %16 = load %struct.X509_name_st*, %struct.X509_name_st** %15, align 8
  %17 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %16, i64 0, i32 3
  %18 = load i8*, i8** %17, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %20, %10
  %25 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %16, i8** null) #7
  %26 = icmp slt i32 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %24, %20
  %28 = load i8*, i8** %7, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %27
  %31 = load i32, i32* %8, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %30, %27
  %34 = tail call i32 @i2d_X509_NAME(%struct.X509_name_st* %1, i8** null) #7
  %35 = icmp slt i32 %34, 0
  br i1 %35, label %49, label %36

36:                                               ; preds = %33, %30
  %37 = getelementptr inbounds %struct.X509_name_st, %struct.X509_name_st* %16, i64 0, i32 4
  %38 = load i32, i32* %37, align 8
  %39 = load i32, i32* %9, align 8
  %40 = icmp eq i32 %38, %39
  br i1 %40, label %41, label %49

41:                                               ; preds = %36
  %42 = icmp eq i32 %38, 0
  br i1 %42, label %53, label %43

43:                                               ; preds = %41
  %44 = sext i32 %38 to i64
  %45 = load i8*, i8** %7, align 8
  %46 = load i8*, i8** %17, align 8
  %47 = tail call i32 @bcmp(i8* %46, i8* %45, i64 %44)
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %36, %33, %24, %43
  %50 = add nuw i64 %11, 1
  %51 = tail call i64 @sk_num(%struct.stack_st* %3) #7
  %52 = icmp ult i64 %50, %51
  br i1 %52, label %10, label %57

53:                                               ; preds = %41
  %54 = bitcast i8* %12 to %struct.x509_st*
  br label %57

55:                                               ; preds = %43
  %56 = bitcast i8* %12 to %struct.x509_st*
  br label %57

57:                                               ; preds = %49, %2, %55, %53
  %58 = phi %struct.x509_st* [ %56, %55 ], [ %54, %53 ], [ null, %2 ], [ null, %49 ]
  ret %struct.x509_st* %58
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.evp_pkey_st* @X509_get_pubkey(%struct.x509_st* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.x509_st* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %5 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %4, align 8
  %6 = icmp eq %struct.x509_cinf_st* %5, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %5, i64 0, i32 6
  %9 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %8, align 8
  %10 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %9) #7
  br label %11

11:                                               ; preds = %1, %3, %7
  %12 = phi %struct.evp_pkey_st* [ %10, %7 ], [ null, %3 ], [ null, %1 ]
  ret %struct.evp_pkey_st* %12
}

declare %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st*) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %struct.asn1_string_st* @X509_get0_pubkey_bitstr(%struct.x509_st* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.x509_st* %0, null
  br i1 %2, label %10, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %5 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %4, align 8
  %6 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %5, i64 0, i32 6
  %7 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %6, align 8
  %8 = getelementptr inbounds %struct.X509_pubkey_st, %struct.X509_pubkey_st* %7, i64 0, i32 1
  %9 = load %struct.asn1_string_st*, %struct.asn1_string_st** %8, align 8
  br label %10

10:                                               ; preds = %1, %3
  %11 = phi %struct.asn1_string_st* [ %9, %3 ], [ null, %1 ]
  ret %struct.asn1_string_st* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_check_private_key(%struct.x509_st* readonly, %struct.evp_pkey_st*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.x509_st* %0, null
  br i1 %3, label %18, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %0, i64 0, i32 0
  %6 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %5, align 8
  %7 = icmp eq %struct.x509_cinf_st* %6, null
  br i1 %7, label %18, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %6, i64 0, i32 6
  %10 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %9, align 8
  %11 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %10) #7
  %12 = icmp eq %struct.evp_pkey_st* %11, null
  br i1 %12, label %18, label %13

13:                                               ; preds = %8
  %14 = tail call i32 @EVP_PKEY_cmp(%struct.evp_pkey_st* nonnull %11, %struct.evp_pkey_st* %1) #7
  switch i32 %14, label %20 [
    i32 -2, label %15
    i32 0, label %16
    i32 -1, label %17
  ]

15:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 128, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 324) #7
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %11) #7
  br label %23

16:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 116, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 318) #7
  br label %19

17:                                               ; preds = %13
  tail call void @ERR_put_error(i32 11, i32 0, i32 115, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 321) #7
  br label %19

18:                                               ; preds = %8, %4, %2
  tail call void @ERR_put_error(i32 11, i32 0, i32 128, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 324) #7
  br label %23

19:                                               ; preds = %17, %16
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %11) #7
  br label %23

20:                                               ; preds = %13
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %11) #7
  %21 = icmp sgt i32 %14, 0
  %22 = zext i1 %21 to i32
  ret i32 %22

23:                                               ; preds = %19, %15, %18
  ret i32 0
}

declare i32 @EVP_PKEY_cmp(%struct.evp_pkey_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_chain_check_suiteb(i32*, %struct.x509_st*, %struct.stack_st_X509*, i64) local_unnamed_addr #0 {
  %5 = and i64 %3, 196608
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %155, label %7

7:                                                ; preds = %4
  %8 = icmp eq %struct.x509_st* %1, null
  br i1 %8, label %9, label %13

9:                                                ; preds = %7
  %10 = bitcast %struct.stack_st_X509* %2 to %struct.stack_st*
  %11 = tail call i8* @sk_value(%struct.stack_st* %10, i64 0) #7
  %12 = bitcast i8* %11 to %struct.x509_st*
  br label %13

13:                                               ; preds = %7, %9
  %14 = phi %struct.x509_st* [ %12, %9 ], [ %1, %7 ]
  %15 = phi i64 [ 1, %9 ], [ 0, %7 ]
  %16 = tail call i64 @X509_get_version(%struct.x509_st* %14) #7
  %17 = icmp eq i64 %16, 2
  br i1 %17, label %18, label %138

18:                                               ; preds = %13
  %19 = icmp eq %struct.x509_st* %14, null
  br i1 %19, label %138, label %20

20:                                               ; preds = %18
  %21 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %14, i64 0, i32 0
  %22 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %21, align 8
  %23 = icmp eq %struct.x509_cinf_st* %22, null
  br i1 %23, label %138, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %22, i64 0, i32 6
  %26 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %25, align 8
  %27 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %26) #7
  %28 = icmp eq %struct.evp_pkey_st* %27, null
  br i1 %28, label %138, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %27, i64 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 408
  br i1 %32, label %33, label %127

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %27, i64 0, i32 2
  %35 = bitcast %union.anon.0* %34 to %struct.ec_key_st**
  %36 = load %struct.ec_key_st*, %struct.ec_key_st** %35, align 8
  %37 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %36) #7
  %38 = icmp eq %struct.ec_group_st* %37, null
  br i1 %38, label %127, label %39

39:                                               ; preds = %33
  %40 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %37) #7
  switch i32 %40, label %127 [
    i32 715, label %41
    i32 415, label %46
  ]

41:                                               ; preds = %39
  %42 = and i64 %3, 131072
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %127, label %44

44:                                               ; preds = %41
  %45 = and i64 %3, -65537
  br label %49

46:                                               ; preds = %39
  %47 = and i64 %3, 65536
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %127, label %49

49:                                               ; preds = %44, %46
  %50 = phi i64 [ %3, %46 ], [ %45, %44 ]
  %51 = bitcast %struct.stack_st_X509* %2 to %struct.stack_st*
  %52 = tail call i64 @sk_num(%struct.stack_st* %51) #7
  %53 = icmp ult i64 %15, %52
  %54 = tail call i32 @X509_get_signature_nid(%struct.x509_st* nonnull %14) #7
  br i1 %53, label %55, label %103

55:                                               ; preds = %49, %97
  %56 = phi i32 [ %102, %97 ], [ %54, %49 ]
  %57 = phi %struct.evp_pkey_st* [ %73, %97 ], [ %27, %49 ]
  %58 = phi i64 [ %99, %97 ], [ %15, %49 ]
  %59 = phi i64 [ %98, %97 ], [ %50, %49 ]
  %60 = tail call i8* @sk_value(%struct.stack_st* %51, i64 %58) #7
  %61 = bitcast i8* %60 to %struct.x509_st*
  %62 = tail call i64 @X509_get_version(%struct.x509_st* %61) #7
  %63 = icmp eq i64 %62, 2
  br i1 %63, label %64, label %132

64:                                               ; preds = %55
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %57) #7
  %65 = icmp eq i8* %60, null
  br i1 %65, label %138, label %66

66:                                               ; preds = %64
  %67 = bitcast i8* %60 to %struct.x509_cinf_st**
  %68 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %67, align 8
  %69 = icmp eq %struct.x509_cinf_st* %68, null
  br i1 %69, label %138, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %68, i64 0, i32 6
  %72 = load %struct.X509_pubkey_st*, %struct.X509_pubkey_st** %71, align 8
  %73 = tail call %struct.evp_pkey_st* @X509_PUBKEY_get(%struct.X509_pubkey_st* %72) #7
  %74 = icmp eq %struct.evp_pkey_st* %73, null
  br i1 %74, label %138, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %73, i64 0, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 408
  br i1 %78, label %79, label %127

79:                                               ; preds = %75
  %80 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %73, i64 0, i32 2
  %81 = bitcast %union.anon.0* %80 to %struct.ec_key_st**
  %82 = load %struct.ec_key_st*, %struct.ec_key_st** %81, align 8
  %83 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %82) #7
  %84 = icmp eq %struct.ec_group_st* %83, null
  br i1 %84, label %127, label %85

85:                                               ; preds = %79
  %86 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %83) #7
  switch i32 %86, label %127 [
    i32 715, label %87
    i32 415, label %93
  ]

87:                                               ; preds = %85
  switch i32 %56, label %127 [
    i32 -1, label %88
    i32 795, label %88
  ]

88:                                               ; preds = %87, %87
  %89 = and i64 %59, 131072
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %127, label %91

91:                                               ; preds = %88
  %92 = and i64 %59, -65537
  br label %97

93:                                               ; preds = %85
  switch i32 %56, label %127 [
    i32 -1, label %94
    i32 794, label %94
  ]

94:                                               ; preds = %93, %93
  %95 = and i64 %59, 65536
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %127, label %97

97:                                               ; preds = %94, %91
  %98 = phi i64 [ %59, %94 ], [ %92, %91 ]
  %99 = add nuw i64 %58, 1
  %100 = tail call i64 @sk_num(%struct.stack_st* %51) #7
  %101 = icmp ult i64 %99, %100
  %102 = tail call i32 @X509_get_signature_nid(%struct.x509_st* nonnull %61) #7
  br i1 %101, label %55, label %103

103:                                              ; preds = %97, %49
  %104 = phi i64 [ %50, %49 ], [ %98, %97 ]
  %105 = phi i64 [ %15, %49 ], [ %99, %97 ]
  %106 = phi %struct.evp_pkey_st* [ %27, %49 ], [ %73, %97 ]
  %107 = phi i32 [ %54, %49 ], [ %102, %97 ]
  %108 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %106, i64 0, i32 1
  %109 = load i32, i32* %108, align 4
  %110 = icmp eq i32 %109, 408
  br i1 %110, label %111, label %132

111:                                              ; preds = %103
  %112 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %106, i64 0, i32 2
  %113 = bitcast %union.anon.0* %112 to %struct.ec_key_st**
  %114 = load %struct.ec_key_st*, %struct.ec_key_st** %113, align 8
  %115 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %114) #7
  %116 = icmp eq %struct.ec_group_st* %115, null
  br i1 %116, label %132, label %117

117:                                              ; preds = %111
  %118 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %115) #7
  switch i32 %118, label %132 [
    i32 715, label %119
    i32 415, label %123
  ]

119:                                              ; preds = %117
  switch i32 %107, label %132 [
    i32 -1, label %120
    i32 795, label %120
  ]

120:                                              ; preds = %119, %119
  %121 = and i64 %104, 131072
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %132, label %137

123:                                              ; preds = %117
  switch i32 %107, label %132 [
    i32 -1, label %124
    i32 794, label %124
  ]

124:                                              ; preds = %123, %123
  %125 = and i64 %104, 65536
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %132, label %137

127:                                              ; preds = %75, %88, %87, %94, %93, %85, %79, %29, %41, %46, %39, %33
  %128 = phi i64 [ %3, %29 ], [ %3, %39 ], [ %3, %46 ], [ %3, %41 ], [ %3, %33 ], [ %59, %79 ], [ %59, %85 ], [ %59, %93 ], [ %59, %94 ], [ %59, %87 ], [ %59, %88 ], [ %59, %75 ]
  %129 = phi i32 [ 57, %29 ], [ 58, %39 ], [ 60, %46 ], [ 60, %41 ], [ 57, %33 ], [ 57, %75 ], [ 60, %88 ], [ 59, %87 ], [ 60, %94 ], [ 59, %93 ], [ 58, %85 ], [ 57, %79 ]
  %130 = phi i64 [ 0, %29 ], [ 0, %39 ], [ 0, %46 ], [ 0, %41 ], [ 0, %33 ], [ %58, %79 ], [ %58, %85 ], [ %58, %93 ], [ %58, %94 ], [ %58, %87 ], [ %58, %88 ], [ %58, %75 ]
  %131 = phi %struct.evp_pkey_st* [ %27, %29 ], [ %27, %39 ], [ %27, %46 ], [ %27, %41 ], [ %27, %33 ], [ %73, %79 ], [ %73, %85 ], [ %73, %93 ], [ %73, %94 ], [ %73, %87 ], [ %73, %88 ], [ %73, %75 ]
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %131) #7
  br label %138

132:                                              ; preds = %55, %103, %117, %124, %123, %120, %119, %111
  %133 = phi i64 [ %104, %111 ], [ %104, %119 ], [ %104, %120 ], [ %104, %123 ], [ %104, %124 ], [ %104, %117 ], [ %104, %103 ], [ %59, %55 ]
  %134 = phi i64 [ %105, %111 ], [ %105, %119 ], [ %105, %120 ], [ %105, %123 ], [ %105, %124 ], [ %105, %117 ], [ %105, %103 ], [ %58, %55 ]
  %135 = phi %struct.evp_pkey_st* [ %106, %111 ], [ %106, %119 ], [ %106, %120 ], [ %106, %123 ], [ %106, %124 ], [ %106, %117 ], [ %106, %103 ], [ %57, %55 ]
  %136 = phi i32 [ 57, %111 ], [ 59, %119 ], [ 60, %120 ], [ 59, %123 ], [ 60, %124 ], [ 58, %117 ], [ 57, %103 ], [ 56, %55 ]
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %135) #7
  br label %138

137:                                              ; preds = %120, %124
  tail call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %106) #7
  br label %155

138:                                              ; preds = %70, %66, %64, %24, %20, %18, %13, %132, %127
  %139 = phi i64 [ %128, %127 ], [ %133, %132 ], [ %3, %13 ], [ %3, %24 ], [ %3, %20 ], [ %3, %18 ], [ %59, %64 ], [ %59, %66 ], [ %59, %70 ]
  %140 = phi i32 [ %129, %127 ], [ %136, %132 ], [ 56, %13 ], [ 57, %24 ], [ 57, %20 ], [ 57, %18 ], [ 57, %64 ], [ 57, %66 ], [ 57, %70 ]
  %141 = phi i64 [ %130, %127 ], [ %134, %132 ], [ 0, %13 ], [ 0, %24 ], [ 0, %20 ], [ 0, %18 ], [ %58, %64 ], [ %58, %66 ], [ %58, %70 ]
  %142 = icmp ne i32 %140, 60
  %143 = icmp eq i64 %139, %3
  %144 = or i1 %143, %142
  %145 = select i1 %144, i32 %140, i32 61
  %146 = icmp eq i32* %0, null
  br i1 %146, label %155, label %147

147:                                              ; preds = %138
  %148 = add nsw i32 %140, -59
  %149 = icmp ult i32 %148, 2
  %150 = icmp ne i64 %141, 0
  %151 = and i1 %149, %150
  %152 = zext i1 %151 to i64
  %153 = sub i64 %141, %152
  %154 = trunc i64 %153 to i32
  store i32 %154, i32* %0, align 4
  br label %155

155:                                              ; preds = %137, %147, %138, %4
  %156 = phi i32 [ 0, %4 ], [ %145, %147 ], [ %145, %138 ], [ 0, %137 ]
  ret i32 %156
}

declare i64 @X509_get_version(%struct.x509_st*) local_unnamed_addr #2

declare i32 @X509_get_signature_nid(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509_CRL_check_suiteb(%struct.X509_crl_st* nocapture readonly, %struct.evp_pkey_st* readonly, i64) local_unnamed_addr #0 {
  %4 = and i64 %2, 196608
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %36, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %0, i64 0, i32 0
  %8 = load %struct.X509_crl_info_st*, %struct.X509_crl_info_st** %7, align 8
  %9 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %8, i64 0, i32 1
  %10 = load %struct.X509_algor_st*, %struct.X509_algor_st** %9, align 8
  %11 = getelementptr inbounds %struct.X509_algor_st, %struct.X509_algor_st* %10, i64 0, i32 0
  %12 = load %struct.asn1_object_st*, %struct.asn1_object_st** %11, align 8
  %13 = tail call i32 @OBJ_obj2nid(%struct.asn1_object_st* %12) #7
  %14 = icmp eq %struct.evp_pkey_st* %1, null
  br i1 %14, label %36, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 408
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %struct.evp_pkey_st, %struct.evp_pkey_st* %1, i64 0, i32 2
  %21 = bitcast %union.anon.0* %20 to %struct.ec_key_st**
  %22 = load %struct.ec_key_st*, %struct.ec_key_st** %21, align 8
  %23 = tail call %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st* %22) #7
  %24 = icmp eq %struct.ec_group_st* %23, null
  br i1 %24, label %36, label %25

25:                                               ; preds = %19
  %26 = tail call i32 @EC_GROUP_get_curve_name(%struct.ec_group_st* nonnull %23) #7
  switch i32 %26, label %36 [
    i32 715, label %27
    i32 415, label %31
  ]

27:                                               ; preds = %25
  switch i32 %13, label %36 [
    i32 -1, label %28
    i32 795, label %28
  ]

28:                                               ; preds = %27, %27
  %29 = and i64 %2, 131072
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %36, label %35

31:                                               ; preds = %25
  switch i32 %13, label %36 [
    i32 -1, label %32
    i32 794, label %32
  ]

32:                                               ; preds = %31, %31
  %33 = and i64 %2, 65536
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %36, label %35

35:                                               ; preds = %28, %32
  br label %36

36:                                               ; preds = %35, %32, %31, %28, %27, %25, %19, %15, %6, %3
  %37 = phi i32 [ 0, %3 ], [ 0, %35 ], [ 57, %19 ], [ 59, %27 ], [ 60, %28 ], [ 59, %31 ], [ 60, %32 ], [ 58, %25 ], [ 57, %15 ], [ 57, %6 ]
  ret i32 %37
}

declare i32 @OBJ_obj2nid(%struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_X509* @X509_chain_up_ref(%struct.stack_st_X509*) local_unnamed_addr #0 {
  %2 = bitcast %struct.stack_st_X509* %0 to %struct.stack_st*
  %3 = tail call %struct.stack_st* @sk_dup(%struct.stack_st* %2) #7
  %4 = bitcast %struct.stack_st* %3 to %struct.stack_st_X509*
  %5 = tail call i64 @sk_num(%struct.stack_st* %3) #7
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1, %7
  %8 = phi i64 [ %12, %7 ], [ 0, %1 ]
  %9 = tail call i8* @sk_value(%struct.stack_st* %3, i64 %8) #7
  %10 = bitcast i8* %9 to %struct.x509_st*
  %11 = tail call i32 @X509_up_ref(%struct.x509_st* %10) #7
  %12 = add nuw i64 %8, 1
  %13 = tail call i64 @sk_num(%struct.stack_st* %3) #7
  %14 = icmp ult i64 %12, %13
  br i1 %14, label %7, label %15

15:                                               ; preds = %7, %1
  ret %struct.stack_st_X509* %4
}

declare i32 @X509_up_ref(%struct.x509_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare %struct.ec_group_st* @EC_KEY_get0_group(%struct.ec_key_st*) local_unnamed_addr #2

declare i32 @EC_GROUP_get_curve_name(%struct.ec_group_st*) local_unnamed_addr #2

declare %struct.stack_st* @sk_dup(%struct.stack_st*) local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
