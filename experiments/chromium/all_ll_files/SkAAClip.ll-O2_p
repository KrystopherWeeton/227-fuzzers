; ModuleID = '../../third_party/skia/src/core/SkAAClip.cpp'
source_filename = "../../third_party/skia/src/core/SkAAClip.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.SkAAClip::Iter" = type <{ %"struct.SkAAClip::YOffset"*, %"struct.SkAAClip::YOffset"*, i8*, i32, i32, i8, [7 x i8] }>
%"struct.SkAAClip::YOffset" = type { i32, i32 }
%class.SkAAClip = type { %struct.SkIRect, %"struct.SkAAClip::RunHead"* }
%struct.SkIRect = type { i32, i32, i32, i32 }
%"struct.SkAAClip::RunHead" = type { %"struct.std::__1::atomic", i32, i64 }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkAAClipBlitter = type { %class.SkBlitter, %class.SkBlitter*, %class.SkAAClip*, %struct.SkIRect, i16*, i8*, %class.SkAutoSMalloc, i8* }
%class.SkBlitter = type { i32 (...)**, %class.SkAutoMalloc }
%class.SkAutoMalloc = type { %"class.std::__1::unique_ptr", i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }
%struct.SkRect = type { float, float, float, float }
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.sk_sp = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%class.SkRegion = type { %struct.SkIRect, %"struct.SkRegion::RunHead"* }
%"struct.SkRegion::RunHead" = type opaque
%"class.SkAAClip::Builder" = type <{ %struct.SkIRect, %class.SkTDArray.14, %"struct.SkAAClip::Builder::Row"*, i32, i32, i32, [4 x i8] }>
%class.SkTDArray.14 = type { %"struct.SkAAClip::Builder::Row"*, i32, i32 }
%"struct.SkAAClip::Builder::Row" = type { i32, i32, %class.SkTDArray.1* }
%"class.SkAAClip::BuilderBlitter" = type <{ %class.SkBlitter, i32, [4 x i8], %"class.SkAAClip::Builder"*, i32, i32, i32, [4 x i8] }>
%"class.SkRegion::Iterator" = type <{ %class.SkRegion*, i32*, %struct.SkIRect, i8, [7 x i8] }>
%struct.SkMask = type <{ i8*, %struct.SkIRect, i32, i8, [3 x i8] }>
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.16, i32, i32 }
%class.sk_sp.16 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.17, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.17 = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }

$_ZN8SkAAClip7Builder6finishEPS_ = comdat any

$_ZN9SkBlitter10blitAntiH2Eiijj = comdat any

$_ZN9SkBlitter10blitAntiV2Eiijj = comdat any

$_ZNK9SkBlitter20requestRowsPreservedEv = comdat any

$_ZN9SkBlitter15allocBlitMemoryEm = comdat any

$_ZN8SkAAClip14BuilderBlitterD0Ev = comdat any

$_ZN8SkAAClip14BuilderBlitter5blitHEiii = comdat any

$_ZN8SkAAClip14BuilderBlitter9blitAntiHEiiPKhPKs = comdat any

$_ZN8SkAAClip14BuilderBlitter5blitVEiiih = comdat any

$_ZN8SkAAClip14BuilderBlitter8blitRectEiiii = comdat any

$_ZN8SkAAClip14BuilderBlitter12blitAntiRectEiiiihh = comdat any

$_ZN8SkAAClip14BuilderBlitter8blitMaskERK6SkMaskRK7SkIRect = comdat any

$_ZN8SkAAClip14BuilderBlitter17justAnOpaqueColorEPj = comdat any

$_ZN8SkAAClip7Builder6addRunEiiji = comdat any

$_ZN8SkAAClip7Builder8flushRowEb = comdat any

$_ZN8SkAAClip7Builder14addAntiRectRunEiiiihh = comdat any

$_Z6mergeTIhEvPKviPKhiPv = comdat any

$_Z6mergeTItEvPKviPKhiPv = comdat any

$_ZTVN8SkAAClip14BuilderBlitterE = comdat any

@_ZTV15SkAAClipBlitter = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkAAClipBlitter*)* @_ZN15SkAAClipBlitterD2Ev to i8*), i8* bitcast (void (%class.SkAAClipBlitter*)* @_ZN15SkAAClipBlitterD0Ev to i8*), i8* bitcast (void (%class.SkAAClipBlitter*, i32, i32, i32)* @_ZN15SkAAClipBlitter5blitHEiii to i8*), i8* bitcast (void (%class.SkAAClipBlitter*, i32, i32, i8*, i16*)* @_ZN15SkAAClipBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%class.SkAAClipBlitter*, i32, i32, i32, i8)* @_ZN15SkAAClipBlitter5blitVEiiih to i8*), i8* bitcast (void (%class.SkAAClipBlitter*, i32, i32, i32, i32)* @_ZN15SkAAClipBlitter8blitRectEiiii to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32, i8, i8)* @_ZN9SkBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%class.SkAAClipBlitter*, %struct.SkMask*, %struct.SkIRect*)* @_ZN15SkAAClipBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%class.SkAAClipBlitter*, i32*)* @_ZN15SkAAClipBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, align 8
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@_ZTVN8SkAAClip14BuilderBlitterE = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkBlitter*)* @_ZN9SkBlitterD2Ev to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*)* @_ZN8SkAAClip14BuilderBlitterD0Ev to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32)* @_ZN8SkAAClip14BuilderBlitter5blitHEiii to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)* @_ZN8SkAAClip14BuilderBlitter9blitAntiHEiiPKhPKs to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i8)* @_ZN8SkAAClip14BuilderBlitter5blitVEiiih to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i32)* @_ZN8SkAAClip14BuilderBlitter8blitRectEiiii to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i32, i8, i8)* @_ZN8SkAAClip14BuilderBlitter12blitAntiRectEiiiihh to i8*), i8* bitcast (void (%"class.SkAAClip::BuilderBlitter"*, %struct.SkMask*, %struct.SkIRect*)* @_ZN8SkAAClip14BuilderBlitter8blitMaskERK6SkMaskRK7SkIRect to i8*), i8* bitcast (%class.SkPixmap* (%"class.SkAAClip::BuilderBlitter"*, i32*)* @_ZN8SkAAClip14BuilderBlitter17justAnOpaqueColorEPj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiH2Eiijj to i8*), i8* bitcast (void (%class.SkBlitter*, i32, i32, i32, i32)* @_ZN9SkBlitter10blitAntiV2Eiijj to i8*), i8* bitcast (i1 (%class.SkBlitter*)* @_ZNK9SkBlitter13isNullBlitterEv to i8*), i8* bitcast (i32 (%class.SkBlitter*)* @_ZNK9SkBlitter20requestRowsPreservedEv to i8*), i8* bitcast (i8* (%class.SkBlitter*, i64)* @_ZN9SkBlitter15allocBlitMemoryEm to i8*)] }, comdat, align 8
@_ZZN8SkAAClip14BuilderBlitter5blitVEiiihE4runs = internal constant [2 x i16] [i16 1, i16 0], align 2
@.str.4 = private unnamed_addr constant [45 x i8] c"../../third_party/skia/src/core/SkAAClip.cpp\00", align 1
@.str.5 = private unnamed_addr constant [39 x i8] c"---- did not expect to get called here\00", align 1
@switch.table._ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE = private unnamed_addr constant [4 x i32 (i32, i32)*] [i32 (i32, i32)* @_ZL13diffAlphaProcjj, i32 (i32, i32)* @_ZL13sectAlphaProcjj, i32 (i32, i32)* @_ZL14unionAlphaProcjj, i32 (i32, i32)* @_ZL12xorAlphaProcjj], align 8
@switch.table._ZN15SkAAClipBlitter8blitMaskERK6SkMaskRK7SkIRect = private unnamed_addr constant [4 x void (i8*, i32, i8*, i32, i8*)*] [void (i8*, i32, i8*, i32, i8*)* @_Z6mergeTIhEvPKviPKhiPv, void (i8*, i32, i8*, i32, i8*)* @_Z6mergeTIhEvPKviPKhiPv, void (i8*, i32, i8*, i32, i8*)* null, void (i8*, i32, i8*, i32, i8*)* @_Z6mergeTItEvPKviPKhiPv], align 8

@_ZN8SkAAClip4IterC1ERKS_ = hidden unnamed_addr alias void (%"class.SkAAClip::Iter"*, %class.SkAAClip*), void (%"class.SkAAClip::Iter"*, %class.SkAAClip*)* @_ZN8SkAAClip4IterC2ERKS_
@_ZN8SkAAClipC1Ev = hidden unnamed_addr alias void (%class.SkAAClip*), void (%class.SkAAClip*)* @_ZN8SkAAClipC2Ev
@_ZN8SkAAClipC1ERKS_ = hidden unnamed_addr alias void (%class.SkAAClip*, %class.SkAAClip*), void (%class.SkAAClip*, %class.SkAAClip*)* @_ZN8SkAAClipC2ERKS_
@_ZN8SkAAClipD1Ev = hidden unnamed_addr alias void (%class.SkAAClip*), void (%class.SkAAClip*)* @_ZN8SkAAClipD2Ev
@_ZN15SkAAClipBlitterD1Ev = hidden unnamed_addr alias void (%class.SkAAClipBlitter*), void (%class.SkAAClipBlitter*)* @_ZN15SkAAClipBlitterD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkAAClip4IterC2ERKS_(%"class.SkAAClip::Iter"* nocapture, %class.SkAAClip* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %4 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %3, align 8
  %5 = icmp eq %"struct.SkAAClip::RunHead"* %4, null
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 5
  store i8 1, i8* %7, align 8
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 3
  store i32 %9, i32* %10, align 8
  %11 = bitcast %"class.SkAAClip::Iter"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false)
  br label %39

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %4, i64 1
  %14 = bitcast %"struct.SkAAClip::RunHead"* %13 to %"struct.SkAAClip::YOffset"*
  %15 = bitcast %"class.SkAAClip::Iter"* %0 to %"struct.SkAAClip::RunHead"**
  store %"struct.SkAAClip::RunHead"* %13, %"struct.SkAAClip::RunHead"** %15, align 8
  %16 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %4, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %14, i64 %18
  %20 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 1
  store %"struct.SkAAClip::YOffset"* %19, %"struct.SkAAClip::YOffset"** %20, align 8
  %21 = load i32, i32* %16, align 4
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %14, i64 %22
  %24 = bitcast %"struct.SkAAClip::YOffset"* %23 to i8*
  %25 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %4, i64 1, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %24, i64 %27
  %29 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 2
  store i8* %28, i8** %29, align 8
  %30 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 0, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 3
  store i32 %31, i32* %32, align 8
  %33 = load i32, i32* %30, align 4
  %34 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %33, 1
  %37 = add i32 %36, %35
  %38 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 5
  store i8 0, i8* %38, align 8
  br label %39

39:                                               ; preds = %12, %6
  %40 = phi i32 [ %37, %12 ], [ %9, %6 ]
  %41 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 4
  store i32 %40, i32* %41, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN8SkAAClip4Iter4nextEv(%"class.SkAAClip::Iter"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 5
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 0
  %7 = load %"struct.SkAAClip::YOffset"*, %"struct.SkAAClip::YOffset"** %6, align 8
  %8 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %7, i64 1
  %9 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 4
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 3
  store i32 %10, i32* %11, align 8
  %12 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 1
  %13 = load %"struct.SkAAClip::YOffset"*, %"struct.SkAAClip::YOffset"** %12, align 8
  %14 = icmp ult %"struct.SkAAClip::YOffset"* %8, %13
  br i1 %14, label %17, label %15

15:                                               ; preds = %5
  store i8 1, i8* %2, align 8
  store i32 2147483647, i32* %9, align 4
  %16 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 2
  store i8* null, i8** %16, align 8
  br label %33

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %8, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %7, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = add i32 %19, %10
  %23 = sub i32 %22, %21
  store i32 %23, i32* %9, align 4
  %24 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %7, i64 1, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %7, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sub i32 %25, %27
  %29 = getelementptr inbounds %"class.SkAAClip::Iter", %"class.SkAAClip::Iter"* %0, i64 0, i32 2
  %30 = load i8*, i8** %29, align 8
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds i8, i8* %30, i64 %31
  store i8* %32, i8** %29, align 8
  store %"struct.SkAAClip::YOffset"* %8, %"struct.SkAAClip::YOffset"** %6, align 8
  br label %33

33:                                               ; preds = %15, %17, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip13trimLeftRightEv(%class.SkAAClip* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %147, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %7, %9
  %11 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1
  %12 = bitcast %"struct.SkAAClip::RunHead"* %11 to %"struct.SkAAClip::YOffset"*
  %13 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %15
  %17 = bitcast %"struct.SkAAClip::YOffset"* %16 to i8*
  br label %18

18:                                               ; preds = %63, %5
  %19 = phi %"struct.SkAAClip::YOffset"* [ %12, %5 ], [ %71, %63 ]
  %20 = phi i32 [ %10, %5 ], [ %66, %63 ]
  %21 = phi i32 [ %10, %5 ], [ %68, %63 ]
  %22 = icmp ult %"struct.SkAAClip::YOffset"* %19, %16
  br i1 %22, label %23, label %72

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %19, i64 0, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %17, i64 %26
  br label %28

28:                                               ; preds = %35, %23
  %29 = phi i32 [ %10, %23 ], [ %40, %35 ]
  %30 = phi i32 [ 0, %23 ], [ %38, %35 ]
  %31 = phi i8* [ %27, %23 ], [ %39, %35 ]
  %32 = getelementptr inbounds i8, i8* %31, i64 1
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %42

35:                                               ; preds = %28
  %36 = load i8, i8* %31, align 1
  %37 = zext i8 %36 to i32
  %38 = add nuw nsw i32 %30, %37
  %39 = getelementptr inbounds i8, i8* %31, i64 2
  %40 = sub nsw i32 %29, %37
  %41 = icmp sgt i32 %40, 0
  br i1 %41, label %28, label %42

42:                                               ; preds = %35, %28
  %43 = phi i32 [ %29, %28 ], [ %40, %35 ]
  %44 = phi i32 [ %30, %28 ], [ %38, %35 ]
  %45 = phi i8* [ %31, %28 ], [ %39, %35 ]
  %46 = icmp eq i32 %43, 0
  br i1 %46, label %63, label %47

47:                                               ; preds = %42
  %48 = icmp sgt i32 %43, 0
  br i1 %48, label %49, label %63

49:                                               ; preds = %47, %49
  %50 = phi i8* [ %60, %49 ], [ %45, %47 ]
  %51 = phi i32 [ %59, %49 ], [ 0, %47 ]
  %52 = phi i32 [ %61, %49 ], [ %43, %47 ]
  %53 = load i8, i8* %50, align 1
  %54 = zext i8 %53 to i32
  %55 = getelementptr inbounds i8, i8* %50, i64 1
  %56 = load i8, i8* %55, align 1
  %57 = icmp eq i8 %56, 0
  %58 = add nsw i32 %51, %54
  %59 = select i1 %57, i32 %58, i32 0
  %60 = getelementptr inbounds i8, i8* %50, i64 2
  %61 = sub nsw i32 %52, %54
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %49, label %63

63:                                               ; preds = %49, %42, %47
  %64 = phi i32 [ %44, %42 ], [ 0, %47 ], [ %59, %49 ]
  %65 = icmp slt i32 %44, %20
  %66 = select i1 %65, i32 %44, i32 %20
  %67 = icmp slt i32 %64, %21
  %68 = select i1 %67, i32 %64, i32 %21
  %69 = or i32 %68, %66
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %19, i64 1
  br i1 %70, label %147, label %18

72:                                               ; preds = %18
  %73 = icmp eq i32 %10, %20
  br i1 %73, label %74, label %83

74:                                               ; preds = %72
  %75 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = atomicrmw sub i32* %75, i32 1 seq_cst
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %78, label %81

78:                                               ; preds = %74
  %79 = bitcast %"struct.SkAAClip::RunHead"** %2 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %80) #14
  br label %81

81:                                               ; preds = %74, %78
  %82 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 24, i1 false) #14
  br label %147

83:                                               ; preds = %72
  %84 = add nsw i32 %9, %20
  store i32 %84, i32* %8, align 8
  %85 = sub nsw i32 %7, %21
  store i32 %85, i32* %6, align 8
  %86 = icmp ugt %"struct.SkAAClip::YOffset"* %16, %12
  br i1 %86, label %87, label %147

87:                                               ; preds = %83
  %88 = icmp sgt i32 %20, 0
  %89 = icmp eq i32 %21, 0
  br label %90

90:                                               ; preds = %87, %142
  %91 = phi %"struct.SkAAClip::YOffset"* [ %12, %87 ], [ %145, %142 ]
  %92 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %91, i64 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds i8, i8* %17, i64 %94
  br i1 %88, label %96, label %113

96:                                               ; preds = %90, %109
  %97 = phi i8* [ %104, %109 ], [ %95, %90 ]
  %98 = phi i32 [ %103, %109 ], [ %10, %90 ]
  %99 = phi i32 [ %110, %109 ], [ 0, %90 ]
  %100 = phi i32 [ %111, %109 ], [ %20, %90 ]
  %101 = load i8, i8* %97, align 1
  %102 = zext i8 %101 to i32
  %103 = sub nsw i32 %98, %102
  %104 = getelementptr inbounds i8, i8* %97, i64 2
  %105 = icmp slt i32 %100, %102
  br i1 %105, label %106, label %109

106:                                              ; preds = %96
  %107 = trunc i32 %100 to i8
  %108 = sub i8 %101, %107
  store i8 %108, i8* %97, align 1
  br label %113

109:                                              ; preds = %96
  %110 = add nuw nsw i32 %99, 2
  %111 = sub nsw i32 %100, %102
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %96, label %113

113:                                              ; preds = %109, %106, %90
  %114 = phi i32 [ %99, %106 ], [ 0, %90 ], [ %110, %109 ]
  %115 = phi i32 [ %103, %106 ], [ %10, %90 ], [ %103, %109 ]
  %116 = phi i8* [ %104, %106 ], [ %95, %90 ], [ %104, %109 ]
  br i1 %89, label %142, label %117

117:                                              ; preds = %113
  %118 = icmp sgt i32 %115, 0
  br i1 %118, label %119, label %127

119:                                              ; preds = %117, %119
  %120 = phi i8* [ %125, %119 ], [ %116, %117 ]
  %121 = phi i32 [ %124, %119 ], [ %115, %117 ]
  %122 = load i8, i8* %120, align 1
  %123 = zext i8 %122 to i32
  %124 = sub nsw i32 %121, %123
  %125 = getelementptr inbounds i8, i8* %120, i64 2
  %126 = icmp sgt i32 %124, 0
  br i1 %126, label %119, label %127

127:                                              ; preds = %119, %117
  %128 = phi i8* [ %116, %117 ], [ %125, %119 ]
  br label %129

129:                                              ; preds = %127, %139
  %130 = phi i32 [ %140, %139 ], [ %21, %127 ]
  %131 = phi i8* [ %132, %139 ], [ %128, %127 ]
  %132 = getelementptr inbounds i8, i8* %131, i64 -2
  %133 = load i8, i8* %132, align 1
  %134 = zext i8 %133 to i32
  %135 = icmp slt i32 %130, %134
  br i1 %135, label %136, label %139

136:                                              ; preds = %129
  %137 = trunc i32 %130 to i8
  %138 = sub i8 %133, %137
  store i8 %138, i8* %132, align 1
  br label %142

139:                                              ; preds = %129
  %140 = sub nsw i32 %130, %134
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %129, label %142

142:                                              ; preds = %139, %113, %136
  %143 = load i32, i32* %92, align 4
  %144 = add i32 %143, %114
  store i32 %144, i32* %92, align 4
  %145 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %91, i64 1
  %146 = icmp ult %"struct.SkAAClip::YOffset"* %145, %16
  br i1 %146, label %90, label %147

147:                                              ; preds = %63, %142, %83, %81, %1
  %148 = phi i1 [ false, %1 ], [ false, %81 ], [ true, %83 ], [ true, %142 ], [ true, %63 ]
  ret i1 %148
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip8setEmptyEv(%class.SkAAClip* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkAAClip::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %5, %9
  %13 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %13, i8 0, i64 24, i1 false)
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip13trimTopBottomEv(%class.SkAAClip* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %167, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = sub i32 %7, %9
  %11 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1
  %12 = bitcast %"struct.SkAAClip::RunHead"* %11 to %"struct.SkAAClip::YOffset"*
  %13 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %15
  %17 = bitcast %"struct.SkAAClip::YOffset"* %16 to i8*
  %18 = icmp ugt %"struct.SkAAClip::YOffset"* %16, %12
  br i1 %18, label %19, label %42

19:                                               ; preds = %5, %38
  %20 = phi i32 [ %39, %38 ], [ 0, %5 ]
  %21 = phi %"struct.SkAAClip::YOffset"* [ %40, %38 ], [ %12, %5 ]
  %22 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %21, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %17, i64 %24
  br label %26

26:                                               ; preds = %32, %19
  %27 = phi i8* [ %25, %19 ], [ %36, %32 ]
  %28 = phi i32 [ %10, %19 ], [ %35, %32 ]
  %29 = getelementptr inbounds i8, i8* %27, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %42

32:                                               ; preds = %26
  %33 = load i8, i8* %27, align 1
  %34 = zext i8 %33 to i32
  %35 = sub nsw i32 %28, %34
  %36 = getelementptr inbounds i8, i8* %27, i64 2
  %37 = icmp sgt i32 %35, 0
  br i1 %37, label %26, label %38

38:                                               ; preds = %32
  %39 = add nuw nsw i32 %20, 1
  %40 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %21, i64 1
  %41 = icmp ult %"struct.SkAAClip::YOffset"* %40, %16
  br i1 %41, label %19, label %42

42:                                               ; preds = %38, %26, %5
  %43 = phi i32 [ 0, %5 ], [ %20, %26 ], [ %39, %38 ]
  %44 = icmp eq i32 %43, %14
  br i1 %44, label %45, label %54

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = atomicrmw sub i32* %46, i32 1 seq_cst
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %49, label %52

49:                                               ; preds = %45
  %50 = bitcast %"struct.SkAAClip::RunHead"** %2 to i8**
  %51 = load i8*, i8** %50, align 8
  tail call void @_Z7sk_freePv(i8* %51) #14
  br label %52

52:                                               ; preds = %45, %49
  %53 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %53, i8 0, i64 24, i1 false) #14
  br label %167

54:                                               ; preds = %42
  %55 = icmp eq i32 %43, 0
  br i1 %55, label %119, label %56

56:                                               ; preds = %54
  %57 = add nsw i32 %43, -1
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %58, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = add nsw i32 %60, 1
  %62 = icmp slt i32 %43, %14
  %63 = zext i32 %43 to i64
  br i1 %62, label %64, label %83

64:                                               ; preds = %56
  %65 = zext i32 %14 to i64
  %66 = sub nsw i64 %65, %63
  %67 = xor i64 %63, -1
  %68 = add nsw i64 %67, %65
  %69 = and i64 %66, 3
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %80, label %71

71:                                               ; preds = %64, %71
  %72 = phi i64 [ %77, %71 ], [ %63, %64 ]
  %73 = phi i64 [ %78, %71 ], [ %69, %64 ]
  %74 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %72, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = sub nsw i32 %75, %61
  store i32 %76, i32* %74, align 4
  %77 = add nuw nsw i64 %72, 1
  %78 = add i64 %73, -1
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %71, !llvm.loop !3

80:                                               ; preds = %71, %64
  %81 = phi i64 [ %63, %64 ], [ %77, %71 ]
  %82 = icmp ult i64 %68, 3
  br i1 %82, label %83, label %100

83:                                               ; preds = %80, %100, %56
  %84 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 2
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"struct.SkAAClip::RunHead"* %11 to i8*
  %87 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %63
  %88 = bitcast %"struct.SkAAClip::YOffset"* %87 to i8*
  %89 = sub nsw i64 %15, %63
  %90 = shl nsw i64 %89, 3
  %91 = add i64 %90, %85
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %88, i64 %91, i1 false)
  %92 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %93 = load i32, i32* %92, align 4
  %94 = add nsw i32 %93, %61
  store i32 %94, i32* %92, align 4
  %95 = load i32, i32* %13, align 4
  %96 = sub nsw i32 %95, %43
  store i32 %96, i32* %13, align 4
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %97
  %99 = bitcast %"struct.SkAAClip::YOffset"* %98 to i8*
  br label %119

100:                                              ; preds = %80, %100
  %101 = phi i64 [ %117, %100 ], [ %81, %80 ]
  %102 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %101, i32 0
  %103 = load i32, i32* %102, align 4
  %104 = sub nsw i32 %103, %61
  store i32 %104, i32* %102, align 4
  %105 = add nuw nsw i64 %101, 1
  %106 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %105, i32 0
  %107 = load i32, i32* %106, align 4
  %108 = sub nsw i32 %107, %61
  store i32 %108, i32* %106, align 4
  %109 = add nuw nsw i64 %101, 2
  %110 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %109, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = sub nsw i32 %111, %61
  store i32 %112, i32* %110, align 4
  %113 = add nuw nsw i64 %101, 3
  %114 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %113, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = sub nsw i32 %115, %61
  store i32 %116, i32* %114, align 4
  %117 = add nuw nsw i64 %101, 4
  %118 = icmp eq i64 %117, %65
  br i1 %118, label %83, label %100

119:                                              ; preds = %54, %83
  %120 = phi i64 [ %15, %54 ], [ %97, %83 ]
  %121 = phi i8* [ %17, %54 ], [ %99, %83 ]
  %122 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %12, i64 %120
  br label %123

123:                                              ; preds = %136, %119
  %124 = phi %"struct.SkAAClip::YOffset"* [ %122, %119 ], [ %125, %136 ]
  %125 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %124, i64 -1
  %126 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %124, i64 -1, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds i8, i8* %121, i64 %128
  br label %130

130:                                              ; preds = %136, %123
  %131 = phi i8* [ %129, %123 ], [ %140, %136 ]
  %132 = phi i32 [ %10, %123 ], [ %139, %136 ]
  %133 = getelementptr inbounds i8, i8* %131, i64 1
  %134 = load i8, i8* %133, align 1
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %136, label %142

136:                                              ; preds = %130
  %137 = load i8, i8* %131, align 1
  %138 = zext i8 %137 to i32
  %139 = sub nsw i32 %132, %138
  %140 = getelementptr inbounds i8, i8* %131, i64 2
  %141 = icmp sgt i32 %139, 0
  br i1 %141, label %130, label %123

142:                                              ; preds = %130
  %143 = ptrtoint %"struct.SkAAClip::YOffset"* %122 to i64
  %144 = ptrtoint %"struct.SkAAClip::YOffset"* %125 to i64
  %145 = sub i64 %143, %144
  %146 = lshr exact i64 %145, 3
  %147 = trunc i64 %146 to i32
  %148 = add i32 %147, -1
  %149 = icmp sgt i32 %148, 0
  br i1 %149, label %150, label %167

150:                                              ; preds = %142
  %151 = sext i32 %148 to i64
  %152 = sub nsw i64 0, %151
  %153 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %122, i64 %152
  %154 = bitcast %"struct.SkAAClip::YOffset"* %153 to i8*
  %155 = bitcast %"struct.SkAAClip::YOffset"* %122 to i8*
  %156 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 2
  %157 = load i64, i64* %156, align 8
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %157, i1 false)
  %158 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %159 = load i32, i32* %158, align 4
  %160 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %125, i64 0, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = add i32 %159, 1
  %163 = add i32 %162, %161
  %164 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  store i32 %163, i32* %164, align 4
  %165 = load i32, i32* %13, align 4
  %166 = sub nsw i32 %165, %148
  store i32 %166, i32* %13, align 4
  br label %167

167:                                              ; preds = %142, %150, %52, %1
  %168 = phi i1 [ false, %1 ], [ false, %52 ], [ true, %150 ], [ true, %142 ]
  ret i1 %168
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip10trimBoundsEv(%class.SkAAClip* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1
  %7 = bitcast %"struct.SkAAClip::RunHead"* %6 to %"struct.SkAAClip::YOffset"*
  %8 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = add nsw i32 %9, -1
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %7, i64 %11, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = add i32 %13, 1
  %17 = add i32 %16, %15
  %18 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  store i32 %17, i32* %18, align 4
  %19 = tail call zeroext i1 @_ZN8SkAAClip13trimTopBottomEv(%class.SkAAClip* %0)
  br i1 %19, label %20, label %22

20:                                               ; preds = %5
  %21 = tail call zeroext i1 @_ZN8SkAAClip13trimLeftRightEv(%class.SkAAClip* %0)
  br label %22

22:                                               ; preds = %5, %20, %1
  %23 = phi i1 [ false, %1 ], [ false, %5 ], [ %21, %20 ]
  ret i1 %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkAAClip8freeRunsEv(%class.SkAAClip* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkAAClip::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %5, %9
  ret void
}

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkAAClipC2Ev(%class.SkAAClip* nocapture) unnamed_addr #2 align 2 {
  %2 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkAAClipC2ERKS_(%class.SkAAClip*, %class.SkAAClip* readonly dereferenceable(24)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  store %"struct.SkAAClip::RunHead"* null, %"struct.SkAAClip::RunHead"** %3, align 8
  %4 = icmp eq %class.SkAAClip* %0, %1
  br i1 %4, label %14, label %5

5:                                                ; preds = %2
  %6 = bitcast %class.SkAAClip* %0 to i8*
  %7 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 4 %7, i64 16, i1 false) #14
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %9 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %8, align 8
  store %"struct.SkAAClip::RunHead"* %9, %"struct.SkAAClip::RunHead"** %3, align 8
  %10 = icmp eq %"struct.SkAAClip::RunHead"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw add i32* %12, i32 1 seq_cst
  br label %14

14:                                               ; preds = %2, %5, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %class.SkAAClip* @_ZN8SkAAClipaSERKS_(%class.SkAAClip* returned, %class.SkAAClip* readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %class.SkAAClip* %0, %1
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %6 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %5, align 8
  %7 = icmp eq %"struct.SkAAClip::RunHead"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 seq_cst
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = bitcast %"struct.SkAAClip::RunHead"** %5 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #14
  br label %15

15:                                               ; preds = %4, %8, %12
  %16 = bitcast %class.SkAAClip* %0 to i8*
  %17 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false)
  %18 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %19 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %18, align 8
  store %"struct.SkAAClip::RunHead"* %19, %"struct.SkAAClip::RunHead"** %5, align 8
  %20 = icmp eq %"struct.SkAAClip::RunHead"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 seq_cst
  br label %24

24:                                               ; preds = %15, %2, %21
  ret %class.SkAAClip* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkAAClipD2Ev(%class.SkAAClip* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = atomicrmw sub i32* %6, i32 1 seq_cst
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %12

9:                                                ; preds = %5
  %10 = bitcast %"struct.SkAAClip::RunHead"** %2 to i8**
  %11 = load i8*, i8** %10, align 8
  tail call void @_Z7sk_freePv(i8* %11) #14
  br label %12

12:                                               ; preds = %1, %5, %9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZeqRK8SkAAClipS1_(%class.SkAAClip* readonly dereferenceable(24), %class.SkAAClip* readonly dereferenceable(24)) local_unnamed_addr #4 {
  %3 = icmp eq %class.SkAAClip* %0, %1
  br i1 %3, label %43, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkAAClip* %0 to i8*
  %6 = bitcast %class.SkAAClip* %1 to i8*
  %7 = tail call i32 @bcmp(i8* %5, i8* %6, i64 16) #14
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %43

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %11 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %10, align 8
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %13 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %12, align 8
  %14 = icmp eq %"struct.SkAAClip::RunHead"* %11, %13
  br i1 %14, label %43, label %15

15:                                               ; preds = %9
  %16 = icmp eq %"struct.SkAAClip::RunHead"* %11, null
  %17 = icmp eq %"struct.SkAAClip::RunHead"* %13, null
  %18 = or i1 %16, %17
  br i1 %18, label %43, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %11, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %21, %23
  br i1 %24, label %25, label %43

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %11, i64 0, i32 2
  %27 = load i64, i64* %26, align 8
  %28 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 0, i32 2
  %29 = load i64, i64* %28, align 8
  %30 = icmp eq i64 %27, %29
  br i1 %30, label %31, label %43

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %11, i64 1
  %33 = bitcast %"struct.SkAAClip::RunHead"* %32 to %"struct.SkAAClip::YOffset"*
  %34 = sext i32 %21 to i64
  %35 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %33, i64 %34
  %36 = bitcast %"struct.SkAAClip::YOffset"* %35 to i8*
  %37 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 1
  %38 = bitcast %"struct.SkAAClip::RunHead"* %37 to %"struct.SkAAClip::YOffset"*
  %39 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %38, i64 %34
  %40 = bitcast %"struct.SkAAClip::YOffset"* %39 to i8*
  %41 = tail call i32 @bcmp(i8* %36, i8* %40, i64 %27)
  %42 = icmp eq i32 %41, 0
  br label %43

43:                                               ; preds = %4, %9, %15, %31, %25, %19, %2
  %44 = phi i1 [ true, %2 ], [ false, %4 ], [ true, %9 ], [ false, %15 ], [ false, %25 ], [ false, %19 ], [ %42, %31 ]
  ret i1 %44
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8SkAAClip4swapERS_(%class.SkAAClip* nocapture, %class.SkAAClip* nocapture dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = bitcast %class.SkAAClip* %0 to <4 x i32>*
  %4 = load <4 x i32>, <4 x i32>* %3, align 4
  %5 = bitcast %class.SkAAClip* %0 to i8*
  %6 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %5, i8* align 4 %6, i64 16, i1 false) #14
  %7 = bitcast %class.SkAAClip* %1 to <4 x i32>*
  store <4 x i32> %4, <4 x i32>* %7, align 4
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %10 = bitcast %"struct.SkAAClip::RunHead"** %8 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"struct.SkAAClip::RunHead"** %9 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip3setERKS_(%class.SkAAClip*, %class.SkAAClip* readonly dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = icmp eq %class.SkAAClip* %0, %1
  br i1 %3, label %24, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %6 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %5, align 8
  %7 = icmp eq %"struct.SkAAClip::RunHead"* %6, null
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = atomicrmw sub i32* %9, i32 1 seq_cst
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %15

12:                                               ; preds = %8
  %13 = bitcast %"struct.SkAAClip::RunHead"** %5 to i8**
  %14 = load i8*, i8** %13, align 8
  tail call void @_Z7sk_freePv(i8* %14) #14
  br label %15

15:                                               ; preds = %12, %8, %4
  %16 = bitcast %class.SkAAClip* %0 to i8*
  %17 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 4 %17, i64 16, i1 false) #14
  %18 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %19 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %18, align 8
  store %"struct.SkAAClip::RunHead"* %19, %"struct.SkAAClip::RunHead"** %5, align 8
  %20 = icmp eq %"struct.SkAAClip::RunHead"* %19, null
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = atomicrmw add i32* %22, i32 1 seq_cst
  br label %24

24:                                               ; preds = %2, %15, %21
  %25 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %26 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %25, align 8
  %27 = icmp ne %"struct.SkAAClip::RunHead"* %26, null
  ret i1 %27
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip7setRectERK7SkIRect(%class.SkAAClip* nocapture, %struct.SkIRect* nocapture readonly dereferenceable(16)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = sub nsw i64 %5, %8
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = sext i32 %14 to i64
  %16 = sub nsw i64 %12, %15
  %17 = icmp slt i64 %9, 1
  %18 = icmp slt i64 %16, 1
  %19 = or i1 %17, %18
  br i1 %19, label %24, label %20

20:                                               ; preds = %2
  %21 = or i64 %16, %9
  %22 = add nsw i64 %21, 2147483648
  %23 = icmp ugt i64 %22, 4294967295
  br i1 %23, label %24, label %37

24:                                               ; preds = %2, %20
  %25 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %26 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %25, align 8
  %27 = icmp eq %"struct.SkAAClip::RunHead"* %26, null
  br i1 %27, label %35, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw sub i32* %29, i32 1 seq_cst
  %31 = icmp eq i32 %30, 1
  br i1 %31, label %32, label %35

32:                                               ; preds = %28
  %33 = bitcast %"struct.SkAAClip::RunHead"** %25 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #14
  br label %35

35:                                               ; preds = %24, %28, %32
  %36 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %36, i8 0, i64 24, i1 false) #14
  br label %97

37:                                               ; preds = %20
  %38 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %39 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %38, align 8
  %40 = icmp eq %"struct.SkAAClip::RunHead"* %39, null
  br i1 %40, label %48, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i32* %42, i32 1 seq_cst
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %48

45:                                               ; preds = %41
  %46 = bitcast %"struct.SkAAClip::RunHead"** %38 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #14
  br label %48

48:                                               ; preds = %37, %41, %45
  %49 = bitcast %class.SkAAClip* %0 to i8*
  %50 = bitcast %struct.SkIRect* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 4 %50, i64 16, i1 false)
  %51 = load i32, i32* %3, align 4
  %52 = load i32, i32* %6, align 4
  %53 = sub i32 %51, %52
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %66

55:                                               ; preds = %48, %55
  %56 = phi i32 [ %58, %55 ], [ 0, %48 ]
  %57 = phi i32 [ %61, %55 ], [ %53, %48 ]
  %58 = add nuw nsw i32 %56, 1
  %59 = icmp slt i32 %57, 255
  %60 = select i1 %59, i32 %57, i32 255
  %61 = sub nsw i32 %57, %60
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %55, label %63

63:                                               ; preds = %55
  %64 = shl nuw i32 %58, 1
  %65 = sext i32 %64 to i64
  br label %66

66:                                               ; preds = %63, %48
  %67 = phi i64 [ 0, %48 ], [ %65, %63 ]
  %68 = add nsw i64 %67, 24
  %69 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %68, i32 2) #14
  %70 = bitcast i8* %69 to i32*
  store atomic i32 1, i32* %70 seq_cst, align 4
  %71 = getelementptr inbounds i8, i8* %69, i64 4
  %72 = bitcast i8* %71 to i32*
  store i32 1, i32* %72, align 4
  %73 = getelementptr inbounds i8, i8* %69, i64 8
  %74 = bitcast i8* %73 to i64*
  store i64 %67, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %69, i64 16
  %76 = load i32, i32* %10, align 4
  %77 = load i32, i32* %13, align 4
  %78 = xor i32 %77, -1
  %79 = add i32 %76, %78
  %80 = bitcast i8* %75 to i32*
  store i32 %79, i32* %80, align 4
  %81 = getelementptr inbounds i8, i8* %69, i64 20
  %82 = bitcast i8* %81 to i32*
  store i32 0, i32* %82, align 4
  br i1 %54, label %83, label %95

83:                                               ; preds = %66
  %84 = getelementptr inbounds i8, i8* %69, i64 24
  br label %85

85:                                               ; preds = %85, %83
  %86 = phi i8* [ %93, %85 ], [ %84, %83 ]
  %87 = phi i32 [ %92, %85 ], [ %53, %83 ]
  %88 = icmp slt i32 %87, 255
  %89 = select i1 %88, i32 %87, i32 255
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %86, align 1
  %91 = getelementptr inbounds i8, i8* %86, i64 1
  store i8 -1, i8* %91, align 1
  %92 = sub nsw i32 %87, %89
  %93 = getelementptr inbounds i8, i8* %86, i64 2
  %94 = icmp sgt i32 %92, 0
  br i1 %94, label %85, label %95

95:                                               ; preds = %85, %66
  %96 = bitcast %"struct.SkAAClip::RunHead"** %38 to i8**
  store i8* %69, i8** %96, align 8
  br label %97

97:                                               ; preds = %95, %35
  %98 = phi i1 [ false, %35 ], [ true, %95 ]
  ret i1 %98
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkAAClip6isRectEv(%class.SkAAClip* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %3 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %2, align 8
  %4 = icmp eq %"struct.SkAAClip::RunHead"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %9, label %40

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  %13 = load i32, i32* %12, align 4
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %16, label %40

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1, i32 2
  %18 = bitcast i64* %17 to i8*
  %19 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %3, i64 1, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds i8, i8* %18, i64 %21
  %23 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %24, %26
  br label %28

28:                                               ; preds = %34, %16
  %29 = phi i8* [ %22, %16 ], [ %38, %34 ]
  %30 = phi i32 [ %27, %16 ], [ %37, %34 ]
  %31 = getelementptr inbounds i8, i8* %29, i64 1
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, -1
  br i1 %33, label %34, label %40

34:                                               ; preds = %28
  %35 = load i8, i8* %29, align 1
  %36 = zext i8 %35 to i32
  %37 = sub nsw i32 %30, %36
  %38 = getelementptr inbounds i8, i8* %29, i64 2
  %39 = icmp sgt i32 %37, 0
  br i1 %39, label %28, label %40

40:                                               ; preds = %28, %34, %5, %9, %1
  %41 = phi i1 [ false, %1 ], [ false, %5 ], [ false, %9 ], [ true, %34 ], [ false, %28 ]
  ret i1 %41
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip7setRectERK6SkRectb(%class.SkAAClip*, %struct.SkRect* dereferenceable(16), i1 zeroext) local_unnamed_addr #2 align 2 {
  %4 = alloca %class.SkPath, align 8
  %5 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %6 = load float, float* %5, align 4
  %7 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %8 = load float, float* %7, align 4
  %9 = fcmp olt float %6, %8
  br i1 %9, label %10, label %16

10:                                               ; preds = %3
  %11 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %12 = load float, float* %11, align 4
  %13 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = fcmp uge float %12, %14
  br i1 %15, label %16, label %29

16:                                               ; preds = %3, %10
  %17 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %18 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %17, align 8
  %19 = icmp eq %"struct.SkAAClip::RunHead"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 seq_cst
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = bitcast %"struct.SkAAClip::RunHead"** %17 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #14
  br label %27

27:                                               ; preds = %16, %20, %24
  %28 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 24, i1 false) #14
  br label %32

29:                                               ; preds = %10
  %30 = bitcast %class.SkPath* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %4, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 0) #14
  %31 = call zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip* %0, %class.SkPath* nonnull dereferenceable(16) %4, %class.SkRegion* null, i1 zeroext %2)
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  br label %32

32:                                               ; preds = %29, %27
  %33 = phi i1 [ false, %27 ], [ %31, %29 ]
  ret i1 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip*, %class.SkPath* dereferenceable(16), %class.SkRegion*, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca <4 x i32>, align 16
  %6 = bitcast <4 x i32>* %5 to %struct.SkIRect*
  %7 = alloca %class.SkRegion, align 8
  %8 = alloca %class.SkRegion, align 8
  %9 = alloca %"class.SkAAClip::Builder", align 8
  %10 = alloca %"class.SkAAClip::BuilderBlitter", align 8
  %11 = icmp eq %class.SkRegion* %2, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %2, i64 0, i32 1
  %14 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %13, align 8
  %15 = icmp eq %"struct.SkRegion::RunHead"* %14, inttoptr (i64 -1 to %"struct.SkRegion::RunHead"*)
  br i1 %15, label %16, label %29

16:                                               ; preds = %12
  %17 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %18 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %17, align 8
  %19 = icmp eq %"struct.SkAAClip::RunHead"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 seq_cst
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = bitcast %"struct.SkAAClip::RunHead"** %17 to i8**
  %26 = load i8*, i8** %25, align 8
  tail call void @_Z7sk_freePv(i8* %26) #14
  br label %27

27:                                               ; preds = %16, %20, %24
  %28 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 24, i1 false) #14
  br label %198

29:                                               ; preds = %4, %12
  %30 = bitcast <4 x i32>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %30) #14
  %31 = getelementptr inbounds <4 x i32>, <4 x i32>* %5, i64 0, i64 0
  %32 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %33 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %34 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 3
  %35 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %36 = bitcast <4 x i32>* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 -86, i64 16, i1 false)
  %37 = load %class.SkPathRef*, %class.SkPathRef** %35, align 8
  %38 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 9
  %39 = load i8, i8* %38, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %29
  %42 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 3, i32 0
  %44 = load %struct.SkPoint*, %struct.SkPoint** %43, align 8
  %45 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 3, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %42, %struct.SkPoint* %44, i32 %46) #14
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 10
  %49 = zext i1 %47 to i8
  store i8 %49, i8* %48, align 1
  store i8 0, i8* %38, align 8
  br label %50

50:                                               ; preds = %29, %41
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1, i32 0
  %52 = load float, float* %51, align 4
  %53 = tail call float @llvm.floor.f32(float %52) #14
  %54 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1, i32 1
  %55 = load float, float* %54, align 4
  %56 = tail call float @llvm.floor.f32(float %55) #14
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1, i32 2
  %58 = load float, float* %57, align 4
  %59 = tail call float @llvm.ceil.f32(float %58) #14
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %37, i64 0, i32 1, i32 3
  %61 = load float, float* %60, align 4
  %62 = tail call float @llvm.ceil.f32(float %61) #14
  %63 = insertelement <4 x float> undef, float %53, i32 0
  %64 = insertelement <4 x float> %63, float %56, i32 1
  %65 = insertelement <4 x float> %64, float %59, i32 2
  %66 = insertelement <4 x float> %65, float %62, i32 3
  %67 = fcmp olt <4 x float> %66, <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %68 = select <4 x i1> %67, <4 x float> %66, <4 x float> <float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000, float 0x41DFFFFFE0000000>
  %69 = fcmp ogt <4 x float> %68, <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %70 = select <4 x i1> %69, <4 x float> %68, <4 x float> <float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000, float 0xC1DFFFFFE0000000>
  %71 = fptosi <4 x float> %70 to <4 x i32>
  store <4 x i32> %71, <4 x i32>* %5, align 16
  %72 = bitcast %class.SkRegion* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #14
  %73 = bitcast %class.SkRegion* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1Ev(%class.SkRegion* nonnull %7) #14
  br i1 %11, label %74, label %76

74:                                               ; preds = %50
  %75 = call zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion* nonnull %7, %struct.SkIRect* nonnull dereferenceable(16) %6) #14
  br label %76

76:                                               ; preds = %74, %50
  %77 = phi %class.SkRegion* [ %7, %74 ], [ %2, %50 ]
  %78 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %78) #14
  %79 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %8, i64 0, i32 1
  %80 = bitcast %class.SkRegion* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %80, i8 -86, i64 24, i1 false)
  call void @_ZN8SkRegionC1ERKS_(%class.SkRegion* nonnull %8, %class.SkRegion* nonnull dereferenceable(24) %77) #14
  %81 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 4
  %82 = load i8, i8* %81, align 2
  %83 = and i8 %82, 2
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %87, label %85

85:                                               ; preds = %76
  %86 = bitcast %class.SkRegion* %77 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %30, i8* align 4 %86, i64 16, i1 false)
  br label %131

87:                                               ; preds = %76
  %88 = load i32, i32* %33, align 8
  %89 = sext i32 %88 to i64
  %90 = load i32, i32* %31, align 16
  %91 = sext i32 %90 to i64
  %92 = sub nsw i64 %89, %91
  %93 = load i32, i32* %34, align 4
  %94 = sext i32 %93 to i64
  %95 = load i32, i32* %32, align 4
  %96 = sext i32 %95 to i64
  %97 = sub nsw i64 %94, %96
  %98 = icmp slt i64 %92, 1
  %99 = icmp slt i64 %97, 1
  %100 = or i1 %98, %99
  br i1 %100, label %108, label %101

101:                                              ; preds = %87
  %102 = or i64 %97, %92
  %103 = add nsw i64 %102, 2147483648
  %104 = icmp ugt i64 %103, 4294967295
  br i1 %104, label %108, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %77, i64 0, i32 0
  %107 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* nonnull dereferenceable(16) %6, %struct.SkIRect* dereferenceable(16) %106) #14
  br i1 %107, label %121, label %108

108:                                              ; preds = %87, %105, %101
  %109 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %110 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %109, align 8
  %111 = icmp eq %"struct.SkAAClip::RunHead"* %110, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 seq_cst
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = bitcast %"struct.SkAAClip::RunHead"** %109 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @_Z7sk_freePv(i8* %118) #14
  br label %119

119:                                              ; preds = %108, %112, %116
  %120 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 24, i1 false) #14
  br label %196

121:                                              ; preds = %105
  %122 = load %"struct.SkRegion::RunHead"*, %"struct.SkRegion::RunHead"** %79, align 8
  %123 = icmp eq %"struct.SkRegion::RunHead"* %122, null
  br i1 %123, label %124, label %129

124:                                              ; preds = %121
  %125 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %8, i64 0, i32 0
  %126 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %125, %struct.SkIRect* nonnull dereferenceable(16) %125, %struct.SkIRect* nonnull dereferenceable(16) %6) #14
  br i1 %126, label %131, label %127

127:                                              ; preds = %124
  %128 = call zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion* nonnull %8) #14
  br label %131

129:                                              ; preds = %121
  %130 = call zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion* nonnull %8, %class.SkRegion* nonnull dereferenceable(24) %8, %struct.SkIRect* nonnull dereferenceable(16) %6, i32 1) #14
  br label %131

131:                                              ; preds = %129, %127, %124, %85
  %132 = bitcast %"class.SkAAClip::Builder"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %132) #14
  %133 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 1
  %134 = bitcast %class.SkTDArray.14* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 -86, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %132, i8* nonnull align 16 %30, i64 16, i1 false) #14
  %135 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 1
  %136 = bitcast %class.SkTDArray.14* %135 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %136, i8 0, i64 16, i1 false) #14
  %137 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 3
  store i32 -1, i32* %137, align 8
  %138 = load i32, i32* %33, align 8
  %139 = load i32, i32* %31, align 16
  %140 = sub i32 %138, %139
  %141 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 4
  store i32 %140, i32* %141, align 4
  %142 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 2
  store %"struct.SkAAClip::Builder::Row"* null, %"struct.SkAAClip::Builder::Row"** %142, align 8
  %143 = load i32, i32* %32, align 4
  %144 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 5
  store i32 %143, i32* %144, align 8
  %145 = bitcast %"class.SkAAClip::BuilderBlitter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %145) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 56, i1 false)
  %146 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 0, i32 1
  %148 = bitcast %class.SkAutoMalloc* %147 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %148, i8 0, i64 16, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN8SkAAClip14BuilderBlitterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %146, align 8
  %149 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 3
  store %"class.SkAAClip::Builder"* %9, %"class.SkAAClip::Builder"** %149, align 8
  %150 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 4
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 0, i32 2
  %154 = load i32, i32* %153, align 8
  %155 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 5
  store i32 %154, i32* %155, align 4
  %156 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 6
  store i32 2147483647, i32* %156, align 8
  %157 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 1
  store i32 -2147483647, i32* %157, align 8
  %158 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %10, i64 0, i32 0
  br i1 %3, label %159, label %160

159:                                              ; preds = %131
  call void @_ZN6SkScan12AntiFillPathERK6SkPathRK8SkRegionP9SkBlitterb(%class.SkPath* dereferenceable(16) %1, %class.SkRegion* nonnull dereferenceable(24) %8, %class.SkBlitter* nonnull %158, i1 zeroext true) #14
  br label %161

160:                                              ; preds = %131
  call void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16) %1, %class.SkRegion* nonnull dereferenceable(24) %8, %class.SkBlitter* nonnull %158) #14
  br label %161

161:                                              ; preds = %160, %159
  %162 = load i32, i32* %156, align 8
  %163 = icmp eq i32 %162, 2147483647
  br i1 %163, label %167, label %164

164:                                              ; preds = %161
  %165 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %149, align 8
  %166 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %165, i64 0, i32 5
  store i32 %162, i32* %166, align 8
  br label %167

167:                                              ; preds = %161, %164
  %168 = call zeroext i1 @_ZN8SkAAClip7Builder6finishEPS_(%"class.SkAAClip::Builder"* nonnull %9, %class.SkAAClip* %0)
  call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* nonnull %158) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %145) #14
  %169 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %135, i64 0, i32 0
  %170 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %169, align 8
  %171 = icmp eq %"struct.SkAAClip::Builder::Row"* %170, null
  %172 = bitcast %"struct.SkAAClip::Builder::Row"* %170 to i8*
  br i1 %171, label %194, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %9, i64 0, i32 1, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %170, i64 %176
  %178 = icmp sgt i32 %175, 0
  br i1 %178, label %179, label %194

179:                                              ; preds = %173, %188
  %180 = phi %"struct.SkAAClip::Builder::Row"* [ %189, %188 ], [ %170, %173 ]
  %181 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %180, i64 0, i32 2
  %182 = load %class.SkTDArray.1*, %class.SkTDArray.1** %181, align 8
  %183 = icmp eq %class.SkTDArray.1* %182, null
  br i1 %183, label %188, label %184

184:                                              ; preds = %179
  %185 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %182, i64 0, i32 0
  %186 = load i8*, i8** %185, align 8
  call void @_Z7sk_freePv(i8* %186) #14
  %187 = bitcast %class.SkTDArray.1* %182 to i8*
  call void @_ZdlPv(i8* %187) #15
  br label %188

188:                                              ; preds = %184, %179
  %189 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %180, i64 1
  %190 = icmp ult %"struct.SkAAClip::Builder::Row"* %189, %177
  br i1 %190, label %179, label %191

191:                                              ; preds = %188
  %192 = bitcast %class.SkTDArray.14* %135 to i8**
  %193 = load i8*, i8** %192, align 8
  br label %194

194:                                              ; preds = %167, %173, %191
  %195 = phi i8* [ %193, %191 ], [ %172, %173 ], [ %172, %167 ]
  call void @_Z7sk_freePv(i8* %195) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %132) #14
  br label %196

196:                                              ; preds = %194, %119
  %197 = phi i1 [ %168, %194 ], [ false, %119 ]
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %78) #14
  call void @_ZN8SkRegionD1Ev(%class.SkRegion* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %30) #14
  br label %198

198:                                              ; preds = %196, %27
  %199 = phi i1 [ false, %27 ], [ %197, %196 ]
  ret i1 %199
}

declare void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* sret, %struct.SkRect* dereferenceable(16), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN6SkPathD1Ev(%class.SkPath*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip9setRegionERK8SkRegion(%class.SkAAClip* nocapture, %class.SkRegion* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = alloca %"class.SkRegion::Iterator", align 8
  %4 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 1
  %5 = bitcast %"struct.SkRegion::RunHead"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  switch i64 %6, label %23 [
    i64 -1, label %7
    i64 0, label %20
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %9 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %8, align 8
  %10 = icmp eq %"struct.SkAAClip::RunHead"* %9, null
  br i1 %10, label %18, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = atomicrmw sub i32* %12, i32 1 seq_cst
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %18

15:                                               ; preds = %11
  %16 = bitcast %"struct.SkAAClip::RunHead"** %8 to i8**
  %17 = load i8*, i8** %16, align 8
  tail call void @_Z7sk_freePv(i8* %17) #14
  br label %18

18:                                               ; preds = %7, %11, %15
  %19 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 0, i64 24, i1 false) #14
  br label %400

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0
  %22 = tail call zeroext i1 @_ZN8SkAAClip7setRectERK7SkIRect(%class.SkAAClip* %0, %struct.SkIRect* dereferenceable(16) %21)
  br label %400

23:                                               ; preds = %2
  %24 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %29, %27
  %31 = icmp sgt i32 %30, 0
  br i1 %31, label %32, label %46

32:                                               ; preds = %23
  %33 = icmp slt i32 %30, 1024
  %34 = select i1 %33, i32 %30, i32 1024
  %35 = add nuw nsw i32 %34, 4
  %36 = lshr i32 %35, 2
  %37 = add nuw nsw i32 %36, %35
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %32
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %32
  %41 = sext i32 %37 to i64
  %42 = shl nsw i64 %41, 3
  %43 = tail call i8* @_Z16sk_realloc_throwPvm(i8* null, i64 %42) #14
  %44 = bitcast i8* %43 to %"struct.SkAAClip::YOffset"*
  %45 = load i32, i32* %24, align 4
  br label %46

46:                                               ; preds = %23, %40
  %47 = phi i32 [ %45, %40 ], [ %25, %23 ]
  %48 = phi i32 [ %37, %40 ], [ 0, %23 ]
  %49 = phi i8* [ %43, %40 ], [ null, %23 ]
  %50 = phi %"struct.SkAAClip::YOffset"* [ %44, %40 ], [ null, %23 ]
  %51 = getelementptr inbounds %class.SkRegion, %class.SkRegion* %1, i64 0, i32 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = sub i32 %52, %47
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %46
  %56 = icmp slt i32 %53, 512
  %57 = select i1 %56, i32 %53, i32 512
  %58 = shl nsw i32 %57, 7
  %59 = or i32 %58, 4
  %60 = lshr exact i32 %59, 2
  %61 = add nuw i32 %60, %59
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %64, label %63

63:                                               ; preds = %55
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

64:                                               ; preds = %55
  %65 = sext i32 %61 to i64
  %66 = tail call i8* @_Z16sk_realloc_throwPvm(i8* null, i64 %65) #14
  br label %67

67:                                               ; preds = %46, %64
  %68 = phi i32 [ %61, %64 ], [ 0, %46 ]
  %69 = phi i8* [ %66, %64 ], [ null, %46 ]
  %70 = bitcast %"class.SkRegion::Iterator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 40, i1 false)
  call void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"* nonnull %3, %class.SkRegion* dereferenceable(24) %1) #14
  %71 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %3, i64 0, i32 3
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %74, label %324

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %3, i64 0, i32 2, i32 3
  %76 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %3, i64 0, i32 2, i32 1
  %77 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %3, i64 0, i32 2, i32 0
  %78 = getelementptr inbounds %"class.SkRegion::Iterator", %"class.SkRegion::Iterator"* %3, i64 0, i32 2, i32 2
  br label %79

79:                                               ; preds = %74, %316
  %80 = phi i32 [ 0, %74 ], [ %321, %316 ]
  %81 = phi %"struct.SkAAClip::YOffset"* [ null, %74 ], [ %241, %316 ]
  %82 = phi i32 [ 0, %74 ], [ %240, %316 ]
  %83 = phi i32 [ 0, %74 ], [ %320, %316 ]
  %84 = phi %"struct.SkAAClip::YOffset"* [ %50, %74 ], [ %238, %316 ]
  %85 = phi i8* [ %49, %74 ], [ %237, %316 ]
  %86 = phi i32 [ %48, %74 ], [ %236, %316 ]
  %87 = phi i32 [ 0, %74 ], [ %235, %316 ]
  %88 = phi i8* [ %69, %74 ], [ %319, %316 ]
  %89 = phi i32 [ 0, %74 ], [ %318, %316 ]
  %90 = phi i32 [ %68, %74 ], [ %317, %316 ]
  %91 = load i32, i32* %75, align 4
  %92 = sub nsw i32 %91, %27
  %93 = icmp sgt i32 %92, %82
  br i1 %93, label %94, label %231

94:                                               ; preds = %79
  %95 = icmp eq %"struct.SkAAClip::YOffset"* %81, null
  br i1 %95, label %132, label %96

96:                                               ; preds = %94
  %97 = load i32, i32* %51, align 4
  %98 = load i32, i32* %24, align 4
  %99 = sub i32 %97, %98
  %100 = add i32 %99, %80
  %101 = icmp sgt i32 %100, 0
  br i1 %101, label %102, label %132

102:                                              ; preds = %96, %123
  %103 = phi i32 [ %124, %123 ], [ %90, %96 ]
  %104 = phi i32 [ %109, %123 ], [ %89, %96 ]
  %105 = phi i8* [ %125, %123 ], [ %88, %96 ]
  %106 = phi i32 [ %130, %123 ], [ %100, %96 ]
  %107 = icmp slt i32 %106, 255
  %108 = select i1 %107, i32 %106, i32 255
  %109 = add i32 %104, 2
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %112, label %111

111:                                              ; preds = %102
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

112:                                              ; preds = %102
  %113 = icmp slt i32 %103, %109
  br i1 %113, label %114, label %123

114:                                              ; preds = %112
  %115 = add i32 %104, 6
  %116 = lshr i32 %115, 2
  %117 = add nuw i32 %116, %115
  %118 = icmp sgt i32 %117, -1
  br i1 %118, label %120, label %119

119:                                              ; preds = %114
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

120:                                              ; preds = %114
  %121 = sext i32 %117 to i64
  %122 = call i8* @_Z16sk_realloc_throwPvm(i8* %105, i64 %121) #14
  br label %123

123:                                              ; preds = %112, %120
  %124 = phi i32 [ %117, %120 ], [ %103, %112 ]
  %125 = phi i8* [ %122, %120 ], [ %105, %112 ]
  %126 = sext i32 %104 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = trunc i32 %108 to i8
  store i8 %128, i8* %127, align 1
  %129 = getelementptr inbounds i8, i8* %127, i64 1
  store i8 0, i8* %129, align 1
  %130 = sub nsw i32 %106, %108
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %102, label %132

132:                                              ; preds = %123, %96, %94
  %133 = phi i32 [ %90, %94 ], [ %90, %96 ], [ %124, %123 ]
  %134 = phi i32 [ %89, %94 ], [ %89, %96 ], [ %109, %123 ]
  %135 = phi i8* [ %88, %94 ], [ %88, %96 ], [ %125, %123 ]
  %136 = load i32, i32* %76, align 4
  %137 = sub nsw i32 %136, %27
  %138 = icmp sgt i32 %137, %82
  br i1 %138, label %139, label %198

139:                                              ; preds = %132
  %140 = add i32 %87, 1
  %141 = icmp sgt i32 %140, -1
  br i1 %141, label %143, label %142

142:                                              ; preds = %139
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

143:                                              ; preds = %139
  %144 = icmp slt i32 %86, %140
  br i1 %144, label %145, label %156

145:                                              ; preds = %143
  %146 = add i32 %87, 5
  %147 = lshr i32 %146, 2
  %148 = add nuw i32 %147, %146
  %149 = icmp sgt i32 %148, -1
  br i1 %149, label %151, label %150

150:                                              ; preds = %145
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

151:                                              ; preds = %145
  %152 = sext i32 %148 to i64
  %153 = shl nsw i64 %152, 3
  %154 = call i8* @_Z16sk_realloc_throwPvm(i8* %85, i64 %153) #14
  %155 = bitcast i8* %154 to %"struct.SkAAClip::YOffset"*
  br label %156

156:                                              ; preds = %143, %151
  %157 = phi i32 [ %148, %151 ], [ %86, %143 ]
  %158 = phi i8* [ %154, %151 ], [ %85, %143 ]
  %159 = phi %"struct.SkAAClip::YOffset"* [ %155, %151 ], [ %84, %143 ]
  %160 = sext i32 %87 to i64
  %161 = add nsw i32 %137, -1
  %162 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %159, i64 %160, i32 0
  store i32 %161, i32* %162, align 4
  %163 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %159, i64 %160, i32 1
  store i32 %134, i32* %163, align 4
  %164 = load i32, i32* %51, align 4
  %165 = load i32, i32* %24, align 4
  %166 = sub i32 %164, %165
  %167 = icmp sgt i32 %166, 0
  br i1 %167, label %168, label %198

168:                                              ; preds = %156, %189
  %169 = phi i32 [ %190, %189 ], [ %133, %156 ]
  %170 = phi i32 [ %175, %189 ], [ %134, %156 ]
  %171 = phi i8* [ %191, %189 ], [ %135, %156 ]
  %172 = phi i32 [ %196, %189 ], [ %166, %156 ]
  %173 = icmp slt i32 %172, 255
  %174 = select i1 %173, i32 %172, i32 255
  %175 = add i32 %170, 2
  %176 = icmp sgt i32 %175, -1
  br i1 %176, label %178, label %177

177:                                              ; preds = %168
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

178:                                              ; preds = %168
  %179 = icmp slt i32 %169, %175
  br i1 %179, label %180, label %189

180:                                              ; preds = %178
  %181 = add i32 %170, 6
  %182 = lshr i32 %181, 2
  %183 = add nuw i32 %182, %181
  %184 = icmp sgt i32 %183, -1
  br i1 %184, label %186, label %185

185:                                              ; preds = %180
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

186:                                              ; preds = %180
  %187 = sext i32 %183 to i64
  %188 = call i8* @_Z16sk_realloc_throwPvm(i8* %171, i64 %187) #14
  br label %189

189:                                              ; preds = %178, %186
  %190 = phi i32 [ %183, %186 ], [ %169, %178 ]
  %191 = phi i8* [ %188, %186 ], [ %171, %178 ]
  %192 = sext i32 %170 to i64
  %193 = getelementptr inbounds i8, i8* %191, i64 %192
  %194 = trunc i32 %174 to i8
  store i8 %194, i8* %193, align 1
  %195 = getelementptr inbounds i8, i8* %193, i64 1
  store i8 0, i8* %195, align 1
  %196 = sub nsw i32 %172, %174
  %197 = icmp sgt i32 %196, 0
  br i1 %197, label %168, label %198

198:                                              ; preds = %189, %156, %132
  %199 = phi i32 [ %133, %132 ], [ %133, %156 ], [ %190, %189 ]
  %200 = phi i32 [ %134, %132 ], [ %134, %156 ], [ %175, %189 ]
  %201 = phi i8* [ %135, %132 ], [ %135, %156 ], [ %191, %189 ]
  %202 = phi i32 [ %87, %132 ], [ %140, %156 ], [ %140, %189 ]
  %203 = phi i32 [ %86, %132 ], [ %157, %156 ], [ %157, %189 ]
  %204 = phi i8* [ %85, %132 ], [ %158, %156 ], [ %158, %189 ]
  %205 = phi %"struct.SkAAClip::YOffset"* [ %84, %132 ], [ %159, %156 ], [ %159, %189 ]
  %206 = add i32 %202, 1
  %207 = icmp sgt i32 %206, -1
  br i1 %207, label %209, label %208

208:                                              ; preds = %198
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

209:                                              ; preds = %198
  %210 = icmp slt i32 %203, %206
  br i1 %210, label %211, label %222

211:                                              ; preds = %209
  %212 = add i32 %202, 5
  %213 = lshr i32 %212, 2
  %214 = add nuw i32 %213, %212
  %215 = icmp sgt i32 %214, -1
  br i1 %215, label %217, label %216

216:                                              ; preds = %211
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

217:                                              ; preds = %211
  %218 = sext i32 %214 to i64
  %219 = shl nsw i64 %218, 3
  %220 = call i8* @_Z16sk_realloc_throwPvm(i8* %204, i64 %219) #14
  %221 = bitcast i8* %220 to %"struct.SkAAClip::YOffset"*
  br label %222

222:                                              ; preds = %209, %217
  %223 = phi i32 [ %214, %217 ], [ %203, %209 ]
  %224 = phi i8* [ %220, %217 ], [ %204, %209 ]
  %225 = phi %"struct.SkAAClip::YOffset"* [ %221, %217 ], [ %205, %209 ]
  %226 = sext i32 %202 to i64
  %227 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %225, i64 %226
  %228 = add nsw i32 %92, -1
  %229 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %227, i64 0, i32 0
  store i32 %228, i32* %229, align 4
  %230 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %225, i64 %226, i32 1
  store i32 %200, i32* %230, align 4
  br label %231

231:                                              ; preds = %222, %79
  %232 = phi i32 [ %199, %222 ], [ %90, %79 ]
  %233 = phi i32 [ %200, %222 ], [ %89, %79 ]
  %234 = phi i8* [ %201, %222 ], [ %88, %79 ]
  %235 = phi i32 [ %206, %222 ], [ %87, %79 ]
  %236 = phi i32 [ %223, %222 ], [ %86, %79 ]
  %237 = phi i8* [ %224, %222 ], [ %85, %79 ]
  %238 = phi %"struct.SkAAClip::YOffset"* [ %225, %222 ], [ %84, %79 ]
  %239 = phi i32 [ 0, %222 ], [ %83, %79 ]
  %240 = phi i32 [ %92, %222 ], [ %82, %79 ]
  %241 = phi %"struct.SkAAClip::YOffset"* [ %227, %222 ], [ %81, %79 ]
  %242 = load i32, i32* %77, align 8
  %243 = sub nsw i32 %242, %25
  %244 = sub nsw i32 %243, %239
  %245 = icmp sgt i32 %244, 0
  br i1 %245, label %246, label %278

246:                                              ; preds = %231, %267
  %247 = phi i32 [ %268, %267 ], [ %232, %231 ]
  %248 = phi i32 [ %253, %267 ], [ %233, %231 ]
  %249 = phi i8* [ %269, %267 ], [ %234, %231 ]
  %250 = phi i32 [ %274, %267 ], [ %244, %231 ]
  %251 = icmp slt i32 %250, 255
  %252 = select i1 %251, i32 %250, i32 255
  %253 = add i32 %248, 2
  %254 = icmp sgt i32 %253, -1
  br i1 %254, label %256, label %255

255:                                              ; preds = %246
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

256:                                              ; preds = %246
  %257 = icmp slt i32 %247, %253
  br i1 %257, label %258, label %267

258:                                              ; preds = %256
  %259 = add i32 %248, 6
  %260 = lshr i32 %259, 2
  %261 = add nuw i32 %260, %259
  %262 = icmp sgt i32 %261, -1
  br i1 %262, label %264, label %263

263:                                              ; preds = %258
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

264:                                              ; preds = %258
  %265 = sext i32 %261 to i64
  %266 = call i8* @_Z16sk_realloc_throwPvm(i8* %249, i64 %265) #14
  br label %267

267:                                              ; preds = %256, %264
  %268 = phi i32 [ %261, %264 ], [ %247, %256 ]
  %269 = phi i8* [ %266, %264 ], [ %249, %256 ]
  %270 = sext i32 %248 to i64
  %271 = getelementptr inbounds i8, i8* %269, i64 %270
  %272 = trunc i32 %252 to i8
  store i8 %272, i8* %271, align 1
  %273 = getelementptr inbounds i8, i8* %271, i64 1
  store i8 0, i8* %273, align 1
  %274 = sub nsw i32 %250, %252
  %275 = icmp sgt i32 %274, 0
  br i1 %275, label %246, label %276

276:                                              ; preds = %267
  %277 = load i32, i32* %77, align 8
  br label %278

278:                                              ; preds = %276, %231
  %279 = phi i32 [ %242, %231 ], [ %277, %276 ]
  %280 = phi i32 [ %232, %231 ], [ %268, %276 ]
  %281 = phi i32 [ %233, %231 ], [ %253, %276 ]
  %282 = phi i8* [ %234, %231 ], [ %269, %276 ]
  %283 = load i32, i32* %78, align 8
  %284 = sub nsw i32 %283, %279
  %285 = icmp sgt i32 %284, 0
  br i1 %285, label %286, label %316

286:                                              ; preds = %278, %307
  %287 = phi i32 [ %308, %307 ], [ %280, %278 ]
  %288 = phi i32 [ %293, %307 ], [ %281, %278 ]
  %289 = phi i8* [ %309, %307 ], [ %282, %278 ]
  %290 = phi i32 [ %314, %307 ], [ %284, %278 ]
  %291 = icmp slt i32 %290, 255
  %292 = select i1 %291, i32 %290, i32 255
  %293 = add i32 %288, 2
  %294 = icmp sgt i32 %293, -1
  br i1 %294, label %296, label %295

295:                                              ; preds = %286
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

296:                                              ; preds = %286
  %297 = icmp slt i32 %287, %293
  br i1 %297, label %298, label %307

298:                                              ; preds = %296
  %299 = add i32 %288, 6
  %300 = lshr i32 %299, 2
  %301 = add nuw i32 %300, %299
  %302 = icmp sgt i32 %301, -1
  br i1 %302, label %304, label %303

303:                                              ; preds = %298
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

304:                                              ; preds = %298
  %305 = sext i32 %301 to i64
  %306 = call i8* @_Z16sk_realloc_throwPvm(i8* %289, i64 %305) #14
  br label %307

307:                                              ; preds = %296, %304
  %308 = phi i32 [ %301, %304 ], [ %287, %296 ]
  %309 = phi i8* [ %306, %304 ], [ %289, %296 ]
  %310 = sext i32 %288 to i64
  %311 = getelementptr inbounds i8, i8* %309, i64 %310
  %312 = trunc i32 %292 to i8
  store i8 %312, i8* %311, align 1
  %313 = getelementptr inbounds i8, i8* %311, i64 1
  store i8 -1, i8* %313, align 1
  %314 = sub nsw i32 %290, %292
  %315 = icmp sgt i32 %314, 0
  br i1 %315, label %286, label %316

316:                                              ; preds = %307, %278
  %317 = phi i32 [ %280, %278 ], [ %308, %307 ]
  %318 = phi i32 [ %281, %278 ], [ %293, %307 ]
  %319 = phi i8* [ %282, %278 ], [ %309, %307 ]
  %320 = add nsw i32 %284, %243
  call void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"* nonnull %3) #14
  %321 = sub i32 0, %320
  %322 = load i8, i8* %71, align 8, !range !2
  %323 = icmp eq i8 %322, 0
  br i1 %323, label %79, label %324

324:                                              ; preds = %316, %67
  %325 = phi i32 [ %68, %67 ], [ %317, %316 ]
  %326 = phi i32 [ 0, %67 ], [ %318, %316 ]
  %327 = phi i8* [ %69, %67 ], [ %319, %316 ]
  %328 = phi i32 [ 0, %67 ], [ %235, %316 ]
  %329 = phi i8* [ %49, %67 ], [ %237, %316 ]
  %330 = phi i32 [ 0, %67 ], [ %321, %316 ]
  %331 = load i32, i32* %51, align 4
  %332 = load i32, i32* %24, align 4
  %333 = sub i32 %331, %332
  %334 = add i32 %333, %330
  %335 = icmp sgt i32 %334, 0
  br i1 %335, label %336, label %366

336:                                              ; preds = %324, %357
  %337 = phi i32 [ %358, %357 ], [ %325, %324 ]
  %338 = phi i32 [ %343, %357 ], [ %326, %324 ]
  %339 = phi i8* [ %359, %357 ], [ %327, %324 ]
  %340 = phi i32 [ %364, %357 ], [ %334, %324 ]
  %341 = icmp slt i32 %340, 255
  %342 = select i1 %341, i32 %340, i32 255
  %343 = add i32 %338, 2
  %344 = icmp sgt i32 %343, -1
  br i1 %344, label %346, label %345

345:                                              ; preds = %336
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

346:                                              ; preds = %336
  %347 = icmp slt i32 %337, %343
  br i1 %347, label %348, label %357

348:                                              ; preds = %346
  %349 = add i32 %338, 6
  %350 = lshr i32 %349, 2
  %351 = add nuw i32 %350, %349
  %352 = icmp sgt i32 %351, -1
  br i1 %352, label %354, label %353

353:                                              ; preds = %348
  call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

354:                                              ; preds = %348
  %355 = sext i32 %351 to i64
  %356 = call i8* @_Z16sk_realloc_throwPvm(i8* %339, i64 %355) #14
  br label %357

357:                                              ; preds = %346, %354
  %358 = phi i32 [ %351, %354 ], [ %337, %346 ]
  %359 = phi i8* [ %356, %354 ], [ %339, %346 ]
  %360 = sext i32 %338 to i64
  %361 = getelementptr inbounds i8, i8* %359, i64 %360
  %362 = trunc i32 %342 to i8
  store i8 %362, i8* %361, align 1
  %363 = getelementptr inbounds i8, i8* %361, i64 1
  store i8 0, i8* %363, align 1
  %364 = sub nsw i32 %340, %342
  %365 = icmp sgt i32 %364, 0
  br i1 %365, label %336, label %366

366:                                              ; preds = %357, %324
  %367 = phi i32 [ %326, %324 ], [ %343, %357 ]
  %368 = phi i8* [ %327, %324 ], [ %359, %357 ]
  %369 = sext i32 %367 to i64
  %370 = sext i32 %328 to i64
  %371 = shl nsw i64 %370, 3
  %372 = add nsw i64 %371, 16
  %373 = add nsw i64 %372, %369
  %374 = call i8* @_Z15sk_malloc_flagsmj(i64 %373, i32 2) #14
  %375 = bitcast i8* %374 to i32*
  store atomic i32 1, i32* %375 seq_cst, align 4
  %376 = getelementptr inbounds i8, i8* %374, i64 4
  %377 = bitcast i8* %376 to i32*
  store i32 %328, i32* %377, align 4
  %378 = getelementptr inbounds i8, i8* %374, i64 8
  %379 = bitcast i8* %378 to i64*
  store i64 %369, i64* %379, align 8
  %380 = getelementptr inbounds i8, i8* %374, i64 16
  %381 = bitcast i8* %380 to %"struct.SkAAClip::YOffset"*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %380, i8* align 4 %329, i64 %371, i1 false)
  %382 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %381, i64 %370
  %383 = bitcast %"struct.SkAAClip::YOffset"* %382 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %383, i8* align 1 %368, i64 %369, i1 false)
  %384 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %385 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %384, align 8
  %386 = icmp eq %"struct.SkAAClip::RunHead"* %385, null
  br i1 %386, label %394, label %387

387:                                              ; preds = %366
  %388 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %385, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %389 = atomicrmw sub i32* %388, i32 1 seq_cst
  %390 = icmp eq i32 %389, 1
  br i1 %390, label %391, label %394

391:                                              ; preds = %387
  %392 = bitcast %"struct.SkAAClip::RunHead"** %384 to i8**
  %393 = load i8*, i8** %392, align 8
  call void @_Z7sk_freePv(i8* %393) #14
  br label %394

394:                                              ; preds = %366, %387, %391
  %395 = bitcast %class.SkAAClip* %0 to i8*
  %396 = bitcast %class.SkRegion* %1 to i8*
  %397 = getelementptr %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %398 = bitcast %"struct.SkAAClip::RunHead"** %397 to i64*
  store i64 0, i64* %398, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %395, i8* align 4 %396, i64 16, i1 false)
  %399 = bitcast %"struct.SkAAClip::RunHead"** %384 to i8**
  store i8* %374, i8** %399, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #14
  call void @_Z7sk_freePv(i8* %368) #14
  call void @_Z7sk_freePv(i8* %329) #14
  br label %400

400:                                              ; preds = %394, %20, %18
  %401 = phi i1 [ false, %18 ], [ %22, %20 ], [ true, %394 ]
  ret i1 %401
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkRegion8IteratorC1ERKS_(%"class.SkRegion::Iterator"*, %class.SkRegion* dereferenceable(24)) unnamed_addr #3

declare void @_ZN8SkRegion8Iterator4nextEv(%"class.SkRegion::Iterator"*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZNK8SkAAClip7findRowEiPi(%class.SkAAClip* nocapture readonly, i32, i32*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = sub nsw i32 %1, %5
  %7 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  %8 = load i32, i32* %7, align 4
  %9 = sub i32 %8, %5
  %10 = icmp ult i32 %6, %9
  br i1 %10, label %11, label %40

11:                                               ; preds = %3
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %13 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %12, align 8
  %14 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 1
  %15 = bitcast %"struct.SkAAClip::RunHead"* %14 to %"struct.SkAAClip::YOffset"*
  br label %16

16:                                               ; preds = %16, %11
  %17 = phi %"struct.SkAAClip::YOffset"* [ %15, %11 ], [ %21, %16 ]
  %18 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp slt i32 %19, %6
  %21 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %17, i64 1
  br i1 %20, label %16, label %22

22:                                               ; preds = %16
  %23 = icmp eq i32* %2, null
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = add nsw i32 %19, %5
  store i32 %25, i32* %2, align 4
  %26 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %12, align 8
  br label %27

27:                                               ; preds = %22, %24
  %28 = phi %"struct.SkAAClip::RunHead"* [ %13, %22 ], [ %26, %24 ]
  %29 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %28, i64 1
  %30 = bitcast %"struct.SkAAClip::RunHead"* %29 to %"struct.SkAAClip::YOffset"*
  %31 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %28, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %30, i64 %33
  %35 = bitcast %"struct.SkAAClip::YOffset"* %34 to i8*
  %36 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %17, i64 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %35, i64 %38
  br label %40

40:                                               ; preds = %3, %27
  %41 = phi i8* [ %39, %27 ], [ null, %3 ]
  ret i8* %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @_ZNK8SkAAClip5findXEPKhiPi(%class.SkAAClip* nocapture readonly, i8* readonly, i32, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %2, %6
  %8 = load i8, i8* %1, align 1
  %9 = zext i8 %8 to i32
  %10 = icmp slt i32 %7, %9
  br i1 %10, label %13, label %20

11:                                               ; preds = %20
  %12 = zext i8 %26 to i32
  br label %13

13:                                               ; preds = %11, %4
  %14 = phi i32 [ %7, %4 ], [ %25, %11 ]
  %15 = phi i8* [ %1, %4 ], [ %24, %11 ]
  %16 = phi i32 [ %9, %4 ], [ %12, %11 ]
  %17 = icmp eq i32* %3, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %13
  %19 = sub nsw i32 %16, %14
  store i32 %19, i32* %3, align 4
  br label %29

20:                                               ; preds = %4, %20
  %21 = phi i32 [ %27, %20 ], [ %9, %4 ]
  %22 = phi i8* [ %24, %20 ], [ %1, %4 ]
  %23 = phi i32 [ %25, %20 ], [ %7, %4 ]
  %24 = getelementptr inbounds i8, i8* %22, i64 2
  %25 = sub nsw i32 %23, %21
  %26 = load i8, i8* %24, align 1
  %27 = zext i8 %26 to i32
  %28 = icmp slt i32 %25, %27
  br i1 %28, label %11, label %20

29:                                               ; preds = %13, %18
  ret i8* %15
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* nocapture readonly, i32, i32, i32, i32) local_unnamed_addr #4 align 2 {
  %6 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %7 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %6, align 8
  %8 = icmp eq %"struct.SkAAClip::RunHead"* %7, null
  br i1 %8, label %121, label %9

9:                                                ; preds = %5
  %10 = sext i32 %3 to i64
  %11 = sext i32 %1 to i64
  %12 = sub nsw i64 %10, %11
  %13 = sext i32 %4 to i64
  %14 = sext i32 %2 to i64
  %15 = sub nsw i64 %13, %14
  %16 = icmp slt i64 %12, 1
  %17 = icmp slt i64 %15, 1
  %18 = or i1 %16, %17
  br i1 %18, label %121, label %19

19:                                               ; preds = %9
  %20 = or i64 %15, %12
  %21 = add nsw i64 %20, 2147483648
  %22 = icmp ugt i64 %21, 4294967295
  br i1 %22, label %121, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = sub nsw i64 %26, %29
  %31 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = sext i32 %35 to i64
  %37 = sub nsw i64 %33, %36
  %38 = icmp slt i64 %30, 1
  %39 = icmp slt i64 %37, 1
  %40 = or i1 %38, %39
  br i1 %40, label %121, label %41

41:                                               ; preds = %23
  %42 = or i64 %37, %30
  %43 = add nsw i64 %42, 2147483648
  %44 = icmp ugt i64 %43, 4294967295
  %45 = icmp sgt i32 %28, %1
  %46 = or i1 %45, %44
  %47 = icmp sgt i32 %35, %2
  %48 = or i1 %47, %46
  %49 = icmp slt i32 %25, %3
  %50 = or i1 %49, %48
  %51 = icmp sge i32 %32, %4
  %52 = xor i1 %50, true
  %53 = and i1 %51, %52
  br i1 %53, label %54, label %121

54:                                               ; preds = %41
  %55 = sub nsw i32 %2, %35
  %56 = sub i32 %32, %35
  %57 = icmp ult i32 %55, %56
  br i1 %57, label %58, label %78

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %7, i64 1
  %60 = bitcast %"struct.SkAAClip::RunHead"* %59 to %"struct.SkAAClip::YOffset"*
  br label %61

61:                                               ; preds = %61, %58
  %62 = phi %"struct.SkAAClip::YOffset"* [ %60, %58 ], [ %66, %61 ]
  %63 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %62, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %55
  %66 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %62, i64 1
  br i1 %65, label %61, label %67

67:                                               ; preds = %61
  %68 = add nsw i32 %64, %35
  %69 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %7, i64 0, i32 1
  %70 = load i32, i32* %69, align 4
  %71 = sext i32 %70 to i64
  %72 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %60, i64 %71
  %73 = bitcast %"struct.SkAAClip::YOffset"* %72 to i8*
  %74 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %62, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %73, i64 %76
  br label %78

78:                                               ; preds = %54, %67
  %79 = phi i32 [ %68, %67 ], [ 0, %54 ]
  %80 = phi i8* [ %77, %67 ], [ null, %54 ]
  %81 = icmp slt i32 %79, %4
  br i1 %81, label %121, label %82

82:                                               ; preds = %78
  %83 = sub nsw i32 %1, %28
  %84 = load i8, i8* %80, align 1
  %85 = zext i8 %84 to i32
  %86 = icmp slt i32 %83, %85
  br i1 %86, label %98, label %87

87:                                               ; preds = %82, %87
  %88 = phi i32 [ %94, %87 ], [ %85, %82 ]
  %89 = phi i8* [ %91, %87 ], [ %80, %82 ]
  %90 = phi i32 [ %92, %87 ], [ %83, %82 ]
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  %92 = sub nsw i32 %90, %88
  %93 = load i8, i8* %91, align 1
  %94 = zext i8 %93 to i32
  %95 = icmp slt i32 %92, %94
  br i1 %95, label %96, label %87

96:                                               ; preds = %87
  %97 = zext i8 %93 to i32
  br label %98

98:                                               ; preds = %96, %82
  %99 = phi i32 [ %83, %82 ], [ %92, %96 ]
  %100 = phi i8* [ %80, %82 ], [ %91, %96 ]
  %101 = phi i32 [ %85, %82 ], [ %97, %96 ]
  %102 = getelementptr inbounds i8, i8* %100, i64 1
  %103 = load i8, i8* %102, align 1
  %104 = icmp eq i8 %103, -1
  br i1 %104, label %105, label %121

105:                                              ; preds = %98
  %106 = sub nsw i32 %3, %1
  %107 = sub nsw i32 %101, %99
  br label %108

108:                                              ; preds = %105, %113
  %109 = phi i32 [ %114, %113 ], [ %106, %105 ]
  %110 = phi i8* [ %115, %113 ], [ %100, %105 ]
  %111 = phi i32 [ %117, %113 ], [ %107, %105 ]
  %112 = icmp sgt i32 %109, %111
  br i1 %112, label %113, label %121

113:                                              ; preds = %108
  %114 = sub nsw i32 %109, %111
  %115 = getelementptr inbounds i8, i8* %110, i64 2
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = getelementptr inbounds i8, i8* %110, i64 3
  %119 = load i8, i8* %118, align 1
  %120 = icmp eq i8 %119, -1
  br i1 %120, label %108, label %121

121:                                              ; preds = %108, %113, %98, %9, %19, %23, %78, %41, %5
  %122 = phi i1 [ false, %5 ], [ false, %41 ], [ false, %78 ], [ false, %23 ], [ false, %19 ], [ false, %9 ], [ false, %98 ], [ true, %108 ], [ false, %113 ]
  ret i1 %122
}

declare void @_ZN8SkRegionC1Ev(%class.SkRegion*) unnamed_addr #3

declare zeroext i1 @_ZN8SkRegion7setRectERK7SkIRect(%class.SkRegion*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN8SkRegionC1ERKS_(%class.SkRegion*, %class.SkRegion* dereferenceable(24)) unnamed_addr #3

declare void @_ZN6SkScan12AntiFillPathERK6SkPathRK8SkRegionP9SkBlitterb(%class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24), %class.SkBlitter*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN6SkScan8FillPathERK6SkPathRK8SkRegionP9SkBlitter(%class.SkPath* dereferenceable(16), %class.SkRegion* dereferenceable(24), %class.SkBlitter*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN8SkAAClip7Builder6finishEPS_(%"class.SkAAClip::Builder"*, %class.SkAAClip*) local_unnamed_addr #2 comdat align 2 {
  %3 = tail call %"struct.SkAAClip::Builder::Row"* @_ZN8SkAAClip7Builder8flushRowEb(%"class.SkAAClip::Builder"* %0, i1 zeroext false)
  %4 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 0
  %5 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %4, align 8
  %6 = icmp eq %"struct.SkAAClip::Builder::Row"* %5, null
  br i1 %6, label %26, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %5, i64 %10
  %12 = icmp sgt i32 %9, 0
  br i1 %12, label %13, label %26

13:                                               ; preds = %7, %13
  %14 = phi i64 [ %21, %13 ], [ 0, %7 ]
  %15 = phi %"struct.SkAAClip::Builder::Row"* [ %22, %13 ], [ %5, %7 ]
  %16 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %15, i64 0, i32 2
  %17 = load %class.SkTDArray.1*, %class.SkTDArray.1** %16, align 8
  %18 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %17, i64 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = add i64 %14, %20
  %22 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %15, i64 1
  %23 = icmp ult %"struct.SkAAClip::Builder::Row"* %22, %11
  br i1 %23, label %13, label %24

24:                                               ; preds = %13
  %25 = icmp eq i64 %21, 0
  br i1 %25, label %26, label %39

26:                                               ; preds = %2, %7, %24
  %27 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %28 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %27, align 8
  %29 = icmp eq %"struct.SkAAClip::RunHead"* %28, null
  br i1 %29, label %37, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 seq_cst
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %37

34:                                               ; preds = %30
  %35 = bitcast %"struct.SkAAClip::RunHead"** %27 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #14
  br label %37

37:                                               ; preds = %26, %30, %34
  %38 = bitcast %class.SkAAClip* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %38, i8 0, i64 24, i1 false) #14
  br label %165

39:                                               ; preds = %24
  %40 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 4
  store i32 %41, i32* %42, align 4
  %44 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 2
  %45 = load i32, i32* %44, align 4
  %46 = sext i32 %45 to i64
  %47 = shl nsw i64 %46, 3
  %48 = add i64 %21, 16
  %49 = add i64 %48, %47
  %50 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %49, i32 2) #14
  %51 = bitcast i8* %50 to i32*
  store atomic i32 1, i32* %51 seq_cst, align 4
  %52 = getelementptr inbounds i8, i8* %50, i64 4
  %53 = bitcast i8* %52 to i32*
  store i32 %45, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 8
  %55 = bitcast i8* %54 to i64*
  store i64 %21, i64* %55, align 8
  %56 = getelementptr inbounds i8, i8* %50, i64 16
  %57 = bitcast i8* %56 to %"struct.SkAAClip::YOffset"*
  %58 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %57, i64 %46
  %59 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %4, align 8
  %60 = icmp ult %"struct.SkAAClip::Builder::Row"* %59, %11
  br i1 %60, label %61, label %135

61:                                               ; preds = %39
  %62 = ptrtoint %"struct.SkAAClip::Builder::Row"* %59 to i64
  %63 = bitcast %"struct.SkAAClip::YOffset"* %58 to i8*
  %64 = sub i32 %43, %41
  %65 = ptrtoint %"struct.SkAAClip::YOffset"* %58 to i64
  %66 = getelementptr %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %5, i64 %10, i32 0
  %67 = bitcast i32* %66 to i8*
  %68 = xor i64 %62, -1
  %69 = getelementptr i8, i8* %67, i64 %68
  %70 = ptrtoint i8* %69 to i64
  %71 = and i64 %70, 16
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %91

73:                                               ; preds = %61
  %74 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %59, i64 0, i32 0
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %64, %75
  %77 = bitcast i8* %56 to i32*
  store i32 %76, i32* %77, align 4
  %78 = getelementptr inbounds i8, i8* %50, i64 20
  %79 = bitcast i8* %78 to i32*
  store i32 0, i32* %79, align 4
  %80 = getelementptr inbounds i8, i8* %50, i64 24
  %81 = bitcast i8* %80 to %"struct.SkAAClip::YOffset"*
  %82 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %59, i64 0, i32 2
  %83 = load %class.SkTDArray.1*, %class.SkTDArray.1** %82, align 8
  %84 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %83, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = sext i32 %85 to i64
  %87 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %83, i64 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 1 %88, i64 %86, i1 false)
  %89 = getelementptr inbounds i8, i8* %63, i64 %86
  %90 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %59, i64 1
  br label %91

91:                                               ; preds = %73, %61
  %92 = phi i8* [ %63, %61 ], [ %89, %73 ]
  %93 = phi %"struct.SkAAClip::YOffset"* [ %57, %61 ], [ %81, %73 ]
  %94 = phi %"struct.SkAAClip::Builder::Row"* [ %59, %61 ], [ %90, %73 ]
  %95 = icmp ult i8* %69, inttoptr (i64 16 to i8*)
  br i1 %95, label %135, label %96

96:                                               ; preds = %91, %96
  %97 = phi i8* [ %132, %96 ], [ %92, %91 ]
  %98 = phi %"struct.SkAAClip::YOffset"* [ %124, %96 ], [ %93, %91 ]
  %99 = phi %"struct.SkAAClip::Builder::Row"* [ %133, %96 ], [ %94, %91 ]
  %100 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 8
  %102 = add i32 %64, %101
  %103 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %98, i64 0, i32 0
  store i32 %102, i32* %103, align 4
  %104 = ptrtoint i8* %97 to i64
  %105 = sub i64 %104, %65
  %106 = trunc i64 %105 to i32
  %107 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %98, i64 0, i32 1
  store i32 %106, i32* %107, align 4
  %108 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %99, i64 0, i32 2
  %109 = load %class.SkTDArray.1*, %class.SkTDArray.1** %108, align 8
  %110 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %109, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = sext i32 %111 to i64
  %113 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %109, i64 0, i32 0
  %114 = load i8*, i8** %113, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %97, i8* align 1 %114, i64 %112, i1 false)
  %115 = getelementptr inbounds i8, i8* %97, i64 %112
  %116 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %99, i64 1, i32 0
  %117 = load i32, i32* %116, align 8
  %118 = add i32 %64, %117
  %119 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %98, i64 1, i32 0
  store i32 %118, i32* %119, align 4
  %120 = ptrtoint i8* %115 to i64
  %121 = sub i64 %120, %65
  %122 = trunc i64 %121 to i32
  %123 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %98, i64 1, i32 1
  store i32 %122, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %98, i64 2
  %125 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %99, i64 1, i32 2
  %126 = load %class.SkTDArray.1*, %class.SkTDArray.1** %125, align 8
  %127 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %126, i64 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %126, i64 0, i32 0
  %131 = load i8*, i8** %130, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %115, i8* align 1 %131, i64 %129, i1 false)
  %132 = getelementptr inbounds i8, i8* %115, i64 %129
  %133 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %99, i64 2
  %134 = icmp ult %"struct.SkAAClip::Builder::Row"* %133, %11
  br i1 %134, label %96, label %135

135:                                              ; preds = %91, %96, %39
  %136 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 1
  %137 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %136, align 8
  %138 = icmp eq %"struct.SkAAClip::RunHead"* %137, null
  br i1 %138, label %146, label %139

139:                                              ; preds = %135
  %140 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %137, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw sub i32* %140, i32 1 seq_cst
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %146

143:                                              ; preds = %139
  %144 = bitcast %"struct.SkAAClip::RunHead"** %136 to i8**
  %145 = load i8*, i8** %144, align 8
  tail call void @_Z7sk_freePv(i8* %145) #14
  br label %146

146:                                              ; preds = %135, %139, %143
  %147 = bitcast %class.SkAAClip* %1 to i8*
  %148 = bitcast %"class.SkAAClip::Builder"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %147, i8* align 4 %148, i64 16, i1 false)
  %149 = bitcast %"struct.SkAAClip::RunHead"** %136 to i8**
  store i8* %50, i8** %149, align 8
  %150 = icmp eq i8* %50, null
  br i1 %150, label %165, label %151

151:                                              ; preds = %146
  %152 = load i32, i32* %53, align 4
  %153 = add nsw i32 %152, -1
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 0, i32 1
  %156 = load i32, i32* %155, align 4
  %157 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %57, i64 %154, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %156, 1
  %160 = add i32 %159, %158
  %161 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %1, i64 0, i32 0, i32 3
  store i32 %160, i32* %161, align 4
  %162 = tail call zeroext i1 @_ZN8SkAAClip13trimTopBottomEv(%class.SkAAClip* %1) #14
  br i1 %162, label %163, label %165

163:                                              ; preds = %151
  %164 = tail call zeroext i1 @_ZN8SkAAClip13trimLeftRightEv(%class.SkAAClip* %1) #14
  br label %165

165:                                              ; preds = %163, %151, %146, %37
  %166 = phi i1 [ false, %37 ], [ false, %146 ], [ false, %151 ], [ %164, %163 ]
  ret i1 %166
}

; Function Attrs: nounwind
declare void @_ZN9SkBlitterD2Ev(%class.SkBlitter*) unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN8SkRegionD1Ev(%class.SkRegion*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE(%class.SkAAClip*, %class.SkAAClip* dereferenceable(24), %class.SkAAClip* dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %5 = alloca %struct.SkIRect, align 4
  %6 = alloca %struct.SkIRect, align 4
  %7 = alloca %"class.SkAAClip::Builder", align 8
  %8 = icmp eq i32 %3, 5
  br i1 %8, label %9, label %35

9:                                                ; preds = %4
  %10 = icmp eq %class.SkAAClip* %0, %2
  br i1 %10, label %31, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %13 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %12, align 8
  %14 = icmp eq %"struct.SkAAClip::RunHead"* %13, null
  br i1 %14, label %22, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw sub i32* %16, i32 1 seq_cst
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %22

19:                                               ; preds = %15
  %20 = bitcast %"struct.SkAAClip::RunHead"** %12 to i8**
  %21 = load i8*, i8** %20, align 8
  tail call void @_Z7sk_freePv(i8* %21) #14
  br label %22

22:                                               ; preds = %19, %15, %11
  %23 = bitcast %class.SkAAClip* %0 to i8*
  %24 = bitcast %class.SkAAClip* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 4 %24, i64 16, i1 false) #14
  %25 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %2, i64 0, i32 1
  %26 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %25, align 8
  store %"struct.SkAAClip::RunHead"* %26, %"struct.SkAAClip::RunHead"** %12, align 8
  %27 = icmp eq %"struct.SkAAClip::RunHead"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = atomicrmw add i32* %29, i32 1 seq_cst
  br label %31

31:                                               ; preds = %9, %22, %28
  %32 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %33 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %32, align 8
  %34 = icmp ne %"struct.SkAAClip::RunHead"* %33, null
  br label %546

35:                                               ; preds = %4
  %36 = ptrtoint %class.SkAAClip* %1 to i64
  %37 = ptrtoint %class.SkAAClip* %2 to i64
  %38 = icmp eq i32 %3, 4
  %39 = select i1 %38, i64 %37, i64 %36
  %40 = select i1 %38, i64 %36, i64 %37
  %41 = select i1 %38, i32 0, i32 %3
  %42 = inttoptr i64 %39 to %class.SkAAClip*
  %43 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 1
  %44 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %43, align 8
  %45 = icmp eq %"struct.SkAAClip::RunHead"* %44, null
  %46 = inttoptr i64 %40 to %class.SkAAClip*
  %47 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 1
  %48 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %47, align 8
  %49 = icmp eq %"struct.SkAAClip::RunHead"* %48, null
  %50 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %50) #14
  %51 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 0
  %52 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 1
  %53 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %6, i64 0, i32 2
  %54 = bitcast %struct.SkIRect* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %54, i8 -86, i64 16, i1 false)
  switch i32 %41, label %176 [
    i32 0, label %55
    i32 1, label %102
    i32 2, label %121
    i32 3, label %121
  ]

55:                                               ; preds = %35
  br i1 %45, label %56, label %69

56:                                               ; preds = %55
  %57 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %58 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %57, align 8
  %59 = icmp eq %"struct.SkAAClip::RunHead"* %58, null
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = atomicrmw sub i32* %61, i32 1 seq_cst
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %64, label %67

64:                                               ; preds = %60
  %65 = bitcast %"struct.SkAAClip::RunHead"** %57 to i8**
  %66 = load i8*, i8** %65, align 8
  tail call void @_Z7sk_freePv(i8* %66) #14
  br label %67

67:                                               ; preds = %56, %60, %64
  %68 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %68, i8 0, i64 24, i1 false) #14
  br label %544

69:                                               ; preds = %55
  br i1 %49, label %75, label %70

70:                                               ; preds = %69
  %71 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0
  %72 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0
  %73 = bitcast %struct.SkIRect* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %73) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %73, i8 -86, i64 16, i1 false) #14
  %74 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %5, %struct.SkIRect* dereferenceable(16) %71, %struct.SkIRect* dereferenceable(16) %72) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %73) #14
  br i1 %74, label %100, label %75

75:                                               ; preds = %70, %69
  %76 = icmp eq %class.SkAAClip* %42, %0
  br i1 %76, label %96, label %77

77:                                               ; preds = %75
  %78 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %79 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %78, align 8
  %80 = icmp eq %"struct.SkAAClip::RunHead"* %79, null
  br i1 %80, label %88, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %79, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = atomicrmw sub i32* %82, i32 1 seq_cst
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %88

85:                                               ; preds = %81
  %86 = bitcast %"struct.SkAAClip::RunHead"** %78 to i8**
  %87 = load i8*, i8** %86, align 8
  call void @_Z7sk_freePv(i8* %87) #14
  br label %88

88:                                               ; preds = %85, %81, %77
  %89 = bitcast %class.SkAAClip* %0 to i8*
  %90 = inttoptr i64 %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %89, i8* align 4 %90, i64 16, i1 false) #14
  %91 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %43, align 8
  store %"struct.SkAAClip::RunHead"* %91, %"struct.SkAAClip::RunHead"** %78, align 8
  %92 = icmp eq %"struct.SkAAClip::RunHead"* %91, null
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 1 seq_cst
  br label %96

96:                                               ; preds = %75, %88, %93
  %97 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %98 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %97, align 8
  %99 = icmp ne %"struct.SkAAClip::RunHead"* %98, null
  br label %544

100:                                              ; preds = %70
  %101 = inttoptr i64 %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %101, i64 16, i1 false)
  br label %180

102:                                              ; preds = %35
  %103 = or i1 %45, %49
  br i1 %103, label %108, label %104

104:                                              ; preds = %102
  %105 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0
  %106 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0
  %107 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %6, %struct.SkIRect* dereferenceable(16) %105, %struct.SkIRect* dereferenceable(16) %106) #14
  br i1 %107, label %180, label %108

108:                                              ; preds = %104, %102
  %109 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %110 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %109, align 8
  %111 = icmp eq %"struct.SkAAClip::RunHead"* %110, null
  br i1 %111, label %119, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = atomicrmw sub i32* %113, i32 1 seq_cst
  %115 = icmp eq i32 %114, 1
  br i1 %115, label %116, label %119

116:                                              ; preds = %112
  %117 = bitcast %"struct.SkAAClip::RunHead"** %109 to i8**
  %118 = load i8*, i8** %117, align 8
  call void @_Z7sk_freePv(i8* %118) #14
  br label %119

119:                                              ; preds = %108, %112, %116
  %120 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %120, i8 0, i64 24, i1 false) #14
  br label %544

121:                                              ; preds = %35, %35
  br i1 %45, label %122, label %147

122:                                              ; preds = %121
  %123 = icmp eq %class.SkAAClip* %46, %0
  br i1 %123, label %143, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %126 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %125, align 8
  %127 = icmp eq %"struct.SkAAClip::RunHead"* %126, null
  br i1 %127, label %135, label %128

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %126, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = atomicrmw sub i32* %129, i32 1 seq_cst
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %132, label %135

132:                                              ; preds = %128
  %133 = bitcast %"struct.SkAAClip::RunHead"** %125 to i8**
  %134 = load i8*, i8** %133, align 8
  tail call void @_Z7sk_freePv(i8* %134) #14
  br label %135

135:                                              ; preds = %132, %128, %124
  %136 = bitcast %class.SkAAClip* %0 to i8*
  %137 = inttoptr i64 %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %136, i8* align 4 %137, i64 16, i1 false) #14
  %138 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %47, align 8
  store %"struct.SkAAClip::RunHead"* %138, %"struct.SkAAClip::RunHead"** %125, align 8
  %139 = icmp eq %"struct.SkAAClip::RunHead"* %138, null
  br i1 %139, label %143, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = atomicrmw add i32* %141, i32 1 seq_cst
  br label %143

143:                                              ; preds = %122, %135, %140
  %144 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %145 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %144, align 8
  %146 = icmp ne %"struct.SkAAClip::RunHead"* %145, null
  br label %544

147:                                              ; preds = %121
  br i1 %49, label %148, label %173

148:                                              ; preds = %147
  %149 = icmp eq %class.SkAAClip* %42, %0
  br i1 %149, label %169, label %150

150:                                              ; preds = %148
  %151 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %152 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %151, align 8
  %153 = icmp eq %"struct.SkAAClip::RunHead"* %152, null
  br i1 %153, label %161, label %154

154:                                              ; preds = %150
  %155 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %152, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw sub i32* %155, i32 1 seq_cst
  %157 = icmp eq i32 %156, 1
  br i1 %157, label %158, label %161

158:                                              ; preds = %154
  %159 = bitcast %"struct.SkAAClip::RunHead"** %151 to i8**
  %160 = load i8*, i8** %159, align 8
  tail call void @_Z7sk_freePv(i8* %160) #14
  br label %161

161:                                              ; preds = %158, %154, %150
  %162 = bitcast %class.SkAAClip* %0 to i8*
  %163 = inttoptr i64 %39 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %162, i8* align 4 %163, i64 16, i1 false) #14
  %164 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %43, align 8
  store %"struct.SkAAClip::RunHead"* %164, %"struct.SkAAClip::RunHead"** %151, align 8
  %165 = icmp eq %"struct.SkAAClip::RunHead"* %164, null
  br i1 %165, label %169, label %166

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = atomicrmw add i32* %167, i32 1 seq_cst
  br label %169

169:                                              ; preds = %148, %161, %166
  %170 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %171 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %170, align 8
  %172 = icmp ne %"struct.SkAAClip::RunHead"* %171, null
  br label %544

173:                                              ; preds = %147
  %174 = inttoptr i64 %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %50, i8* align 4 %174, i64 16, i1 false)
  %175 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0
  call void @_ZN7SkIRect4joinERKS_(%struct.SkIRect* nonnull %6, %struct.SkIRect* dereferenceable(16) %175) #14
  br label %180

176:                                              ; preds = %35
  %177 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %178 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %177, align 8
  %179 = icmp ne %"struct.SkAAClip::RunHead"* %178, null
  br label %544

180:                                              ; preds = %104, %173, %100
  %181 = bitcast %"class.SkAAClip::Builder"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %181) #14
  %182 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 1
  %183 = bitcast %class.SkTDArray.14* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 -86, i64 40, i1 false)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %181, i8* nonnull align 4 %50, i64 16, i1 false) #14
  %184 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 1
  %185 = bitcast %class.SkTDArray.14* %184 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %185, i8 0, i64 16, i1 false) #14
  %186 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 3
  store i32 -1, i32* %186, align 8
  %187 = load i32, i32* %53, align 4
  %188 = load i32, i32* %51, align 4
  %189 = sub i32 %187, %188
  %190 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 4
  store i32 %189, i32* %190, align 4
  %191 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 2
  store %"struct.SkAAClip::Builder::Row"* null, %"struct.SkAAClip::Builder::Row"** %191, align 8
  %192 = load i32, i32* %52, align 4
  %193 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 5
  store i32 %192, i32* %193, align 8
  %194 = icmp ult i32 %41, 4
  br i1 %194, label %195, label %199

195:                                              ; preds = %180
  %196 = sext i32 %41 to i64
  %197 = getelementptr inbounds [4 x i32 (i32, i32)*], [4 x i32 (i32, i32)*]* @switch.table._ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE, i64 0, i64 %196
  %198 = load i32 (i32, i32)*, i32 (i32, i32)** %197, align 8
  br label %199

199:                                              ; preds = %195, %180
  %200 = phi i32 (i32, i32)* [ @_ZL13sectAlphaProcjj, %180 ], [ %198, %195 ]
  %201 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %43, align 8
  %202 = icmp eq %"struct.SkAAClip::RunHead"* %201, null
  br i1 %202, label %203, label %206

203:                                              ; preds = %199
  %204 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0, i32 3
  %205 = load i32, i32* %204, align 4
  br label %224

206:                                              ; preds = %199
  %207 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %201, i64 1
  %208 = bitcast %"struct.SkAAClip::RunHead"* %207 to %"struct.SkAAClip::YOffset"*
  %209 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %201, i64 0, i32 1
  %210 = load i32, i32* %209, align 4
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %208, i64 %211
  %213 = bitcast %"struct.SkAAClip::YOffset"* %212 to i8*
  %214 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %201, i64 1, i32 1
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i64
  %217 = getelementptr inbounds i8, i8* %213, i64 %216
  %218 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0, i32 1
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %207, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i32, i32* %220, align 4
  %222 = add i32 %219, 1
  %223 = add i32 %222, %221
  br label %224

224:                                              ; preds = %206, %203
  %225 = phi i8 [ 1, %203 ], [ 0, %206 ]
  %226 = phi i32 [ %205, %203 ], [ %219, %206 ]
  %227 = phi i8* [ null, %203 ], [ %217, %206 ]
  %228 = phi %"struct.SkAAClip::YOffset"* [ null, %203 ], [ %212, %206 ]
  %229 = phi %"struct.SkAAClip::YOffset"* [ null, %203 ], [ %208, %206 ]
  %230 = phi i32 [ %205, %203 ], [ %223, %206 ]
  %231 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %47, align 8
  %232 = icmp eq %"struct.SkAAClip::RunHead"* %231, null
  br i1 %232, label %233, label %236

233:                                              ; preds = %224
  %234 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0, i32 3
  %235 = load i32, i32* %234, align 4
  br label %254

236:                                              ; preds = %224
  %237 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %231, i64 1
  %238 = bitcast %"struct.SkAAClip::RunHead"* %237 to %"struct.SkAAClip::YOffset"*
  %239 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %231, i64 0, i32 1
  %240 = load i32, i32* %239, align 4
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %238, i64 %241
  %243 = bitcast %"struct.SkAAClip::YOffset"* %242 to i8*
  %244 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %231, i64 1, i32 1
  %245 = load i32, i32* %244, align 4
  %246 = zext i32 %245 to i64
  %247 = getelementptr inbounds i8, i8* %243, i64 %246
  %248 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0, i32 1
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %237, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = add i32 %249, 1
  %253 = add i32 %252, %251
  br label %254

254:                                              ; preds = %236, %233
  %255 = phi %"struct.SkAAClip::YOffset"* [ null, %233 ], [ %238, %236 ]
  %256 = phi %"struct.SkAAClip::YOffset"* [ null, %233 ], [ %242, %236 ]
  %257 = phi i8* [ null, %233 ], [ %247, %236 ]
  %258 = phi i32 [ %235, %233 ], [ %249, %236 ]
  %259 = phi i8 [ 1, %233 ], [ 0, %236 ]
  %260 = phi i32 [ %235, %233 ], [ %253, %236 ]
  %261 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 0, i32 3
  %262 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 0, i32 2
  %264 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 0, i32 1
  %265 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0, i32 0
  %266 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %42, i64 0, i32 0, i32 2
  %267 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0, i32 0
  %268 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %46, i64 0, i32 0, i32 2
  br label %269

269:                                              ; preds = %505, %254
  %270 = phi i32 [ %230, %254 ], [ %479, %505 ]
  %271 = phi i8 [ %225, %254 ], [ %480, %505 ]
  %272 = phi %"struct.SkAAClip::YOffset"* [ %255, %254 ], [ %506, %505 ]
  %273 = phi i8* [ %257, %254 ], [ %507, %505 ]
  %274 = phi i32 [ %260, %254 ], [ %508, %505 ]
  %275 = phi i8 [ %259, %254 ], [ %509, %505 ]
  %276 = phi i32 [ %226, %254 ], [ %481, %505 ]
  %277 = phi i32 [ %230, %254 ], [ %482, %505 ]
  %278 = phi i32 [ %258, %254 ], [ %510, %505 ]
  %279 = phi i32 [ %260, %254 ], [ %511, %505 ]
  %280 = phi i8* [ %227, %254 ], [ %483, %505 ]
  %281 = phi %"struct.SkAAClip::YOffset"* [ %229, %254 ], [ %484, %505 ]
  %282 = icmp slt i32 %276, %278
  br i1 %282, label %283, label %287

283:                                              ; preds = %269
  %284 = icmp sgt i32 %277, %278
  %285 = select i1 %284, i32 %278, i32 %276
  %286 = select i1 %284, i32 %278, i32 %277
  br label %296

287:                                              ; preds = %269
  %288 = icmp slt i32 %278, %276
  br i1 %288, label %289, label %293

289:                                              ; preds = %287
  %290 = icmp sgt i32 %279, %276
  %291 = select i1 %290, i32 %276, i32 %278
  %292 = select i1 %290, i32 %276, i32 %279
  br label %296

293:                                              ; preds = %287
  %294 = icmp slt i32 %279, %277
  %295 = select i1 %294, i32 %279, i32 %277
  br label %296

296:                                              ; preds = %293, %289, %283
  %297 = phi i32 [ %295, %293 ], [ %285, %283 ], [ %276, %289 ]
  %298 = phi i32 [ %295, %293 ], [ %278, %283 ], [ %291, %289 ]
  %299 = phi i8* [ %280, %293 ], [ %280, %283 ], [ null, %289 ]
  %300 = phi i8* [ %273, %293 ], [ null, %283 ], [ %273, %289 ]
  %301 = phi i32 [ %276, %293 ], [ %276, %283 ], [ %278, %289 ]
  %302 = phi i32 [ %295, %293 ], [ %286, %283 ], [ %292, %289 ]
  %303 = load i32, i32* %261, align 4
  %304 = icmp slt i32 %301, %303
  br i1 %304, label %305, label %515

305:                                              ; preds = %296
  %306 = icmp sgt i32 %302, %303
  %307 = select i1 %306, i32 %303, i32 %302
  %308 = icmp ne i8* %299, null
  %309 = icmp ne i8* %300, null
  %310 = or i1 %308, %309
  br i1 %310, label %316, label %311

311:                                              ; preds = %305
  %312 = load i32, i32* %262, align 8
  %313 = add nsw i32 %307, -1
  %314 = load i32, i32* %263, align 8
  %315 = sub i32 %314, %312
  call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* nonnull %7, i32 %312, i32 %313, i32 0, i32 %315) #14
  br label %457

316:                                              ; preds = %305
  %317 = load i32, i32* %264, align 4
  %318 = icmp slt i32 %301, %317
  br i1 %318, label %457, label %319

319:                                              ; preds = %316
  br i1 %308, label %320, label %327

320:                                              ; preds = %319
  %321 = load i32, i32* %265, align 4
  %322 = load i8, i8* %299, align 1
  %323 = zext i8 %322 to i32
  %324 = add nsw i32 %321, %323
  %325 = getelementptr inbounds i8, i8* %299, i64 1
  %326 = load i8, i8* %325, align 1
  br label %329

327:                                              ; preds = %319
  %328 = load i32, i32* %262, align 8
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32* [ %263, %327 ], [ %266, %320 ]
  %331 = phi i32 [ %328, %327 ], [ %321, %320 ]
  %332 = phi i32 [ 2147483647, %327 ], [ %324, %320 ]
  %333 = phi i8 [ 1, %327 ], [ 0, %320 ]
  %334 = phi i8 [ 0, %327 ], [ %326, %320 ]
  %335 = load i32, i32* %330, align 4
  br i1 %309, label %336, label %344

336:                                              ; preds = %329
  %337 = load i32, i32* %267, align 4
  %338 = load i8, i8* %300, align 1
  %339 = zext i8 %338 to i32
  %340 = add nsw i32 %337, %339
  %341 = getelementptr inbounds i8, i8* %300, i64 1
  %342 = load i8, i8* %341, align 1
  %343 = load i32, i32* %262, align 8
  br label %346

344:                                              ; preds = %329
  %345 = load i32, i32* %262, align 8
  br label %346

346:                                              ; preds = %344, %336
  %347 = phi i32 [ %345, %344 ], [ %343, %336 ]
  %348 = phi i32* [ %263, %344 ], [ %268, %336 ]
  %349 = phi i32 [ %345, %344 ], [ %337, %336 ]
  %350 = phi i32 [ 2147483647, %344 ], [ %340, %336 ]
  %351 = phi i8 [ 1, %344 ], [ 0, %336 ]
  %352 = phi i8 [ 0, %344 ], [ %342, %336 ]
  %353 = load i32, i32* %348, align 4
  %354 = add nsw i32 %307, -1
  br label %355

355:                                              ; preds = %438, %346
  %356 = phi i8 [ %334, %346 ], [ %419, %438 ]
  %357 = phi i8 [ %333, %346 ], [ %420, %438 ]
  %358 = phi i32 [ %332, %346 ], [ %421, %438 ]
  %359 = phi i32 [ %331, %346 ], [ %422, %438 ]
  %360 = phi i8* [ %299, %346 ], [ %423, %438 ]
  %361 = phi i8 [ %352, %346 ], [ %439, %438 ]
  %362 = phi i8 [ %351, %346 ], [ %440, %438 ]
  %363 = phi i32 [ %350, %346 ], [ %441, %438 ]
  %364 = phi i32 [ %349, %346 ], [ %442, %438 ]
  %365 = phi i8* [ %300, %346 ], [ %443, %438 ]
  %366 = phi i32 [ %331, %346 ], [ %424, %438 ]
  %367 = phi i32 [ %332, %346 ], [ %425, %438 ]
  %368 = phi i32 [ %349, %346 ], [ %444, %438 ]
  %369 = phi i32 [ %350, %346 ], [ %445, %438 ]
  %370 = phi i32 [ %347, %346 ], [ %405, %438 ]
  %371 = icmp slt i32 %366, %368
  br i1 %371, label %372, label %376

372:                                              ; preds = %355
  %373 = icmp sgt i32 %367, %368
  %374 = select i1 %373, i32 %368, i32 %366
  %375 = select i1 %373, i32 %368, i32 %367
  br label %385

376:                                              ; preds = %355
  %377 = icmp slt i32 %368, %366
  br i1 %377, label %378, label %382

378:                                              ; preds = %376
  %379 = icmp sgt i32 %369, %366
  %380 = select i1 %379, i32 %366, i32 %368
  %381 = select i1 %379, i32 %366, i32 %369
  br label %385

382:                                              ; preds = %376
  %383 = icmp slt i32 %369, %367
  %384 = select i1 %383, i32 %369, i32 %367
  br label %385

385:                                              ; preds = %382, %378, %372
  %386 = phi i32 [ %384, %382 ], [ %374, %372 ], [ %366, %378 ]
  %387 = phi i32 [ %384, %382 ], [ %368, %372 ], [ %380, %378 ]
  %388 = phi i8 [ %356, %382 ], [ %356, %372 ], [ 0, %378 ]
  %389 = phi i8 [ %361, %382 ], [ 0, %372 ], [ %361, %378 ]
  %390 = phi i32 [ %366, %382 ], [ %366, %372 ], [ %368, %378 ]
  %391 = phi i32 [ %384, %382 ], [ %375, %372 ], [ %381, %378 ]
  %392 = zext i8 %389 to i32
  %393 = zext i8 %388 to i32
  %394 = load i32, i32* %263, align 8
  %395 = icmp slt i32 %390, %394
  br i1 %395, label %396, label %451

396:                                              ; preds = %385
  %397 = icmp sgt i32 %391, %394
  %398 = select i1 %397, i32 %394, i32 %391
  %399 = load i32, i32* %262, align 8
  %400 = icmp slt i32 %390, %399
  br i1 %400, label %404, label %401

401:                                              ; preds = %396
  %402 = call i32 %200(i32 %393, i32 %392) #14, !callees !5
  %403 = sub nsw i32 %398, %390
  call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* nonnull %7, i32 %390, i32 %354, i32 %402, i32 %403) #14
  br label %404

404:                                              ; preds = %401, %396
  %405 = phi i32 [ %398, %401 ], [ %370, %396 ]
  %406 = icmp eq i32 %367, %398
  br i1 %406, label %407, label %418

407:                                              ; preds = %404
  %408 = icmp eq i8 %357, 0
  br i1 %408, label %409, label %418

409:                                              ; preds = %407
  %410 = icmp eq i32 %358, %335
  br i1 %410, label %418, label %411

411:                                              ; preds = %409
  %412 = getelementptr inbounds i8, i8* %360, i64 2
  %413 = load i8, i8* %412, align 1
  %414 = zext i8 %413 to i32
  %415 = add nsw i32 %358, %414
  %416 = getelementptr inbounds i8, i8* %360, i64 3
  %417 = load i8, i8* %416, align 1
  br label %418

418:                                              ; preds = %411, %409, %407, %404
  %419 = phi i8 [ %417, %411 ], [ %356, %404 ], [ %356, %407 ], [ 0, %409 ]
  %420 = phi i8 [ 0, %411 ], [ %357, %404 ], [ %357, %407 ], [ 1, %409 ]
  %421 = phi i32 [ %415, %411 ], [ %358, %404 ], [ %358, %407 ], [ 2147483647, %409 ]
  %422 = phi i32 [ %358, %411 ], [ %359, %404 ], [ %359, %407 ], [ %335, %409 ]
  %423 = phi i8* [ %412, %411 ], [ %360, %404 ], [ %360, %407 ], [ %360, %409 ]
  %424 = phi i32 [ %358, %411 ], [ %386, %404 ], [ %359, %407 ], [ %335, %409 ]
  %425 = phi i32 [ %415, %411 ], [ %367, %404 ], [ %358, %407 ], [ 2147483647, %409 ]
  %426 = icmp eq i32 %369, %398
  br i1 %426, label %427, label %438

427:                                              ; preds = %418
  %428 = icmp eq i8 %362, 0
  br i1 %428, label %429, label %438

429:                                              ; preds = %427
  %430 = icmp eq i32 %363, %353
  br i1 %430, label %438, label %431

431:                                              ; preds = %429
  %432 = getelementptr inbounds i8, i8* %365, i64 2
  %433 = load i8, i8* %432, align 1
  %434 = zext i8 %433 to i32
  %435 = add nsw i32 %363, %434
  %436 = getelementptr inbounds i8, i8* %365, i64 3
  %437 = load i8, i8* %436, align 1
  br label %438

438:                                              ; preds = %431, %429, %427, %418
  %439 = phi i8 [ %437, %431 ], [ %361, %418 ], [ %361, %427 ], [ 0, %429 ]
  %440 = phi i8 [ 0, %431 ], [ %362, %418 ], [ %362, %427 ], [ 1, %429 ]
  %441 = phi i32 [ %435, %431 ], [ %363, %418 ], [ %363, %427 ], [ 2147483647, %429 ]
  %442 = phi i32 [ %363, %431 ], [ %364, %418 ], [ %364, %427 ], [ %353, %429 ]
  %443 = phi i8* [ %432, %431 ], [ %365, %418 ], [ %365, %427 ], [ %365, %429 ]
  %444 = phi i32 [ %363, %431 ], [ %387, %418 ], [ %364, %427 ], [ %353, %429 ]
  %445 = phi i32 [ %435, %431 ], [ %369, %418 ], [ %363, %427 ], [ 2147483647, %429 ]
  %446 = icmp eq i8 %420, 0
  %447 = icmp eq i8 %440, 0
  %448 = or i1 %446, %447
  br i1 %448, label %355, label %449

449:                                              ; preds = %438
  %450 = load i32, i32* %263, align 8
  br label %451

451:                                              ; preds = %385, %449
  %452 = phi i32 [ %450, %449 ], [ %394, %385 ]
  %453 = phi i32 [ %405, %449 ], [ %370, %385 ]
  %454 = icmp sgt i32 %452, %453
  br i1 %454, label %455, label %457

455:                                              ; preds = %451
  %456 = sub nsw i32 %452, %453
  call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* nonnull %7, i32 %453, i32 %354, i32 0, i32 %456) #14
  br label %457

457:                                              ; preds = %455, %451, %316, %311
  %458 = icmp eq i32 %277, %307
  br i1 %458, label %459, label %478

459:                                              ; preds = %457
  %460 = icmp eq i8 %271, 0
  br i1 %460, label %461, label %478

461:                                              ; preds = %459
  %462 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %281, i64 1
  %463 = icmp ult %"struct.SkAAClip::YOffset"* %462, %228
  br i1 %463, label %464, label %478

464:                                              ; preds = %461
  %465 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %462, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  %467 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %281, i64 0, i32 0
  %468 = load i32, i32* %467, align 4
  %469 = add i32 %466, %270
  %470 = sub i32 %469, %468
  %471 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %281, i64 1, i32 1
  %472 = load i32, i32* %471, align 4
  %473 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %281, i64 0, i32 1
  %474 = load i32, i32* %473, align 4
  %475 = sub i32 %472, %474
  %476 = zext i32 %475 to i64
  %477 = getelementptr inbounds i8, i8* %280, i64 %476
  br label %478

478:                                              ; preds = %464, %461, %459, %457
  %479 = phi i32 [ %270, %457 ], [ %470, %464 ], [ %270, %459 ], [ 2147483647, %461 ]
  %480 = phi i8 [ %271, %457 ], [ 0, %464 ], [ %271, %459 ], [ 1, %461 ]
  %481 = phi i32 [ %297, %457 ], [ %277, %464 ], [ %277, %459 ], [ %277, %461 ]
  %482 = phi i32 [ %277, %457 ], [ %470, %464 ], [ %270, %459 ], [ 2147483647, %461 ]
  %483 = phi i8* [ %280, %457 ], [ %477, %464 ], [ %280, %459 ], [ null, %461 ]
  %484 = phi %"struct.SkAAClip::YOffset"* [ %281, %457 ], [ %462, %464 ], [ %281, %459 ], [ %281, %461 ]
  %485 = icmp eq i32 %279, %307
  br i1 %485, label %486, label %505

486:                                              ; preds = %478
  %487 = icmp eq i8 %275, 0
  br i1 %487, label %488, label %505

488:                                              ; preds = %486
  %489 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %272, i64 1
  %490 = icmp ult %"struct.SkAAClip::YOffset"* %489, %256
  br i1 %490, label %491, label %505

491:                                              ; preds = %488
  %492 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %489, i64 0, i32 0
  %493 = load i32, i32* %492, align 4
  %494 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %272, i64 0, i32 0
  %495 = load i32, i32* %494, align 4
  %496 = add i32 %493, %274
  %497 = sub i32 %496, %495
  %498 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %272, i64 1, i32 1
  %499 = load i32, i32* %498, align 4
  %500 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %272, i64 0, i32 1
  %501 = load i32, i32* %500, align 4
  %502 = sub i32 %499, %501
  %503 = zext i32 %502 to i64
  %504 = getelementptr inbounds i8, i8* %273, i64 %503
  br label %505

505:                                              ; preds = %491, %488, %486, %478
  %506 = phi %"struct.SkAAClip::YOffset"* [ %272, %478 ], [ %489, %491 ], [ %272, %486 ], [ %272, %488 ]
  %507 = phi i8* [ %273, %478 ], [ %504, %491 ], [ %273, %486 ], [ null, %488 ]
  %508 = phi i32 [ %274, %478 ], [ %497, %491 ], [ %274, %486 ], [ 2147483647, %488 ]
  %509 = phi i8 [ %275, %478 ], [ 0, %491 ], [ %275, %486 ], [ 1, %488 ]
  %510 = phi i32 [ %298, %478 ], [ %279, %491 ], [ %279, %486 ], [ %279, %488 ]
  %511 = phi i32 [ %279, %478 ], [ %497, %491 ], [ %274, %486 ], [ 2147483647, %488 ]
  %512 = icmp eq i8 %480, 0
  %513 = icmp eq i8 %509, 0
  %514 = or i1 %512, %513
  br i1 %514, label %269, label %515

515:                                              ; preds = %296, %505
  %516 = call zeroext i1 @_ZN8SkAAClip7Builder6finishEPS_(%"class.SkAAClip::Builder"* nonnull %7, %class.SkAAClip* %0)
  %517 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %184, i64 0, i32 0
  %518 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %517, align 8
  %519 = icmp eq %"struct.SkAAClip::Builder::Row"* %518, null
  %520 = bitcast %"struct.SkAAClip::Builder::Row"* %518 to i8*
  br i1 %519, label %542, label %521

521:                                              ; preds = %515
  %522 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %7, i64 0, i32 1, i32 2
  %523 = load i32, i32* %522, align 4
  %524 = sext i32 %523 to i64
  %525 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %518, i64 %524
  %526 = icmp sgt i32 %523, 0
  br i1 %526, label %527, label %542

527:                                              ; preds = %521, %536
  %528 = phi %"struct.SkAAClip::Builder::Row"* [ %537, %536 ], [ %518, %521 ]
  %529 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %528, i64 0, i32 2
  %530 = load %class.SkTDArray.1*, %class.SkTDArray.1** %529, align 8
  %531 = icmp eq %class.SkTDArray.1* %530, null
  br i1 %531, label %536, label %532

532:                                              ; preds = %527
  %533 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %530, i64 0, i32 0
  %534 = load i8*, i8** %533, align 8
  call void @_Z7sk_freePv(i8* %534) #14
  %535 = bitcast %class.SkTDArray.1* %530 to i8*
  call void @_ZdlPv(i8* %535) #15
  br label %536

536:                                              ; preds = %532, %527
  %537 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %528, i64 1
  %538 = icmp ult %"struct.SkAAClip::Builder::Row"* %537, %525
  br i1 %538, label %527, label %539

539:                                              ; preds = %536
  %540 = bitcast %class.SkTDArray.14* %184 to i8**
  %541 = load i8*, i8** %540, align 8
  br label %542

542:                                              ; preds = %515, %521, %539
  %543 = phi i8* [ %541, %539 ], [ %520, %521 ], [ %520, %515 ]
  call void @_Z7sk_freePv(i8* %543) #14
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %181) #14
  br label %544

544:                                              ; preds = %542, %176, %169, %143, %119, %96, %67
  %545 = phi i1 [ %179, %176 ], [ %146, %143 ], [ %172, %169 ], [ %516, %542 ], [ false, %119 ], [ false, %67 ], [ %99, %96 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %50) #14
  br label %546

546:                                              ; preds = %544, %31
  %547 = phi i1 [ %34, %31 ], [ %545, %544 ]
  ret i1 %547
}

declare zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16), %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN7SkIRect4joinERKS_(%struct.SkIRect*, %struct.SkIRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip2opERK7SkIRectN8SkRegion2OpE(%class.SkAAClip*, %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #2 align 2 {
  %4 = alloca %struct.SkIRect, align 4
  %5 = alloca %class.SkAAClip, align 8
  %6 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 0
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 1
  %9 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 2
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %4, i64 0, i32 3
  %11 = bitcast %struct.SkIRect* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 16, i1 false)
  switch i32 %2, label %99 [
    i32 1, label %12
    i32 2, label %44
  ]

12:                                               ; preds = %3
  %13 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0
  %14 = call zeroext i1 @_ZN7SkIRect9intersectERKS_S1_(%struct.SkIRect* nonnull %4, %struct.SkIRect* dereferenceable(16) %1, %struct.SkIRect* dereferenceable(16) %13) #14
  br i1 %14, label %28, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %17 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %16, align 8
  %18 = icmp eq %"struct.SkAAClip::RunHead"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw sub i32* %20, i32 1 seq_cst
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %23, label %26

23:                                               ; preds = %19
  %24 = bitcast %"struct.SkAAClip::RunHead"** %16 to i8**
  %25 = load i8*, i8** %24, align 8
  call void @_Z7sk_freePv(i8* %25) #14
  br label %26

26:                                               ; preds = %15, %19, %23
  %27 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 24, i1 false) #14
  br label %115

28:                                               ; preds = %12
  %29 = bitcast %class.SkAAClip* %0 to i8*
  %30 = call i32 @bcmp(i8* nonnull %6, i8* %29, i64 16) #14
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %34 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %33, align 8
  %35 = icmp ne %"struct.SkAAClip::RunHead"* %34, null
  br label %115

36:                                               ; preds = %28
  %37 = load i32, i32* %7, align 4
  %38 = load i32, i32* %8, align 4
  %39 = load i32, i32* %9, align 4
  %40 = load i32, i32* %10, align 4
  %41 = call zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* %0, i32 %37, i32 %38, i32 %39, i32 %40) #14
  br i1 %41, label %42, label %99

42:                                               ; preds = %36
  %43 = call zeroext i1 @_ZN8SkAAClip7setRectERK7SkIRect(%class.SkAAClip* %0, %struct.SkIRect* nonnull dereferenceable(16) %4)
  br label %115

44:                                               ; preds = %3
  %45 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = sub nsw i64 %47, %50
  %52 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 3
  %53 = load i32, i32* %52, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = sub nsw i64 %54, %57
  %59 = icmp slt i64 %51, 1
  %60 = icmp slt i64 %58, 1
  %61 = or i1 %59, %60
  br i1 %61, label %99, label %62

62:                                               ; preds = %44
  %63 = or i64 %58, %51
  %64 = add nsw i64 %63, 2147483648
  %65 = icmp ugt i64 %64, 4294967295
  br i1 %65, label %99, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = sub nsw i64 %69, %72
  %74 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 3
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %1, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sext i32 %78 to i64
  %80 = sub nsw i64 %76, %79
  %81 = icmp slt i64 %73, 1
  %82 = icmp slt i64 %80, 1
  %83 = or i1 %81, %82
  br i1 %83, label %99, label %84

84:                                               ; preds = %66
  %85 = or i64 %80, %73
  %86 = add nsw i64 %85, 2147483648
  %87 = icmp ugt i64 %86, 4294967295
  %88 = icmp sgt i32 %71, %49
  %89 = or i1 %88, %87
  %90 = icmp sgt i32 %78, %56
  %91 = or i1 %90, %89
  %92 = icmp slt i32 %68, %46
  %93 = or i1 %92, %91
  %94 = icmp sge i32 %75, %53
  %95 = xor i1 %93, true
  %96 = and i1 %94, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %84
  %98 = tail call zeroext i1 @_ZN8SkAAClip7setRectERK7SkIRect(%class.SkAAClip* %0, %struct.SkIRect* dereferenceable(16) %1)
  br label %115

99:                                               ; preds = %44, %62, %66, %36, %3, %84
  %100 = phi %struct.SkIRect* [ %1, %3 ], [ %1, %84 ], [ %4, %36 ], [ %1, %66 ], [ %1, %62 ], [ %1, %44 ]
  %101 = bitcast %class.SkAAClip* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #14
  %102 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %5, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 24, i1 false) #14
  %103 = call zeroext i1 @_ZN8SkAAClip7setRectERK7SkIRect(%class.SkAAClip* nonnull %5, %struct.SkIRect* dereferenceable(16) %100)
  %104 = call zeroext i1 @_ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE(%class.SkAAClip* %0, %class.SkAAClip* dereferenceable(24) %0, %class.SkAAClip* nonnull dereferenceable(24) %5, i32 %2)
  %105 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %102, align 8
  %106 = icmp eq %"struct.SkAAClip::RunHead"* %105, null
  br i1 %106, label %114, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw sub i32* %108, i32 1 seq_cst
  %110 = icmp eq i32 %109, 1
  br i1 %110, label %111, label %114

111:                                              ; preds = %107
  %112 = bitcast %"struct.SkAAClip::RunHead"** %102 to i8**
  %113 = load i8*, i8** %112, align 8
  call void @_Z7sk_freePv(i8* %113) #14
  br label %114

114:                                              ; preds = %99, %107, %111
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #14
  br label %115

115:                                              ; preds = %114, %97, %42, %32, %26
  %116 = phi i1 [ %104, %114 ], [ %98, %97 ], [ %35, %32 ], [ %43, %42 ], [ false, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip2opERK6SkRectN8SkRegion2OpEb(%class.SkAAClip*, %struct.SkRect* dereferenceable(16), i32, i1 zeroext) local_unnamed_addr #2 align 2 {
  %5 = alloca %class.SkPath, align 8
  %6 = alloca %class.SkPath, align 8
  %7 = alloca %struct.SkRect, align 4
  %8 = alloca <4 x float>, align 16
  %9 = alloca %class.SkAAClip, align 8
  %10 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = bitcast <4 x float>* %8 to i8*
  %12 = bitcast %struct.SkRect* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %12, i8 -1, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %13 = bitcast %class.SkAAClip* %0 to <4 x i32>*
  %14 = load <4 x i32>, <4 x i32>* %13, align 4
  %15 = sitofp <4 x i32> %14 to <4 x float>
  store <4 x float> %15, <4 x float>* %8, align 16
  switch i32 %2, label %67 [
    i32 1, label %16
    i32 0, label %16
    i32 2, label %36
  ]

16:                                               ; preds = %4, %4
  %17 = bitcast <4 x float>* %8 to %struct.SkRect*
  %18 = call zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect* nonnull %7, %struct.SkRect* dereferenceable(16) %1, %struct.SkRect* nonnull dereferenceable(16) %17) #14
  br i1 %18, label %67, label %19

19:                                               ; preds = %16
  %20 = icmp eq i32 %2, 1
  %21 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %22 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %21, align 8
  %23 = icmp eq %"struct.SkAAClip::RunHead"* %22, null
  br i1 %20, label %24, label %34

24:                                               ; preds = %19
  br i1 %23, label %32, label %25

25:                                               ; preds = %24
  %26 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw sub i32* %26, i32 1 seq_cst
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %32

29:                                               ; preds = %25
  %30 = bitcast %"struct.SkAAClip::RunHead"** %21 to i8**
  %31 = load i8*, i8** %30, align 8
  call void @_Z7sk_freePv(i8* %31) #14
  br label %32

32:                                               ; preds = %24, %25, %29
  %33 = bitcast %class.SkAAClip* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %33, i8 0, i64 24, i1 false) #14
  br label %98

34:                                               ; preds = %19
  %35 = xor i1 %23, true
  br label %98

36:                                               ; preds = %4
  %37 = extractelement <4 x float> %15, i32 0
  %38 = extractelement <4 x float> %15, i32 2
  %39 = fcmp uge float %37, %38
  %40 = extractelement <4 x float> %15, i32 1
  %41 = extractelement <4 x float> %15, i32 3
  %42 = fcmp uge float %40, %41
  %43 = or i1 %39, %42
  br i1 %43, label %67, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 0
  %46 = load float, float* %45, align 4
  %47 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 2
  %48 = load float, float* %47, align 4
  %49 = fcmp olt float %46, %48
  br i1 %49, label %50, label %67

50:                                               ; preds = %44
  %51 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %1, i64 0, i32 3
  %54 = load float, float* %53, align 4
  %55 = fcmp uge float %52, %54
  %56 = fcmp ugt float %46, %37
  %57 = or i1 %56, %55
  br i1 %57, label %67, label %58

58:                                               ; preds = %50
  %59 = fcmp ole float %52, %40
  %60 = fcmp oge float %48, %38
  %61 = fcmp oge float %54, %41
  %62 = and i1 %60, %59
  %63 = and i1 %61, %62
  br i1 %63, label %64, label %67

64:                                               ; preds = %58
  %65 = bitcast %class.SkPath* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %5, %struct.SkRect* dereferenceable(16) %1, i32 0, i32 0) #14
  %66 = call zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip* %0, %class.SkPath* nonnull dereferenceable(16) %5, %class.SkRegion* null, i1 zeroext true) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  br label %98

67:                                               ; preds = %36, %44, %50, %16, %4, %58
  %68 = phi %struct.SkRect* [ %1, %4 ], [ %1, %58 ], [ %7, %16 ], [ %1, %50 ], [ %1, %44 ], [ %1, %36 ]
  %69 = bitcast %class.SkAAClip* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %69) #14
  %70 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %9, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #14
  %71 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 0
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 2
  %74 = load float, float* %73, align 4
  %75 = fcmp olt float %72, %74
  br i1 %75, label %76, label %82

76:                                               ; preds = %67
  %77 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %68, i64 0, i32 3
  %80 = load float, float* %79, align 4
  %81 = fcmp uge float %78, %80
  br i1 %81, label %82, label %83

82:                                               ; preds = %67, %76
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 0, i64 24, i1 false) #14
  br label %86

83:                                               ; preds = %76
  %84 = bitcast %class.SkPath* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %84) #14
  call void @_ZN6SkPath4RectERK6SkRect15SkPathDirectionj(%class.SkPath* nonnull sret %6, %struct.SkRect* dereferenceable(16) %68, i32 0, i32 0) #14
  %85 = call zeroext i1 @_ZN8SkAAClip7setPathERK6SkPathPK8SkRegionb(%class.SkAAClip* nonnull %9, %class.SkPath* nonnull dereferenceable(16) %6, %class.SkRegion* null, i1 zeroext %3) #14
  call void @_ZN6SkPathD1Ev(%class.SkPath* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %84) #14
  br label %86

86:                                               ; preds = %82, %83
  %87 = call zeroext i1 @_ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE(%class.SkAAClip* %0, %class.SkAAClip* dereferenceable(24) %0, %class.SkAAClip* nonnull dereferenceable(24) %9, i32 %2)
  %88 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %70, align 8
  %89 = icmp eq %"struct.SkAAClip::RunHead"* %88, null
  br i1 %89, label %97, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %88, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = atomicrmw sub i32* %91, i32 1 seq_cst
  %93 = icmp eq i32 %92, 1
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = bitcast %"struct.SkAAClip::RunHead"** %70 to i8**
  %96 = load i8*, i8** %95, align 8
  call void @_Z7sk_freePv(i8* %96) #14
  br label %97

97:                                               ; preds = %86, %90, %94
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %69) #14
  br label %98

98:                                               ; preds = %64, %97, %34, %32
  %99 = phi i1 [ %87, %97 ], [ false, %32 ], [ %35, %34 ], [ %66, %64 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i1 %99
}

declare zeroext i1 @_ZN6SkRect9intersectERKS_S1_(%struct.SkRect*, %struct.SkRect* dereferenceable(16), %struct.SkRect* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN8SkAAClip2opERKS_N8SkRegion2OpE(%class.SkAAClip*, %class.SkAAClip* dereferenceable(24), i32) local_unnamed_addr #2 align 2 {
  %4 = tail call zeroext i1 @_ZN8SkAAClip2opERKS_S1_N8SkRegion2OpE(%class.SkAAClip* %0, %class.SkAAClip* dereferenceable(24) %0, %class.SkAAClip* dereferenceable(24) %1, i32 %2)
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK8SkAAClip9translateEiiPS_(%class.SkAAClip* readonly, i32, i32, %class.SkAAClip*) local_unnamed_addr #2 align 2 {
  %5 = icmp eq %class.SkAAClip* %3, null
  %6 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %7 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %6, align 8
  %8 = icmp eq %"struct.SkAAClip::RunHead"* %7, null
  br i1 %5, label %9, label %11

9:                                                ; preds = %4
  %10 = xor i1 %8, true
  br label %85

11:                                               ; preds = %4
  br i1 %8, label %12, label %25

12:                                               ; preds = %11
  %13 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 1
  %14 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %13, align 8
  %15 = icmp eq %"struct.SkAAClip::RunHead"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 seq_cst
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %23

20:                                               ; preds = %16
  %21 = bitcast %"struct.SkAAClip::RunHead"** %13 to i8**
  %22 = load i8*, i8** %21, align 8
  tail call void @_Z7sk_freePv(i8* %22) #14
  br label %23

23:                                               ; preds = %12, %16, %20
  %24 = bitcast %class.SkAAClip* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %24, i8 0, i64 24, i1 false) #14
  br label %85

25:                                               ; preds = %11
  %26 = icmp eq %class.SkAAClip* %0, %3
  br i1 %26, label %46, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 1 seq_cst
  %30 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 1
  %31 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %30, align 8
  %32 = icmp eq %"struct.SkAAClip::RunHead"* %31, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %27
  %34 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw sub i32* %34, i32 1 seq_cst
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %37, label %40

37:                                               ; preds = %33
  %38 = bitcast %"struct.SkAAClip::RunHead"** %30 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #14
  br label %40

40:                                               ; preds = %27, %33, %37
  %41 = bitcast %"struct.SkAAClip::RunHead"** %6 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"struct.SkAAClip::RunHead"** %30 to i64*
  store i64 %42, i64* %43, align 8
  %44 = bitcast %class.SkAAClip* %3 to i8*
  %45 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* align 4 %45, i64 16, i1 false)
  br label %46

46:                                               ; preds = %25, %40
  %47 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = sext i32 %48 to i64
  %50 = sext i32 %1 to i64
  %51 = add nsw i64 %49, %50
  %52 = icmp slt i64 %51, 2147483647
  %53 = select i1 %52, i64 %51, i64 2147483647
  %54 = icmp sgt i64 %53, -2147483647
  %55 = select i1 %54, i64 %53, i64 -2147483647
  %56 = trunc i64 %55 to i32
  store i32 %56, i32* %47, align 4
  %57 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 0, i32 1
  %58 = load i32, i32* %57, align 4
  %59 = sext i32 %58 to i64
  %60 = sext i32 %2 to i64
  %61 = add nsw i64 %59, %60
  %62 = icmp slt i64 %61, 2147483647
  %63 = select i1 %62, i64 %61, i64 2147483647
  %64 = icmp sgt i64 %63, -2147483647
  %65 = select i1 %64, i64 %63, i64 -2147483647
  %66 = trunc i64 %65 to i32
  store i32 %66, i32* %57, align 4
  %67 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  %69 = sext i32 %68 to i64
  %70 = add nsw i64 %69, %50
  %71 = icmp slt i64 %70, 2147483647
  %72 = select i1 %71, i64 %70, i64 2147483647
  %73 = icmp sgt i64 %72, -2147483647
  %74 = select i1 %73, i64 %72, i64 -2147483647
  %75 = trunc i64 %74 to i32
  store i32 %75, i32* %67, align 4
  %76 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %3, i64 0, i32 0, i32 3
  %77 = load i32, i32* %76, align 4
  %78 = sext i32 %77 to i64
  %79 = add nsw i64 %78, %60
  %80 = icmp slt i64 %79, 2147483647
  %81 = select i1 %80, i64 %79, i64 2147483647
  %82 = icmp sgt i64 %81, -2147483647
  %83 = select i1 %82, i64 %81, i64 -2147483647
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %76, align 4
  br label %85

85:                                               ; preds = %46, %23, %9
  %86 = phi i1 [ %10, %9 ], [ false, %23 ], [ true, %46 ]
  ret i1 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK8SkAAClip10copyToMaskEP6SkMask(%class.SkAAClip* nocapture readonly, %struct.SkMask*) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  store i8 1, i8* %3, align 4
  %4 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 1
  %5 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %4, align 8
  %6 = icmp eq %"struct.SkAAClip::RunHead"* %5, null
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = bitcast %struct.SkMask* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 28, i1 false)
  br label %93

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1
  %11 = bitcast %struct.SkIRect* %10 to i8*
  %12 = bitcast %class.SkAAClip* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 4 %12, i64 16, i1 false)
  %13 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = sub i32 %14, %16
  %18 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  store i32 %17, i32* %18, align 8
  %19 = tail call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* %1) #14
  %20 = tail call i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64 %19, i32 0) #14
  %21 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  store i8* %20, i8** %21, align 8
  %22 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %4, align 8
  %23 = icmp eq %"struct.SkAAClip::RunHead"* %22, null
  br i1 %23, label %93, label %24

24:                                               ; preds = %9
  %25 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %22, i64 1
  %26 = bitcast %"struct.SkAAClip::RunHead"* %25 to %"struct.SkAAClip::YOffset"*
  %27 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %22, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %26, i64 %29
  %31 = bitcast %"struct.SkAAClip::YOffset"* %30 to i8*
  %32 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %22, i64 1, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  %36 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %37, 1
  %41 = add i32 %40, %39
  %42 = load i32, i32* %13, align 4
  %43 = load i32, i32* %15, align 4
  %44 = sub i32 %42, %43
  %45 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %0, i64 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %44, 0
  br label %48

48:                                               ; preds = %79, %24
  %49 = phi i32 [ %46, %24 ], [ %74, %79 ]
  %50 = phi i8* [ %20, %24 ], [ %73, %79 ]
  %51 = phi i32 [ %41, %24 ], [ %85, %79 ]
  %52 = phi i8* [ %35, %24 ], [ %92, %79 ]
  %53 = phi %"struct.SkAAClip::YOffset"* [ %26, %24 ], [ %77, %79 ]
  br label %54

54:                                               ; preds = %48, %70
  %55 = phi i8* [ %73, %70 ], [ %50, %48 ]
  %56 = phi i32 [ %74, %70 ], [ %49, %48 ]
  br i1 %47, label %57, label %70

57:                                               ; preds = %54, %57
  %58 = phi i8* [ %66, %57 ], [ %55, %54 ]
  %59 = phi i32 [ %68, %57 ], [ %44, %54 ]
  %60 = phi i8* [ %67, %57 ], [ %52, %54 ]
  %61 = load i8, i8* %60, align 1, !alias.scope !6, !noalias !9
  %62 = zext i8 %61 to i32
  %63 = getelementptr inbounds i8, i8* %60, i64 1
  %64 = load i8, i8* %63, align 1, !alias.scope !6, !noalias !9
  %65 = zext i8 %61 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %58, i8 %64, i64 %65, i1 false) #14, !alias.scope !9, !noalias !6
  %66 = getelementptr inbounds i8, i8* %58, i64 %65
  %67 = getelementptr inbounds i8, i8* %60, i64 2
  %68 = sub nsw i32 %59, %62
  %69 = icmp sgt i32 %68, 0
  br i1 %69, label %57, label %70

70:                                               ; preds = %57, %54
  %71 = load i32, i32* %18, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %55, i64 %72
  %74 = add nsw i32 %56, 1
  %75 = icmp slt i32 %74, %51
  br i1 %75, label %54, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %53, i64 1
  %78 = icmp ult %"struct.SkAAClip::YOffset"* %77, %30
  br i1 %78, label %79, label %93

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %77, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %53, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %81, %51
  %85 = sub i32 %84, %83
  %86 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %53, i64 1, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %53, i64 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = sub i32 %87, %89
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds i8, i8* %52, i64 %91
  br label %48

93:                                               ; preds = %76, %9, %7
  ret void
}

declare i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask*) local_unnamed_addr #3

declare i8* @_ZN6SkMask10AllocImageEmNS_9AllocTypeE(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitterD2Ev(%class.SkAAClipBlitter*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkAAClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %4 = load i8*, i8** %3, align 8
  tail call void @_Z7sk_freePv(i8* %4) #14
  %5 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 2, i64 0
  %8 = bitcast i32* %7 to i8*
  %9 = icmp eq i8* %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_Z7sk_freePv(i8* %6) #14
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %12) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitterD0Ev(%class.SkAAClipBlitter*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTV15SkAAClipBlitter, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %4 = load i8*, i8** %3, align 8
  tail call void @_Z7sk_freePv(i8* %4) #14
  %5 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 2, i64 0
  %8 = bitcast i32* %7 to i8*
  %9 = icmp eq i8* %6, %8
  br i1 %9, label %11, label %10

10:                                               ; preds = %1
  tail call void @_Z7sk_freePv(i8* %6) #14
  br label %11

11:                                               ; preds = %1, %10
  %12 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %12) #14
  %13 = bitcast %class.SkAAClipBlitter* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter15ensureRunsAndAAEv(%class.SkAAClipBlitter* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %5, label %21

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = add i32 %7, 1
  %11 = sub i32 %10, %9
  %12 = sext i32 %11 to i64
  %13 = shl nsw i64 %12, 2
  %14 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %13, i32 2) #14
  store i8* %14, i8** %2, align 8
  %15 = bitcast i8* %14 to i16*
  %16 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %17 = bitcast i16** %16 to i8**
  store i8* %14, i8** %17, align 8
  %18 = getelementptr inbounds i16, i16* %15, i64 %12
  %19 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %20 = bitcast i8** %19 to i16**
  store i16* %18, i16** %20, align 8
  br label %21

21:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter5blitHEiii(%class.SkAAClipBlitter* nocapture, i32, i32, i32) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 2
  %6 = load %class.SkAAClip*, %class.SkAAClip** %5, align 8
  %7 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %6, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = sub nsw i32 %2, %8
  %10 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %6, i64 0, i32 0, i32 3
  %11 = load i32, i32* %10, align 4
  %12 = sub i32 %11, %8
  %13 = icmp ult i32 %9, %12
  br i1 %13, label %14, label %35

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %6, i64 0, i32 1
  %16 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %15, align 8
  %17 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %16, i64 1
  %18 = bitcast %"struct.SkAAClip::RunHead"* %17 to %"struct.SkAAClip::YOffset"*
  br label %19

19:                                               ; preds = %19, %14
  %20 = phi %"struct.SkAAClip::YOffset"* [ %18, %14 ], [ %24, %19 ]
  %21 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %20, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, %9
  %24 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %20, i64 1
  br i1 %23, label %19, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %16, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %18, i64 %28
  %30 = bitcast %"struct.SkAAClip::YOffset"* %29 to i8*
  %31 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %20, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i8, i8* %30, i64 %33
  br label %35

35:                                               ; preds = %4, %25
  %36 = phi i8* [ %34, %25 ], [ null, %4 ]
  %37 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %6, i64 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = sub nsw i32 %1, %38
  %40 = load i8, i8* %36, align 1
  %41 = zext i8 %40 to i32
  %42 = icmp slt i32 %39, %41
  br i1 %42, label %54, label %43

43:                                               ; preds = %35, %43
  %44 = phi i32 [ %50, %43 ], [ %41, %35 ]
  %45 = phi i8* [ %47, %43 ], [ %36, %35 ]
  %46 = phi i32 [ %48, %43 ], [ %39, %35 ]
  %47 = getelementptr inbounds i8, i8* %45, i64 2
  %48 = sub nsw i32 %46, %44
  %49 = load i8, i8* %47, align 1
  %50 = zext i8 %49 to i32
  %51 = icmp slt i32 %48, %50
  br i1 %51, label %52, label %43

52:                                               ; preds = %43
  %53 = zext i8 %49 to i32
  br label %54

54:                                               ; preds = %52, %35
  %55 = phi i32 [ %39, %35 ], [ %48, %52 ]
  %56 = phi i8* [ %36, %35 ], [ %47, %52 ]
  %57 = phi i32 [ %41, %35 ], [ %53, %52 ]
  %58 = sub nsw i32 %57, %55
  %59 = icmp slt i32 %58, %3
  br i1 %59, label %70, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds i8, i8* %56, i64 1
  %62 = load i8, i8* %61, align 1
  switch i8 %62, label %70 [
    i8 0, label %139
    i8 -1, label %63
  ]

63:                                               ; preds = %60
  %64 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %65 = load %class.SkBlitter*, %class.SkBlitter** %64, align 8
  %66 = bitcast %class.SkBlitter* %65 to void (%class.SkBlitter*, i32, i32, i32)***
  %67 = load void (%class.SkBlitter*, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32)*** %66, align 8
  %68 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %67, i64 2
  %69 = load void (%class.SkBlitter*, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32)** %68, align 8
  tail call void %69(%class.SkBlitter* %65, i32 %1, i32 %2, i32 %3) #14
  br label %139

70:                                               ; preds = %60, %54
  %71 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %72 = load i8*, i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %79, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %76 = load i16*, i16** %75, align 8
  %77 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %78 = load i8*, i8** %77, align 8
  br label %96

79:                                               ; preds = %70
  %80 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = add i32 %81, 1
  %85 = sub i32 %84, %83
  %86 = sext i32 %85 to i64
  %87 = shl nsw i64 %86, 2
  %88 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %87, i32 2) #14
  store i8* %88, i8** %71, align 8
  %89 = bitcast i8* %88 to i16*
  %90 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %91 = bitcast i16** %90 to i8**
  store i8* %88, i8** %91, align 8
  %92 = getelementptr inbounds i16, i16* %89, i64 %86
  %93 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %94 = bitcast i8** %93 to i16**
  store i16* %92, i16** %94, align 8
  %95 = bitcast i16* %92 to i8*
  br label %96

96:                                               ; preds = %74, %79
  %97 = phi i8* [ %78, %74 ], [ %95, %79 ]
  %98 = phi i16* [ %76, %74 ], [ %89, %79 ]
  %99 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %100 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %101 = icmp sgt i32 %58, %3
  %102 = select i1 %101, i32 %3, i32 %58
  %103 = trunc i32 %102 to i16
  store i16 %103, i16* %98, align 2, !alias.scope !11, !noalias !14
  %104 = sext i32 %102 to i64
  %105 = getelementptr inbounds i16, i16* %98, i64 %104
  %106 = getelementptr inbounds i8, i8* %56, i64 1
  %107 = load i8, i8* %106, align 1, !alias.scope !17, !noalias !18
  store i8 %107, i8* %97, align 1, !alias.scope !19, !noalias !20
  %108 = sub nsw i32 %3, %102
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %129, label %110

110:                                              ; preds = %96, %110
  %111 = phi i32 [ %127, %110 ], [ %108, %96 ]
  %112 = phi i8* [ %116, %110 ], [ %56, %96 ]
  %113 = phi i16* [ %124, %110 ], [ %105, %96 ]
  %114 = phi i64 [ %123, %110 ], [ %104, %96 ]
  %115 = phi i8* [ %117, %110 ], [ %97, %96 ]
  %116 = getelementptr inbounds i8, i8* %112, i64 2
  %117 = getelementptr inbounds i8, i8* %115, i64 %114
  %118 = load i8, i8* %116, align 1, !alias.scope !17, !noalias !18
  %119 = zext i8 %118 to i32
  %120 = icmp slt i32 %111, %119
  %121 = select i1 %120, i32 %111, i32 %119
  %122 = trunc i32 %121 to i16
  store i16 %122, i16* %113, align 2, !alias.scope !11, !noalias !14
  %123 = sext i32 %121 to i64
  %124 = getelementptr inbounds i16, i16* %113, i64 %123
  %125 = getelementptr inbounds i8, i8* %112, i64 3
  %126 = load i8, i8* %125, align 1, !alias.scope !17, !noalias !18
  store i8 %126, i8* %117, align 1, !alias.scope !19, !noalias !20
  %127 = sub nsw i32 %111, %121
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %110

129:                                              ; preds = %110, %96
  %130 = phi i16* [ %105, %96 ], [ %124, %110 ]
  store i16 0, i16* %130, align 2, !alias.scope !11, !noalias !14
  %131 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %132 = load %class.SkBlitter*, %class.SkBlitter** %131, align 8
  %133 = load i8*, i8** %100, align 8
  %134 = load i16*, i16** %99, align 8
  %135 = bitcast %class.SkBlitter* %132 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %136 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %135, align 8
  %137 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %136, i64 3
  %138 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %137, align 8
  tail call void %138(%class.SkBlitter* %132, i32 %1, i32 %2, i8* %133, i16* %134) #14
  br label %139

139:                                              ; preds = %60, %63, %129
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter9blitAntiHEiiPKhPKs(%class.SkAAClipBlitter* nocapture, i32, i32, i8* nocapture readonly, i16* nocapture readonly) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 2
  %7 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  %8 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %7, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = sub nsw i32 %2, %9
  %11 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %7, i64 0, i32 0, i32 3
  %12 = load i32, i32* %11, align 4
  %13 = sub i32 %12, %9
  %14 = icmp ult i32 %10, %13
  br i1 %14, label %15, label %36

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %7, i64 0, i32 1
  %17 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %16, align 8
  %18 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %17, i64 1
  %19 = bitcast %"struct.SkAAClip::RunHead"* %18 to %"struct.SkAAClip::YOffset"*
  br label %20

20:                                               ; preds = %20, %15
  %21 = phi %"struct.SkAAClip::YOffset"* [ %19, %15 ], [ %25, %20 ]
  %22 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %21, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp slt i32 %23, %10
  %25 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %21, i64 1
  br i1 %24, label %20, label %26

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %17, i64 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %19, i64 %29
  %31 = bitcast %"struct.SkAAClip::YOffset"* %30 to i8*
  %32 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %21, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %31, i64 %34
  br label %36

36:                                               ; preds = %5, %26
  %37 = phi i8* [ %35, %26 ], [ null, %5 ]
  %38 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %7, i64 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = sub nsw i32 %1, %39
  %41 = load i8, i8* %37, align 1
  %42 = zext i8 %41 to i32
  %43 = icmp slt i32 %40, %42
  br i1 %43, label %55, label %44

44:                                               ; preds = %36, %44
  %45 = phi i32 [ %51, %44 ], [ %42, %36 ]
  %46 = phi i8* [ %48, %44 ], [ %37, %36 ]
  %47 = phi i32 [ %49, %44 ], [ %40, %36 ]
  %48 = getelementptr inbounds i8, i8* %46, i64 2
  %49 = sub nsw i32 %47, %45
  %50 = load i8, i8* %48, align 1
  %51 = zext i8 %50 to i32
  %52 = icmp slt i32 %49, %51
  br i1 %52, label %53, label %44

53:                                               ; preds = %44
  %54 = zext i8 %50 to i32
  br label %55

55:                                               ; preds = %53, %36
  %56 = phi i32 [ %40, %36 ], [ %49, %53 ]
  %57 = phi i8* [ %37, %36 ], [ %48, %53 ]
  %58 = phi i32 [ %42, %36 ], [ %54, %53 ]
  %59 = sub nsw i32 %58, %56
  %60 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %61 = load i8*, i8** %60, align 8
  %62 = icmp eq i8* %61, null
  br i1 %62, label %63, label %79

63:                                               ; preds = %55
  %64 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 2
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %65, 1
  %69 = sub i32 %68, %67
  %70 = sext i32 %69 to i64
  %71 = shl nsw i64 %70, 2
  %72 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %71, i32 2) #14
  store i8* %72, i8** %60, align 8
  %73 = bitcast i8* %72 to i16*
  %74 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %75 = bitcast i16** %74 to i8**
  store i8* %72, i8** %75, align 8
  %76 = getelementptr inbounds i16, i16* %73, i64 %70
  %77 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %78 = bitcast i8** %77 to i16**
  store i16* %76, i16** %78, align 8
  br label %79

79:                                               ; preds = %55, %63
  %80 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %81 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %82 = load i16, i16* %4, align 2, !alias.scope !21, !noalias !24
  %83 = icmp eq i16 %82, 0
  br i1 %83, label %143, label %84

84:                                               ; preds = %79
  %85 = load i16*, i16** %81, align 8
  %86 = load i8*, i8** %80, align 8
  %87 = sext i16 %82 to i32
  br label %88

88:                                               ; preds = %138, %84
  %89 = phi i16 [ %132, %138 ], [ %82, %84 ]
  %90 = phi i32 [ %141, %138 ], [ %59, %84 ]
  %91 = phi i32 [ %133, %138 ], [ %87, %84 ]
  %92 = phi i16* [ %134, %138 ], [ %4, %84 ]
  %93 = phi i8* [ %121, %138 ], [ %86, %84 ]
  %94 = phi i16* [ %119, %138 ], [ %85, %84 ]
  %95 = phi i8* [ %135, %138 ], [ %3, %84 ]
  %96 = phi i8* [ %139, %138 ], [ %57, %84 ]
  %97 = getelementptr inbounds i8, i8* %96, i64 1
  %98 = load i8, i8* %97, align 1, !alias.scope !29, !noalias !30
  %99 = zext i8 %98 to i32
  br label %100

100:                                              ; preds = %88, %131
  %101 = phi i16 [ %132, %131 ], [ %89, %88 ]
  %102 = phi i32 [ %136, %131 ], [ %90, %88 ]
  %103 = phi i32 [ %133, %131 ], [ %91, %88 ]
  %104 = phi i16* [ %134, %131 ], [ %92, %88 ]
  %105 = phi i8* [ %121, %131 ], [ %93, %88 ]
  %106 = phi i16* [ %119, %131 ], [ %94, %88 ]
  %107 = phi i8* [ %135, %131 ], [ %95, %88 ]
  %108 = load i8, i8* %107, align 1, !alias.scope !31, !noalias !32
  %109 = zext i8 %108 to i32
  %110 = mul nuw nsw i32 %99, %109
  %111 = add nuw nsw i32 %110, 128
  %112 = lshr i32 %111, 8
  %113 = add nuw nsw i32 %112, %111
  %114 = lshr i32 %113, 8
  %115 = icmp slt i32 %102, %103
  %116 = select i1 %115, i32 %102, i32 %103
  %117 = trunc i32 %116 to i16
  store i16 %117, i16* %106, align 2, !alias.scope !33, !noalias !34
  %118 = sext i32 %116 to i64
  %119 = getelementptr inbounds i16, i16* %106, i64 %118
  %120 = trunc i32 %114 to i8
  store i8 %120, i8* %105, align 1, !alias.scope !35, !noalias !36
  %121 = getelementptr inbounds i8, i8* %105, i64 %118
  %122 = sub nsw i32 %103, %116
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %131

124:                                              ; preds = %100
  %125 = sext i16 %101 to i64
  %126 = getelementptr inbounds i16, i16* %104, i64 %125
  %127 = getelementptr inbounds i8, i8* %107, i64 %125
  %128 = load i16, i16* %126, align 2, !alias.scope !21, !noalias !24
  %129 = sext i16 %128 to i32
  %130 = icmp eq i16 %128, 0
  br i1 %130, label %142, label %131

131:                                              ; preds = %124, %100
  %132 = phi i16 [ %128, %124 ], [ %101, %100 ]
  %133 = phi i32 [ %129, %124 ], [ %122, %100 ]
  %134 = phi i16* [ %126, %124 ], [ %104, %100 ]
  %135 = phi i8* [ %127, %124 ], [ %107, %100 ]
  %136 = sub nsw i32 %102, %116
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %100

138:                                              ; preds = %131
  %139 = getelementptr inbounds i8, i8* %96, i64 2
  %140 = load i8, i8* %139, align 1, !alias.scope !29, !noalias !30
  %141 = zext i8 %140 to i32
  br label %88

142:                                              ; preds = %124
  store i16 0, i16* %119, align 2, !alias.scope !33, !noalias !34
  br label %143

143:                                              ; preds = %79, %142
  %144 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %145 = load %class.SkBlitter*, %class.SkBlitter** %144, align 8
  %146 = load i8*, i8** %80, align 8
  %147 = load i16*, i16** %81, align 8
  %148 = bitcast %class.SkBlitter* %145 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %149 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %148, align 8
  %150 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %149, i64 3
  %151 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %150, align 8
  tail call void %151(%class.SkBlitter* %145, i32 %1, i32 %2, i8* %146, i16* %147) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter5blitVEiiih(%class.SkAAClipBlitter* nocapture readonly, i32, i32, i32, i8 zeroext) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 2
  %7 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  %8 = add nsw i32 %1, 1
  %9 = add nsw i32 %3, %2
  %10 = tail call zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* %7, i32 %1, i32 %2, i32 %8, i32 %9)
  br i1 %10, label %14, label %11

11:                                               ; preds = %5
  %12 = zext i8 %4 to i32
  %13 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  br label %21

14:                                               ; preds = %5
  %15 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %16 = load %class.SkBlitter*, %class.SkBlitter** %15, align 8
  %17 = bitcast %class.SkBlitter* %16 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %18 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %17, align 8
  %19 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %18, i64 4
  %20 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %19, align 8
  tail call void %20(%class.SkBlitter* %16, i32 %1, i32 %2, i32 %3, i8 zeroext %4) #14
  br label %100

21:                                               ; preds = %97, %11
  %22 = phi %class.SkAAClip* [ %99, %97 ], [ %7, %11 ]
  %23 = phi i32 [ %61, %97 ], [ %3, %11 ]
  %24 = phi i32 [ %98, %97 ], [ %2, %11 ]
  %25 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %22, i64 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub nsw i32 %24, %26
  %28 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %22, i64 0, i32 0, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = sub i32 %29, %26
  %31 = icmp ult i32 %27, %30
  br i1 %31, label %32, label %54

32:                                               ; preds = %21
  %33 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %22, i64 0, i32 1
  %34 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %33, align 8
  %35 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %34, i64 1
  %36 = bitcast %"struct.SkAAClip::RunHead"* %35 to %"struct.SkAAClip::YOffset"*
  br label %37

37:                                               ; preds = %37, %32
  %38 = phi %"struct.SkAAClip::YOffset"* [ %36, %32 ], [ %42, %37 ]
  %39 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, %27
  %42 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %38, i64 1
  br i1 %41, label %37, label %43

43:                                               ; preds = %37
  %44 = add nsw i32 %40, %26
  %45 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %34, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %36, i64 %47
  %49 = bitcast %"struct.SkAAClip::YOffset"* %48 to i8*
  %50 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %38, i64 0, i32 1
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds i8, i8* %49, i64 %52
  br label %54

54:                                               ; preds = %21, %43
  %55 = phi i32 [ %44, %43 ], [ 0, %21 ]
  %56 = phi i8* [ %53, %43 ], [ null, %21 ]
  %57 = sub nsw i32 %55, %24
  %58 = add nsw i32 %57, 1
  %59 = icmp slt i32 %57, %23
  %60 = select i1 %59, i32 %58, i32 %23
  %61 = sub nsw i32 %23, %60
  %62 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %22, i64 0, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  %64 = sub nsw i32 %1, %63
  %65 = load i8, i8* %56, align 1
  %66 = zext i8 %65 to i32
  %67 = icmp slt i32 %64, %66
  br i1 %67, label %77, label %68

68:                                               ; preds = %54, %68
  %69 = phi i32 [ %75, %68 ], [ %66, %54 ]
  %70 = phi i8* [ %72, %68 ], [ %56, %54 ]
  %71 = phi i32 [ %73, %68 ], [ %64, %54 ]
  %72 = getelementptr inbounds i8, i8* %70, i64 2
  %73 = sub nsw i32 %71, %69
  %74 = load i8, i8* %72, align 1
  %75 = zext i8 %74 to i32
  %76 = icmp slt i32 %73, %75
  br i1 %76, label %77, label %68

77:                                               ; preds = %68, %54
  %78 = phi i8* [ %56, %54 ], [ %72, %68 ]
  %79 = getelementptr inbounds i8, i8* %78, i64 1
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = mul nuw nsw i32 %81, %12
  %83 = add nuw nsw i32 %82, 128
  %84 = lshr i32 %83, 8
  %85 = add nuw nsw i32 %84, %83
  %86 = lshr i32 %85, 8
  %87 = trunc i32 %86 to i8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %95, label %89

89:                                               ; preds = %77
  %90 = load %class.SkBlitter*, %class.SkBlitter** %13, align 8
  %91 = bitcast %class.SkBlitter* %90 to void (%class.SkBlitter*, i32, i32, i32, i8)***
  %92 = load void (%class.SkBlitter*, i32, i32, i32, i8)**, void (%class.SkBlitter*, i32, i32, i32, i8)*** %91, align 8
  %93 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %92, i64 4
  %94 = load void (%class.SkBlitter*, i32, i32, i32, i8)*, void (%class.SkBlitter*, i32, i32, i32, i8)** %93, align 8
  tail call void %94(%class.SkBlitter* %90, i32 %1, i32 %24, i32 %60, i8 zeroext %87) #14
  br label %95

95:                                               ; preds = %77, %89
  %96 = icmp slt i32 %61, 1
  br i1 %96, label %100, label %97

97:                                               ; preds = %95
  %98 = add nsw i32 %55, 1
  %99 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  br label %21

100:                                              ; preds = %95, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter8blitRectEiiii(%class.SkAAClipBlitter*, i32, i32, i32, i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 2
  %7 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  %8 = add nsw i32 %3, %1
  %9 = add nsw i32 %4, %2
  %10 = tail call zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* %7, i32 %1, i32 %2, i32 %8, i32 %9)
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = icmp sgt i32 %4, 0
  br i1 %12, label %13, label %31

13:                                               ; preds = %11
  %14 = bitcast %class.SkAAClipBlitter* %0 to void (%class.SkAAClipBlitter*, i32, i32, i32)***
  br label %22

15:                                               ; preds = %5
  %16 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %17 = load %class.SkBlitter*, %class.SkBlitter** %16, align 8
  %18 = bitcast %class.SkBlitter* %17 to void (%class.SkBlitter*, i32, i32, i32, i32)***
  %19 = load void (%class.SkBlitter*, i32, i32, i32, i32)**, void (%class.SkBlitter*, i32, i32, i32, i32)*** %18, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %19, i64 5
  %21 = load void (%class.SkBlitter*, i32, i32, i32, i32)*, void (%class.SkBlitter*, i32, i32, i32, i32)** %20, align 8
  tail call void %21(%class.SkBlitter* %17, i32 %1, i32 %2, i32 %3, i32 %4) #14
  br label %31

22:                                               ; preds = %13, %22
  %23 = phi i32 [ %4, %13 ], [ %25, %22 ]
  %24 = phi i32 [ %2, %13 ], [ %29, %22 ]
  %25 = add nsw i32 %23, -1
  %26 = load void (%class.SkAAClipBlitter*, i32, i32, i32)**, void (%class.SkAAClipBlitter*, i32, i32, i32)*** %14, align 8
  %27 = getelementptr inbounds void (%class.SkAAClipBlitter*, i32, i32, i32)*, void (%class.SkAAClipBlitter*, i32, i32, i32)** %26, i64 2
  %28 = load void (%class.SkAAClipBlitter*, i32, i32, i32)*, void (%class.SkAAClipBlitter*, i32, i32, i32)** %27, align 8
  tail call void %28(%class.SkAAClipBlitter* %0, i32 %1, i32 %24, i32 %3) #14
  %29 = add nsw i32 %24, 1
  %30 = icmp sgt i32 %25, 0
  br i1 %30, label %22, label %31

31:                                               ; preds = %22, %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15SkAAClipBlitter8blitMaskERK6SkMaskRK7SkIRect(%class.SkAAClipBlitter*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2 align 2 {
  %4 = alloca %struct.SkMask, align 8
  %5 = alloca %struct.SkMask, align 8
  %6 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 2
  %7 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  %8 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = tail call zeroext i1 @_ZNK8SkAAClip13quickContainsEiiii(%class.SkAAClip* %7, i32 %9, i32 %11, i32 %13, i32 %15) #14
  br i1 %16, label %17, label %24

17:                                               ; preds = %3
  %18 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  %19 = load %class.SkBlitter*, %class.SkBlitter** %18, align 8
  %20 = bitcast %class.SkBlitter* %19 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %21 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %21, i64 7
  %23 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %22, align 8
  tail call void %23(%class.SkBlitter* %19, %struct.SkMask* dereferenceable(32) %1, %struct.SkIRect* dereferenceable(16) %2) #14
  br label %379

24:                                               ; preds = %3
  %25 = bitcast %struct.SkMask* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #14
  %26 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 0
  %27 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 2
  %28 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1
  %29 = bitcast %struct.SkIRect* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false)
  store i8* null, i8** %26, align 8
  %30 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 3
  %31 = load i8, i8* %30, align 4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %243

33:                                               ; preds = %24
  %34 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 3
  %35 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %4, i64 0, i32 1
  store i8 1, i8* %34, align 4
  %36 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1
  %37 = bitcast %struct.SkIRect* %35 to i8*
  %38 = bitcast %struct.SkIRect* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 4 %38, i64 16, i1 false)
  %39 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 2
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %36, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sub i32 %40, %42
  store i32 %43, i32* %27, align 8
  %44 = call i64 @_ZNK6SkMask16computeImageSizeEv(%struct.SkMask* nonnull %4) #14
  %45 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6
  %46 = icmp ugt i64 %44, 1024
  %47 = select i1 %46, i64 %44, i64 1024
  %48 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %47, %49
  br i1 %50, label %51, label %54

51:                                               ; preds = %33
  %52 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %45, i64 0, i32 0
  %53 = load i8*, i8** %52, align 8
  br label %69

54:                                               ; preds = %33
  %55 = icmp ugt i64 %47, %49
  %56 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %45, i64 0, i32 0
  %57 = load i8*, i8** %56, align 8
  br i1 %55, label %58, label %69

58:                                               ; preds = %54
  %59 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 6, i32 2, i64 0
  %60 = bitcast i32* %59 to i8*
  %61 = icmp eq i8* %57, %60
  br i1 %61, label %63, label %62

62:                                               ; preds = %58
  call void @_Z7sk_freePv(i8* %57) #14
  br label %63

63:                                               ; preds = %62, %58
  %64 = icmp ult i64 %44, 1025
  br i1 %64, label %67, label %65

65:                                               ; preds = %63
  %66 = call i8* @_Z15sk_malloc_flagsmj(i64 %47, i32 2) #14
  br label %67

67:                                               ; preds = %65, %63
  %68 = phi i8* [ %66, %65 ], [ %60, %63 ]
  store i8* %68, i8** %56, align 8
  store i64 %47, i64* %48, align 8
  br label %69

69:                                               ; preds = %51, %54, %67
  %70 = phi i8* [ %68, %67 ], [ %57, %54 ], [ %53, %51 ]
  store i8* %70, i8** %26, align 8
  %71 = load i32, i32* %39, align 4
  %72 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = sub i32 %71, %73
  %75 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 3
  %76 = load i32, i32* %75, align 4
  %77 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 1, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = sub i32 %76, %78
  %80 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 2
  %81 = load i32, i32* %80, align 8
  %82 = zext i32 %81 to i64
  %83 = load i32, i32* %27, align 8
  %84 = zext i32 %83 to i64
  %85 = and i32 %74, 7
  %86 = icmp sgt i32 %79, 0
  br i1 %86, label %87, label %243

87:                                               ; preds = %69
  %88 = ashr i32 %74, 3
  %89 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %1, i64 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = icmp sgt i32 %74, 7
  %92 = icmp eq i32 %85, 0
  %93 = sext i32 %88 to i64
  %94 = icmp sgt i64 %93, 1
  %95 = select i1 %94, i64 %93, i64 1
  %96 = icmp sgt i64 %93, 1
  %97 = select i1 %96, i64 %93, i64 1
  %98 = shl nuw nsw i64 %97, 3
  %99 = icmp ult i64 %95, 16
  %100 = and i64 %95, 9223372036854775792
  %101 = shl i64 %100, 3
  %102 = icmp eq i64 %95, %100
  %103 = icmp eq i32 %85, 1
  %104 = icmp eq i32 %85, 2
  %105 = icmp eq i32 %85, 3
  %106 = icmp eq i32 %85, 4
  %107 = icmp eq i32 %85, 5
  %108 = icmp eq i32 %85, 6
  br label %109

109:                                              ; preds = %237, %87
  %110 = phi i64 [ %242, %237 ], [ 0, %87 ]
  %111 = phi i32 [ %240, %237 ], [ 0, %87 ]
  %112 = phi i8* [ %239, %237 ], [ %70, %87 ]
  %113 = phi i8* [ %238, %237 ], [ %90, %87 ]
  %114 = mul i64 %110, %84
  %115 = getelementptr i8, i8* %70, i64 %114
  %116 = add i64 %98, %114
  %117 = getelementptr i8, i8* %70, i64 %116
  %118 = mul i64 %110, %82
  %119 = getelementptr i8, i8* %90, i64 %118
  %120 = add i64 %97, %118
  %121 = getelementptr i8, i8* %90, i64 %120
  br i1 %91, label %122, label %181

122:                                              ; preds = %109
  br i1 %99, label %123, label %126

123:                                              ; preds = %180, %126, %122
  %124 = phi i64 [ 0, %126 ], [ 0, %122 ], [ %100, %180 ]
  %125 = phi i8* [ %112, %126 ], [ %112, %122 ], [ %131, %180 ]
  br label %183

126:                                              ; preds = %122
  %127 = icmp ult i8* %115, %121
  %128 = icmp ult i8* %119, %117
  %129 = and i1 %127, %128
  br i1 %129, label %123, label %130

130:                                              ; preds = %126
  %131 = getelementptr i8, i8* %112, i64 %101
  br label %132

132:                                              ; preds = %132, %130
  %133 = phi i64 [ 0, %130 ], [ %178, %132 ]
  %134 = shl i64 %133, 3
  %135 = getelementptr inbounds i8, i8* %113, i64 %133
  %136 = bitcast i8* %135 to <16 x i8>*
  %137 = load <16 x i8>, <16 x i8>* %136, align 1, !alias.scope !37
  %138 = zext <16 x i8> %137 to <16 x i32>
  %139 = and <16 x i32> %138, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %140 = sub nsw <16 x i32> zeroinitializer, %139
  %141 = ashr <16 x i32> %140, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %142 = trunc <16 x i32> %141 to <16 x i8>
  %143 = and <16 x i32> %138, <i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64, i32 64>
  %144 = sub nsw <16 x i32> zeroinitializer, %143
  %145 = ashr <16 x i32> %144, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %146 = trunc <16 x i32> %145 to <16 x i8>
  %147 = and <16 x i32> %138, <i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32, i32 32>
  %148 = sub nsw <16 x i32> zeroinitializer, %147
  %149 = ashr <16 x i32> %148, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %150 = trunc <16 x i32> %149 to <16 x i8>
  %151 = and <16 x i32> %138, <i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16>
  %152 = sub nsw <16 x i32> zeroinitializer, %151
  %153 = ashr <16 x i32> %152, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %154 = trunc <16 x i32> %153 to <16 x i8>
  %155 = and <16 x i32> %138, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %156 = sub nsw <16 x i32> zeroinitializer, %155
  %157 = ashr <16 x i32> %156, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %158 = trunc <16 x i32> %157 to <16 x i8>
  %159 = and <16 x i32> %138, <i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4>
  %160 = sub nsw <16 x i32> zeroinitializer, %159
  %161 = ashr <16 x i32> %160, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %162 = trunc <16 x i32> %161 to <16 x i8>
  %163 = and <16 x i32> %138, <i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2, i32 2>
  %164 = sub nsw <16 x i32> zeroinitializer, %163
  %165 = ashr <16 x i32> %164, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %166 = trunc <16 x i32> %165 to <16 x i8>
  %167 = and <16 x i8> %137, <i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1, i8 1>
  %168 = sub nsw <16 x i8> zeroinitializer, %167
  %169 = getelementptr inbounds i8, i8* %112, i64 %134
  %170 = bitcast i8* %169 to <128 x i8>*
  %171 = shufflevector <16 x i8> %142, <16 x i8> %146, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %172 = shufflevector <16 x i8> %150, <16 x i8> %154, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %173 = shufflevector <16 x i8> %158, <16 x i8> %162, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %174 = shufflevector <16 x i8> %166, <16 x i8> %168, <32 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31>
  %175 = shufflevector <32 x i8> %171, <32 x i8> %172, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %176 = shufflevector <32 x i8> %173, <32 x i8> %174, <64 x i32> <i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9, i32 10, i32 11, i32 12, i32 13, i32 14, i32 15, i32 16, i32 17, i32 18, i32 19, i32 20, i32 21, i32 22, i32 23, i32 24, i32 25, i32 26, i32 27, i32 28, i32 29, i32 30, i32 31, i32 32, i32 33, i32 34, i32 35, i32 36, i32 37, i32 38, i32 39, i32 40, i32 41, i32 42, i32 43, i32 44, i32 45, i32 46, i32 47, i32 48, i32 49, i32 50, i32 51, i32 52, i32 53, i32 54, i32 55, i32 56, i32 57, i32 58, i32 59, i32 60, i32 61, i32 62, i32 63>
  %177 = shufflevector <64 x i8> %175, <64 x i8> %176, <128 x i32> <i32 0, i32 16, i32 32, i32 48, i32 64, i32 80, i32 96, i32 112, i32 1, i32 17, i32 33, i32 49, i32 65, i32 81, i32 97, i32 113, i32 2, i32 18, i32 34, i32 50, i32 66, i32 82, i32 98, i32 114, i32 3, i32 19, i32 35, i32 51, i32 67, i32 83, i32 99, i32 115, i32 4, i32 20, i32 36, i32 52, i32 68, i32 84, i32 100, i32 116, i32 5, i32 21, i32 37, i32 53, i32 69, i32 85, i32 101, i32 117, i32 6, i32 22, i32 38, i32 54, i32 70, i32 86, i32 102, i32 118, i32 7, i32 23, i32 39, i32 55, i32 71, i32 87, i32 103, i32 119, i32 8, i32 24, i32 40, i32 56, i32 72, i32 88, i32 104, i32 120, i32 9, i32 25, i32 41, i32 57, i32 73, i32 89, i32 105, i32 121, i32 10, i32 26, i32 42, i32 58, i32 74, i32 90, i32 106, i32 122, i32 11, i32 27, i32 43, i32 59, i32 75, i32 91, i32 107, i32 123, i32 12, i32 28, i32 44, i32 60, i32 76, i32 92, i32 108, i32 124, i32 13, i32 29, i32 45, i32 61, i32 77, i32 93, i32 109, i32 125, i32 14, i32 30, i32 46, i32 62, i32 78, i32 94, i32 110, i32 126, i32 15, i32 31, i32 47, i32 63, i32 79, i32 95, i32 111, i32 127>
  store <128 x i8> %177, <128 x i8>* %170, align 1
  %178 = add i64 %133, 16
  %179 = icmp eq i64 %178, %100
  br i1 %179, label %180, label %132, !llvm.loop !40

180:                                              ; preds = %132
  br i1 %102, label %181, label %123

181:                                              ; preds = %183, %180, %109
  %182 = phi i8* [ %112, %109 ], [ %131, %180 ], [ %226, %183 ]
  br i1 %92, label %237, label %229

183:                                              ; preds = %123, %183
  %184 = phi i64 [ %227, %183 ], [ %124, %123 ]
  %185 = phi i8* [ %226, %183 ], [ %125, %123 ]
  %186 = getelementptr inbounds i8, i8* %113, i64 %184
  %187 = load i8, i8* %186, align 1
  %188 = zext i8 %187 to i32
  %189 = and i32 %188, 128
  %190 = sub nsw i32 0, %189
  %191 = ashr i32 %190, 8
  %192 = trunc i32 %191 to i8
  store i8 %192, i8* %185, align 1
  %193 = and i32 %188, 64
  %194 = sub nsw i32 0, %193
  %195 = ashr i32 %194, 8
  %196 = trunc i32 %195 to i8
  %197 = getelementptr inbounds i8, i8* %185, i64 1
  store i8 %196, i8* %197, align 1
  %198 = and i32 %188, 32
  %199 = sub nsw i32 0, %198
  %200 = ashr i32 %199, 8
  %201 = trunc i32 %200 to i8
  %202 = getelementptr inbounds i8, i8* %185, i64 2
  store i8 %201, i8* %202, align 1
  %203 = and i32 %188, 16
  %204 = sub nsw i32 0, %203
  %205 = ashr i32 %204, 8
  %206 = trunc i32 %205 to i8
  %207 = getelementptr inbounds i8, i8* %185, i64 3
  store i8 %206, i8* %207, align 1
  %208 = and i32 %188, 8
  %209 = sub nsw i32 0, %208
  %210 = ashr i32 %209, 8
  %211 = trunc i32 %210 to i8
  %212 = getelementptr inbounds i8, i8* %185, i64 4
  store i8 %211, i8* %212, align 1
  %213 = and i32 %188, 4
  %214 = sub nsw i32 0, %213
  %215 = ashr i32 %214, 8
  %216 = trunc i32 %215 to i8
  %217 = getelementptr inbounds i8, i8* %185, i64 5
  store i8 %216, i8* %217, align 1
  %218 = and i32 %188, 2
  %219 = sub nsw i32 0, %218
  %220 = ashr i32 %219, 8
  %221 = trunc i32 %220 to i8
  %222 = getelementptr inbounds i8, i8* %185, i64 6
  store i8 %221, i8* %222, align 1
  %223 = and i8 %187, 1
  %224 = sub nsw i8 0, %223
  %225 = getelementptr inbounds i8, i8* %185, i64 7
  store i8 %224, i8* %225, align 1
  %226 = getelementptr inbounds i8, i8* %185, i64 8
  %227 = add nuw nsw i64 %184, 1
  %228 = icmp slt i64 %227, %93
  br i1 %228, label %183, label %181, !llvm.loop !42

229:                                              ; preds = %181
  %230 = getelementptr inbounds i8, i8* %113, i64 %93
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i32
  %233 = and i32 %232, 128
  %234 = sub nsw i32 0, %233
  %235 = ashr i32 %234, 8
  %236 = trunc i32 %235 to i8
  store i8 %236, i8* %182, align 1
  br i1 %103, label %237, label %380

237:                                              ; preds = %229, %380, %387, %394, %401, %408, %415, %181
  %238 = getelementptr inbounds i8, i8* %113, i64 %82
  %239 = getelementptr inbounds i8, i8* %112, i64 %84
  %240 = add nuw nsw i32 %111, 1
  %241 = icmp eq i32 %240, %79
  %242 = add i64 %110, 1
  br i1 %241, label %243, label %109

243:                                              ; preds = %237, %69, %24
  %244 = phi %struct.SkMask* [ %1, %24 ], [ %4, %69 ], [ %4, %237 ]
  %245 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 7
  %246 = load i8*, i8** %245, align 8
  %247 = icmp eq i8* %246, null
  br i1 %247, label %248, label %264

248:                                              ; preds = %243
  %249 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 3, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = add i32 %250, 1
  %254 = sub i32 %253, %252
  %255 = sext i32 %254 to i64
  %256 = shl nsw i64 %255, 2
  %257 = call i8* @_Z15sk_malloc_flagsmj(i64 %256, i32 2) #14
  store i8* %257, i8** %245, align 8
  %258 = bitcast i8* %257 to i16*
  %259 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 4
  %260 = bitcast i16** %259 to i8**
  store i8* %257, i8** %260, align 8
  %261 = getelementptr inbounds i16, i16* %258, i64 %255
  %262 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 5
  %263 = bitcast i8** %262 to i16**
  store i16* %261, i16** %263, align 8
  br label %264

264:                                              ; preds = %243, %248
  %265 = load i32, i32* %8, align 4
  %266 = load i32, i32* %10, align 4
  %267 = call i8* @_ZNK6SkMask7getAddrEii(%struct.SkMask* %244, i32 %265, i32 %266) #14
  %268 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %244, i64 0, i32 2
  %269 = load i32, i32* %268, align 8
  %270 = zext i32 %269 to i64
  %271 = load i32, i32* %12, align 4
  %272 = load i32, i32* %8, align 4
  %273 = sub i32 %271, %272
  %274 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %244, i64 0, i32 3
  %275 = load i8, i8* %274, align 4
  %276 = add i8 %275, -1
  %277 = icmp ult i8 %276, 4
  br i1 %277, label %278, label %282

278:                                              ; preds = %264
  %279 = sext i8 %276 to i64
  %280 = getelementptr inbounds [4 x void (i8*, i32, i8*, i32, i8*)*], [4 x void (i8*, i32, i8*, i32, i8*)*]* @switch.table._ZN15SkAAClipBlitter8blitMaskERK6SkMaskRK7SkIRect, i64 0, i64 %279
  %281 = load void (i8*, i32, i8*, i32, i8*)*, void (i8*, i32, i8*, i32, i8*)** %280, align 8
  br label %282

282:                                              ; preds = %278, %264
  %283 = phi void (i8*, i32, i8*, i32, i8*)* [ null, %264 ], [ %281, %278 ]
  %284 = bitcast %struct.SkMask* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %284) #14
  %285 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 0
  %286 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1
  %287 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %286, i64 0, i32 0
  %288 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 1
  %289 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 2
  %290 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 1, i32 3
  %291 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 2
  %292 = getelementptr inbounds %struct.SkMask, %struct.SkMask* %5, i64 0, i32 3
  %293 = bitcast %struct.SkMask* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %293, i8 -86, i64 32, i1 false)
  %294 = icmp eq i8 %275, 2
  %295 = select i1 %294, i8 1, i8 %275
  store i8 %295, i8* %292, align 4
  store i32 %272, i32* %287, align 8
  store i32 %271, i32* %289, align 8
  store i32 %269, i32* %291, align 8
  %296 = bitcast i8** %245 to i64*
  %297 = load i64, i64* %296, align 8
  %298 = bitcast %struct.SkMask* %5 to i64*
  store i64 %297, i64* %298, align 8
  %299 = load i32, i32* %10, align 4
  %300 = load i32, i32* %14, align 4
  %301 = getelementptr inbounds %class.SkAAClipBlitter, %class.SkAAClipBlitter* %0, i64 0, i32 1
  br label %302

302:                                              ; preds = %376, %282
  %303 = phi i8* [ %267, %282 ], [ %374, %376 ]
  %304 = phi i32 [ %299, %282 ], [ %368, %376 ]
  %305 = load %class.SkAAClip*, %class.SkAAClip** %6, align 8
  %306 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %305, i64 0, i32 0, i32 1
  %307 = load i32, i32* %306, align 4
  %308 = sub nsw i32 %304, %307
  %309 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %305, i64 0, i32 0, i32 3
  %310 = load i32, i32* %309, align 4
  %311 = sub i32 %310, %307
  %312 = icmp ult i32 %308, %311
  br i1 %312, label %313, label %335

313:                                              ; preds = %302
  %314 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %305, i64 0, i32 1
  %315 = load %"struct.SkAAClip::RunHead"*, %"struct.SkAAClip::RunHead"** %314, align 8
  %316 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %315, i64 1
  %317 = bitcast %"struct.SkAAClip::RunHead"* %316 to %"struct.SkAAClip::YOffset"*
  br label %318

318:                                              ; preds = %318, %313
  %319 = phi %"struct.SkAAClip::YOffset"* [ %317, %313 ], [ %323, %318 ]
  %320 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %319, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  %322 = icmp slt i32 %321, %308
  %323 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %319, i64 1
  br i1 %322, label %318, label %324

324:                                              ; preds = %318
  %325 = add nsw i32 %321, %307
  %326 = getelementptr inbounds %"struct.SkAAClip::RunHead", %"struct.SkAAClip::RunHead"* %315, i64 0, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %317, i64 %328
  %330 = bitcast %"struct.SkAAClip::YOffset"* %329 to i8*
  %331 = getelementptr inbounds %"struct.SkAAClip::YOffset", %"struct.SkAAClip::YOffset"* %319, i64 0, i32 1
  %332 = load i32, i32* %331, align 4
  %333 = zext i32 %332 to i64
  %334 = getelementptr inbounds i8, i8* %330, i64 %333
  br label %335

335:                                              ; preds = %302, %324
  %336 = phi i32 [ %325, %324 ], [ 0, %302 ]
  %337 = phi i8* [ %334, %324 ], [ null, %302 ]
  %338 = add nsw i32 %336, 1
  %339 = icmp slt i32 %300, %338
  %340 = select i1 %339, i32 %300, i32 %338
  %341 = load i32, i32* %8, align 4
  %342 = getelementptr inbounds %class.SkAAClip, %class.SkAAClip* %305, i64 0, i32 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = sub nsw i32 %341, %343
  %345 = load i8, i8* %337, align 1
  %346 = zext i8 %345 to i32
  %347 = icmp slt i32 %344, %346
  br i1 %347, label %359, label %348

348:                                              ; preds = %335, %348
  %349 = phi i32 [ %355, %348 ], [ %346, %335 ]
  %350 = phi i8* [ %352, %348 ], [ %337, %335 ]
  %351 = phi i32 [ %353, %348 ], [ %344, %335 ]
  %352 = getelementptr inbounds i8, i8* %350, i64 2
  %353 = sub nsw i32 %351, %349
  %354 = load i8, i8* %352, align 1
  %355 = zext i8 %354 to i32
  %356 = icmp slt i32 %353, %355
  br i1 %356, label %357, label %348

357:                                              ; preds = %348
  %358 = zext i8 %354 to i32
  br label %359

359:                                              ; preds = %357, %335
  %360 = phi i32 [ %344, %335 ], [ %353, %357 ]
  %361 = phi i8* [ %337, %335 ], [ %352, %357 ]
  %362 = phi i32 [ %346, %335 ], [ %358, %357 ]
  %363 = sub nsw i32 %362, %360
  br label %364

364:                                              ; preds = %364, %359
  %365 = phi i8* [ %303, %359 ], [ %374, %364 ]
  %366 = phi i32 [ %304, %359 ], [ %368, %364 ]
  %367 = load i8*, i8** %285, align 8
  call void %283(i8* %365, i32 %273, i8* %361, i32 %363, i8* %367) #14, !callees !43
  store i32 %366, i32* %288, align 4
  %368 = add nsw i32 %366, 1
  store i32 %368, i32* %290, align 4
  %369 = load %class.SkBlitter*, %class.SkBlitter** %301, align 8
  %370 = bitcast %class.SkBlitter* %369 to void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)***
  %371 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)**, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*** %370, align 8
  %372 = getelementptr inbounds void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %371, i64 7
  %373 = load void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)*, void (%class.SkBlitter*, %struct.SkMask*, %struct.SkIRect*)** %372, align 8
  call void %373(%class.SkBlitter* %369, %struct.SkMask* nonnull dereferenceable(32) %5, %struct.SkIRect* dereferenceable(16) %286) #14
  %374 = getelementptr inbounds i8, i8* %365, i64 %270
  %375 = icmp slt i32 %368, %340
  br i1 %375, label %364, label %376

376:                                              ; preds = %364
  %377 = icmp slt i32 %368, %300
  br i1 %377, label %302, label %378

378:                                              ; preds = %376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %284) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #14
  br label %379

379:                                              ; preds = %378, %17
  ret void

380:                                              ; preds = %229
  %381 = getelementptr inbounds i8, i8* %182, i64 1
  %382 = shl nuw nsw i32 %232, 1
  %383 = and i32 %382, 128
  %384 = sub nsw i32 0, %383
  %385 = ashr i32 %384, 8
  %386 = trunc i32 %385 to i8
  store i8 %386, i8* %381, align 1
  br i1 %104, label %237, label %387

387:                                              ; preds = %380
  %388 = getelementptr inbounds i8, i8* %182, i64 2
  %389 = shl nuw nsw i32 %232, 2
  %390 = and i32 %389, 128
  %391 = sub nsw i32 0, %390
  %392 = ashr i32 %391, 8
  %393 = trunc i32 %392 to i8
  store i8 %393, i8* %388, align 1
  br i1 %105, label %237, label %394

394:                                              ; preds = %387
  %395 = getelementptr inbounds i8, i8* %182, i64 3
  %396 = shl nuw nsw i32 %232, 3
  %397 = and i32 %396, 128
  %398 = sub nsw i32 0, %397
  %399 = ashr i32 %398, 8
  %400 = trunc i32 %399 to i8
  store i8 %400, i8* %395, align 1
  br i1 %106, label %237, label %401

401:                                              ; preds = %394
  %402 = getelementptr inbounds i8, i8* %182, i64 4
  %403 = shl nuw nsw i32 %232, 4
  %404 = and i32 %403, 128
  %405 = sub nsw i32 0, %404
  %406 = ashr i32 %405, 8
  %407 = trunc i32 %406 to i8
  store i8 %407, i8* %402, align 1
  br i1 %107, label %237, label %408

408:                                              ; preds = %401
  %409 = shl nuw nsw i32 %232, 5
  %410 = getelementptr inbounds i8, i8* %182, i64 5
  %411 = and i32 %409, 128
  %412 = sub nsw i32 0, %411
  %413 = ashr i32 %412, 8
  %414 = trunc i32 %413 to i8
  store i8 %414, i8* %410, align 1
  br i1 %108, label %237, label %415

415:                                              ; preds = %408
  %416 = shl nuw nsw i32 %232, 6
  %417 = getelementptr inbounds i8, i8* %182, i64 6
  %418 = and i32 %416, 128
  %419 = sub nsw i32 0, %418
  %420 = ashr i32 %419, 8
  %421 = trunc i32 %420 to i8
  store i8 %421, i8* %417, align 1
  br label %237
}

declare i8* @_ZNK6SkMask7getAddrEii(%struct.SkMask*, i32, i32) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.SkPixmap* @_ZN15SkAAClipBlitter17justAnOpaqueColorEPj(%class.SkAAClipBlitter* nocapture readnone, i32* nocapture readnone) unnamed_addr #8 align 2 {
  ret %class.SkPixmap* null
}

declare void @_ZN9SkBlitter12blitAntiRectEiiiihh(%class.SkBlitter*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiH2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  %6 = alloca [3 x i16], align 2
  %7 = alloca [2 x i8], align 1
  %8 = bitcast [3 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 6, i8* nonnull %8) #14
  %9 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [3 x i16], [3 x i16]* %6, i64 0, i64 2
  %12 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %12) #14
  %13 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  store i16 1, i16* %9, align 2
  store i16 1, i16* %10, align 2
  store i16 0, i16* %11, align 2
  %14 = trunc i32 %3 to i8
  store i8 %14, i8* %12, align 1
  %15 = trunc i32 %4 to i8
  store i8 %15, i8* %13, align 1
  %16 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %17 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %17, i64 3
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %18, align 8
  call void %19(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %12, i16* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 6, i8* nonnull %8) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkBlitter10blitAntiV2Eiijj(%class.SkBlitter*, i32, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  %6 = alloca [2 x i16], align 2
  %7 = alloca [1 x i8], align 1
  %8 = bitcast [2 x i16]* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #14
  %9 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 0
  %10 = getelementptr inbounds [2 x i16], [2 x i16]* %6, i64 0, i64 1
  %11 = getelementptr inbounds [1 x i8], [1 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11) #14
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %12 = trunc i32 %3 to i8
  store i8 %12, i8* %11, align 1
  %13 = bitcast %class.SkBlitter* %0 to void (%class.SkBlitter*, i32, i32, i8*, i16*)***
  %14 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %15 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %14, i64 3
  %16 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %15, align 8
  call void %16(%class.SkBlitter* %0, i32 %1, i32 %2, i8* nonnull %11, i16* nonnull %9) #14
  store i16 1, i16* %9, align 2
  store i16 0, i16* %10, align 2
  %17 = trunc i32 %4 to i8
  store i8 %17, i8* %11, align 1
  %18 = add nsw i32 %2, 1
  %19 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)**, void (%class.SkBlitter*, i32, i32, i8*, i16*)*** %13, align 8
  %20 = getelementptr inbounds void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %19, i64 3
  %21 = load void (%class.SkBlitter*, i32, i32, i8*, i16*)*, void (%class.SkBlitter*, i32, i32, i8*, i16*)** %20, align 8
  call void %21(%class.SkBlitter* %0, i32 %1, i32 %18, i8* nonnull %11, i16* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #14
  ret void
}

declare zeroext i1 @_ZNK9SkBlitter13isNullBlitterEv(%class.SkBlitter*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK9SkBlitter20requestRowsPreservedEv(%class.SkBlitter*) unnamed_addr #2 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN9SkBlitter15allocBlitMemoryEm(%class.SkBlitter*, i64) unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.SkBlitter, %class.SkBlitter* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ult i64 %5, %1
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %1, i32 2) #14
  %9 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  store i8* %8, i8** %9, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %7
  tail call void @_Z7sk_freePv(i8* nonnull %10) #14
  br label %13

13:                                               ; preds = %12, %7
  store i64 %1, i64* %4, align 8
  br label %14

14:                                               ; preds = %2, %13
  %15 = getelementptr inbounds %class.SkAutoMalloc, %class.SkAutoMalloc* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load i8*, i8** %15, align 8
  ret i8* %16
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #3

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.floor.f32(float) #10

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #10

declare zeroext i1 @_ZN8SkRegion8setEmptyEv(%class.SkRegion*) local_unnamed_addr #3

declare zeroext i1 @_ZN8SkRegion2opERKS_RK7SkIRectNS_2OpE(%class.SkRegion*, %class.SkRegion* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i32) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitterD0Ev(%"class.SkAAClip::BuilderBlitter"*) unnamed_addr #11 comdat align 2 {
  %2 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 0
  tail call void @_ZN9SkBlitterD2Ev(%class.SkBlitter* %2) #14
  %3 = bitcast %"class.SkAAClip::BuilderBlitter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter5blitHEiii(%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  %5 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 6
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, %2
  br i1 %7, label %8, label %9

8:                                                ; preds = %4
  store i32 %2, i32* %5, align 8
  br label %9

9:                                                ; preds = %4, %8
  %10 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, -2147483647
  %13 = sub nsw i32 %2, %11
  %14 = icmp sgt i32 %13, 1
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %25

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %18 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %17, align 8
  %19 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 4
  %20 = load i32, i32* %19, align 8
  %21 = add nsw i32 %2, -1
  %22 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 5
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %23, %20
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %18, i32 %20, i32 %21, i32 0, i32 %24) #14
  br label %25

25:                                               ; preds = %9, %16
  store i32 %2, i32* %10, align 8
  %26 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %27 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %26, align 8
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %27, i32 %1, i32 %2, i32 255, i32 %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter9blitAntiHEiiPKhPKs(%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*) unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 %2, i32* %6, align 8
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -2147483647
  %14 = sub nsw i32 %2, %12
  %15 = icmp sgt i32 %14, 1
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %19 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %18, align 8
  %20 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %2, -1
  %23 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, %21
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %19, i32 %21, i32 %22, i32 0, i32 %25) #14
  br label %26

26:                                               ; preds = %10, %17
  store i32 %2, i32* %11, align 8
  %27 = load i16, i16* %4, align 2
  %28 = icmp slt i16 %27, 1
  br i1 %28, label %62, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 4
  %31 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 5
  %32 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  br label %33

33:                                               ; preds = %29, %56
  %34 = phi i16 [ %27, %29 ], [ %60, %56 ]
  %35 = phi i32 [ %1, %29 ], [ %44, %56 ]
  %36 = phi i16* [ %4, %29 ], [ %58, %56 ]
  %37 = phi i8* [ %3, %29 ], [ %59, %56 ]
  %38 = sext i16 %34 to i32
  %39 = load i32, i32* %30, align 8
  %40 = icmp slt i32 %35, %39
  %41 = sub i32 %35, %39
  %42 = select i1 %40, i32 %41, i32 0
  %43 = add i32 %42, %38
  %44 = add nsw i32 %35, %38
  %45 = load i32, i32* %31, align 4
  %46 = icmp slt i32 %45, %44
  %47 = sub i32 %45, %44
  %48 = select i1 %46, i32 %47, i32 0
  %49 = add i32 %43, %48
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %33
  %52 = select i1 %40, i32 %39, i32 %35
  %53 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %32, align 8
  %54 = load i8, i8* %37, align 1
  %55 = zext i8 %54 to i32
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %53, i32 %52, i32 %2, i32 %55, i32 %49)
  br label %56

56:                                               ; preds = %51, %33
  %57 = sext i16 %34 to i64
  %58 = getelementptr inbounds i16, i16* %36, i64 %57
  %59 = getelementptr inbounds i8, i8* %37, i64 %57
  %60 = load i16, i16* %58, align 2
  %61 = icmp slt i16 %60, 1
  br i1 %61, label %62, label %33

62:                                               ; preds = %56, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter5blitVEiiih(%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i8 zeroext) unnamed_addr #2 comdat align 2 {
  %6 = alloca [2 x i8], align 1
  %7 = icmp eq i32 %3, 1
  br i1 %7, label %8, label %15

8:                                                ; preds = %5
  %9 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %9) #14
  %10 = getelementptr inbounds [2 x i8], [2 x i8]* %6, i64 0, i64 1
  store i8 %4, i8* %9, align 1
  store i8 0, i8* %10, align 1
  %11 = bitcast %"class.SkAAClip::BuilderBlitter"* %0 to void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)***
  %12 = load void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)**, void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)*, void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)** %12, i64 3
  %14 = load void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)*, void (%"class.SkAAClip::BuilderBlitter"*, i32, i32, i8*, i16*)** %13, align 8
  call void %14(%"class.SkAAClip::BuilderBlitter"* %0, i32 %1, i32 %2, i8* nonnull %9, i16* getelementptr inbounds ([2 x i16], [2 x i16]* @_ZZN8SkAAClip14BuilderBlitter5blitVEiiihE4runs, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %9) #14
  br label %81

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = icmp sgt i32 %17, %2
  br i1 %18, label %19, label %20

19:                                               ; preds = %15
  store i32 %2, i32* %16, align 8
  br label %20

20:                                               ; preds = %15, %19
  %21 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %22 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %21, align 8
  %23 = zext i8 %4 to i32
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %22, i32 %1, i32 %2, i32 %23, i32 1) #14
  %24 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %22, i64 0, i32 2
  %25 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %24, align 8
  %26 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %25, i64 0, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %22, i64 0, i32 4
  %29 = load i32, i32* %28, align 4
  %30 = icmp sgt i32 %29, %27
  br i1 %30, label %31, label %72

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %25, i64 0, i32 2
  %33 = load %class.SkTDArray.1*, %class.SkTDArray.1** %32, align 8
  %34 = sub nsw i32 %29, %27
  %35 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %33, i64 0, i32 2
  %36 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %33, i64 0, i32 1
  %37 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %33, i64 0, i32 0
  br label %38

38:                                               ; preds = %61, %31
  %39 = phi i32 [ %34, %31 ], [ %67, %61 ]
  %40 = icmp slt i32 %39, 255
  %41 = select i1 %40, i32 %39, i32 255
  %42 = load i32, i32* %35, align 4
  %43 = add i32 %42, 2
  %44 = icmp sgt i32 %43, -1
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

46:                                               ; preds = %38
  %47 = load i32, i32* %36, align 8
  %48 = icmp slt i32 %47, %43
  br i1 %48, label %51, label %49

49:                                               ; preds = %46
  %50 = load i8*, i8** %37, align 8
  br label %61

51:                                               ; preds = %46
  %52 = add i32 %42, 6
  %53 = lshr i32 %52, 2
  %54 = add nuw i32 %53, %52
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %57, label %56

56:                                               ; preds = %51
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

57:                                               ; preds = %51
  store i32 %54, i32* %36, align 8
  %58 = load i8*, i8** %37, align 8
  %59 = sext i32 %54 to i64
  %60 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %58, i64 %59) #14
  store i8* %60, i8** %37, align 8
  br label %61

61:                                               ; preds = %57, %49
  %62 = phi i8* [ %50, %49 ], [ %60, %57 ]
  store i32 %43, i32* %35, align 4
  %63 = sext i32 %42 to i64
  %64 = getelementptr inbounds i8, i8* %62, i64 %63
  %65 = trunc i32 %41 to i8
  store i8 %65, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %64, i64 1
  store i8 0, i8* %66, align 1
  %67 = sub nsw i32 %39, %41
  %68 = icmp sgt i32 %67, 0
  br i1 %68, label %38, label %69

69:                                               ; preds = %61
  %70 = load i32, i32* %28, align 4
  store i32 %70, i32* %26, align 4
  %71 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %24, align 8
  br label %72

72:                                               ; preds = %20, %69
  %73 = phi %"struct.SkAAClip::Builder::Row"* [ %25, %20 ], [ %71, %69 ]
  %74 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %22, i64 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %2, -1
  %77 = add i32 %76, %3
  %78 = sub i32 %77, %75
  %79 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %73, i64 0, i32 0
  store i32 %78, i32* %79, align 8
  %80 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 1
  store i32 %77, i32* %80, align 8
  br label %81

81:                                               ; preds = %72, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter8blitRectEiiii(%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i32) unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 6
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, %2
  br i1 %8, label %9, label %10

9:                                                ; preds = %5
  store i32 %2, i32* %6, align 8
  br label %10

10:                                               ; preds = %5, %9
  %11 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, -2147483647
  %14 = sub nsw i32 %2, %12
  %15 = icmp sgt i32 %14, 1
  %16 = and i1 %13, %15
  br i1 %16, label %17, label %26

17:                                               ; preds = %10
  %18 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %19 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %18, align 8
  %20 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 4
  %21 = load i32, i32* %20, align 8
  %22 = add nsw i32 %2, -1
  %23 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 5
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, %21
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %19, i32 %21, i32 %22, i32 0, i32 %25) #14
  br label %26

26:                                               ; preds = %10, %17
  store i32 %2, i32* %11, align 8
  %27 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %28 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %27, align 8
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %28, i32 %1, i32 %2, i32 255, i32 %3) #14
  %29 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %28, i64 0, i32 2
  %30 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %29, align 8
  %31 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %30, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %28, i64 0, i32 4
  %34 = load i32, i32* %33, align 4
  %35 = icmp sgt i32 %34, %32
  br i1 %35, label %36, label %77

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %30, i64 0, i32 2
  %38 = load %class.SkTDArray.1*, %class.SkTDArray.1** %37, align 8
  %39 = sub nsw i32 %34, %32
  %40 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %38, i64 0, i32 2
  %41 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %38, i64 0, i32 1
  %42 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %38, i64 0, i32 0
  br label %43

43:                                               ; preds = %66, %36
  %44 = phi i32 [ %39, %36 ], [ %72, %66 ]
  %45 = icmp slt i32 %44, 255
  %46 = select i1 %45, i32 %44, i32 255
  %47 = load i32, i32* %40, align 4
  %48 = add i32 %47, 2
  %49 = icmp sgt i32 %48, -1
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

51:                                               ; preds = %43
  %52 = load i32, i32* %41, align 8
  %53 = icmp slt i32 %52, %48
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = load i8*, i8** %42, align 8
  br label %66

56:                                               ; preds = %51
  %57 = add i32 %47, 6
  %58 = lshr i32 %57, 2
  %59 = add nuw i32 %58, %57
  %60 = icmp sgt i32 %59, -1
  br i1 %60, label %62, label %61

61:                                               ; preds = %56
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

62:                                               ; preds = %56
  store i32 %59, i32* %41, align 8
  %63 = load i8*, i8** %42, align 8
  %64 = sext i32 %59 to i64
  %65 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %63, i64 %64) #14
  store i8* %65, i8** %42, align 8
  br label %66

66:                                               ; preds = %62, %54
  %67 = phi i8* [ %55, %54 ], [ %65, %62 ]
  store i32 %48, i32* %40, align 4
  %68 = sext i32 %47 to i64
  %69 = getelementptr inbounds i8, i8* %67, i64 %68
  %70 = trunc i32 %46 to i8
  store i8 %70, i8* %69, align 1
  %71 = getelementptr inbounds i8, i8* %69, i64 1
  store i8 0, i8* %71, align 1
  %72 = sub nsw i32 %44, %46
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %43, label %74

74:                                               ; preds = %66
  %75 = load i32, i32* %33, align 4
  store i32 %75, i32* %31, align 4
  %76 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %29, align 8
  br label %77

77:                                               ; preds = %26, %74
  %78 = phi %"struct.SkAAClip::Builder::Row"* [ %30, %26 ], [ %76, %74 ]
  %79 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %28, i64 0, i32 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %2, -1
  %82 = add i32 %81, %4
  %83 = sub i32 %82, %80
  %84 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %78, i64 0, i32 0
  store i32 %83, i32* %84, align 8
  store i32 %82, i32* %11, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter12blitAntiRectEiiiihh(%"class.SkAAClip::BuilderBlitter"*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) unnamed_addr #2 comdat align 2 {
  %8 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = icmp sgt i32 %9, %2
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i32 %2, i32* %8, align 8
  br label %12

12:                                               ; preds = %7, %11
  %13 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp sgt i32 %14, -2147483647
  %16 = sub nsw i32 %2, %14
  %17 = icmp sgt i32 %16, 1
  %18 = and i1 %15, %17
  br i1 %18, label %21, label %19

19:                                               ; preds = %12
  %20 = add i32 %2, -1
  br label %30

21:                                               ; preds = %12
  %22 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %23 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %22, align 8
  %24 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %2, -1
  %27 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 5
  %28 = load i32, i32* %27, align 4
  %29 = sub nsw i32 %28, %25
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %23, i32 %25, i32 %26, i32 0, i32 %29) #14
  br label %30

30:                                               ; preds = %19, %21
  %31 = phi i32 [ %20, %19 ], [ %26, %21 ]
  store i32 %2, i32* %13, align 8
  %32 = getelementptr inbounds %"class.SkAAClip::BuilderBlitter", %"class.SkAAClip::BuilderBlitter"* %0, i64 0, i32 3
  %33 = load %"class.SkAAClip::Builder"*, %"class.SkAAClip::Builder"** %32, align 8
  tail call void @_ZN8SkAAClip7Builder14addAntiRectRunEiiiihh(%"class.SkAAClip::Builder"* %33, i32 %1, i32 %2, i32 %3, i32 %4, i8 zeroext %5, i8 zeroext %6)
  %34 = add i32 %31, %4
  store i32 %34, i32* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip14BuilderBlitter8blitMaskERK6SkMaskRK7SkIRect(%"class.SkAAClip::BuilderBlitter"*, %struct.SkMask* dereferenceable(32), %struct.SkIRect* dereferenceable(16)) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.4, i64 0, i64 0), i32 1301, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.5, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkPixmap* @_ZN8SkAAClip14BuilderBlitter17justAnOpaqueColorEPj(%"class.SkAAClip::BuilderBlitter"*, i32*) unnamed_addr #2 comdat align 2 {
  ret %class.SkPixmap* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"*, i32, i32, i32, i32) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = sub nsw i32 %1, %7
  %9 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = sub nsw i32 %2, %10
  %12 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 2
  %13 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %12, align 8
  %14 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 3
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %11, %15
  br i1 %16, label %21, label %17

17:                                               ; preds = %5
  store i32 %11, i32* %14, align 8
  %18 = tail call %"struct.SkAAClip::Builder::Row"* @_ZN8SkAAClip7Builder8flushRowEb(%"class.SkAAClip::Builder"* %0, i1 zeroext true)
  %19 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %18, i64 0, i32 0
  store i32 %11, i32* %19, align 8
  %20 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %18, i64 0, i32 1
  store i32 0, i32* %20, align 4
  store %"struct.SkAAClip::Builder::Row"* %18, %"struct.SkAAClip::Builder::Row"** %12, align 8
  br label %21

21:                                               ; preds = %5, %17
  %22 = phi %"struct.SkAAClip::Builder::Row"* [ %18, %17 ], [ %13, %5 ]
  %23 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %22, i64 0, i32 2
  %24 = load %class.SkTDArray.1*, %class.SkTDArray.1** %23, align 8
  %25 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %22, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = sub i32 %8, %26
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %67, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 2
  %31 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 1
  %32 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 0
  br label %33

33:                                               ; preds = %56, %29
  %34 = phi i32 [ %27, %29 ], [ %62, %56 ]
  %35 = icmp slt i32 %34, 255
  %36 = select i1 %35, i32 %34, i32 255
  %37 = load i32, i32* %30, align 4
  %38 = add i32 %37, 2
  %39 = icmp sgt i32 %38, -1
  br i1 %39, label %41, label %40

40:                                               ; preds = %33
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

41:                                               ; preds = %33
  %42 = load i32, i32* %31, align 8
  %43 = icmp slt i32 %42, %38
  br i1 %43, label %46, label %44

44:                                               ; preds = %41
  %45 = load i8*, i8** %32, align 8
  br label %56

46:                                               ; preds = %41
  %47 = add i32 %37, 6
  %48 = lshr i32 %47, 2
  %49 = add nuw i32 %48, %47
  %50 = icmp sgt i32 %49, -1
  br i1 %50, label %52, label %51

51:                                               ; preds = %46
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

52:                                               ; preds = %46
  store i32 %49, i32* %31, align 8
  %53 = load i8*, i8** %32, align 8
  %54 = sext i32 %49 to i64
  %55 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %53, i64 %54) #14
  store i8* %55, i8** %32, align 8
  br label %56

56:                                               ; preds = %52, %44
  %57 = phi i8* [ %45, %44 ], [ %55, %52 ]
  store i32 %38, i32* %30, align 4
  %58 = sext i32 %37 to i64
  %59 = getelementptr inbounds i8, i8* %57, i64 %58
  %60 = trunc i32 %36 to i8
  store i8 %60, i8* %59, align 1
  %61 = getelementptr inbounds i8, i8* %59, i64 1
  store i8 0, i8* %61, align 1
  %62 = sub nsw i32 %34, %36
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %33, label %64

64:                                               ; preds = %56
  %65 = load i32, i32* %25, align 4
  %66 = add nsw i32 %65, %27
  store i32 %66, i32* %25, align 4
  br label %67

67:                                               ; preds = %21, %64
  %68 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 2
  %69 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 1
  %70 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %24, i64 0, i32 0
  %71 = trunc i32 %3 to i8
  br label %72

72:                                               ; preds = %95, %67
  %73 = phi i32 [ %4, %67 ], [ %101, %95 ]
  %74 = icmp slt i32 %73, 255
  %75 = select i1 %74, i32 %73, i32 255
  %76 = load i32, i32* %68, align 4
  %77 = add i32 %76, 2
  %78 = icmp sgt i32 %77, -1
  br i1 %78, label %80, label %79

79:                                               ; preds = %72
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

80:                                               ; preds = %72
  %81 = load i32, i32* %69, align 8
  %82 = icmp slt i32 %81, %77
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = load i8*, i8** %70, align 8
  br label %95

85:                                               ; preds = %80
  %86 = add i32 %76, 6
  %87 = lshr i32 %86, 2
  %88 = add nuw i32 %87, %86
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

91:                                               ; preds = %85
  store i32 %88, i32* %69, align 8
  %92 = load i8*, i8** %70, align 8
  %93 = sext i32 %88 to i64
  %94 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %92, i64 %93) #14
  store i8* %94, i8** %70, align 8
  br label %95

95:                                               ; preds = %91, %83
  %96 = phi i8* [ %84, %83 ], [ %94, %91 ]
  store i32 %77, i32* %68, align 4
  %97 = sext i32 %76 to i64
  %98 = getelementptr inbounds i8, i8* %96, i64 %97
  %99 = trunc i32 %75 to i8
  store i8 %99, i8* %98, align 1
  %100 = getelementptr inbounds i8, i8* %98, i64 1
  store i8 %71, i8* %100, align 1
  %101 = sub nsw i32 %73, %75
  %102 = icmp sgt i32 %101, 0
  br i1 %102, label %72, label %103

103:                                              ; preds = %95
  %104 = load i32, i32* %25, align 4
  %105 = add nsw i32 %104, %4
  store i32 %105, i32* %25, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.SkAAClip::Builder::Row"* @_ZN8SkAAClip7Builder8flushRowEb(%"class.SkAAClip::Builder"*, i1 zeroext) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %135

7:                                                ; preds = %2
  %8 = add nsw i32 %5, -1
  %9 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %3, i64 0, i32 0
  %10 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %9, align 8
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %10, i64 %11, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 4
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, %13
  br i1 %16, label %17, label %57

17:                                               ; preds = %7
  %18 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %10, i64 %11, i32 2
  %19 = load %class.SkTDArray.1*, %class.SkTDArray.1** %18, align 8
  %20 = sub nsw i32 %15, %13
  %21 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %19, i64 0, i32 2
  %22 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %19, i64 0, i32 1
  %23 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %19, i64 0, i32 0
  br label %24

24:                                               ; preds = %47, %17
  %25 = phi i32 [ %20, %17 ], [ %53, %47 ]
  %26 = icmp slt i32 %25, 255
  %27 = select i1 %26, i32 %25, i32 255
  %28 = load i32, i32* %21, align 4
  %29 = add i32 %28, 2
  %30 = icmp sgt i32 %29, -1
  br i1 %30, label %32, label %31

31:                                               ; preds = %24
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

32:                                               ; preds = %24
  %33 = load i32, i32* %22, align 8
  %34 = icmp slt i32 %33, %29
  br i1 %34, label %37, label %35

35:                                               ; preds = %32
  %36 = load i8*, i8** %23, align 8
  br label %47

37:                                               ; preds = %32
  %38 = add i32 %28, 6
  %39 = lshr i32 %38, 2
  %40 = add nuw i32 %39, %38
  %41 = icmp sgt i32 %40, -1
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

43:                                               ; preds = %37
  store i32 %40, i32* %22, align 8
  %44 = load i8*, i8** %23, align 8
  %45 = sext i32 %40 to i64
  %46 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %44, i64 %45) #14
  store i8* %46, i8** %23, align 8
  br label %47

47:                                               ; preds = %43, %35
  %48 = phi i8* [ %36, %35 ], [ %46, %43 ]
  store i32 %29, i32* %21, align 4
  %49 = sext i32 %28 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  %51 = trunc i32 %27 to i8
  store i8 %51, i8* %50, align 1
  %52 = getelementptr inbounds i8, i8* %50, i64 1
  store i8 0, i8* %52, align 1
  %53 = sub nsw i32 %25, %27
  %54 = icmp sgt i32 %53, 0
  br i1 %54, label %24, label %55

55:                                               ; preds = %47
  %56 = load i32, i32* %14, align 4
  store i32 %56, i32* %12, align 4
  br label %57

57:                                               ; preds = %55, %7
  %58 = icmp sgt i32 %5, 1
  br i1 %58, label %59, label %135

59:                                               ; preds = %57
  %60 = add nsw i32 %5, -2
  %61 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %9, align 8
  %62 = sext i32 %60 to i64
  %63 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %61, i64 %11
  %64 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %61, i64 %62, i32 2
  %65 = load %class.SkTDArray.1*, %class.SkTDArray.1** %64, align 8
  %66 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %61, i64 %11, i32 2
  %67 = load %class.SkTDArray.1*, %class.SkTDArray.1** %66, align 8
  %68 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %65, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %67, i64 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %69, %71
  %73 = bitcast %"struct.SkAAClip::Builder::Row"* %61 to i8*
  br i1 %72, label %74, label %106

74:                                               ; preds = %59
  %75 = icmp eq i32 %69, 0
  br i1 %75, label %84, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %65, i64 0, i32 0
  %78 = load i8*, i8** %77, align 8
  %79 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %67, i64 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = sext i32 %69 to i64
  %82 = tail call i32 @bcmp(i8* %78, i8* %80, i64 %81) #14
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %106

84:                                               ; preds = %74, %76
  %85 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %63, i64 0, i32 0
  %86 = load i32, i32* %85, align 8
  %87 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %61, i64 %62, i32 0
  store i32 %86, i32* %87, align 8
  br i1 %1, label %88, label %89

88:                                               ; preds = %84
  store i32 0, i32* %70, align 4
  br label %168

89:                                               ; preds = %84
  %90 = icmp eq %class.SkTDArray.1* %67, null
  br i1 %90, label %95, label %91

91:                                               ; preds = %89
  %92 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %67, i64 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_Z7sk_freePv(i8* %93) #14
  %94 = bitcast %class.SkTDArray.1* %67 to i8*
  tail call void @_ZdlPv(i8* %94) #15
  br label %95

95:                                               ; preds = %91, %89
  %96 = load i32, i32* %4, align 4
  %97 = add nsw i32 %96, -1
  store i32 %97, i32* %4, align 4
  %98 = icmp eq i32 %97, %8
  br i1 %98, label %168, label %99

99:                                               ; preds = %95
  %100 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %9, align 8
  %101 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %100, i64 %11
  %102 = bitcast %"struct.SkAAClip::Builder::Row"* %101 to i8*
  %103 = sext i32 %97 to i64
  %104 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %100, i64 %103
  %105 = bitcast %"struct.SkAAClip::Builder::Row"* %104 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %105, i64 16, i1 false) #14
  br label %168

106:                                              ; preds = %59, %76
  br i1 %1, label %107, label %168

107:                                              ; preds = %106
  %108 = load i32, i32* %4, align 4
  %109 = add i32 %108, 1
  %110 = icmp sgt i32 %109, -1
  br i1 %110, label %112, label %111

111:                                              ; preds = %107
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 1
  %114 = load i32, i32* %113, align 8
  %115 = icmp slt i32 %114, %109
  br i1 %115, label %116, label %128

116:                                              ; preds = %112
  %117 = add i32 %108, 5
  %118 = lshr i32 %117, 2
  %119 = add nuw i32 %118, %117
  %120 = icmp sgt i32 %119, -1
  br i1 %120, label %122, label %121

121:                                              ; preds = %116
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

122:                                              ; preds = %116
  store i32 %119, i32* %113, align 8
  %123 = bitcast %class.SkTDArray.14* %3 to i8**
  %124 = sext i32 %119 to i64
  %125 = shl nsw i64 %124, 4
  %126 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %73, i64 %125) #14
  store i8* %126, i8** %123, align 8
  %127 = bitcast i8* %126 to %"struct.SkAAClip::Builder::Row"*
  br label %128

128:                                              ; preds = %112, %122
  %129 = phi %"struct.SkAAClip::Builder::Row"* [ %127, %122 ], [ %61, %112 ]
  store i32 %109, i32* %4, align 4
  %130 = sext i32 %108 to i64
  %131 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %129, i64 %130
  %132 = tail call i8* @_Znwm(i64 16) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 0, i64 16, i1 false) #14
  %133 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %129, i64 %130, i32 2
  %134 = bitcast %class.SkTDArray.1** %133 to i8**
  store i8* %132, i8** %134, align 8
  br label %168

135:                                              ; preds = %2, %57
  br i1 %1, label %136, label %168

136:                                              ; preds = %135
  %137 = load i32, i32* %4, align 4
  %138 = add i32 %137, 1
  %139 = icmp sgt i32 %138, -1
  br i1 %139, label %141, label %140

140:                                              ; preds = %136
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 1, i32 1
  %143 = load i32, i32* %142, align 8
  %144 = icmp slt i32 %143, %138
  br i1 %144, label %148, label %145

145:                                              ; preds = %141
  %146 = getelementptr inbounds %class.SkTDArray.14, %class.SkTDArray.14* %3, i64 0, i32 0
  %147 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %146, align 8
  br label %161

148:                                              ; preds = %141
  %149 = add i32 %137, 5
  %150 = lshr i32 %149, 2
  %151 = add nuw i32 %150, %149
  %152 = icmp sgt i32 %151, -1
  br i1 %152, label %154, label %153

153:                                              ; preds = %148
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

154:                                              ; preds = %148
  store i32 %151, i32* %142, align 8
  %155 = bitcast %class.SkTDArray.14* %3 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = sext i32 %151 to i64
  %158 = shl nsw i64 %157, 4
  %159 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %156, i64 %158) #14
  store i8* %159, i8** %155, align 8
  %160 = bitcast i8* %159 to %"struct.SkAAClip::Builder::Row"*
  br label %161

161:                                              ; preds = %145, %154
  %162 = phi %"struct.SkAAClip::Builder::Row"* [ %147, %145 ], [ %160, %154 ]
  store i32 %138, i32* %4, align 4
  %163 = sext i32 %137 to i64
  %164 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %162, i64 %163
  %165 = tail call i8* @_Znwm(i64 16) #15
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %165, i8 0, i64 16, i1 false) #14
  %166 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %162, i64 %163, i32 2
  %167 = bitcast %class.SkTDArray.1** %166 to i8**
  store i8* %165, i8** %167, align 8
  br label %168

168:                                              ; preds = %99, %95, %88, %128, %106, %135, %161
  %169 = phi %"struct.SkAAClip::Builder::Row"* [ %164, %161 ], [ null, %135 ], [ %63, %88 ], [ %131, %128 ], [ null, %106 ], [ null, %95 ], [ null, %99 ]
  ret %"struct.SkAAClip::Builder::Row"* %169
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN8SkAAClip7Builder14addAntiRectRunEiiiihh(%"class.SkAAClip::Builder"*, i32, i32, i32, i32, i8 zeroext, i8 zeroext) local_unnamed_addr #2 comdat align 2 {
  %8 = zext i8 %5 to i32
  %9 = icmp eq i8 %5, -1
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = add nsw i32 %3, 1
  br label %16

12:                                               ; preds = %7
  %13 = icmp eq i8 %5, 0
  %14 = add nsw i32 %1, 1
  br i1 %13, label %16, label %15

15:                                               ; preds = %12
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %0, i32 %1, i32 %2, i32 %8, i32 1)
  br label %16

16:                                               ; preds = %12, %15, %10
  %17 = phi i32 [ %11, %10 ], [ %3, %15 ], [ %3, %12 ]
  %18 = phi i32 [ %1, %10 ], [ %14, %15 ], [ %14, %12 ]
  %19 = zext i8 %6 to i32
  %20 = icmp eq i8 %6, -1
  %21 = zext i1 %20 to i32
  %22 = add nsw i32 %17, %21
  %23 = icmp sgt i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %16
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %0, i32 %18, i32 %2, i32 255, i32 %22)
  br label %25

25:                                               ; preds = %24, %16
  switch i8 %6, label %26 [
    i8 0, label %28
    i8 -1, label %28
  ]

26:                                               ; preds = %25
  %27 = add nsw i32 %18, %22
  tail call void @_ZN8SkAAClip7Builder6addRunEiiji(%"class.SkAAClip::Builder"* %0, i32 %27, i32 %2, i32 %19, i32 1)
  br label %28

28:                                               ; preds = %25, %25, %26
  %29 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 2
  %30 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %29, align 8
  %31 = icmp eq %"struct.SkAAClip::Builder::Row"* %30, null
  br i1 %31, label %87, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %30, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 4
  %36 = load i32, i32* %35, align 4
  %37 = icmp sgt i32 %36, %34
  br i1 %37, label %38, label %79

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %30, i64 0, i32 2
  %40 = load %class.SkTDArray.1*, %class.SkTDArray.1** %39, align 8
  %41 = sub nsw i32 %36, %34
  %42 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %40, i64 0, i32 2
  %43 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %40, i64 0, i32 1
  %44 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %40, i64 0, i32 0
  br label %45

45:                                               ; preds = %68, %38
  %46 = phi i32 [ %41, %38 ], [ %74, %68 ]
  %47 = icmp slt i32 %46, 255
  %48 = select i1 %47, i32 %46, i32 255
  %49 = load i32, i32* %42, align 4
  %50 = add i32 %49, 2
  %51 = icmp sgt i32 %50, -1
  br i1 %51, label %53, label %52

52:                                               ; preds = %45
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.2, i64 0, i64 0)) #16
  unreachable

53:                                               ; preds = %45
  %54 = load i32, i32* %43, align 8
  %55 = icmp slt i32 %54, %50
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  %57 = load i8*, i8** %44, align 8
  br label %68

58:                                               ; preds = %53
  %59 = add i32 %49, 6
  %60 = lshr i32 %59, 2
  %61 = add nuw i32 %60, %59
  %62 = icmp sgt i32 %61, -1
  br i1 %62, label %64, label %63

63:                                               ; preds = %58
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #16
  unreachable

64:                                               ; preds = %58
  store i32 %61, i32* %43, align 8
  %65 = load i8*, i8** %44, align 8
  %66 = sext i32 %61 to i64
  %67 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %65, i64 %66) #14
  store i8* %67, i8** %44, align 8
  br label %68

68:                                               ; preds = %64, %56
  %69 = phi i8* [ %57, %56 ], [ %67, %64 ]
  store i32 %50, i32* %42, align 4
  %70 = sext i32 %49 to i64
  %71 = getelementptr inbounds i8, i8* %69, i64 %70
  %72 = trunc i32 %48 to i8
  store i8 %72, i8* %71, align 1
  %73 = getelementptr inbounds i8, i8* %71, i64 1
  store i8 0, i8* %73, align 1
  %74 = sub nsw i32 %46, %48
  %75 = icmp sgt i32 %74, 0
  br i1 %75, label %45, label %76

76:                                               ; preds = %68
  %77 = load i32, i32* %35, align 4
  store i32 %77, i32* %33, align 4
  %78 = load %"struct.SkAAClip::Builder::Row"*, %"struct.SkAAClip::Builder::Row"** %29, align 8
  br label %79

79:                                               ; preds = %32, %76
  %80 = phi %"struct.SkAAClip::Builder::Row"* [ %30, %32 ], [ %78, %76 ]
  %81 = getelementptr inbounds %"class.SkAAClip::Builder", %"class.SkAAClip::Builder"* %0, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %2, -1
  %84 = add i32 %83, %4
  %85 = sub i32 %84, %82
  %86 = getelementptr inbounds %"struct.SkAAClip::Builder::Row", %"struct.SkAAClip::Builder::Row"* %80, i64 0, i32 0
  store i32 %85, i32* %86, align 8
  br label %87

87:                                               ; preds = %28, %79
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL13sectAlphaProcjj(i32, i32) unnamed_addr #8 {
  %3 = mul i32 %1, %0
  %4 = add i32 %3, 128
  %5 = lshr i32 %4, 8
  %6 = add i32 %5, %4
  %7 = lshr i32 %6, 8
  ret i32 %7
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL13diffAlphaProcjj(i32, i32) unnamed_addr #8 {
  %3 = sub i32 255, %1
  %4 = mul i32 %3, %0
  %5 = add i32 %4, 128
  %6 = lshr i32 %5, 8
  %7 = add i32 %6, %5
  %8 = lshr i32 %7, 8
  ret i32 %8
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL14unionAlphaProcjj(i32, i32) unnamed_addr #8 {
  %3 = add i32 %1, %0
  %4 = mul i32 %1, %0
  %5 = add i32 %4, 128
  %6 = lshr i32 %5, 8
  %7 = add i32 %6, %5
  %8 = lshr i32 %7, 8
  %9 = sub i32 %3, %8
  ret i32 %9
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @_ZL12xorAlphaProcjj(i32, i32) unnamed_addr #8 {
  %3 = add i32 %1, %0
  %4 = mul i32 %1, %0
  %5 = add i32 %4, 128
  %6 = lshr i32 %5, 8
  %7 = add i32 %6, %5
  %8 = lshr i32 %7, 8
  %9 = shl nuw nsw i32 %8, 1
  %10 = sub i32 %3, %9
  ret i32 %10
}

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z6mergeTIhEvPKviPKhiPv(i8*, i32, i8* noalias, i32, i8*) local_unnamed_addr #2 comdat {
  br label %6

6:                                                ; preds = %113, %5
  %7 = phi i32 [ %1, %5 ], [ %111, %113 ]
  %8 = phi i32 [ %3, %5 ], [ %119, %113 ]
  %9 = phi i8* [ %2, %5 ], [ %117, %113 ]
  %10 = phi i8* [ %0, %5 ], [ %115, %113 ]
  %11 = phi i8* [ %4, %5 ], [ %116, %113 ]
  %12 = icmp slt i32 %7, %8
  %13 = select i1 %12, i32 %7, i32 %8
  %14 = getelementptr inbounds i8, i8* %9, i64 1
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  switch i8 %15, label %17 [
    i8 -1, label %90
    i8 0, label %92
  ]

17:                                               ; preds = %6
  %18 = icmp sgt i32 %13, 0
  br i1 %18, label %19, label %110

19:                                               ; preds = %17
  %20 = sext i32 %13 to i64
  %21 = icmp ult i32 %13, 16
  br i1 %21, label %22, label %24

22:                                               ; preds = %88, %24, %19
  %23 = phi i64 [ 0, %24 ], [ 0, %19 ], [ %31, %88 ]
  br label %96

24:                                               ; preds = %19
  %25 = getelementptr i8, i8* %11, i64 %20
  %26 = getelementptr i8, i8* %10, i64 %20
  %27 = icmp ult i8* %11, %26
  %28 = icmp ult i8* %10, %25
  %29 = and i1 %27, %28
  br i1 %29, label %22, label %30

30:                                               ; preds = %24
  %31 = and i64 %20, -16
  %32 = insertelement <16 x i32> undef, i32 %16, i32 0
  %33 = shufflevector <16 x i32> %32, <16 x i32> undef, <16 x i32> zeroinitializer
  %34 = add nsw i64 %31, -16
  %35 = lshr exact i64 %34, 4
  %36 = add nuw nsw i64 %35, 1
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %34, 0
  br i1 %38, label %72, label %39

39:                                               ; preds = %30
  %40 = sub nuw nsw i64 %36, %37
  br label %41

41:                                               ; preds = %41, %39
  %42 = phi i64 [ 0, %39 ], [ %69, %41 ]
  %43 = phi i64 [ %40, %39 ], [ %70, %41 ]
  %44 = getelementptr inbounds i8, i8* %10, i64 %42
  %45 = bitcast i8* %44 to <16 x i8>*
  %46 = load <16 x i8>, <16 x i8>* %45, align 1, !alias.scope !44
  %47 = zext <16 x i8> %46 to <16 x i32>
  %48 = mul nuw nsw <16 x i32> %33, %47
  %49 = add nuw nsw <16 x i32> %48, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %50 = lshr <16 x i32> %49, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %51 = add nuw nsw <16 x i32> %50, %49
  %52 = lshr <16 x i32> %51, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %53 = trunc <16 x i32> %52 to <16 x i8>
  %54 = getelementptr inbounds i8, i8* %11, i64 %42
  %55 = bitcast i8* %54 to <16 x i8>*
  store <16 x i8> %53, <16 x i8>* %55, align 1, !alias.scope !47, !noalias !44
  %56 = or i64 %42, 16
  %57 = getelementptr inbounds i8, i8* %10, i64 %56
  %58 = bitcast i8* %57 to <16 x i8>*
  %59 = load <16 x i8>, <16 x i8>* %58, align 1, !alias.scope !44
  %60 = zext <16 x i8> %59 to <16 x i32>
  %61 = mul nuw nsw <16 x i32> %33, %60
  %62 = add nuw nsw <16 x i32> %61, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %63 = lshr <16 x i32> %62, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %64 = add nuw nsw <16 x i32> %63, %62
  %65 = lshr <16 x i32> %64, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %66 = trunc <16 x i32> %65 to <16 x i8>
  %67 = getelementptr inbounds i8, i8* %11, i64 %56
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %66, <16 x i8>* %68, align 1, !alias.scope !47, !noalias !44
  %69 = add i64 %42, 32
  %70 = add i64 %43, -2
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %41, !llvm.loop !49

72:                                               ; preds = %41, %30
  %73 = phi i64 [ 0, %30 ], [ %69, %41 ]
  %74 = icmp eq i64 %37, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds i8, i8* %10, i64 %73
  %77 = bitcast i8* %76 to <16 x i8>*
  %78 = load <16 x i8>, <16 x i8>* %77, align 1, !alias.scope !44
  %79 = zext <16 x i8> %78 to <16 x i32>
  %80 = mul nuw nsw <16 x i32> %33, %79
  %81 = add nuw nsw <16 x i32> %80, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %82 = lshr <16 x i32> %81, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %83 = add nuw nsw <16 x i32> %82, %81
  %84 = lshr <16 x i32> %83, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %85 = trunc <16 x i32> %84 to <16 x i8>
  %86 = getelementptr inbounds i8, i8* %11, i64 %73
  %87 = bitcast i8* %86 to <16 x i8>*
  store <16 x i8> %85, <16 x i8>* %87, align 1, !alias.scope !47, !noalias !44
  br label %88

88:                                               ; preds = %72, %75
  %89 = icmp eq i64 %31, %20
  br i1 %89, label %110, label %22

90:                                               ; preds = %6
  %91 = sext i32 %13 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %11, i8* align 1 %10, i64 %91, i1 false) #14
  br label %110

92:                                               ; preds = %6
  %93 = icmp eq i32 %13, 0
  br i1 %93, label %110, label %94

94:                                               ; preds = %92
  %95 = sext i32 %13 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %11, i8 0, i64 %95, i1 false) #14
  br label %110

96:                                               ; preds = %22, %96
  %97 = phi i64 [ %108, %96 ], [ %23, %22 ]
  %98 = getelementptr inbounds i8, i8* %10, i64 %97
  %99 = load i8, i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = mul nuw nsw i32 %100, %16
  %102 = add nuw nsw i32 %101, 128
  %103 = lshr i32 %102, 8
  %104 = add nuw nsw i32 %103, %102
  %105 = lshr i32 %104, 8
  %106 = trunc i32 %105 to i8
  %107 = getelementptr inbounds i8, i8* %11, i64 %97
  store i8 %106, i8* %107, align 1
  %108 = add nuw nsw i64 %97, 1
  %109 = icmp slt i64 %108, %20
  br i1 %109, label %96, label %110, !llvm.loop !50

110:                                              ; preds = %96, %88, %17, %94, %92, %90
  %111 = sub nsw i32 %7, %13
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %120, label %113

113:                                              ; preds = %110
  %114 = sext i32 %13 to i64
  %115 = getelementptr inbounds i8, i8* %10, i64 %114
  %116 = getelementptr inbounds i8, i8* %11, i64 %114
  %117 = getelementptr inbounds i8, i8* %9, i64 2
  %118 = load i8, i8* %117, align 1
  %119 = zext i8 %118 to i32
  br label %6

120:                                              ; preds = %110
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_Z6mergeTItEvPKviPKhiPv(i8*, i32, i8* noalias, i32, i8*) local_unnamed_addr #2 comdat {
  %6 = bitcast i8* %0 to i16*
  %7 = bitcast i8* %4 to i16*
  br label %8

8:                                                ; preds = %118, %5
  %9 = phi i32 [ %1, %5 ], [ %116, %118 ]
  %10 = phi i32 [ %3, %5 ], [ %124, %118 ]
  %11 = phi i8* [ %2, %5 ], [ %122, %118 ]
  %12 = phi i16* [ %6, %5 ], [ %120, %118 ]
  %13 = phi i16* [ %7, %5 ], [ %121, %118 ]
  %14 = bitcast i16* %13 to i8*
  %15 = icmp slt i32 %9, %10
  %16 = select i1 %15, i32 %9, i32 %10
  %17 = getelementptr inbounds i8, i8* %11, i64 1
  %18 = load i8, i8* %17, align 1
  %19 = zext i8 %18 to i32
  switch i8 %18, label %20 [
    i8 -1, label %73
    i8 0, label %78
  ]

20:                                               ; preds = %8
  %21 = icmp sgt i32 %16, 0
  br i1 %21, label %22, label %115

22:                                               ; preds = %20
  %23 = sext i32 %16 to i64
  %24 = icmp ult i32 %16, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %71, %27, %22
  %26 = phi i64 [ 0, %27 ], [ 0, %22 ], [ %34, %71 ]
  br label %83

27:                                               ; preds = %22
  %28 = getelementptr i16, i16* %13, i64 %23
  %29 = getelementptr i16, i16* %12, i64 %23
  %30 = icmp ult i16* %13, %29
  %31 = icmp ult i16* %12, %28
  %32 = and i1 %30, %31
  br i1 %32, label %25, label %33

33:                                               ; preds = %27
  %34 = and i64 %23, -8
  %35 = insertelement <8 x i32> undef, i32 %19, i32 0
  %36 = shufflevector <8 x i32> %35, <8 x i32> undef, <8 x i32> zeroinitializer
  br label %37

37:                                               ; preds = %37, %33
  %38 = phi i64 [ 0, %33 ], [ %69, %37 ]
  %39 = getelementptr inbounds i16, i16* %12, i64 %38
  %40 = bitcast i16* %39 to <8 x i16>*
  %41 = load <8 x i16>, <8 x i16>* %40, align 2, !alias.scope !51
  %42 = zext <8 x i16> %41 to <8 x i32>
  %43 = lshr <8 x i32> %42, <i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11>
  %44 = lshr <8 x i32> %42, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %45 = and <8 x i32> %44, <i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63, i32 63>
  %46 = and <8 x i32> %42, <i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31, i32 31>
  %47 = mul nuw nsw <8 x i32> %43, %36
  %48 = add nuw nsw <8 x i32> %47, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %49 = lshr <8 x i32> %48, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %50 = add nuw nsw <8 x i32> %49, %48
  %51 = lshr <8 x i32> %50, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %52 = mul nuw nsw <8 x i32> %45, %36
  %53 = add nuw nsw <8 x i32> %52, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %54 = lshr <8 x i32> %53, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %55 = add nuw nsw <8 x i32> %54, %53
  %56 = lshr <8 x i32> %55, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %57 = mul nuw nsw <8 x i32> %46, %36
  %58 = add nuw nsw <8 x i32> %57, <i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128, i32 128>
  %59 = lshr <8 x i32> %58, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %60 = add nuw nsw <8 x i32> %59, %58
  %61 = lshr <8 x i32> %60, <i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8>
  %62 = shl nuw nsw <8 x i32> %51, <i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11, i32 11>
  %63 = shl nuw nsw <8 x i32> %56, <i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5, i32 5>
  %64 = or <8 x i32> %62, %61
  %65 = or <8 x i32> %64, %63
  %66 = trunc <8 x i32> %65 to <8 x i16>
  %67 = getelementptr inbounds i16, i16* %13, i64 %38
  %68 = bitcast i16* %67 to <8 x i16>*
  store <8 x i16> %66, <8 x i16>* %68, align 2, !alias.scope !54, !noalias !51
  %69 = add i64 %38, 8
  %70 = icmp eq i64 %69, %34
  br i1 %70, label %71, label %37, !llvm.loop !56

71:                                               ; preds = %37
  %72 = icmp eq i64 %34, %23
  br i1 %72, label %115, label %25

73:                                               ; preds = %8
  %74 = bitcast i16* %12 to i8*
  %75 = bitcast i16* %13 to i8*
  %76 = sext i32 %16 to i64
  %77 = shl nsw i64 %76, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %75, i8* align 1 %74, i64 %77, i1 false) #14
  br label %115

78:                                               ; preds = %8
  %79 = icmp eq i32 %16, 0
  br i1 %79, label %115, label %80

80:                                               ; preds = %78
  %81 = sext i32 %16 to i64
  %82 = shl nsw i64 %81, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %14, i8 0, i64 %82, i1 false) #14
  br label %115

83:                                               ; preds = %25, %83
  %84 = phi i64 [ %113, %83 ], [ %26, %25 ]
  %85 = getelementptr inbounds i16, i16* %12, i64 %84
  %86 = load i16, i16* %85, align 2
  %87 = zext i16 %86 to i32
  %88 = lshr i32 %87, 11
  %89 = lshr i32 %87, 5
  %90 = and i32 %89, 63
  %91 = and i32 %87, 31
  %92 = mul nuw nsw i32 %88, %19
  %93 = add nuw nsw i32 %92, 128
  %94 = lshr i32 %93, 8
  %95 = add nuw nsw i32 %94, %93
  %96 = lshr i32 %95, 8
  %97 = mul nuw nsw i32 %90, %19
  %98 = add nuw nsw i32 %97, 128
  %99 = lshr i32 %98, 8
  %100 = add nuw nsw i32 %99, %98
  %101 = lshr i32 %100, 8
  %102 = mul nuw nsw i32 %91, %19
  %103 = add nuw nsw i32 %102, 128
  %104 = lshr i32 %103, 8
  %105 = add nuw nsw i32 %104, %103
  %106 = lshr i32 %105, 8
  %107 = shl nuw nsw i32 %96, 11
  %108 = shl nuw nsw i32 %101, 5
  %109 = or i32 %107, %106
  %110 = or i32 %109, %108
  %111 = trunc i32 %110 to i16
  %112 = getelementptr inbounds i16, i16* %13, i64 %84
  store i16 %111, i16* %112, align 2
  %113 = add nuw nsw i64 %84, 1
  %114 = icmp slt i64 %113, %23
  br i1 %114, label %83, label %115, !llvm.loop !57

115:                                              ; preds = %83, %71, %20, %80, %78, %73
  %116 = sub nsw i32 %9, %16
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %125, label %118

118:                                              ; preds = %115
  %119 = sext i32 %16 to i64
  %120 = getelementptr inbounds i16, i16* %12, i64 %119
  %121 = getelementptr inbounds i16, i16* %13, i64 %119
  %122 = getelementptr inbounds i8, i8* %11, i64 2
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  br label %8

125:                                              ; preds = %115
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #13

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nofree nounwind readonly }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = !{i32 (i32, i32)* @_ZL12xorAlphaProcjj, i32 (i32, i32)* @_ZL13diffAlphaProcjj, i32 (i32, i32)* @_ZL13sectAlphaProcjj, i32 (i32, i32)* @_ZL14unionAlphaProcjj}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZL18expand_row_to_maskPhPKhi: argument 1"}
!8 = distinct !{!8, !"_ZL18expand_row_to_maskPhPKhi"}
!9 = !{!10}
!10 = distinct !{!10, !8, !"_ZL18expand_row_to_maskPhPKhi: argument 0"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZL12expandToRunsPKhiiPsPh: argument 1"}
!13 = distinct !{!13, !"_ZL12expandToRunsPKhiiPsPh"}
!14 = !{!15, !16}
!15 = distinct !{!15, !13, !"_ZL12expandToRunsPKhiiPsPh: argument 0"}
!16 = distinct !{!16, !13, !"_ZL12expandToRunsPKhiiPsPh: argument 2"}
!17 = !{!15}
!18 = !{!12, !16}
!19 = !{!16}
!20 = !{!15, !12}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZL5mergePKhiS0_PKsPhPsi: argument 2"}
!23 = distinct !{!23, !"_ZL5mergePKhiS0_PKsPhPsi"}
!24 = !{!25, !26, !27, !28}
!25 = distinct !{!25, !23, !"_ZL5mergePKhiS0_PKsPhPsi: argument 0"}
!26 = distinct !{!26, !23, !"_ZL5mergePKhiS0_PKsPhPsi: argument 1"}
!27 = distinct !{!27, !23, !"_ZL5mergePKhiS0_PKsPhPsi: argument 3"}
!28 = distinct !{!28, !23, !"_ZL5mergePKhiS0_PKsPhPsi: argument 4"}
!29 = !{!25}
!30 = !{!26, !22, !27, !28}
!31 = !{!26}
!32 = !{!25, !22, !27, !28}
!33 = !{!28}
!34 = !{!25, !26, !22, !27}
!35 = !{!27}
!36 = !{!25, !26, !22, !28}
!37 = !{!38}
!38 = distinct !{!38, !39}
!39 = distinct !{!39, !"LVerDomain"}
!40 = distinct !{!40, !41}
!41 = !{!"llvm.loop.isvectorized", i32 1}
!42 = distinct !{!42, !41}
!43 = !{void (i8*, i32, i8*, i32, i8*)* @_Z6mergeTIhEvPKviPKhiPv, void (i8*, i32, i8*, i32, i8*)* @_Z6mergeTItEvPKviPKhiPv}
!44 = !{!45}
!45 = distinct !{!45, !46}
!46 = distinct !{!46, !"LVerDomain"}
!47 = !{!48}
!48 = distinct !{!48, !46}
!49 = distinct !{!49, !41}
!50 = distinct !{!50, !41}
!51 = !{!52}
!52 = distinct !{!52, !53}
!53 = distinct !{!53, !"LVerDomain"}
!54 = !{!55}
!55 = distinct !{!55, !53}
!56 = distinct !{!56, !41}
!57 = distinct !{!57, !41}
