; ModuleID = '../../native_client/src/trusted/desc/nacl_desc_invalid.c'
source_filename = "../../native_client/src/trusted/desc/nacl_desc_invalid.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClMutex = type { %union.pthread_mutex_t, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%struct.NaClDescInvalid = type { %struct.NaClDesc }
%struct.NaClDesc = type { %struct.NaClRefCount, i32, i32, i32, i8* }
%struct.NaClRefCount = type { %struct.NaClRefCountVtbl*, %struct.NaClFastMutex, i64 }
%struct.NaClRefCountVtbl = type { void (%struct.NaClRefCount*)* }
%struct.NaClFastMutex = type { %union.pthread_mutex_t }
%struct.NaClDescVtbl = type { %struct.NaClRefCountVtbl, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i64 (%struct.NaClDesc*, i64, i32)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i64 (%struct.NaClDesc*, i8*, i64, i64)*, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i64)*, i64 (%struct.NaClDesc*, i8*, i64)*, i32 (%struct.NaClDesc*, i64*, i64*)*, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*)*, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*, %struct.NaClDesc**)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*, i32, i32, i8*)*, i32 (%struct.NaClDesc*, i32*, i8*)*, void (%struct.NaClDesc*, i32)*, i32 (%struct.NaClDesc*)*, i32 (%struct.NaClDesc*)*, i32 }
%struct.NaClDescEffector = type opaque
%struct.nacl_abi_stat = type opaque
%struct.NaClDescXferState = type { i8*, i8*, i32*, i32* }
%struct.nacl_abi_timespec = type { i64, i32 }
%struct.NaClImcTypedMsgHdr = type opaque
%struct.NaClMessageHeader = type { %struct.NaClIOVec*, i32, i32*, i32, i32 }
%struct.NaClIOVec = type { i8*, i64 }

@mutex = internal unnamed_addr global %struct.NaClMutex* null, align 8
@.str = private unnamed_addr constant [39 x i8] c"Cannot allocate NaClDescInvalid mutex\0A\00", align 1
@.str.1 = private unnamed_addr constant [40 x i8] c"Cannot construct NaClDescInvalid mutex\0A\00", align 1
@singleton = internal unnamed_addr global %struct.NaClDescInvalid* null, align 8
@kNaClDescInvalidVtbl = internal constant %struct.NaClDescVtbl { %struct.NaClRefCountVtbl { void (%struct.NaClRefCount*)* @NaClDescDtorNotImplemented }, i64 (%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64)* @NaClDescMapNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescWriteNotImplemented, i64 (%struct.NaClDesc*, i64, i32)* @NaClDescSeekNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPReadNotImplemented, i64 (%struct.NaClDesc*, i8*, i64, i64)* @NaClDescPWriteNotImplemented, i32 (%struct.NaClDesc*, %struct.nacl_abi_stat*)* @NaClDescFstatNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFchdirNotImplemented, i32 (%struct.NaClDesc*, i32)* @NaClDescFchmodNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFsyncNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescFdatasyncNotImplemented, i32 (%struct.NaClDesc*, i64)* @NaClDescFtruncateNotImplemented, i64 (%struct.NaClDesc*, i8*, i64)* @NaClDescGetdentsNotImplemented, i32 (%struct.NaClDesc*, i64*, i64*)* @NaClDescInvalidExternalizeSize, i32 (%struct.NaClDesc*, %struct.NaClDescXferState*)* @NaClDescInvalidExternalize, i32 (%struct.NaClDesc*)* @NaClDescLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescTryLockNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescUnlockNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*)* @NaClDescWaitNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*)* @NaClDescTimedWaitAbsNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSignalNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescBroadcastNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32)* @NaClDescRecvMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelSendMsgNotImplemented, i64 (%struct.NaClDesc*, %struct.NaClMessageHeader*, i32)* @NaClDescLowLevelRecvMsgNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescConnectAddrNotImplemented, i32 (%struct.NaClDesc*, %struct.NaClDesc**)* @NaClDescAcceptConnNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescPostNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescSemWaitNotImplemented, i32 (%struct.NaClDesc*)* @NaClDescGetValueNotImplemented, i32 (%struct.NaClDesc*, i32, i32, i8*)* @NaClDescSetMetadata, i32 (%struct.NaClDesc*, i32*, i8*)* @NaClDescGetMetadata, void (%struct.NaClDesc*, i32)* @NaClDescSetFlags, i32 (%struct.NaClDesc*)* @NaClDescGetFlags, i32 (%struct.NaClDesc*)* @NaClDescIsattyNotImplemented, i32 0 }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClDescInvalidInit() local_unnamed_addr #0 {
  %1 = tail call noalias i8* @malloc(i64 48) #6
  store i8* %1, i8** bitcast (%struct.NaClMutex** @mutex to i8**), align 8
  %2 = icmp eq i8* %1, null
  %3 = bitcast i8* %1 to %struct.NaClMutex*
  br i1 %2, label %4, label %6

4:                                                ; preds = %0
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0)) #6
  %5 = load %struct.NaClMutex*, %struct.NaClMutex** @mutex, align 8
  br label %6

6:                                                ; preds = %4, %0
  %7 = phi %struct.NaClMutex* [ %5, %4 ], [ %3, %0 ]
  %8 = tail call i32 @NaClMutexCtor(%struct.NaClMutex* %7) #6
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %6
  %11 = load i8*, i8** bitcast (%struct.NaClMutex** @mutex to i8**), align 8
  tail call void @free(i8* %11) #6
  store %struct.NaClMutex* null, %struct.NaClMutex** @mutex, align 8
  tail call void (i32, i8*, ...) @NaClLog(i32 -4, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.1, i64 0, i64 0)) #6
  br label %12

12:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #2

declare i32 @NaClMutexCtor(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClDescInvalidFini() local_unnamed_addr #0 {
  %1 = load %struct.NaClMutex*, %struct.NaClMutex** @mutex, align 8
  %2 = icmp eq %struct.NaClMutex* %1, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %0
  tail call void @NaClMutexDtor(%struct.NaClMutex* nonnull %1) #6
  %4 = load i8*, i8** bitcast (%struct.NaClMutex** @mutex to i8**), align 8
  tail call void @free(i8* %4) #6
  store %struct.NaClMutex* null, %struct.NaClMutex** @mutex, align 8
  br label %5

5:                                                ; preds = %0, %3
  ret void
}

declare void @NaClMutexDtor(%struct.NaClMutex*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.NaClDescInvalid* @NaClDescInvalidMake() local_unnamed_addr #0 {
  %1 = load %struct.NaClMutex*, %struct.NaClMutex** @mutex, align 8
  tail call void @NaClXMutexLock(%struct.NaClMutex* %1) #6
  %2 = load %struct.NaClDescInvalid*, %struct.NaClDescInvalid** @singleton, align 8
  %3 = icmp eq %struct.NaClDescInvalid* %2, null
  br i1 %3, label %4, label %16

4:                                                ; preds = %0
  %5 = tail call noalias i8* @malloc(i64 80) #6
  store i8* %5, i8** bitcast (%struct.NaClDescInvalid** @singleton to i8**), align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %16, label %7

7:                                                ; preds = %4
  %8 = bitcast i8* %5 to %struct.NaClDesc*
  %9 = tail call i32 @NaClDescCtor(%struct.NaClDesc* nonnull %8) #6
  %10 = icmp eq i32 %9, 0
  %11 = load %struct.NaClDescInvalid*, %struct.NaClDescInvalid** @singleton, align 8
  br i1 %10, label %12, label %14

12:                                               ; preds = %7
  %13 = bitcast %struct.NaClDescInvalid* %11 to i8*
  tail call void @free(i8* %13) #6
  store %struct.NaClDescInvalid* null, %struct.NaClDescInvalid** @singleton, align 8
  br label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds %struct.NaClDescInvalid, %struct.NaClDescInvalid* %11, i64 0, i32 0, i32 0, i32 0
  store %struct.NaClRefCountVtbl* getelementptr inbounds (%struct.NaClDescVtbl, %struct.NaClDescVtbl* @kNaClDescInvalidVtbl, i64 0, i32 0), %struct.NaClRefCountVtbl** %15, align 8
  br label %16

16:                                               ; preds = %12, %14, %4, %0
  %17 = load %struct.NaClMutex*, %struct.NaClMutex** @mutex, align 8
  tail call void @NaClXMutexUnlock(%struct.NaClMutex* %17) #6
  %18 = load %struct.NaClDescInvalid*, %struct.NaClDescInvalid** @singleton, align 8
  %19 = icmp eq %struct.NaClDescInvalid* %18, null
  br i1 %19, label %24, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %struct.NaClDescInvalid, %struct.NaClDescInvalid* %18, i64 0, i32 0
  %22 = tail call %struct.NaClDesc* @NaClDescRef(%struct.NaClDesc* %21) #6
  %23 = bitcast %struct.NaClDesc* %22 to %struct.NaClDescInvalid*
  br label %24

24:                                               ; preds = %16, %20
  %25 = phi %struct.NaClDescInvalid* [ %23, %20 ], [ null, %16 ]
  ret %struct.NaClDescInvalid* %25
}

declare void @NaClXMutexLock(%struct.NaClMutex*) local_unnamed_addr #2

declare i32 @NaClDescCtor(%struct.NaClDesc*) local_unnamed_addr #2

declare void @NaClXMutexUnlock(%struct.NaClMutex*) local_unnamed_addr #2

declare %struct.NaClDesc* @NaClDescRef(%struct.NaClDesc*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClDescInvalidInternalize(%struct.NaClDesc** nocapture, %struct.NaClDescXferState* nocapture readnone) local_unnamed_addr #0 {
  %3 = tail call %struct.NaClDescInvalid* @NaClDescInvalidMake()
  %4 = getelementptr inbounds %struct.NaClDescInvalid, %struct.NaClDescInvalid* %3, i64 0, i32 0
  store %struct.NaClDesc* %4, %struct.NaClDesc** %0, align 8
  ret i32 0
}

declare void @NaClDescDtorNotImplemented(%struct.NaClRefCount*) #2

declare i64 @NaClDescMapNotImplemented(%struct.NaClDesc*, %struct.NaClDescEffector*, i8*, i64, i32, i32, i64) #2

declare i64 @NaClDescReadNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescWriteNotImplemented(%struct.NaClDesc*, i8*, i64) #2

declare i64 @NaClDescSeekNotImplemented(%struct.NaClDesc*, i64, i32) #2

declare i64 @NaClDescPReadNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i64 @NaClDescPWriteNotImplemented(%struct.NaClDesc*, i8*, i64, i64) #2

declare i32 @NaClDescFstatNotImplemented(%struct.NaClDesc*, %struct.nacl_abi_stat*) #2

declare i32 @NaClDescFchdirNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFchmodNotImplemented(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescFsyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFdatasyncNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescFtruncateNotImplemented(%struct.NaClDesc*, i64) #2

declare i64 @NaClDescGetdentsNotImplemented(%struct.NaClDesc*, i8*, i64) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define internal i32 @NaClDescInvalidExternalizeSize(%struct.NaClDesc* nocapture readnone, i64* nocapture, i64* nocapture) #4 {
  store i64 0, i64* %1, align 8
  store i64 0, i64* %2, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal i32 @NaClDescInvalidExternalize(%struct.NaClDesc* nocapture readnone, %struct.NaClDescXferState* nocapture readnone) #5 {
  ret i32 0
}

declare i32 @NaClDescLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescTryLockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescUnlockNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescWaitNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*) #2

declare i32 @NaClDescTimedWaitAbsNotImplemented(%struct.NaClDesc*, %struct.NaClDesc*, %struct.nacl_abi_timespec*) #2

declare i32 @NaClDescSignalNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescBroadcastNotImplemented(%struct.NaClDesc*) #2

declare i64 @NaClDescSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClImcTypedMsgHdr*, i32) #2

declare i64 @NaClDescLowLevelSendMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i64 @NaClDescLowLevelRecvMsgNotImplemented(%struct.NaClDesc*, %struct.NaClMessageHeader*, i32) #2

declare i32 @NaClDescConnectAddrNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescAcceptConnNotImplemented(%struct.NaClDesc*, %struct.NaClDesc**) #2

declare i32 @NaClDescPostNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSemWaitNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescGetValueNotImplemented(%struct.NaClDesc*) #2

declare i32 @NaClDescSetMetadata(%struct.NaClDesc*, i32, i32, i8*) #2

declare i32 @NaClDescGetMetadata(%struct.NaClDesc*, i32*, i8*) #2

declare void @NaClDescSetFlags(%struct.NaClDesc*, i32) #2

declare i32 @NaClDescGetFlags(%struct.NaClDesc*) #2

declare i32 @NaClDescIsattyNotImplemented(%struct.NaClDesc*) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
