; ModuleID = 'gen/third_party/blink/public/mojom/leak_detector/leak_detector.mojom-shared.cc'
source_filename = "gen/third_party/blink/public/mojom/leak_detector/leak_detector.mojom-shared.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::internal::LeakDetectionResult_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data" = type { %"struct.mojo::internal::StructHeader" }
%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.2", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.0"*, %"class.mojo::ScopedHandleBase.0"*, %"class.std::__1::__compressed_pair" }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.mojo::ScopedHandleBase.0"* }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.4" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.9 }
%class.scoped_refptr.9 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.13, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.15", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.12", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.13 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.14" }>
%"class.base::RefCountedThreadSafe.14" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__atomic_base.17" }
%"struct.std::__1::__atomic_base.17" = type { %"struct.std::__1::__cxx_atomic_impl.18" }
%"struct.std::__1::__cxx_atomic_impl.18" = type { %"struct.std::__1::__cxx_atomic_base_impl.19" }
%"struct.std::__1::__cxx_atomic_base_impl.19" = type { i32 }

@_ZN5blink5mojom8internal24LeakDetectionResult_DataC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::internal::LeakDetectionResult_Data"*), void (%"class.blink::mojom::internal::LeakDetectionResult_Data"*)* @_ZN5blink5mojom8internal24LeakDetectionResult_DataC2Ev
@_ZN5blink5mojom8internal45LeakDetector_PerformLeakDetection_Params_DataC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data"*), void (%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data"*)* @_ZN5blink5mojom8internal45LeakDetector_PerformLeakDetection_Params_DataC2Ev
@_ZN5blink5mojom8internal53LeakDetector_PerformLeakDetection_ResponseParams_DataC1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data"*), void (%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data"*)* @_ZN5blink5mojom8internal53LeakDetector_PerformLeakDetection_ResponseParams_DataC2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom8internal24LeakDetectionResult_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4mojo8internal52ValidateUnversionedStructHeaderAndSizeAndClaimMemoryEPKvmPNS0_17ValidationContextE(i8* nonnull %0, i64 56, %"class.mojo::internal::ValidationContext"* %1) #3
  br label %6

6:                                                ; preds = %4, %2
  %7 = phi i1 [ true, %2 ], [ %5, %4 ]
  ret i1 %7
}

declare zeroext i1 @_ZN4mojo8internal52ValidateUnversionedStructHeaderAndSizeAndClaimMemoryEPKvmPNS0_17ValidationContextE(i8*, i64, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom8internal24LeakDetectionResult_DataC2Ev(%"class.blink::mojom::internal::LeakDetectionResult_Data"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetectionResult_Data", %"class.blink::mojom::internal::LeakDetectionResult_Data"* %0, i64 0, i32 0, i32 0
  store i32 56, i32* %2, align 1
  %3 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetectionResult_Data", %"class.blink::mojom::internal::LeakDetectionResult_Data"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom8internal45LeakDetector_PerformLeakDetection_Params_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4mojo8internal52ValidateUnversionedStructHeaderAndSizeAndClaimMemoryEPKvmPNS0_17ValidationContextE(i8* nonnull %0, i64 8, %"class.mojo::internal::ValidationContext"* %1) #3
  br label %6

6:                                                ; preds = %4, %2
  %7 = phi i1 [ true, %2 ], [ %5, %4 ]
  ret i1 %7
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom8internal45LeakDetector_PerformLeakDetection_Params_DataC2Ev(%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data", %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data"* %0, i64 0, i32 0, i32 0
  store i32 8, i32* %2, align 1
  %3 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data", %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_Params_Data"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink5mojom8internal53LeakDetector_PerformLeakDetection_ResponseParams_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i8* %0, null
  br i1 %3, label %40, label %4

4:                                                ; preds = %2
  %5 = tail call zeroext i1 @_ZN4mojo8internal52ValidateUnversionedStructHeaderAndSizeAndClaimMemoryEPKvmPNS0_17ValidationContextE(i8* nonnull %0, i64 16, %"class.mojo::internal::ValidationContext"* %1) #3
  br i1 %5, label %6, label %40

6:                                                ; preds = %4
  %7 = getelementptr inbounds i8, i8* %0, i64 8
  %8 = bitcast i8* %7 to i64*
  %9 = load i64, i64* %8, align 1
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %6
  tail call void @_ZN4mojo8internal32ReportNonNullableValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEi(%"class.mojo::internal::ValidationContext"* %1, i32 8, i32 1) #3
  br label %40

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.mojo::internal::ValidationContext", %"class.mojo::internal::ValidationContext"* %1, i64 0, i32 10
  %14 = load i32, i32* %13, align 8
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* %13, align 8
  %16 = icmp sgt i32 %14, 199
  br i1 %16, label %31, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %8, align 8
  %19 = icmp ugt i64 %18, 4294967295
  br i1 %19, label %31, label %20

20:                                               ; preds = %17
  %21 = ptrtoint i8* %7 to i64
  %22 = and i64 %18, 4294967295
  %23 = xor i64 %21, -1
  %24 = icmp ugt i64 %22, %23
  br i1 %24, label %31, label %25

25:                                               ; preds = %20
  %26 = icmp eq i64 %18, 0
  %27 = getelementptr inbounds i8, i8* %7, i64 %18
  %28 = icmp eq i8* %27, null
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %35

30:                                               ; preds = %25
  store i32 %14, i32* %13, align 8
  br label %39

31:                                               ; preds = %17, %20, %12
  %32 = phi i32 [ 18, %12 ], [ 7, %20 ], [ 7, %17 ]
  tail call void @_ZN4mojo8internal21ReportValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEPKc(%"class.mojo::internal::ValidationContext"* %1, i32 %32, i8* null) #3
  %33 = load i32, i32* %13, align 8
  %34 = add nsw i32 %33, -1
  store i32 %34, i32* %13, align 8
  br label %40

35:                                               ; preds = %25
  %36 = tail call zeroext i1 @_ZN4mojo8internal52ValidateUnversionedStructHeaderAndSizeAndClaimMemoryEPKvmPNS0_17ValidationContextE(i8* nonnull %27, i64 56, %"class.mojo::internal::ValidationContext"* %1) #3
  %37 = load i32, i32* %13, align 8
  %38 = add nsw i32 %37, -1
  store i32 %38, i32* %13, align 8
  br i1 %36, label %39, label %40

39:                                               ; preds = %30, %35
  br label %40

40:                                               ; preds = %39, %35, %31, %11, %4, %2
  %41 = phi i1 [ true, %2 ], [ false, %4 ], [ false, %11 ], [ true, %39 ], [ false, %35 ], [ false, %31 ]
  ret i1 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom8internal53LeakDetector_PerformLeakDetection_ResponseParams_DataC2Ev(%"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data"* nocapture) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data", %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data"* %0, i64 0, i32 0, i32 0
  store i32 16, i32* %2, align 1
  %3 = getelementptr inbounds %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data", %"class.blink::mojom::internal::LeakDetector_PerformLeakDetection_ResponseParams_Data"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %3, align 1
  ret void
}

declare void @_ZN4mojo8internal32ReportNonNullableValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEi(%"class.mojo::internal::ValidationContext"*, i32, i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal21ReportValidationErrorEPNS0_17ValidationContextENS0_15ValidationErrorEPKc(%"class.mojo::internal::ValidationContext"*, i32, i8*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
