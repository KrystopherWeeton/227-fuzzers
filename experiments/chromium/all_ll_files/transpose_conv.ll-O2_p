; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/transpose_conv.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/transpose_conv.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteRegistration = type { {}*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.ruy::KernelParamsFloat" = type <{ float*, float*, float*, float*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i8, [3 x i8], [16 x float], [256 x float], [4 x i8] }>
%"struct.ruy::KernelParamsFloat.37" = type <{ float*, float*, float*, float*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, i8, [3 x i8], [8 x float], [64 x float], [4 x i8] }>
%"struct.tflite::PaddingValues" = type { i16, i16, i16, i16 }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::TransposeParams" = type { i8, [5 x i32] }
%struct.TfLiteTransposeConvParams = type { i32, i32, i32 }
%"struct.tflite::ops::builtin::transpose_conv::OpData" = type <{ i32, i32, i32, i32, i32, i32, %struct.TfLitePaddingValues, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector", i32, i32, i8, i8, [6 x i8] }>
%struct.TfLitePaddingValues = type { i32, i32, i32, i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"struct.tflite::ConvParams" = type { i8, %"struct.tflite::PaddingValues", i16, i16, i16, i16, i32, i32, i32, i32, i32, i32, i32, float, float }
%struct.TfLiteAffineQuantization = type { %struct.TfLiteFloatArray*, %struct.TfLiteIntArray*, i32 }
%struct.TfLiteFloatArray = type { i32, [0 x float] }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.tflite::CpuBackendContext" = type <{ %"class.tflite::TfLiteInternalBackendContext", %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr.9", i32, i8, [3 x i8] }>
%"class.tflite::TfLiteInternalBackendContext" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.ruy::Context"* }
%"class.ruy::Context" = type { %"class.ruy::CtxImpl"* }
%"class.ruy::CtxImpl" = type opaque
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.gemmlowp::GemmContext"* }
%"class.gemmlowp::GemmContext" = type { %"class.gemmlowp::MultiThreadGemmContext" }
%"class.gemmlowp::MultiThreadGemmContext" = type { %"class.gemmlowp::MultiThreadGemmContextBase", %"class.gemmlowp::WorkersPool" }
%"class.gemmlowp::MultiThreadGemmContextBase" = type { %"class.gemmlowp::SingleThreadGemmContext.base", i32 }
%"class.gemmlowp::SingleThreadGemmContext.base" = type <{ %"class.gemmlowp::Allocator", i32, i32, float }>
%"class.gemmlowp::Allocator" = type { i8, i64, i8*, i64, i64, [5 x i64], i64 }
%"class.gemmlowp::WorkersPool" = type { %"class.std::__1::vector.12", %"class.gemmlowp::BlockingCounter", %"class.gemmlowp::Allocator" }
%"class.std::__1::vector.12" = type { %"class.std::__1::__vector_base.13" }
%"class.std::__1::__vector_base.13" = type { %"class.gemmlowp::Worker"**, %"class.gemmlowp::Worker"**, %"class.std::__1::__compressed_pair.22" }
%"class.gemmlowp::Worker" = type { i64, %"struct.gemmlowp::Task"*, %union.pthread_cond_t, %union.pthread_mutex_t, %"struct.std::__1::atomic", %"class.gemmlowp::Allocator", %"class.gemmlowp::BlockingCounter"* }
%"struct.gemmlowp::Task" = type { i32 (...)**, %"class.gemmlowp::Allocator"* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.14, %union.anon.15, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.14 = type { i64 }
%union.anon.15 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::__compressed_pair.22" = type { %"struct.std::__1::__compressed_pair_elem.23" }
%"struct.std::__1::__compressed_pair_elem.23" = type { %"class.gemmlowp::Worker"** }
%"class.gemmlowp::BlockingCounter" = type { %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i64 }
%"struct.tflite::cpu_backend_gemm::MatrixParams" = type <{ i32, i32, i32, float, i8, [3 x i8] }>
%"struct.tflite::cpu_backend_gemm::GemmParams" = type { float, i32, float*, i32*, float*, float, float }
%"struct.ruy::Mat" = type <{ %"class.ruy::detail::ConstCheckingPtr", %"struct.ruy::MatLayout", float, i8, [3 x i8] }>
%"class.ruy::detail::ConstCheckingPtr" = type { float* }
%"struct.ruy::MatLayout" = type <{ i32, i32, i32, i8, [3 x i8] }>
%"class.ruy::MulParams" = type { float*, float, i32, float*, i32*, float, float }
%"class.ruy::Ctx" = type { i8 }
%"struct.ruy::TrMulParams" = type { i8, %"class.ruy::SidePair", void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)*, %"class.ruy::SidePair.32", %"struct.ruy::EMat", %"class.ruy::SidePair.30", %"class.ruy::SidePair.33", i8* }
%"class.ruy::SidePair" = type { [2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*] }
%"struct.ruy::PEMat" = type <{ %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Type" = type { i8, i8, i8 }
%"struct.ruy::PMatLayout" = type { i32, i32, i32, i8, %"struct.ruy::KernelLayout" }
%"struct.ruy::KernelLayout" = type { i8, i8, i8 }
%"class.ruy::SidePair.31" = type { [2 x i32] }
%"class.ruy::SidePair.32" = type { [2 x %"struct.ruy::EMat"] }
%"struct.ruy::EMat" = type <{ %"struct.ruy::Type", [5 x i8], i8*, %"struct.ruy::MatLayout", i32, i8, [3 x i8] }>
%"class.ruy::SidePair.30" = type { [2 x %"struct.ruy::PEMat"] }
%"class.ruy::SidePair.33" = type { [2 x i8] }
%"class.ruy::PrepackedCache" = type { %"class.std::__1::unordered_map", i32, i32, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.40", %"class.std::__1::__compressed_pair.49", %"class.std::__1::__compressed_pair.54", %"class.std::__1::__compressed_pair.56", [4 x i8] }>
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42", %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.43" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { i64 }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { float }
%"struct.ruy::PMat" = type <{ float*, float*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Kernel" = type { i8 }
%"struct.tflite::cpu_backend_gemm::MatrixParams.79" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.tflite::cpu_backend_gemm::MatrixParams.81" = type <{ i32, i32, i32, i32, i8, [3 x i8] }>
%"struct.tflite::cpu_backend_gemm::GemmParams.83" = type { i32, i32, i32*, i32*, i32*, i32, i32 }
%"struct.ruy::Mat.90" = type <{ %"class.ruy::detail::ConstCheckingPtr.86", %"struct.ruy::MatLayout", i8, i8, [6 x i8] }>
%"class.ruy::detail::ConstCheckingPtr.86" = type { i8* }
%"struct.ruy::Mat.91" = type <{ %"class.ruy::detail::ConstCheckingPtr.88", %"struct.ruy::MatLayout", i32, i8, [3 x i8] }>
%"class.ruy::detail::ConstCheckingPtr.88" = type { i32* }
%"class.ruy::MulParams.89" = type { i32*, i32, i32, i32*, i32*, i32, i32 }
%"struct.ruy::KernelParams8bit" = type <{ i32*, i32*, i32*, i8*, i32*, i32*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], [16 x i32], [1024 x i8], [16 x i32], [16 x i32], [4 x i8] }>
%"struct.ruy::PMat.92" = type <{ i8*, i32*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Kernel.93" = type { i8 }
%"struct.ruy::KernelParams8bit.98" = type <{ i32*, i32*, i32*, i8*, i32*, i32*, i8*, i8*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, [2 x i8], [8 x i32], [256 x i8], [8 x i32], [8 x i32], [4 x i8] }>
%"struct.tflite::cpu_backend_gemm::MatrixParams.100" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"struct.ruy::Mat.105" = type <{ %"class.ruy::detail::ConstCheckingPtr.104", %"struct.ruy::MatLayout", i8, i8, [6 x i8] }>
%"class.ruy::detail::ConstCheckingPtr.104" = type { i8* }
%"struct.ruy::PMat.95" = type <{ i8*, i32*, %"struct.ruy::PMatLayout", i32, [4 x i8] }>
%"struct.ruy::Kernel.106" = type { i8 }

$_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops9TransposeIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKsS8_PKaS8_PKlS8_PsS8_PaPl = comdat any

$_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIhEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_ = comdat any

$_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_ = comdat any

$_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_ = comdat any

$_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_ = comdat any

$_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_SB_Pi = comdat any

$_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_SB_Pi = comdat any

$_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_ = comdat any

$_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_ = comdat any

$_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_ = comdat any

$_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_PNS_17CpuBackendContextE = comdat any

$_ZN6tflite13optimized_ops6Col2imIfEEvPKT_iiiiiiiiiiiPS2_ = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE = comdat any

$_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE = comdat any

$_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_PiSC_PNS_17CpuBackendContextE = comdat any

$_ZN6tflite13optimized_ops6Col2imIiEEvPKT_iiiiiiiiiiiPS2_ = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIhhiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIhEEPKhS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy17CreateTrMulParamsILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS4_IT2_EES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE16EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EhhiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhiE3RunENS_6TuningERKNS_3MatIhEEPNS_4PMatIhEEii = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EhhiNS_9MulParamsIiiEEE3RunERKNS_4PMatIhEES8_RKS3_iiiiPNS_3MatIiEE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN6tflite21optimized_integer_ops15TransposeConvV2ERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_PiSC_PNS_17CpuBackendContextE = comdat any

$_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE = comdat any

$_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE = comdat any

$_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

$_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE = comdat any

$_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii = comdat any

$_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE = comdat any

$_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE = comdat any

$_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE = comdat any

$_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii = comdat any

@.str = private unnamed_addr constant [31 x i8] c"Output shape is %s, not int32.\00", align 1
@.str.3 = private unnamed_addr constant [31 x i8] c"col2im shape is %s, not int32.\00", align 1
@.str.4 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.5 = private unnamed_addr constant [71 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/transpose_conv.cc\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"NumElements(output_shape)\00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"4\00", align 1
@.str.8 = private unnamed_addr constant [65 x i8] c"Only float32, uint8, int8, int16 is supported currently, got %s.\00", align 1
@_ZZN6tflite3ops7builtin26Register_TRANSPOSECONV_REFEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin14transpose_conv4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin14transpose_conv4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin34Register_TRANSPOSECONV_GENERIC_OPTEvE1r = internal global { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 } { i8* (%struct.TfLiteContext*, i8*, i64)* @_ZN6tflite3ops7builtin14transpose_conv4InitEP13TfLiteContextPKcm, void (%struct.TfLiteContext*, i8*)* @_ZN6tflite3ops7builtin14transpose_conv4FreeEP13TfLiteContextPv, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.11 = private unnamed_addr constant [23 x i8] c"%s:%d %s was not true.\00", align 1
@.str.12 = private unnamed_addr constant [33 x i8] c"has_bias || NumInputs(node) == 3\00", align 1
@.str.13 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.14 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.15 = private unnamed_addr constant [28 x i8] c"NumDimensions(output_shape)\00", align 1
@.str.16 = private unnamed_addr constant [21 x i8] c"NumDimensions(input)\00", align 1
@.str.17 = private unnamed_addr constant [23 x i8] c"NumDimensions(weights)\00", align 1
@.str.18 = private unnamed_addr constant [122 x i8] c"input->type == kTfLiteFloat32 || input->type == kTfLiteUInt8 || input->type == kTfLiteInt8 || input->type == kTfLiteInt16\00", align 1
@.str.19 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.20 = private unnamed_addr constant [11 x i8] c"bias->type\00", align 1
@.str.21 = private unnamed_addr constant [13 x i8] c"kTfLiteInt32\00", align 1
@.str.22 = private unnamed_addr constant [24 x i8] c"bias->params.zero_point\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.24 = private unnamed_addr constant [13 x i8] c"kTfLiteInt64\00", align 1
@.str.25 = private unnamed_addr constant [12 x i8] c"input->type\00", align 1
@.str.26 = private unnamed_addr constant [18 x i8] c"NumElements(bias)\00", align 1
@.str.27 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(weights, 0)\00", align 1
@.str.28 = private unnamed_addr constant [14 x i8] c"weights->type\00", align 1
@.str.29 = private unnamed_addr constant [12 x i8] c"kTfLiteInt8\00", align 1
@.str.30 = private unnamed_addr constant [25 x i8] c"input->params.zero_point\00", align 1
@.str.31 = private unnamed_addr constant [26 x i8] c"output->params.zero_point\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"output->type\00", align 1
@.str.33 = private unnamed_addr constant [26 x i8] c"SizeOfDimension(input, 3)\00", align 1
@.str.34 = private unnamed_addr constant [28 x i8] c"SizeOfDimension(weights, 3)\00", align 1
@.str.35 = private unnamed_addr constant [27 x i8] c"weights->quantization.type\00", align 1
@.str.36 = private unnamed_addr constant [26 x i8] c"kTfLiteAffineQuantization\00", align 1
@.str.37 = private unnamed_addr constant [20 x i8] c"affine_quantization\00", align 1
@.str.38 = private unnamed_addr constant [27 x i8] c"affine_quantization->scale\00", align 1
@.str.40 = private unnamed_addr constant [38 x i8] c"Type '%s' is not currently supported.\00", align 1
@_ZZN3ruy8PackImplILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf = internal constant [16 x float] zeroinitializer, align 16
@__const._ZNK3ruy6KernelILNS_4PathE16EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params = private unnamed_addr constant %"struct.ruy::KernelParamsFloat" <{ float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [16 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [256 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZZN3ruy8PackImplILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf = internal constant [8 x float] zeroinitializer, align 16
@__const._ZNK3ruy6KernelILNS_4PathE8EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params = private unnamed_addr constant %"struct.ruy::KernelParamsFloat.37" <{ float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", [8 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [64 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params = private unnamed_addr constant { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float } { i8 -86, [1 x i8] c"\AA", %"struct.tflite::PaddingValues" { i16 -21846, i16 -21846, i16 -21846, i16 -21846 }, i16 -21846, i16 -21846, i16 -21846, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, align 4
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull i8* @_ZN6tflite3ops7builtin14transpose_conv4InitEP13TfLiteContextPKcm(%struct.TfLiteContext*, i8* nocapture readnone, i64) #0 {
  %4 = tail call i8* @_Znwm(i64 112) #10
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %4, i64 4
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 4
  %8 = getelementptr inbounds i8, i8* %4, i64 8
  %9 = bitcast i8* %8 to i32*
  store i32 -1, i32* %9, align 8
  %10 = getelementptr inbounds i8, i8* %4, i64 48
  %11 = getelementptr inbounds i8, i8* %4, i64 104
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds i8, i8* %4, i64 105
  store i8 0, i8* %12, align 1
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 48, i1 false) #11
  tail call void @_ZN6tflite13eigen_support21IncrementUsageCounterEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  ret i8* %4
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

declare void @_ZN6tflite13eigen_support21IncrementUsageCounterEP13TfLiteContext(%struct.TfLiteContext*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin14transpose_conv4FreeEP13TfLiteContextPv(%struct.TfLiteContext*, i8*) #0 {
  tail call void @_ZN6tflite13eigen_support21DecrementUsageCounterEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 72
  %6 = bitcast i8* %5 to i32**
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %7, null
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = ptrtoint i32* %7 to i64
  %11 = getelementptr inbounds i8, i8* %1, i64 80
  %12 = bitcast i8* %11 to i64*
  store i64 %10, i64* %12, align 8
  %13 = bitcast i32* %7 to i8*
  tail call void @_ZdlPv(i8* %13) #10
  br label %14

14:                                               ; preds = %9, %4
  %15 = getelementptr inbounds i8, i8* %1, i64 48
  %16 = bitcast i8* %15 to i32**
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %14
  %20 = ptrtoint i32* %17 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 56
  %22 = bitcast i8* %21 to i64*
  store i64 %20, i64* %22, align 8
  %23 = bitcast i32* %17 to i8*
  tail call void @_ZdlPv(i8* %23) #10
  br label %24

24:                                               ; preds = %14, %19
  tail call void @_ZdlPv(i8* nonnull %1) #10
  br label %25

25:                                               ; preds = %24, %2
  ret void
}

declare void @_ZN6tflite13eigen_support21DecrementUsageCounterEP13TfLiteContext(%struct.TfLiteContext*) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14transpose_conv12ResizeTensorEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 2
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %9 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %8, align 8
  %10 = tail call i8* @TfLiteTypeGetName(i32 %5) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %9(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %10) #11
  br label %129

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %13 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %12, align 8
  %14 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %15, 0
  br i1 %16, label %17, label %89

17:                                               ; preds = %11
  %18 = sext i32 %15 to i64
  %19 = add nsw i64 %18, -1
  %20 = and i64 %18, 7
  %21 = icmp ult i64 %19, 7
  br i1 %21, label %70, label %22

22:                                               ; preds = %17
  %23 = sub nsw i64 %18, %20
  br label %24

24:                                               ; preds = %24, %22
  %25 = phi i64 [ 0, %22 ], [ %67, %24 ]
  %26 = phi i64 [ 1, %22 ], [ %66, %24 ]
  %27 = phi i64 [ %23, %22 ], [ %68, %24 ]
  %28 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %25
  %29 = load i32, i32* %28, align 4
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %26, %30
  %32 = or i64 %25, 1
  %33 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %32
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %34 to i64
  %36 = mul nsw i64 %31, %35
  %37 = or i64 %25, 2
  %38 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = sext i32 %39 to i64
  %41 = mul nsw i64 %36, %40
  %42 = or i64 %25, 3
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %42
  %44 = load i32, i32* %43, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %41, %45
  %47 = or i64 %25, 4
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %46, %50
  %52 = or i64 %25, 5
  %53 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %52
  %54 = load i32, i32* %53, align 4
  %55 = sext i32 %54 to i64
  %56 = mul nsw i64 %51, %55
  %57 = or i64 %25, 6
  %58 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = sext i32 %59 to i64
  %61 = mul nsw i64 %56, %60
  %62 = or i64 %25, 7
  %63 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = sext i32 %64 to i64
  %66 = mul nsw i64 %61, %65
  %67 = add nuw nsw i64 %25, 8
  %68 = add i64 %27, -8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %24

70:                                               ; preds = %24, %17
  %71 = phi i64 [ undef, %17 ], [ %66, %24 ]
  %72 = phi i64 [ 0, %17 ], [ %67, %24 ]
  %73 = phi i64 [ 1, %17 ], [ %66, %24 ]
  %74 = icmp eq i64 %20, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %70, %75
  %76 = phi i64 [ %83, %75 ], [ %72, %70 ]
  %77 = phi i64 [ %82, %75 ], [ %73, %70 ]
  %78 = phi i64 [ %84, %75 ], [ %20, %70 ]
  %79 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %13, i64 0, i32 1, i64 %76
  %80 = load i32, i32* %79, align 4
  %81 = sext i32 %80 to i64
  %82 = mul nsw i64 %77, %81
  %83 = add nuw nsw i64 %76, 1
  %84 = add i64 %78, -1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %86, label %75, !llvm.loop !2

86:                                               ; preds = %75, %70
  %87 = phi i64 [ %71, %70 ], [ %82, %75 ]
  %88 = trunc i64 %87 to i32
  br label %89

89:                                               ; preds = %86, %11
  %90 = phi i32 [ 1, %11 ], [ %88, %86 ]
  %91 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %90) #11
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %93, 0
  br i1 %94, label %95, label %114

95:                                               ; preds = %89
  %96 = icmp eq %struct.TfLiteTensor* %1, null
  %97 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1, i32 0
  %98 = sext i32 %93 to i64
  %99 = and i64 %98, 1
  %100 = icmp eq i32 %93, 1
  br i1 %100, label %103, label %101

101:                                              ; preds = %95
  %102 = sub nsw i64 %98, %99
  br label %118

103:                                              ; preds = %133, %95
  %104 = phi i64 [ 0, %95 ], [ %138, %133 ]
  %105 = icmp eq i64 %99, 0
  br i1 %105, label %114, label %106

106:                                              ; preds = %103
  br i1 %96, label %109, label %107

107:                                              ; preds = %106
  %108 = load i32*, i32** %97, align 8
  br label %109

109:                                              ; preds = %107, %106
  %110 = phi i32* [ %108, %107 ], [ null, %106 ]
  %111 = getelementptr inbounds i32, i32* %110, i64 %104
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %104
  store i32 %112, i32* %113, align 4
  br label %114

114:                                              ; preds = %109, %103, %89
  %115 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %116 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %115, align 8
  %117 = tail call i32 %116(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %91) #11
  br label %129

118:                                              ; preds = %133, %101
  %119 = phi i64 [ 0, %101 ], [ %138, %133 ]
  %120 = phi i64 [ %102, %101 ], [ %139, %133 ]
  br i1 %96, label %123, label %121

121:                                              ; preds = %118
  %122 = load i32*, i32** %97, align 8
  br label %123

123:                                              ; preds = %118, %121
  %124 = phi i32* [ %122, %121 ], [ null, %118 ]
  %125 = getelementptr inbounds i32, i32* %124, i64 %119
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %119
  store i32 %126, i32* %127, align 4
  %128 = or i64 %119, 1
  br i1 %96, label %133, label %131

129:                                              ; preds = %114, %7
  %130 = phi i32 [ 1, %7 ], [ %117, %114 ]
  ret i32 %130

131:                                              ; preds = %123
  %132 = load i32*, i32** %97, align 8
  br label %133

133:                                              ; preds = %131, %123
  %134 = phi i32* [ %132, %131 ], [ null, %123 ]
  %135 = getelementptr inbounds i32, i32* %134, i64 %128
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %91, i64 0, i32 1, i64 %128
  store i32 %136, i32* %137, align 4
  %138 = add nuw nsw i64 %119, 2
  %139 = add i64 %120, -2
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %103, label %118
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #3

declare %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14transpose_conv18ResizeCol2ImTensorEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %15, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %13 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %12, align 8
  %14 = tail call i8* @TfLiteTypeGetName(i32 %9) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %13(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.3, i64 0, i64 0), i8* %14) #11
  br label %296

15:                                               ; preds = %5
  %16 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %17 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %16, align 8
  %18 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp sgt i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %23 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %22, align 8
  br label %166

24:                                               ; preds = %15
  %25 = sext i32 %19 to i64
  %26 = add nsw i64 %25, -1
  %27 = and i64 %25, 7
  %28 = icmp ult i64 %26, 7
  br i1 %28, label %77, label %29

29:                                               ; preds = %24
  %30 = sub nsw i64 %25, %27
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %74, %31 ]
  %33 = phi i64 [ 1, %29 ], [ %73, %31 ]
  %34 = phi i64 [ %30, %29 ], [ %75, %31 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %32
  %36 = load i32, i32* %35, align 4
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %33, %37
  %39 = or i64 %32, 1
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %39
  %41 = load i32, i32* %40, align 4
  %42 = sext i32 %41 to i64
  %43 = mul nsw i64 %38, %42
  %44 = or i64 %32, 2
  %45 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %44
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = mul nsw i64 %43, %47
  %49 = or i64 %32, 3
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %49
  %51 = load i32, i32* %50, align 4
  %52 = sext i32 %51 to i64
  %53 = mul nsw i64 %48, %52
  %54 = or i64 %32, 4
  %55 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %54
  %56 = load i32, i32* %55, align 4
  %57 = sext i32 %56 to i64
  %58 = mul nsw i64 %53, %57
  %59 = or i64 %32, 5
  %60 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %59
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = mul nsw i64 %58, %62
  %64 = or i64 %32, 6
  %65 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %64
  %66 = load i32, i32* %65, align 4
  %67 = sext i32 %66 to i64
  %68 = mul nsw i64 %63, %67
  %69 = or i64 %32, 7
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %69
  %71 = load i32, i32* %70, align 4
  %72 = sext i32 %71 to i64
  %73 = mul nsw i64 %68, %72
  %74 = add nuw nsw i64 %32, 8
  %75 = add i64 %34, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %31

77:                                               ; preds = %31, %24
  %78 = phi i64 [ undef, %24 ], [ %73, %31 ]
  %79 = phi i64 [ 0, %24 ], [ %74, %31 ]
  %80 = phi i64 [ 1, %24 ], [ %73, %31 ]
  %81 = icmp eq i64 %27, 0
  br i1 %81, label %93, label %82

82:                                               ; preds = %77, %82
  %83 = phi i64 [ %90, %82 ], [ %79, %77 ]
  %84 = phi i64 [ %89, %82 ], [ %80, %77 ]
  %85 = phi i64 [ %91, %82 ], [ %27, %77 ]
  %86 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %83
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = mul nsw i64 %84, %88
  %90 = add nuw nsw i64 %83, 1
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %82, !llvm.loop !4

93:                                               ; preds = %82, %77
  %94 = phi i64 [ %78, %77 ], [ %89, %82 ]
  %95 = icmp eq i64 %94, 4
  br i1 %95, label %169, label %96

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %98 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %97, align 8
  %99 = add nsw i64 %25, -1
  %100 = and i64 %25, 7
  %101 = icmp ult i64 %99, 7
  br i1 %101, label %150, label %102

102:                                              ; preds = %96
  %103 = sub nsw i64 %25, %100
  br label %104

104:                                              ; preds = %104, %102
  %105 = phi i64 [ 0, %102 ], [ %147, %104 ]
  %106 = phi i64 [ 1, %102 ], [ %146, %104 ]
  %107 = phi i64 [ %103, %102 ], [ %148, %104 ]
  %108 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %105
  %109 = load i32, i32* %108, align 4
  %110 = sext i32 %109 to i64
  %111 = mul nsw i64 %106, %110
  %112 = or i64 %105, 1
  %113 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %112
  %114 = load i32, i32* %113, align 4
  %115 = sext i32 %114 to i64
  %116 = mul nsw i64 %111, %115
  %117 = or i64 %105, 2
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %117
  %119 = load i32, i32* %118, align 4
  %120 = sext i32 %119 to i64
  %121 = mul nsw i64 %116, %120
  %122 = or i64 %105, 3
  %123 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %122
  %124 = load i32, i32* %123, align 4
  %125 = sext i32 %124 to i64
  %126 = mul nsw i64 %121, %125
  %127 = or i64 %105, 4
  %128 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = sext i32 %129 to i64
  %131 = mul nsw i64 %126, %130
  %132 = or i64 %105, 5
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %132
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %131, %135
  %137 = or i64 %105, 6
  %138 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %136, %140
  %142 = or i64 %105, 7
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %141, %145
  %147 = add nuw nsw i64 %105, 8
  %148 = add i64 %107, -8
  %149 = icmp eq i64 %148, 0
  br i1 %149, label %150, label %104

150:                                              ; preds = %104, %96
  %151 = phi i64 [ undef, %96 ], [ %146, %104 ]
  %152 = phi i64 [ 0, %96 ], [ %147, %104 ]
  %153 = phi i64 [ 1, %96 ], [ %146, %104 ]
  %154 = icmp eq i64 %100, 0
  br i1 %154, label %166, label %155

155:                                              ; preds = %150, %155
  %156 = phi i64 [ %163, %155 ], [ %152, %150 ]
  %157 = phi i64 [ %162, %155 ], [ %153, %150 ]
  %158 = phi i64 [ %164, %155 ], [ %100, %150 ]
  %159 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %17, i64 0, i32 1, i64 %156
  %160 = load i32, i32* %159, align 4
  %161 = sext i32 %160 to i64
  %162 = mul nsw i64 %157, %161
  %163 = add nuw nsw i64 %156, 1
  %164 = add i64 %158, -1
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %166, label %155, !llvm.loop !5

166:                                              ; preds = %150, %155, %21
  %167 = phi void (%struct.TfLiteContext*, i8*, ...)* [ %23, %21 ], [ %98, %155 ], [ %98, %150 ]
  %168 = phi i64 [ 1, %21 ], [ %151, %150 ], [ %162, %155 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %167(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 183, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i64 %168, i32 4) #11
  br label %296

169:                                              ; preds = %93
  %170 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 2) #11
  %171 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %171) #11
  %172 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %172, label %173, label %175

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %174, align 8, !alias.scope !6
  br label %200

175:                                              ; preds = %169
  %176 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %177 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %176, align 8, !noalias !6
  %178 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %177, i64 0, i32 0
  %179 = load i32, i32* %178, align 4, !noalias !6
  %180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %177, i64 0, i32 1, i64 0
  %181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %179, i32* %181, align 8, !alias.scope !6
  %182 = icmp sgt i32 %179, 5
  br i1 %182, label %183, label %190

183:                                              ; preds = %175
  %184 = sext i32 %179 to i64
  %185 = shl nsw i64 %184, 2
  %186 = tail call i8* @_Znam(i64 %185) #10, !noalias !6
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %188 = bitcast i32** %187 to i8**
  store i8* %186, i8** %188, align 8, !alias.scope !6
  %189 = bitcast i8* %186 to i32*
  br label %195

190:                                              ; preds = %175
  %191 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %192 = bitcast %union.anon* %191 to i32*
  %193 = sext i32 %179 to i64
  %194 = shl nsw i64 %193, 2
  br label %195

195:                                              ; preds = %190, %183
  %196 = phi i64 [ %185, %183 ], [ %194, %190 ]
  %197 = phi i32* [ %189, %183 ], [ %192, %190 ]
  %198 = bitcast i32* %197 to i8*
  %199 = bitcast i32* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %198, i8* align 4 %199, i64 %196, i1 false) #11
  br label %200

200:                                              ; preds = %173, %195
  %201 = phi i32 [ 0, %173 ], [ %179, %195 ]
  %202 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11
  %203 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %203, label %204, label %206

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %205, align 8, !alias.scope !9
  br label %232

206:                                              ; preds = %200
  %207 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %208 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %207, align 8, !noalias !9
  %209 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 0
  %210 = load i32, i32* %209, align 4, !noalias !9
  %211 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %208, i64 0, i32 1, i64 0
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %210, i32* %212, align 8, !alias.scope !9
  %213 = icmp sgt i32 %210, 5
  br i1 %213, label %214, label %221

214:                                              ; preds = %206
  %215 = sext i32 %210 to i64
  %216 = shl nsw i64 %215, 2
  %217 = tail call i8* @_Znam(i64 %216) #10, !noalias !9
  %218 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %219 = bitcast i32** %218 to i8**
  store i8* %217, i8** %219, align 8, !alias.scope !9
  %220 = bitcast i8* %217 to i32*
  br label %226

221:                                              ; preds = %206
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %223 = bitcast %union.anon* %222 to i32*
  %224 = sext i32 %210 to i64
  %225 = shl nsw i64 %224, 2
  br label %226

226:                                              ; preds = %221, %214
  %227 = phi i64 [ %216, %214 ], [ %225, %221 ]
  %228 = phi i32* [ %220, %214 ], [ %223, %221 ]
  %229 = bitcast i32* %228 to i8*
  %230 = bitcast i32* %211 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %229, i8* align 4 %230, i64 %227, i1 false) #11
  %231 = icmp sgt i32 %210, 5
  br label %232

232:                                              ; preds = %204, %226
  %233 = phi i1 [ false, %204 ], [ %231, %226 ]
  %234 = icmp sgt i32 %201, 5
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %236 = getelementptr inbounds %union.anon, %union.anon* %235, i64 0, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = getelementptr inbounds i32, i32* %237, i64 1
  %239 = getelementptr inbounds i32, i32* %237, i64 2
  %240 = bitcast %union.anon* %235 to [5 x i32]*
  %241 = getelementptr inbounds [5 x i32], [5 x i32]* %240, i64 0, i64 1
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 1
  %243 = bitcast [16 x i8]* %242 to i32*
  %244 = select i1 %234, i32* %238, i32* %241
  %245 = select i1 %234, i32* %239, i32* %243
  %246 = load i32, i32* %244, align 4
  %247 = load i32, i32* %245, align 4
  %248 = mul nsw i32 %247, %246
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 0
  store i32 %248, i32* %249, align 4
  %250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  br i1 %233, label %251, label %259

251:                                              ; preds = %232
  %252 = getelementptr inbounds %union.anon, %union.anon* %250, i64 0, i32 0
  %253 = load i32*, i32** %252, align 8
  %254 = load i32, i32* %253, align 4
  %255 = getelementptr inbounds i32, i32* %253, i64 1
  %256 = load i32, i32* %255, align 4
  %257 = mul nsw i32 %256, %254
  %258 = getelementptr inbounds i32, i32* %253, i64 2
  br label %268

259:                                              ; preds = %232
  %260 = bitcast %union.anon* %250 to i32*
  %261 = load i32, i32* %260, align 8
  %262 = bitcast %union.anon* %250 to [5 x i32]*
  %263 = getelementptr inbounds [5 x i32], [5 x i32]* %262, i64 0, i64 1
  %264 = load i32, i32* %263, align 4
  %265 = mul nsw i32 %264, %261
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %267 = bitcast [16 x i8]* %266 to i32*
  br label %268

268:                                              ; preds = %251, %259
  %269 = phi i32 [ %257, %251 ], [ %265, %259 ]
  %270 = phi i32* [ %258, %251 ], [ %267, %259 ]
  %271 = load i32, i32* %270, align 4
  %272 = mul nsw i32 %271, %269
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %170, i64 0, i32 1, i64 1
  store i32 %272, i32* %273, align 4
  %274 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp eq i32 %275, 1
  %277 = select i1 %276, i32 1, i32 2
  %278 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 0
  store i32 %277, i32* %278, align 8
  %279 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 4
  store i32 4, i32* %279, align 8
  %280 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %281 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %280, align 8
  %282 = tail call i32 %281(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %4, %struct.TfLiteIntArray* %170) #11
  br i1 %233, label %283, label %289

283:                                              ; preds = %268
  %284 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %285 = load i32*, i32** %284, align 8
  %286 = icmp eq i32* %285, null
  br i1 %286, label %289, label %287

287:                                              ; preds = %283
  %288 = bitcast i32* %285 to i8*
  tail call void @_ZdaPv(i8* %288) #10
  br label %289

289:                                              ; preds = %268, %283, %287
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #11
  %290 = xor i1 %234, true
  %291 = icmp eq i32* %237, null
  %292 = or i1 %291, %290
  br i1 %292, label %295, label %293

293:                                              ; preds = %289
  %294 = bitcast i32* %237 to i8*
  tail call void @_ZdaPv(i8* %294) #10
  br label %295

295:                                              ; preds = %289, %293
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %171) #11
  br label %296

296:                                              ; preds = %295, %166, %11
  %297 = phi i32 [ 1, %11 ], [ 1, %166 ], [ %282, %295 ]
  ret i32 %297
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext*, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor*) local_unnamed_addr #0 {
  %4 = alloca %"class.tflite::RuntimeShape", align 8
  %5 = alloca %"struct.tflite::TransposeParams", align 4
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 4) #11
  %10 = bitcast %"class.tflite::RuntimeShape"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #11
  %11 = icmp eq %struct.TfLiteTensor* %1, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 0, i32* %13, align 8, !alias.scope !12
  br label %50

14:                                               ; preds = %3
  %15 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 2
  %16 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %15, align 8, !noalias !12
  %17 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 0
  %18 = load i32, i32* %17, align 4, !noalias !12
  %19 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %16, i64 0, i32 1, i64 0
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  store i32 %18, i32* %20, align 8, !alias.scope !12
  %21 = icmp sgt i32 %18, 5
  br i1 %21, label %28, label %22

22:                                               ; preds = %14
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %24 = sext i32 %18 to i64
  %25 = shl nsw i64 %24, 2
  %26 = bitcast %union.anon* %23 to i8*
  %27 = bitcast i32* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 %25, i1 false) #11
  br label %50

28:                                               ; preds = %14
  %29 = sext i32 %18 to i64
  %30 = shl nsw i64 %29, 2
  %31 = tail call i8* @_Znam(i64 %30) #10, !noalias !12
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %33 = bitcast i32** %32 to i8**
  store i8* %31, i8** %33, align 8, !alias.scope !12
  %34 = bitcast i32* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %31, i8* align 4 %34, i64 %30, i1 false) #11
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %36 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds i8, i8* %31, i64 4
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  store i32 %39, i32* %40, align 4
  %41 = load i32*, i32** %36, align 8
  %42 = getelementptr inbounds i32, i32* %41, i64 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 1
  store i32 %43, i32* %44, align 4
  %45 = load i32*, i32** %36, align 8
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 2
  store i32 %46, i32* %47, align 4
  %48 = load i32*, i32** %36, align 8
  %49 = getelementptr inbounds i32, i32* %48, i64 3
  br label %67

50:                                               ; preds = %22, %12
  %51 = phi i32 [ 0, %12 ], [ %18, %22 ]
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 0
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1
  %54 = bitcast %union.anon* %53 to [5 x i32]*
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %54, i64 0, i64 1
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 0
  store i32 %56, i32* %57, align 4
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = load i32, i32* %59, align 8
  %61 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 1
  store i32 %60, i32* %61, align 4
  %62 = bitcast %union.anon* %53 to i32*
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 2
  store i32 %63, i32* %64, align 4
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 1, i64 4
  %66 = bitcast i8* %65 to i32*
  br label %67

67:                                               ; preds = %28, %50
  %68 = phi i32* [ %35, %28 ], [ %52, %50 ]
  %69 = phi i32 [ %18, %28 ], [ %51, %50 ]
  %70 = phi i32* [ %49, %28 ], [ %66, %50 ]
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %9, i64 0, i32 1, i64 3
  store i32 %71, i32* %72, align 4
  %73 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 0
  %74 = load i32, i32* %73, align 8
  %75 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 0
  store i32 %74, i32* %75, align 8
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 4
  store i32 4, i32* %76, align 8
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %78 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %77, align 8
  %79 = tail call i32 %78(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %2, %struct.TfLiteIntArray* %9) #11
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %246

81:                                               ; preds = %67
  %82 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %82, i8 -86, i64 24, i1 false)
  store i8 4, i8* %82, align 4
  %83 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %5, i64 0, i32 1, i64 0
  %84 = bitcast i32* %83 to <4 x i32>*
  store <4 x i32> <i32 1, i32 2, i32 0, i32 3>, <4 x i32>* %84, align 4
  %85 = load i32, i32* %73, align 8
  switch i32 %85, label %239 [
    i32 1, label %86
    i32 3, label %137
    i32 9, label %188
  ]

86:                                               ; preds = %81
  br i1 %11, label %91, label %87

87:                                               ; preds = %86
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %89 = bitcast %union.TfLitePtrUnion* %88 to float**
  %90 = load float*, float** %89, align 8
  br label %91

91:                                               ; preds = %86, %87
  %92 = phi float* [ %90, %87 ], [ null, %86 ]
  %93 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  %94 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !15
  br label %125

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !15
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !15
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !15
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #10, !noalias !15
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !15
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #11
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to float**
  %124 = load float*, float** %123, align 8
  br label %125

125:                                              ; preds = %95, %117
  %126 = phi float* [ %124, %117 ], [ null, %95 ]
  call void @_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, float* %92, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %126)
  %127 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %128 = load i32, i32* %127, align 8
  %129 = icmp sgt i32 %128, 5
  br i1 %129, label %130, label %136

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %132 = load i32*, i32** %131, align 8
  %133 = icmp eq i32* %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = bitcast i32* %132 to i8*
  call void @_ZdaPv(i8* %135) #10
  br label %136

136:                                              ; preds = %125, %130, %134
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  br label %243

137:                                              ; preds = %81
  br i1 %11, label %142, label %138

138:                                              ; preds = %137
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %140 = bitcast %union.TfLitePtrUnion* %139 to i8**
  %141 = load i8*, i8** %140, align 8
  br label %142

142:                                              ; preds = %137, %138
  %143 = phi i8* [ %141, %138 ], [ null, %137 ]
  %144 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %144) #11
  %145 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %145, label %146, label %148

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %147, align 8, !alias.scope !18
  br label %176

148:                                              ; preds = %142
  %149 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %150 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %149, align 8, !noalias !18
  %151 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %150, i64 0, i32 0
  %152 = load i32, i32* %151, align 4, !noalias !18
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %150, i64 0, i32 1, i64 0
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %152, i32* %154, align 8, !alias.scope !18
  %155 = icmp sgt i32 %152, 5
  br i1 %155, label %156, label %163

156:                                              ; preds = %148
  %157 = sext i32 %152 to i64
  %158 = shl nsw i64 %157, 2
  %159 = tail call i8* @_Znam(i64 %158) #10, !noalias !18
  %160 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %161 = bitcast i32** %160 to i8**
  store i8* %159, i8** %161, align 8, !alias.scope !18
  %162 = bitcast i8* %159 to i32*
  br label %168

163:                                              ; preds = %148
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to i32*
  %166 = sext i32 %152 to i64
  %167 = shl nsw i64 %166, 2
  br label %168

168:                                              ; preds = %163, %156
  %169 = phi i64 [ %158, %156 ], [ %167, %163 ]
  %170 = phi i32* [ %162, %156 ], [ %165, %163 ]
  %171 = bitcast i32* %170 to i8*
  %172 = bitcast i32* %153 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %171, i8* align 4 %172, i64 %169, i1 false) #11
  %173 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %174 = bitcast %union.TfLitePtrUnion* %173 to i8**
  %175 = load i8*, i8** %174, align 8
  br label %176

176:                                              ; preds = %146, %168
  %177 = phi i8* [ %175, %168 ], [ null, %146 ]
  call void @_ZN6tflite13optimized_ops9TransposeIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %143, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %177)
  %178 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %179 = load i32, i32* %178, align 8
  %180 = icmp sgt i32 %179, 5
  br i1 %180, label %181, label %187

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %183 = load i32*, i32** %182, align 8
  %184 = icmp eq i32* %183, null
  br i1 %184, label %187, label %185

185:                                              ; preds = %181
  %186 = bitcast i32* %183 to i8*
  call void @_ZdaPv(i8* %186) #10
  br label %187

187:                                              ; preds = %176, %181, %185
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %144) #11
  br label %243

188:                                              ; preds = %81
  br i1 %11, label %193, label %189

189:                                              ; preds = %188
  %190 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %1, i64 0, i32 1
  %191 = bitcast %union.TfLitePtrUnion* %190 to i8**
  %192 = load i8*, i8** %191, align 8
  br label %193

193:                                              ; preds = %188, %189
  %194 = phi i8* [ %192, %189 ], [ null, %188 ]
  %195 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %195) #11
  %196 = icmp eq %struct.TfLiteTensor* %2, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %198, align 8, !alias.scope !21
  br label %227

199:                                              ; preds = %193
  %200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 2
  %201 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %200, align 8, !noalias !21
  %202 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %201, i64 0, i32 0
  %203 = load i32, i32* %202, align 4, !noalias !21
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %201, i64 0, i32 1, i64 0
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %203, i32* %205, align 8, !alias.scope !21
  %206 = icmp sgt i32 %203, 5
  br i1 %206, label %207, label %214

207:                                              ; preds = %199
  %208 = sext i32 %203 to i64
  %209 = shl nsw i64 %208, 2
  %210 = tail call i8* @_Znam(i64 %209) #10, !noalias !21
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %212 = bitcast i32** %211 to i8**
  store i8* %210, i8** %212, align 8, !alias.scope !21
  %213 = bitcast i8* %210 to i32*
  br label %219

214:                                              ; preds = %199
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %216 = bitcast %union.anon* %215 to i32*
  %217 = sext i32 %203 to i64
  %218 = shl nsw i64 %217, 2
  br label %219

219:                                              ; preds = %214, %207
  %220 = phi i64 [ %209, %207 ], [ %218, %214 ]
  %221 = phi i32* [ %213, %207 ], [ %216, %214 ]
  %222 = bitcast i32* %221 to i8*
  %223 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %223, i64 %220, i1 false) #11
  %224 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %2, i64 0, i32 1
  %225 = bitcast %union.TfLitePtrUnion* %224 to i8**
  %226 = load i8*, i8** %225, align 8
  br label %227

227:                                              ; preds = %197, %219
  %228 = phi i8* [ %226, %219 ], [ null, %197 ]
  call void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %5, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %4, i8* %194, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %228)
  %229 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %230 = load i32, i32* %229, align 8
  %231 = icmp sgt i32 %230, 5
  br i1 %231, label %232, label %238

232:                                              ; preds = %227
  %233 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %234 = load i32*, i32** %233, align 8
  %235 = icmp eq i32* %234, null
  br i1 %235, label %238, label %236

236:                                              ; preds = %232
  %237 = bitcast i32* %234 to i8*
  call void @_ZdaPv(i8* %237) #10
  br label %238

238:                                              ; preds = %227, %232, %236
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %195) #11
  br label %243

239:                                              ; preds = %81
  %240 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %241 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %240, align 8
  %242 = tail call i8* @TfLiteTypeGetName(i32 %85) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %241(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.8, i64 0, i64 0), i8* %242) #11
  br label %243

243:                                              ; preds = %136, %238, %187, %239
  %244 = phi i32 [ 1, %239 ], [ 0, %187 ], [ 0, %238 ], [ 0, %136 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #11
  %245 = load i32, i32* %68, align 8
  br label %246

246:                                              ; preds = %67, %243
  %247 = phi i32 [ %245, %243 ], [ %69, %67 ]
  %248 = phi i32 [ %244, %243 ], [ %79, %67 ]
  %249 = icmp sgt i32 %247, 5
  br i1 %249, label %250, label %256

250:                                              ; preds = %246
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %4, i64 0, i32 1, i32 0
  %252 = load i32*, i32** %251, align 8
  %253 = icmp eq i32* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %250
  %255 = bitcast i32* %252 to i8*
  call void @_ZdaPv(i8* %255) #10
  br label %256

256:                                              ; preds = %246, %250, %254
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #11
  ret i32 %248
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #11
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #11
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #11
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %196

81:                                               ; preds = %72, %56
  %82 = bitcast float* %4 to i8*
  %83 = bitcast float* %2 to i8*
  %84 = load i32, i32* %14, align 8
  %85 = icmp sgt i32 %84, 5
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i32*, i32** %36, align 8
  br label %90

88:                                               ; preds = %81
  %89 = icmp sgt i32 %84, 0
  br i1 %89, label %90, label %194

90:                                               ; preds = %88, %86
  %91 = phi i32* [ %87, %86 ], [ %38, %88 ]
  %92 = zext i32 %84 to i64
  %93 = icmp ult i32 %84, 8
  br i1 %93, label %179, label %94

94:                                               ; preds = %90
  %95 = and i64 %92, 4294967288
  %96 = add nsw i64 %95, -8
  %97 = lshr exact i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp ult i64 %96, 24
  br i1 %100, label %146, label %101

101:                                              ; preds = %94
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %143, %103 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %141, %103 ]
  %106 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %142, %103 ]
  %107 = phi i64 [ %102, %101 ], [ %144, %103 ]
  %108 = getelementptr inbounds i32, i32* %91, i64 %104
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4
  %111 = getelementptr inbounds i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4
  %114 = mul nsw <4 x i32> %110, %105
  %115 = mul nsw <4 x i32> %113, %106
  %116 = or i64 %104, 8
  %117 = getelementptr inbounds i32, i32* %91, i64 %116
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4
  %120 = getelementptr inbounds i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = mul nsw <4 x i32> %119, %114
  %124 = mul nsw <4 x i32> %122, %115
  %125 = or i64 %104, 16
  %126 = getelementptr inbounds i32, i32* %91, i64 %125
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = mul nsw <4 x i32> %128, %123
  %133 = mul nsw <4 x i32> %131, %124
  %134 = or i64 %104, 24
  %135 = getelementptr inbounds i32, i32* %91, i64 %134
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4
  %138 = getelementptr inbounds i32, i32* %135, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = mul nsw <4 x i32> %137, %132
  %142 = mul nsw <4 x i32> %140, %133
  %143 = add i64 %104, 32
  %144 = add i64 %107, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %103, !llvm.loop !24

146:                                              ; preds = %103, %94
  %147 = phi <4 x i32> [ undef, %94 ], [ %141, %103 ]
  %148 = phi <4 x i32> [ undef, %94 ], [ %142, %103 ]
  %149 = phi i64 [ 0, %94 ], [ %143, %103 ]
  %150 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %141, %103 ]
  %151 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %142, %103 ]
  %152 = icmp eq i64 %99, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %166, %153 ], [ %149, %146 ]
  %155 = phi <4 x i32> [ %164, %153 ], [ %150, %146 ]
  %156 = phi <4 x i32> [ %165, %153 ], [ %151, %146 ]
  %157 = phi i64 [ %167, %153 ], [ %99, %146 ]
  %158 = getelementptr inbounds i32, i32* %91, i64 %154
  %159 = bitcast i32* %158 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 4
  %161 = getelementptr inbounds i32, i32* %158, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4
  %164 = mul nsw <4 x i32> %160, %155
  %165 = mul nsw <4 x i32> %163, %156
  %166 = add i64 %154, 8
  %167 = add i64 %157, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !26

169:                                              ; preds = %153, %146
  %170 = phi <4 x i32> [ %147, %146 ], [ %164, %153 ]
  %171 = phi <4 x i32> [ %148, %146 ], [ %165, %153 ]
  %172 = mul <4 x i32> %171, %170
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = shufflevector <4 x i32> %174, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %176 = mul <4 x i32> %174, %175
  %177 = extractelement <4 x i32> %176, i32 0
  %178 = icmp eq i64 %95, %92
  br i1 %178, label %190, label %179

179:                                              ; preds = %169, %90
  %180 = phi i64 [ 0, %90 ], [ %95, %169 ]
  %181 = phi i32 [ 1, %90 ], [ %177, %169 ]
  br label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %188, %182 ], [ %180, %179 ]
  %184 = phi i32 [ %187, %182 ], [ %181, %179 ]
  %185 = getelementptr inbounds i32, i32* %91, i64 %183
  %186 = load i32, i32* %185, align 4
  %187 = mul nsw i32 %186, %184
  %188 = add nuw nsw i64 %183, 1
  %189 = icmp eq i64 %188, %92
  br i1 %189, label %190, label %182, !llvm.loop !27

190:                                              ; preds = %182, %169
  %191 = phi i32 [ %177, %169 ], [ %187, %182 ]
  %192 = sext i32 %191 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %190, %88
  %195 = phi i64 [ 4, %88 ], [ %193, %190 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %195, i1 false)
  br label %355

196:                                              ; preds = %74
  %197 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, 0
  %200 = icmp sgt i32 %13, 2
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %354

202:                                              ; preds = %196
  %203 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 32, i1 false)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %204, align 8
  %205 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 32, i1 false)
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %207, i8 -86, i64 24, i1 false)
  %208 = load i32, i32* %16, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %209, label %211, label %214

211:                                              ; preds = %202
  %212 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %213 = load i32*, i32** %212, align 8
  br label %219

214:                                              ; preds = %202
  %215 = bitcast %union.anon* %210 to i32*
  %216 = icmp sgt i32 %208, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  br label %323

219:                                              ; preds = %214, %211
  %220 = phi i32* [ %213, %211 ], [ %215, %214 ]
  %221 = zext i32 %208 to i64
  %222 = icmp ult i32 %208, 8
  br i1 %222, label %308, label %223

223:                                              ; preds = %219
  %224 = and i64 %221, 4294967288
  %225 = add nsw i64 %224, -8
  %226 = lshr exact i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = and i64 %227, 3
  %229 = icmp ult i64 %225, 24
  br i1 %229, label %275, label %230

230:                                              ; preds = %223
  %231 = sub nsw i64 %227, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %272, %232 ]
  %234 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %270, %232 ]
  %235 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %271, %232 ]
  %236 = phi i64 [ %231, %230 ], [ %273, %232 ]
  %237 = getelementptr inbounds i32, i32* %220, i64 %233
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 4
  %241 = bitcast i32* %240 to <4 x i32>*
  %242 = load <4 x i32>, <4 x i32>* %241, align 4
  %243 = mul nsw <4 x i32> %239, %234
  %244 = mul nsw <4 x i32> %242, %235
  %245 = or i64 %233, 8
  %246 = getelementptr inbounds i32, i32* %220, i64 %245
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = getelementptr inbounds i32, i32* %246, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4
  %252 = mul nsw <4 x i32> %248, %243
  %253 = mul nsw <4 x i32> %251, %244
  %254 = or i64 %233, 16
  %255 = getelementptr inbounds i32, i32* %220, i64 %254
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = getelementptr inbounds i32, i32* %255, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4
  %261 = mul nsw <4 x i32> %257, %252
  %262 = mul nsw <4 x i32> %260, %253
  %263 = or i64 %233, 24
  %264 = getelementptr inbounds i32, i32* %220, i64 %263
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = getelementptr inbounds i32, i32* %264, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  %269 = load <4 x i32>, <4 x i32>* %268, align 4
  %270 = mul nsw <4 x i32> %266, %261
  %271 = mul nsw <4 x i32> %269, %262
  %272 = add i64 %233, 32
  %273 = add i64 %236, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %232, !llvm.loop !29

275:                                              ; preds = %232, %223
  %276 = phi <4 x i32> [ undef, %223 ], [ %270, %232 ]
  %277 = phi <4 x i32> [ undef, %223 ], [ %271, %232 ]
  %278 = phi i64 [ 0, %223 ], [ %272, %232 ]
  %279 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %270, %232 ]
  %280 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %271, %232 ]
  %281 = icmp eq i64 %228, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %295, %282 ], [ %278, %275 ]
  %284 = phi <4 x i32> [ %293, %282 ], [ %279, %275 ]
  %285 = phi <4 x i32> [ %294, %282 ], [ %280, %275 ]
  %286 = phi i64 [ %296, %282 ], [ %228, %275 ]
  %287 = getelementptr inbounds i32, i32* %220, i64 %283
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %283, 8
  %296 = add i64 %286, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %282, !llvm.loop !30

298:                                              ; preds = %282, %275
  %299 = phi <4 x i32> [ %276, %275 ], [ %293, %282 ]
  %300 = phi <4 x i32> [ %277, %275 ], [ %294, %282 ]
  %301 = mul <4 x i32> %300, %299
  %302 = shufflevector <4 x i32> %301, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %303 = mul <4 x i32> %301, %302
  %304 = shufflevector <4 x i32> %303, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %305 = mul <4 x i32> %303, %304
  %306 = extractelement <4 x i32> %305, i32 0
  %307 = icmp eq i64 %224, %221
  br i1 %307, label %319, label %308

308:                                              ; preds = %298, %219
  %309 = phi i64 [ 0, %219 ], [ %224, %298 ]
  %310 = phi i32 [ 1, %219 ], [ %306, %298 ]
  br label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %317, %311 ], [ %309, %308 ]
  %313 = phi i32 [ %316, %311 ], [ %310, %308 ]
  %314 = getelementptr inbounds i32, i32* %220, i64 %312
  %315 = load i32, i32* %314, align 4
  %316 = mul nsw i32 %315, %313
  %317 = add nuw nsw i64 %312, 1
  %318 = icmp eq i64 %317, %221
  br i1 %318, label %319, label %311, !llvm.loop !31

319:                                              ; preds = %311, %298
  %320 = phi i32 [ %306, %298 ], [ %316, %311 ]
  %321 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  %322 = icmp sgt i32 %320, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %217, %319
  %324 = phi i64 [ %218, %217 ], [ %321, %319 ]
  %325 = phi i32 [ 1, %217 ], [ %320, %319 ]
  %326 = shl i64 %324, 32
  %327 = ashr exact i64 %326, 32
  %328 = sext i32 %325 to i64
  br label %348

329:                                              ; preds = %348, %319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #11
  %330 = load i32, i32* %206, align 8
  %331 = icmp sgt i32 %330, 5
  br i1 %331, label %332, label %338

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %332
  %337 = bitcast i32* %334 to i8*
  call void @_ZdaPv(i8* %337) #10
  br label %338

338:                                              ; preds = %329, %332, %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #11
  %339 = load i32, i32* %204, align 8
  %340 = icmp sgt i32 %339, 5
  br i1 %340, label %341, label %347

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = bitcast i32* %343 to i8*
  call void @_ZdaPv(i8* %346) #10
  br label %347

347:                                              ; preds = %338, %341, %345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #11
  br label %355

348:                                              ; preds = %323, %348
  %349 = phi i64 [ 0, %323 ], [ %352, %348 ]
  %350 = getelementptr inbounds float, float* %2, i64 %349
  %351 = getelementptr inbounds float, float* %4, i64 %349
  call void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %350, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, float* %351)
  %352 = add i64 %349, %327
  %353 = icmp slt i64 %352, %328
  br i1 %353, label %348, label %329

354:                                              ; preds = %196
  call void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, float* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, float* %4)
  br label %355

355:                                              ; preds = %354, %347, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %356 = load i32, i32* %42, align 8
  %357 = icmp sgt i32 %356, 5
  br i1 %357, label %358, label %364

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = icmp eq i32* %360, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = bitcast i32* %360 to i8*
  call void @_ZdaPv(i8* %363) #10
  br label %364

364:                                              ; preds = %355, %358, %362
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %365 = load i32, i32* %16, align 8
  %366 = icmp sgt i32 %365, 5
  br i1 %366, label %367, label %373

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %367
  %372 = bitcast i32* %369 to i8*
  call void @_ZdaPv(i8* %372) #10
  br label %373

373:                                              ; preds = %364, %367, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #11
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #11
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #11
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %193

81:                                               ; preds = %72, %56
  %82 = load i32, i32* %14, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i32*, i32** %36, align 8
  br label %88

86:                                               ; preds = %81
  %87 = icmp sgt i32 %82, 0
  br i1 %87, label %88, label %191

88:                                               ; preds = %86, %84
  %89 = phi i32* [ %85, %84 ], [ %38, %86 ]
  %90 = zext i32 %82 to i64
  %91 = icmp ult i32 %82, 8
  br i1 %91, label %177, label %92

92:                                               ; preds = %88
  %93 = and i64 %90, 4294967288
  %94 = add nsw i64 %93, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 24
  br i1 %98, label %144, label %99

99:                                               ; preds = %92
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %141, %101 ]
  %103 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %139, %101 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %140, %101 ]
  %105 = phi i64 [ %100, %99 ], [ %142, %101 ]
  %106 = getelementptr inbounds i32, i32* %89, i64 %102
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4
  %112 = mul nsw <4 x i32> %108, %103
  %113 = mul nsw <4 x i32> %111, %104
  %114 = or i64 %102, 8
  %115 = getelementptr inbounds i32, i32* %89, i64 %114
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = mul nsw <4 x i32> %117, %112
  %122 = mul nsw <4 x i32> %120, %113
  %123 = or i64 %102, 16
  %124 = getelementptr inbounds i32, i32* %89, i64 %123
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = mul nsw <4 x i32> %126, %121
  %131 = mul nsw <4 x i32> %129, %122
  %132 = or i64 %102, 24
  %133 = getelementptr inbounds i32, i32* %89, i64 %132
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds i32, i32* %133, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = mul nsw <4 x i32> %135, %130
  %140 = mul nsw <4 x i32> %138, %131
  %141 = add i64 %102, 32
  %142 = add i64 %105, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %101, !llvm.loop !32

144:                                              ; preds = %101, %92
  %145 = phi <4 x i32> [ undef, %92 ], [ %139, %101 ]
  %146 = phi <4 x i32> [ undef, %92 ], [ %140, %101 ]
  %147 = phi i64 [ 0, %92 ], [ %141, %101 ]
  %148 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %139, %101 ]
  %149 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %140, %101 ]
  %150 = icmp eq i64 %97, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %164, %151 ], [ %147, %144 ]
  %153 = phi <4 x i32> [ %162, %151 ], [ %148, %144 ]
  %154 = phi <4 x i32> [ %163, %151 ], [ %149, %144 ]
  %155 = phi i64 [ %165, %151 ], [ %97, %144 ]
  %156 = getelementptr inbounds i32, i32* %89, i64 %152
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = add i64 %152, 8
  %165 = add i64 %155, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !33

167:                                              ; preds = %151, %144
  %168 = phi <4 x i32> [ %145, %144 ], [ %162, %151 ]
  %169 = phi <4 x i32> [ %146, %144 ], [ %163, %151 ]
  %170 = mul <4 x i32> %169, %168
  %171 = shufflevector <4 x i32> %170, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %172 = mul <4 x i32> %170, %171
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = extractelement <4 x i32> %174, i32 0
  %176 = icmp eq i64 %93, %90
  br i1 %176, label %188, label %177

177:                                              ; preds = %167, %88
  %178 = phi i64 [ 0, %88 ], [ %93, %167 ]
  %179 = phi i32 [ 1, %88 ], [ %175, %167 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i64 [ %186, %180 ], [ %178, %177 ]
  %182 = phi i32 [ %185, %180 ], [ %179, %177 ]
  %183 = getelementptr inbounds i32, i32* %89, i64 %181
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nuw nsw i64 %181, 1
  %187 = icmp eq i64 %186, %90
  br i1 %187, label %188, label %180, !llvm.loop !34

188:                                              ; preds = %180, %167
  %189 = phi i32 [ %175, %167 ], [ %185, %180 ]
  %190 = sext i32 %189 to i64
  br label %191

191:                                              ; preds = %188, %86
  %192 = phi i64 [ 1, %86 ], [ %190, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %2, i64 %192, i1 false)
  br label %352

193:                                              ; preds = %74
  %194 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  %197 = icmp sgt i32 %13, 2
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %351

199:                                              ; preds = %193
  %200 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %201, align 8
  %202 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false)
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 24, i1 false)
  %205 = load i32, i32* %16, align 8
  %206 = icmp sgt i32 %205, 5
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %206, label %208, label %211

208:                                              ; preds = %199
  %209 = getelementptr inbounds %union.anon, %union.anon* %207, i64 0, i32 0
  %210 = load i32*, i32** %209, align 8
  br label %216

211:                                              ; preds = %199
  %212 = bitcast %union.anon* %207 to i32*
  %213 = icmp sgt i32 %205, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  br label %320

216:                                              ; preds = %211, %208
  %217 = phi i32* [ %210, %208 ], [ %212, %211 ]
  %218 = zext i32 %205 to i64
  %219 = icmp ult i32 %205, 8
  br i1 %219, label %305, label %220

220:                                              ; preds = %216
  %221 = and i64 %218, 4294967288
  %222 = add nsw i64 %221, -8
  %223 = lshr exact i64 %222, 3
  %224 = add nuw nsw i64 %223, 1
  %225 = and i64 %224, 3
  %226 = icmp ult i64 %222, 24
  br i1 %226, label %272, label %227

227:                                              ; preds = %220
  %228 = sub nsw i64 %224, %225
  br label %229

229:                                              ; preds = %229, %227
  %230 = phi i64 [ 0, %227 ], [ %269, %229 ]
  %231 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %267, %229 ]
  %232 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %268, %229 ]
  %233 = phi i64 [ %228, %227 ], [ %270, %229 ]
  %234 = getelementptr inbounds i32, i32* %217, i64 %230
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = getelementptr inbounds i32, i32* %234, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = mul nsw <4 x i32> %236, %231
  %241 = mul nsw <4 x i32> %239, %232
  %242 = or i64 %230, 8
  %243 = getelementptr inbounds i32, i32* %217, i64 %242
  %244 = bitcast i32* %243 to <4 x i32>*
  %245 = load <4 x i32>, <4 x i32>* %244, align 4
  %246 = getelementptr inbounds i32, i32* %243, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = mul nsw <4 x i32> %245, %240
  %250 = mul nsw <4 x i32> %248, %241
  %251 = or i64 %230, 16
  %252 = getelementptr inbounds i32, i32* %217, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = mul nsw <4 x i32> %254, %249
  %259 = mul nsw <4 x i32> %257, %250
  %260 = or i64 %230, 24
  %261 = getelementptr inbounds i32, i32* %217, i64 %260
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = mul nsw <4 x i32> %263, %258
  %268 = mul nsw <4 x i32> %266, %259
  %269 = add i64 %230, 32
  %270 = add i64 %233, -4
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %229, !llvm.loop !35

272:                                              ; preds = %229, %220
  %273 = phi <4 x i32> [ undef, %220 ], [ %267, %229 ]
  %274 = phi <4 x i32> [ undef, %220 ], [ %268, %229 ]
  %275 = phi i64 [ 0, %220 ], [ %269, %229 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %267, %229 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %268, %229 ]
  %278 = icmp eq i64 %225, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %272, %279
  %280 = phi i64 [ %292, %279 ], [ %275, %272 ]
  %281 = phi <4 x i32> [ %290, %279 ], [ %276, %272 ]
  %282 = phi <4 x i32> [ %291, %279 ], [ %277, %272 ]
  %283 = phi i64 [ %293, %279 ], [ %225, %272 ]
  %284 = getelementptr inbounds i32, i32* %217, i64 %280
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = mul nsw <4 x i32> %286, %281
  %291 = mul nsw <4 x i32> %289, %282
  %292 = add i64 %280, 8
  %293 = add i64 %283, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %279, !llvm.loop !36

295:                                              ; preds = %279, %272
  %296 = phi <4 x i32> [ %273, %272 ], [ %290, %279 ]
  %297 = phi <4 x i32> [ %274, %272 ], [ %291, %279 ]
  %298 = mul <4 x i32> %297, %296
  %299 = shufflevector <4 x i32> %298, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %300 = mul <4 x i32> %298, %299
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %302 = mul <4 x i32> %300, %301
  %303 = extractelement <4 x i32> %302, i32 0
  %304 = icmp eq i64 %221, %218
  br i1 %304, label %316, label %305

305:                                              ; preds = %295, %216
  %306 = phi i64 [ 0, %216 ], [ %221, %295 ]
  %307 = phi i32 [ 1, %216 ], [ %303, %295 ]
  br label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %314, %308 ], [ %306, %305 ]
  %310 = phi i32 [ %313, %308 ], [ %307, %305 ]
  %311 = getelementptr inbounds i32, i32* %217, i64 %309
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %312, %310
  %314 = add nuw nsw i64 %309, 1
  %315 = icmp eq i64 %314, %218
  br i1 %315, label %316, label %308, !llvm.loop !37

316:                                              ; preds = %308, %295
  %317 = phi i32 [ %303, %295 ], [ %313, %308 ]
  %318 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  %319 = icmp sgt i32 %317, 0
  br i1 %319, label %320, label %326

320:                                              ; preds = %214, %316
  %321 = phi i64 [ %215, %214 ], [ %318, %316 ]
  %322 = phi i32 [ 1, %214 ], [ %317, %316 ]
  %323 = shl i64 %321, 32
  %324 = ashr exact i64 %323, 32
  %325 = sext i32 %322 to i64
  br label %345

326:                                              ; preds = %345, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  %327 = load i32, i32* %203, align 8
  %328 = icmp sgt i32 %327, 5
  br i1 %328, label %329, label %335

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = bitcast i32* %331 to i8*
  call void @_ZdaPv(i8* %334) #10
  br label %335

335:                                              ; preds = %326, %329, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #11
  %336 = load i32, i32* %201, align 8
  %337 = icmp sgt i32 %336, 5
  br i1 %337, label %338, label %344

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = bitcast i32* %340 to i8*
  call void @_ZdaPv(i8* %343) #10
  br label %344

344:                                              ; preds = %335, %338, %342
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #11
  br label %352

345:                                              ; preds = %320, %345
  %346 = phi i64 [ 0, %320 ], [ %349, %345 ]
  %347 = getelementptr inbounds i8, i8* %2, i64 %346
  %348 = getelementptr inbounds i8, i8* %4, i64 %346
  call void @_ZN6tflite13optimized_ops13TransposeImplIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %347, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %348)
  %349 = add i64 %346, %324
  %350 = icmp slt i64 %349, %325
  br i1 %350, label %345, label %326

351:                                              ; preds = %193
  call void @_ZN6tflite13optimized_ops13TransposeImplIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %4)
  br label %352

352:                                              ; preds = %351, %344, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %353 = load i32, i32* %42, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %352, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %362 = load i32, i32* %16, align 8
  %363 = icmp sgt i32 %362, 5
  br i1 %363, label %364, label %370

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %366 = load i32*, i32** %365, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = bitcast i32* %366 to i8*
  call void @_ZdaPv(i8* %369) #10
  br label %370

370:                                              ; preds = %361, %364, %368
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #11
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #11
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #11
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #11
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %193

81:                                               ; preds = %72, %56
  %82 = load i32, i32* %14, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i32*, i32** %36, align 8
  br label %88

86:                                               ; preds = %81
  %87 = icmp sgt i32 %82, 0
  br i1 %87, label %88, label %191

88:                                               ; preds = %86, %84
  %89 = phi i32* [ %85, %84 ], [ %38, %86 ]
  %90 = zext i32 %82 to i64
  %91 = icmp ult i32 %82, 8
  br i1 %91, label %177, label %92

92:                                               ; preds = %88
  %93 = and i64 %90, 4294967288
  %94 = add nsw i64 %93, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 24
  br i1 %98, label %144, label %99

99:                                               ; preds = %92
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %141, %101 ]
  %103 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %139, %101 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %140, %101 ]
  %105 = phi i64 [ %100, %99 ], [ %142, %101 ]
  %106 = getelementptr inbounds i32, i32* %89, i64 %102
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4
  %112 = mul nsw <4 x i32> %108, %103
  %113 = mul nsw <4 x i32> %111, %104
  %114 = or i64 %102, 8
  %115 = getelementptr inbounds i32, i32* %89, i64 %114
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = mul nsw <4 x i32> %117, %112
  %122 = mul nsw <4 x i32> %120, %113
  %123 = or i64 %102, 16
  %124 = getelementptr inbounds i32, i32* %89, i64 %123
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = mul nsw <4 x i32> %126, %121
  %131 = mul nsw <4 x i32> %129, %122
  %132 = or i64 %102, 24
  %133 = getelementptr inbounds i32, i32* %89, i64 %132
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds i32, i32* %133, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = mul nsw <4 x i32> %135, %130
  %140 = mul nsw <4 x i32> %138, %131
  %141 = add i64 %102, 32
  %142 = add i64 %105, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %101, !llvm.loop !38

144:                                              ; preds = %101, %92
  %145 = phi <4 x i32> [ undef, %92 ], [ %139, %101 ]
  %146 = phi <4 x i32> [ undef, %92 ], [ %140, %101 ]
  %147 = phi i64 [ 0, %92 ], [ %141, %101 ]
  %148 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %139, %101 ]
  %149 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %140, %101 ]
  %150 = icmp eq i64 %97, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %164, %151 ], [ %147, %144 ]
  %153 = phi <4 x i32> [ %162, %151 ], [ %148, %144 ]
  %154 = phi <4 x i32> [ %163, %151 ], [ %149, %144 ]
  %155 = phi i64 [ %165, %151 ], [ %97, %144 ]
  %156 = getelementptr inbounds i32, i32* %89, i64 %152
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = add i64 %152, 8
  %165 = add i64 %155, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !39

167:                                              ; preds = %151, %144
  %168 = phi <4 x i32> [ %145, %144 ], [ %162, %151 ]
  %169 = phi <4 x i32> [ %146, %144 ], [ %163, %151 ]
  %170 = mul <4 x i32> %169, %168
  %171 = shufflevector <4 x i32> %170, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %172 = mul <4 x i32> %170, %171
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = extractelement <4 x i32> %174, i32 0
  %176 = icmp eq i64 %93, %90
  br i1 %176, label %188, label %177

177:                                              ; preds = %167, %88
  %178 = phi i64 [ 0, %88 ], [ %93, %167 ]
  %179 = phi i32 [ 1, %88 ], [ %175, %167 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i64 [ %186, %180 ], [ %178, %177 ]
  %182 = phi i32 [ %185, %180 ], [ %179, %177 ]
  %183 = getelementptr inbounds i32, i32* %89, i64 %181
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nuw nsw i64 %181, 1
  %187 = icmp eq i64 %186, %90
  br i1 %187, label %188, label %180, !llvm.loop !40

188:                                              ; preds = %180, %167
  %189 = phi i32 [ %175, %167 ], [ %185, %180 ]
  %190 = sext i32 %189 to i64
  br label %191

191:                                              ; preds = %188, %86
  %192 = phi i64 [ 1, %86 ], [ %190, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %2, i64 %192, i1 false)
  br label %352

193:                                              ; preds = %74
  %194 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  %197 = icmp sgt i32 %13, 2
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %351

199:                                              ; preds = %193
  %200 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %201, align 8
  %202 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false)
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 24, i1 false)
  %205 = load i32, i32* %16, align 8
  %206 = icmp sgt i32 %205, 5
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %206, label %208, label %211

208:                                              ; preds = %199
  %209 = getelementptr inbounds %union.anon, %union.anon* %207, i64 0, i32 0
  %210 = load i32*, i32** %209, align 8
  br label %216

211:                                              ; preds = %199
  %212 = bitcast %union.anon* %207 to i32*
  %213 = icmp sgt i32 %205, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  br label %320

216:                                              ; preds = %211, %208
  %217 = phi i32* [ %210, %208 ], [ %212, %211 ]
  %218 = zext i32 %205 to i64
  %219 = icmp ult i32 %205, 8
  br i1 %219, label %305, label %220

220:                                              ; preds = %216
  %221 = and i64 %218, 4294967288
  %222 = add nsw i64 %221, -8
  %223 = lshr exact i64 %222, 3
  %224 = add nuw nsw i64 %223, 1
  %225 = and i64 %224, 3
  %226 = icmp ult i64 %222, 24
  br i1 %226, label %272, label %227

227:                                              ; preds = %220
  %228 = sub nsw i64 %224, %225
  br label %229

229:                                              ; preds = %229, %227
  %230 = phi i64 [ 0, %227 ], [ %269, %229 ]
  %231 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %267, %229 ]
  %232 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %268, %229 ]
  %233 = phi i64 [ %228, %227 ], [ %270, %229 ]
  %234 = getelementptr inbounds i32, i32* %217, i64 %230
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = getelementptr inbounds i32, i32* %234, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = mul nsw <4 x i32> %236, %231
  %241 = mul nsw <4 x i32> %239, %232
  %242 = or i64 %230, 8
  %243 = getelementptr inbounds i32, i32* %217, i64 %242
  %244 = bitcast i32* %243 to <4 x i32>*
  %245 = load <4 x i32>, <4 x i32>* %244, align 4
  %246 = getelementptr inbounds i32, i32* %243, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = mul nsw <4 x i32> %245, %240
  %250 = mul nsw <4 x i32> %248, %241
  %251 = or i64 %230, 16
  %252 = getelementptr inbounds i32, i32* %217, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = mul nsw <4 x i32> %254, %249
  %259 = mul nsw <4 x i32> %257, %250
  %260 = or i64 %230, 24
  %261 = getelementptr inbounds i32, i32* %217, i64 %260
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = mul nsw <4 x i32> %263, %258
  %268 = mul nsw <4 x i32> %266, %259
  %269 = add i64 %230, 32
  %270 = add i64 %233, -4
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %229, !llvm.loop !41

272:                                              ; preds = %229, %220
  %273 = phi <4 x i32> [ undef, %220 ], [ %267, %229 ]
  %274 = phi <4 x i32> [ undef, %220 ], [ %268, %229 ]
  %275 = phi i64 [ 0, %220 ], [ %269, %229 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %267, %229 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %268, %229 ]
  %278 = icmp eq i64 %225, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %272, %279
  %280 = phi i64 [ %292, %279 ], [ %275, %272 ]
  %281 = phi <4 x i32> [ %290, %279 ], [ %276, %272 ]
  %282 = phi <4 x i32> [ %291, %279 ], [ %277, %272 ]
  %283 = phi i64 [ %293, %279 ], [ %225, %272 ]
  %284 = getelementptr inbounds i32, i32* %217, i64 %280
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = mul nsw <4 x i32> %286, %281
  %291 = mul nsw <4 x i32> %289, %282
  %292 = add i64 %280, 8
  %293 = add i64 %283, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %279, !llvm.loop !42

295:                                              ; preds = %279, %272
  %296 = phi <4 x i32> [ %273, %272 ], [ %290, %279 ]
  %297 = phi <4 x i32> [ %274, %272 ], [ %291, %279 ]
  %298 = mul <4 x i32> %297, %296
  %299 = shufflevector <4 x i32> %298, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %300 = mul <4 x i32> %298, %299
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %302 = mul <4 x i32> %300, %301
  %303 = extractelement <4 x i32> %302, i32 0
  %304 = icmp eq i64 %221, %218
  br i1 %304, label %316, label %305

305:                                              ; preds = %295, %216
  %306 = phi i64 [ 0, %216 ], [ %221, %295 ]
  %307 = phi i32 [ 1, %216 ], [ %303, %295 ]
  br label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %314, %308 ], [ %306, %305 ]
  %310 = phi i32 [ %313, %308 ], [ %307, %305 ]
  %311 = getelementptr inbounds i32, i32* %217, i64 %309
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %312, %310
  %314 = add nuw nsw i64 %309, 1
  %315 = icmp eq i64 %314, %218
  br i1 %315, label %316, label %308, !llvm.loop !43

316:                                              ; preds = %308, %295
  %317 = phi i32 [ %303, %295 ], [ %313, %308 ]
  %318 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #11
  %319 = icmp sgt i32 %317, 0
  br i1 %319, label %320, label %326

320:                                              ; preds = %214, %316
  %321 = phi i64 [ %215, %214 ], [ %318, %316 ]
  %322 = phi i32 [ 1, %214 ], [ %317, %316 ]
  %323 = shl i64 %321, 32
  %324 = ashr exact i64 %323, 32
  %325 = sext i32 %322 to i64
  br label %345

326:                                              ; preds = %345, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #11
  %327 = load i32, i32* %203, align 8
  %328 = icmp sgt i32 %327, 5
  br i1 %328, label %329, label %335

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = bitcast i32* %331 to i8*
  call void @_ZdaPv(i8* %334) #10
  br label %335

335:                                              ; preds = %326, %329, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #11
  %336 = load i32, i32* %201, align 8
  %337 = icmp sgt i32 %336, 5
  br i1 %337, label %338, label %344

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = bitcast i32* %340 to i8*
  call void @_ZdaPv(i8* %343) #10
  br label %344

344:                                              ; preds = %335, %338, %342
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #11
  br label %352

345:                                              ; preds = %320, %345
  %346 = phi i64 [ 0, %320 ], [ %349, %345 ]
  %347 = getelementptr inbounds i8, i8* %2, i64 %346
  %348 = getelementptr inbounds i8, i8* %4, i64 %346
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %347, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %348)
  %349 = add i64 %346, %324
  %350 = icmp slt i64 %349, %325
  br i1 %350, label %345, label %326

351:                                              ; preds = %193
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %4)
  br label %352

352:                                              ; preds = %351, %344, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #11
  %353 = load i32, i32* %42, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %352, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %362 = load i32, i32* %16, align 8
  %363 = icmp sgt i32 %362, 5
  br i1 %363, label %364, label %370

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %366 = load i32*, i32** %365, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = bitcast i32* %366 to i8*
  call void @_ZdaPv(i8* %369) #10
  br label %370

370:                                              ; preds = %361, %364, %368
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6tflite3ops7builtin14transpose_conv27EvalQuantizedPerChannel16x8EP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSC_SC_SC_PSA_SD_SD_(%struct.TfLiteContext* nocapture readnone, %struct.TfLiteTransposeConvParams* nocapture readonly, %"struct.tflite::ops::builtin::transpose_conv::OpData"* nocapture readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* nocapture readnone, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly, %struct.TfLiteTensor* readonly) local_unnamed_addr #0 {
  %11 = alloca %"struct.tflite::ConvParams", align 4
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i16
  %21 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 0
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = trunc i32 %23 to i16
  %25 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 1
  store i16 %24, i16* %25, align 2
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 2
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 3
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 2
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 3
  store i16 %40, i16* %41, align 4
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 0, %43
  %45 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 6
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 8
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 11
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 11
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 12
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 9, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 10, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #11
  %60 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %62, align 8, !alias.scope !44
  br label %91

63:                                               ; preds = %10
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %65 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8, !noalias !44
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !44
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 0
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %67, i32* %69, align 8, !alias.scope !44
  %70 = icmp sgt i32 %67, 5
  br i1 %70, label %71, label %78

71:                                               ; preds = %63
  %72 = sext i32 %67 to i64
  %73 = shl nsw i64 %72, 2
  %74 = tail call i8* @_Znam(i64 %73) #10, !noalias !44
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %76 = bitcast i32** %75 to i8**
  store i8* %74, i8** %76, align 8, !alias.scope !44
  %77 = bitcast i8* %74 to i32*
  br label %83

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %80 = bitcast %union.anon* %79 to i32*
  %81 = sext i32 %67 to i64
  %82 = shl nsw i64 %81, 2
  br label %83

83:                                               ; preds = %78, %71
  %84 = phi i64 [ %73, %71 ], [ %82, %78 ]
  %85 = phi i32* [ %77, %71 ], [ %80, %78 ]
  %86 = bitcast i32* %85 to i8*
  %87 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %84, i1 false) #11
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %89 = bitcast %union.TfLitePtrUnion* %88 to i16**
  %90 = load i16*, i16** %89, align 8
  br label %91

91:                                               ; preds = %61, %83
  %92 = phi i16* [ %90, %83 ], [ null, %61 ]
  %93 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  %94 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !47
  br label %125

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !47
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !47
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !47
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #10, !noalias !47
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !47
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #11
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %95, %117
  %126 = phi i8* [ %124, %117 ], [ null, %95 ]
  %127 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #11
  %128 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %130, align 8, !alias.scope !50
  br label %159

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %132, align 8, !noalias !50
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !50
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %135, i32* %137, align 8, !alias.scope !50
  %138 = icmp sgt i32 %135, 5
  br i1 %138, label %139, label %146

139:                                              ; preds = %131
  %140 = sext i32 %135 to i64
  %141 = shl nsw i64 %140, 2
  %142 = tail call i8* @_Znam(i64 %141) #10, !noalias !50
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %144 = bitcast i32** %143 to i8**
  store i8* %142, i8** %144, align 8, !alias.scope !50
  %145 = bitcast i8* %142 to i32*
  br label %151

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %148 = bitcast %union.anon* %147 to i32*
  %149 = sext i32 %135 to i64
  %150 = shl nsw i64 %149, 2
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi i64 [ %141, %139 ], [ %150, %146 ]
  %153 = phi i32* [ %145, %139 ], [ %148, %146 ]
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %152, i1 false) #11
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %157 = bitcast %union.TfLitePtrUnion* %156 to i64**
  %158 = load i64*, i64** %157, align 8
  br label %159

159:                                              ; preds = %129, %151
  %160 = phi i64* [ %158, %151 ], [ null, %129 ]
  %161 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %161) #11
  %162 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %164, align 8, !alias.scope !53
  br label %193

165:                                              ; preds = %159
  %166 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %167 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %166, align 8, !noalias !53
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 0
  %169 = load i32, i32* %168, align 4, !noalias !53
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %167, i64 0, i32 1, i64 0
  %171 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %169, i32* %171, align 8, !alias.scope !53
  %172 = icmp sgt i32 %169, 5
  br i1 %172, label %173, label %180

173:                                              ; preds = %165
  %174 = sext i32 %169 to i64
  %175 = shl nsw i64 %174, 2
  %176 = tail call i8* @_Znam(i64 %175) #10, !noalias !53
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %178 = bitcast i32** %177 to i8**
  store i8* %176, i8** %178, align 8, !alias.scope !53
  %179 = bitcast i8* %176 to i32*
  br label %185

180:                                              ; preds = %165
  %181 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %182 = bitcast %union.anon* %181 to i32*
  %183 = sext i32 %169 to i64
  %184 = shl nsw i64 %183, 2
  br label %185

185:                                              ; preds = %180, %173
  %186 = phi i64 [ %175, %173 ], [ %184, %180 ]
  %187 = phi i32* [ %179, %173 ], [ %182, %180 ]
  %188 = bitcast i32* %187 to i8*
  %189 = bitcast i32* %170 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %188, i8* align 4 %189, i64 %186, i1 false) #11
  %190 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %191 = bitcast %union.TfLitePtrUnion* %190 to i16**
  %192 = load i16*, i16** %191, align 8
  br label %193

193:                                              ; preds = %163, %185
  %194 = phi i16* [ %192, %185 ], [ null, %163 ]
  %195 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %195) #11
  %196 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %193
  %198 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %198, align 8, !alias.scope !56
  br label %227

199:                                              ; preds = %193
  %200 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %201 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %200, align 8, !noalias !56
  %202 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %201, i64 0, i32 0
  %203 = load i32, i32* %202, align 4, !noalias !56
  %204 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %201, i64 0, i32 1, i64 0
  %205 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %203, i32* %205, align 8, !alias.scope !56
  %206 = icmp sgt i32 %203, 5
  br i1 %206, label %207, label %214

207:                                              ; preds = %199
  %208 = sext i32 %203 to i64
  %209 = shl nsw i64 %208, 2
  %210 = tail call i8* @_Znam(i64 %209) #10, !noalias !56
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %212 = bitcast i32** %211 to i8**
  store i8* %210, i8** %212, align 8, !alias.scope !56
  %213 = bitcast i8* %210 to i32*
  br label %219

214:                                              ; preds = %199
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %216 = bitcast %union.anon* %215 to i32*
  %217 = sext i32 %203 to i64
  %218 = shl nsw i64 %217, 2
  br label %219

219:                                              ; preds = %214, %207
  %220 = phi i64 [ %209, %207 ], [ %218, %214 ]
  %221 = phi i32* [ %213, %207 ], [ %216, %214 ]
  %222 = bitcast i32* %221 to i8*
  %223 = bitcast i32* %204 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %222, i8* align 4 %223, i64 %220, i1 false) #11
  %224 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %225 = bitcast %union.TfLitePtrUnion* %224 to i8**
  %226 = load i8*, i8** %225, align 8
  br label %227

227:                                              ; preds = %197, %219
  %228 = phi i8* [ %226, %219 ], [ null, %197 ]
  %229 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %229, label %234, label %230

230:                                              ; preds = %227
  %231 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1
  %232 = bitcast %union.TfLitePtrUnion* %231 to i64**
  %233 = load i64*, i64** %232, align 8
  br label %234

234:                                              ; preds = %227, %230
  %235 = phi i64* [ %233, %230 ], [ null, %227 ]
  call void @_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKsS8_PKaS8_PKlS8_PsS8_PaPl(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %11, i32* %56, i32* %58, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i16* %92, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %126, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i64* %160, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i16* %194, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %228, i64* %235)
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %237 = load i32, i32* %236, align 8
  %238 = icmp sgt i32 %237, 5
  br i1 %238, label %239, label %245

239:                                              ; preds = %234
  %240 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %241 = load i32*, i32** %240, align 8
  %242 = icmp eq i32* %241, null
  br i1 %242, label %245, label %243

243:                                              ; preds = %239
  %244 = bitcast i32* %241 to i8*
  call void @_ZdaPv(i8* %244) #10
  br label %245

245:                                              ; preds = %234, %239, %243
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %195) #11
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %247 = load i32, i32* %246, align 8
  %248 = icmp sgt i32 %247, 5
  br i1 %248, label %249, label %255

249:                                              ; preds = %245
  %250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %251 = load i32*, i32** %250, align 8
  %252 = icmp eq i32* %251, null
  br i1 %252, label %255, label %253

253:                                              ; preds = %249
  %254 = bitcast i32* %251 to i8*
  call void @_ZdaPv(i8* %254) #10
  br label %255

255:                                              ; preds = %245, %249, %253
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %161) #11
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %257 = load i32, i32* %256, align 8
  %258 = icmp sgt i32 %257, 5
  br i1 %258, label %259, label %265

259:                                              ; preds = %255
  %260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %261 = load i32*, i32** %260, align 8
  %262 = icmp eq i32* %261, null
  br i1 %262, label %265, label %263

263:                                              ; preds = %259
  %264 = bitcast i32* %261 to i8*
  call void @_ZdaPv(i8* %264) #10
  br label %265

265:                                              ; preds = %255, %259, %263
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #11
  %266 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %267 = load i32, i32* %266, align 8
  %268 = icmp sgt i32 %267, 5
  br i1 %268, label %269, label %275

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %271 = load i32*, i32** %270, align 8
  %272 = icmp eq i32* %271, null
  br i1 %272, label %275, label %273

273:                                              ; preds = %269
  %274 = bitcast i32* %271 to i8*
  call void @_ZdaPv(i8* %274) #10
  br label %275

275:                                              ; preds = %265, %269, %273
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  %276 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %277 = load i32, i32* %276, align 8
  %278 = icmp sgt i32 %277, 5
  br i1 %278, label %279, label %285

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %281 = load i32*, i32** %280, align 8
  %282 = icmp eq i32* %281, null
  br i1 %282, label %285, label %283

283:                                              ; preds = %279
  %284 = bitcast i32* %281 to i8*
  call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %275, %279, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKsS8_PKaS8_PKlS8_PsS8_PaPl(%"struct.tflite::ConvParams"* dereferenceable(56), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i16*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i64*) local_unnamed_addr #5 comdat {
  %15 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  %18 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %19 = load i16, i16* %18, align 4
  %20 = sext i16 %19 to i32
  %21 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i32
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %30 = load i32, i32* %27, align 8
  %31 = icmp sgt i32 %30, 5
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %33 = load i32, i32* %29, align 8
  %34 = icmp sgt i32 %33, 5
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %32 to [5 x i32]*
  %39 = bitcast %union.anon* %32 to i32*
  %40 = select i1 %31, i32* %37, i32* %39
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = bitcast %union.anon* %35 to i32*
  %45 = select i1 %34, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, %41
  %48 = select i1 %47, i32 %46, i32 %41
  %49 = load i32, i32* %28, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %52 = getelementptr inbounds i32, i32* %37, i64 3
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %54 = bitcast i8* %53 to i32*
  %55 = select i1 %31, i32* %52, i32* %54
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 3
  %60 = bitcast %union.anon* %51 to [5 x i32]*
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = select i1 %50, i32* %59, i32* %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %56
  %66 = select i1 %65, i32 %64, i32 %56
  %67 = bitcast %union.anon* %51 to i32*
  %68 = select i1 %50, i32* %58, i32* %67
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i32, i32* %43, i64 3
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %72 = bitcast i8* %71 to i32*
  %73 = select i1 %34, i32* %70, i32* %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, %69
  %76 = select i1 %75, i32 %74, i32 %69
  %77 = icmp eq i64* %8, null
  %78 = getelementptr inbounds i32, i32* %37, i64 1
  %79 = getelementptr inbounds i32, i32* %37, i64 2
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 1
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %82 = bitcast [16 x i8]* %81 to i32*
  %83 = select i1 %31, i32* %78, i32* %80
  %84 = select i1 %31, i32* %79, i32* %82
  %85 = load i32, i32* %83, align 4
  %86 = load i32, i32* %84, align 4
  %87 = getelementptr inbounds i32, i32* %58, i64 1
  %88 = getelementptr inbounds i32, i32* %58, i64 2
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 1
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %91 = bitcast [16 x i8]* %90 to i32*
  %92 = select i1 %50, i32* %87, i32* %89
  %93 = select i1 %50, i32* %88, i32* %91
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %93, align 4
  br i1 %34, label %96, label %101

96:                                               ; preds = %14
  %97 = getelementptr inbounds i32, i32* %43, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds i32, i32* %43, i64 2
  %100 = load i32, i32* %99, align 4
  br label %109

101:                                              ; preds = %14
  %102 = bitcast %union.anon* %35 to [5 x i32]*
  %103 = getelementptr inbounds [5 x i32], [5 x i32]* %102, i64 0, i64 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %106 = bitcast [16 x i8]* %105 to i32*
  %107 = load i32, i32* %106, align 4
  %108 = icmp sgt i32 %33, 0
  br i1 %108, label %109, label %215

109:                                              ; preds = %101, %96
  %110 = phi i32 [ %100, %96 ], [ %107, %101 ]
  %111 = phi i32 [ %98, %96 ], [ %104, %101 ]
  %112 = phi i32* [ %43, %96 ], [ %44, %101 ]
  %113 = zext i32 %33 to i64
  %114 = icmp ult i32 %33, 8
  br i1 %114, label %200, label %115

115:                                              ; preds = %109
  %116 = and i64 %113, 4294967288
  %117 = add nsw i64 %116, -8
  %118 = lshr exact i64 %117, 3
  %119 = add nuw nsw i64 %118, 1
  %120 = and i64 %119, 3
  %121 = icmp ult i64 %117, 24
  br i1 %121, label %167, label %122

122:                                              ; preds = %115
  %123 = sub nsw i64 %119, %120
  br label %124

124:                                              ; preds = %124, %122
  %125 = phi i64 [ 0, %122 ], [ %164, %124 ]
  %126 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %122 ], [ %162, %124 ]
  %127 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %122 ], [ %163, %124 ]
  %128 = phi i64 [ %123, %122 ], [ %165, %124 ]
  %129 = getelementptr inbounds i32, i32* %112, i64 %125
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = getelementptr inbounds i32, i32* %129, i64 4
  %133 = bitcast i32* %132 to <4 x i32>*
  %134 = load <4 x i32>, <4 x i32>* %133, align 4
  %135 = mul nsw <4 x i32> %131, %126
  %136 = mul nsw <4 x i32> %134, %127
  %137 = or i64 %125, 8
  %138 = getelementptr inbounds i32, i32* %112, i64 %137
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = getelementptr inbounds i32, i32* %138, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = mul nsw <4 x i32> %140, %135
  %145 = mul nsw <4 x i32> %143, %136
  %146 = or i64 %125, 16
  %147 = getelementptr inbounds i32, i32* %112, i64 %146
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4
  %150 = getelementptr inbounds i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4
  %153 = mul nsw <4 x i32> %149, %144
  %154 = mul nsw <4 x i32> %152, %145
  %155 = or i64 %125, 24
  %156 = getelementptr inbounds i32, i32* %112, i64 %155
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = add i64 %125, 32
  %165 = add i64 %128, -4
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %124, !llvm.loop !59

167:                                              ; preds = %124, %115
  %168 = phi <4 x i32> [ undef, %115 ], [ %162, %124 ]
  %169 = phi <4 x i32> [ undef, %115 ], [ %163, %124 ]
  %170 = phi i64 [ 0, %115 ], [ %164, %124 ]
  %171 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %115 ], [ %162, %124 ]
  %172 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %115 ], [ %163, %124 ]
  %173 = icmp eq i64 %120, 0
  br i1 %173, label %190, label %174

174:                                              ; preds = %167, %174
  %175 = phi i64 [ %187, %174 ], [ %170, %167 ]
  %176 = phi <4 x i32> [ %185, %174 ], [ %171, %167 ]
  %177 = phi <4 x i32> [ %186, %174 ], [ %172, %167 ]
  %178 = phi i64 [ %188, %174 ], [ %120, %167 ]
  %179 = getelementptr inbounds i32, i32* %112, i64 %175
  %180 = bitcast i32* %179 to <4 x i32>*
  %181 = load <4 x i32>, <4 x i32>* %180, align 4
  %182 = getelementptr inbounds i32, i32* %179, i64 4
  %183 = bitcast i32* %182 to <4 x i32>*
  %184 = load <4 x i32>, <4 x i32>* %183, align 4
  %185 = mul nsw <4 x i32> %181, %176
  %186 = mul nsw <4 x i32> %184, %177
  %187 = add i64 %175, 8
  %188 = add i64 %178, -1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %190, label %174, !llvm.loop !60

190:                                              ; preds = %174, %167
  %191 = phi <4 x i32> [ %168, %167 ], [ %185, %174 ]
  %192 = phi <4 x i32> [ %169, %167 ], [ %186, %174 ]
  %193 = mul <4 x i32> %192, %191
  %194 = shufflevector <4 x i32> %193, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %195 = mul <4 x i32> %193, %194
  %196 = shufflevector <4 x i32> %195, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %197 = mul <4 x i32> %195, %196
  %198 = extractelement <4 x i32> %197, i32 0
  %199 = icmp eq i64 %116, %113
  br i1 %199, label %211, label %200

200:                                              ; preds = %190, %109
  %201 = phi i64 [ 0, %109 ], [ %116, %190 ]
  %202 = phi i32 [ 1, %109 ], [ %198, %190 ]
  br label %203

203:                                              ; preds = %200, %203
  %204 = phi i64 [ %209, %203 ], [ %201, %200 ]
  %205 = phi i32 [ %208, %203 ], [ %202, %200 ]
  %206 = getelementptr inbounds i32, i32* %112, i64 %204
  %207 = load i32, i32* %206, align 4
  %208 = mul nsw i32 %207, %205
  %209 = add nuw nsw i64 %204, 1
  %210 = icmp eq i64 %209, %113
  br i1 %210, label %211, label %203, !llvm.loop !61

211:                                              ; preds = %203, %190
  %212 = phi i32 [ %198, %190 ], [ %208, %203 ]
  %213 = sext i32 %212 to i64
  %214 = shl nsw i64 %213, 3
  br label %215

215:                                              ; preds = %211, %101
  %216 = phi i32 [ %107, %101 ], [ %110, %211 ]
  %217 = phi i32 [ %104, %101 ], [ %111, %211 ]
  %218 = phi i64 [ 8, %101 ], [ %214, %211 ]
  %219 = bitcast i64* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %219, i8 0, i64 %218, i1 false)
  %220 = icmp sgt i32 %48, 0
  br i1 %220, label %221, label %338

221:                                              ; preds = %215
  %222 = icmp sgt i32 %85, 0
  %223 = icmp sgt i32 %86, 0
  %224 = icmp sgt i32 %66, 0
  %225 = icmp sgt i32 %94, 0
  %226 = icmp sgt i32 %95, 0
  %227 = icmp sgt i32 %76, 0
  %228 = getelementptr inbounds i32, i32* %39, i64 1
  %229 = getelementptr inbounds i32, i32* %67, i64 1
  %230 = getelementptr inbounds i32, i32* %44, i64 1
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %232 = bitcast [16 x i8]* %231 to i32*
  br label %233

233:                                              ; preds = %221, %249
  %234 = phi i32 [ 0, %221 ], [ %250, %249 ]
  br i1 %222, label %244, label %249

235:                                              ; preds = %249
  br i1 %220, label %236, label %338

236:                                              ; preds = %235
  %237 = icmp sgt i32 %217, 0
  %238 = icmp sgt i32 %216, 0
  %239 = icmp sgt i32 %76, 0
  %240 = getelementptr inbounds i32, i32* %44, i64 1
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %242 = bitcast [16 x i8]* %241 to i32*
  %243 = sext i32 %76 to i64
  br label %336

244:                                              ; preds = %233, %257
  %245 = phi i32 [ %258, %257 ], [ 0, %233 ]
  br i1 %223, label %246, label %257

246:                                              ; preds = %244
  %247 = mul nsw i32 %245, %20
  %248 = sub nsw i32 %247, %26
  br label %252

249:                                              ; preds = %257, %233
  %250 = add nuw nsw i32 %234, 1
  %251 = icmp slt i32 %250, %48
  br i1 %251, label %233, label %235

252:                                              ; preds = %260, %246
  %253 = phi i32 [ 0, %246 ], [ %261, %260 ]
  br i1 %224, label %254, label %260

254:                                              ; preds = %252
  %255 = mul nsw i32 %253, %17
  %256 = sub nsw i32 %255, %23
  br label %263

257:                                              ; preds = %260, %244
  %258 = add nuw nsw i32 %245, 1
  %259 = icmp eq i32 %258, %85
  br i1 %259, label %249, label %244

260:                                              ; preds = %271, %252
  %261 = add nuw nsw i32 %253, 1
  %262 = icmp eq i32 %261, %86
  br i1 %262, label %257, label %252

263:                                              ; preds = %254, %271
  %264 = phi i32 [ 0, %254 ], [ %272, %271 ]
  br i1 %225, label %265, label %271

265:                                              ; preds = %263, %284
  %266 = phi i32 [ %285, %284 ], [ 0, %263 ]
  br i1 %226, label %267, label %284

267:                                              ; preds = %265
  %268 = add nsw i32 %266, %248
  %269 = icmp sgt i32 %268, -1
  %270 = icmp slt i32 %268, %217
  br label %274

271:                                              ; preds = %284, %263
  %272 = add nuw nsw i32 %264, 1
  %273 = icmp slt i32 %272, %66
  br i1 %273, label %263, label %260

274:                                              ; preds = %287, %267
  %275 = phi i32 [ 0, %267 ], [ %288, %287 ]
  br i1 %227, label %276, label %287

276:                                              ; preds = %274
  %277 = add nsw i32 %275, %256
  %278 = icmp slt i32 %277, 0
  %279 = icmp slt i32 %277, %216
  %280 = and i1 %269, %279
  %281 = and i1 %270, %280
  %282 = xor i1 %281, true
  %283 = or i1 %278, %282
  br label %290

284:                                              ; preds = %287, %265
  %285 = add nuw nsw i32 %266, 1
  %286 = icmp eq i32 %285, %94
  br i1 %286, label %271, label %265

287:                                              ; preds = %333, %274
  %288 = add nuw nsw i32 %275, 1
  %289 = icmp eq i32 %288, %95
  br i1 %289, label %284, label %274

290:                                              ; preds = %276, %333
  %291 = phi i32 [ 0, %276 ], [ %334, %333 ]
  br i1 %283, label %333, label %292

292:                                              ; preds = %290
  %293 = load i32, i32* %228, align 4
  %294 = mul nsw i32 %293, %234
  %295 = add nsw i32 %294, %245
  %296 = load i32, i32* %82, align 4
  %297 = mul nsw i32 %295, %296
  %298 = add nsw i32 %297, %253
  %299 = load i32, i32* %54, align 4
  %300 = mul nsw i32 %298, %299
  %301 = add nsw i32 %300, %264
  %302 = sext i32 %301 to i64
  %303 = getelementptr inbounds i16, i16* %4, i64 %302
  %304 = load i16, i16* %303, align 2
  %305 = sext i16 %304 to i64
  %306 = load i32, i32* %229, align 4
  %307 = mul nsw i32 %306, %291
  %308 = add nsw i32 %307, %266
  %309 = load i32, i32* %91, align 4
  %310 = mul nsw i32 %308, %309
  %311 = add nsw i32 %310, %275
  %312 = load i32, i32* %62, align 4
  %313 = mul nsw i32 %311, %312
  %314 = add nsw i32 %313, %264
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, i8* %6, i64 %315
  %317 = load i8, i8* %316, align 1
  %318 = sext i8 %317 to i64
  %319 = mul nsw i64 %318, %305
  %320 = load i32, i32* %230, align 4
  %321 = mul nsw i32 %320, %234
  %322 = add nsw i32 %321, %268
  %323 = load i32, i32* %232, align 4
  %324 = mul nsw i32 %322, %323
  %325 = add nsw i32 %324, %277
  %326 = load i32, i32* %72, align 4
  %327 = mul nsw i32 %325, %326
  %328 = add nsw i32 %327, %291
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i64, i64* %13, i64 %329
  %331 = load i64, i64* %330, align 8
  %332 = add nsw i64 %331, %319
  store i64 %332, i64* %330, align 8
  br label %333

333:                                              ; preds = %290, %292
  %334 = add nuw nsw i32 %291, 1
  %335 = icmp slt i32 %334, %76
  br i1 %335, label %290, label %287

336:                                              ; preds = %236, %341
  %337 = phi i32 [ 0, %236 ], [ %342, %341 ]
  br i1 %237, label %339, label %341

338:                                              ; preds = %341, %215, %235
  ret void

339:                                              ; preds = %336, %346
  %340 = phi i32 [ %347, %346 ], [ 0, %336 ]
  br i1 %238, label %344, label %346

341:                                              ; preds = %346, %336
  %342 = add nuw nsw i32 %337, 1
  %343 = icmp slt i32 %342, %48
  br i1 %343, label %336, label %338

344:                                              ; preds = %339, %349
  %345 = phi i32 [ %350, %349 ], [ 0, %339 ]
  br i1 %239, label %352, label %349

346:                                              ; preds = %349, %339
  %347 = add nuw nsw i32 %340, 1
  %348 = icmp eq i32 %347, %217
  br i1 %348, label %341, label %339

349:                                              ; preds = %371, %344
  %350 = add nuw nsw i32 %345, 1
  %351 = icmp eq i32 %350, %216
  br i1 %351, label %346, label %344

352:                                              ; preds = %344, %371
  %353 = phi i64 [ %395, %371 ], [ 0, %344 ]
  %354 = load i32, i32* %240, align 4
  %355 = mul nsw i32 %354, %337
  %356 = add nsw i32 %355, %340
  %357 = load i32, i32* %242, align 4
  %358 = mul nsw i32 %356, %357
  %359 = add nsw i32 %358, %345
  %360 = load i32, i32* %72, align 4
  %361 = mul nsw i32 %359, %360
  %362 = trunc i64 %353 to i32
  %363 = add nsw i32 %361, %362
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i64, i64* %13, i64 %364
  %366 = load i64, i64* %365, align 8
  br i1 %77, label %371, label %367

367:                                              ; preds = %352
  %368 = getelementptr inbounds i64, i64* %8, i64 %353
  %369 = load i64, i64* %368, align 8
  %370 = add nsw i64 %369, %366
  br label %371

371:                                              ; preds = %352, %367
  %372 = phi i64 [ %370, %367 ], [ %366, %352 ]
  %373 = getelementptr inbounds i32, i32* %1, i64 %353
  %374 = load i32, i32* %373, align 4
  %375 = getelementptr inbounds i32, i32* %2, i64 %353
  %376 = load i32, i32* %375, align 4
  %377 = add nsw i32 %374, 32768
  %378 = ashr i32 %377, 16
  %379 = sub nsw i32 15, %376
  %380 = sext i32 %378 to i64
  %381 = mul nsw i64 %372, %380
  %382 = sub i32 14, %376
  %383 = zext i32 %382 to i64
  %384 = shl i64 1, %383
  %385 = add nsw i64 %381, %384
  %386 = zext i32 %379 to i64
  %387 = ashr i64 %385, %386
  %388 = trunc i64 %387 to i32
  %389 = icmp sgt i32 %388, -32768
  %390 = select i1 %389, i32 %388, i32 -32768
  %391 = icmp slt i32 %390, 32767
  %392 = select i1 %391, i32 %390, i32 32767
  %393 = trunc i32 %392 to i16
  %394 = getelementptr inbounds i16, i16* %10, i64 %364
  store i16 %393, i16* %394, align 2
  %395 = add nuw nsw i64 %353, 1
  %396 = icmp slt i64 %395, %243
  br i1 %396, label %352, label %349
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin26Register_TRANSPOSECONV_REFEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin26Register_TRANSPOSECONV_REFEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %"struct.tflite::ops::builtin::transpose_conv::OpData"**
  %6 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  %12 = add i32 %10, -3
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %16 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %15, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %16(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 253, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %819

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %25 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %24, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %25(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 254, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 %21, i32 1) #11
  br label %819

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %26, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %26 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %45, %50
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %45 ]
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %62 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %63 = sext i32 %58 to i64
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 %63
  br label %65

65:                                               ; preds = %55, %60
  %66 = phi %struct.TfLiteTensor* [ %64, %60 ], [ null, %55 ]
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %68 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %74 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %73, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %74(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 266, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 %70, i32 1) #11
  br label %819

75:                                               ; preds = %65
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %83 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %82, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %83(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 267, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %79, i32 4) #11
  br label %819

84:                                               ; preds = %75
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 4
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %92 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %91, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %92(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 268, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %88, i32 4) #11
  br label %819

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %96 [
    i32 1, label %99
    i32 3, label %99
    i32 9, label %99
    i32 7, label %99
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %98 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %97, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %98(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %819

99:                                               ; preds = %93, %93, %93, %93
  br i1 %11, label %100, label %308

100:                                              ; preds = %99
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 3
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %308, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %106 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %105, align 8
  %107 = sext i32 %102 to i64
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107
  %109 = icmp eq %struct.TfLiteTensor* %108, null
  br i1 %109, label %308, label %110

110:                                              ; preds = %104
  switch i32 %95, label %129 [
    i32 3, label %111
    i32 9, label %111
  ]

111:                                              ; preds = %110, %110
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %117 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %116, align 8
  %118 = tail call i8* @TfLiteTypeGetName(i32 %113) #11
  %119 = tail call i8* @TfLiteTypeGetName(i32 2) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %117(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 277, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* %118, i8* %119) #11
  br label %819

120:                                              ; preds = %111
  %121 = icmp eq i32 %95, 9
  br i1 %121, label %122, label %153

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 3, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %153, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %128 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %127, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %128(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %124, i32 0) #11
  br label %819

129:                                              ; preds = %110
  %130 = icmp eq i32 %95, 7
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  br i1 %130, label %133, label %145

133:                                              ; preds = %129
  %134 = icmp eq i32 %132, 4
  br i1 %134, label %138, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %137 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %136, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %137(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 282, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i32 %132, i32 4) #11
  br label %819

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 3, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %144 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %143, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %144(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %140, i32 0) #11
  br label %819

145:                                              ; preds = %129
  %146 = icmp eq i32 %132, %95
  br i1 %146, label %153, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  %150 = tail call i8* @TfLiteTypeGetName(i32 %132) #11
  %151 = load i32, i32* %94, align 8
  %152 = tail call i8* @TfLiteTypeGetName(i32 %151) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 285, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %150, i8* %152) #11
  br label %819

153:                                              ; preds = %122, %138, %145, %120
  %154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 2
  %155 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %154, align 8
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %228

159:                                              ; preds = %153
  %160 = sext i32 %157 to i64
  %161 = add nsw i64 %160, -1
  %162 = and i64 %160, 7
  %163 = icmp ult i64 %161, 7
  br i1 %163, label %212, label %164

164:                                              ; preds = %159
  %165 = sub nsw i64 %160, %162
  br label %166

166:                                              ; preds = %166, %164
  %167 = phi i64 [ 0, %164 ], [ %209, %166 ]
  %168 = phi i64 [ 1, %164 ], [ %208, %166 ]
  %169 = phi i64 [ %165, %164 ], [ %210, %166 ]
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %167
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = mul nsw i64 %168, %172
  %174 = or i64 %167, 1
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = mul nsw i64 %173, %177
  %179 = or i64 %167, 2
  %180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = mul nsw i64 %178, %182
  %184 = or i64 %167, 3
  %185 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %183, %187
  %189 = or i64 %167, 4
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = mul nsw i64 %188, %192
  %194 = or i64 %167, 5
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %193, %197
  %199 = or i64 %167, 6
  %200 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %198, %202
  %204 = or i64 %167, 7
  %205 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = sext i32 %206 to i64
  %208 = mul nsw i64 %203, %207
  %209 = add nuw nsw i64 %167, 8
  %210 = add i64 %169, -8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %166

212:                                              ; preds = %166, %159
  %213 = phi i64 [ undef, %159 ], [ %208, %166 ]
  %214 = phi i64 [ 0, %159 ], [ %209, %166 ]
  %215 = phi i64 [ 1, %159 ], [ %208, %166 ]
  %216 = icmp eq i64 %162, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %212, %217
  %218 = phi i64 [ %225, %217 ], [ %214, %212 ]
  %219 = phi i64 [ %224, %217 ], [ %215, %212 ]
  %220 = phi i64 [ %226, %217 ], [ %162, %212 ]
  %221 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %218
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul nsw i64 %219, %223
  %225 = add nuw nsw i64 %218, 1
  %226 = add i64 %220, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %217, !llvm.loop !62

228:                                              ; preds = %212, %217, %153
  %229 = phi i64 [ 1, %153 ], [ %213, %212 ], [ %224, %217 ]
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = icmp eq i64 %229, %232
  br i1 %233, label %308, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %236 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %235, align 8
  br i1 %158, label %237, label %306

237:                                              ; preds = %234
  %238 = sext i32 %157 to i64
  %239 = add nsw i64 %238, -1
  %240 = and i64 %238, 7
  %241 = icmp ult i64 %239, 7
  br i1 %241, label %290, label %242

242:                                              ; preds = %237
  %243 = sub nsw i64 %238, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %287, %244 ]
  %246 = phi i64 [ 1, %242 ], [ %286, %244 ]
  %247 = phi i64 [ %243, %242 ], [ %288, %244 ]
  %248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %245
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul nsw i64 %246, %250
  %252 = or i64 %245, 1
  %253 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = sext i32 %254 to i64
  %256 = mul nsw i64 %251, %255
  %257 = or i64 %245, 2
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = mul nsw i64 %256, %260
  %262 = or i64 %245, 3
  %263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = mul nsw i64 %261, %265
  %267 = or i64 %245, 4
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = mul nsw i64 %266, %270
  %272 = or i64 %245, 5
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = sext i32 %274 to i64
  %276 = mul nsw i64 %271, %275
  %277 = or i64 %245, 6
  %278 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = sext i32 %279 to i64
  %281 = mul nsw i64 %276, %280
  %282 = or i64 %245, 7
  %283 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = mul nsw i64 %281, %285
  %287 = add nuw nsw i64 %245, 8
  %288 = add i64 %247, -8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %244

290:                                              ; preds = %244, %237
  %291 = phi i64 [ undef, %237 ], [ %286, %244 ]
  %292 = phi i64 [ 0, %237 ], [ %287, %244 ]
  %293 = phi i64 [ 1, %237 ], [ %286, %244 ]
  %294 = icmp eq i64 %240, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %290, %295
  %296 = phi i64 [ %303, %295 ], [ %292, %290 ]
  %297 = phi i64 [ %302, %295 ], [ %293, %290 ]
  %298 = phi i64 [ %304, %295 ], [ %240, %290 ]
  %299 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %296
  %300 = load i32, i32* %299, align 4
  %301 = sext i32 %300 to i64
  %302 = mul nsw i64 %297, %301
  %303 = add nuw nsw i64 %296, 1
  %304 = add i64 %298, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %295, !llvm.loop !63

306:                                              ; preds = %290, %295, %234
  %307 = phi i64 [ 1, %234 ], [ %291, %290 ], [ %302, %295 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %236(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 288, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0), i64 %307, i32 %231) #11
  br label %819

308:                                              ; preds = %100, %228, %104, %99
  %309 = phi %struct.TfLiteTensor* [ %108, %228 ], [ null, %104 ], [ null, %99 ], [ null, %100 ]
  %310 = icmp eq i32 %95, 7
  %311 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  br i1 %310, label %313, label %332

313:                                              ; preds = %308
  %314 = icmp eq i32 %312, 9
  br i1 %314, label %318, label %315

315:                                              ; preds = %313
  %316 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %317 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %316, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %317(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 293, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i32 %312, i32 9) #11
  br label %819

318:                                              ; preds = %313
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 3, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %324 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %323, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %324(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 294, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %320, i32 0) #11
  br label %819

325:                                              ; preds = %318
  %326 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 3, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %331 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %330, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %331(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 295, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %327, i32 0) #11
  br label %819

332:                                              ; preds = %308
  %333 = icmp eq i32 %312, %95
  br i1 %333, label %340, label %334

334:                                              ; preds = %332
  %335 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %336 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %335, align 8
  %337 = tail call i8* @TfLiteTypeGetName(i32 %312) #11
  %338 = load i32, i32* %94, align 8
  %339 = tail call i8* @TfLiteTypeGetName(i32 %338) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %336(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %337, i8* %339) #11
  br label %819

340:                                              ; preds = %325, %332
  %341 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp eq i32 %342, %95
  br i1 %343, label %350, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %346 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %345, align 8
  %347 = tail call i8* @TfLiteTypeGetName(i32 %342) #11
  %348 = load i32, i32* %94, align 8
  %349 = tail call i8* @TfLiteTypeGetName(i32 %348) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %346(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 299, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %347, i8* %349) #11
  br label %819

350:                                              ; preds = %340
  %351 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 3
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 3
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %352, %354
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %358 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %357, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %358(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i64 0, i64 0), i32 %352, i32 %354) #11
  br label %819

359:                                              ; preds = %350
  switch i32 %95, label %370 [
    i32 9, label %360
    i32 7, label %360
    i32 3, label %360
  ]

360:                                              ; preds = %359, %359, %359
  %361 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 2
  %362 = load i32, i32* %361, align 8
  %363 = icmp eq i32 %362, -1
  br i1 %363, label %364, label %368

364:                                              ; preds = %360
  %365 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  %366 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %365, align 8
  %367 = tail call i32 %366(%struct.TfLiteContext* %0, i32 1, i32* %361) #11
  br label %368

368:                                              ; preds = %364, %360
  %369 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 5
  store i32 0, i32* %369, align 4
  br label %370

370:                                              ; preds = %359, %368
  %371 = phi i32 [ 1, %368 ], [ 0, %359 ]
  %372 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %373 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %373) #11
  %374 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %371) #11
  store %struct.TfLiteIntArray* %374, %struct.TfLiteIntArray** %372, align 8
  %375 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %5, align 8
  %376 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 13
  %377 = load i8, i8* %376, align 8, !range !64
  %378 = icmp eq i8 %377, 0
  br i1 %378, label %398, label %379

379:                                              ; preds = %370
  %380 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 0
  %381 = load i32, i32* %380, align 8
  %382 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 3
  %383 = load i32, i32* %382, align 4
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %374, i64 0, i32 1, i64 %384
  store i32 %381, i32* %385, align 4
  %386 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %375, i64 0, i32 3
  %387 = load i32, i32* %386, align 4
  %388 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %389 = sext i32 %387 to i64
  %390 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %388, i64 0, i32 1, i64 %389
  %391 = load i32, i32* %390, align 4
  %392 = icmp slt i32 %391, 0
  br i1 %392, label %398, label %393

393:                                              ; preds = %379
  %394 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %395 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %394, align 8
  %396 = sext i32 %391 to i64
  %397 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %395, i64 %396
  br label %398

398:                                              ; preds = %393, %379, %370
  %399 = phi %struct.TfLiteTensor* [ null, %370 ], [ %397, %393 ], [ null, %379 ]
  %400 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 4
  %401 = load i32, i32* %400, align 8
  %402 = icmp eq i32 %401, 1
  br i1 %402, label %420, label %403

403:                                              ; preds = %398
  %404 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 4
  %405 = load i32, i32* %404, align 8
  %406 = icmp eq i32 %405, 4
  br i1 %406, label %410, label %407

407:                                              ; preds = %403
  store i32 4, i32* %404, align 8
  %408 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 1
  %409 = bitcast %union.TfLitePtrUnion* %408 to i8**
  store i8* null, i8** %409, align 8
  br label %410

410:                                              ; preds = %403, %407
  %411 = load i8, i8* %376, align 8, !range !64
  %412 = icmp eq i8 %411, 0
  br i1 %412, label %552, label %413

413:                                              ; preds = %410
  %414 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %399, i64 0, i32 4
  %415 = load i32, i32* %414, align 8
  %416 = icmp eq i32 %415, 4
  br i1 %416, label %552, label %417

417:                                              ; preds = %413
  store i32 4, i32* %414, align 8
  %418 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %399, i64 0, i32 1
  %419 = bitcast %union.TfLitePtrUnion* %418 to i8**
  store i8* null, i8** %419, align 8
  br label %552

420:                                              ; preds = %398
  %421 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %422 = load i32, i32* %421, align 8
  %423 = icmp eq i32 %422, 2
  br i1 %423, label %428, label %424

424:                                              ; preds = %420
  %425 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %426 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %425, align 8
  %427 = tail call i8* @TfLiteTypeGetName(i32 %422) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %426(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %427) #11
  br label %819

428:                                              ; preds = %420
  %429 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %430 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 0
  %431 = load i32, i32* %430, align 4
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %505

433:                                              ; preds = %428
  %434 = sext i32 %431 to i64
  %435 = add nsw i64 %434, -1
  %436 = and i64 %434, 7
  %437 = icmp ult i64 %435, 7
  br i1 %437, label %486, label %438

438:                                              ; preds = %433
  %439 = sub nsw i64 %434, %436
  br label %440

440:                                              ; preds = %440, %438
  %441 = phi i64 [ 0, %438 ], [ %483, %440 ]
  %442 = phi i64 [ 1, %438 ], [ %482, %440 ]
  %443 = phi i64 [ %439, %438 ], [ %484, %440 ]
  %444 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %441
  %445 = load i32, i32* %444, align 4
  %446 = sext i32 %445 to i64
  %447 = mul nsw i64 %442, %446
  %448 = or i64 %441, 1
  %449 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %448
  %450 = load i32, i32* %449, align 4
  %451 = sext i32 %450 to i64
  %452 = mul nsw i64 %447, %451
  %453 = or i64 %441, 2
  %454 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %453
  %455 = load i32, i32* %454, align 4
  %456 = sext i32 %455 to i64
  %457 = mul nsw i64 %452, %456
  %458 = or i64 %441, 3
  %459 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %458
  %460 = load i32, i32* %459, align 4
  %461 = sext i32 %460 to i64
  %462 = mul nsw i64 %457, %461
  %463 = or i64 %441, 4
  %464 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %463
  %465 = load i32, i32* %464, align 4
  %466 = sext i32 %465 to i64
  %467 = mul nsw i64 %462, %466
  %468 = or i64 %441, 5
  %469 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %468
  %470 = load i32, i32* %469, align 4
  %471 = sext i32 %470 to i64
  %472 = mul nsw i64 %467, %471
  %473 = or i64 %441, 6
  %474 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %473
  %475 = load i32, i32* %474, align 4
  %476 = sext i32 %475 to i64
  %477 = mul nsw i64 %472, %476
  %478 = or i64 %441, 7
  %479 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %478
  %480 = load i32, i32* %479, align 4
  %481 = sext i32 %480 to i64
  %482 = mul nsw i64 %477, %481
  %483 = add nuw nsw i64 %441, 8
  %484 = add i64 %443, -8
  %485 = icmp eq i64 %484, 0
  br i1 %485, label %486, label %440

486:                                              ; preds = %440, %433
  %487 = phi i64 [ undef, %433 ], [ %482, %440 ]
  %488 = phi i64 [ 0, %433 ], [ %483, %440 ]
  %489 = phi i64 [ 1, %433 ], [ %482, %440 ]
  %490 = icmp eq i64 %436, 0
  br i1 %490, label %502, label %491

491:                                              ; preds = %486, %491
  %492 = phi i64 [ %499, %491 ], [ %488, %486 ]
  %493 = phi i64 [ %498, %491 ], [ %489, %486 ]
  %494 = phi i64 [ %500, %491 ], [ %436, %486 ]
  %495 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %429, i64 0, i32 1, i64 %492
  %496 = load i32, i32* %495, align 4
  %497 = sext i32 %496 to i64
  %498 = mul nsw i64 %493, %497
  %499 = add nuw nsw i64 %492, 1
  %500 = add i64 %494, -1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %502, label %491, !llvm.loop !65

502:                                              ; preds = %491, %486
  %503 = phi i64 [ %487, %486 ], [ %498, %491 ]
  %504 = trunc i64 %503 to i32
  br label %505

505:                                              ; preds = %502, %428
  %506 = phi i32 [ 1, %428 ], [ %504, %502 ]
  %507 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %506) #11
  %508 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %507, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  %510 = icmp sgt i32 %509, 0
  br i1 %510, label %511, label %541

511:                                              ; preds = %505
  %512 = icmp eq %struct.TfLiteTensor* %36, null
  %513 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %514 = sext i32 %509 to i64
  %515 = and i64 %514, 1
  %516 = icmp eq i32 %509, 1
  br i1 %516, label %530, label %517

517:                                              ; preds = %511
  %518 = sub nsw i64 %514, %515
  br label %519

519:                                              ; preds = %833, %517
  %520 = phi i64 [ 0, %517 ], [ %838, %833 ]
  %521 = phi i64 [ %518, %517 ], [ %839, %833 ]
  br i1 %512, label %524, label %522

522:                                              ; preds = %519
  %523 = load i32*, i32** %513, align 8
  br label %524

524:                                              ; preds = %522, %519
  %525 = phi i32* [ %523, %522 ], [ null, %519 ]
  %526 = getelementptr inbounds i32, i32* %525, i64 %520
  %527 = load i32, i32* %526, align 4
  %528 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %507, i64 0, i32 1, i64 %520
  store i32 %527, i32* %528, align 4
  %529 = or i64 %520, 1
  br i1 %512, label %833, label %831

530:                                              ; preds = %833, %511
  %531 = phi i64 [ 0, %511 ], [ %838, %833 ]
  %532 = icmp eq i64 %515, 0
  br i1 %532, label %541, label %533

533:                                              ; preds = %530
  br i1 %512, label %536, label %534

534:                                              ; preds = %533
  %535 = load i32*, i32** %513, align 8
  br label %536

536:                                              ; preds = %534, %533
  %537 = phi i32* [ %535, %534 ], [ null, %533 ]
  %538 = getelementptr inbounds i32, i32* %537, i64 %531
  %539 = load i32, i32* %538, align 4
  %540 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %507, i64 0, i32 1, i64 %531
  store i32 %539, i32* %540, align 4
  br label %541

541:                                              ; preds = %536, %530, %505
  %542 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %543 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %542, align 8
  %544 = tail call i32 %543(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %66, %struct.TfLiteIntArray* %507) #11
  %545 = icmp eq i32 %544, 0
  br i1 %545, label %546, label %819

546:                                              ; preds = %541
  %547 = load i8, i8* %376, align 8, !range !64
  %548 = icmp eq i8 %547, 0
  br i1 %548, label %552, label %549

549:                                              ; preds = %546
  %550 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv18ResizeCol2ImTensorEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %36, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %56, %struct.TfLiteTensor* %399)
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %819

552:                                              ; preds = %417, %413, %546, %410, %549
  %553 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 14
  %554 = load i8, i8* %553, align 1, !range !64
  %555 = icmp eq i8 %554, 0
  br i1 %555, label %590, label %556

556:                                              ; preds = %552
  %557 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 1
  %558 = load i32, i32* %557, align 4
  %559 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %560 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 4
  %561 = load i32, i32* %560, align 8
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %559, i64 0, i32 1, i64 %562
  store i32 %558, i32* %563, align 4
  %564 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %375, i64 0, i32 4
  %565 = load i32, i32* %564, align 8
  %566 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %567 = sext i32 %565 to i64
  %568 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %566, i64 0, i32 1, i64 %567
  %569 = load i32, i32* %568, align 4
  %570 = icmp slt i32 %569, 0
  br i1 %570, label %576, label %571

571:                                              ; preds = %556
  %572 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %573 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %572, align 8
  %574 = sext i32 %569 to i64
  %575 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %573, i64 %574
  br label %576

576:                                              ; preds = %556, %571
  %577 = phi %struct.TfLiteTensor* [ %575, %571 ], [ null, %556 ]
  %578 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 4
  %579 = load i32, i32* %578, align 8
  %580 = icmp eq i32 %579, 1
  br i1 %580, label %588, label %581

581:                                              ; preds = %576
  %582 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %577, i64 0, i32 4
  %583 = load i32, i32* %582, align 8
  %584 = icmp eq i32 %583, 4
  br i1 %584, label %590, label %585

585:                                              ; preds = %581
  store i32 4, i32* %582, align 8
  %586 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %577, i64 0, i32 1
  %587 = bitcast %union.TfLitePtrUnion* %586 to i8**
  store i8* null, i8** %587, align 8
  br label %590

588:                                              ; preds = %576
  %589 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %577)
  br label %590

590:                                              ; preds = %585, %581, %588, %552
  %591 = load i32, i32* %94, align 8
  switch i32 %591, label %818 [
    i32 3, label %592
    i32 9, label %592
    i32 7, label %592
  ]

592:                                              ; preds = %590, %590, %590
  %593 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 2
  %594 = load i32, i32* %593, align 8
  %595 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %596 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 5
  %597 = load i32, i32* %596, align 4
  %598 = sext i32 %597 to i64
  %599 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %595, i64 0, i32 1, i64 %598
  store i32 %594, i32* %599, align 4
  %600 = load i32, i32* %596, align 4
  %601 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %372, align 8
  %602 = sext i32 %600 to i64
  %603 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %601, i64 0, i32 1, i64 %602
  %604 = load i32, i32* %603, align 4
  %605 = icmp slt i32 %604, 0
  br i1 %605, label %611, label %606

606:                                              ; preds = %592
  %607 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %608 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %607, align 8
  %609 = sext i32 %604 to i64
  %610 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %608, i64 %609
  br label %611

611:                                              ; preds = %592, %606
  %612 = phi %struct.TfLiteTensor* [ %610, %606 ], [ null, %592 ]
  %613 = load i32, i32* %94, align 8
  %614 = icmp eq i32 %613, 7
  %615 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %612, i64 0, i32 0
  %616 = select i1 %614, i32 4, i32 2
  store i32 %616, i32* %615, align 8
  %617 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %612, i64 0, i32 4
  store i32 4, i32* %617, align 8
  %618 = load i32, i32* %400, align 8
  %619 = icmp eq i32 %618, 1
  br i1 %619, label %620, label %746

620:                                              ; preds = %611
  %621 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %622 = load i32, i32* %621, align 8
  %623 = icmp eq i32 %622, 2
  br i1 %623, label %628, label %624

624:                                              ; preds = %620
  %625 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %626 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %625, align 8
  %627 = tail call i8* @TfLiteTypeGetName(i32 %622) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %626(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %627) #11
  br label %819

628:                                              ; preds = %620
  %629 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %630 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  %632 = icmp sgt i32 %631, 0
  br i1 %632, label %633, label %705

633:                                              ; preds = %628
  %634 = sext i32 %631 to i64
  %635 = add nsw i64 %634, -1
  %636 = and i64 %634, 7
  %637 = icmp ult i64 %635, 7
  br i1 %637, label %686, label %638

638:                                              ; preds = %633
  %639 = sub nsw i64 %634, %636
  br label %640

640:                                              ; preds = %640, %638
  %641 = phi i64 [ 0, %638 ], [ %683, %640 ]
  %642 = phi i64 [ 1, %638 ], [ %682, %640 ]
  %643 = phi i64 [ %639, %638 ], [ %684, %640 ]
  %644 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %641
  %645 = load i32, i32* %644, align 4
  %646 = sext i32 %645 to i64
  %647 = mul nsw i64 %642, %646
  %648 = or i64 %641, 1
  %649 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %648
  %650 = load i32, i32* %649, align 4
  %651 = sext i32 %650 to i64
  %652 = mul nsw i64 %647, %651
  %653 = or i64 %641, 2
  %654 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %653
  %655 = load i32, i32* %654, align 4
  %656 = sext i32 %655 to i64
  %657 = mul nsw i64 %652, %656
  %658 = or i64 %641, 3
  %659 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %658
  %660 = load i32, i32* %659, align 4
  %661 = sext i32 %660 to i64
  %662 = mul nsw i64 %657, %661
  %663 = or i64 %641, 4
  %664 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %663
  %665 = load i32, i32* %664, align 4
  %666 = sext i32 %665 to i64
  %667 = mul nsw i64 %662, %666
  %668 = or i64 %641, 5
  %669 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %668
  %670 = load i32, i32* %669, align 4
  %671 = sext i32 %670 to i64
  %672 = mul nsw i64 %667, %671
  %673 = or i64 %641, 6
  %674 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %673
  %675 = load i32, i32* %674, align 4
  %676 = sext i32 %675 to i64
  %677 = mul nsw i64 %672, %676
  %678 = or i64 %641, 7
  %679 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %678
  %680 = load i32, i32* %679, align 4
  %681 = sext i32 %680 to i64
  %682 = mul nsw i64 %677, %681
  %683 = add nuw nsw i64 %641, 8
  %684 = add i64 %643, -8
  %685 = icmp eq i64 %684, 0
  br i1 %685, label %686, label %640

686:                                              ; preds = %640, %633
  %687 = phi i64 [ undef, %633 ], [ %682, %640 ]
  %688 = phi i64 [ 0, %633 ], [ %683, %640 ]
  %689 = phi i64 [ 1, %633 ], [ %682, %640 ]
  %690 = icmp eq i64 %636, 0
  br i1 %690, label %702, label %691

691:                                              ; preds = %686, %691
  %692 = phi i64 [ %699, %691 ], [ %688, %686 ]
  %693 = phi i64 [ %698, %691 ], [ %689, %686 ]
  %694 = phi i64 [ %700, %691 ], [ %636, %686 ]
  %695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %629, i64 0, i32 1, i64 %692
  %696 = load i32, i32* %695, align 4
  %697 = sext i32 %696 to i64
  %698 = mul nsw i64 %693, %697
  %699 = add nuw nsw i64 %692, 1
  %700 = add i64 %694, -1
  %701 = icmp eq i64 %700, 0
  br i1 %701, label %702, label %691, !llvm.loop !66

702:                                              ; preds = %691, %686
  %703 = phi i64 [ %687, %686 ], [ %698, %691 ]
  %704 = trunc i64 %703 to i32
  br label %705

705:                                              ; preds = %702, %628
  %706 = phi i32 [ 1, %628 ], [ %704, %702 ]
  %707 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %706) #11
  %708 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %707, i64 0, i32 0
  %709 = load i32, i32* %708, align 4
  %710 = icmp sgt i32 %709, 0
  br i1 %710, label %711, label %741

711:                                              ; preds = %705
  %712 = icmp eq %struct.TfLiteTensor* %36, null
  %713 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %714 = sext i32 %709 to i64
  %715 = and i64 %714, 1
  %716 = icmp eq i32 %709, 1
  br i1 %716, label %730, label %717

717:                                              ; preds = %711
  %718 = sub nsw i64 %714, %715
  br label %719

719:                                              ; preds = %823, %717
  %720 = phi i64 [ 0, %717 ], [ %828, %823 ]
  %721 = phi i64 [ %718, %717 ], [ %829, %823 ]
  br i1 %712, label %724, label %722

722:                                              ; preds = %719
  %723 = load i32*, i32** %713, align 8
  br label %724

724:                                              ; preds = %722, %719
  %725 = phi i32* [ %723, %722 ], [ null, %719 ]
  %726 = getelementptr inbounds i32, i32* %725, i64 %720
  %727 = load i32, i32* %726, align 4
  %728 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %707, i64 0, i32 1, i64 %720
  store i32 %727, i32* %728, align 4
  %729 = or i64 %720, 1
  br i1 %712, label %823, label %821

730:                                              ; preds = %823, %711
  %731 = phi i64 [ 0, %711 ], [ %828, %823 ]
  %732 = icmp eq i64 %715, 0
  br i1 %732, label %741, label %733

733:                                              ; preds = %730
  br i1 %712, label %736, label %734

734:                                              ; preds = %733
  %735 = load i32*, i32** %713, align 8
  br label %736

736:                                              ; preds = %734, %733
  %737 = phi i32* [ %735, %734 ], [ null, %733 ]
  %738 = getelementptr inbounds i32, i32* %737, i64 %731
  %739 = load i32, i32* %738, align 4
  %740 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %707, i64 0, i32 1, i64 %731
  store i32 %739, i32* %740, align 4
  br label %741

741:                                              ; preds = %736, %730, %705
  %742 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %743 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %742, align 8
  %744 = tail call i32 %743(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %612, %struct.TfLiteIntArray* %707) #11
  %745 = icmp eq i32 %744, 0
  br i1 %745, label %746, label %819

746:                                              ; preds = %611, %741
  %747 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 12, i32 0
  %748 = load i32, i32* %747, align 8
  %749 = icmp eq i32 %748, 1
  br i1 %749, label %753, label %750

750:                                              ; preds = %746
  %751 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %752 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %751, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %752(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 363, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0), i32 %748, i32 1) #11
  br label %819

753:                                              ; preds = %746
  %754 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 12, i32 1
  %755 = bitcast i8** %754 to %struct.TfLiteAffineQuantization**
  %756 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %755, align 8
  %757 = icmp eq %struct.TfLiteAffineQuantization* %756, null
  br i1 %757, label %758, label %761

758:                                              ; preds = %753
  %759 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %760 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %759, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %760(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 367, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0)) #11
  br label %819

761:                                              ; preds = %753
  %762 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %756, i64 0, i32 0
  %763 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %762, align 8
  %764 = icmp eq %struct.TfLiteFloatArray* %763, null
  br i1 %764, label %765, label %768

765:                                              ; preds = %761
  %766 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %767 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %766, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %767(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 368, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0)) #11
  br label %819

768:                                              ; preds = %761
  %769 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %763, i64 0, i32 0
  %770 = load i32, i32* %769, align 4
  %771 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 9
  %772 = sext i32 %770 to i64
  %773 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 9, i32 0, i32 1
  %774 = bitcast i32** %773 to i64*
  %775 = load i64, i64* %774, align 8
  %776 = bitcast %"class.std::__1::vector"* %771 to i64*
  %777 = load i64, i64* %776, align 8
  %778 = sub i64 %775, %777
  %779 = ashr exact i64 %778, 2
  %780 = icmp ult i64 %779, %772
  %781 = inttoptr i64 %777 to i32*
  br i1 %780, label %782, label %784

782:                                              ; preds = %768
  %783 = sub nsw i64 %772, %779
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %771, i64 %783) #11
  br label %788

784:                                              ; preds = %768
  %785 = icmp ugt i64 %779, %772
  br i1 %785, label %786, label %788

786:                                              ; preds = %784
  %787 = getelementptr inbounds i32, i32* %781, i64 %772
  store i32* %787, i32** %773, align 8
  br label %788

788:                                              ; preds = %782, %784, %786
  %789 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 10
  %790 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 10, i32 0, i32 1
  %791 = bitcast i32** %790 to i64*
  %792 = load i64, i64* %791, align 8
  %793 = bitcast %"class.std::__1::vector"* %789 to i64*
  %794 = load i64, i64* %793, align 8
  %795 = sub i64 %792, %794
  %796 = ashr exact i64 %795, 2
  %797 = icmp ult i64 %796, %772
  %798 = inttoptr i64 %794 to i32*
  br i1 %797, label %799, label %803

799:                                              ; preds = %788
  %800 = sub nsw i64 %772, %796
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %789, i64 %800) #11
  %801 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %789, i64 0, i32 0, i32 0
  %802 = load i32*, i32** %801, align 8
  br label %807

803:                                              ; preds = %788
  %804 = icmp ugt i64 %796, %772
  br i1 %804, label %805, label %807

805:                                              ; preds = %803
  %806 = getelementptr inbounds i32, i32* %798, i64 %772
  store i32* %806, i32** %790, align 8
  br label %807

807:                                              ; preds = %799, %803, %805
  %808 = phi i32* [ %802, %799 ], [ %798, %803 ], [ %798, %805 ]
  %809 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %809) #11
  store i32 0, i32* %3, align 4
  %810 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 7
  %811 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 8
  %812 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 11
  %813 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 12
  %814 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %771, i64 0, i32 0, i32 0
  %815 = load i32*, i32** %814, align 8
  %816 = call i32 @_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPiS9_S9_S9_S9_S9_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %56, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %309, %struct.TfLiteTensor* %66, i32* nonnull dereferenceable(4) %3, i32* %810, i32* %811, i32* %812, i32* %813, i32* %815, i32* %808) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %809) #11
  %817 = icmp eq i32 %816, 0
  br i1 %817, label %818, label %819

818:                                              ; preds = %807, %590
  br label %819

819:                                              ; preds = %741, %807, %624, %758, %765, %750, %424, %541, %72, %81, %90, %96, %115, %126, %135, %142, %147, %306, %315, %322, %329, %334, %344, %356, %549, %818, %23, %14
  %820 = phi i32 [ 1, %23 ], [ 1, %14 ], [ 1, %72 ], [ 1, %81 ], [ 1, %90 ], [ 1, %115 ], [ 1, %126 ], [ 1, %306 ], [ 1, %315 ], [ 1, %322 ], [ 1, %329 ], [ 1, %344 ], [ 1, %356 ], [ 1, %334 ], [ 1, %135 ], [ 1, %142 ], [ 1, %147 ], [ 1, %96 ], [ 0, %818 ], [ %550, %549 ], [ 1, %424 ], [ %544, %541 ], [ 1, %750 ], [ 1, %765 ], [ 1, %758 ], [ 1, %624 ], [ %744, %741 ], [ %816, %807 ]
  ret i32 %820

821:                                              ; preds = %724
  %822 = load i32*, i32** %713, align 8
  br label %823

823:                                              ; preds = %821, %724
  %824 = phi i32* [ %822, %821 ], [ null, %724 ]
  %825 = getelementptr inbounds i32, i32* %824, i64 %729
  %826 = load i32, i32* %825, align 4
  %827 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %707, i64 0, i32 1, i64 %729
  store i32 %826, i32* %827, align 4
  %828 = add nuw nsw i64 %720, 2
  %829 = add i64 %721, -2
  %830 = icmp eq i64 %829, 0
  br i1 %830, label %730, label %719

831:                                              ; preds = %524
  %832 = load i32*, i32** %513, align 8
  br label %833

833:                                              ; preds = %831, %524
  %834 = phi i32* [ %832, %831 ], [ null, %524 ]
  %835 = getelementptr inbounds i32, i32* %834, i64 %529
  %836 = load i32, i32* %835, align 4
  %837 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %507, i64 0, i32 1, i64 %529
  store i32 %836, i32* %837, align 4
  %838 = add nuw nsw i64 %520, 2
  %839 = add i64 %521, -2
  %840 = icmp eq i64 %839, 0
  br i1 %840, label %530, label %519
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %13 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %47

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %42, %38, %33
  %48 = phi %struct.TfLiteTensor* [ null, %33 ], [ %46, %42 ], [ null, %38 ]
  %49 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %47, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %47 ]
  %61 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %62 = bitcast i8** %61 to %"struct.tflite::ops::builtin::transpose_conv::OpData"**
  %63 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %62, align 8
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 13
  %65 = load i8, i8* %64, align 8, !range !64
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 1, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %78 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %77, align 8
  %79 = sext i32 %74 to i64
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %78, i64 %79
  br label %81

81:                                               ; preds = %76, %67, %59
  %82 = phi %struct.TfLiteTensor* [ null, %59 ], [ %80, %76 ], [ null, %67 ]
  %83 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 14
  %84 = load i8, i8* %83, align 1, !range !64
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %90 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %89, align 8
  %91 = sext i32 %88 to i64
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %90, i64 0, i32 1, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %97 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %97, i64 %98
  br label %100

100:                                              ; preds = %95, %86, %81
  %101 = phi %struct.TfLiteTensor* [ null, %81 ], [ %99, %95 ], [ null, %86 ]
  %102 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %103 = bitcast i8** %102 to %struct.TfLiteTransposeConvParams**
  %104 = load %struct.TfLiteTransposeConvParams*, %struct.TfLiteTransposeConvParams** %103, align 8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 4
  br i1 %107, label %108, label %237

108:                                              ; preds = %100
  %109 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %114 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %113, align 8
  %115 = tail call i8* @TfLiteTypeGetName(i32 %110) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %114(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %115) #11
  br label %796

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %194

122:                                              ; preds = %116
  %123 = sext i32 %120 to i64
  %124 = add nsw i64 %123, -1
  %125 = and i64 %123, 7
  %126 = icmp ult i64 %124, 7
  br i1 %126, label %175, label %127

127:                                              ; preds = %122
  %128 = sub nsw i64 %123, %125
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %172, %129 ]
  %131 = phi i64 [ 1, %127 ], [ %171, %129 ]
  %132 = phi i64 [ %128, %127 ], [ %173, %129 ]
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %130
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %131, %135
  %137 = or i64 %130, 1
  %138 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %136, %140
  %142 = or i64 %130, 2
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %141, %145
  %147 = or i64 %130, 3
  %148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %146, %150
  %152 = or i64 %130, 4
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = mul nsw i64 %151, %155
  %157 = or i64 %130, 5
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = mul nsw i64 %156, %160
  %162 = or i64 %130, 6
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = mul nsw i64 %161, %165
  %167 = or i64 %130, 7
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %166, %170
  %172 = add nuw nsw i64 %130, 8
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %129

175:                                              ; preds = %129, %122
  %176 = phi i64 [ undef, %122 ], [ %171, %129 ]
  %177 = phi i64 [ 0, %122 ], [ %172, %129 ]
  %178 = phi i64 [ 1, %122 ], [ %171, %129 ]
  %179 = icmp eq i64 %125, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %175, %180
  %181 = phi i64 [ %188, %180 ], [ %177, %175 ]
  %182 = phi i64 [ %187, %180 ], [ %178, %175 ]
  %183 = phi i64 [ %189, %180 ], [ %125, %175 ]
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %181
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = mul nsw i64 %182, %186
  %188 = add nuw nsw i64 %181, 1
  %189 = add i64 %183, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %180, !llvm.loop !67

191:                                              ; preds = %180, %175
  %192 = phi i64 [ %176, %175 ], [ %187, %180 ]
  %193 = trunc i64 %192 to i32
  br label %194

194:                                              ; preds = %191, %116
  %195 = phi i32 [ 1, %116 ], [ %193, %191 ]
  %196 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %195) #11
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %230

200:                                              ; preds = %194
  %201 = icmp eq %struct.TfLiteTensor* %14, null
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %203 = sext i32 %198 to i64
  %204 = and i64 %203, 1
  %205 = icmp eq i32 %198, 1
  br i1 %205, label %219, label %206

206:                                              ; preds = %200
  %207 = sub nsw i64 %203, %204
  br label %208

208:                                              ; preds = %830, %206
  %209 = phi i64 [ 0, %206 ], [ %835, %830 ]
  %210 = phi i64 [ %207, %206 ], [ %836, %830 ]
  br i1 %201, label %213, label %211

211:                                              ; preds = %208
  %212 = load i32*, i32** %202, align 8
  br label %213

213:                                              ; preds = %211, %208
  %214 = phi i32* [ %212, %211 ], [ null, %208 ]
  %215 = getelementptr inbounds i32, i32* %214, i64 %209
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %209
  store i32 %216, i32* %217, align 4
  %218 = or i64 %209, 1
  br i1 %201, label %830, label %828

219:                                              ; preds = %830, %200
  %220 = phi i64 [ 0, %200 ], [ %835, %830 ]
  %221 = icmp eq i64 %204, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %219
  br i1 %201, label %225, label %223

223:                                              ; preds = %222
  %224 = load i32*, i32** %202, align 8
  br label %225

225:                                              ; preds = %223, %222
  %226 = phi i32* [ %224, %223 ], [ null, %222 ]
  %227 = getelementptr inbounds i32, i32* %226, i64 %220
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %220
  store i32 %228, i32* %229, align 4
  br label %230

230:                                              ; preds = %225, %219, %194
  %231 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %232 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %231, align 8
  %233 = tail call i32 %232(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %60, %struct.TfLiteIntArray* %196) #11
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %796

235:                                              ; preds = %230
  %236 = load i8, i8* %64, align 8, !range !64
  br label %237

237:                                              ; preds = %235, %100
  %238 = phi i8 [ %236, %235 ], [ %65, %100 ]
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 4
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %242, 4
  br i1 %243, label %244, label %247

244:                                              ; preds = %240
  %245 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv18ResizeCol2ImTensorEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %14, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %82)
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %796

247:                                              ; preds = %237, %244, %240
  %248 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %249 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %248, align 8
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %249, i64 0, i32 1, i64 2
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %249, i64 0, i32 1, i64 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 2
  %255 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %254, align 8
  %256 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %255, i64 0, i32 1, i64 2
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %255, i64 0, i32 1, i64 1
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  switch i32 %265, label %281 [
    i32 1, label %266
    i32 2, label %271
  ]

266:                                              ; preds = %247
  %267 = add nsw i32 %263, %251
  %268 = add nsw i32 %267, -1
  %269 = add nsw i32 %261, %253
  %270 = add nsw i32 %269, -1
  br label %276

271:                                              ; preds = %247
  %272 = add nsw i32 %263, %251
  %273 = sub i32 %272, %257
  %274 = add nsw i32 %261, %253
  %275 = sub i32 %274, %259
  br label %276

276:                                              ; preds = %271, %266
  %277 = phi i32 [ %270, %266 ], [ %275, %271 ]
  %278 = phi i32 [ %268, %266 ], [ %273, %271 ]
  %279 = sdiv i32 %278, %263
  %280 = sdiv i32 %277, %261
  br label %281

281:                                              ; preds = %276, %247
  %282 = phi i32 [ 0, %247 ], [ %279, %276 ]
  %283 = phi i32 [ 0, %247 ], [ %280, %276 ]
  %284 = add nsw i32 %283, -1
  %285 = mul nsw i32 %284, %261
  %286 = sub i32 %259, %253
  %287 = add i32 %286, %285
  %288 = icmp sgt i32 %287, 0
  %289 = select i1 %288, i32 %287, i32 0
  %290 = and i32 %289, 1
  %291 = lshr i32 %289, 1
  %292 = add nsw i32 %282, -1
  %293 = mul nsw i32 %292, %263
  %294 = sub i32 %257, %251
  %295 = add i32 %294, %293
  %296 = icmp sgt i32 %295, 0
  %297 = select i1 %296, i32 %295, i32 0
  %298 = and i32 %297, 1
  %299 = lshr i32 %297, 1
  %300 = zext i32 %291 to i64
  %301 = shl nuw nsw i64 %300, 32
  %302 = zext i32 %299 to i64
  %303 = or i64 %301, %302
  %304 = zext i32 %290 to i64
  %305 = shl nuw nsw i64 %304, 32
  %306 = zext i32 %298 to i64
  %307 = or i64 %305, %306
  %308 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 6
  %309 = bitcast %struct.TfLitePaddingValues* %308 to i64*
  store i64 %303, i64* %309, align 8
  %310 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 6, i32 2
  %311 = bitcast i32* %310 to i64*
  store i64 %307, i64* %311, align 8
  %312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %313 = load i32, i32* %312, align 8
  switch i32 %313, label %792 [
    i32 1, label %314
    i32 3, label %324
    i32 9, label %480
    i32 7, label %636
  ]

314:                                              ; preds = %281
  %315 = load i8, i8* %83, align 1, !range !64
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %323, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %319 = load i32, i32* %318, align 8
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %323, label %321

321:                                              ; preds = %317
  %322 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %323

323:                                              ; preds = %314, %317, %321
  tail call void @_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60)
  br label %796

324:                                              ; preds = %281
  %325 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %328 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %327, align 8
  %329 = sext i32 %326 to i64
  %330 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %328, i64 0, i32 1, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %331, 0
  br i1 %332, label %338, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %335 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %334, align 8
  %336 = sext i32 %331 to i64
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %335, i64 %336
  br label %338

338:                                              ; preds = %324, %333
  %339 = phi %struct.TfLiteTensor* [ %337, %333 ], [ null, %324 ]
  %340 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %339, i64 0, i32 4
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 4
  br i1 %342, label %343, label %470

343:                                              ; preds = %338
  %344 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %345 = load i32, i32* %344, align 8
  %346 = icmp eq i32 %345, 2
  br i1 %346, label %351, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %349 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %348, align 8
  %350 = tail call i8* @TfLiteTypeGetName(i32 %345) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %349(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %350) #11
  br label %796

351:                                              ; preds = %343
  %352 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %353 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %352, align 8
  %354 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = icmp sgt i32 %355, 0
  br i1 %356, label %357, label %429

357:                                              ; preds = %351
  %358 = sext i32 %355 to i64
  %359 = add nsw i64 %358, -1
  %360 = and i64 %358, 7
  %361 = icmp ult i64 %359, 7
  br i1 %361, label %410, label %362

362:                                              ; preds = %357
  %363 = sub nsw i64 %358, %360
  br label %364

364:                                              ; preds = %364, %362
  %365 = phi i64 [ 0, %362 ], [ %407, %364 ]
  %366 = phi i64 [ 1, %362 ], [ %406, %364 ]
  %367 = phi i64 [ %363, %362 ], [ %408, %364 ]
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %365
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = mul nsw i64 %366, %370
  %372 = or i64 %365, 1
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %372
  %374 = load i32, i32* %373, align 4
  %375 = sext i32 %374 to i64
  %376 = mul nsw i64 %371, %375
  %377 = or i64 %365, 2
  %378 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = sext i32 %379 to i64
  %381 = mul nsw i64 %376, %380
  %382 = or i64 %365, 3
  %383 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = sext i32 %384 to i64
  %386 = mul nsw i64 %381, %385
  %387 = or i64 %365, 4
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = sext i32 %389 to i64
  %391 = mul nsw i64 %386, %390
  %392 = or i64 %365, 5
  %393 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = sext i32 %394 to i64
  %396 = mul nsw i64 %391, %395
  %397 = or i64 %365, 6
  %398 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = sext i32 %399 to i64
  %401 = mul nsw i64 %396, %400
  %402 = or i64 %365, 7
  %403 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = mul nsw i64 %401, %405
  %407 = add nuw nsw i64 %365, 8
  %408 = add i64 %367, -8
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %364

410:                                              ; preds = %364, %357
  %411 = phi i64 [ undef, %357 ], [ %406, %364 ]
  %412 = phi i64 [ 0, %357 ], [ %407, %364 ]
  %413 = phi i64 [ 1, %357 ], [ %406, %364 ]
  %414 = icmp eq i64 %360, 0
  br i1 %414, label %426, label %415

415:                                              ; preds = %410, %415
  %416 = phi i64 [ %423, %415 ], [ %412, %410 ]
  %417 = phi i64 [ %422, %415 ], [ %413, %410 ]
  %418 = phi i64 [ %424, %415 ], [ %360, %410 ]
  %419 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %416
  %420 = load i32, i32* %419, align 4
  %421 = sext i32 %420 to i64
  %422 = mul nsw i64 %417, %421
  %423 = add nuw nsw i64 %416, 1
  %424 = add i64 %418, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %415, !llvm.loop !68

426:                                              ; preds = %415, %410
  %427 = phi i64 [ %411, %410 ], [ %422, %415 ]
  %428 = trunc i64 %427 to i32
  br label %429

429:                                              ; preds = %426, %351
  %430 = phi i32 [ 1, %351 ], [ %428, %426 ]
  %431 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %430) #11
  %432 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = icmp sgt i32 %433, 0
  br i1 %434, label %435, label %465

435:                                              ; preds = %429
  %436 = icmp eq %struct.TfLiteTensor* %14, null
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %438 = sext i32 %433 to i64
  %439 = and i64 %438, 1
  %440 = icmp eq i32 %433, 1
  br i1 %440, label %454, label %441

441:                                              ; preds = %435
  %442 = sub nsw i64 %438, %439
  br label %443

443:                                              ; preds = %800, %441
  %444 = phi i64 [ 0, %441 ], [ %805, %800 ]
  %445 = phi i64 [ %442, %441 ], [ %806, %800 ]
  br i1 %436, label %448, label %446

446:                                              ; preds = %443
  %447 = load i32*, i32** %437, align 8
  br label %448

448:                                              ; preds = %446, %443
  %449 = phi i32* [ %447, %446 ], [ null, %443 ]
  %450 = getelementptr inbounds i32, i32* %449, i64 %444
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %444
  store i32 %451, i32* %452, align 4
  %453 = or i64 %444, 1
  br i1 %436, label %800, label %798

454:                                              ; preds = %800, %435
  %455 = phi i64 [ 0, %435 ], [ %805, %800 ]
  %456 = icmp eq i64 %439, 0
  br i1 %456, label %465, label %457

457:                                              ; preds = %454
  br i1 %436, label %460, label %458

458:                                              ; preds = %457
  %459 = load i32*, i32** %437, align 8
  br label %460

460:                                              ; preds = %458, %457
  %461 = phi i32* [ %459, %458 ], [ null, %457 ]
  %462 = getelementptr inbounds i32, i32* %461, i64 %455
  %463 = load i32, i32* %462, align 4
  %464 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %455
  store i32 %463, i32* %464, align 4
  br label %465

465:                                              ; preds = %460, %454, %429
  %466 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %467 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %466, align 8
  %468 = tail call i32 %467(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %339, %struct.TfLiteIntArray* %431) #11
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %796

470:                                              ; preds = %465, %338
  %471 = load i8, i8* %83, align 1, !range !64
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %479, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %475 = load i32, i32* %474, align 8
  %476 = icmp eq i32 %475, 1
  br i1 %476, label %479, label %477

477:                                              ; preds = %473
  %478 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %479

479:                                              ; preds = %477, %473, %470
  tail call void @_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %339)
  br label %796

480:                                              ; preds = %281
  %481 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %484 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %483, align 8
  %485 = sext i32 %482 to i64
  %486 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %484, i64 0, i32 1, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = icmp slt i32 %487, 0
  br i1 %488, label %494, label %489

489:                                              ; preds = %480
  %490 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %491 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %490, align 8
  %492 = sext i32 %487 to i64
  %493 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %491, i64 %492
  br label %494

494:                                              ; preds = %480, %489
  %495 = phi %struct.TfLiteTensor* [ %493, %489 ], [ null, %480 ]
  %496 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %495, i64 0, i32 4
  %497 = load i32, i32* %496, align 8
  %498 = icmp eq i32 %497, 4
  br i1 %498, label %499, label %626

499:                                              ; preds = %494
  %500 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp eq i32 %501, 2
  br i1 %502, label %507, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %505 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %504, align 8
  %506 = tail call i8* @TfLiteTypeGetName(i32 %501) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %505(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %506) #11
  br label %796

507:                                              ; preds = %499
  %508 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %509 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %508, align 8
  %510 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  %512 = icmp sgt i32 %511, 0
  br i1 %512, label %513, label %585

513:                                              ; preds = %507
  %514 = sext i32 %511 to i64
  %515 = add nsw i64 %514, -1
  %516 = and i64 %514, 7
  %517 = icmp ult i64 %515, 7
  br i1 %517, label %566, label %518

518:                                              ; preds = %513
  %519 = sub nsw i64 %514, %516
  br label %520

520:                                              ; preds = %520, %518
  %521 = phi i64 [ 0, %518 ], [ %563, %520 ]
  %522 = phi i64 [ 1, %518 ], [ %562, %520 ]
  %523 = phi i64 [ %519, %518 ], [ %564, %520 ]
  %524 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %521
  %525 = load i32, i32* %524, align 4
  %526 = sext i32 %525 to i64
  %527 = mul nsw i64 %522, %526
  %528 = or i64 %521, 1
  %529 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %528
  %530 = load i32, i32* %529, align 4
  %531 = sext i32 %530 to i64
  %532 = mul nsw i64 %527, %531
  %533 = or i64 %521, 2
  %534 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %533
  %535 = load i32, i32* %534, align 4
  %536 = sext i32 %535 to i64
  %537 = mul nsw i64 %532, %536
  %538 = or i64 %521, 3
  %539 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = sext i32 %540 to i64
  %542 = mul nsw i64 %537, %541
  %543 = or i64 %521, 4
  %544 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = mul nsw i64 %542, %546
  %548 = or i64 %521, 5
  %549 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = sext i32 %550 to i64
  %552 = mul nsw i64 %547, %551
  %553 = or i64 %521, 6
  %554 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = sext i32 %555 to i64
  %557 = mul nsw i64 %552, %556
  %558 = or i64 %521, 7
  %559 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = mul nsw i64 %557, %561
  %563 = add nuw nsw i64 %521, 8
  %564 = add i64 %523, -8
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %566, label %520

566:                                              ; preds = %520, %513
  %567 = phi i64 [ undef, %513 ], [ %562, %520 ]
  %568 = phi i64 [ 0, %513 ], [ %563, %520 ]
  %569 = phi i64 [ 1, %513 ], [ %562, %520 ]
  %570 = icmp eq i64 %516, 0
  br i1 %570, label %582, label %571

571:                                              ; preds = %566, %571
  %572 = phi i64 [ %579, %571 ], [ %568, %566 ]
  %573 = phi i64 [ %578, %571 ], [ %569, %566 ]
  %574 = phi i64 [ %580, %571 ], [ %516, %566 ]
  %575 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %572
  %576 = load i32, i32* %575, align 4
  %577 = sext i32 %576 to i64
  %578 = mul nsw i64 %573, %577
  %579 = add nuw nsw i64 %572, 1
  %580 = add i64 %574, -1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %571, !llvm.loop !69

582:                                              ; preds = %571, %566
  %583 = phi i64 [ %567, %566 ], [ %578, %571 ]
  %584 = trunc i64 %583 to i32
  br label %585

585:                                              ; preds = %582, %507
  %586 = phi i32 [ 1, %507 ], [ %584, %582 ]
  %587 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %586) #11
  %588 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = icmp sgt i32 %589, 0
  br i1 %590, label %591, label %621

591:                                              ; preds = %585
  %592 = icmp eq %struct.TfLiteTensor* %14, null
  %593 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %594 = sext i32 %589 to i64
  %595 = and i64 %594, 1
  %596 = icmp eq i32 %589, 1
  br i1 %596, label %610, label %597

597:                                              ; preds = %591
  %598 = sub nsw i64 %594, %595
  br label %599

599:                                              ; preds = %810, %597
  %600 = phi i64 [ 0, %597 ], [ %815, %810 ]
  %601 = phi i64 [ %598, %597 ], [ %816, %810 ]
  br i1 %592, label %604, label %602

602:                                              ; preds = %599
  %603 = load i32*, i32** %593, align 8
  br label %604

604:                                              ; preds = %602, %599
  %605 = phi i32* [ %603, %602 ], [ null, %599 ]
  %606 = getelementptr inbounds i32, i32* %605, i64 %600
  %607 = load i32, i32* %606, align 4
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %600
  store i32 %607, i32* %608, align 4
  %609 = or i64 %600, 1
  br i1 %592, label %810, label %808

610:                                              ; preds = %810, %591
  %611 = phi i64 [ 0, %591 ], [ %815, %810 ]
  %612 = icmp eq i64 %595, 0
  br i1 %612, label %621, label %613

613:                                              ; preds = %610
  br i1 %592, label %616, label %614

614:                                              ; preds = %613
  %615 = load i32*, i32** %593, align 8
  br label %616

616:                                              ; preds = %614, %613
  %617 = phi i32* [ %615, %614 ], [ null, %613 ]
  %618 = getelementptr inbounds i32, i32* %617, i64 %611
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %611
  store i32 %619, i32* %620, align 4
  br label %621

621:                                              ; preds = %616, %610, %585
  %622 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %623 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %622, align 8
  %624 = tail call i32 %623(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %495, %struct.TfLiteIntArray* %587) #11
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %796

626:                                              ; preds = %621, %494
  %627 = load i8, i8* %83, align 1, !range !64
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %635, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %631 = load i32, i32* %630, align 8
  %632 = icmp eq i32 %631, 1
  br i1 %632, label %635, label %633

633:                                              ; preds = %629
  %634 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %635

635:                                              ; preds = %629, %633, %626
  tail call void @_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %495)
  br label %796

636:                                              ; preds = %281
  %637 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %638 = load i32, i32* %637, align 4
  %639 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8
  %641 = sext i32 %638 to i64
  %642 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = icmp slt i32 %643, 0
  br i1 %644, label %650, label %645

645:                                              ; preds = %636
  %646 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %647 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %646, align 8
  %648 = sext i32 %643 to i64
  %649 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %647, i64 %648
  br label %650

650:                                              ; preds = %636, %645
  %651 = phi %struct.TfLiteTensor* [ %649, %645 ], [ null, %636 ]
  %652 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %651, i64 0, i32 4
  %653 = load i32, i32* %652, align 8
  %654 = icmp eq i32 %653, 4
  br i1 %654, label %655, label %782

655:                                              ; preds = %650
  %656 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %657 = load i32, i32* %656, align 8
  %658 = icmp eq i32 %657, 2
  br i1 %658, label %663, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %661 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %660, align 8
  %662 = tail call i8* @TfLiteTypeGetName(i32 %657) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %661(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %662) #11
  br label %796

663:                                              ; preds = %655
  %664 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %665 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8
  %666 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 0
  %667 = load i32, i32* %666, align 4
  %668 = icmp sgt i32 %667, 0
  br i1 %668, label %669, label %741

669:                                              ; preds = %663
  %670 = sext i32 %667 to i64
  %671 = add nsw i64 %670, -1
  %672 = and i64 %670, 7
  %673 = icmp ult i64 %671, 7
  br i1 %673, label %722, label %674

674:                                              ; preds = %669
  %675 = sub nsw i64 %670, %672
  br label %676

676:                                              ; preds = %676, %674
  %677 = phi i64 [ 0, %674 ], [ %719, %676 ]
  %678 = phi i64 [ 1, %674 ], [ %718, %676 ]
  %679 = phi i64 [ %675, %674 ], [ %720, %676 ]
  %680 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %677
  %681 = load i32, i32* %680, align 4
  %682 = sext i32 %681 to i64
  %683 = mul nsw i64 %678, %682
  %684 = or i64 %677, 1
  %685 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %684
  %686 = load i32, i32* %685, align 4
  %687 = sext i32 %686 to i64
  %688 = mul nsw i64 %683, %687
  %689 = or i64 %677, 2
  %690 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = sext i32 %691 to i64
  %693 = mul nsw i64 %688, %692
  %694 = or i64 %677, 3
  %695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = sext i32 %696 to i64
  %698 = mul nsw i64 %693, %697
  %699 = or i64 %677, 4
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = sext i32 %701 to i64
  %703 = mul nsw i64 %698, %702
  %704 = or i64 %677, 5
  %705 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %704
  %706 = load i32, i32* %705, align 4
  %707 = sext i32 %706 to i64
  %708 = mul nsw i64 %703, %707
  %709 = or i64 %677, 6
  %710 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %709
  %711 = load i32, i32* %710, align 4
  %712 = sext i32 %711 to i64
  %713 = mul nsw i64 %708, %712
  %714 = or i64 %677, 7
  %715 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %714
  %716 = load i32, i32* %715, align 4
  %717 = sext i32 %716 to i64
  %718 = mul nsw i64 %713, %717
  %719 = add nuw nsw i64 %677, 8
  %720 = add i64 %679, -8
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %722, label %676

722:                                              ; preds = %676, %669
  %723 = phi i64 [ undef, %669 ], [ %718, %676 ]
  %724 = phi i64 [ 0, %669 ], [ %719, %676 ]
  %725 = phi i64 [ 1, %669 ], [ %718, %676 ]
  %726 = icmp eq i64 %672, 0
  br i1 %726, label %738, label %727

727:                                              ; preds = %722, %727
  %728 = phi i64 [ %735, %727 ], [ %724, %722 ]
  %729 = phi i64 [ %734, %727 ], [ %725, %722 ]
  %730 = phi i64 [ %736, %727 ], [ %672, %722 ]
  %731 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %728
  %732 = load i32, i32* %731, align 4
  %733 = sext i32 %732 to i64
  %734 = mul nsw i64 %729, %733
  %735 = add nuw nsw i64 %728, 1
  %736 = add i64 %730, -1
  %737 = icmp eq i64 %736, 0
  br i1 %737, label %738, label %727, !llvm.loop !70

738:                                              ; preds = %727, %722
  %739 = phi i64 [ %723, %722 ], [ %734, %727 ]
  %740 = trunc i64 %739 to i32
  br label %741

741:                                              ; preds = %738, %663
  %742 = phi i32 [ 1, %663 ], [ %740, %738 ]
  %743 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %742) #11
  %744 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  %746 = icmp sgt i32 %745, 0
  br i1 %746, label %747, label %777

747:                                              ; preds = %741
  %748 = icmp eq %struct.TfLiteTensor* %14, null
  %749 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %750 = sext i32 %745 to i64
  %751 = and i64 %750, 1
  %752 = icmp eq i32 %745, 1
  br i1 %752, label %766, label %753

753:                                              ; preds = %747
  %754 = sub nsw i64 %750, %751
  br label %755

755:                                              ; preds = %820, %753
  %756 = phi i64 [ 0, %753 ], [ %825, %820 ]
  %757 = phi i64 [ %754, %753 ], [ %826, %820 ]
  br i1 %748, label %760, label %758

758:                                              ; preds = %755
  %759 = load i32*, i32** %749, align 8
  br label %760

760:                                              ; preds = %758, %755
  %761 = phi i32* [ %759, %758 ], [ null, %755 ]
  %762 = getelementptr inbounds i32, i32* %761, i64 %756
  %763 = load i32, i32* %762, align 4
  %764 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %756
  store i32 %763, i32* %764, align 4
  %765 = or i64 %756, 1
  br i1 %748, label %820, label %818

766:                                              ; preds = %820, %747
  %767 = phi i64 [ 0, %747 ], [ %825, %820 ]
  %768 = icmp eq i64 %751, 0
  br i1 %768, label %777, label %769

769:                                              ; preds = %766
  br i1 %748, label %772, label %770

770:                                              ; preds = %769
  %771 = load i32*, i32** %749, align 8
  br label %772

772:                                              ; preds = %770, %769
  %773 = phi i32* [ %771, %770 ], [ null, %769 ]
  %774 = getelementptr inbounds i32, i32* %773, i64 %767
  %775 = load i32, i32* %774, align 4
  %776 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %767
  store i32 %775, i32* %776, align 4
  br label %777

777:                                              ; preds = %772, %766, %741
  %778 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %779 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %778, align 8
  %780 = tail call i32 %779(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %651, %struct.TfLiteIntArray* %743) #11
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %796

782:                                              ; preds = %777, %650
  %783 = load i8, i8* %83, align 1, !range !64
  %784 = icmp eq i8 %783, 0
  br i1 %784, label %791, label %785

785:                                              ; preds = %782
  %786 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %787 = load i32, i32* %786, align 8
  %788 = icmp eq i32 %787, 1
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  %790 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %791

791:                                              ; preds = %785, %789, %782
  tail call void @_ZN6tflite3ops7builtin14transpose_conv27EvalQuantizedPerChannel16x8EP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSC_SC_SC_PSA_SD_SD_(%struct.TfLiteContext* undef, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* undef, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %651)
  br label %796

792:                                              ; preds = %281
  %793 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %794 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %793, align 8
  %795 = tail call i8* @TfLiteTypeGetName(i32 %313) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %794(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), i8* %795) #11
  br label %796

796:                                              ; preds = %659, %777, %503, %621, %347, %465, %112, %230, %792, %791, %635, %479, %323, %244
  %797 = phi i32 [ %245, %244 ], [ 1, %792 ], [ 0, %791 ], [ 0, %635 ], [ 0, %479 ], [ 0, %323 ], [ 1, %112 ], [ %233, %230 ], [ 1, %347 ], [ %468, %465 ], [ 1, %503 ], [ %624, %621 ], [ 1, %659 ], [ %780, %777 ]
  ret i32 %797

798:                                              ; preds = %448
  %799 = load i32*, i32** %437, align 8
  br label %800

800:                                              ; preds = %798, %448
  %801 = phi i32* [ %799, %798 ], [ null, %448 ]
  %802 = getelementptr inbounds i32, i32* %801, i64 %453
  %803 = load i32, i32* %802, align 4
  %804 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %453
  store i32 %803, i32* %804, align 4
  %805 = add nuw nsw i64 %444, 2
  %806 = add i64 %445, -2
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %454, label %443

808:                                              ; preds = %604
  %809 = load i32*, i32** %593, align 8
  br label %810

810:                                              ; preds = %808, %604
  %811 = phi i32* [ %809, %808 ], [ null, %604 ]
  %812 = getelementptr inbounds i32, i32* %811, i64 %609
  %813 = load i32, i32* %812, align 4
  %814 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %609
  store i32 %813, i32* %814, align 4
  %815 = add nuw nsw i64 %600, 2
  %816 = add i64 %601, -2
  %817 = icmp eq i64 %816, 0
  br i1 %817, label %610, label %599

818:                                              ; preds = %760
  %819 = load i32*, i32** %749, align 8
  br label %820

820:                                              ; preds = %818, %760
  %821 = phi i32* [ %819, %818 ], [ null, %760 ]
  %822 = getelementptr inbounds i32, i32* %821, i64 %765
  %823 = load i32, i32* %822, align 4
  %824 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %765
  store i32 %823, i32* %824, align 4
  %825 = add nuw nsw i64 %756, 2
  %826 = add i64 %757, -2
  %827 = icmp eq i64 %826, 0
  br i1 %827, label %766, label %755

828:                                              ; preds = %213
  %829 = load i32*, i32** %202, align 8
  br label %830

830:                                              ; preds = %828, %213
  %831 = phi i32* [ %829, %828 ], [ null, %213 ]
  %832 = getelementptr inbounds i32, i32* %831, i64 %218
  %833 = load i32, i32* %832, align 4
  %834 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %218
  store i32 %833, i32* %834, align 4
  %835 = add nuw nsw i64 %209, 2
  %836 = add i64 %210, -2
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %219, label %208
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin34Register_TRANSPOSECONV_GENERIC_OPTEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin34Register_TRANSPOSECONV_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14transpose_conv7PrepareILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %5 = bitcast i8** %4 to %"struct.tflite::ops::builtin::transpose_conv::OpData"**
  %6 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %8 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %7, align 8
  %9 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 4
  %12 = add i32 %10, -3
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %17, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %16 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %15, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %16(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 253, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.12, i64 0, i64 0)) #11
  br label %833

17:                                               ; preds = %2
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %19 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %20 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %25 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %24, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %25(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 254, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 %21, i32 1) #11
  br label %833

26:                                               ; preds = %17
  %27 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %26, %30
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %26 ]
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %35, %40
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %45, %50
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %45 ]
  %57 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %19, i64 0, i32 1, i64 0
  %58 = load i32, i32* %57, align 4
  %59 = icmp slt i32 %58, 0
  br i1 %59, label %65, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %62 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %61, align 8
  %63 = sext i32 %58 to i64
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %62, i64 %63
  br label %65

65:                                               ; preds = %55, %60
  %66 = phi %struct.TfLiteTensor* [ %64, %60 ], [ null, %55 ]
  %67 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %68 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %68, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %74 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %73, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %74(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 266, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.14, i64 0, i64 0), i32 %70, i32 1) #11
  br label %833

75:                                               ; preds = %65
  %76 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 2
  %77 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %76, align 8
  %78 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 4
  br i1 %80, label %84, label %81

81:                                               ; preds = %75
  %82 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %83 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %82, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %83(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 267, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.16, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %79, i32 4) #11
  br label %833

84:                                               ; preds = %75
  %85 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 2
  %86 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %85, align 8
  %87 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 4
  br i1 %89, label %93, label %90

90:                                               ; preds = %84
  %91 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %92 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %91, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %92(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 268, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i32 %88, i32 4) #11
  br label %833

93:                                               ; preds = %84
  %94 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 0
  %95 = load i32, i32* %94, align 8
  switch i32 %95, label %96 [
    i32 1, label %99
    i32 3, label %99
    i32 9, label %99
    i32 7, label %99
  ]

96:                                               ; preds = %93
  %97 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %98 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %97, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %98(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 271, i8* getelementptr inbounds ([122 x i8], [122 x i8]* @.str.18, i64 0, i64 0)) #11
  br label %833

99:                                               ; preds = %93, %93, %93, %93
  br i1 %11, label %100, label %308

100:                                              ; preds = %99
  %101 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %8, i64 0, i32 1, i64 3
  %102 = load i32, i32* %101, align 4
  %103 = icmp slt i32 %102, 0
  br i1 %103, label %308, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %106 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %105, align 8
  %107 = sext i32 %102 to i64
  %108 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107
  %109 = icmp eq %struct.TfLiteTensor* %108, null
  br i1 %109, label %308, label %110

110:                                              ; preds = %104
  switch i32 %95, label %129 [
    i32 3, label %111
    i32 9, label %111
  ]

111:                                              ; preds = %110, %110
  %112 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 0
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 2
  br i1 %114, label %120, label %115

115:                                              ; preds = %111
  %116 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %117 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %116, align 8
  %118 = tail call i8* @TfLiteTypeGetName(i32 %113) #11
  %119 = tail call i8* @TfLiteTypeGetName(i32 2) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %117(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 277, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8* %118, i8* %119) #11
  br label %833

120:                                              ; preds = %111
  %121 = icmp eq i32 %95, 9
  br i1 %121, label %122, label %153

122:                                              ; preds = %120
  %123 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 3, i32 1
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %153, label %126

126:                                              ; preds = %122
  %127 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %128 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %127, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %128(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 279, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %124, i32 0) #11
  br label %833

129:                                              ; preds = %110
  %130 = icmp eq i32 %95, 7
  %131 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %108, i64 0, i32 0
  %132 = load i32, i32* %131, align 8
  br i1 %130, label %133, label %145

133:                                              ; preds = %129
  %134 = icmp eq i32 %132, 4
  br i1 %134, label %138, label %135

135:                                              ; preds = %133
  %136 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %137 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %136, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %137(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 282, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.24, i64 0, i64 0), i32 %132, i32 4) #11
  br label %833

138:                                              ; preds = %133
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 3, i32 1
  %140 = load i32, i32* %139, align 4
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %153, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %144 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %143, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %144(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.22, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %140, i32 0) #11
  br label %833

145:                                              ; preds = %129
  %146 = icmp eq i32 %132, %95
  br i1 %146, label %153, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %149 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %148, align 8
  %150 = tail call i8* @TfLiteTypeGetName(i32 %132) #11
  %151 = load i32, i32* %94, align 8
  %152 = tail call i8* @TfLiteTypeGetName(i32 %151) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %149(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 285, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.20, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %150, i8* %152) #11
  br label %833

153:                                              ; preds = %122, %138, %145, %120
  %154 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %106, i64 %107, i32 2
  %155 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %154, align 8
  %156 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  %158 = icmp sgt i32 %157, 0
  br i1 %158, label %159, label %228

159:                                              ; preds = %153
  %160 = sext i32 %157 to i64
  %161 = add nsw i64 %160, -1
  %162 = and i64 %160, 7
  %163 = icmp ult i64 %161, 7
  br i1 %163, label %212, label %164

164:                                              ; preds = %159
  %165 = sub nsw i64 %160, %162
  br label %166

166:                                              ; preds = %166, %164
  %167 = phi i64 [ 0, %164 ], [ %209, %166 ]
  %168 = phi i64 [ 1, %164 ], [ %208, %166 ]
  %169 = phi i64 [ %165, %164 ], [ %210, %166 ]
  %170 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %167
  %171 = load i32, i32* %170, align 4
  %172 = sext i32 %171 to i64
  %173 = mul nsw i64 %168, %172
  %174 = or i64 %167, 1
  %175 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %174
  %176 = load i32, i32* %175, align 4
  %177 = sext i32 %176 to i64
  %178 = mul nsw i64 %173, %177
  %179 = or i64 %167, 2
  %180 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %179
  %181 = load i32, i32* %180, align 4
  %182 = sext i32 %181 to i64
  %183 = mul nsw i64 %178, %182
  %184 = or i64 %167, 3
  %185 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %184
  %186 = load i32, i32* %185, align 4
  %187 = sext i32 %186 to i64
  %188 = mul nsw i64 %183, %187
  %189 = or i64 %167, 4
  %190 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %189
  %191 = load i32, i32* %190, align 4
  %192 = sext i32 %191 to i64
  %193 = mul nsw i64 %188, %192
  %194 = or i64 %167, 5
  %195 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %194
  %196 = load i32, i32* %195, align 4
  %197 = sext i32 %196 to i64
  %198 = mul nsw i64 %193, %197
  %199 = or i64 %167, 6
  %200 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = sext i32 %201 to i64
  %203 = mul nsw i64 %198, %202
  %204 = or i64 %167, 7
  %205 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %204
  %206 = load i32, i32* %205, align 4
  %207 = sext i32 %206 to i64
  %208 = mul nsw i64 %203, %207
  %209 = add nuw nsw i64 %167, 8
  %210 = add i64 %169, -8
  %211 = icmp eq i64 %210, 0
  br i1 %211, label %212, label %166

212:                                              ; preds = %166, %159
  %213 = phi i64 [ undef, %159 ], [ %208, %166 ]
  %214 = phi i64 [ 0, %159 ], [ %209, %166 ]
  %215 = phi i64 [ 1, %159 ], [ %208, %166 ]
  %216 = icmp eq i64 %162, 0
  br i1 %216, label %228, label %217

217:                                              ; preds = %212, %217
  %218 = phi i64 [ %225, %217 ], [ %214, %212 ]
  %219 = phi i64 [ %224, %217 ], [ %215, %212 ]
  %220 = phi i64 [ %226, %217 ], [ %162, %212 ]
  %221 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %218
  %222 = load i32, i32* %221, align 4
  %223 = sext i32 %222 to i64
  %224 = mul nsw i64 %219, %223
  %225 = add nuw nsw i64 %218, 1
  %226 = add i64 %220, -1
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %228, label %217, !llvm.loop !71

228:                                              ; preds = %212, %217, %153
  %229 = phi i64 [ 1, %153 ], [ %213, %212 ], [ %224, %217 ]
  %230 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 0
  %231 = load i32, i32* %230, align 4
  %232 = sext i32 %231 to i64
  %233 = icmp eq i64 %229, %232
  br i1 %233, label %308, label %234

234:                                              ; preds = %228
  %235 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %236 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %235, align 8
  br i1 %158, label %237, label %306

237:                                              ; preds = %234
  %238 = sext i32 %157 to i64
  %239 = add nsw i64 %238, -1
  %240 = and i64 %238, 7
  %241 = icmp ult i64 %239, 7
  br i1 %241, label %290, label %242

242:                                              ; preds = %237
  %243 = sub nsw i64 %238, %240
  br label %244

244:                                              ; preds = %244, %242
  %245 = phi i64 [ 0, %242 ], [ %287, %244 ]
  %246 = phi i64 [ 1, %242 ], [ %286, %244 ]
  %247 = phi i64 [ %243, %242 ], [ %288, %244 ]
  %248 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %245
  %249 = load i32, i32* %248, align 4
  %250 = sext i32 %249 to i64
  %251 = mul nsw i64 %246, %250
  %252 = or i64 %245, 1
  %253 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %252
  %254 = load i32, i32* %253, align 4
  %255 = sext i32 %254 to i64
  %256 = mul nsw i64 %251, %255
  %257 = or i64 %245, 2
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %257
  %259 = load i32, i32* %258, align 4
  %260 = sext i32 %259 to i64
  %261 = mul nsw i64 %256, %260
  %262 = or i64 %245, 3
  %263 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %262
  %264 = load i32, i32* %263, align 4
  %265 = sext i32 %264 to i64
  %266 = mul nsw i64 %261, %265
  %267 = or i64 %245, 4
  %268 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %267
  %269 = load i32, i32* %268, align 4
  %270 = sext i32 %269 to i64
  %271 = mul nsw i64 %266, %270
  %272 = or i64 %245, 5
  %273 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %272
  %274 = load i32, i32* %273, align 4
  %275 = sext i32 %274 to i64
  %276 = mul nsw i64 %271, %275
  %277 = or i64 %245, 6
  %278 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %277
  %279 = load i32, i32* %278, align 4
  %280 = sext i32 %279 to i64
  %281 = mul nsw i64 %276, %280
  %282 = or i64 %245, 7
  %283 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %282
  %284 = load i32, i32* %283, align 4
  %285 = sext i32 %284 to i64
  %286 = mul nsw i64 %281, %285
  %287 = add nuw nsw i64 %245, 8
  %288 = add i64 %247, -8
  %289 = icmp eq i64 %288, 0
  br i1 %289, label %290, label %244

290:                                              ; preds = %244, %237
  %291 = phi i64 [ undef, %237 ], [ %286, %244 ]
  %292 = phi i64 [ 0, %237 ], [ %287, %244 ]
  %293 = phi i64 [ 1, %237 ], [ %286, %244 ]
  %294 = icmp eq i64 %240, 0
  br i1 %294, label %306, label %295

295:                                              ; preds = %290, %295
  %296 = phi i64 [ %303, %295 ], [ %292, %290 ]
  %297 = phi i64 [ %302, %295 ], [ %293, %290 ]
  %298 = phi i64 [ %304, %295 ], [ %240, %290 ]
  %299 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %155, i64 0, i32 1, i64 %296
  %300 = load i32, i32* %299, align 4
  %301 = sext i32 %300 to i64
  %302 = mul nsw i64 %297, %301
  %303 = add nuw nsw i64 %296, 1
  %304 = add i64 %298, -1
  %305 = icmp eq i64 %304, 0
  br i1 %305, label %306, label %295, !llvm.loop !72

306:                                              ; preds = %290, %295, %234
  %307 = phi i64 [ 1, %234 ], [ %291, %290 ], [ %302, %295 ]
  tail call void (%struct.TfLiteContext*, i8*, ...) %236(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 288, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.26, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.27, i64 0, i64 0), i64 %307, i32 %231) #11
  br label %833

308:                                              ; preds = %100, %228, %104, %99
  %309 = phi %struct.TfLiteTensor* [ %108, %228 ], [ null, %104 ], [ null, %99 ], [ null, %100 ]
  %310 = icmp eq i32 %95, 7
  %311 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 0
  %312 = load i32, i32* %311, align 8
  br i1 %310, label %313, label %332

313:                                              ; preds = %308
  %314 = icmp eq i32 %312, 9
  br i1 %314, label %318, label %315

315:                                              ; preds = %313
  %316 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %317 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %316, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %317(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 293, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.29, i64 0, i64 0), i32 %312, i32 9) #11
  br label %833

318:                                              ; preds = %313
  %319 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 3, i32 1
  %320 = load i32, i32* %319, align 4
  %321 = icmp eq i32 %320, 0
  br i1 %321, label %325, label %322

322:                                              ; preds = %318
  %323 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %324 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %323, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %324(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 294, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.30, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %320, i32 0) #11
  br label %833

325:                                              ; preds = %318
  %326 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 3, i32 1
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %340, label %329

329:                                              ; preds = %325
  %330 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %331 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %330, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %331(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 295, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.31, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i32 %327, i32 0) #11
  br label %833

332:                                              ; preds = %308
  %333 = icmp eq i32 %312, %95
  br i1 %333, label %340, label %334

334:                                              ; preds = %332
  %335 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %336 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %335, align 8
  %337 = tail call i8* @TfLiteTypeGetName(i32 %312) #11
  %338 = load i32, i32* %94, align 8
  %339 = tail call i8* @TfLiteTypeGetName(i32 %338) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %336(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.28, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %337, i8* %339) #11
  br label %833

340:                                              ; preds = %325, %332
  %341 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 0
  %342 = load i32, i32* %341, align 8
  %343 = icmp eq i32 %342, %95
  br i1 %343, label %350, label %344

344:                                              ; preds = %340
  %345 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %346 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %345, align 8
  %347 = tail call i8* @TfLiteTypeGetName(i32 %342) #11
  %348 = load i32, i32* %94, align 8
  %349 = tail call i8* @TfLiteTypeGetName(i32 %348) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %346(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 299, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.25, i64 0, i64 0), i8* %347, i8* %349) #11
  br label %833

350:                                              ; preds = %340
  %351 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %77, i64 0, i32 1, i64 3
  %352 = load i32, i32* %351, align 4
  %353 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %86, i64 0, i32 1, i64 3
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %352, %354
  br i1 %355, label %359, label %356

356:                                              ; preds = %350
  %357 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %358 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %357, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %358(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 303, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.33, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.34, i64 0, i64 0), i32 %352, i32 %354) #11
  br label %833

359:                                              ; preds = %350
  %360 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 0
  %361 = load i32, i32* %360, align 8
  %362 = icmp eq i32 %361, -1
  br i1 %362, label %363, label %367

363:                                              ; preds = %359
  %364 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  %365 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %364, align 8
  %366 = tail call i32 %365(%struct.TfLiteContext* %0, i32 1, i32* %360) #11
  br label %367

367:                                              ; preds = %363, %359
  %368 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 3
  store i32 0, i32* %368, align 4
  %369 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 13
  store i8 1, i8* %369, align 8
  %370 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 1
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, -1
  br i1 %372, label %373, label %377

373:                                              ; preds = %367
  %374 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  %375 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %374, align 8
  %376 = tail call i32 %375(%struct.TfLiteContext* %0, i32 1, i32* %370) #11
  br label %377

377:                                              ; preds = %373, %367
  %378 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 4
  store i32 1, i32* %378, align 8
  %379 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 14
  store i8 1, i8* %379, align 1
  switch i32 %95, label %390 [
    i32 9, label %380
    i32 7, label %380
    i32 3, label %380
  ]

380:                                              ; preds = %377, %377, %377
  %381 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 2
  %382 = load i32, i32* %381, align 8
  %383 = icmp eq i32 %382, -1
  br i1 %383, label %384, label %388

384:                                              ; preds = %380
  %385 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 6
  %386 = load i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, i32*)** %385, align 8
  %387 = tail call i32 %386(%struct.TfLiteContext* %0, i32 1, i32* %381) #11
  br label %388

388:                                              ; preds = %384, %380
  %389 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 5
  store i32 2, i32* %389, align 4
  br label %390

390:                                              ; preds = %377, %388
  %391 = phi i32 [ 3, %388 ], [ 2, %377 ]
  %392 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %393 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  tail call void @TfLiteIntArrayFree(%struct.TfLiteIntArray* %393) #11
  %394 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %391) #11
  store %struct.TfLiteIntArray* %394, %struct.TfLiteIntArray** %392, align 8
  %395 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %5, align 8
  %396 = load i8, i8* %369, align 8, !range !64
  %397 = icmp eq i8 %396, 0
  br i1 %397, label %415, label %398

398:                                              ; preds = %390
  %399 = load i32, i32* %360, align 8
  %400 = load i32, i32* %368, align 4
  %401 = sext i32 %400 to i64
  %402 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %394, i64 0, i32 1, i64 %401
  store i32 %399, i32* %402, align 4
  %403 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %395, i64 0, i32 3
  %404 = load i32, i32* %403, align 4
  %405 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %406 = sext i32 %404 to i64
  %407 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %405, i64 0, i32 1, i64 %406
  %408 = load i32, i32* %407, align 4
  %409 = icmp slt i32 %408, 0
  br i1 %409, label %415, label %410

410:                                              ; preds = %398
  %411 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %412 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %411, align 8
  %413 = sext i32 %408 to i64
  %414 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %412, i64 %413
  br label %415

415:                                              ; preds = %410, %398, %390
  %416 = phi %struct.TfLiteTensor* [ null, %390 ], [ %414, %410 ], [ null, %398 ]
  %417 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 4
  %418 = load i32, i32* %417, align 8
  %419 = icmp eq i32 %418, 1
  br i1 %419, label %437, label %420

420:                                              ; preds = %415
  %421 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 4
  %422 = load i32, i32* %421, align 8
  %423 = icmp eq i32 %422, 4
  br i1 %423, label %427, label %424

424:                                              ; preds = %420
  store i32 4, i32* %421, align 8
  %425 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %66, i64 0, i32 1
  %426 = bitcast %union.TfLitePtrUnion* %425 to i8**
  store i8* null, i8** %426, align 8
  br label %427

427:                                              ; preds = %420, %424
  %428 = load i8, i8* %369, align 8, !range !64
  %429 = icmp eq i8 %428, 0
  br i1 %429, label %569, label %430

430:                                              ; preds = %427
  %431 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %416, i64 0, i32 4
  %432 = load i32, i32* %431, align 8
  %433 = icmp eq i32 %432, 4
  br i1 %433, label %569, label %434

434:                                              ; preds = %430
  store i32 4, i32* %431, align 8
  %435 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %416, i64 0, i32 1
  %436 = bitcast %union.TfLitePtrUnion* %435 to i8**
  store i8* null, i8** %436, align 8
  br label %569

437:                                              ; preds = %415
  %438 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = icmp eq i32 %439, 2
  br i1 %440, label %445, label %441

441:                                              ; preds = %437
  %442 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %443 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %442, align 8
  %444 = tail call i8* @TfLiteTypeGetName(i32 %439) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %443(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %444) #11
  br label %833

445:                                              ; preds = %437
  %446 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %447 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 0
  %448 = load i32, i32* %447, align 4
  %449 = icmp sgt i32 %448, 0
  br i1 %449, label %450, label %522

450:                                              ; preds = %445
  %451 = sext i32 %448 to i64
  %452 = add nsw i64 %451, -1
  %453 = and i64 %451, 7
  %454 = icmp ult i64 %452, 7
  br i1 %454, label %503, label %455

455:                                              ; preds = %450
  %456 = sub nsw i64 %451, %453
  br label %457

457:                                              ; preds = %457, %455
  %458 = phi i64 [ 0, %455 ], [ %500, %457 ]
  %459 = phi i64 [ 1, %455 ], [ %499, %457 ]
  %460 = phi i64 [ %456, %455 ], [ %501, %457 ]
  %461 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %458
  %462 = load i32, i32* %461, align 4
  %463 = sext i32 %462 to i64
  %464 = mul nsw i64 %459, %463
  %465 = or i64 %458, 1
  %466 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %465
  %467 = load i32, i32* %466, align 4
  %468 = sext i32 %467 to i64
  %469 = mul nsw i64 %464, %468
  %470 = or i64 %458, 2
  %471 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %470
  %472 = load i32, i32* %471, align 4
  %473 = sext i32 %472 to i64
  %474 = mul nsw i64 %469, %473
  %475 = or i64 %458, 3
  %476 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %475
  %477 = load i32, i32* %476, align 4
  %478 = sext i32 %477 to i64
  %479 = mul nsw i64 %474, %478
  %480 = or i64 %458, 4
  %481 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %480
  %482 = load i32, i32* %481, align 4
  %483 = sext i32 %482 to i64
  %484 = mul nsw i64 %479, %483
  %485 = or i64 %458, 5
  %486 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = sext i32 %487 to i64
  %489 = mul nsw i64 %484, %488
  %490 = or i64 %458, 6
  %491 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %490
  %492 = load i32, i32* %491, align 4
  %493 = sext i32 %492 to i64
  %494 = mul nsw i64 %489, %493
  %495 = or i64 %458, 7
  %496 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %495
  %497 = load i32, i32* %496, align 4
  %498 = sext i32 %497 to i64
  %499 = mul nsw i64 %494, %498
  %500 = add nuw nsw i64 %458, 8
  %501 = add i64 %460, -8
  %502 = icmp eq i64 %501, 0
  br i1 %502, label %503, label %457

503:                                              ; preds = %457, %450
  %504 = phi i64 [ undef, %450 ], [ %499, %457 ]
  %505 = phi i64 [ 0, %450 ], [ %500, %457 ]
  %506 = phi i64 [ 1, %450 ], [ %499, %457 ]
  %507 = icmp eq i64 %453, 0
  br i1 %507, label %519, label %508

508:                                              ; preds = %503, %508
  %509 = phi i64 [ %516, %508 ], [ %505, %503 ]
  %510 = phi i64 [ %515, %508 ], [ %506, %503 ]
  %511 = phi i64 [ %517, %508 ], [ %453, %503 ]
  %512 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %446, i64 0, i32 1, i64 %509
  %513 = load i32, i32* %512, align 4
  %514 = sext i32 %513 to i64
  %515 = mul nsw i64 %510, %514
  %516 = add nuw nsw i64 %509, 1
  %517 = add i64 %511, -1
  %518 = icmp eq i64 %517, 0
  br i1 %518, label %519, label %508, !llvm.loop !73

519:                                              ; preds = %508, %503
  %520 = phi i64 [ %504, %503 ], [ %515, %508 ]
  %521 = trunc i64 %520 to i32
  br label %522

522:                                              ; preds = %519, %445
  %523 = phi i32 [ 1, %445 ], [ %521, %519 ]
  %524 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %523) #11
  %525 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  %527 = icmp sgt i32 %526, 0
  br i1 %527, label %528, label %558

528:                                              ; preds = %522
  %529 = icmp eq %struct.TfLiteTensor* %36, null
  %530 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %531 = sext i32 %526 to i64
  %532 = and i64 %531, 1
  %533 = icmp eq i32 %526, 1
  br i1 %533, label %547, label %534

534:                                              ; preds = %528
  %535 = sub nsw i64 %531, %532
  br label %536

536:                                              ; preds = %847, %534
  %537 = phi i64 [ 0, %534 ], [ %852, %847 ]
  %538 = phi i64 [ %535, %534 ], [ %853, %847 ]
  br i1 %529, label %541, label %539

539:                                              ; preds = %536
  %540 = load i32*, i32** %530, align 8
  br label %541

541:                                              ; preds = %539, %536
  %542 = phi i32* [ %540, %539 ], [ null, %536 ]
  %543 = getelementptr inbounds i32, i32* %542, i64 %537
  %544 = load i32, i32* %543, align 4
  %545 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 1, i64 %537
  store i32 %544, i32* %545, align 4
  %546 = or i64 %537, 1
  br i1 %529, label %847, label %845

547:                                              ; preds = %847, %528
  %548 = phi i64 [ 0, %528 ], [ %852, %847 ]
  %549 = icmp eq i64 %532, 0
  br i1 %549, label %558, label %550

550:                                              ; preds = %547
  br i1 %529, label %553, label %551

551:                                              ; preds = %550
  %552 = load i32*, i32** %530, align 8
  br label %553

553:                                              ; preds = %551, %550
  %554 = phi i32* [ %552, %551 ], [ null, %550 ]
  %555 = getelementptr inbounds i32, i32* %554, i64 %548
  %556 = load i32, i32* %555, align 4
  %557 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 1, i64 %548
  store i32 %556, i32* %557, align 4
  br label %558

558:                                              ; preds = %553, %547, %522
  %559 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %560 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %559, align 8
  %561 = tail call i32 %560(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %66, %struct.TfLiteIntArray* %524) #11
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %833

563:                                              ; preds = %558
  %564 = load i8, i8* %369, align 8, !range !64
  %565 = icmp eq i8 %564, 0
  br i1 %565, label %569, label %566

566:                                              ; preds = %563
  %567 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv18ResizeCol2ImTensorEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %36, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %56, %struct.TfLiteTensor* %416)
  %568 = icmp eq i32 %567, 0
  br i1 %568, label %569, label %833

569:                                              ; preds = %434, %430, %563, %427, %566
  %570 = load i8, i8* %379, align 1, !range !64
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %604, label %572

572:                                              ; preds = %569
  %573 = load i32, i32* %370, align 4
  %574 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %575 = load i32, i32* %378, align 8
  %576 = sext i32 %575 to i64
  %577 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %574, i64 0, i32 1, i64 %576
  store i32 %573, i32* %577, align 4
  %578 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %395, i64 0, i32 4
  %579 = load i32, i32* %578, align 8
  %580 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %581 = sext i32 %579 to i64
  %582 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %580, i64 0, i32 1, i64 %581
  %583 = load i32, i32* %582, align 4
  %584 = icmp slt i32 %583, 0
  br i1 %584, label %590, label %585

585:                                              ; preds = %572
  %586 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %587 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %586, align 8
  %588 = sext i32 %583 to i64
  %589 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %587, i64 %588
  br label %590

590:                                              ; preds = %572, %585
  %591 = phi %struct.TfLiteTensor* [ %589, %585 ], [ null, %572 ]
  %592 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 4
  %593 = load i32, i32* %592, align 8
  %594 = icmp eq i32 %593, 1
  br i1 %594, label %602, label %595

595:                                              ; preds = %590
  %596 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %591, i64 0, i32 4
  %597 = load i32, i32* %596, align 8
  %598 = icmp eq i32 %597, 4
  br i1 %598, label %604, label %599

599:                                              ; preds = %595
  store i32 4, i32* %596, align 8
  %600 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %591, i64 0, i32 1
  %601 = bitcast %union.TfLitePtrUnion* %600 to i8**
  store i8* null, i8** %601, align 8
  br label %604

602:                                              ; preds = %590
  %603 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %591)
  br label %604

604:                                              ; preds = %599, %595, %602, %569
  %605 = load i32, i32* %94, align 8
  switch i32 %605, label %832 [
    i32 3, label %606
    i32 9, label %606
    i32 7, label %606
  ]

606:                                              ; preds = %604, %604, %604
  %607 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 2
  %608 = load i32, i32* %607, align 8
  %609 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %610 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 5
  %611 = load i32, i32* %610, align 4
  %612 = sext i32 %611 to i64
  %613 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %609, i64 0, i32 1, i64 %612
  store i32 %608, i32* %613, align 4
  %614 = load i32, i32* %610, align 4
  %615 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %392, align 8
  %616 = sext i32 %614 to i64
  %617 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %615, i64 0, i32 1, i64 %616
  %618 = load i32, i32* %617, align 4
  %619 = icmp slt i32 %618, 0
  br i1 %619, label %625, label %620

620:                                              ; preds = %606
  %621 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %622 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %621, align 8
  %623 = sext i32 %618 to i64
  %624 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %622, i64 %623
  br label %625

625:                                              ; preds = %606, %620
  %626 = phi %struct.TfLiteTensor* [ %624, %620 ], [ null, %606 ]
  %627 = load i32, i32* %94, align 8
  %628 = icmp eq i32 %627, 7
  %629 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %626, i64 0, i32 0
  %630 = select i1 %628, i32 4, i32 2
  store i32 %630, i32* %629, align 8
  %631 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %626, i64 0, i32 4
  store i32 4, i32* %631, align 8
  %632 = load i32, i32* %417, align 8
  %633 = icmp eq i32 %632, 1
  br i1 %633, label %634, label %760

634:                                              ; preds = %625
  %635 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %636 = load i32, i32* %635, align 8
  %637 = icmp eq i32 %636, 2
  br i1 %637, label %642, label %638

638:                                              ; preds = %634
  %639 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %640 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %639, align 8
  %641 = tail call i8* @TfLiteTypeGetName(i32 %636) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %640(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %641) #11
  br label %833

642:                                              ; preds = %634
  %643 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %67, align 8
  %644 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 0
  %645 = load i32, i32* %644, align 4
  %646 = icmp sgt i32 %645, 0
  br i1 %646, label %647, label %719

647:                                              ; preds = %642
  %648 = sext i32 %645 to i64
  %649 = add nsw i64 %648, -1
  %650 = and i64 %648, 7
  %651 = icmp ult i64 %649, 7
  br i1 %651, label %700, label %652

652:                                              ; preds = %647
  %653 = sub nsw i64 %648, %650
  br label %654

654:                                              ; preds = %654, %652
  %655 = phi i64 [ 0, %652 ], [ %697, %654 ]
  %656 = phi i64 [ 1, %652 ], [ %696, %654 ]
  %657 = phi i64 [ %653, %652 ], [ %698, %654 ]
  %658 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %655
  %659 = load i32, i32* %658, align 4
  %660 = sext i32 %659 to i64
  %661 = mul nsw i64 %656, %660
  %662 = or i64 %655, 1
  %663 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %662
  %664 = load i32, i32* %663, align 4
  %665 = sext i32 %664 to i64
  %666 = mul nsw i64 %661, %665
  %667 = or i64 %655, 2
  %668 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %667
  %669 = load i32, i32* %668, align 4
  %670 = sext i32 %669 to i64
  %671 = mul nsw i64 %666, %670
  %672 = or i64 %655, 3
  %673 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %672
  %674 = load i32, i32* %673, align 4
  %675 = sext i32 %674 to i64
  %676 = mul nsw i64 %671, %675
  %677 = or i64 %655, 4
  %678 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %677
  %679 = load i32, i32* %678, align 4
  %680 = sext i32 %679 to i64
  %681 = mul nsw i64 %676, %680
  %682 = or i64 %655, 5
  %683 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %682
  %684 = load i32, i32* %683, align 4
  %685 = sext i32 %684 to i64
  %686 = mul nsw i64 %681, %685
  %687 = or i64 %655, 6
  %688 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %687
  %689 = load i32, i32* %688, align 4
  %690 = sext i32 %689 to i64
  %691 = mul nsw i64 %686, %690
  %692 = or i64 %655, 7
  %693 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %692
  %694 = load i32, i32* %693, align 4
  %695 = sext i32 %694 to i64
  %696 = mul nsw i64 %691, %695
  %697 = add nuw nsw i64 %655, 8
  %698 = add i64 %657, -8
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %654

700:                                              ; preds = %654, %647
  %701 = phi i64 [ undef, %647 ], [ %696, %654 ]
  %702 = phi i64 [ 0, %647 ], [ %697, %654 ]
  %703 = phi i64 [ 1, %647 ], [ %696, %654 ]
  %704 = icmp eq i64 %650, 0
  br i1 %704, label %716, label %705

705:                                              ; preds = %700, %705
  %706 = phi i64 [ %713, %705 ], [ %702, %700 ]
  %707 = phi i64 [ %712, %705 ], [ %703, %700 ]
  %708 = phi i64 [ %714, %705 ], [ %650, %700 ]
  %709 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %643, i64 0, i32 1, i64 %706
  %710 = load i32, i32* %709, align 4
  %711 = sext i32 %710 to i64
  %712 = mul nsw i64 %707, %711
  %713 = add nuw nsw i64 %706, 1
  %714 = add i64 %708, -1
  %715 = icmp eq i64 %714, 0
  br i1 %715, label %716, label %705, !llvm.loop !74

716:                                              ; preds = %705, %700
  %717 = phi i64 [ %701, %700 ], [ %712, %705 ]
  %718 = trunc i64 %717 to i32
  br label %719

719:                                              ; preds = %716, %642
  %720 = phi i32 [ 1, %642 ], [ %718, %716 ]
  %721 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %720) #11
  %722 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 0
  %723 = load i32, i32* %722, align 4
  %724 = icmp sgt i32 %723, 0
  br i1 %724, label %725, label %755

725:                                              ; preds = %719
  %726 = icmp eq %struct.TfLiteTensor* %36, null
  %727 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 1, i32 0
  %728 = sext i32 %723 to i64
  %729 = and i64 %728, 1
  %730 = icmp eq i32 %723, 1
  br i1 %730, label %744, label %731

731:                                              ; preds = %725
  %732 = sub nsw i64 %728, %729
  br label %733

733:                                              ; preds = %837, %731
  %734 = phi i64 [ 0, %731 ], [ %842, %837 ]
  %735 = phi i64 [ %732, %731 ], [ %843, %837 ]
  br i1 %726, label %738, label %736

736:                                              ; preds = %733
  %737 = load i32*, i32** %727, align 8
  br label %738

738:                                              ; preds = %736, %733
  %739 = phi i32* [ %737, %736 ], [ null, %733 ]
  %740 = getelementptr inbounds i32, i32* %739, i64 %734
  %741 = load i32, i32* %740, align 4
  %742 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 1, i64 %734
  store i32 %741, i32* %742, align 4
  %743 = or i64 %734, 1
  br i1 %726, label %837, label %835

744:                                              ; preds = %837, %725
  %745 = phi i64 [ 0, %725 ], [ %842, %837 ]
  %746 = icmp eq i64 %729, 0
  br i1 %746, label %755, label %747

747:                                              ; preds = %744
  br i1 %726, label %750, label %748

748:                                              ; preds = %747
  %749 = load i32*, i32** %727, align 8
  br label %750

750:                                              ; preds = %748, %747
  %751 = phi i32* [ %749, %748 ], [ null, %747 ]
  %752 = getelementptr inbounds i32, i32* %751, i64 %745
  %753 = load i32, i32* %752, align 4
  %754 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 1, i64 %745
  store i32 %753, i32* %754, align 4
  br label %755

755:                                              ; preds = %750, %744, %719
  %756 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %757 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %756, align 8
  %758 = tail call i32 %757(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %626, %struct.TfLiteIntArray* %721) #11
  %759 = icmp eq i32 %758, 0
  br i1 %759, label %760, label %833

760:                                              ; preds = %625, %755
  %761 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 12, i32 0
  %762 = load i32, i32* %761, align 8
  %763 = icmp eq i32 %762, 1
  br i1 %763, label %767, label %764

764:                                              ; preds = %760
  %765 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %766 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %765, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %766(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 363, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.36, i64 0, i64 0), i32 %762, i32 1) #11
  br label %833

767:                                              ; preds = %760
  %768 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 12, i32 1
  %769 = bitcast i8** %768 to %struct.TfLiteAffineQuantization**
  %770 = load %struct.TfLiteAffineQuantization*, %struct.TfLiteAffineQuantization** %769, align 8
  %771 = icmp eq %struct.TfLiteAffineQuantization* %770, null
  br i1 %771, label %772, label %775

772:                                              ; preds = %767
  %773 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %774 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %773, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %774(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 367, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.37, i64 0, i64 0)) #11
  br label %833

775:                                              ; preds = %767
  %776 = getelementptr inbounds %struct.TfLiteAffineQuantization, %struct.TfLiteAffineQuantization* %770, i64 0, i32 0
  %777 = load %struct.TfLiteFloatArray*, %struct.TfLiteFloatArray** %776, align 8
  %778 = icmp eq %struct.TfLiteFloatArray* %777, null
  br i1 %778, label %779, label %782

779:                                              ; preds = %775
  %780 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %781 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %780, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %781(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.5, i64 0, i64 0), i32 368, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.38, i64 0, i64 0)) #11
  br label %833

782:                                              ; preds = %775
  %783 = getelementptr inbounds %struct.TfLiteFloatArray, %struct.TfLiteFloatArray* %777, i64 0, i32 0
  %784 = load i32, i32* %783, align 4
  %785 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 9
  %786 = sext i32 %784 to i64
  %787 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 9, i32 0, i32 1
  %788 = bitcast i32** %787 to i64*
  %789 = load i64, i64* %788, align 8
  %790 = bitcast %"class.std::__1::vector"* %785 to i64*
  %791 = load i64, i64* %790, align 8
  %792 = sub i64 %789, %791
  %793 = ashr exact i64 %792, 2
  %794 = icmp ult i64 %793, %786
  %795 = inttoptr i64 %791 to i32*
  br i1 %794, label %796, label %798

796:                                              ; preds = %782
  %797 = sub nsw i64 %786, %793
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %785, i64 %797) #11
  br label %802

798:                                              ; preds = %782
  %799 = icmp ugt i64 %793, %786
  br i1 %799, label %800, label %802

800:                                              ; preds = %798
  %801 = getelementptr inbounds i32, i32* %795, i64 %786
  store i32* %801, i32** %787, align 8
  br label %802

802:                                              ; preds = %796, %798, %800
  %803 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 10
  %804 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 10, i32 0, i32 1
  %805 = bitcast i32** %804 to i64*
  %806 = load i64, i64* %805, align 8
  %807 = bitcast %"class.std::__1::vector"* %803 to i64*
  %808 = load i64, i64* %807, align 8
  %809 = sub i64 %806, %808
  %810 = ashr exact i64 %809, 2
  %811 = icmp ult i64 %810, %786
  %812 = inttoptr i64 %808 to i32*
  br i1 %811, label %813, label %817

813:                                              ; preds = %802
  %814 = sub nsw i64 %786, %810
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %803, i64 %814) #11
  %815 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %803, i64 0, i32 0, i32 0
  %816 = load i32*, i32** %815, align 8
  br label %821

817:                                              ; preds = %802
  %818 = icmp ugt i64 %810, %786
  br i1 %818, label %819, label %821

819:                                              ; preds = %817
  %820 = getelementptr inbounds i32, i32* %812, i64 %786
  store i32* %820, i32** %804, align 8
  br label %821

821:                                              ; preds = %813, %817, %819
  %822 = phi i32* [ %816, %813 ], [ %812, %817 ], [ %812, %819 ]
  %823 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %823) #11
  store i32 0, i32* %3, align 4
  %824 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 7
  %825 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 8
  %826 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 11
  %827 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %6, i64 0, i32 12
  %828 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %785, i64 0, i32 0, i32 0
  %829 = load i32*, i32** %828, align 8
  %830 = call i32 @_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPiS9_S9_S9_S9_S9_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %56, %struct.TfLiteTensor* %46, %struct.TfLiteTensor* %309, %struct.TfLiteTensor* %66, i32* nonnull dereferenceable(4) %3, i32* %824, i32* %825, i32* %826, i32* %827, i32* %829, i32* %822) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %823) #11
  %831 = icmp eq i32 %830, 0
  br i1 %831, label %832, label %833

832:                                              ; preds = %821, %604
  br label %833

833:                                              ; preds = %755, %821, %638, %772, %779, %764, %441, %558, %72, %81, %90, %96, %115, %126, %135, %142, %147, %306, %315, %322, %329, %334, %344, %356, %566, %832, %23, %14
  %834 = phi i32 [ 1, %23 ], [ 1, %14 ], [ 1, %72 ], [ 1, %81 ], [ 1, %90 ], [ 1, %115 ], [ 1, %126 ], [ 1, %306 ], [ 1, %315 ], [ 1, %322 ], [ 1, %329 ], [ 1, %344 ], [ 1, %356 ], [ 1, %334 ], [ 1, %135 ], [ 1, %142 ], [ 1, %147 ], [ 1, %96 ], [ 0, %832 ], [ %567, %566 ], [ 1, %441 ], [ %561, %558 ], [ 1, %764 ], [ 1, %779 ], [ 1, %772 ], [ 1, %638 ], [ %758, %755 ], [ %830, %821 ]
  ret i32 %834

835:                                              ; preds = %738
  %836 = load i32*, i32** %727, align 8
  br label %837

837:                                              ; preds = %835, %738
  %838 = phi i32* [ %836, %835 ], [ null, %738 ]
  %839 = getelementptr inbounds i32, i32* %838, i64 %743
  %840 = load i32, i32* %839, align 4
  %841 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %721, i64 0, i32 1, i64 %743
  store i32 %840, i32* %841, align 4
  %842 = add nuw nsw i64 %734, 2
  %843 = add i64 %735, -2
  %844 = icmp eq i64 %843, 0
  br i1 %844, label %744, label %733

845:                                              ; preds = %541
  %846 = load i32*, i32** %530, align 8
  br label %847

847:                                              ; preds = %845, %541
  %848 = phi i32* [ %846, %845 ], [ null, %541 ]
  %849 = getelementptr inbounds i32, i32* %848, i64 %546
  %850 = load i32, i32* %849, align 4
  %851 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %524, i64 0, i32 1, i64 %546
  store i32 %850, i32* %851, align 4
  %852 = add nuw nsw i64 %537, 2
  %853 = add i64 %538, -2
  %854 = icmp eq i64 %853, 0
  br i1 %854, label %547, label %536
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin14transpose_conv4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %4 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %13, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = sext i32 %6 to i64
  %12 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 %11
  br label %13

13:                                               ; preds = %2, %8
  %14 = phi %struct.TfLiteTensor* [ %12, %8 ], [ null, %2 ]
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %20 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %19, align 8
  %21 = sext i32 %16 to i64
  %22 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %20, i64 %21
  br label %23

23:                                               ; preds = %13, %18
  %24 = phi %struct.TfLiteTensor* [ %22, %18 ], [ null, %13 ]
  %25 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 2
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %30 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %29, align 8
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 %31
  br label %33

33:                                               ; preds = %23, %28
  %34 = phi %struct.TfLiteTensor* [ %32, %28 ], [ null, %23 ]
  %35 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 4
  br i1 %37, label %38, label %47

38:                                               ; preds = %33
  %39 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %4, i64 0, i32 1, i64 3
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, 0
  br i1 %41, label %47, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %44 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %43, align 8
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %44, i64 %45
  br label %47

47:                                               ; preds = %42, %38, %33
  %48 = phi %struct.TfLiteTensor* [ null, %33 ], [ %46, %42 ], [ null, %38 ]
  %49 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %50 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %49, align 8
  %51 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %50, i64 0, i32 1, i64 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %59, label %54

54:                                               ; preds = %47
  %55 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %56 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %55, align 8
  %57 = sext i32 %52 to i64
  %58 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 %57
  br label %59

59:                                               ; preds = %47, %54
  %60 = phi %struct.TfLiteTensor* [ %58, %54 ], [ null, %47 ]
  %61 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 4
  %62 = bitcast i8** %61 to %"struct.tflite::ops::builtin::transpose_conv::OpData"**
  %63 = load %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %"struct.tflite::ops::builtin::transpose_conv::OpData"** %62, align 8
  %64 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 13
  %65 = load i8, i8* %64, align 8, !range !64
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %81, label %67

67:                                               ; preds = %59
  %68 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 3
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %71 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %70, align 8
  %72 = sext i32 %69 to i64
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %71, i64 0, i32 1, i64 %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %81, label %76

76:                                               ; preds = %67
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %78 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %77, align 8
  %79 = sext i32 %74 to i64
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %78, i64 %79
  br label %81

81:                                               ; preds = %76, %67, %59
  %82 = phi %struct.TfLiteTensor* [ null, %59 ], [ %80, %76 ], [ null, %67 ]
  %83 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 14
  %84 = load i8, i8* %83, align 1, !range !64
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %100, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 4
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %90 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %89, align 8
  %91 = sext i32 %88 to i64
  %92 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %90, i64 0, i32 1, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = icmp slt i32 %93, 0
  br i1 %94, label %100, label %95

95:                                               ; preds = %86
  %96 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %97 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %96, align 8
  %98 = sext i32 %93 to i64
  %99 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %97, i64 %98
  br label %100

100:                                              ; preds = %95, %86, %81
  %101 = phi %struct.TfLiteTensor* [ null, %81 ], [ %99, %95 ], [ null, %86 ]
  %102 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 5
  %103 = bitcast i8** %102 to %struct.TfLiteTransposeConvParams**
  %104 = load %struct.TfLiteTransposeConvParams*, %struct.TfLiteTransposeConvParams** %103, align 8
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = icmp eq i32 %106, 4
  br i1 %107, label %108, label %237

108:                                              ; preds = %100
  %109 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %110 = load i32, i32* %109, align 8
  %111 = icmp eq i32 %110, 2
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %114 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %113, align 8
  %115 = tail call i8* @TfLiteTypeGetName(i32 %110) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %114(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %115) #11
  br label %796

116:                                              ; preds = %108
  %117 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %118 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %117, align 8
  %119 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = icmp sgt i32 %120, 0
  br i1 %121, label %122, label %194

122:                                              ; preds = %116
  %123 = sext i32 %120 to i64
  %124 = add nsw i64 %123, -1
  %125 = and i64 %123, 7
  %126 = icmp ult i64 %124, 7
  br i1 %126, label %175, label %127

127:                                              ; preds = %122
  %128 = sub nsw i64 %123, %125
  br label %129

129:                                              ; preds = %129, %127
  %130 = phi i64 [ 0, %127 ], [ %172, %129 ]
  %131 = phi i64 [ 1, %127 ], [ %171, %129 ]
  %132 = phi i64 [ %128, %127 ], [ %173, %129 ]
  %133 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %130
  %134 = load i32, i32* %133, align 4
  %135 = sext i32 %134 to i64
  %136 = mul nsw i64 %131, %135
  %137 = or i64 %130, 1
  %138 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %137
  %139 = load i32, i32* %138, align 4
  %140 = sext i32 %139 to i64
  %141 = mul nsw i64 %136, %140
  %142 = or i64 %130, 2
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %142
  %144 = load i32, i32* %143, align 4
  %145 = sext i32 %144 to i64
  %146 = mul nsw i64 %141, %145
  %147 = or i64 %130, 3
  %148 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %147
  %149 = load i32, i32* %148, align 4
  %150 = sext i32 %149 to i64
  %151 = mul nsw i64 %146, %150
  %152 = or i64 %130, 4
  %153 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %152
  %154 = load i32, i32* %153, align 4
  %155 = sext i32 %154 to i64
  %156 = mul nsw i64 %151, %155
  %157 = or i64 %130, 5
  %158 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = sext i32 %159 to i64
  %161 = mul nsw i64 %156, %160
  %162 = or i64 %130, 6
  %163 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %162
  %164 = load i32, i32* %163, align 4
  %165 = sext i32 %164 to i64
  %166 = mul nsw i64 %161, %165
  %167 = or i64 %130, 7
  %168 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %167
  %169 = load i32, i32* %168, align 4
  %170 = sext i32 %169 to i64
  %171 = mul nsw i64 %166, %170
  %172 = add nuw nsw i64 %130, 8
  %173 = add i64 %132, -8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %129

175:                                              ; preds = %129, %122
  %176 = phi i64 [ undef, %122 ], [ %171, %129 ]
  %177 = phi i64 [ 0, %122 ], [ %172, %129 ]
  %178 = phi i64 [ 1, %122 ], [ %171, %129 ]
  %179 = icmp eq i64 %125, 0
  br i1 %179, label %191, label %180

180:                                              ; preds = %175, %180
  %181 = phi i64 [ %188, %180 ], [ %177, %175 ]
  %182 = phi i64 [ %187, %180 ], [ %178, %175 ]
  %183 = phi i64 [ %189, %180 ], [ %125, %175 ]
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %118, i64 0, i32 1, i64 %181
  %185 = load i32, i32* %184, align 4
  %186 = sext i32 %185 to i64
  %187 = mul nsw i64 %182, %186
  %188 = add nuw nsw i64 %181, 1
  %189 = add i64 %183, -1
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %191, label %180, !llvm.loop !75

191:                                              ; preds = %180, %175
  %192 = phi i64 [ %176, %175 ], [ %187, %180 ]
  %193 = trunc i64 %192 to i32
  br label %194

194:                                              ; preds = %191, %116
  %195 = phi i32 [ 1, %116 ], [ %193, %191 ]
  %196 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %195) #11
  %197 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp sgt i32 %198, 0
  br i1 %199, label %200, label %230

200:                                              ; preds = %194
  %201 = icmp eq %struct.TfLiteTensor* %14, null
  %202 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %203 = sext i32 %198 to i64
  %204 = and i64 %203, 1
  %205 = icmp eq i32 %198, 1
  br i1 %205, label %219, label %206

206:                                              ; preds = %200
  %207 = sub nsw i64 %203, %204
  br label %208

208:                                              ; preds = %830, %206
  %209 = phi i64 [ 0, %206 ], [ %835, %830 ]
  %210 = phi i64 [ %207, %206 ], [ %836, %830 ]
  br i1 %201, label %213, label %211

211:                                              ; preds = %208
  %212 = load i32*, i32** %202, align 8
  br label %213

213:                                              ; preds = %211, %208
  %214 = phi i32* [ %212, %211 ], [ null, %208 ]
  %215 = getelementptr inbounds i32, i32* %214, i64 %209
  %216 = load i32, i32* %215, align 4
  %217 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %209
  store i32 %216, i32* %217, align 4
  %218 = or i64 %209, 1
  br i1 %201, label %830, label %828

219:                                              ; preds = %830, %200
  %220 = phi i64 [ 0, %200 ], [ %835, %830 ]
  %221 = icmp eq i64 %204, 0
  br i1 %221, label %230, label %222

222:                                              ; preds = %219
  br i1 %201, label %225, label %223

223:                                              ; preds = %222
  %224 = load i32*, i32** %202, align 8
  br label %225

225:                                              ; preds = %223, %222
  %226 = phi i32* [ %224, %223 ], [ null, %222 ]
  %227 = getelementptr inbounds i32, i32* %226, i64 %220
  %228 = load i32, i32* %227, align 4
  %229 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %220
  store i32 %228, i32* %229, align 4
  br label %230

230:                                              ; preds = %225, %219, %194
  %231 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %232 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %231, align 8
  %233 = tail call i32 %232(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %60, %struct.TfLiteIntArray* %196) #11
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %796

235:                                              ; preds = %230
  %236 = load i8, i8* %64, align 8, !range !64
  br label %237

237:                                              ; preds = %235, %100
  %238 = phi i8 [ %236, %235 ], [ %65, %100 ]
  %239 = icmp eq i8 %238, 0
  br i1 %239, label %247, label %240

240:                                              ; preds = %237
  %241 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %82, i64 0, i32 4
  %242 = load i32, i32* %241, align 8
  %243 = icmp eq i32 %242, 4
  br i1 %243, label %244, label %247

244:                                              ; preds = %240
  %245 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv18ResizeCol2ImTensorEP13TfLiteContextPK12TfLiteTensorS7_S7_PS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %14, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %82)
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %796

247:                                              ; preds = %237, %244, %240
  %248 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %60, i64 0, i32 2
  %249 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %248, align 8
  %250 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %249, i64 0, i32 1, i64 2
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %249, i64 0, i32 1, i64 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 2
  %255 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %254, align 8
  %256 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %255, i64 0, i32 1, i64 2
  %257 = load i32, i32* %256, align 4
  %258 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %255, i64 0, i32 1, i64 1
  %259 = load i32, i32* %258, align 4
  %260 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 2
  %261 = load i32, i32* %260, align 4
  %262 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %104, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  switch i32 %265, label %281 [
    i32 1, label %266
    i32 2, label %271
  ]

266:                                              ; preds = %247
  %267 = add nsw i32 %263, %251
  %268 = add nsw i32 %267, -1
  %269 = add nsw i32 %261, %253
  %270 = add nsw i32 %269, -1
  br label %276

271:                                              ; preds = %247
  %272 = add nsw i32 %263, %251
  %273 = sub i32 %272, %257
  %274 = add nsw i32 %261, %253
  %275 = sub i32 %274, %259
  br label %276

276:                                              ; preds = %271, %266
  %277 = phi i32 [ %270, %266 ], [ %275, %271 ]
  %278 = phi i32 [ %268, %266 ], [ %273, %271 ]
  %279 = sdiv i32 %278, %263
  %280 = sdiv i32 %277, %261
  br label %281

281:                                              ; preds = %276, %247
  %282 = phi i32 [ 0, %247 ], [ %279, %276 ]
  %283 = phi i32 [ 0, %247 ], [ %280, %276 ]
  %284 = add nsw i32 %283, -1
  %285 = mul nsw i32 %284, %261
  %286 = sub i32 %259, %253
  %287 = add i32 %286, %285
  %288 = icmp sgt i32 %287, 0
  %289 = select i1 %288, i32 %287, i32 0
  %290 = and i32 %289, 1
  %291 = lshr i32 %289, 1
  %292 = add nsw i32 %282, -1
  %293 = mul nsw i32 %292, %263
  %294 = sub i32 %257, %251
  %295 = add i32 %294, %293
  %296 = icmp sgt i32 %295, 0
  %297 = select i1 %296, i32 %295, i32 0
  %298 = and i32 %297, 1
  %299 = lshr i32 %297, 1
  %300 = zext i32 %291 to i64
  %301 = shl nuw nsw i64 %300, 32
  %302 = zext i32 %299 to i64
  %303 = or i64 %301, %302
  %304 = zext i32 %290 to i64
  %305 = shl nuw nsw i64 %304, 32
  %306 = zext i32 %298 to i64
  %307 = or i64 %305, %306
  %308 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 6
  %309 = bitcast %struct.TfLitePaddingValues* %308 to i64*
  store i64 %303, i64* %309, align 8
  %310 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 6, i32 2
  %311 = bitcast i32* %310 to i64*
  store i64 %307, i64* %311, align 8
  %312 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %34, i64 0, i32 0
  %313 = load i32, i32* %312, align 8
  switch i32 %313, label %792 [
    i32 1, label %314
    i32 3, label %324
    i32 9, label %480
    i32 7, label %636
  ]

314:                                              ; preds = %281
  %315 = load i8, i8* %83, align 1, !range !64
  %316 = icmp eq i8 %315, 0
  br i1 %316, label %323, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %319 = load i32, i32* %318, align 8
  %320 = icmp eq i32 %319, 1
  br i1 %320, label %323, label %321

321:                                              ; preds = %317
  %322 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %323

323:                                              ; preds = %314, %317, %321
  tail call void @_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60)
  br label %796

324:                                              ; preds = %281
  %325 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %326 = load i32, i32* %325, align 4
  %327 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %328 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %327, align 8
  %329 = sext i32 %326 to i64
  %330 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %328, i64 0, i32 1, i64 %329
  %331 = load i32, i32* %330, align 4
  %332 = icmp slt i32 %331, 0
  br i1 %332, label %338, label %333

333:                                              ; preds = %324
  %334 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %335 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %334, align 8
  %336 = sext i32 %331 to i64
  %337 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %335, i64 %336
  br label %338

338:                                              ; preds = %324, %333
  %339 = phi %struct.TfLiteTensor* [ %337, %333 ], [ null, %324 ]
  %340 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %339, i64 0, i32 4
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 4
  br i1 %342, label %343, label %470

343:                                              ; preds = %338
  %344 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %345 = load i32, i32* %344, align 8
  %346 = icmp eq i32 %345, 2
  br i1 %346, label %351, label %347

347:                                              ; preds = %343
  %348 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %349 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %348, align 8
  %350 = tail call i8* @TfLiteTypeGetName(i32 %345) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %349(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %350) #11
  br label %796

351:                                              ; preds = %343
  %352 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %353 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %352, align 8
  %354 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 0
  %355 = load i32, i32* %354, align 4
  %356 = icmp sgt i32 %355, 0
  br i1 %356, label %357, label %429

357:                                              ; preds = %351
  %358 = sext i32 %355 to i64
  %359 = add nsw i64 %358, -1
  %360 = and i64 %358, 7
  %361 = icmp ult i64 %359, 7
  br i1 %361, label %410, label %362

362:                                              ; preds = %357
  %363 = sub nsw i64 %358, %360
  br label %364

364:                                              ; preds = %364, %362
  %365 = phi i64 [ 0, %362 ], [ %407, %364 ]
  %366 = phi i64 [ 1, %362 ], [ %406, %364 ]
  %367 = phi i64 [ %363, %362 ], [ %408, %364 ]
  %368 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %365
  %369 = load i32, i32* %368, align 4
  %370 = sext i32 %369 to i64
  %371 = mul nsw i64 %366, %370
  %372 = or i64 %365, 1
  %373 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %372
  %374 = load i32, i32* %373, align 4
  %375 = sext i32 %374 to i64
  %376 = mul nsw i64 %371, %375
  %377 = or i64 %365, 2
  %378 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %377
  %379 = load i32, i32* %378, align 4
  %380 = sext i32 %379 to i64
  %381 = mul nsw i64 %376, %380
  %382 = or i64 %365, 3
  %383 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %382
  %384 = load i32, i32* %383, align 4
  %385 = sext i32 %384 to i64
  %386 = mul nsw i64 %381, %385
  %387 = or i64 %365, 4
  %388 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %387
  %389 = load i32, i32* %388, align 4
  %390 = sext i32 %389 to i64
  %391 = mul nsw i64 %386, %390
  %392 = or i64 %365, 5
  %393 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %392
  %394 = load i32, i32* %393, align 4
  %395 = sext i32 %394 to i64
  %396 = mul nsw i64 %391, %395
  %397 = or i64 %365, 6
  %398 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %397
  %399 = load i32, i32* %398, align 4
  %400 = sext i32 %399 to i64
  %401 = mul nsw i64 %396, %400
  %402 = or i64 %365, 7
  %403 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %402
  %404 = load i32, i32* %403, align 4
  %405 = sext i32 %404 to i64
  %406 = mul nsw i64 %401, %405
  %407 = add nuw nsw i64 %365, 8
  %408 = add i64 %367, -8
  %409 = icmp eq i64 %408, 0
  br i1 %409, label %410, label %364

410:                                              ; preds = %364, %357
  %411 = phi i64 [ undef, %357 ], [ %406, %364 ]
  %412 = phi i64 [ 0, %357 ], [ %407, %364 ]
  %413 = phi i64 [ 1, %357 ], [ %406, %364 ]
  %414 = icmp eq i64 %360, 0
  br i1 %414, label %426, label %415

415:                                              ; preds = %410, %415
  %416 = phi i64 [ %423, %415 ], [ %412, %410 ]
  %417 = phi i64 [ %422, %415 ], [ %413, %410 ]
  %418 = phi i64 [ %424, %415 ], [ %360, %410 ]
  %419 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %353, i64 0, i32 1, i64 %416
  %420 = load i32, i32* %419, align 4
  %421 = sext i32 %420 to i64
  %422 = mul nsw i64 %417, %421
  %423 = add nuw nsw i64 %416, 1
  %424 = add i64 %418, -1
  %425 = icmp eq i64 %424, 0
  br i1 %425, label %426, label %415, !llvm.loop !76

426:                                              ; preds = %415, %410
  %427 = phi i64 [ %411, %410 ], [ %422, %415 ]
  %428 = trunc i64 %427 to i32
  br label %429

429:                                              ; preds = %426, %351
  %430 = phi i32 [ 1, %351 ], [ %428, %426 ]
  %431 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %430) #11
  %432 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 0
  %433 = load i32, i32* %432, align 4
  %434 = icmp sgt i32 %433, 0
  br i1 %434, label %435, label %465

435:                                              ; preds = %429
  %436 = icmp eq %struct.TfLiteTensor* %14, null
  %437 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %438 = sext i32 %433 to i64
  %439 = and i64 %438, 1
  %440 = icmp eq i32 %433, 1
  br i1 %440, label %454, label %441

441:                                              ; preds = %435
  %442 = sub nsw i64 %438, %439
  br label %443

443:                                              ; preds = %800, %441
  %444 = phi i64 [ 0, %441 ], [ %805, %800 ]
  %445 = phi i64 [ %442, %441 ], [ %806, %800 ]
  br i1 %436, label %448, label %446

446:                                              ; preds = %443
  %447 = load i32*, i32** %437, align 8
  br label %448

448:                                              ; preds = %446, %443
  %449 = phi i32* [ %447, %446 ], [ null, %443 ]
  %450 = getelementptr inbounds i32, i32* %449, i64 %444
  %451 = load i32, i32* %450, align 4
  %452 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %444
  store i32 %451, i32* %452, align 4
  %453 = or i64 %444, 1
  br i1 %436, label %800, label %798

454:                                              ; preds = %800, %435
  %455 = phi i64 [ 0, %435 ], [ %805, %800 ]
  %456 = icmp eq i64 %439, 0
  br i1 %456, label %465, label %457

457:                                              ; preds = %454
  br i1 %436, label %460, label %458

458:                                              ; preds = %457
  %459 = load i32*, i32** %437, align 8
  br label %460

460:                                              ; preds = %458, %457
  %461 = phi i32* [ %459, %458 ], [ null, %457 ]
  %462 = getelementptr inbounds i32, i32* %461, i64 %455
  %463 = load i32, i32* %462, align 4
  %464 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %455
  store i32 %463, i32* %464, align 4
  br label %465

465:                                              ; preds = %460, %454, %429
  %466 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %467 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %466, align 8
  %468 = tail call i32 %467(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %339, %struct.TfLiteIntArray* %431) #11
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %796

470:                                              ; preds = %465, %338
  %471 = load i8, i8* %83, align 1, !range !64
  %472 = icmp eq i8 %471, 0
  br i1 %472, label %479, label %473

473:                                              ; preds = %470
  %474 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %475 = load i32, i32* %474, align 8
  %476 = icmp eq i32 %475, 1
  br i1 %476, label %479, label %477

477:                                              ; preds = %473
  %478 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %479

479:                                              ; preds = %477, %473, %470
  tail call void @_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %339)
  br label %796

480:                                              ; preds = %281
  %481 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %482 = load i32, i32* %481, align 4
  %483 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %484 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %483, align 8
  %485 = sext i32 %482 to i64
  %486 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %484, i64 0, i32 1, i64 %485
  %487 = load i32, i32* %486, align 4
  %488 = icmp slt i32 %487, 0
  br i1 %488, label %494, label %489

489:                                              ; preds = %480
  %490 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %491 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %490, align 8
  %492 = sext i32 %487 to i64
  %493 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %491, i64 %492
  br label %494

494:                                              ; preds = %480, %489
  %495 = phi %struct.TfLiteTensor* [ %493, %489 ], [ null, %480 ]
  %496 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %495, i64 0, i32 4
  %497 = load i32, i32* %496, align 8
  %498 = icmp eq i32 %497, 4
  br i1 %498, label %499, label %626

499:                                              ; preds = %494
  %500 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %501 = load i32, i32* %500, align 8
  %502 = icmp eq i32 %501, 2
  br i1 %502, label %507, label %503

503:                                              ; preds = %499
  %504 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %505 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %504, align 8
  %506 = tail call i8* @TfLiteTypeGetName(i32 %501) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %505(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %506) #11
  br label %796

507:                                              ; preds = %499
  %508 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %509 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %508, align 8
  %510 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 0
  %511 = load i32, i32* %510, align 4
  %512 = icmp sgt i32 %511, 0
  br i1 %512, label %513, label %585

513:                                              ; preds = %507
  %514 = sext i32 %511 to i64
  %515 = add nsw i64 %514, -1
  %516 = and i64 %514, 7
  %517 = icmp ult i64 %515, 7
  br i1 %517, label %566, label %518

518:                                              ; preds = %513
  %519 = sub nsw i64 %514, %516
  br label %520

520:                                              ; preds = %520, %518
  %521 = phi i64 [ 0, %518 ], [ %563, %520 ]
  %522 = phi i64 [ 1, %518 ], [ %562, %520 ]
  %523 = phi i64 [ %519, %518 ], [ %564, %520 ]
  %524 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %521
  %525 = load i32, i32* %524, align 4
  %526 = sext i32 %525 to i64
  %527 = mul nsw i64 %522, %526
  %528 = or i64 %521, 1
  %529 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %528
  %530 = load i32, i32* %529, align 4
  %531 = sext i32 %530 to i64
  %532 = mul nsw i64 %527, %531
  %533 = or i64 %521, 2
  %534 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %533
  %535 = load i32, i32* %534, align 4
  %536 = sext i32 %535 to i64
  %537 = mul nsw i64 %532, %536
  %538 = or i64 %521, 3
  %539 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %538
  %540 = load i32, i32* %539, align 4
  %541 = sext i32 %540 to i64
  %542 = mul nsw i64 %537, %541
  %543 = or i64 %521, 4
  %544 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %543
  %545 = load i32, i32* %544, align 4
  %546 = sext i32 %545 to i64
  %547 = mul nsw i64 %542, %546
  %548 = or i64 %521, 5
  %549 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %548
  %550 = load i32, i32* %549, align 4
  %551 = sext i32 %550 to i64
  %552 = mul nsw i64 %547, %551
  %553 = or i64 %521, 6
  %554 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %553
  %555 = load i32, i32* %554, align 4
  %556 = sext i32 %555 to i64
  %557 = mul nsw i64 %552, %556
  %558 = or i64 %521, 7
  %559 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %558
  %560 = load i32, i32* %559, align 4
  %561 = sext i32 %560 to i64
  %562 = mul nsw i64 %557, %561
  %563 = add nuw nsw i64 %521, 8
  %564 = add i64 %523, -8
  %565 = icmp eq i64 %564, 0
  br i1 %565, label %566, label %520

566:                                              ; preds = %520, %513
  %567 = phi i64 [ undef, %513 ], [ %562, %520 ]
  %568 = phi i64 [ 0, %513 ], [ %563, %520 ]
  %569 = phi i64 [ 1, %513 ], [ %562, %520 ]
  %570 = icmp eq i64 %516, 0
  br i1 %570, label %582, label %571

571:                                              ; preds = %566, %571
  %572 = phi i64 [ %579, %571 ], [ %568, %566 ]
  %573 = phi i64 [ %578, %571 ], [ %569, %566 ]
  %574 = phi i64 [ %580, %571 ], [ %516, %566 ]
  %575 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %509, i64 0, i32 1, i64 %572
  %576 = load i32, i32* %575, align 4
  %577 = sext i32 %576 to i64
  %578 = mul nsw i64 %573, %577
  %579 = add nuw nsw i64 %572, 1
  %580 = add i64 %574, -1
  %581 = icmp eq i64 %580, 0
  br i1 %581, label %582, label %571, !llvm.loop !77

582:                                              ; preds = %571, %566
  %583 = phi i64 [ %567, %566 ], [ %578, %571 ]
  %584 = trunc i64 %583 to i32
  br label %585

585:                                              ; preds = %582, %507
  %586 = phi i32 [ 1, %507 ], [ %584, %582 ]
  %587 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %586) #11
  %588 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = icmp sgt i32 %589, 0
  br i1 %590, label %591, label %621

591:                                              ; preds = %585
  %592 = icmp eq %struct.TfLiteTensor* %14, null
  %593 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %594 = sext i32 %589 to i64
  %595 = and i64 %594, 1
  %596 = icmp eq i32 %589, 1
  br i1 %596, label %610, label %597

597:                                              ; preds = %591
  %598 = sub nsw i64 %594, %595
  br label %599

599:                                              ; preds = %810, %597
  %600 = phi i64 [ 0, %597 ], [ %815, %810 ]
  %601 = phi i64 [ %598, %597 ], [ %816, %810 ]
  br i1 %592, label %604, label %602

602:                                              ; preds = %599
  %603 = load i32*, i32** %593, align 8
  br label %604

604:                                              ; preds = %602, %599
  %605 = phi i32* [ %603, %602 ], [ null, %599 ]
  %606 = getelementptr inbounds i32, i32* %605, i64 %600
  %607 = load i32, i32* %606, align 4
  %608 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %600
  store i32 %607, i32* %608, align 4
  %609 = or i64 %600, 1
  br i1 %592, label %810, label %808

610:                                              ; preds = %810, %591
  %611 = phi i64 [ 0, %591 ], [ %815, %810 ]
  %612 = icmp eq i64 %595, 0
  br i1 %612, label %621, label %613

613:                                              ; preds = %610
  br i1 %592, label %616, label %614

614:                                              ; preds = %613
  %615 = load i32*, i32** %593, align 8
  br label %616

616:                                              ; preds = %614, %613
  %617 = phi i32* [ %615, %614 ], [ null, %613 ]
  %618 = getelementptr inbounds i32, i32* %617, i64 %611
  %619 = load i32, i32* %618, align 4
  %620 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %611
  store i32 %619, i32* %620, align 4
  br label %621

621:                                              ; preds = %616, %610, %585
  %622 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %623 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %622, align 8
  %624 = tail call i32 %623(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %495, %struct.TfLiteIntArray* %587) #11
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %796

626:                                              ; preds = %621, %494
  %627 = load i8, i8* %83, align 1, !range !64
  %628 = icmp eq i8 %627, 0
  br i1 %628, label %635, label %629

629:                                              ; preds = %626
  %630 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %631 = load i32, i32* %630, align 8
  %632 = icmp eq i32 %631, 1
  br i1 %632, label %635, label %633

633:                                              ; preds = %629
  %634 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %635

635:                                              ; preds = %629, %633, %626
  tail call void @_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext* %0, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %495)
  br label %796

636:                                              ; preds = %281
  %637 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, i64 0, i32 5
  %638 = load i32, i32* %637, align 4
  %639 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 3
  %640 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %639, align 8
  %641 = sext i32 %638 to i64
  %642 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %640, i64 0, i32 1, i64 %641
  %643 = load i32, i32* %642, align 4
  %644 = icmp slt i32 %643, 0
  br i1 %644, label %650, label %645

645:                                              ; preds = %636
  %646 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %647 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %646, align 8
  %648 = sext i32 %643 to i64
  %649 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %647, i64 %648
  br label %650

650:                                              ; preds = %636, %645
  %651 = phi %struct.TfLiteTensor* [ %649, %645 ], [ null, %636 ]
  %652 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %651, i64 0, i32 4
  %653 = load i32, i32* %652, align 8
  %654 = icmp eq i32 %653, 4
  br i1 %654, label %655, label %782

655:                                              ; preds = %650
  %656 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 0
  %657 = load i32, i32* %656, align 8
  %658 = icmp eq i32 %657, 2
  br i1 %658, label %663, label %659

659:                                              ; preds = %655
  %660 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %661 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %660, align 8
  %662 = tail call i8* @TfLiteTypeGetName(i32 %657) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %661(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0), i8* %662) #11
  br label %796

663:                                              ; preds = %655
  %664 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 2
  %665 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %664, align 8
  %666 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 0
  %667 = load i32, i32* %666, align 4
  %668 = icmp sgt i32 %667, 0
  br i1 %668, label %669, label %741

669:                                              ; preds = %663
  %670 = sext i32 %667 to i64
  %671 = add nsw i64 %670, -1
  %672 = and i64 %670, 7
  %673 = icmp ult i64 %671, 7
  br i1 %673, label %722, label %674

674:                                              ; preds = %669
  %675 = sub nsw i64 %670, %672
  br label %676

676:                                              ; preds = %676, %674
  %677 = phi i64 [ 0, %674 ], [ %719, %676 ]
  %678 = phi i64 [ 1, %674 ], [ %718, %676 ]
  %679 = phi i64 [ %675, %674 ], [ %720, %676 ]
  %680 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %677
  %681 = load i32, i32* %680, align 4
  %682 = sext i32 %681 to i64
  %683 = mul nsw i64 %678, %682
  %684 = or i64 %677, 1
  %685 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %684
  %686 = load i32, i32* %685, align 4
  %687 = sext i32 %686 to i64
  %688 = mul nsw i64 %683, %687
  %689 = or i64 %677, 2
  %690 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %689
  %691 = load i32, i32* %690, align 4
  %692 = sext i32 %691 to i64
  %693 = mul nsw i64 %688, %692
  %694 = or i64 %677, 3
  %695 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %694
  %696 = load i32, i32* %695, align 4
  %697 = sext i32 %696 to i64
  %698 = mul nsw i64 %693, %697
  %699 = or i64 %677, 4
  %700 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %699
  %701 = load i32, i32* %700, align 4
  %702 = sext i32 %701 to i64
  %703 = mul nsw i64 %698, %702
  %704 = or i64 %677, 5
  %705 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %704
  %706 = load i32, i32* %705, align 4
  %707 = sext i32 %706 to i64
  %708 = mul nsw i64 %703, %707
  %709 = or i64 %677, 6
  %710 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %709
  %711 = load i32, i32* %710, align 4
  %712 = sext i32 %711 to i64
  %713 = mul nsw i64 %708, %712
  %714 = or i64 %677, 7
  %715 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %714
  %716 = load i32, i32* %715, align 4
  %717 = sext i32 %716 to i64
  %718 = mul nsw i64 %713, %717
  %719 = add nuw nsw i64 %677, 8
  %720 = add i64 %679, -8
  %721 = icmp eq i64 %720, 0
  br i1 %721, label %722, label %676

722:                                              ; preds = %676, %669
  %723 = phi i64 [ undef, %669 ], [ %718, %676 ]
  %724 = phi i64 [ 0, %669 ], [ %719, %676 ]
  %725 = phi i64 [ 1, %669 ], [ %718, %676 ]
  %726 = icmp eq i64 %672, 0
  br i1 %726, label %738, label %727

727:                                              ; preds = %722, %727
  %728 = phi i64 [ %735, %727 ], [ %724, %722 ]
  %729 = phi i64 [ %734, %727 ], [ %725, %722 ]
  %730 = phi i64 [ %736, %727 ], [ %672, %722 ]
  %731 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %665, i64 0, i32 1, i64 %728
  %732 = load i32, i32* %731, align 4
  %733 = sext i32 %732 to i64
  %734 = mul nsw i64 %729, %733
  %735 = add nuw nsw i64 %728, 1
  %736 = add i64 %730, -1
  %737 = icmp eq i64 %736, 0
  br i1 %737, label %738, label %727, !llvm.loop !78

738:                                              ; preds = %727, %722
  %739 = phi i64 [ %723, %722 ], [ %734, %727 ]
  %740 = trunc i64 %739 to i32
  br label %741

741:                                              ; preds = %738, %663
  %742 = phi i32 [ 1, %663 ], [ %740, %738 ]
  %743 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCreate(i32 %742) #11
  %744 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  %746 = icmp sgt i32 %745, 0
  br i1 %746, label %747, label %777

747:                                              ; preds = %741
  %748 = icmp eq %struct.TfLiteTensor* %14, null
  %749 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %14, i64 0, i32 1, i32 0
  %750 = sext i32 %745 to i64
  %751 = and i64 %750, 1
  %752 = icmp eq i32 %745, 1
  br i1 %752, label %766, label %753

753:                                              ; preds = %747
  %754 = sub nsw i64 %750, %751
  br label %755

755:                                              ; preds = %820, %753
  %756 = phi i64 [ 0, %753 ], [ %825, %820 ]
  %757 = phi i64 [ %754, %753 ], [ %826, %820 ]
  br i1 %748, label %760, label %758

758:                                              ; preds = %755
  %759 = load i32*, i32** %749, align 8
  br label %760

760:                                              ; preds = %758, %755
  %761 = phi i32* [ %759, %758 ], [ null, %755 ]
  %762 = getelementptr inbounds i32, i32* %761, i64 %756
  %763 = load i32, i32* %762, align 4
  %764 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %756
  store i32 %763, i32* %764, align 4
  %765 = or i64 %756, 1
  br i1 %748, label %820, label %818

766:                                              ; preds = %820, %747
  %767 = phi i64 [ 0, %747 ], [ %825, %820 ]
  %768 = icmp eq i64 %751, 0
  br i1 %768, label %777, label %769

769:                                              ; preds = %766
  br i1 %748, label %772, label %770

770:                                              ; preds = %769
  %771 = load i32*, i32** %749, align 8
  br label %772

772:                                              ; preds = %770, %769
  %773 = phi i32* [ %771, %770 ], [ null, %769 ]
  %774 = getelementptr inbounds i32, i32* %773, i64 %767
  %775 = load i32, i32* %774, align 4
  %776 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %767
  store i32 %775, i32* %776, align 4
  br label %777

777:                                              ; preds = %772, %766, %741
  %778 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %779 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %778, align 8
  %780 = tail call i32 %779(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %651, %struct.TfLiteIntArray* %743) #11
  %781 = icmp eq i32 %780, 0
  br i1 %781, label %782, label %796

782:                                              ; preds = %777, %650
  %783 = load i8, i8* %83, align 1, !range !64
  %784 = icmp eq i8 %783, 0
  br i1 %784, label %791, label %785

785:                                              ; preds = %782
  %786 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %24, i64 0, i32 4
  %787 = load i32, i32* %786, align 8
  %788 = icmp eq i32 %787, 1
  br i1 %788, label %791, label %789

789:                                              ; preds = %785
  %790 = tail call i32 @_ZN6tflite3ops7builtin14transpose_conv25ResizeAndTransposeWeightsEP13TfLiteContextPK12TfLiteTensorPS5_(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* %101)
  br label %791

791:                                              ; preds = %785, %789, %782
  tail call void @_ZN6tflite3ops7builtin14transpose_conv27EvalQuantizedPerChannel16x8EP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSC_SC_SC_PSA_SD_SD_(%struct.TfLiteContext* undef, %struct.TfLiteTransposeConvParams* %104, %"struct.tflite::ops::builtin::transpose_conv::OpData"* %63, %struct.TfLiteTensor* %34, %struct.TfLiteTensor* %24, %struct.TfLiteTensor* undef, %struct.TfLiteTensor* %48, %struct.TfLiteTensor* %82, %struct.TfLiteTensor* %60, %struct.TfLiteTensor* %651)
  br label %796

792:                                              ; preds = %281
  %793 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %794 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %793, align 8
  %795 = tail call i8* @TfLiteTypeGetName(i32 %313) #11
  tail call void (%struct.TfLiteContext*, i8*, ...) %794(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.40, i64 0, i64 0), i8* %795) #11
  br label %796

796:                                              ; preds = %659, %777, %503, %621, %347, %465, %112, %230, %792, %791, %635, %479, %323, %244
  %797 = phi i32 [ %245, %244 ], [ 1, %792 ], [ 0, %791 ], [ 0, %635 ], [ 0, %479 ], [ 0, %323 ], [ 1, %112 ], [ %233, %230 ], [ 1, %347 ], [ %468, %465 ], [ 1, %503 ], [ %624, %621 ], [ 1, %659 ], [ %780, %777 ]
  ret i32 %797

798:                                              ; preds = %448
  %799 = load i32*, i32** %437, align 8
  br label %800

800:                                              ; preds = %798, %448
  %801 = phi i32* [ %799, %798 ], [ null, %448 ]
  %802 = getelementptr inbounds i32, i32* %801, i64 %453
  %803 = load i32, i32* %802, align 4
  %804 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %431, i64 0, i32 1, i64 %453
  store i32 %803, i32* %804, align 4
  %805 = add nuw nsw i64 %444, 2
  %806 = add i64 %445, -2
  %807 = icmp eq i64 %806, 0
  br i1 %807, label %454, label %443

808:                                              ; preds = %604
  %809 = load i32*, i32** %593, align 8
  br label %810

810:                                              ; preds = %808, %604
  %811 = phi i32* [ %809, %808 ], [ null, %604 ]
  %812 = getelementptr inbounds i32, i32* %811, i64 %609
  %813 = load i32, i32* %812, align 4
  %814 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %587, i64 0, i32 1, i64 %609
  store i32 %813, i32* %814, align 4
  %815 = add nuw nsw i64 %600, 2
  %816 = add i64 %601, -2
  %817 = icmp eq i64 %816, 0
  br i1 %817, label %610, label %599

818:                                              ; preds = %760
  %819 = load i32*, i32** %749, align 8
  br label %820

820:                                              ; preds = %818, %760
  %821 = phi i32* [ %819, %818 ], [ null, %760 ]
  %822 = getelementptr inbounds i32, i32* %821, i64 %765
  %823 = load i32, i32* %822, align 4
  %824 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %743, i64 0, i32 1, i64 %765
  store i32 %823, i32* %824, align 4
  %825 = add nuw nsw i64 %756, 2
  %826 = add i64 %757, -2
  %827 = icmp eq i64 %826, 0
  br i1 %827, label %766, label %755

828:                                              ; preds = %213
  %829 = load i32*, i32** %202, align 8
  br label %830

830:                                              ; preds = %828, %213
  %831 = phi i32* [ %829, %828 ], [ null, %213 ]
  %832 = getelementptr inbounds i32, i32* %831, i64 %218
  %833 = load i32, i32* %832, align 4
  %834 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %196, i64 0, i32 1, i64 %218
  store i32 %833, i32* %834, align 4
  %835 = add nuw nsw i64 %209, 2
  %836 = add i64 %210, -2
  %837 = icmp eq i64 %836, 0
  br i1 %837, label %219, label %208
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin23Register_TRANSPOSE_CONVEv() local_unnamed_addr #6 {
  ret %struct.TfLiteRegistration* bitcast ({ i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }* @_ZZN6tflite3ops7builtin34Register_TRANSPOSECONV_GENERIC_OPTEvE1r to %struct.TfLiteRegistration*)
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #3

declare i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIfLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, float* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, float* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  br label %210

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %207

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %210

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = add nsw i64 %123, -1
  %125 = and i64 %123, 3
  %126 = icmp ult i64 %124, 3
  %127 = sub nsw i64 %123, %125
  %128 = icmp eq i64 %125, 0
  br label %129

129:                                              ; preds = %144, %115
  %130 = phi i64 [ 0, %115 ], [ %145, %144 ]
  br i1 %116, label %131, label %144

131:                                              ; preds = %129
  %132 = mul nsw i64 %130, %120
  %133 = trunc i64 %130 to i32
  %134 = mul i32 %112, %133
  br label %135

135:                                              ; preds = %163, %131
  %136 = phi i64 [ 0, %131 ], [ %164, %163 ]
  br i1 %117, label %137, label %163

137:                                              ; preds = %135
  %138 = mul nsw i64 %136, %119
  %139 = add nsw i64 %138, %132
  %140 = trunc i64 %136 to i32
  %141 = add i32 %134, %140
  %142 = mul i32 %141, %113
  %143 = sext i32 %142 to i64
  br i1 %126, label %147, label %166

144:                                              ; preds = %163, %129
  %145 = add nuw nsw i64 %130, 1
  %146 = icmp eq i64 %145, %121
  br i1 %146, label %210, label %129

147:                                              ; preds = %166, %137
  %148 = phi i64 [ 0, %137 ], [ %204, %166 ]
  br i1 %128, label %163, label %149

149:                                              ; preds = %147, %149
  %150 = phi i64 [ %160, %149 ], [ %148, %147 ]
  %151 = phi i64 [ %161, %149 ], [ %125, %147 ]
  %152 = mul nsw i64 %150, %118
  %153 = add nsw i64 %139, %152
  %154 = add nsw i64 %150, %143
  %155 = getelementptr inbounds float, float* %2, i64 %153
  %156 = bitcast float* %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = getelementptr inbounds float, float* %4, i64 %154
  %159 = bitcast float* %158 to i32*
  store i32 %157, i32* %159, align 4
  %160 = add nuw nsw i64 %150, 1
  %161 = add i64 %151, -1
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %149, !llvm.loop !79

163:                                              ; preds = %147, %149, %135
  %164 = add nuw nsw i64 %136, 1
  %165 = icmp eq i64 %164, %122
  br i1 %165, label %144, label %135

166:                                              ; preds = %137, %166
  %167 = phi i64 [ %204, %166 ], [ 0, %137 ]
  %168 = phi i64 [ %205, %166 ], [ %127, %137 ]
  %169 = mul nsw i64 %167, %118
  %170 = add nsw i64 %139, %169
  %171 = add nsw i64 %167, %143
  %172 = getelementptr inbounds float, float* %2, i64 %170
  %173 = bitcast float* %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = getelementptr inbounds float, float* %4, i64 %171
  %176 = bitcast float* %175 to i32*
  store i32 %174, i32* %176, align 4
  %177 = or i64 %167, 1
  %178 = mul nsw i64 %177, %118
  %179 = add nsw i64 %139, %178
  %180 = add nsw i64 %177, %143
  %181 = getelementptr inbounds float, float* %2, i64 %179
  %182 = bitcast float* %181 to i32*
  %183 = load i32, i32* %182, align 4
  %184 = getelementptr inbounds float, float* %4, i64 %180
  %185 = bitcast float* %184 to i32*
  store i32 %183, i32* %185, align 4
  %186 = or i64 %167, 2
  %187 = mul nsw i64 %186, %118
  %188 = add nsw i64 %139, %187
  %189 = add nsw i64 %186, %143
  %190 = getelementptr inbounds float, float* %2, i64 %188
  %191 = bitcast float* %190 to i32*
  %192 = load i32, i32* %191, align 4
  %193 = getelementptr inbounds float, float* %4, i64 %189
  %194 = bitcast float* %193 to i32*
  store i32 %192, i32* %194, align 4
  %195 = or i64 %167, 3
  %196 = mul nsw i64 %195, %118
  %197 = add nsw i64 %139, %196
  %198 = add nsw i64 %195, %143
  %199 = getelementptr inbounds float, float* %2, i64 %197
  %200 = bitcast float* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds float, float* %4, i64 %198
  %203 = bitcast float* %202 to i32*
  store i32 %201, i32* %203, align 4
  %204 = add nuw nsw i64 %167, 4
  %205 = add i64 %168, -4
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %147, label %166

207:                                              ; preds = %46
  %208 = bitcast float* %2 to i32*
  %209 = bitcast float* %4 to i32*
  call void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* %208, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i32* %209) #11
  br label %210

210:                                              ; preds = %144, %93, %207, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

declare zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIfEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #5 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %205
  %29 = trunc i64 %209 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi float* [ %1, %4 ], [ %208, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %282

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %212

44:                                               ; preds = %19, %205
  %45 = phi i64 [ 0, %19 ], [ %209, %205 ]
  %46 = phi float* [ %1, %19 ], [ %208, %205 ]
  %47 = getelementptr inbounds float, float* %3, i64 %45
  %48 = bitcast float* %46 to i8*
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #11
  %49 = getelementptr inbounds float, float* %46, i64 %20
  %50 = bitcast float* %49 to i8*
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #11
  %51 = getelementptr inbounds float, float* %49, i64 %20
  %52 = bitcast float* %51 to i8*
  tail call void @llvm.prefetch(i8* %52, i32 0, i32 3, i32 1) #11
  %53 = getelementptr inbounds float, float* %51, i64 %20
  %54 = bitcast float* %53 to i8*
  tail call void @llvm.prefetch(i8* %54, i32 0, i32 3, i32 1) #11
  br i1 %22, label %141, label %55

55:                                               ; preds = %44, %55
  %56 = phi float* [ %138, %55 ], [ %46, %44 ]
  %57 = phi float* [ %137, %55 ], [ %47, %44 ]
  %58 = phi i32 [ %139, %55 ], [ 0, %44 ]
  %59 = bitcast float* %56 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds float, float* %56, i64 1
  %62 = bitcast float* %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds float, float* %56, i64 2
  %65 = bitcast float* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds float, float* %56, i64 3
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds float, float* %56, i64 %20
  %71 = bitcast float* %70 to i32*
  %72 = load i32, i32* %71, align 4
  %73 = getelementptr inbounds float, float* %70, i64 1
  %74 = bitcast float* %73 to i32*
  %75 = load i32, i32* %74, align 4
  %76 = getelementptr inbounds float, float* %70, i64 2
  %77 = bitcast float* %76 to i32*
  %78 = load i32, i32* %77, align 4
  %79 = getelementptr inbounds float, float* %70, i64 3
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds float, float* %70, i64 %20
  %83 = bitcast float* %82 to i32*
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds float, float* %82, i64 1
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds float, float* %82, i64 2
  %89 = bitcast float* %88 to i32*
  %90 = load i32, i32* %89, align 4
  %91 = getelementptr inbounds float, float* %82, i64 3
  %92 = bitcast float* %91 to i32*
  %93 = load i32, i32* %92, align 4
  %94 = getelementptr inbounds float, float* %82, i64 %20
  %95 = bitcast float* %94 to i32*
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds float, float* %94, i64 1
  %98 = bitcast float* %97 to i32*
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds float, float* %94, i64 2
  %101 = bitcast float* %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds float, float* %94, i64 3
  %104 = bitcast float* %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = bitcast float* %57 to i32*
  store i32 %60, i32* %106, align 4
  %107 = getelementptr inbounds float, float* %57, i64 1
  %108 = bitcast float* %107 to i32*
  store i32 %72, i32* %108, align 4
  %109 = getelementptr inbounds float, float* %57, i64 2
  %110 = bitcast float* %109 to i32*
  store i32 %84, i32* %110, align 4
  %111 = getelementptr inbounds float, float* %57, i64 3
  %112 = bitcast float* %111 to i32*
  store i32 %96, i32* %112, align 4
  %113 = getelementptr inbounds float, float* %57, i64 %23
  %114 = bitcast float* %113 to i32*
  store i32 %63, i32* %114, align 4
  %115 = getelementptr inbounds float, float* %113, i64 1
  %116 = bitcast float* %115 to i32*
  store i32 %75, i32* %116, align 4
  %117 = getelementptr inbounds float, float* %113, i64 2
  %118 = bitcast float* %117 to i32*
  store i32 %87, i32* %118, align 4
  %119 = getelementptr inbounds float, float* %113, i64 3
  %120 = bitcast float* %119 to i32*
  store i32 %99, i32* %120, align 4
  %121 = getelementptr inbounds float, float* %113, i64 %23
  %122 = bitcast float* %121 to i32*
  store i32 %66, i32* %122, align 4
  %123 = getelementptr inbounds float, float* %121, i64 1
  %124 = bitcast float* %123 to i32*
  store i32 %78, i32* %124, align 4
  %125 = getelementptr inbounds float, float* %121, i64 2
  %126 = bitcast float* %125 to i32*
  store i32 %90, i32* %126, align 4
  %127 = getelementptr inbounds float, float* %121, i64 3
  %128 = bitcast float* %127 to i32*
  store i32 %102, i32* %128, align 4
  %129 = getelementptr inbounds float, float* %121, i64 %23
  %130 = bitcast float* %129 to i32*
  store i32 %69, i32* %130, align 4
  %131 = getelementptr inbounds float, float* %129, i64 1
  %132 = bitcast float* %131 to i32*
  store i32 %81, i32* %132, align 4
  %133 = getelementptr inbounds float, float* %129, i64 2
  %134 = bitcast float* %133 to i32*
  store i32 %93, i32* %134, align 4
  %135 = getelementptr inbounds float, float* %129, i64 3
  %136 = bitcast float* %135 to i32*
  store i32 %105, i32* %136, align 4
  %137 = getelementptr inbounds float, float* %129, i64 %23
  %138 = getelementptr inbounds float, float* %56, i64 4
  %139 = add nuw nsw i32 %58, 4
  %140 = icmp sgt i32 %139, %21
  br i1 %140, label %141, label %55

141:                                              ; preds = %55, %44
  %142 = phi i32 [ 0, %44 ], [ %25, %55 ]
  %143 = phi float* [ %47, %44 ], [ %137, %55 ]
  %144 = phi float* [ %46, %44 ], [ %138, %55 ]
  %145 = icmp eq i32 %15, %142
  br i1 %145, label %205, label %146

146:                                              ; preds = %141
  %147 = sub i32 %15, %142
  %148 = icmp sgt i32 %147, 0
  br i1 %148, label %149, label %450

149:                                              ; preds = %146
  %150 = zext i32 %147 to i64
  %151 = add nsw i64 %150, -1
  %152 = and i64 %150, 3
  %153 = icmp ult i64 %151, 3
  br i1 %153, label %156, label %154

154:                                              ; preds = %149
  %155 = sub nsw i64 %150, %152
  br label %172

156:                                              ; preds = %172, %149
  %157 = phi i64 [ 0, %149 ], [ %202, %172 ]
  %158 = icmp eq i64 %152, 0
  br i1 %158, label %171, label %159

159:                                              ; preds = %156, %159
  %160 = phi i64 [ %168, %159 ], [ %157, %156 ]
  %161 = phi i64 [ %169, %159 ], [ %152, %156 ]
  %162 = getelementptr inbounds float, float* %144, i64 %160
  %163 = bitcast float* %162 to i32*
  %164 = load i32, i32* %163, align 4
  %165 = mul nsw i64 %160, %23
  %166 = getelementptr inbounds float, float* %143, i64 %165
  %167 = bitcast float* %166 to i32*
  store i32 %164, i32* %167, align 4
  %168 = add nuw nsw i64 %160, 1
  %169 = add i64 %161, -1
  %170 = icmp eq i64 %169, 0
  br i1 %170, label %171, label %159, !llvm.loop !80

171:                                              ; preds = %159, %156
  br i1 %148, label %283, label %450

172:                                              ; preds = %172, %154
  %173 = phi i64 [ 0, %154 ], [ %202, %172 ]
  %174 = phi i64 [ %155, %154 ], [ %203, %172 ]
  %175 = getelementptr inbounds float, float* %144, i64 %173
  %176 = bitcast float* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = mul nsw i64 %173, %23
  %179 = getelementptr inbounds float, float* %143, i64 %178
  %180 = bitcast float* %179 to i32*
  store i32 %177, i32* %180, align 4
  %181 = or i64 %173, 1
  %182 = getelementptr inbounds float, float* %144, i64 %181
  %183 = bitcast float* %182 to i32*
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i64 %181, %23
  %186 = getelementptr inbounds float, float* %143, i64 %185
  %187 = bitcast float* %186 to i32*
  store i32 %184, i32* %187, align 4
  %188 = or i64 %173, 2
  %189 = getelementptr inbounds float, float* %144, i64 %188
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  %192 = mul nsw i64 %188, %23
  %193 = getelementptr inbounds float, float* %143, i64 %192
  %194 = bitcast float* %193 to i32*
  store i32 %191, i32* %194, align 4
  %195 = or i64 %173, 3
  %196 = getelementptr inbounds float, float* %144, i64 %195
  %197 = bitcast float* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = mul nsw i64 %195, %23
  %200 = getelementptr inbounds float, float* %143, i64 %199
  %201 = bitcast float* %200 to i32*
  store i32 %198, i32* %201, align 4
  %202 = add nuw nsw i64 %173, 4
  %203 = add i64 %174, -4
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %156, label %172

205:                                              ; preds = %141, %450
  %206 = phi i32 [ %451, %450 ], [ %16, %141 ]
  %207 = sext i32 %206 to i64
  %208 = getelementptr inbounds float, float* %144, i64 %207
  %209 = add nuw i64 %45, 4
  %210 = trunc i64 %209 to i32
  %211 = icmp slt i32 %17, %210
  br i1 %211, label %28, label %44

212:                                              ; preds = %232, %34
  %213 = phi i64 [ %37, %34 ], [ %234, %232 ]
  %214 = phi float* [ %32, %34 ], [ %233, %232 ]
  br i1 %35, label %215, label %232

215:                                              ; preds = %212
  %216 = getelementptr inbounds float, float* %3, i64 %213
  br i1 %41, label %217, label %236

217:                                              ; preds = %236, %215
  %218 = phi float* [ undef, %215 ], [ %279, %236 ]
  %219 = phi float* [ %216, %215 ], [ %278, %236 ]
  %220 = phi float* [ %214, %215 ], [ %279, %236 ]
  br i1 %43, label %232, label %221

221:                                              ; preds = %217, %221
  %222 = phi float* [ %228, %221 ], [ %219, %217 ]
  %223 = phi float* [ %229, %221 ], [ %220, %217 ]
  %224 = phi i32 [ %230, %221 ], [ %40, %217 ]
  %225 = bitcast float* %223 to i32*
  %226 = load i32, i32* %225, align 4
  %227 = bitcast float* %222 to i32*
  store i32 %226, i32* %227, align 4
  %228 = getelementptr inbounds float, float* %222, i64 %36
  %229 = getelementptr inbounds float, float* %223, i64 1
  %230 = add i32 %224, -1
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %221, !llvm.loop !81

232:                                              ; preds = %217, %221, %212
  %233 = phi float* [ %214, %212 ], [ %218, %217 ], [ %229, %221 ]
  %234 = add nuw nsw i64 %213, 1
  %235 = icmp eq i64 %234, %38
  br i1 %235, label %282, label %212

236:                                              ; preds = %215, %236
  %237 = phi float* [ %278, %236 ], [ %216, %215 ]
  %238 = phi float* [ %279, %236 ], [ %214, %215 ]
  %239 = phi i32 [ %280, %236 ], [ %42, %215 ]
  %240 = bitcast float* %238 to i32*
  %241 = load i32, i32* %240, align 4
  %242 = bitcast float* %237 to i32*
  store i32 %241, i32* %242, align 4
  %243 = getelementptr inbounds float, float* %237, i64 %36
  %244 = getelementptr inbounds float, float* %238, i64 1
  %245 = bitcast float* %244 to i32*
  %246 = load i32, i32* %245, align 4
  %247 = bitcast float* %243 to i32*
  store i32 %246, i32* %247, align 4
  %248 = getelementptr inbounds float, float* %243, i64 %36
  %249 = getelementptr inbounds float, float* %238, i64 2
  %250 = bitcast float* %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = bitcast float* %248 to i32*
  store i32 %251, i32* %252, align 4
  %253 = getelementptr inbounds float, float* %248, i64 %36
  %254 = getelementptr inbounds float, float* %238, i64 3
  %255 = bitcast float* %254 to i32*
  %256 = load i32, i32* %255, align 4
  %257 = bitcast float* %253 to i32*
  store i32 %256, i32* %257, align 4
  %258 = getelementptr inbounds float, float* %253, i64 %36
  %259 = getelementptr inbounds float, float* %238, i64 4
  %260 = bitcast float* %259 to i32*
  %261 = load i32, i32* %260, align 4
  %262 = bitcast float* %258 to i32*
  store i32 %261, i32* %262, align 4
  %263 = getelementptr inbounds float, float* %258, i64 %36
  %264 = getelementptr inbounds float, float* %238, i64 5
  %265 = bitcast float* %264 to i32*
  %266 = load i32, i32* %265, align 4
  %267 = bitcast float* %263 to i32*
  store i32 %266, i32* %267, align 4
  %268 = getelementptr inbounds float, float* %263, i64 %36
  %269 = getelementptr inbounds float, float* %238, i64 6
  %270 = bitcast float* %269 to i32*
  %271 = load i32, i32* %270, align 4
  %272 = bitcast float* %268 to i32*
  store i32 %271, i32* %272, align 4
  %273 = getelementptr inbounds float, float* %268, i64 %36
  %274 = getelementptr inbounds float, float* %238, i64 7
  %275 = bitcast float* %274 to i32*
  %276 = load i32, i32* %275, align 4
  %277 = bitcast float* %273 to i32*
  store i32 %276, i32* %277, align 4
  %278 = getelementptr inbounds float, float* %273, i64 %36
  %279 = getelementptr inbounds float, float* %238, i64 8
  %280 = add i32 %239, -8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %217, label %236

282:                                              ; preds = %232, %30
  ret void

283:                                              ; preds = %171
  %284 = getelementptr inbounds float, float* %144, i64 %20
  %285 = getelementptr inbounds float, float* %143, i64 1
  %286 = and i64 %150, 3
  %287 = icmp ult i64 %151, 3
  br i1 %287, label %323, label %288

288:                                              ; preds = %283
  %289 = sub nsw i64 %150, %286
  br label %290

290:                                              ; preds = %290, %288
  %291 = phi i64 [ 0, %288 ], [ %320, %290 ]
  %292 = phi i64 [ %289, %288 ], [ %321, %290 ]
  %293 = getelementptr inbounds float, float* %284, i64 %291
  %294 = bitcast float* %293 to i32*
  %295 = load i32, i32* %294, align 4
  %296 = mul nsw i64 %291, %23
  %297 = getelementptr inbounds float, float* %285, i64 %296
  %298 = bitcast float* %297 to i32*
  store i32 %295, i32* %298, align 4
  %299 = or i64 %291, 1
  %300 = getelementptr inbounds float, float* %284, i64 %299
  %301 = bitcast float* %300 to i32*
  %302 = load i32, i32* %301, align 4
  %303 = mul nsw i64 %299, %23
  %304 = getelementptr inbounds float, float* %285, i64 %303
  %305 = bitcast float* %304 to i32*
  store i32 %302, i32* %305, align 4
  %306 = or i64 %291, 2
  %307 = getelementptr inbounds float, float* %284, i64 %306
  %308 = bitcast float* %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = mul nsw i64 %306, %23
  %311 = getelementptr inbounds float, float* %285, i64 %310
  %312 = bitcast float* %311 to i32*
  store i32 %309, i32* %312, align 4
  %313 = or i64 %291, 3
  %314 = getelementptr inbounds float, float* %284, i64 %313
  %315 = bitcast float* %314 to i32*
  %316 = load i32, i32* %315, align 4
  %317 = mul nsw i64 %313, %23
  %318 = getelementptr inbounds float, float* %285, i64 %317
  %319 = bitcast float* %318 to i32*
  store i32 %316, i32* %319, align 4
  %320 = add nuw nsw i64 %291, 4
  %321 = add i64 %292, -4
  %322 = icmp eq i64 %321, 0
  br i1 %322, label %323, label %290

323:                                              ; preds = %290, %283
  %324 = phi i64 [ 0, %283 ], [ %320, %290 ]
  %325 = icmp eq i64 %286, 0
  br i1 %325, label %338, label %326

326:                                              ; preds = %323, %326
  %327 = phi i64 [ %335, %326 ], [ %324, %323 ]
  %328 = phi i64 [ %336, %326 ], [ %286, %323 ]
  %329 = getelementptr inbounds float, float* %284, i64 %327
  %330 = bitcast float* %329 to i32*
  %331 = load i32, i32* %330, align 4
  %332 = mul nsw i64 %327, %23
  %333 = getelementptr inbounds float, float* %285, i64 %332
  %334 = bitcast float* %333 to i32*
  store i32 %331, i32* %334, align 4
  %335 = add nuw nsw i64 %327, 1
  %336 = add i64 %328, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %326, !llvm.loop !82

338:                                              ; preds = %326, %323
  br i1 %148, label %339, label %450

339:                                              ; preds = %338
  %340 = getelementptr inbounds float, float* %144, i64 %26
  %341 = getelementptr inbounds float, float* %143, i64 2
  %342 = and i64 %150, 3
  %343 = icmp ult i64 %151, 3
  br i1 %343, label %379, label %344

344:                                              ; preds = %339
  %345 = sub nsw i64 %150, %342
  br label %346

346:                                              ; preds = %346, %344
  %347 = phi i64 [ 0, %344 ], [ %376, %346 ]
  %348 = phi i64 [ %345, %344 ], [ %377, %346 ]
  %349 = getelementptr inbounds float, float* %340, i64 %347
  %350 = bitcast float* %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = mul nsw i64 %347, %23
  %353 = getelementptr inbounds float, float* %341, i64 %352
  %354 = bitcast float* %353 to i32*
  store i32 %351, i32* %354, align 4
  %355 = or i64 %347, 1
  %356 = getelementptr inbounds float, float* %340, i64 %355
  %357 = bitcast float* %356 to i32*
  %358 = load i32, i32* %357, align 4
  %359 = mul nsw i64 %355, %23
  %360 = getelementptr inbounds float, float* %341, i64 %359
  %361 = bitcast float* %360 to i32*
  store i32 %358, i32* %361, align 4
  %362 = or i64 %347, 2
  %363 = getelementptr inbounds float, float* %340, i64 %362
  %364 = bitcast float* %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = mul nsw i64 %362, %23
  %367 = getelementptr inbounds float, float* %341, i64 %366
  %368 = bitcast float* %367 to i32*
  store i32 %365, i32* %368, align 4
  %369 = or i64 %347, 3
  %370 = getelementptr inbounds float, float* %340, i64 %369
  %371 = bitcast float* %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = mul nsw i64 %369, %23
  %374 = getelementptr inbounds float, float* %341, i64 %373
  %375 = bitcast float* %374 to i32*
  store i32 %372, i32* %375, align 4
  %376 = add nuw nsw i64 %347, 4
  %377 = add i64 %348, -4
  %378 = icmp eq i64 %377, 0
  br i1 %378, label %379, label %346

379:                                              ; preds = %346, %339
  %380 = phi i64 [ 0, %339 ], [ %376, %346 ]
  %381 = icmp eq i64 %342, 0
  br i1 %381, label %394, label %382

382:                                              ; preds = %379, %382
  %383 = phi i64 [ %391, %382 ], [ %380, %379 ]
  %384 = phi i64 [ %392, %382 ], [ %342, %379 ]
  %385 = getelementptr inbounds float, float* %340, i64 %383
  %386 = bitcast float* %385 to i32*
  %387 = load i32, i32* %386, align 4
  %388 = mul nsw i64 %383, %23
  %389 = getelementptr inbounds float, float* %341, i64 %388
  %390 = bitcast float* %389 to i32*
  store i32 %387, i32* %390, align 4
  %391 = add nuw nsw i64 %383, 1
  %392 = add i64 %384, -1
  %393 = icmp eq i64 %392, 0
  br i1 %393, label %394, label %382, !llvm.loop !83

394:                                              ; preds = %382, %379
  br i1 %148, label %395, label %450

395:                                              ; preds = %394
  %396 = getelementptr inbounds float, float* %144, i64 %27
  %397 = getelementptr inbounds float, float* %143, i64 3
  %398 = and i64 %150, 3
  %399 = icmp ult i64 %151, 3
  br i1 %399, label %435, label %400

400:                                              ; preds = %395
  %401 = sub nsw i64 %150, %398
  br label %402

402:                                              ; preds = %402, %400
  %403 = phi i64 [ 0, %400 ], [ %432, %402 ]
  %404 = phi i64 [ %401, %400 ], [ %433, %402 ]
  %405 = getelementptr inbounds float, float* %396, i64 %403
  %406 = bitcast float* %405 to i32*
  %407 = load i32, i32* %406, align 4
  %408 = mul nsw i64 %403, %23
  %409 = getelementptr inbounds float, float* %397, i64 %408
  %410 = bitcast float* %409 to i32*
  store i32 %407, i32* %410, align 4
  %411 = or i64 %403, 1
  %412 = getelementptr inbounds float, float* %396, i64 %411
  %413 = bitcast float* %412 to i32*
  %414 = load i32, i32* %413, align 4
  %415 = mul nsw i64 %411, %23
  %416 = getelementptr inbounds float, float* %397, i64 %415
  %417 = bitcast float* %416 to i32*
  store i32 %414, i32* %417, align 4
  %418 = or i64 %403, 2
  %419 = getelementptr inbounds float, float* %396, i64 %418
  %420 = bitcast float* %419 to i32*
  %421 = load i32, i32* %420, align 4
  %422 = mul nsw i64 %418, %23
  %423 = getelementptr inbounds float, float* %397, i64 %422
  %424 = bitcast float* %423 to i32*
  store i32 %421, i32* %424, align 4
  %425 = or i64 %403, 3
  %426 = getelementptr inbounds float, float* %396, i64 %425
  %427 = bitcast float* %426 to i32*
  %428 = load i32, i32* %427, align 4
  %429 = mul nsw i64 %425, %23
  %430 = getelementptr inbounds float, float* %397, i64 %429
  %431 = bitcast float* %430 to i32*
  store i32 %428, i32* %431, align 4
  %432 = add nuw nsw i64 %403, 4
  %433 = add i64 %404, -4
  %434 = icmp eq i64 %433, 0
  br i1 %434, label %435, label %402

435:                                              ; preds = %402, %395
  %436 = phi i64 [ 0, %395 ], [ %432, %402 ]
  %437 = icmp eq i64 %398, 0
  br i1 %437, label %450, label %438

438:                                              ; preds = %435, %438
  %439 = phi i64 [ %447, %438 ], [ %436, %435 ]
  %440 = phi i64 [ %448, %438 ], [ %398, %435 ]
  %441 = getelementptr inbounds float, float* %396, i64 %439
  %442 = bitcast float* %441 to i32*
  %443 = load i32, i32* %442, align 4
  %444 = mul nsw i64 %439, %23
  %445 = getelementptr inbounds float, float* %397, i64 %444
  %446 = bitcast float* %445 to i32*
  store i32 %443, i32* %446, align 4
  %447 = add nuw nsw i64 %439, 1
  %448 = add i64 %440, -1
  %449 = icmp eq i64 %448, 0
  br i1 %449, label %450, label %438, !llvm.loop !84

450:                                              ; preds = %435, %438, %146, %171, %338, %394
  %451 = sub i32 %24, %142
  br label %205
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !85
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #12, !noalias !85
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !85
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !85
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !85
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !85
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !85
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !85
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !85
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !85
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !85
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !85
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !85
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !85
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !85
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !85
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !85
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !85
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !85
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !88

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !85
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !85
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !89

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !85
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !90

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !91
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !91
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #12, !noalias !91
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !91
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !91
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !91
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !91
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !91
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !91
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !91
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !91
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !91
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !91
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !91
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !91
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !91
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !91
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !91
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !91
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !91
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !94

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !91
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !91
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !95

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !91
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !96

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #11
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i32, i32* %4, i64 %317
  %336 = and i64 %317, 4294967288
  %337 = add nsw i64 %336, -8
  %338 = lshr exact i64 %337, 3
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 8
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967288
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i32, i32* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i32, i32* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i32, i32* %4, i64 %403
  %405 = getelementptr i32, i32* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i32* %397, %405
  %421 = icmp ult i32* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i32, i32* %2, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4, !alias.scope !97, !noalias !100
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4, !alias.scope !97, !noalias !100
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i32, i32* %4, i64 %438
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %440, align 4, !alias.scope !100
  %441 = getelementptr inbounds i32, i32* %439, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %442, align 4, !alias.scope !100
  %443 = or i64 %425, 8
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i32, i32* %2, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4, !alias.scope !97, !noalias !100
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4, !alias.scope !97, !noalias !100
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i32, i32* %4, i64 %455
  %457 = bitcast i32* %456 to <4 x i32>*
  store <4 x i32> %448, <4 x i32>* %457, align 4, !alias.scope !100
  %458 = getelementptr inbounds i32, i32* %456, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  store <4 x i32> %451, <4 x i32>* %459, align 4, !alias.scope !100
  %460 = add i64 %425, 16
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !102

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i32, i32* %2, i64 %467
  %469 = bitcast i32* %468 to <4 x i32>*
  %470 = load <4 x i32>, <4 x i32>* %469, align 4, !alias.scope !97, !noalias !100
  %471 = getelementptr inbounds i32, i32* %468, i64 4
  %472 = bitcast i32* %471 to <4 x i32>*
  %473 = load <4 x i32>, <4 x i32>* %472, align 4, !alias.scope !97, !noalias !100
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i32, i32* %4, i64 %477
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %470, <4 x i32>* %479, align 4, !alias.scope !100
  %480 = getelementptr inbounds i32, i32* %478, i64 4
  %481 = bitcast i32* %480 to <4 x i32>*
  store <4 x i32> %473, <4 x i32>* %481, align 4, !alias.scope !100
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i32, i32* %2, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, i32* %4, i64 %494
  store i32 %490, i32* %495, align 4
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i32, i32* %2, i64 %503
  %505 = load i32, i32* %504, align 4
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i32, i32* %4, i64 %509
  store i32 %505, i32* %510, align 4
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i32, i32* %2, i64 %513
  %515 = load i32, i32* %514, align 4
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i32, i32* %4, i64 %519
  store i32 %515, i32* %520, align 4
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !103

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIhLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIhEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  br label %265

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %264

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %265

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = mul i32 %112, %113
  %125 = zext i32 %124 to i64
  %126 = getelementptr i8, i8* %4, i64 %123
  %127 = and i64 %123, 4294967264
  %128 = add nsw i64 %127, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = icmp ugt i32 %113, 31
  %132 = icmp eq i32 %96, 1
  %133 = and i1 %131, %132
  %134 = and i64 %123, 4294967264
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %128, 0
  %137 = sub nuw nsw i64 %130, %135
  %138 = icmp eq i64 %135, 0
  %139 = icmp eq i64 %134, %123
  %140 = and i64 %123, 1
  %141 = icmp eq i64 %140, 0
  %142 = sub nsw i64 0, %123
  br label %143

143:                                              ; preds = %241, %115
  %144 = phi i64 [ 0, %115 ], [ %242, %241 ]
  %145 = mul i64 %144, %125
  %146 = mul i64 %144, %120
  %147 = add i64 %146, %123
  br i1 %116, label %148, label %241

148:                                              ; preds = %143
  %149 = mul nsw i64 %144, %120
  %150 = trunc i64 %144 to i32
  %151 = mul i32 %112, %150
  br label %152

152:                                              ; preds = %244, %148
  %153 = phi i64 [ 0, %148 ], [ %245, %244 ]
  %154 = mul i64 %153, %123
  %155 = add i64 %145, %154
  %156 = shl i64 %155, 32
  %157 = ashr exact i64 %156, 32
  %158 = getelementptr i8, i8* %4, i64 %157
  %159 = getelementptr i8, i8* %126, i64 %157
  %160 = mul i64 %153, %119
  %161 = add i64 %146, %160
  %162 = getelementptr i8, i8* %2, i64 %161
  %163 = add i64 %147, %160
  %164 = getelementptr i8, i8* %2, i64 %163
  br i1 %117, label %165, label %244

165:                                              ; preds = %152
  %166 = mul nsw i64 %153, %119
  %167 = add nsw i64 %166, %149
  %168 = trunc i64 %153 to i32
  %169 = add i32 %151, %168
  %170 = mul i32 %169, %113
  %171 = sext i32 %170 to i64
  br i1 %133, label %172, label %176

172:                                              ; preds = %165
  %173 = icmp ult i8* %158, %164
  %174 = icmp ult i8* %162, %159
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %190

176:                                              ; preds = %165, %240, %172
  %177 = phi i64 [ 0, %172 ], [ 0, %165 ], [ %134, %240 ]
  %178 = xor i64 %177, -1
  br i1 %141, label %187, label %179

179:                                              ; preds = %176
  %180 = mul nsw i64 %177, %118
  %181 = add nsw i64 %167, %180
  %182 = add nsw i64 %177, %171
  %183 = getelementptr inbounds i8, i8* %2, i64 %181
  %184 = load i8, i8* %183, align 1
  %185 = getelementptr inbounds i8, i8* %4, i64 %182
  store i8 %184, i8* %185, align 1
  %186 = or i64 %177, 1
  br label %187

187:                                              ; preds = %179, %176
  %188 = phi i64 [ %186, %179 ], [ %177, %176 ]
  %189 = icmp eq i64 %178, %142
  br i1 %189, label %244, label %247

190:                                              ; preds = %172
  br i1 %136, label %224, label %191

191:                                              ; preds = %190, %191
  %192 = phi i64 [ %221, %191 ], [ 0, %190 ]
  %193 = phi i64 [ %222, %191 ], [ %137, %190 ]
  %194 = mul nsw i64 %192, %118
  %195 = add nsw i64 %167, %194
  %196 = add nsw i64 %192, %171
  %197 = getelementptr inbounds i8, i8* %2, i64 %195
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !104
  %200 = getelementptr inbounds i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !104
  %203 = getelementptr inbounds i8, i8* %4, i64 %196
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %204, align 1, !alias.scope !107, !noalias !104
  %205 = getelementptr inbounds i8, i8* %203, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1, !alias.scope !107, !noalias !104
  %207 = or i64 %192, 32
  %208 = mul nsw i64 %207, %118
  %209 = add nsw i64 %167, %208
  %210 = add nsw i64 %207, %171
  %211 = getelementptr inbounds i8, i8* %2, i64 %209
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !104
  %214 = getelementptr inbounds i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !104
  %217 = getelementptr inbounds i8, i8* %4, i64 %210
  %218 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %218, align 1, !alias.scope !107, !noalias !104
  %219 = getelementptr inbounds i8, i8* %217, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !107, !noalias !104
  %221 = add i64 %192, 64
  %222 = add i64 %193, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %191, !llvm.loop !109

224:                                              ; preds = %191, %190
  %225 = phi i64 [ 0, %190 ], [ %221, %191 ]
  br i1 %138, label %240, label %226

226:                                              ; preds = %224
  %227 = mul nsw i64 %225, %118
  %228 = add nsw i64 %167, %227
  %229 = add nsw i64 %225, %171
  %230 = getelementptr inbounds i8, i8* %2, i64 %228
  %231 = bitcast i8* %230 to <16 x i8>*
  %232 = load <16 x i8>, <16 x i8>* %231, align 1, !alias.scope !104
  %233 = getelementptr inbounds i8, i8* %230, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !104
  %236 = getelementptr inbounds i8, i8* %4, i64 %229
  %237 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %232, <16 x i8>* %237, align 1, !alias.scope !107, !noalias !104
  %238 = getelementptr inbounds i8, i8* %236, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !107, !noalias !104
  br label %240

240:                                              ; preds = %224, %226
  br i1 %139, label %244, label %176

241:                                              ; preds = %244, %143
  %242 = add nuw nsw i64 %144, 1
  %243 = icmp eq i64 %242, %121
  br i1 %243, label %265, label %143

244:                                              ; preds = %187, %247, %240, %152
  %245 = add nuw nsw i64 %153, 1
  %246 = icmp eq i64 %245, %122
  br i1 %246, label %241, label %152

247:                                              ; preds = %187, %247
  %248 = phi i64 [ %262, %247 ], [ %188, %187 ]
  %249 = mul nsw i64 %248, %118
  %250 = add nsw i64 %167, %249
  %251 = add nsw i64 %248, %171
  %252 = getelementptr inbounds i8, i8* %2, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %4, i64 %251
  store i8 %253, i8* %254, align 1
  %255 = add nuw nsw i64 %248, 1
  %256 = mul nsw i64 %255, %118
  %257 = add nsw i64 %167, %256
  %258 = add nsw i64 %255, %171
  %259 = getelementptr inbounds i8, i8* %2, i64 %257
  %260 = load i8, i8* %259, align 1
  %261 = getelementptr inbounds i8, i8* %4, i64 %258
  store i8 %260, i8* %261, align 1
  %262 = add nuw nsw i64 %248, 2
  %263 = icmp eq i64 %262, %123
  br i1 %263, label %244, label %247, !llvm.loop !110

264:                                              ; preds = %46
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4) #11
  br label %265

265:                                              ; preds = %241, %93, %264, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIhEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %159
  %29 = trunc i64 %163 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi i8* [ %1, %4 ], [ %162, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %218

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %166

44:                                               ; preds = %19, %159
  %45 = phi i64 [ 0, %19 ], [ %163, %159 ]
  %46 = phi i8* [ %1, %19 ], [ %162, %159 ]
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  tail call void @llvm.prefetch(i8* %46, i32 0, i32 3, i32 1) #11
  %48 = getelementptr inbounds i8, i8* %46, i64 %20
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %20
  tail call void @llvm.prefetch(i8* %49, i32 0, i32 3, i32 1) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %20
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #11
  br i1 %22, label %105, label %51

51:                                               ; preds = %44, %51
  %52 = phi i8* [ %102, %51 ], [ %46, %44 ]
  %53 = phi i8* [ %101, %51 ], [ %47, %44 ]
  %54 = phi i32 [ %103, %51 ], [ 0, %44 ]
  %55 = load i8, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %52, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds i8, i8* %52, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %52, i64 %20
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %62, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %62, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %62, i64 %20
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %70, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %70, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %70, i64 %20
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %78, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %78, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %78, i64 3
  %85 = load i8, i8* %84, align 1
  store i8 %55, i8* %53, align 1
  %86 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %63, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %71, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %53, i64 3
  store i8 %79, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %53, i64 %23
  store i8 %57, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 %65, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 %73, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %89, i64 3
  store i8 %81, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %89, i64 %23
  store i8 %59, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8 %67, i8* %94, align 1
  %95 = getelementptr inbounds i8, i8* %93, i64 2
  store i8 %75, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 3
  store i8 %83, i8* %96, align 1
  %97 = getelementptr inbounds i8, i8* %93, i64 %23
  store i8 %61, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 %69, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 2
  store i8 %77, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %97, i64 3
  store i8 %85, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %97, i64 %23
  %102 = getelementptr inbounds i8, i8* %52, i64 4
  %103 = add nuw nsw i32 %54, 4
  %104 = icmp sgt i32 %103, %21
  br i1 %104, label %105, label %51

105:                                              ; preds = %51, %44
  %106 = phi i32 [ 0, %44 ], [ %25, %51 ]
  %107 = phi i8* [ %47, %44 ], [ %101, %51 ]
  %108 = phi i8* [ %46, %44 ], [ %102, %51 ]
  %109 = icmp eq i32 %15, %106
  br i1 %109, label %159, label %110

110:                                              ; preds = %105
  %111 = sub i32 %15, %106
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %356

113:                                              ; preds = %110
  %114 = zext i32 %111 to i64
  %115 = add nsw i64 %114, -1
  %116 = and i64 %114, 3
  %117 = icmp ult i64 %115, 3
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = sub nsw i64 %114, %116
  br label %134

120:                                              ; preds = %134, %113
  %121 = phi i64 [ 0, %113 ], [ %156, %134 ]
  %122 = icmp eq i64 %116, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %130, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %131, %123 ], [ %116, %120 ]
  %126 = getelementptr inbounds i8, i8* %108, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = mul nsw i64 %124, %23
  %129 = getelementptr inbounds i8, i8* %107, i64 %128
  store i8 %127, i8* %129, align 1
  %130 = add nuw nsw i64 %124, 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %123, !llvm.loop !111

133:                                              ; preds = %123, %120
  br i1 %112, label %219, label %356

134:                                              ; preds = %134, %118
  %135 = phi i64 [ 0, %118 ], [ %156, %134 ]
  %136 = phi i64 [ %119, %118 ], [ %157, %134 ]
  %137 = getelementptr inbounds i8, i8* %108, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = mul nsw i64 %135, %23
  %140 = getelementptr inbounds i8, i8* %107, i64 %139
  store i8 %138, i8* %140, align 1
  %141 = or i64 %135, 1
  %142 = getelementptr inbounds i8, i8* %108, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = mul nsw i64 %141, %23
  %145 = getelementptr inbounds i8, i8* %107, i64 %144
  store i8 %143, i8* %145, align 1
  %146 = or i64 %135, 2
  %147 = getelementptr inbounds i8, i8* %108, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = mul nsw i64 %146, %23
  %150 = getelementptr inbounds i8, i8* %107, i64 %149
  store i8 %148, i8* %150, align 1
  %151 = or i64 %135, 3
  %152 = getelementptr inbounds i8, i8* %108, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = mul nsw i64 %151, %23
  %155 = getelementptr inbounds i8, i8* %107, i64 %154
  store i8 %153, i8* %155, align 1
  %156 = add nuw nsw i64 %135, 4
  %157 = add i64 %136, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %120, label %134

159:                                              ; preds = %105, %356
  %160 = phi i32 [ %357, %356 ], [ %16, %105 ]
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %108, i64 %161
  %163 = add nuw i64 %45, 4
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %17, %164
  br i1 %165, label %28, label %44

166:                                              ; preds = %184, %34
  %167 = phi i64 [ %37, %34 ], [ %186, %184 ]
  %168 = phi i8* [ %32, %34 ], [ %185, %184 ]
  br i1 %35, label %169, label %184

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %3, i64 %167
  br i1 %41, label %171, label %188

171:                                              ; preds = %188, %169
  %172 = phi i8* [ undef, %169 ], [ %215, %188 ]
  %173 = phi i8* [ %170, %169 ], [ %214, %188 ]
  %174 = phi i8* [ %168, %169 ], [ %215, %188 ]
  br i1 %43, label %184, label %175

175:                                              ; preds = %171, %175
  %176 = phi i8* [ %180, %175 ], [ %173, %171 ]
  %177 = phi i8* [ %181, %175 ], [ %174, %171 ]
  %178 = phi i32 [ %182, %175 ], [ %40, %171 ]
  %179 = load i8, i8* %177, align 1
  store i8 %179, i8* %176, align 1
  %180 = getelementptr inbounds i8, i8* %176, i64 %36
  %181 = getelementptr inbounds i8, i8* %177, i64 1
  %182 = add i32 %178, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !112

184:                                              ; preds = %171, %175, %166
  %185 = phi i8* [ %168, %166 ], [ %172, %171 ], [ %181, %175 ]
  %186 = add nuw nsw i64 %167, 1
  %187 = icmp eq i64 %186, %38
  br i1 %187, label %218, label %166

188:                                              ; preds = %169, %188
  %189 = phi i8* [ %214, %188 ], [ %170, %169 ]
  %190 = phi i8* [ %215, %188 ], [ %168, %169 ]
  %191 = phi i32 [ %216, %188 ], [ %42, %169 ]
  %192 = load i8, i8* %190, align 1
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %189, i64 %36
  %194 = getelementptr inbounds i8, i8* %190, i64 1
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %193, i64 %36
  %197 = getelementptr inbounds i8, i8* %190, i64 2
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %196, align 1
  %199 = getelementptr inbounds i8, i8* %196, i64 %36
  %200 = getelementptr inbounds i8, i8* %190, i64 3
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %199, align 1
  %202 = getelementptr inbounds i8, i8* %199, i64 %36
  %203 = getelementptr inbounds i8, i8* %190, i64 4
  %204 = load i8, i8* %203, align 1
  store i8 %204, i8* %202, align 1
  %205 = getelementptr inbounds i8, i8* %202, i64 %36
  %206 = getelementptr inbounds i8, i8* %190, i64 5
  %207 = load i8, i8* %206, align 1
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds i8, i8* %205, i64 %36
  %209 = getelementptr inbounds i8, i8* %190, i64 6
  %210 = load i8, i8* %209, align 1
  store i8 %210, i8* %208, align 1
  %211 = getelementptr inbounds i8, i8* %208, i64 %36
  %212 = getelementptr inbounds i8, i8* %190, i64 7
  %213 = load i8, i8* %212, align 1
  store i8 %213, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 %36
  %215 = getelementptr inbounds i8, i8* %190, i64 8
  %216 = add i32 %191, -8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %171, label %188

218:                                              ; preds = %184, %30
  ret void

219:                                              ; preds = %133
  %220 = getelementptr inbounds i8, i8* %108, i64 %20
  %221 = getelementptr inbounds i8, i8* %107, i64 1
  %222 = and i64 %114, 3
  %223 = icmp ult i64 %115, 3
  br i1 %223, label %251, label %224

224:                                              ; preds = %219
  %225 = sub nsw i64 %114, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %248, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %249, %226 ]
  %229 = getelementptr inbounds i8, i8* %220, i64 %227
  %230 = load i8, i8* %229, align 1
  %231 = mul nsw i64 %227, %23
  %232 = getelementptr inbounds i8, i8* %221, i64 %231
  store i8 %230, i8* %232, align 1
  %233 = or i64 %227, 1
  %234 = getelementptr inbounds i8, i8* %220, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = mul nsw i64 %233, %23
  %237 = getelementptr inbounds i8, i8* %221, i64 %236
  store i8 %235, i8* %237, align 1
  %238 = or i64 %227, 2
  %239 = getelementptr inbounds i8, i8* %220, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = mul nsw i64 %238, %23
  %242 = getelementptr inbounds i8, i8* %221, i64 %241
  store i8 %240, i8* %242, align 1
  %243 = or i64 %227, 3
  %244 = getelementptr inbounds i8, i8* %220, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = mul nsw i64 %243, %23
  %247 = getelementptr inbounds i8, i8* %221, i64 %246
  store i8 %245, i8* %247, align 1
  %248 = add nuw nsw i64 %227, 4
  %249 = add i64 %228, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %226

251:                                              ; preds = %226, %219
  %252 = phi i64 [ 0, %219 ], [ %248, %226 ]
  %253 = icmp eq i64 %222, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %261, %254 ], [ %252, %251 ]
  %256 = phi i64 [ %262, %254 ], [ %222, %251 ]
  %257 = getelementptr inbounds i8, i8* %220, i64 %255
  %258 = load i8, i8* %257, align 1
  %259 = mul nsw i64 %255, %23
  %260 = getelementptr inbounds i8, i8* %221, i64 %259
  store i8 %258, i8* %260, align 1
  %261 = add nuw nsw i64 %255, 1
  %262 = add i64 %256, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %254, !llvm.loop !113

264:                                              ; preds = %254, %251
  br i1 %112, label %265, label %356

265:                                              ; preds = %264
  %266 = getelementptr inbounds i8, i8* %108, i64 %26
  %267 = getelementptr inbounds i8, i8* %107, i64 2
  %268 = and i64 %114, 3
  %269 = icmp ult i64 %115, 3
  br i1 %269, label %297, label %270

270:                                              ; preds = %265
  %271 = sub nsw i64 %114, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %294, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %295, %272 ]
  %275 = getelementptr inbounds i8, i8* %266, i64 %273
  %276 = load i8, i8* %275, align 1
  %277 = mul nsw i64 %273, %23
  %278 = getelementptr inbounds i8, i8* %267, i64 %277
  store i8 %276, i8* %278, align 1
  %279 = or i64 %273, 1
  %280 = getelementptr inbounds i8, i8* %266, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = mul nsw i64 %279, %23
  %283 = getelementptr inbounds i8, i8* %267, i64 %282
  store i8 %281, i8* %283, align 1
  %284 = or i64 %273, 2
  %285 = getelementptr inbounds i8, i8* %266, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = mul nsw i64 %284, %23
  %288 = getelementptr inbounds i8, i8* %267, i64 %287
  store i8 %286, i8* %288, align 1
  %289 = or i64 %273, 3
  %290 = getelementptr inbounds i8, i8* %266, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = mul nsw i64 %289, %23
  %293 = getelementptr inbounds i8, i8* %267, i64 %292
  store i8 %291, i8* %293, align 1
  %294 = add nuw nsw i64 %273, 4
  %295 = add i64 %274, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %272

297:                                              ; preds = %272, %265
  %298 = phi i64 [ 0, %265 ], [ %294, %272 ]
  %299 = icmp eq i64 %268, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %297, %300
  %301 = phi i64 [ %307, %300 ], [ %298, %297 ]
  %302 = phi i64 [ %308, %300 ], [ %268, %297 ]
  %303 = getelementptr inbounds i8, i8* %266, i64 %301
  %304 = load i8, i8* %303, align 1
  %305 = mul nsw i64 %301, %23
  %306 = getelementptr inbounds i8, i8* %267, i64 %305
  store i8 %304, i8* %306, align 1
  %307 = add nuw nsw i64 %301, 1
  %308 = add i64 %302, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %300, !llvm.loop !114

310:                                              ; preds = %300, %297
  br i1 %112, label %311, label %356

311:                                              ; preds = %310
  %312 = getelementptr inbounds i8, i8* %108, i64 %27
  %313 = getelementptr inbounds i8, i8* %107, i64 3
  %314 = and i64 %114, 3
  %315 = icmp ult i64 %115, 3
  br i1 %315, label %343, label %316

316:                                              ; preds = %311
  %317 = sub nsw i64 %114, %314
  br label %318

318:                                              ; preds = %318, %316
  %319 = phi i64 [ 0, %316 ], [ %340, %318 ]
  %320 = phi i64 [ %317, %316 ], [ %341, %318 ]
  %321 = getelementptr inbounds i8, i8* %312, i64 %319
  %322 = load i8, i8* %321, align 1
  %323 = mul nsw i64 %319, %23
  %324 = getelementptr inbounds i8, i8* %313, i64 %323
  store i8 %322, i8* %324, align 1
  %325 = or i64 %319, 1
  %326 = getelementptr inbounds i8, i8* %312, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = mul nsw i64 %325, %23
  %329 = getelementptr inbounds i8, i8* %313, i64 %328
  store i8 %327, i8* %329, align 1
  %330 = or i64 %319, 2
  %331 = getelementptr inbounds i8, i8* %312, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = mul nsw i64 %330, %23
  %334 = getelementptr inbounds i8, i8* %313, i64 %333
  store i8 %332, i8* %334, align 1
  %335 = or i64 %319, 3
  %336 = getelementptr inbounds i8, i8* %312, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = mul nsw i64 %335, %23
  %339 = getelementptr inbounds i8, i8* %313, i64 %338
  store i8 %337, i8* %339, align 1
  %340 = add nuw nsw i64 %319, 4
  %341 = add i64 %320, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %318

343:                                              ; preds = %318, %311
  %344 = phi i64 [ 0, %311 ], [ %340, %318 ]
  %345 = icmp eq i64 %314, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %353, %346 ], [ %344, %343 ]
  %348 = phi i64 [ %354, %346 ], [ %314, %343 ]
  %349 = getelementptr inbounds i8, i8* %312, i64 %347
  %350 = load i8, i8* %349, align 1
  %351 = mul nsw i64 %347, %23
  %352 = getelementptr inbounds i8, i8* %313, i64 %351
  store i8 %350, i8* %352, align 1
  %353 = add nuw nsw i64 %347, 1
  %354 = add i64 %348, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %346, !llvm.loop !115

356:                                              ; preds = %343, %346, %110, %133, %264, %310
  %357 = sub i32 %24, %106
  br label %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #11
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !116
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #12, !noalias !116
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !116
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !116
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !116
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !116
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !116
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !116
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !116
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !116
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !116
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !116
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !116
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !116
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !116
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !116
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !116
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !116
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !116
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !119

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !116
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !116
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !120

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !116
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !121

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #11
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !122
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #11
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #11
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !122
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #12, !noalias !122
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !122
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !122
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !122
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !122
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !122
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !122
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !122
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !122
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !122
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !122
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !122
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !122
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !122
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !122
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !122
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !122
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !122
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !125

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !122
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !122
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !126

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !122
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !127

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #11
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #11
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i8, i8* %4, i64 %317
  %336 = and i64 %317, 4294967264
  %337 = add nsw i64 %336, -32
  %338 = lshr exact i64 %337, 5
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 32
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967264
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i8, i8* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i8, i8* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i8, i8* %4, i64 %403
  %405 = getelementptr i8, i8* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i8* %397, %405
  %421 = icmp ult i8* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i8, i8* %2, i64 %428
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !128, !noalias !131
  %432 = getelementptr inbounds i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !128, !noalias !131
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i8, i8* %4, i64 %438
  %440 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %440, align 1, !alias.scope !131
  %441 = getelementptr inbounds i8, i8* %439, i64 16
  %442 = bitcast i8* %441 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %442, align 1, !alias.scope !131
  %443 = or i64 %425, 32
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i8, i8* %2, i64 %445
  %447 = bitcast i8* %446 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !128, !noalias !131
  %449 = getelementptr inbounds i8, i8* %446, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !128, !noalias !131
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8, i8* %4, i64 %455
  %457 = bitcast i8* %456 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %457, align 1, !alias.scope !131
  %458 = getelementptr inbounds i8, i8* %456, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %459, align 1, !alias.scope !131
  %460 = add i64 %425, 64
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !133

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i8, i8* %2, i64 %467
  %469 = bitcast i8* %468 to <16 x i8>*
  %470 = load <16 x i8>, <16 x i8>* %469, align 1, !alias.scope !128, !noalias !131
  %471 = getelementptr inbounds i8, i8* %468, i64 16
  %472 = bitcast i8* %471 to <16 x i8>*
  %473 = load <16 x i8>, <16 x i8>* %472, align 1, !alias.scope !128, !noalias !131
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, i8* %4, i64 %477
  %479 = bitcast i8* %478 to <16 x i8>*
  store <16 x i8> %470, <16 x i8>* %479, align 1, !alias.scope !131
  %480 = getelementptr inbounds i8, i8* %478, i64 16
  %481 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %473, <16 x i8>* %481, align 1, !alias.scope !131
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i8, i8* %2, i64 %488
  %490 = load i8, i8* %489, align 1
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %4, i64 %494
  store i8 %490, i8* %495, align 1
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i8, i8* %2, i64 %503
  %505 = load i8, i8* %504, align 1
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i8, i8* %4, i64 %509
  store i8 %505, i8* %510, align 1
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i8, i8* %2, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, i8* %4, i64 %519
  store i8 %515, i8* %520, align 1
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !134

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #11
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #11
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #11
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #11
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #11
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #11
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #11
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #11
  br label %265

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %264

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %265

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = mul i32 %112, %113
  %125 = zext i32 %124 to i64
  %126 = getelementptr i8, i8* %4, i64 %123
  %127 = and i64 %123, 4294967264
  %128 = add nsw i64 %127, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = icmp ugt i32 %113, 31
  %132 = icmp eq i32 %96, 1
  %133 = and i1 %131, %132
  %134 = and i64 %123, 4294967264
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %128, 0
  %137 = sub nuw nsw i64 %130, %135
  %138 = icmp eq i64 %135, 0
  %139 = icmp eq i64 %134, %123
  %140 = and i64 %123, 1
  %141 = icmp eq i64 %140, 0
  %142 = sub nsw i64 0, %123
  br label %143

143:                                              ; preds = %241, %115
  %144 = phi i64 [ 0, %115 ], [ %242, %241 ]
  %145 = mul i64 %144, %125
  %146 = mul i64 %144, %120
  %147 = add i64 %146, %123
  br i1 %116, label %148, label %241

148:                                              ; preds = %143
  %149 = mul nsw i64 %144, %120
  %150 = trunc i64 %144 to i32
  %151 = mul i32 %112, %150
  br label %152

152:                                              ; preds = %244, %148
  %153 = phi i64 [ 0, %148 ], [ %245, %244 ]
  %154 = mul i64 %153, %123
  %155 = add i64 %145, %154
  %156 = shl i64 %155, 32
  %157 = ashr exact i64 %156, 32
  %158 = getelementptr i8, i8* %4, i64 %157
  %159 = getelementptr i8, i8* %126, i64 %157
  %160 = mul i64 %153, %119
  %161 = add i64 %146, %160
  %162 = getelementptr i8, i8* %2, i64 %161
  %163 = add i64 %147, %160
  %164 = getelementptr i8, i8* %2, i64 %163
  br i1 %117, label %165, label %244

165:                                              ; preds = %152
  %166 = mul nsw i64 %153, %119
  %167 = add nsw i64 %166, %149
  %168 = trunc i64 %153 to i32
  %169 = add i32 %151, %168
  %170 = mul i32 %169, %113
  %171 = sext i32 %170 to i64
  br i1 %133, label %172, label %176

172:                                              ; preds = %165
  %173 = icmp ult i8* %158, %164
  %174 = icmp ult i8* %162, %159
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %190

176:                                              ; preds = %165, %240, %172
  %177 = phi i64 [ 0, %172 ], [ 0, %165 ], [ %134, %240 ]
  %178 = xor i64 %177, -1
  br i1 %141, label %187, label %179

179:                                              ; preds = %176
  %180 = mul nsw i64 %177, %118
  %181 = add nsw i64 %167, %180
  %182 = add nsw i64 %177, %171
  %183 = getelementptr inbounds i8, i8* %2, i64 %181
  %184 = load i8, i8* %183, align 1
  %185 = getelementptr inbounds i8, i8* %4, i64 %182
  store i8 %184, i8* %185, align 1
  %186 = or i64 %177, 1
  br label %187

187:                                              ; preds = %179, %176
  %188 = phi i64 [ %186, %179 ], [ %177, %176 ]
  %189 = icmp eq i64 %178, %142
  br i1 %189, label %244, label %247

190:                                              ; preds = %172
  br i1 %136, label %224, label %191

191:                                              ; preds = %190, %191
  %192 = phi i64 [ %221, %191 ], [ 0, %190 ]
  %193 = phi i64 [ %222, %191 ], [ %137, %190 ]
  %194 = mul nsw i64 %192, %118
  %195 = add nsw i64 %167, %194
  %196 = add nsw i64 %192, %171
  %197 = getelementptr inbounds i8, i8* %2, i64 %195
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !135
  %200 = getelementptr inbounds i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !135
  %203 = getelementptr inbounds i8, i8* %4, i64 %196
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %204, align 1, !alias.scope !138, !noalias !135
  %205 = getelementptr inbounds i8, i8* %203, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1, !alias.scope !138, !noalias !135
  %207 = or i64 %192, 32
  %208 = mul nsw i64 %207, %118
  %209 = add nsw i64 %167, %208
  %210 = add nsw i64 %207, %171
  %211 = getelementptr inbounds i8, i8* %2, i64 %209
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !135
  %214 = getelementptr inbounds i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !135
  %217 = getelementptr inbounds i8, i8* %4, i64 %210
  %218 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %218, align 1, !alias.scope !138, !noalias !135
  %219 = getelementptr inbounds i8, i8* %217, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !138, !noalias !135
  %221 = add i64 %192, 64
  %222 = add i64 %193, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %191, !llvm.loop !140

224:                                              ; preds = %191, %190
  %225 = phi i64 [ 0, %190 ], [ %221, %191 ]
  br i1 %138, label %240, label %226

226:                                              ; preds = %224
  %227 = mul nsw i64 %225, %118
  %228 = add nsw i64 %167, %227
  %229 = add nsw i64 %225, %171
  %230 = getelementptr inbounds i8, i8* %2, i64 %228
  %231 = bitcast i8* %230 to <16 x i8>*
  %232 = load <16 x i8>, <16 x i8>* %231, align 1, !alias.scope !135
  %233 = getelementptr inbounds i8, i8* %230, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !135
  %236 = getelementptr inbounds i8, i8* %4, i64 %229
  %237 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %232, <16 x i8>* %237, align 1, !alias.scope !138, !noalias !135
  %238 = getelementptr inbounds i8, i8* %236, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !138, !noalias !135
  br label %240

240:                                              ; preds = %224, %226
  br i1 %139, label %244, label %176

241:                                              ; preds = %244, %143
  %242 = add nuw nsw i64 %144, 1
  %243 = icmp eq i64 %242, %121
  br i1 %243, label %265, label %143

244:                                              ; preds = %187, %247, %240, %152
  %245 = add nuw nsw i64 %153, 1
  %246 = icmp eq i64 %245, %122
  br i1 %246, label %241, label %152

247:                                              ; preds = %187, %247
  %248 = phi i64 [ %262, %247 ], [ %188, %187 ]
  %249 = mul nsw i64 %248, %118
  %250 = add nsw i64 %167, %249
  %251 = add nsw i64 %248, %171
  %252 = getelementptr inbounds i8, i8* %2, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %4, i64 %251
  store i8 %253, i8* %254, align 1
  %255 = add nuw nsw i64 %248, 1
  %256 = mul nsw i64 %255, %118
  %257 = add nsw i64 %167, %256
  %258 = add nsw i64 %255, %171
  %259 = getelementptr inbounds i8, i8* %2, i64 %257
  %260 = load i8, i8* %259, align 1
  %261 = getelementptr inbounds i8, i8* %4, i64 %258
  store i8 %260, i8* %261, align 1
  %262 = add nuw nsw i64 %248, 2
  %263 = icmp eq i64 %262, %123
  br i1 %263, label %244, label %247, !llvm.loop !141

264:                                              ; preds = %46
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4) #11
  br label %265

265:                                              ; preds = %241, %93, %264, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #5 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %159
  %29 = trunc i64 %163 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi i8* [ %1, %4 ], [ %162, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %218

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %166

44:                                               ; preds = %19, %159
  %45 = phi i64 [ 0, %19 ], [ %163, %159 ]
  %46 = phi i8* [ %1, %19 ], [ %162, %159 ]
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  tail call void @llvm.prefetch(i8* %46, i32 0, i32 3, i32 1) #11
  %48 = getelementptr inbounds i8, i8* %46, i64 %20
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #11
  %49 = getelementptr inbounds i8, i8* %48, i64 %20
  tail call void @llvm.prefetch(i8* %49, i32 0, i32 3, i32 1) #11
  %50 = getelementptr inbounds i8, i8* %49, i64 %20
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #11
  br i1 %22, label %105, label %51

51:                                               ; preds = %44, %51
  %52 = phi i8* [ %102, %51 ], [ %46, %44 ]
  %53 = phi i8* [ %101, %51 ], [ %47, %44 ]
  %54 = phi i32 [ %103, %51 ], [ 0, %44 ]
  %55 = load i8, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %52, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds i8, i8* %52, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %52, i64 %20
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %62, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %62, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %62, i64 %20
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %70, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %70, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %70, i64 %20
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %78, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %78, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %78, i64 3
  %85 = load i8, i8* %84, align 1
  store i8 %55, i8* %53, align 1
  %86 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %63, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %71, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %53, i64 3
  store i8 %79, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %53, i64 %23
  store i8 %57, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 %65, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 %73, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %89, i64 3
  store i8 %81, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %89, i64 %23
  store i8 %59, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8 %67, i8* %94, align 1
  %95 = getelementptr inbounds i8, i8* %93, i64 2
  store i8 %75, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 3
  store i8 %83, i8* %96, align 1
  %97 = getelementptr inbounds i8, i8* %93, i64 %23
  store i8 %61, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 %69, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 2
  store i8 %77, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %97, i64 3
  store i8 %85, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %97, i64 %23
  %102 = getelementptr inbounds i8, i8* %52, i64 4
  %103 = add nuw nsw i32 %54, 4
  %104 = icmp sgt i32 %103, %21
  br i1 %104, label %105, label %51

105:                                              ; preds = %51, %44
  %106 = phi i32 [ 0, %44 ], [ %25, %51 ]
  %107 = phi i8* [ %47, %44 ], [ %101, %51 ]
  %108 = phi i8* [ %46, %44 ], [ %102, %51 ]
  %109 = icmp eq i32 %15, %106
  br i1 %109, label %159, label %110

110:                                              ; preds = %105
  %111 = sub i32 %15, %106
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %356

113:                                              ; preds = %110
  %114 = zext i32 %111 to i64
  %115 = add nsw i64 %114, -1
  %116 = and i64 %114, 3
  %117 = icmp ult i64 %115, 3
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = sub nsw i64 %114, %116
  br label %134

120:                                              ; preds = %134, %113
  %121 = phi i64 [ 0, %113 ], [ %156, %134 ]
  %122 = icmp eq i64 %116, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %130, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %131, %123 ], [ %116, %120 ]
  %126 = getelementptr inbounds i8, i8* %108, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = mul nsw i64 %124, %23
  %129 = getelementptr inbounds i8, i8* %107, i64 %128
  store i8 %127, i8* %129, align 1
  %130 = add nuw nsw i64 %124, 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %123, !llvm.loop !142

133:                                              ; preds = %123, %120
  br i1 %112, label %219, label %356

134:                                              ; preds = %134, %118
  %135 = phi i64 [ 0, %118 ], [ %156, %134 ]
  %136 = phi i64 [ %119, %118 ], [ %157, %134 ]
  %137 = getelementptr inbounds i8, i8* %108, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = mul nsw i64 %135, %23
  %140 = getelementptr inbounds i8, i8* %107, i64 %139
  store i8 %138, i8* %140, align 1
  %141 = or i64 %135, 1
  %142 = getelementptr inbounds i8, i8* %108, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = mul nsw i64 %141, %23
  %145 = getelementptr inbounds i8, i8* %107, i64 %144
  store i8 %143, i8* %145, align 1
  %146 = or i64 %135, 2
  %147 = getelementptr inbounds i8, i8* %108, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = mul nsw i64 %146, %23
  %150 = getelementptr inbounds i8, i8* %107, i64 %149
  store i8 %148, i8* %150, align 1
  %151 = or i64 %135, 3
  %152 = getelementptr inbounds i8, i8* %108, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = mul nsw i64 %151, %23
  %155 = getelementptr inbounds i8, i8* %107, i64 %154
  store i8 %153, i8* %155, align 1
  %156 = add nuw nsw i64 %135, 4
  %157 = add i64 %136, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %120, label %134

159:                                              ; preds = %105, %356
  %160 = phi i32 [ %357, %356 ], [ %16, %105 ]
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %108, i64 %161
  %163 = add nuw i64 %45, 4
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %17, %164
  br i1 %165, label %28, label %44

166:                                              ; preds = %184, %34
  %167 = phi i64 [ %37, %34 ], [ %186, %184 ]
  %168 = phi i8* [ %32, %34 ], [ %185, %184 ]
  br i1 %35, label %169, label %184

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %3, i64 %167
  br i1 %41, label %171, label %188

171:                                              ; preds = %188, %169
  %172 = phi i8* [ undef, %169 ], [ %215, %188 ]
  %173 = phi i8* [ %170, %169 ], [ %214, %188 ]
  %174 = phi i8* [ %168, %169 ], [ %215, %188 ]
  br i1 %43, label %184, label %175

175:                                              ; preds = %171, %175
  %176 = phi i8* [ %180, %175 ], [ %173, %171 ]
  %177 = phi i8* [ %181, %175 ], [ %174, %171 ]
  %178 = phi i32 [ %182, %175 ], [ %40, %171 ]
  %179 = load i8, i8* %177, align 1
  store i8 %179, i8* %176, align 1
  %180 = getelementptr inbounds i8, i8* %176, i64 %36
  %181 = getelementptr inbounds i8, i8* %177, i64 1
  %182 = add i32 %178, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !143

184:                                              ; preds = %171, %175, %166
  %185 = phi i8* [ %168, %166 ], [ %172, %171 ], [ %181, %175 ]
  %186 = add nuw nsw i64 %167, 1
  %187 = icmp eq i64 %186, %38
  br i1 %187, label %218, label %166

188:                                              ; preds = %169, %188
  %189 = phi i8* [ %214, %188 ], [ %170, %169 ]
  %190 = phi i8* [ %215, %188 ], [ %168, %169 ]
  %191 = phi i32 [ %216, %188 ], [ %42, %169 ]
  %192 = load i8, i8* %190, align 1
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %189, i64 %36
  %194 = getelementptr inbounds i8, i8* %190, i64 1
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %193, i64 %36
  %197 = getelementptr inbounds i8, i8* %190, i64 2
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %196, align 1
  %199 = getelementptr inbounds i8, i8* %196, i64 %36
  %200 = getelementptr inbounds i8, i8* %190, i64 3
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %199, align 1
  %202 = getelementptr inbounds i8, i8* %199, i64 %36
  %203 = getelementptr inbounds i8, i8* %190, i64 4
  %204 = load i8, i8* %203, align 1
  store i8 %204, i8* %202, align 1
  %205 = getelementptr inbounds i8, i8* %202, i64 %36
  %206 = getelementptr inbounds i8, i8* %190, i64 5
  %207 = load i8, i8* %206, align 1
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds i8, i8* %205, i64 %36
  %209 = getelementptr inbounds i8, i8* %190, i64 6
  %210 = load i8, i8* %209, align 1
  store i8 %210, i8* %208, align 1
  %211 = getelementptr inbounds i8, i8* %208, i64 %36
  %212 = getelementptr inbounds i8, i8* %190, i64 7
  %213 = load i8, i8* %212, align 1
  store i8 %213, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 %36
  %215 = getelementptr inbounds i8, i8* %190, i64 8
  %216 = add i32 %191, -8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %171, label %188

218:                                              ; preds = %184, %30
  ret void

219:                                              ; preds = %133
  %220 = getelementptr inbounds i8, i8* %108, i64 %20
  %221 = getelementptr inbounds i8, i8* %107, i64 1
  %222 = and i64 %114, 3
  %223 = icmp ult i64 %115, 3
  br i1 %223, label %251, label %224

224:                                              ; preds = %219
  %225 = sub nsw i64 %114, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %248, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %249, %226 ]
  %229 = getelementptr inbounds i8, i8* %220, i64 %227
  %230 = load i8, i8* %229, align 1
  %231 = mul nsw i64 %227, %23
  %232 = getelementptr inbounds i8, i8* %221, i64 %231
  store i8 %230, i8* %232, align 1
  %233 = or i64 %227, 1
  %234 = getelementptr inbounds i8, i8* %220, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = mul nsw i64 %233, %23
  %237 = getelementptr inbounds i8, i8* %221, i64 %236
  store i8 %235, i8* %237, align 1
  %238 = or i64 %227, 2
  %239 = getelementptr inbounds i8, i8* %220, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = mul nsw i64 %238, %23
  %242 = getelementptr inbounds i8, i8* %221, i64 %241
  store i8 %240, i8* %242, align 1
  %243 = or i64 %227, 3
  %244 = getelementptr inbounds i8, i8* %220, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = mul nsw i64 %243, %23
  %247 = getelementptr inbounds i8, i8* %221, i64 %246
  store i8 %245, i8* %247, align 1
  %248 = add nuw nsw i64 %227, 4
  %249 = add i64 %228, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %226

251:                                              ; preds = %226, %219
  %252 = phi i64 [ 0, %219 ], [ %248, %226 ]
  %253 = icmp eq i64 %222, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %261, %254 ], [ %252, %251 ]
  %256 = phi i64 [ %262, %254 ], [ %222, %251 ]
  %257 = getelementptr inbounds i8, i8* %220, i64 %255
  %258 = load i8, i8* %257, align 1
  %259 = mul nsw i64 %255, %23
  %260 = getelementptr inbounds i8, i8* %221, i64 %259
  store i8 %258, i8* %260, align 1
  %261 = add nuw nsw i64 %255, 1
  %262 = add i64 %256, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %254, !llvm.loop !144

264:                                              ; preds = %254, %251
  br i1 %112, label %265, label %356

265:                                              ; preds = %264
  %266 = getelementptr inbounds i8, i8* %108, i64 %26
  %267 = getelementptr inbounds i8, i8* %107, i64 2
  %268 = and i64 %114, 3
  %269 = icmp ult i64 %115, 3
  br i1 %269, label %297, label %270

270:                                              ; preds = %265
  %271 = sub nsw i64 %114, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %294, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %295, %272 ]
  %275 = getelementptr inbounds i8, i8* %266, i64 %273
  %276 = load i8, i8* %275, align 1
  %277 = mul nsw i64 %273, %23
  %278 = getelementptr inbounds i8, i8* %267, i64 %277
  store i8 %276, i8* %278, align 1
  %279 = or i64 %273, 1
  %280 = getelementptr inbounds i8, i8* %266, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = mul nsw i64 %279, %23
  %283 = getelementptr inbounds i8, i8* %267, i64 %282
  store i8 %281, i8* %283, align 1
  %284 = or i64 %273, 2
  %285 = getelementptr inbounds i8, i8* %266, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = mul nsw i64 %284, %23
  %288 = getelementptr inbounds i8, i8* %267, i64 %287
  store i8 %286, i8* %288, align 1
  %289 = or i64 %273, 3
  %290 = getelementptr inbounds i8, i8* %266, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = mul nsw i64 %289, %23
  %293 = getelementptr inbounds i8, i8* %267, i64 %292
  store i8 %291, i8* %293, align 1
  %294 = add nuw nsw i64 %273, 4
  %295 = add i64 %274, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %272

297:                                              ; preds = %272, %265
  %298 = phi i64 [ 0, %265 ], [ %294, %272 ]
  %299 = icmp eq i64 %268, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %297, %300
  %301 = phi i64 [ %307, %300 ], [ %298, %297 ]
  %302 = phi i64 [ %308, %300 ], [ %268, %297 ]
  %303 = getelementptr inbounds i8, i8* %266, i64 %301
  %304 = load i8, i8* %303, align 1
  %305 = mul nsw i64 %301, %23
  %306 = getelementptr inbounds i8, i8* %267, i64 %305
  store i8 %304, i8* %306, align 1
  %307 = add nuw nsw i64 %301, 1
  %308 = add i64 %302, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %300, !llvm.loop !145

310:                                              ; preds = %300, %297
  br i1 %112, label %311, label %356

311:                                              ; preds = %310
  %312 = getelementptr inbounds i8, i8* %108, i64 %27
  %313 = getelementptr inbounds i8, i8* %107, i64 3
  %314 = and i64 %114, 3
  %315 = icmp ult i64 %115, 3
  br i1 %315, label %343, label %316

316:                                              ; preds = %311
  %317 = sub nsw i64 %114, %314
  br label %318

318:                                              ; preds = %318, %316
  %319 = phi i64 [ 0, %316 ], [ %340, %318 ]
  %320 = phi i64 [ %317, %316 ], [ %341, %318 ]
  %321 = getelementptr inbounds i8, i8* %312, i64 %319
  %322 = load i8, i8* %321, align 1
  %323 = mul nsw i64 %319, %23
  %324 = getelementptr inbounds i8, i8* %313, i64 %323
  store i8 %322, i8* %324, align 1
  %325 = or i64 %319, 1
  %326 = getelementptr inbounds i8, i8* %312, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = mul nsw i64 %325, %23
  %329 = getelementptr inbounds i8, i8* %313, i64 %328
  store i8 %327, i8* %329, align 1
  %330 = or i64 %319, 2
  %331 = getelementptr inbounds i8, i8* %312, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = mul nsw i64 %330, %23
  %334 = getelementptr inbounds i8, i8* %313, i64 %333
  store i8 %332, i8* %334, align 1
  %335 = or i64 %319, 3
  %336 = getelementptr inbounds i8, i8* %312, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = mul nsw i64 %335, %23
  %339 = getelementptr inbounds i8, i8* %313, i64 %338
  store i8 %337, i8* %339, align 1
  %340 = add nuw nsw i64 %319, 4
  %341 = add i64 %320, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %318

343:                                              ; preds = %318, %311
  %344 = phi i64 [ 0, %311 ], [ %340, %318 ]
  %345 = icmp eq i64 %314, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %353, %346 ], [ %344, %343 ]
  %348 = phi i64 [ %354, %346 ], [ %314, %343 ]
  %349 = getelementptr inbounds i8, i8* %312, i64 %347
  %350 = load i8, i8* %349, align 1
  %351 = mul nsw i64 %347, %23
  %352 = getelementptr inbounds i8, i8* %313, i64 %351
  store i8 %350, i8* %352, align 1
  %353 = add nuw nsw i64 %347, 1
  %354 = add i64 %348, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %346, !llvm.loop !146

356:                                              ; preds = %343, %346, %110, %133, %264, %310
  %357 = sub i32 %24, %106
  br label %159
}

declare i32 @_ZN6tflite37PopulateConvolutionQuantizationParamsEP13TfLiteContextPK12TfLiteTensorS4_S4_PS2_RK21TfLiteFusedActivationPiS9_S9_S9_S9_S9_(%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, i32* dereferenceable(4), i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #3

declare void @TfLiteIntArrayFree(%struct.TfLiteIntArray*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #11
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #12
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #12
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #10
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #11
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #11
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %10 = alloca %"struct.tflite::ConvParams", align 4
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i16
  %20 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 0
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i16
  %24 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 2
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 3
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = trunc i32 %34 to i16
  %36 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 2
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = trunc i32 %38 to i16
  %40 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 3
  store i16 %39, i16* %40, align 4
  %41 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  %42 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %9
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !147
  br label %73

45:                                               ; preds = %9
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8, !noalias !147
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !147
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %49, i32* %51, align 8, !alias.scope !147
  %52 = icmp sgt i32 %49, 5
  br i1 %52, label %53, label %60

53:                                               ; preds = %45
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 2
  %56 = tail call i8* @_Znam(i64 %55) #10, !noalias !147
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %58 = bitcast i32** %57 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !147
  %59 = bitcast i8* %56 to i32*
  br label %65

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %62 = bitcast %union.anon* %61 to i32*
  %63 = sext i32 %49 to i64
  %64 = shl nsw i64 %63, 2
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi i64 [ %55, %53 ], [ %64, %60 ]
  %67 = phi i32* [ %59, %53 ], [ %62, %60 ]
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %66, i1 false) #11
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %71 = bitcast %union.TfLitePtrUnion* %70 to float**
  %72 = load float*, float** %71, align 8
  br label %73

73:                                               ; preds = %43, %65
  %74 = phi float* [ %72, %65 ], [ null, %43 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  %76 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !150
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !150
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !150
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !150
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #10, !noalias !150
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !150
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #11
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to float**
  %106 = load float*, float** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi float* [ %106, %99 ], [ null, %77 ]
  %109 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  %110 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %112, align 8, !alias.scope !153
  br label %141

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8, !noalias !153
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4, !noalias !153
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 0
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %117, i32* %119, align 8, !alias.scope !153
  %120 = icmp sgt i32 %117, 5
  br i1 %120, label %121, label %128

121:                                              ; preds = %113
  %122 = sext i32 %117 to i64
  %123 = shl nsw i64 %122, 2
  %124 = tail call i8* @_Znam(i64 %123) #10, !noalias !153
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %126 = bitcast i32** %125 to i8**
  store i8* %124, i8** %126, align 8, !alias.scope !153
  %127 = bitcast i8* %124 to i32*
  br label %133

128:                                              ; preds = %113
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %130 = bitcast %union.anon* %129 to i32*
  %131 = sext i32 %117 to i64
  %132 = shl nsw i64 %131, 2
  br label %133

133:                                              ; preds = %128, %121
  %134 = phi i64 [ %123, %121 ], [ %132, %128 ]
  %135 = phi i32* [ %127, %121 ], [ %130, %128 ]
  %136 = bitcast i32* %135 to i8*
  %137 = bitcast i32* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 %134, i1 false) #11
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %139 = bitcast %union.TfLitePtrUnion* %138 to float**
  %140 = load float*, float** %139, align 8
  br label %141

141:                                              ; preds = %111, %133
  %142 = phi float* [ %140, %133 ], [ null, %111 ]
  %143 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #11
  %144 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %146, align 8, !alias.scope !156
  br label %175

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %149 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %148, align 8, !noalias !156
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 4, !noalias !156
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %149, i64 0, i32 1, i64 0
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %151, i32* %153, align 8, !alias.scope !156
  %154 = icmp sgt i32 %151, 5
  br i1 %154, label %155, label %162

155:                                              ; preds = %147
  %156 = sext i32 %151 to i64
  %157 = shl nsw i64 %156, 2
  %158 = tail call i8* @_Znam(i64 %157) #10, !noalias !156
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %160 = bitcast i32** %159 to i8**
  store i8* %158, i8** %160, align 8, !alias.scope !156
  %161 = bitcast i8* %158 to i32*
  br label %167

162:                                              ; preds = %147
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %164 = bitcast %union.anon* %163 to i32*
  %165 = sext i32 %151 to i64
  %166 = shl nsw i64 %165, 2
  br label %167

167:                                              ; preds = %162, %155
  %168 = phi i64 [ %157, %155 ], [ %166, %162 ]
  %169 = phi i32* [ %161, %155 ], [ %164, %162 ]
  %170 = bitcast i32* %169 to i8*
  %171 = bitcast i32* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 4 %171, i64 %168, i1 false) #11
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %173 = bitcast %union.TfLitePtrUnion* %172 to float**
  %174 = load float*, float** %173, align 8
  br label %175

175:                                              ; preds = %145, %167
  %176 = phi float* [ %174, %167 ], [ null, %145 ]
  %177 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #11
  %178 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %180, align 8, !alias.scope !159
  br label %209

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %183 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %182, align 8, !noalias !159
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 0
  %185 = load i32, i32* %184, align 4, !noalias !159
  %186 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 0
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %185, i32* %187, align 8, !alias.scope !159
  %188 = icmp sgt i32 %185, 5
  br i1 %188, label %189, label %196

189:                                              ; preds = %181
  %190 = sext i32 %185 to i64
  %191 = shl nsw i64 %190, 2
  %192 = tail call i8* @_Znam(i64 %191) #10, !noalias !159
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %194 = bitcast i32** %193 to i8**
  store i8* %192, i8** %194, align 8, !alias.scope !159
  %195 = bitcast i8* %192 to i32*
  br label %201

196:                                              ; preds = %181
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %198 = bitcast %union.anon* %197 to i32*
  %199 = sext i32 %185 to i64
  %200 = shl nsw i64 %199, 2
  br label %201

201:                                              ; preds = %196, %189
  %202 = phi i64 [ %191, %189 ], [ %200, %196 ]
  %203 = phi i32* [ %195, %189 ], [ %198, %196 ]
  %204 = bitcast i32* %203 to i8*
  %205 = bitcast i32* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 %202, i1 false) #11
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %207 = bitcast %union.TfLitePtrUnion* %206 to float**
  %208 = load float*, float** %207, align 8
  br label %209

209:                                              ; preds = %179, %201
  %210 = phi float* [ %208, %201 ], [ null, %179 ]
  call void @_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %10, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, float* %108, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, float* %142, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, float* %176, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, float* %210)
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %212 = load i32, i32* %211, align 8
  %213 = icmp sgt i32 %212, 5
  br i1 %213, label %214, label %220

214:                                              ; preds = %209
  %215 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %216 = load i32*, i32** %215, align 8
  %217 = icmp eq i32* %216, null
  br i1 %217, label %220, label %218

218:                                              ; preds = %214
  %219 = bitcast i32* %216 to i8*
  call void @_ZdaPv(i8* %219) #10
  br label %220

220:                                              ; preds = %209, %214, %218
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #11
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %222 = load i32, i32* %221, align 8
  %223 = icmp sgt i32 %222, 5
  br i1 %223, label %224, label %230

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %226 = load i32*, i32** %225, align 8
  %227 = icmp eq i32* %226, null
  br i1 %227, label %230, label %228

228:                                              ; preds = %224
  %229 = bitcast i32* %226 to i8*
  call void @_ZdaPv(i8* %229) #10
  br label %230

230:                                              ; preds = %220, %224, %228
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #11
  %231 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %232 = load i32, i32* %231, align 8
  %233 = icmp sgt i32 %232, 5
  br i1 %233, label %234, label %240

234:                                              ; preds = %230
  %235 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %236 = load i32*, i32** %235, align 8
  %237 = icmp eq i32* %236, null
  br i1 %237, label %240, label %238

238:                                              ; preds = %234
  %239 = bitcast i32* %236 to i8*
  call void @_ZdaPv(i8* %239) #10
  br label %240

240:                                              ; preds = %230, %234, %238
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = icmp sgt i32 %242, 5
  br i1 %243, label %244, label %250

244:                                              ; preds = %240
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %244
  %249 = bitcast i32* %246 to i8*
  call void @_ZdaPv(i8* %249) #10
  br label %250

250:                                              ; preds = %240, %244, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %250, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %11 = alloca %"struct.tflite::ConvParams", align 4
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 0, %18
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 0, %21
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 0
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 1
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 2
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 3
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 2
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 3
  store i16 %48, i16* %49, align 4
  %50 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 6
  store i32 %19, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 8
  store i32 %24, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 7
  store i32 %22, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 9
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 8
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 0, %57
  %59 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 10
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 11
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 11
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 12
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 12
  store i32 %64, i32* %65, align 4
  %66 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11
  %67 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %10
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %69, align 8, !alias.scope !162
  br label %98

70:                                               ; preds = %10
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %72 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %71, align 8, !noalias !162
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !noalias !162
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 1, i64 0
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %74, i32* %76, align 8, !alias.scope !162
  %77 = icmp sgt i32 %74, 5
  br i1 %77, label %78, label %85

78:                                               ; preds = %70
  %79 = sext i32 %74 to i64
  %80 = shl nsw i64 %79, 2
  %81 = tail call i8* @_Znam(i64 %80) #10, !noalias !162
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %83 = bitcast i32** %82 to i8**
  store i8* %81, i8** %83, align 8, !alias.scope !162
  %84 = bitcast i8* %81 to i32*
  br label %90

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %87 = bitcast %union.anon* %86 to i32*
  %88 = sext i32 %74 to i64
  %89 = shl nsw i64 %88, 2
  br label %90

90:                                               ; preds = %85, %78
  %91 = phi i64 [ %80, %78 ], [ %89, %85 ]
  %92 = phi i32* [ %84, %78 ], [ %87, %85 ]
  %93 = bitcast i32* %92 to i8*
  %94 = bitcast i32* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 %91, i1 false) #11
  %95 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %96 = bitcast %union.TfLitePtrUnion* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %68, %90
  %99 = phi i8* [ %97, %90 ], [ null, %68 ]
  %100 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !165
  br label %132

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !165
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !165
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !165
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !165
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !165
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %130 = bitcast %union.TfLitePtrUnion* %129 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %102, %124
  %133 = phi i8* [ %131, %124 ], [ null, %102 ]
  %134 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #11
  %135 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %137, align 8, !alias.scope !168
  br label %165

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %139, align 8, !noalias !168
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4, !noalias !168
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %142, i32* %144, align 8, !alias.scope !168
  %145 = icmp sgt i32 %142, 5
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = sext i32 %142 to i64
  %148 = shl nsw i64 %147, 2
  %149 = tail call i8* @_Znam(i64 %148) #10, !noalias !168
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %151 = bitcast i32** %150 to i8**
  store i8* %149, i8** %151, align 8, !alias.scope !168
  %152 = bitcast i8* %149 to i32*
  br label %158

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  %156 = sext i32 %142 to i64
  %157 = shl nsw i64 %156, 2
  br label %158

158:                                              ; preds = %153, %146
  %159 = phi i64 [ %148, %146 ], [ %157, %153 ]
  %160 = phi i32* [ %152, %146 ], [ %155, %153 ]
  %161 = bitcast i32* %160 to i8*
  %162 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %159, i1 false) #11
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %164 = load i32*, i32** %163, align 8
  br label %165

165:                                              ; preds = %136, %158
  %166 = phi i32* [ %164, %158 ], [ null, %136 ]
  %167 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #11
  %168 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !171
  br label %199

171:                                              ; preds = %165
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !171
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !171
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !171
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = tail call i8* @_Znam(i64 %181) #10, !noalias !171
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !171
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #11
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11
  %202 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !174
  br label %233

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !174
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !174
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !174
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = tail call i8* @_Znam(i64 %215) #10, !noalias !174
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !174
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #11
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %231 = bitcast %union.TfLitePtrUnion* %230 to i8**
  %232 = load i8*, i8** %231, align 8
  br label %233

233:                                              ; preds = %203, %225
  %234 = phi i8* [ %232, %225 ], [ null, %203 ]
  %235 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %235, label %239, label %236

236:                                              ; preds = %233
  %237 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %238 = load i32*, i32** %237, align 8
  br label %239

239:                                              ; preds = %233, %236
  %240 = phi i32* [ %238, %236 ], [ null, %233 ]
  call void @_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_SB_Pi(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %99, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %133, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %166, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %200, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %234, i32* %240)
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = icmp sgt i32 %242, 5
  br i1 %243, label %244, label %250

244:                                              ; preds = %239
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %244
  %249 = bitcast i32* %246 to i8*
  call void @_ZdaPv(i8* %249) #10
  br label %250

250:                                              ; preds = %239, %244, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %250, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #11
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp sgt i32 %262, 5
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #10
  br label %270

270:                                              ; preds = %260, %264, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #11
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = icmp sgt i32 %272, 5
  br i1 %273, label %274, label %280

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %276 = load i32*, i32** %275, align 8
  %277 = icmp eq i32* %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = bitcast i32* %276 to i8*
  call void @_ZdaPv(i8* %279) #10
  br label %280

280:                                              ; preds = %270, %274, %278
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = icmp sgt i32 %282, 5
  br i1 %283, label %284, label %290

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %286 = load i32*, i32** %285, align 8
  %287 = icmp eq i32* %286, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %284
  %289 = bitcast i32* %286 to i8*
  call void @_ZdaPv(i8* %289) #10
  br label %290

290:                                              ; preds = %280, %284, %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE0EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %11 = alloca %"struct.tflite::ConvParams", align 4
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i16
  %21 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 0
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = trunc i32 %23 to i16
  %25 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 1
  store i16 %24, i16* %25, align 2
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 2
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 3
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 2
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 3
  store i16 %40, i16* %41, align 4
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 0, %43
  %45 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 6
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 8
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 11
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 11
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 12
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 9, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 10, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #11
  %60 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %62, align 8, !alias.scope !177
  br label %91

63:                                               ; preds = %10
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %65 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8, !noalias !177
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !177
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 0
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %67, i32* %69, align 8, !alias.scope !177
  %70 = icmp sgt i32 %67, 5
  br i1 %70, label %71, label %78

71:                                               ; preds = %63
  %72 = sext i32 %67 to i64
  %73 = shl nsw i64 %72, 2
  %74 = tail call i8* @_Znam(i64 %73) #10, !noalias !177
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %76 = bitcast i32** %75 to i8**
  store i8* %74, i8** %76, align 8, !alias.scope !177
  %77 = bitcast i8* %74 to i32*
  br label %83

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %80 = bitcast %union.anon* %79 to i32*
  %81 = sext i32 %67 to i64
  %82 = shl nsw i64 %81, 2
  br label %83

83:                                               ; preds = %78, %71
  %84 = phi i64 [ %73, %71 ], [ %82, %78 ]
  %85 = phi i32* [ %77, %71 ], [ %80, %78 ]
  %86 = bitcast i32* %85 to i8*
  %87 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %84, i1 false) #11
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %89 = bitcast %union.TfLitePtrUnion* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %61, %83
  %92 = phi i8* [ %90, %83 ], [ null, %61 ]
  %93 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  %94 = icmp eq %struct.TfLiteTensor* %4, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !180
  br label %125

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !180
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !180
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !180
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #10, !noalias !180
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !180
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #11
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %95, %117
  %126 = phi i8* [ %124, %117 ], [ null, %95 ]
  %127 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #11
  %128 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %130, align 8, !alias.scope !183
  br label %158

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %132, align 8, !noalias !183
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !183
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %135, i32* %137, align 8, !alias.scope !183
  %138 = icmp sgt i32 %135, 5
  br i1 %138, label %139, label %146

139:                                              ; preds = %131
  %140 = sext i32 %135 to i64
  %141 = shl nsw i64 %140, 2
  %142 = tail call i8* @_Znam(i64 %141) #10, !noalias !183
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %144 = bitcast i32** %143 to i8**
  store i8* %142, i8** %144, align 8, !alias.scope !183
  %145 = bitcast i8* %142 to i32*
  br label %151

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %148 = bitcast %union.anon* %147 to i32*
  %149 = sext i32 %135 to i64
  %150 = shl nsw i64 %149, 2
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi i64 [ %141, %139 ], [ %150, %146 ]
  %153 = phi i32* [ %145, %139 ], [ %148, %146 ]
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %152, i1 false) #11
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %157 = load i32*, i32** %156, align 8
  br label %158

158:                                              ; preds = %129, %151
  %159 = phi i32* [ %157, %151 ], [ null, %129 ]
  %160 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #11
  %161 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %163, align 8, !alias.scope !186
  br label %192

164:                                              ; preds = %158
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %166 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %165, align 8, !noalias !186
  %167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4, !noalias !186
  %169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %166, i64 0, i32 1, i64 0
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %168, i32* %170, align 8, !alias.scope !186
  %171 = icmp sgt i32 %168, 5
  br i1 %171, label %172, label %179

172:                                              ; preds = %164
  %173 = sext i32 %168 to i64
  %174 = shl nsw i64 %173, 2
  %175 = tail call i8* @_Znam(i64 %174) #10, !noalias !186
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %177 = bitcast i32** %176 to i8**
  store i8* %175, i8** %177, align 8, !alias.scope !186
  %178 = bitcast i8* %175 to i32*
  br label %184

179:                                              ; preds = %164
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %181 = bitcast %union.anon* %180 to i32*
  %182 = sext i32 %168 to i64
  %183 = shl nsw i64 %182, 2
  br label %184

184:                                              ; preds = %179, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %179 ]
  %186 = phi i32* [ %178, %172 ], [ %181, %179 ]
  %187 = bitcast i32* %186 to i8*
  %188 = bitcast i32* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 %185, i1 false) #11
  %189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %190 = bitcast %union.TfLitePtrUnion* %189 to i8**
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %162, %184
  %193 = phi i8* [ %191, %184 ], [ null, %162 ]
  %194 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #11
  %195 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %197, align 8, !alias.scope !189
  br label %226

198:                                              ; preds = %192
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %200 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %199, align 8, !noalias !189
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4, !noalias !189
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 0
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %202, i32* %204, align 8, !alias.scope !189
  %205 = icmp sgt i32 %202, 5
  br i1 %205, label %206, label %213

206:                                              ; preds = %198
  %207 = sext i32 %202 to i64
  %208 = shl nsw i64 %207, 2
  %209 = tail call i8* @_Znam(i64 %208) #10, !noalias !189
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %211 = bitcast i32** %210 to i8**
  store i8* %209, i8** %211, align 8, !alias.scope !189
  %212 = bitcast i8* %209 to i32*
  br label %218

213:                                              ; preds = %198
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %215 = bitcast %union.anon* %214 to i32*
  %216 = sext i32 %202 to i64
  %217 = shl nsw i64 %216, 2
  br label %218

218:                                              ; preds = %213, %206
  %219 = phi i64 [ %208, %206 ], [ %217, %213 ]
  %220 = phi i32* [ %212, %206 ], [ %215, %213 ]
  %221 = bitcast i32* %220 to i8*
  %222 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %219, i1 false) #11
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %224 = bitcast %union.TfLitePtrUnion* %223 to i8**
  %225 = load i8*, i8** %224, align 8
  br label %226

226:                                              ; preds = %196, %218
  %227 = phi i8* [ %225, %218 ], [ null, %196 ]
  %228 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %228, label %232, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %231 = load i32*, i32** %230, align 8
  br label %232

232:                                              ; preds = %226, %229
  %233 = phi i32* [ %231, %229 ], [ null, %226 ]
  call void @_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_SB_Pi(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %11, i32* %56, i32* %58, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %92, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %126, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %159, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %193, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i8* %227, i32* %233)
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = icmp sgt i32 %235, 5
  br i1 %236, label %237, label %243

237:                                              ; preds = %232
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = icmp eq i32* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = bitcast i32* %239 to i8*
  call void @_ZdaPv(i8* %242) #10
  br label %243

243:                                              ; preds = %232, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #11
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #10
  br label %253

253:                                              ; preds = %243, %247, %251
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #11
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #10
  br label %263

263:                                              ; preds = %253, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #11
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #10
  br label %273

273:                                              ; preds = %263, %267, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 5
  br i1 %276, label %277, label %283

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %279 to i8*
  call void @_ZdaPv(i8* %282) #10
  br label %283

283:                                              ; preds = %273, %277, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_(%"struct.tflite::ConvParams"* dereferenceable(56), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*) local_unnamed_addr #5 comdat {
  %12 = bitcast float* %8 to i8*
  %13 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %17 = load i16, i16* %16, align 4
  %18 = sext i16 %17 to i32
  %19 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %28 = load i32, i32* %25, align 8
  %29 = icmp sgt i32 %28, 5
  %30 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %31 = load i32, i32* %27, align 8
  %32 = icmp sgt i32 %31, 5
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %34 = getelementptr inbounds %union.anon, %union.anon* %30, i64 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %union.anon* %30 to i32*
  %37 = select i1 %29, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %union.anon, %union.anon* %33, i64 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %union.anon* %33 to [5 x i32]*
  %42 = bitcast %union.anon* %33 to i32*
  %43 = select i1 %32, i32* %40, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, %38
  %46 = select i1 %45, i32 %44, i32 %38
  %47 = load i32, i32* %26, align 8
  %48 = icmp sgt i32 %47, 5
  %49 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %50 = getelementptr inbounds i32, i32* %35, i64 3
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %52 = bitcast i8* %51 to i32*
  %53 = select i1 %29, i32* %50, i32* %52
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 3
  %58 = bitcast %union.anon* %49 to [5 x i32]*
  %59 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %60 = bitcast i8* %59 to i32*
  %61 = select i1 %48, i32* %57, i32* %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, %54
  %64 = select i1 %63, i32 %62, i32 %54
  %65 = bitcast %union.anon* %49 to i32*
  %66 = select i1 %48, i32* %56, i32* %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i32, i32* %40, i64 3
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %70 = bitcast i8* %69 to i32*
  %71 = select i1 %32, i32* %68, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %72, %67
  %74 = select i1 %73, i32 %72, i32 %67
  %75 = getelementptr inbounds i32, i32* %35, i64 1
  %76 = getelementptr inbounds i32, i32* %35, i64 2
  %77 = bitcast %union.anon* %30 to [5 x i32]*
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %77, i64 0, i64 1
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %80 = bitcast [16 x i8]* %79 to i32*
  %81 = select i1 %29, i32* %75, i32* %78
  %82 = select i1 %29, i32* %76, i32* %80
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %82, align 4
  %85 = getelementptr inbounds i32, i32* %56, i64 1
  %86 = getelementptr inbounds i32, i32* %56, i64 2
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %58, i64 0, i64 1
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %89 = bitcast [16 x i8]* %88 to i32*
  %90 = select i1 %48, i32* %85, i32* %87
  %91 = select i1 %48, i32* %86, i32* %89
  %92 = load i32, i32* %90, align 4
  %93 = load i32, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %40, i64 1
  %95 = getelementptr inbounds i32, i32* %40, i64 2
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %41, i64 0, i64 1
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %98 = bitcast [16 x i8]* %97 to i32*
  %99 = select i1 %32, i32* %94, i32* %96
  %100 = select i1 %32, i32* %95, i32* %98
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %100, align 4
  %103 = icmp ne float* %6, null
  br i1 %32, label %106, label %104

104:                                              ; preds = %11
  %105 = icmp sgt i32 %31, 0
  br i1 %105, label %106, label %209

106:                                              ; preds = %11, %104
  %107 = phi i32* [ %42, %104 ], [ %40, %11 ]
  %108 = zext i32 %31 to i64
  %109 = icmp ult i32 %31, 8
  br i1 %109, label %195, label %110

110:                                              ; preds = %106
  %111 = and i64 %108, 4294967288
  %112 = add nsw i64 %111, -8
  %113 = lshr exact i64 %112, 3
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 3
  %116 = icmp ult i64 %112, 24
  br i1 %116, label %162, label %117

117:                                              ; preds = %110
  %118 = sub nsw i64 %114, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %159, %119 ]
  %121 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %117 ], [ %157, %119 ]
  %122 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %117 ], [ %158, %119 ]
  %123 = phi i64 [ %118, %117 ], [ %160, %119 ]
  %124 = getelementptr inbounds i32, i32* %107, i64 %120
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = mul nsw <4 x i32> %126, %121
  %131 = mul nsw <4 x i32> %129, %122
  %132 = or i64 %120, 8
  %133 = getelementptr inbounds i32, i32* %107, i64 %132
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds i32, i32* %133, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = mul nsw <4 x i32> %135, %130
  %140 = mul nsw <4 x i32> %138, %131
  %141 = or i64 %120, 16
  %142 = getelementptr inbounds i32, i32* %107, i64 %141
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4
  %145 = getelementptr inbounds i32, i32* %142, i64 4
  %146 = bitcast i32* %145 to <4 x i32>*
  %147 = load <4 x i32>, <4 x i32>* %146, align 4
  %148 = mul nsw <4 x i32> %144, %139
  %149 = mul nsw <4 x i32> %147, %140
  %150 = or i64 %120, 24
  %151 = getelementptr inbounds i32, i32* %107, i64 %150
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = getelementptr inbounds i32, i32* %151, i64 4
  %155 = bitcast i32* %154 to <4 x i32>*
  %156 = load <4 x i32>, <4 x i32>* %155, align 4
  %157 = mul nsw <4 x i32> %153, %148
  %158 = mul nsw <4 x i32> %156, %149
  %159 = add i64 %120, 32
  %160 = add i64 %123, -4
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %162, label %119, !llvm.loop !192

162:                                              ; preds = %119, %110
  %163 = phi <4 x i32> [ undef, %110 ], [ %157, %119 ]
  %164 = phi <4 x i32> [ undef, %110 ], [ %158, %119 ]
  %165 = phi i64 [ 0, %110 ], [ %159, %119 ]
  %166 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %110 ], [ %157, %119 ]
  %167 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %110 ], [ %158, %119 ]
  %168 = icmp eq i64 %115, 0
  br i1 %168, label %185, label %169

169:                                              ; preds = %162, %169
  %170 = phi i64 [ %182, %169 ], [ %165, %162 ]
  %171 = phi <4 x i32> [ %180, %169 ], [ %166, %162 ]
  %172 = phi <4 x i32> [ %181, %169 ], [ %167, %162 ]
  %173 = phi i64 [ %183, %169 ], [ %115, %162 ]
  %174 = getelementptr inbounds i32, i32* %107, i64 %170
  %175 = bitcast i32* %174 to <4 x i32>*
  %176 = load <4 x i32>, <4 x i32>* %175, align 4
  %177 = getelementptr inbounds i32, i32* %174, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  %179 = load <4 x i32>, <4 x i32>* %178, align 4
  %180 = mul nsw <4 x i32> %176, %171
  %181 = mul nsw <4 x i32> %179, %172
  %182 = add i64 %170, 8
  %183 = add i64 %173, -1
  %184 = icmp eq i64 %183, 0
  br i1 %184, label %185, label %169, !llvm.loop !193

185:                                              ; preds = %169, %162
  %186 = phi <4 x i32> [ %163, %162 ], [ %180, %169 ]
  %187 = phi <4 x i32> [ %164, %162 ], [ %181, %169 ]
  %188 = mul <4 x i32> %187, %186
  %189 = shufflevector <4 x i32> %188, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %190 = mul <4 x i32> %188, %189
  %191 = shufflevector <4 x i32> %190, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %192 = mul <4 x i32> %190, %191
  %193 = extractelement <4 x i32> %192, i32 0
  %194 = icmp eq i64 %111, %108
  br i1 %194, label %206, label %195

195:                                              ; preds = %185, %106
  %196 = phi i64 [ 0, %106 ], [ %111, %185 ]
  %197 = phi i32 [ 1, %106 ], [ %193, %185 ]
  br label %198

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %204, %198 ], [ %196, %195 ]
  %200 = phi i32 [ %203, %198 ], [ %197, %195 ]
  %201 = getelementptr inbounds i32, i32* %107, i64 %199
  %202 = load i32, i32* %201, align 4
  %203 = mul nsw i32 %202, %200
  %204 = add nuw nsw i64 %199, 1
  %205 = icmp eq i64 %204, %108
  br i1 %205, label %206, label %198, !llvm.loop !194

206:                                              ; preds = %198, %185
  %207 = phi i32 [ %193, %185 ], [ %203, %198 ]
  %208 = icmp sgt i32 %207, 0
  br i1 %208, label %209, label %213

209:                                              ; preds = %104, %206
  %210 = phi i32 [ %207, %206 ], [ 1, %104 ]
  %211 = zext i32 %210 to i64
  %212 = shl nuw nsw i64 %211, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %12, i8 0, i64 %212, i1 false)
  br label %213

213:                                              ; preds = %209, %206
  %214 = icmp sgt i32 %46, 0
  br i1 %214, label %215, label %360

215:                                              ; preds = %213
  %216 = icmp sgt i32 %83, 0
  %217 = icmp sgt i32 %84, 0
  %218 = icmp sgt i32 %64, 0
  %219 = icmp sgt i32 %92, 0
  %220 = icmp sgt i32 %93, 0
  %221 = icmp sgt i32 %74, 0
  %222 = getelementptr inbounds i32, i32* %36, i64 1
  %223 = getelementptr inbounds i32, i32* %65, i64 1
  %224 = getelementptr inbounds i32, i32* %42, i64 1
  br label %225

225:                                              ; preds = %215, %240
  %226 = phi i32 [ 0, %215 ], [ %241, %240 ]
  br i1 %216, label %235, label %240

227:                                              ; preds = %240
  %228 = and i1 %103, %214
  br i1 %228, label %229, label %360

229:                                              ; preds = %227
  %230 = icmp sgt i32 %101, 0
  %231 = icmp sgt i32 %102, 0
  %232 = icmp sgt i32 %74, 0
  %233 = getelementptr inbounds i32, i32* %42, i64 1
  %234 = sext i32 %74 to i64
  br label %325

235:                                              ; preds = %225, %248
  %236 = phi i32 [ %249, %248 ], [ 0, %225 ]
  br i1 %217, label %237, label %248

237:                                              ; preds = %235
  %238 = mul nsw i32 %236, %18
  %239 = sub nsw i32 %238, %24
  br label %243

240:                                              ; preds = %248, %225
  %241 = add nuw nsw i32 %226, 1
  %242 = icmp slt i32 %241, %46
  br i1 %242, label %225, label %227

243:                                              ; preds = %251, %237
  %244 = phi i32 [ 0, %237 ], [ %252, %251 ]
  br i1 %218, label %245, label %251

245:                                              ; preds = %243
  %246 = mul nsw i32 %244, %15
  %247 = sub nsw i32 %246, %21
  br label %254

248:                                              ; preds = %251, %235
  %249 = add nuw nsw i32 %236, 1
  %250 = icmp eq i32 %249, %83
  br i1 %250, label %240, label %235

251:                                              ; preds = %262, %243
  %252 = add nuw nsw i32 %244, 1
  %253 = icmp eq i32 %252, %84
  br i1 %253, label %248, label %243

254:                                              ; preds = %245, %262
  %255 = phi i32 [ 0, %245 ], [ %263, %262 ]
  br i1 %219, label %256, label %262

256:                                              ; preds = %254, %275
  %257 = phi i32 [ %276, %275 ], [ 0, %254 ]
  br i1 %220, label %258, label %275

258:                                              ; preds = %256
  %259 = add nsw i32 %257, %239
  %260 = icmp sgt i32 %259, -1
  %261 = icmp slt i32 %259, %101
  br label %265

262:                                              ; preds = %275, %254
  %263 = add nuw nsw i32 %255, 1
  %264 = icmp slt i32 %263, %64
  br i1 %264, label %254, label %251

265:                                              ; preds = %278, %258
  %266 = phi i32 [ 0, %258 ], [ %279, %278 ]
  br i1 %221, label %267, label %278

267:                                              ; preds = %265
  %268 = add nsw i32 %266, %247
  %269 = icmp slt i32 %268, 0
  %270 = icmp slt i32 %268, %102
  %271 = and i1 %260, %270
  %272 = and i1 %261, %271
  %273 = xor i1 %272, true
  %274 = or i1 %269, %273
  br label %281

275:                                              ; preds = %278, %256
  %276 = add nuw nsw i32 %257, 1
  %277 = icmp eq i32 %276, %92
  br i1 %277, label %262, label %256

278:                                              ; preds = %322, %265
  %279 = add nuw nsw i32 %266, 1
  %280 = icmp eq i32 %279, %93
  br i1 %280, label %275, label %265

281:                                              ; preds = %267, %322
  %282 = phi i32 [ 0, %267 ], [ %323, %322 ]
  br i1 %274, label %322, label %283

283:                                              ; preds = %281
  %284 = load i32, i32* %222, align 4
  %285 = mul nsw i32 %284, %226
  %286 = add nsw i32 %285, %236
  %287 = load i32, i32* %80, align 4
  %288 = mul nsw i32 %286, %287
  %289 = add nsw i32 %288, %244
  %290 = load i32, i32* %52, align 4
  %291 = mul nsw i32 %289, %290
  %292 = add nsw i32 %291, %255
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds float, float* %2, i64 %293
  %295 = load float, float* %294, align 4
  %296 = load i32, i32* %223, align 4
  %297 = mul nsw i32 %296, %282
  %298 = add nsw i32 %297, %257
  %299 = load i32, i32* %89, align 4
  %300 = mul nsw i32 %298, %299
  %301 = add nsw i32 %300, %266
  %302 = load i32, i32* %60, align 4
  %303 = mul nsw i32 %301, %302
  %304 = add nsw i32 %303, %255
  %305 = sext i32 %304 to i64
  %306 = getelementptr inbounds float, float* %4, i64 %305
  %307 = load float, float* %306, align 4
  %308 = fmul float %295, %307
  %309 = load i32, i32* %224, align 4
  %310 = mul nsw i32 %309, %226
  %311 = add nsw i32 %310, %259
  %312 = load i32, i32* %98, align 4
  %313 = mul nsw i32 %311, %312
  %314 = add nsw i32 %313, %268
  %315 = load i32, i32* %70, align 4
  %316 = mul nsw i32 %314, %315
  %317 = add nsw i32 %316, %282
  %318 = sext i32 %317 to i64
  %319 = getelementptr inbounds float, float* %8, i64 %318
  %320 = load float, float* %319, align 4
  %321 = fadd float %308, %320
  store float %321, float* %319, align 4
  br label %322

322:                                              ; preds = %281, %283
  %323 = add nuw nsw i32 %282, 1
  %324 = icmp slt i32 %323, %74
  br i1 %324, label %281, label %278

325:                                              ; preds = %229, %329
  %326 = phi i32 [ 0, %229 ], [ %330, %329 ]
  br i1 %230, label %327, label %329

327:                                              ; preds = %325, %334
  %328 = phi i32 [ %335, %334 ], [ 0, %325 ]
  br i1 %231, label %332, label %334

329:                                              ; preds = %334, %325
  %330 = add nuw nsw i32 %326, 1
  %331 = icmp slt i32 %330, %46
  br i1 %331, label %325, label %360

332:                                              ; preds = %327, %337
  %333 = phi i32 [ %338, %337 ], [ 0, %327 ]
  br i1 %232, label %340, label %337

334:                                              ; preds = %337, %327
  %335 = add nuw nsw i32 %328, 1
  %336 = icmp eq i32 %335, %101
  br i1 %336, label %329, label %327

337:                                              ; preds = %340, %332
  %338 = add nuw nsw i32 %333, 1
  %339 = icmp eq i32 %338, %102
  br i1 %339, label %334, label %332

340:                                              ; preds = %332, %340
  %341 = phi i64 [ %358, %340 ], [ 0, %332 ]
  %342 = getelementptr inbounds float, float* %6, i64 %341
  %343 = load float, float* %342, align 4
  %344 = load i32, i32* %233, align 4
  %345 = mul nsw i32 %344, %326
  %346 = add nsw i32 %345, %328
  %347 = load i32, i32* %98, align 4
  %348 = mul nsw i32 %346, %347
  %349 = add nsw i32 %348, %333
  %350 = load i32, i32* %70, align 4
  %351 = mul nsw i32 %349, %350
  %352 = trunc i64 %341 to i32
  %353 = add nsw i32 %351, %352
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds float, float* %8, i64 %354
  %356 = load float, float* %355, align 4
  %357 = fadd float %343, %356
  store float %357, float* %355, align 4
  %358 = add nuw nsw i64 %341, 1
  %359 = icmp slt i64 %358, %234
  br i1 %359, label %340, label %337

360:                                              ; preds = %329, %213, %227
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeConvERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_SB_Pi(%"struct.tflite::ConvParams"* dereferenceable(56), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*) local_unnamed_addr #5 comdat {
  %13 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %14 = load i16, i16* %13, align 2
  %15 = sext i16 %14 to i32
  %16 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %17 = load i16, i16* %16, align 4
  %18 = sext i16 %17 to i32
  %19 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %20 = load i16, i16* %19, align 2
  %21 = sext i16 %20 to i32
  %22 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %23 = load i16, i16* %22, align 2
  %24 = sext i16 %23 to i32
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %28 = load i32, i32* %25, align 8
  %29 = icmp sgt i32 %28, 5
  %30 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %31 = load i32, i32* %27, align 8
  %32 = icmp sgt i32 %31, 5
  %33 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %34 = getelementptr inbounds %union.anon, %union.anon* %30, i64 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %union.anon* %30 to i32*
  %37 = select i1 %29, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %union.anon, %union.anon* %33, i64 0, i32 0
  %40 = load i32*, i32** %39, align 8
  %41 = bitcast %union.anon* %33 to [5 x i32]*
  %42 = bitcast %union.anon* %33 to i32*
  %43 = select i1 %32, i32* %40, i32* %42
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, %38
  %46 = select i1 %45, i32 %44, i32 %38
  %47 = load i32, i32* %26, align 8
  %48 = icmp sgt i32 %47, 5
  %49 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %50 = getelementptr inbounds i32, i32* %35, i64 3
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %52 = bitcast i8* %51 to i32*
  %53 = select i1 %29, i32* %50, i32* %52
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %union.anon, %union.anon* %49, i64 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds i32, i32* %56, i64 3
  %58 = bitcast %union.anon* %49 to [5 x i32]*
  %59 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %60 = bitcast i8* %59 to i32*
  %61 = select i1 %48, i32* %57, i32* %60
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, %54
  %64 = select i1 %63, i32 %62, i32 %54
  %65 = bitcast %union.anon* %49 to i32*
  %66 = select i1 %48, i32* %56, i32* %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds i32, i32* %40, i64 3
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %70 = bitcast i8* %69 to i32*
  %71 = select i1 %32, i32* %68, i32* %70
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %72, %67
  %74 = select i1 %73, i32 %72, i32 %67
  %75 = getelementptr inbounds i32, i32* %35, i64 1
  %76 = getelementptr inbounds i32, i32* %35, i64 2
  %77 = bitcast %union.anon* %30 to [5 x i32]*
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* %77, i64 0, i64 1
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %80 = bitcast [16 x i8]* %79 to i32*
  %81 = select i1 %29, i32* %75, i32* %78
  %82 = select i1 %29, i32* %76, i32* %80
  %83 = load i32, i32* %81, align 4
  %84 = load i32, i32* %82, align 4
  %85 = getelementptr inbounds i32, i32* %56, i64 1
  %86 = getelementptr inbounds i32, i32* %56, i64 2
  %87 = getelementptr inbounds [5 x i32], [5 x i32]* %58, i64 0, i64 1
  %88 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %89 = bitcast [16 x i8]* %88 to i32*
  %90 = select i1 %48, i32* %85, i32* %87
  %91 = select i1 %48, i32* %86, i32* %89
  %92 = load i32, i32* %90, align 4
  %93 = load i32, i32* %91, align 4
  %94 = getelementptr inbounds i32, i32* %40, i64 1
  %95 = getelementptr inbounds i32, i32* %40, i64 2
  %96 = getelementptr inbounds [5 x i32], [5 x i32]* %41, i64 0, i64 1
  %97 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %98 = bitcast [16 x i8]* %97 to i32*
  %99 = select i1 %32, i32* %94, i32* %96
  %100 = select i1 %32, i32* %95, i32* %98
  %101 = load i32, i32* %99, align 4
  %102 = load i32, i32* %100, align 4
  %103 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 6
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 7
  %106 = load i32, i32* %105, align 4
  %107 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 8
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 9
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 10
  %112 = load i32, i32* %111, align 4
  %113 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 11
  %114 = load i32, i32* %113, align 4
  %115 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 12
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32* %6, null
  br i1 %32, label %120, label %118

118:                                              ; preds = %12
  %119 = icmp sgt i32 %31, 0
  br i1 %119, label %120, label %224

120:                                              ; preds = %12, %118
  %121 = phi i32* [ %42, %118 ], [ %40, %12 ]
  %122 = zext i32 %31 to i64
  %123 = icmp ult i32 %31, 8
  br i1 %123, label %209, label %124

124:                                              ; preds = %120
  %125 = and i64 %122, 4294967288
  %126 = add nsw i64 %125, -8
  %127 = lshr exact i64 %126, 3
  %128 = add nuw nsw i64 %127, 1
  %129 = and i64 %128, 3
  %130 = icmp ult i64 %126, 24
  br i1 %130, label %176, label %131

131:                                              ; preds = %124
  %132 = sub nsw i64 %128, %129
  br label %133

133:                                              ; preds = %133, %131
  %134 = phi i64 [ 0, %131 ], [ %173, %133 ]
  %135 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %171, %133 ]
  %136 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %131 ], [ %172, %133 ]
  %137 = phi i64 [ %132, %131 ], [ %174, %133 ]
  %138 = getelementptr inbounds i32, i32* %121, i64 %134
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = getelementptr inbounds i32, i32* %138, i64 4
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4
  %144 = mul nsw <4 x i32> %140, %135
  %145 = mul nsw <4 x i32> %143, %136
  %146 = or i64 %134, 8
  %147 = getelementptr inbounds i32, i32* %121, i64 %146
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4
  %150 = getelementptr inbounds i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4
  %153 = mul nsw <4 x i32> %149, %144
  %154 = mul nsw <4 x i32> %152, %145
  %155 = or i64 %134, 16
  %156 = getelementptr inbounds i32, i32* %121, i64 %155
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = or i64 %134, 24
  %165 = getelementptr inbounds i32, i32* %121, i64 %164
  %166 = bitcast i32* %165 to <4 x i32>*
  %167 = load <4 x i32>, <4 x i32>* %166, align 4
  %168 = getelementptr inbounds i32, i32* %165, i64 4
  %169 = bitcast i32* %168 to <4 x i32>*
  %170 = load <4 x i32>, <4 x i32>* %169, align 4
  %171 = mul nsw <4 x i32> %167, %162
  %172 = mul nsw <4 x i32> %170, %163
  %173 = add i64 %134, 32
  %174 = add i64 %137, -4
  %175 = icmp eq i64 %174, 0
  br i1 %175, label %176, label %133, !llvm.loop !195

176:                                              ; preds = %133, %124
  %177 = phi <4 x i32> [ undef, %124 ], [ %171, %133 ]
  %178 = phi <4 x i32> [ undef, %124 ], [ %172, %133 ]
  %179 = phi i64 [ 0, %124 ], [ %173, %133 ]
  %180 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %124 ], [ %171, %133 ]
  %181 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %124 ], [ %172, %133 ]
  %182 = icmp eq i64 %129, 0
  br i1 %182, label %199, label %183

183:                                              ; preds = %176, %183
  %184 = phi i64 [ %196, %183 ], [ %179, %176 ]
  %185 = phi <4 x i32> [ %194, %183 ], [ %180, %176 ]
  %186 = phi <4 x i32> [ %195, %183 ], [ %181, %176 ]
  %187 = phi i64 [ %197, %183 ], [ %129, %176 ]
  %188 = getelementptr inbounds i32, i32* %121, i64 %184
  %189 = bitcast i32* %188 to <4 x i32>*
  %190 = load <4 x i32>, <4 x i32>* %189, align 4
  %191 = getelementptr inbounds i32, i32* %188, i64 4
  %192 = bitcast i32* %191 to <4 x i32>*
  %193 = load <4 x i32>, <4 x i32>* %192, align 4
  %194 = mul nsw <4 x i32> %190, %185
  %195 = mul nsw <4 x i32> %193, %186
  %196 = add i64 %184, 8
  %197 = add i64 %187, -1
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %199, label %183, !llvm.loop !196

199:                                              ; preds = %183, %176
  %200 = phi <4 x i32> [ %177, %176 ], [ %194, %183 ]
  %201 = phi <4 x i32> [ %178, %176 ], [ %195, %183 ]
  %202 = mul <4 x i32> %201, %200
  %203 = shufflevector <4 x i32> %202, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %204 = mul <4 x i32> %202, %203
  %205 = shufflevector <4 x i32> %204, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %206 = mul <4 x i32> %204, %205
  %207 = extractelement <4 x i32> %206, i32 0
  %208 = icmp eq i64 %125, %122
  br i1 %208, label %220, label %209

209:                                              ; preds = %199, %120
  %210 = phi i64 [ 0, %120 ], [ %125, %199 ]
  %211 = phi i32 [ 1, %120 ], [ %207, %199 ]
  br label %212

212:                                              ; preds = %209, %212
  %213 = phi i64 [ %218, %212 ], [ %210, %209 ]
  %214 = phi i32 [ %217, %212 ], [ %211, %209 ]
  %215 = getelementptr inbounds i32, i32* %121, i64 %213
  %216 = load i32, i32* %215, align 4
  %217 = mul nsw i32 %216, %214
  %218 = add nuw nsw i64 %213, 1
  %219 = icmp eq i64 %218, %122
  br i1 %219, label %220, label %212, !llvm.loop !197

220:                                              ; preds = %212, %199
  %221 = phi i32 [ %207, %199 ], [ %217, %212 ]
  %222 = sext i32 %221 to i64
  %223 = shl nsw i64 %222, 2
  br label %224

224:                                              ; preds = %220, %118
  %225 = phi i64 [ 4, %118 ], [ %223, %220 ]
  %226 = bitcast i32* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %226, i8 0, i64 %225, i1 false)
  %227 = icmp sgt i32 %46, 0
  br i1 %227, label %228, label %355

228:                                              ; preds = %224
  %229 = icmp sgt i32 %83, 0
  %230 = icmp sgt i32 %84, 0
  %231 = icmp sgt i32 %64, 0
  %232 = icmp sgt i32 %92, 0
  %233 = icmp sgt i32 %93, 0
  %234 = icmp sgt i32 %74, 0
  %235 = getelementptr inbounds i32, i32* %36, i64 1
  %236 = getelementptr inbounds i32, i32* %65, i64 1
  %237 = getelementptr inbounds i32, i32* %42, i64 1
  br label %238

238:                                              ; preds = %228, %264
  %239 = phi i32 [ 0, %228 ], [ %265, %264 ]
  br i1 %229, label %259, label %264

240:                                              ; preds = %264
  br i1 %227, label %241, label %355

241:                                              ; preds = %240
  %242 = icmp sgt i32 %101, 0
  %243 = icmp sgt i32 %102, 0
  %244 = icmp sgt i32 %74, 0
  %245 = getelementptr inbounds i32, i32* %42, i64 1
  %246 = icmp sgt i32 %112, 0
  %247 = sub nsw i32 0, %112
  %248 = select i1 %246, i32 0, i32 %247
  %249 = shl i32 1, %112
  %250 = select i1 %246, i32 %249, i32 1
  %251 = sext i32 %110 to i64
  %252 = icmp eq i32 %110, -2147483648
  %253 = zext i32 %248 to i64
  %254 = shl nsw i64 -1, %253
  %255 = trunc i64 %254 to i32
  %256 = xor i32 %255, -1
  %257 = ashr i32 %256, 1
  %258 = sext i32 %74 to i64
  br label %353

259:                                              ; preds = %238, %272
  %260 = phi i32 [ %273, %272 ], [ 0, %238 ]
  br i1 %230, label %261, label %272

261:                                              ; preds = %259
  %262 = mul nsw i32 %260, %18
  %263 = sub nsw i32 %262, %24
  br label %267

264:                                              ; preds = %272, %238
  %265 = add nuw nsw i32 %239, 1
  %266 = icmp slt i32 %265, %46
  br i1 %266, label %238, label %240

267:                                              ; preds = %275, %261
  %268 = phi i32 [ 0, %261 ], [ %276, %275 ]
  br i1 %231, label %269, label %275

269:                                              ; preds = %267
  %270 = mul nsw i32 %268, %15
  %271 = sub nsw i32 %270, %21
  br label %278

272:                                              ; preds = %275, %259
  %273 = add nuw nsw i32 %260, 1
  %274 = icmp eq i32 %273, %83
  br i1 %274, label %264, label %259

275:                                              ; preds = %286, %267
  %276 = add nuw nsw i32 %268, 1
  %277 = icmp eq i32 %276, %84
  br i1 %277, label %272, label %267

278:                                              ; preds = %269, %286
  %279 = phi i32 [ 0, %269 ], [ %287, %286 ]
  br i1 %232, label %280, label %286

280:                                              ; preds = %278, %299
  %281 = phi i32 [ %300, %299 ], [ 0, %278 ]
  br i1 %233, label %282, label %299

282:                                              ; preds = %280
  %283 = add nsw i32 %281, %263
  %284 = icmp sgt i32 %283, -1
  %285 = icmp slt i32 %283, %101
  br label %289

286:                                              ; preds = %299, %278
  %287 = add nuw nsw i32 %279, 1
  %288 = icmp slt i32 %287, %64
  br i1 %288, label %278, label %275

289:                                              ; preds = %302, %282
  %290 = phi i32 [ 0, %282 ], [ %303, %302 ]
  br i1 %234, label %291, label %302

291:                                              ; preds = %289
  %292 = add nsw i32 %290, %271
  %293 = icmp slt i32 %292, 0
  %294 = icmp slt i32 %292, %102
  %295 = and i1 %284, %294
  %296 = and i1 %285, %295
  %297 = xor i1 %296, true
  %298 = or i1 %293, %297
  br label %305

299:                                              ; preds = %302, %280
  %300 = add nuw nsw i32 %281, 1
  %301 = icmp eq i32 %300, %92
  br i1 %301, label %286, label %280

302:                                              ; preds = %350, %289
  %303 = add nuw nsw i32 %290, 1
  %304 = icmp eq i32 %303, %93
  br i1 %304, label %299, label %289

305:                                              ; preds = %291, %350
  %306 = phi i32 [ 0, %291 ], [ %351, %350 ]
  br i1 %298, label %350, label %307

307:                                              ; preds = %305
  %308 = load i32, i32* %235, align 4
  %309 = mul nsw i32 %308, %239
  %310 = add nsw i32 %309, %260
  %311 = load i32, i32* %80, align 4
  %312 = mul nsw i32 %310, %311
  %313 = add nsw i32 %312, %268
  %314 = load i32, i32* %52, align 4
  %315 = mul nsw i32 %313, %314
  %316 = add nsw i32 %315, %279
  %317 = sext i32 %316 to i64
  %318 = getelementptr inbounds i8, i8* %2, i64 %317
  %319 = load i8, i8* %318, align 1
  %320 = load i32, i32* %236, align 4
  %321 = mul nsw i32 %320, %306
  %322 = add nsw i32 %321, %281
  %323 = load i32, i32* %89, align 4
  %324 = mul nsw i32 %322, %323
  %325 = add nsw i32 %324, %290
  %326 = load i32, i32* %60, align 4
  %327 = mul nsw i32 %325, %326
  %328 = add nsw i32 %327, %279
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, i8* %4, i64 %329
  %331 = load i8, i8* %330, align 1
  %332 = zext i8 %319 to i32
  %333 = add nsw i32 %104, %332
  %334 = zext i8 %331 to i32
  %335 = add nsw i32 %106, %334
  %336 = mul nsw i32 %335, %333
  %337 = load i32, i32* %237, align 4
  %338 = mul nsw i32 %337, %239
  %339 = add nsw i32 %338, %283
  %340 = load i32, i32* %98, align 4
  %341 = mul nsw i32 %339, %340
  %342 = add nsw i32 %341, %292
  %343 = load i32, i32* %70, align 4
  %344 = mul nsw i32 %342, %343
  %345 = add nsw i32 %344, %306
  %346 = sext i32 %345 to i64
  %347 = getelementptr inbounds i32, i32* %11, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = add nsw i32 %348, %336
  store i32 %349, i32* %347, align 4
  br label %350

350:                                              ; preds = %305, %307
  %351 = add nuw nsw i32 %306, 1
  %352 = icmp slt i32 %351, %74
  br i1 %352, label %305, label %302

353:                                              ; preds = %241, %358
  %354 = phi i32 [ 0, %241 ], [ %359, %358 ]
  br i1 %242, label %356, label %358

355:                                              ; preds = %358, %224, %240
  ret void

356:                                              ; preds = %353, %363
  %357 = phi i32 [ %364, %363 ], [ 0, %353 ]
  br i1 %243, label %361, label %363

358:                                              ; preds = %363, %353
  %359 = add nuw nsw i32 %354, 1
  %360 = icmp slt i32 %359, %46
  br i1 %360, label %353, label %355

361:                                              ; preds = %356, %366
  %362 = phi i32 [ %367, %366 ], [ 0, %356 ]
  br i1 %244, label %369, label %366

363:                                              ; preds = %366, %356
  %364 = add nuw nsw i32 %357, 1
  %365 = icmp eq i32 %364, %101
  br i1 %365, label %358, label %356

366:                                              ; preds = %403, %361
  %367 = add nuw nsw i32 %362, 1
  %368 = icmp eq i32 %367, %102
  br i1 %368, label %363, label %361

369:                                              ; preds = %361, %403
  %370 = phi i64 [ %419, %403 ], [ 0, %361 ]
  %371 = load i32, i32* %245, align 4
  %372 = mul nsw i32 %371, %354
  %373 = add nsw i32 %372, %357
  %374 = load i32, i32* %98, align 4
  %375 = mul nsw i32 %373, %374
  %376 = add nsw i32 %375, %362
  %377 = load i32, i32* %70, align 4
  %378 = mul nsw i32 %376, %377
  %379 = trunc i64 %370 to i32
  %380 = add nsw i32 %378, %379
  %381 = sext i32 %380 to i64
  %382 = getelementptr inbounds i32, i32* %11, i64 %381
  %383 = load i32, i32* %382, align 4
  br i1 %117, label %388, label %384

384:                                              ; preds = %369
  %385 = getelementptr inbounds i32, i32* %6, i64 %370
  %386 = load i32, i32* %385, align 4
  %387 = add nsw i32 %386, %383
  br label %388

388:                                              ; preds = %369, %384
  %389 = phi i32 [ %387, %384 ], [ %383, %369 ]
  %390 = mul nsw i32 %389, %250
  %391 = icmp eq i32 %390, %110
  br i1 %391, label %394, label %392

392:                                              ; preds = %388
  %393 = sext i32 %390 to i64
  br label %395

394:                                              ; preds = %388
  br i1 %252, label %403, label %395

395:                                              ; preds = %394, %392
  %396 = phi i64 [ %393, %392 ], [ %251, %394 ]
  %397 = mul nsw i64 %396, %251
  %398 = icmp sgt i64 %397, -1
  %399 = select i1 %398, i64 1073741824, i64 -1073741823
  %400 = add nsw i64 %399, %397
  %401 = sdiv i64 %400, 2147483648
  %402 = trunc i64 %401 to i32
  br label %403

403:                                              ; preds = %394, %395
  %404 = phi i32 [ %402, %395 ], [ 2147483647, %394 ]
  %405 = and i32 %404, %256
  %406 = lshr i32 %404, 31
  %407 = add nsw i32 %406, %257
  %408 = ashr i32 %404, %248
  %409 = icmp sgt i32 %405, %407
  %410 = zext i1 %409 to i32
  %411 = add i32 %408, %108
  %412 = add i32 %411, %410
  %413 = icmp slt i32 %412, %114
  %414 = select i1 %413, i32 %114, i32 %412
  %415 = icmp slt i32 %116, %414
  %416 = select i1 %415, i32 %116, i32 %414
  %417 = trunc i32 %416 to i8
  %418 = getelementptr inbounds i8, i8* %8, i64 %381
  store i8 %417, i8* %418, align 1
  %419 = add nuw nsw i64 %370, 1
  %420 = icmp slt i64 %419, %258
  br i1 %420, label %369, label %366
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21reference_integer_ops13TransposeConvERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_SB_Pi(%"struct.tflite::ConvParams"* dereferenceable(56), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, i32*) local_unnamed_addr #5 comdat {
  %15 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %16 = load i16, i16* %15, align 2
  %17 = sext i16 %16 to i32
  %18 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %19 = load i16, i16* %18, align 4
  %20 = sext i16 %19 to i32
  %21 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %22 = load i16, i16* %21, align 2
  %23 = sext i16 %22 to i32
  %24 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %25 = load i16, i16* %24, align 2
  %26 = sext i16 %25 to i32
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %29 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %30 = load i32, i32* %27, align 8
  %31 = icmp sgt i32 %30, 5
  %32 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %33 = load i32, i32* %29, align 8
  %34 = icmp sgt i32 %33, 5
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %32, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %32 to [5 x i32]*
  %39 = bitcast %union.anon* %32 to i32*
  %40 = select i1 %31, i32* %37, i32* %39
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %43 = load i32*, i32** %42, align 8
  %44 = bitcast %union.anon* %35 to i32*
  %45 = select i1 %34, i32* %43, i32* %44
  %46 = load i32, i32* %45, align 4
  %47 = icmp slt i32 %46, %41
  %48 = select i1 %47, i32 %46, i32 %41
  %49 = load i32, i32* %28, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %52 = getelementptr inbounds i32, i32* %37, i64 3
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %54 = bitcast i8* %53 to i32*
  %55 = select i1 %31, i32* %52, i32* %54
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = getelementptr inbounds i32, i32* %58, i64 3
  %60 = bitcast %union.anon* %51 to [5 x i32]*
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %62 = bitcast i8* %61 to i32*
  %63 = select i1 %50, i32* %59, i32* %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp slt i32 %64, %56
  %66 = select i1 %65, i32 %64, i32 %56
  %67 = bitcast %union.anon* %51 to i32*
  %68 = select i1 %50, i32* %58, i32* %67
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds i32, i32* %43, i64 3
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %72 = bitcast i8* %71 to i32*
  %73 = select i1 %34, i32* %70, i32* %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, %69
  %76 = select i1 %75, i32 %74, i32 %69
  %77 = icmp eq i32* %8, null
  %78 = getelementptr inbounds i32, i32* %37, i64 1
  %79 = getelementptr inbounds i32, i32* %37, i64 2
  %80 = getelementptr inbounds [5 x i32], [5 x i32]* %38, i64 0, i64 1
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %82 = bitcast [16 x i8]* %81 to i32*
  %83 = select i1 %31, i32* %78, i32* %80
  %84 = select i1 %31, i32* %79, i32* %82
  %85 = load i32, i32* %83, align 4
  %86 = load i32, i32* %84, align 4
  %87 = getelementptr inbounds i32, i32* %58, i64 1
  %88 = getelementptr inbounds i32, i32* %58, i64 2
  %89 = getelementptr inbounds [5 x i32], [5 x i32]* %60, i64 0, i64 1
  %90 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %91 = bitcast [16 x i8]* %90 to i32*
  %92 = select i1 %50, i32* %87, i32* %89
  %93 = select i1 %50, i32* %88, i32* %91
  %94 = load i32, i32* %92, align 4
  %95 = load i32, i32* %93, align 4
  br i1 %34, label %96, label %105

96:                                               ; preds = %14
  %97 = getelementptr inbounds i32, i32* %43, i64 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds i32, i32* %43, i64 2
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 6
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 8
  %104 = load i32, i32* %103, align 4
  br label %117

105:                                              ; preds = %14
  %106 = bitcast %union.anon* %35 to [5 x i32]*
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %106, i64 0, i64 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %110 = bitcast [16 x i8]* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 6
  %113 = load i32, i32* %112, align 4
  %114 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 8
  %115 = load i32, i32* %114, align 4
  %116 = icmp sgt i32 %33, 0
  br i1 %116, label %117, label %225

117:                                              ; preds = %105, %96
  %118 = phi i32 [ %104, %96 ], [ %115, %105 ]
  %119 = phi i32 [ %102, %96 ], [ %113, %105 ]
  %120 = phi i32 [ %100, %96 ], [ %111, %105 ]
  %121 = phi i32 [ %98, %96 ], [ %108, %105 ]
  %122 = phi i32* [ %43, %96 ], [ %44, %105 ]
  %123 = zext i32 %33 to i64
  %124 = icmp ult i32 %33, 8
  br i1 %124, label %210, label %125

125:                                              ; preds = %117
  %126 = and i64 %123, 4294967288
  %127 = add nsw i64 %126, -8
  %128 = lshr exact i64 %127, 3
  %129 = add nuw nsw i64 %128, 1
  %130 = and i64 %129, 3
  %131 = icmp ult i64 %127, 24
  br i1 %131, label %177, label %132

132:                                              ; preds = %125
  %133 = sub nsw i64 %129, %130
  br label %134

134:                                              ; preds = %134, %132
  %135 = phi i64 [ 0, %132 ], [ %174, %134 ]
  %136 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %132 ], [ %172, %134 ]
  %137 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %132 ], [ %173, %134 ]
  %138 = phi i64 [ %133, %132 ], [ %175, %134 ]
  %139 = getelementptr inbounds i32, i32* %122, i64 %135
  %140 = bitcast i32* %139 to <4 x i32>*
  %141 = load <4 x i32>, <4 x i32>* %140, align 4
  %142 = getelementptr inbounds i32, i32* %139, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4
  %145 = mul nsw <4 x i32> %141, %136
  %146 = mul nsw <4 x i32> %144, %137
  %147 = or i64 %135, 8
  %148 = getelementptr inbounds i32, i32* %122, i64 %147
  %149 = bitcast i32* %148 to <4 x i32>*
  %150 = load <4 x i32>, <4 x i32>* %149, align 4
  %151 = getelementptr inbounds i32, i32* %148, i64 4
  %152 = bitcast i32* %151 to <4 x i32>*
  %153 = load <4 x i32>, <4 x i32>* %152, align 4
  %154 = mul nsw <4 x i32> %150, %145
  %155 = mul nsw <4 x i32> %153, %146
  %156 = or i64 %135, 16
  %157 = getelementptr inbounds i32, i32* %122, i64 %156
  %158 = bitcast i32* %157 to <4 x i32>*
  %159 = load <4 x i32>, <4 x i32>* %158, align 4
  %160 = getelementptr inbounds i32, i32* %157, i64 4
  %161 = bitcast i32* %160 to <4 x i32>*
  %162 = load <4 x i32>, <4 x i32>* %161, align 4
  %163 = mul nsw <4 x i32> %159, %154
  %164 = mul nsw <4 x i32> %162, %155
  %165 = or i64 %135, 24
  %166 = getelementptr inbounds i32, i32* %122, i64 %165
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4
  %169 = getelementptr inbounds i32, i32* %166, i64 4
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4
  %172 = mul nsw <4 x i32> %168, %163
  %173 = mul nsw <4 x i32> %171, %164
  %174 = add i64 %135, 32
  %175 = add i64 %138, -4
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %134, !llvm.loop !198

177:                                              ; preds = %134, %125
  %178 = phi <4 x i32> [ undef, %125 ], [ %172, %134 ]
  %179 = phi <4 x i32> [ undef, %125 ], [ %173, %134 ]
  %180 = phi i64 [ 0, %125 ], [ %174, %134 ]
  %181 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %125 ], [ %172, %134 ]
  %182 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %125 ], [ %173, %134 ]
  %183 = icmp eq i64 %130, 0
  br i1 %183, label %200, label %184

184:                                              ; preds = %177, %184
  %185 = phi i64 [ %197, %184 ], [ %180, %177 ]
  %186 = phi <4 x i32> [ %195, %184 ], [ %181, %177 ]
  %187 = phi <4 x i32> [ %196, %184 ], [ %182, %177 ]
  %188 = phi i64 [ %198, %184 ], [ %130, %177 ]
  %189 = getelementptr inbounds i32, i32* %122, i64 %185
  %190 = bitcast i32* %189 to <4 x i32>*
  %191 = load <4 x i32>, <4 x i32>* %190, align 4
  %192 = getelementptr inbounds i32, i32* %189, i64 4
  %193 = bitcast i32* %192 to <4 x i32>*
  %194 = load <4 x i32>, <4 x i32>* %193, align 4
  %195 = mul nsw <4 x i32> %191, %186
  %196 = mul nsw <4 x i32> %194, %187
  %197 = add i64 %185, 8
  %198 = add i64 %188, -1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %184, !llvm.loop !199

200:                                              ; preds = %184, %177
  %201 = phi <4 x i32> [ %178, %177 ], [ %195, %184 ]
  %202 = phi <4 x i32> [ %179, %177 ], [ %196, %184 ]
  %203 = mul <4 x i32> %202, %201
  %204 = shufflevector <4 x i32> %203, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %205 = mul <4 x i32> %203, %204
  %206 = shufflevector <4 x i32> %205, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %207 = mul <4 x i32> %205, %206
  %208 = extractelement <4 x i32> %207, i32 0
  %209 = icmp eq i64 %126, %123
  br i1 %209, label %221, label %210

210:                                              ; preds = %200, %117
  %211 = phi i64 [ 0, %117 ], [ %126, %200 ]
  %212 = phi i32 [ 1, %117 ], [ %208, %200 ]
  br label %213

213:                                              ; preds = %210, %213
  %214 = phi i64 [ %219, %213 ], [ %211, %210 ]
  %215 = phi i32 [ %218, %213 ], [ %212, %210 ]
  %216 = getelementptr inbounds i32, i32* %122, i64 %214
  %217 = load i32, i32* %216, align 4
  %218 = mul nsw i32 %217, %215
  %219 = add nuw nsw i64 %214, 1
  %220 = icmp eq i64 %219, %123
  br i1 %220, label %221, label %213, !llvm.loop !200

221:                                              ; preds = %213, %200
  %222 = phi i32 [ %208, %200 ], [ %218, %213 ]
  %223 = sext i32 %222 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %221, %105
  %226 = phi i32 [ %115, %105 ], [ %118, %221 ]
  %227 = phi i32 [ %113, %105 ], [ %119, %221 ]
  %228 = phi i32 [ %111, %105 ], [ %120, %221 ]
  %229 = phi i32 [ %108, %105 ], [ %121, %221 ]
  %230 = phi i64 [ 4, %105 ], [ %224, %221 ]
  %231 = bitcast i32* %13 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %231, i8 0, i64 %230, i1 false)
  %232 = icmp sgt i32 %48, 0
  br i1 %232, label %233, label %351

233:                                              ; preds = %225
  %234 = icmp sgt i32 %85, 0
  %235 = icmp sgt i32 %86, 0
  %236 = icmp sgt i32 %66, 0
  %237 = icmp sgt i32 %94, 0
  %238 = icmp sgt i32 %95, 0
  %239 = icmp sgt i32 %76, 0
  %240 = getelementptr inbounds i32, i32* %39, i64 1
  %241 = getelementptr inbounds i32, i32* %67, i64 1
  %242 = getelementptr inbounds i32, i32* %44, i64 1
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %244 = bitcast [16 x i8]* %243 to i32*
  br label %245

245:                                              ; preds = %233, %261
  %246 = phi i32 [ 0, %233 ], [ %262, %261 ]
  br i1 %234, label %256, label %261

247:                                              ; preds = %261
  br i1 %232, label %248, label %351

248:                                              ; preds = %247
  %249 = icmp sgt i32 %229, 0
  %250 = icmp sgt i32 %228, 0
  %251 = icmp sgt i32 %76, 0
  %252 = getelementptr inbounds i32, i32* %44, i64 1
  %253 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %254 = bitcast [16 x i8]* %253 to i32*
  %255 = sext i32 %76 to i64
  br label %349

256:                                              ; preds = %245, %269
  %257 = phi i32 [ %270, %269 ], [ 0, %245 ]
  br i1 %235, label %258, label %269

258:                                              ; preds = %256
  %259 = mul nsw i32 %257, %20
  %260 = sub nsw i32 %259, %26
  br label %264

261:                                              ; preds = %269, %245
  %262 = add nuw nsw i32 %246, 1
  %263 = icmp slt i32 %262, %48
  br i1 %263, label %245, label %247

264:                                              ; preds = %272, %258
  %265 = phi i32 [ 0, %258 ], [ %273, %272 ]
  br i1 %236, label %266, label %272

266:                                              ; preds = %264
  %267 = mul nsw i32 %265, %17
  %268 = sub nsw i32 %267, %23
  br label %275

269:                                              ; preds = %272, %256
  %270 = add nuw nsw i32 %257, 1
  %271 = icmp eq i32 %270, %85
  br i1 %271, label %261, label %256

272:                                              ; preds = %283, %264
  %273 = add nuw nsw i32 %265, 1
  %274 = icmp eq i32 %273, %86
  br i1 %274, label %269, label %264

275:                                              ; preds = %266, %283
  %276 = phi i32 [ 0, %266 ], [ %284, %283 ]
  br i1 %237, label %277, label %283

277:                                              ; preds = %275, %296
  %278 = phi i32 [ %297, %296 ], [ 0, %275 ]
  br i1 %238, label %279, label %296

279:                                              ; preds = %277
  %280 = add nsw i32 %278, %260
  %281 = icmp sgt i32 %280, -1
  %282 = icmp slt i32 %280, %229
  br label %286

283:                                              ; preds = %296, %275
  %284 = add nuw nsw i32 %276, 1
  %285 = icmp slt i32 %284, %66
  br i1 %285, label %275, label %272

286:                                              ; preds = %299, %279
  %287 = phi i32 [ 0, %279 ], [ %300, %299 ]
  br i1 %239, label %288, label %299

288:                                              ; preds = %286
  %289 = add nsw i32 %287, %268
  %290 = icmp slt i32 %289, 0
  %291 = icmp slt i32 %289, %228
  %292 = and i1 %281, %291
  %293 = and i1 %282, %292
  %294 = xor i1 %293, true
  %295 = or i1 %290, %294
  br label %302

296:                                              ; preds = %299, %277
  %297 = add nuw nsw i32 %278, 1
  %298 = icmp eq i32 %297, %94
  br i1 %298, label %283, label %277

299:                                              ; preds = %346, %286
  %300 = add nuw nsw i32 %287, 1
  %301 = icmp eq i32 %300, %95
  br i1 %301, label %296, label %286

302:                                              ; preds = %288, %346
  %303 = phi i32 [ 0, %288 ], [ %347, %346 ]
  br i1 %295, label %346, label %304

304:                                              ; preds = %302
  %305 = load i32, i32* %240, align 4
  %306 = mul nsw i32 %305, %246
  %307 = add nsw i32 %306, %257
  %308 = load i32, i32* %82, align 4
  %309 = mul nsw i32 %307, %308
  %310 = add nsw i32 %309, %265
  %311 = load i32, i32* %54, align 4
  %312 = mul nsw i32 %310, %311
  %313 = add nsw i32 %312, %276
  %314 = sext i32 %313 to i64
  %315 = getelementptr inbounds i8, i8* %4, i64 %314
  %316 = load i8, i8* %315, align 1
  %317 = load i32, i32* %241, align 4
  %318 = mul nsw i32 %317, %303
  %319 = add nsw i32 %318, %278
  %320 = load i32, i32* %91, align 4
  %321 = mul nsw i32 %319, %320
  %322 = add nsw i32 %321, %287
  %323 = load i32, i32* %62, align 4
  %324 = mul nsw i32 %322, %323
  %325 = add nsw i32 %324, %276
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, i8* %6, i64 %326
  %328 = load i8, i8* %327, align 1
  %329 = sext i8 %316 to i32
  %330 = add nsw i32 %227, %329
  %331 = sext i8 %328 to i32
  %332 = mul nsw i32 %330, %331
  %333 = load i32, i32* %242, align 4
  %334 = mul nsw i32 %333, %246
  %335 = add nsw i32 %334, %280
  %336 = load i32, i32* %244, align 4
  %337 = mul nsw i32 %335, %336
  %338 = add nsw i32 %337, %289
  %339 = load i32, i32* %72, align 4
  %340 = mul nsw i32 %338, %339
  %341 = add nsw i32 %340, %303
  %342 = sext i32 %341 to i64
  %343 = getelementptr inbounds i32, i32* %13, i64 %342
  %344 = load i32, i32* %343, align 4
  %345 = add nsw i32 %344, %332
  store i32 %345, i32* %343, align 4
  br label %346

346:                                              ; preds = %302, %304
  %347 = add nuw nsw i32 %303, 1
  %348 = icmp slt i32 %347, %76
  br i1 %348, label %302, label %299

349:                                              ; preds = %248, %354
  %350 = phi i32 [ 0, %248 ], [ %355, %354 ]
  br i1 %249, label %352, label %354

351:                                              ; preds = %354, %225, %247
  ret void

352:                                              ; preds = %349, %359
  %353 = phi i32 [ %360, %359 ], [ 0, %349 ]
  br i1 %250, label %357, label %359

354:                                              ; preds = %359, %349
  %355 = add nuw nsw i32 %350, 1
  %356 = icmp slt i32 %355, %48
  br i1 %356, label %349, label %351

357:                                              ; preds = %352, %362
  %358 = phi i32 [ %363, %362 ], [ 0, %352 ]
  br i1 %251, label %365, label %362

359:                                              ; preds = %362, %352
  %360 = add nuw nsw i32 %353, 1
  %361 = icmp eq i32 %360, %229
  br i1 %361, label %354, label %352

362:                                              ; preds = %412, %357
  %363 = add nuw nsw i32 %358, 1
  %364 = icmp eq i32 %363, %228
  br i1 %364, label %359, label %357

365:                                              ; preds = %357, %412
  %366 = phi i64 [ %433, %412 ], [ 0, %357 ]
  %367 = load i32, i32* %252, align 4
  %368 = mul nsw i32 %367, %350
  %369 = add nsw i32 %368, %353
  %370 = load i32, i32* %254, align 4
  %371 = mul nsw i32 %369, %370
  %372 = add nsw i32 %371, %358
  %373 = load i32, i32* %72, align 4
  %374 = mul nsw i32 %372, %373
  %375 = trunc i64 %366 to i32
  %376 = add nsw i32 %374, %375
  %377 = sext i32 %376 to i64
  %378 = getelementptr inbounds i32, i32* %13, i64 %377
  %379 = load i32, i32* %378, align 4
  br i1 %77, label %384, label %380

380:                                              ; preds = %365
  %381 = getelementptr inbounds i32, i32* %8, i64 %366
  %382 = load i32, i32* %381, align 4
  %383 = add nsw i32 %382, %379
  br label %384

384:                                              ; preds = %365, %380
  %385 = phi i32 [ %383, %380 ], [ %379, %365 ]
  %386 = getelementptr inbounds i32, i32* %1, i64 %366
  %387 = load i32, i32* %386, align 4
  %388 = getelementptr inbounds i32, i32* %2, i64 %366
  %389 = load i32, i32* %388, align 4
  %390 = icmp sgt i32 %389, 0
  %391 = sub nsw i32 0, %389
  %392 = select i1 %390, i32 0, i32 %391
  %393 = shl i32 1, %389
  %394 = select i1 %390, i32 %393, i32 1
  %395 = mul nsw i32 %394, %385
  %396 = icmp eq i32 %395, %387
  br i1 %396, label %401, label %397

397:                                              ; preds = %384
  %398 = sext i32 %395 to i64
  %399 = sext i32 %387 to i64
  %400 = mul nsw i64 %398, %399
  br label %405

401:                                              ; preds = %384
  %402 = icmp eq i32 %387, -2147483648
  %403 = sext i32 %387 to i64
  %404 = mul nsw i64 %403, %403
  br i1 %402, label %412, label %405

405:                                              ; preds = %401, %397
  %406 = phi i64 [ %400, %397 ], [ %404, %401 ]
  %407 = icmp sgt i64 %406, -1
  %408 = select i1 %407, i64 1073741824, i64 -1073741823
  %409 = add nsw i64 %408, %406
  %410 = sdiv i64 %409, 2147483648
  %411 = trunc i64 %410 to i32
  br label %412

412:                                              ; preds = %401, %405
  %413 = phi i32 [ %411, %405 ], [ 2147483647, %401 ]
  %414 = zext i32 %392 to i64
  %415 = shl nsw i64 -1, %414
  %416 = trunc i64 %415 to i32
  %417 = xor i32 %416, -1
  %418 = and i32 %413, %417
  %419 = ashr i32 %417, 1
  %420 = lshr i32 %413, 31
  %421 = add nsw i32 %420, %419
  %422 = ashr i32 %413, %392
  %423 = icmp sgt i32 %418, %421
  %424 = zext i1 %423 to i32
  %425 = add i32 %422, %226
  %426 = add i32 %425, %424
  %427 = icmp sgt i32 %426, -128
  %428 = select i1 %427, i32 %426, i32 -128
  %429 = icmp slt i32 %428, 127
  %430 = select i1 %429, i32 %428, i32 127
  %431 = trunc i32 %430 to i8
  %432 = getelementptr inbounds i8, i8* %10, i64 %377
  store i8 %431, i8* %432, align 1
  %433 = add nuw nsw i64 %366, 1
  %434 = icmp slt i64 %433, %255
  br i1 %434, label %365, label %362
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv9EvalFloatILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPKNS2_6OpDataEPK12TfLiteTensorSF_SF_SF_PSD_SG_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %10 = alloca %"struct.tflite::ConvParams", align 4
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %16) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %16, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = trunc i32 %18 to i16
  %20 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 0
  store i16 %19, i16* %20, align 2
  %21 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = trunc i32 %22 to i16
  %24 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 1
  store i16 %23, i16* %24, align 2
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = trunc i32 %26 to i16
  %28 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 2
  store i16 %27, i16* %28, align 2
  %29 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = trunc i32 %30 to i16
  %32 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 1, i32 3
  store i16 %31, i16* %32, align 2
  %33 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %34 = load i32, i32* %33, align 4
  %35 = trunc i32 %34 to i16
  %36 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 2
  store i16 %35, i16* %36, align 2
  %37 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = trunc i32 %38 to i16
  %40 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %10, i64 0, i32 3
  store i16 %39, i16* %40, align 4
  %41 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  %42 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %42, label %43, label %45

43:                                               ; preds = %9
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %44, align 8, !alias.scope !201
  br label %73

45:                                               ; preds = %9
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %47 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %46, align 8, !noalias !201
  %48 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 0
  %49 = load i32, i32* %48, align 4, !noalias !201
  %50 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %47, i64 0, i32 1, i64 0
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %49, i32* %51, align 8, !alias.scope !201
  %52 = icmp sgt i32 %49, 5
  br i1 %52, label %53, label %60

53:                                               ; preds = %45
  %54 = sext i32 %49 to i64
  %55 = shl nsw i64 %54, 2
  %56 = tail call i8* @_Znam(i64 %55) #10, !noalias !201
  %57 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %58 = bitcast i32** %57 to i8**
  store i8* %56, i8** %58, align 8, !alias.scope !201
  %59 = bitcast i8* %56 to i32*
  br label %65

60:                                               ; preds = %45
  %61 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %62 = bitcast %union.anon* %61 to i32*
  %63 = sext i32 %49 to i64
  %64 = shl nsw i64 %63, 2
  br label %65

65:                                               ; preds = %60, %53
  %66 = phi i64 [ %55, %53 ], [ %64, %60 ]
  %67 = phi i32* [ %59, %53 ], [ %62, %60 ]
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %69, i64 %66, i1 false) #11
  %70 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %71 = bitcast %union.TfLitePtrUnion* %70 to float**
  %72 = load float*, float** %71, align 8
  br label %73

73:                                               ; preds = %43, %65
  %74 = phi float* [ %72, %65 ], [ null, %43 ]
  %75 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #11
  %76 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %78, align 8, !alias.scope !204
  br label %107

79:                                               ; preds = %73
  %80 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %81 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %80, align 8, !noalias !204
  %82 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 0
  %83 = load i32, i32* %82, align 4, !noalias !204
  %84 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %81, i64 0, i32 1, i64 0
  %85 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %83, i32* %85, align 8, !alias.scope !204
  %86 = icmp sgt i32 %83, 5
  br i1 %86, label %87, label %94

87:                                               ; preds = %79
  %88 = sext i32 %83 to i64
  %89 = shl nsw i64 %88, 2
  %90 = tail call i8* @_Znam(i64 %89) #10, !noalias !204
  %91 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %92 = bitcast i32** %91 to i8**
  store i8* %90, i8** %92, align 8, !alias.scope !204
  %93 = bitcast i8* %90 to i32*
  br label %99

94:                                               ; preds = %79
  %95 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %96 = bitcast %union.anon* %95 to i32*
  %97 = sext i32 %83 to i64
  %98 = shl nsw i64 %97, 2
  br label %99

99:                                               ; preds = %94, %87
  %100 = phi i64 [ %89, %87 ], [ %98, %94 ]
  %101 = phi i32* [ %93, %87 ], [ %96, %94 ]
  %102 = bitcast i32* %101 to i8*
  %103 = bitcast i32* %84 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %102, i8* align 4 %103, i64 %100, i1 false) #11
  %104 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1
  %105 = bitcast %union.TfLitePtrUnion* %104 to float**
  %106 = load float*, float** %105, align 8
  br label %107

107:                                              ; preds = %77, %99
  %108 = phi float* [ %106, %99 ], [ null, %77 ]
  %109 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %109) #11
  %110 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %110, label %111, label %113

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %112, align 8, !alias.scope !207
  br label %141

113:                                              ; preds = %107
  %114 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %115 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %114, align 8, !noalias !207
  %116 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 0
  %117 = load i32, i32* %116, align 4, !noalias !207
  %118 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %115, i64 0, i32 1, i64 0
  %119 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %117, i32* %119, align 8, !alias.scope !207
  %120 = icmp sgt i32 %117, 5
  br i1 %120, label %121, label %128

121:                                              ; preds = %113
  %122 = sext i32 %117 to i64
  %123 = shl nsw i64 %122, 2
  %124 = tail call i8* @_Znam(i64 %123) #10, !noalias !207
  %125 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %126 = bitcast i32** %125 to i8**
  store i8* %124, i8** %126, align 8, !alias.scope !207
  %127 = bitcast i8* %124 to i32*
  br label %133

128:                                              ; preds = %113
  %129 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %130 = bitcast %union.anon* %129 to i32*
  %131 = sext i32 %117 to i64
  %132 = shl nsw i64 %131, 2
  br label %133

133:                                              ; preds = %128, %121
  %134 = phi i64 [ %123, %121 ], [ %132, %128 ]
  %135 = phi i32* [ %127, %121 ], [ %130, %128 ]
  %136 = bitcast i32* %135 to i8*
  %137 = bitcast i32* %118 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %136, i8* align 4 %137, i64 %134, i1 false) #11
  %138 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %139 = bitcast %union.TfLitePtrUnion* %138 to float**
  %140 = load float*, float** %139, align 8
  br label %141

141:                                              ; preds = %111, %133
  %142 = phi float* [ %140, %133 ], [ null, %111 ]
  %143 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %143) #11
  %144 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %146, align 8, !alias.scope !210
  br label %175

147:                                              ; preds = %141
  %148 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %149 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %148, align 8, !noalias !210
  %150 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %149, i64 0, i32 0
  %151 = load i32, i32* %150, align 4, !noalias !210
  %152 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %149, i64 0, i32 1, i64 0
  %153 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %151, i32* %153, align 8, !alias.scope !210
  %154 = icmp sgt i32 %151, 5
  br i1 %154, label %155, label %162

155:                                              ; preds = %147
  %156 = sext i32 %151 to i64
  %157 = shl nsw i64 %156, 2
  %158 = tail call i8* @_Znam(i64 %157) #10, !noalias !210
  %159 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %160 = bitcast i32** %159 to i8**
  store i8* %158, i8** %160, align 8, !alias.scope !210
  %161 = bitcast i8* %158 to i32*
  br label %167

162:                                              ; preds = %147
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %164 = bitcast %union.anon* %163 to i32*
  %165 = sext i32 %151 to i64
  %166 = shl nsw i64 %165, 2
  br label %167

167:                                              ; preds = %162, %155
  %168 = phi i64 [ %157, %155 ], [ %166, %162 ]
  %169 = phi i32* [ %161, %155 ], [ %164, %162 ]
  %170 = bitcast i32* %169 to i8*
  %171 = bitcast i32* %152 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %170, i8* align 4 %171, i64 %168, i1 false) #11
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %173 = bitcast %union.TfLitePtrUnion* %172 to float**
  %174 = load float*, float** %173, align 8
  br label %175

175:                                              ; preds = %145, %167
  %176 = phi float* [ %174, %167 ], [ null, %145 ]
  %177 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %177) #11
  %178 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %178, label %179, label %181

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %180, align 8, !alias.scope !213
  br label %209

181:                                              ; preds = %175
  %182 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %183 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %182, align 8, !noalias !213
  %184 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 0
  %185 = load i32, i32* %184, align 4, !noalias !213
  %186 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %183, i64 0, i32 1, i64 0
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %185, i32* %187, align 8, !alias.scope !213
  %188 = icmp sgt i32 %185, 5
  br i1 %188, label %189, label %196

189:                                              ; preds = %181
  %190 = sext i32 %185 to i64
  %191 = shl nsw i64 %190, 2
  %192 = tail call i8* @_Znam(i64 %191) #10, !noalias !213
  %193 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %194 = bitcast i32** %193 to i8**
  store i8* %192, i8** %194, align 8, !alias.scope !213
  %195 = bitcast i8* %192 to i32*
  br label %201

196:                                              ; preds = %181
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %198 = bitcast %union.anon* %197 to i32*
  %199 = sext i32 %185 to i64
  %200 = shl nsw i64 %199, 2
  br label %201

201:                                              ; preds = %196, %189
  %202 = phi i64 [ %191, %189 ], [ %200, %196 ]
  %203 = phi i32* [ %195, %189 ], [ %198, %196 ]
  %204 = bitcast i32* %203 to i8*
  %205 = bitcast i32* %186 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %204, i8* align 4 %205, i64 %202, i1 false) #11
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1
  %207 = bitcast %union.TfLitePtrUnion* %206 to float**
  %208 = load float*, float** %207, align 8
  br label %209

209:                                              ; preds = %179, %201
  %210 = phi float* [ %208, %201 ], [ null, %179 ]
  %211 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %10, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, float* %74, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, float* %108, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, float* %142, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, float* %176, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, float* %210, %"class.tflite::CpuBackendContext"* %211)
  %212 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %213 = load i32, i32* %212, align 8
  %214 = icmp sgt i32 %213, 5
  br i1 %214, label %215, label %221

215:                                              ; preds = %209
  %216 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %217 = load i32*, i32** %216, align 8
  %218 = icmp eq i32* %217, null
  br i1 %218, label %221, label %219

219:                                              ; preds = %215
  %220 = bitcast i32* %217 to i8*
  call void @_ZdaPv(i8* %220) #10
  br label %221

221:                                              ; preds = %209, %215, %219
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %177) #11
  %222 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %223 = load i32, i32* %222, align 8
  %224 = icmp sgt i32 %223, 5
  br i1 %224, label %225, label %231

225:                                              ; preds = %221
  %226 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %227 = load i32*, i32** %226, align 8
  %228 = icmp eq i32* %227, null
  br i1 %228, label %231, label %229

229:                                              ; preds = %225
  %230 = bitcast i32* %227 to i8*
  call void @_ZdaPv(i8* %230) #10
  br label %231

231:                                              ; preds = %221, %225, %229
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %143) #11
  %232 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %233 = load i32, i32* %232, align 8
  %234 = icmp sgt i32 %233, 5
  br i1 %234, label %235, label %241

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  %238 = icmp eq i32* %237, null
  br i1 %238, label %241, label %239

239:                                              ; preds = %235
  %240 = bitcast i32* %237 to i8*
  call void @_ZdaPv(i8* %240) #10
  br label %241

241:                                              ; preds = %231, %235, %239
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %109) #11
  %242 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %243 = load i32, i32* %242, align 8
  %244 = icmp sgt i32 %243, 5
  br i1 %244, label %245, label %251

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %247 = load i32*, i32** %246, align 8
  %248 = icmp eq i32* %247, null
  br i1 %248, label %251, label %249

249:                                              ; preds = %245
  %250 = bitcast i32* %247 to i8*
  call void @_ZdaPv(i8* %250) #10
  br label %251

251:                                              ; preds = %241, %245, %249
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #11
  %252 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %253 = load i32, i32* %252, align 8
  %254 = icmp sgt i32 %253, 5
  br i1 %254, label %255, label %261

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %257 = load i32*, i32** %256, align 8
  %258 = icmp eq i32* %257, null
  br i1 %258, label %261, label %259

259:                                              ; preds = %255
  %260 = bitcast i32* %257 to i8*
  call void @_ZdaPv(i8* %260) #10
  br label %261

261:                                              ; preds = %251, %255, %259
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %16) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv13EvalQuantizedILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %11 = alloca %"struct.tflite::ConvParams", align 4
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 0, %18
  %20 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sub nsw i32 0, %21
  %23 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %25, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %25, align 4
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 0
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 1
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %35 = load i32, i32* %34, align 8
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 2
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 3
  store i16 %40, i16* %41, align 2
  %42 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = trunc i32 %43 to i16
  %45 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 2
  store i16 %44, i16* %45, align 2
  %46 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %47 = load i32, i32* %46, align 4
  %48 = trunc i32 %47 to i16
  %49 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 3
  store i16 %48, i16* %49, align 4
  %50 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 6
  store i32 %19, i32* %50, align 4
  %51 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 8
  store i32 %24, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 7
  store i32 %22, i32* %52, align 4
  %53 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 7
  %54 = load i32, i32* %53, align 8
  %55 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 9
  store i32 %54, i32* %55, align 4
  %56 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 8
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 0, %57
  %59 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 10
  store i32 %58, i32* %59, align 4
  %60 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 11
  %61 = load i32, i32* %60, align 8
  %62 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 11
  store i32 %61, i32* %62, align 4
  %63 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 12
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 12
  store i32 %64, i32* %65, align 4
  %66 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %66) #11
  %67 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %67, label %68, label %70

68:                                               ; preds = %10
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %69, align 8, !alias.scope !216
  br label %98

70:                                               ; preds = %10
  %71 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %72 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %71, align 8, !noalias !216
  %73 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 0
  %74 = load i32, i32* %73, align 4, !noalias !216
  %75 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %72, i64 0, i32 1, i64 0
  %76 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %74, i32* %76, align 8, !alias.scope !216
  %77 = icmp sgt i32 %74, 5
  br i1 %77, label %78, label %85

78:                                               ; preds = %70
  %79 = sext i32 %74 to i64
  %80 = shl nsw i64 %79, 2
  %81 = tail call i8* @_Znam(i64 %80) #10, !noalias !216
  %82 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %83 = bitcast i32** %82 to i8**
  store i8* %81, i8** %83, align 8, !alias.scope !216
  %84 = bitcast i8* %81 to i32*
  br label %90

85:                                               ; preds = %70
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %87 = bitcast %union.anon* %86 to i32*
  %88 = sext i32 %74 to i64
  %89 = shl nsw i64 %88, 2
  br label %90

90:                                               ; preds = %85, %78
  %91 = phi i64 [ %80, %78 ], [ %89, %85 ]
  %92 = phi i32* [ %84, %78 ], [ %87, %85 ]
  %93 = bitcast i32* %92 to i8*
  %94 = bitcast i32* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %93, i8* align 4 %94, i64 %91, i1 false) #11
  %95 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %96 = bitcast %union.TfLitePtrUnion* %95 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %68, %90
  %99 = phi i8* [ %97, %90 ], [ null, %68 ]
  %100 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %100) #11
  %101 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %103, align 8, !alias.scope !219
  br label %132

104:                                              ; preds = %98
  %105 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %106 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %105, align 8, !noalias !219
  %107 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 0
  %108 = load i32, i32* %107, align 4, !noalias !219
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %106, i64 0, i32 1, i64 0
  %110 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %108, i32* %110, align 8, !alias.scope !219
  %111 = icmp sgt i32 %108, 5
  br i1 %111, label %112, label %119

112:                                              ; preds = %104
  %113 = sext i32 %108 to i64
  %114 = shl nsw i64 %113, 2
  %115 = tail call i8* @_Znam(i64 %114) #10, !noalias !219
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %117 = bitcast i32** %116 to i8**
  store i8* %115, i8** %117, align 8, !alias.scope !219
  %118 = bitcast i8* %115 to i32*
  br label %124

119:                                              ; preds = %104
  %120 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %121 = bitcast %union.anon* %120 to i32*
  %122 = sext i32 %108 to i64
  %123 = shl nsw i64 %122, 2
  br label %124

124:                                              ; preds = %119, %112
  %125 = phi i64 [ %114, %112 ], [ %123, %119 ]
  %126 = phi i32* [ %118, %112 ], [ %121, %119 ]
  %127 = bitcast i32* %126 to i8*
  %128 = bitcast i32* %109 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 4 %128, i64 %125, i1 false) #11
  %129 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %130 = bitcast %union.TfLitePtrUnion* %129 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %102, %124
  %133 = phi i8* [ %131, %124 ], [ null, %102 ]
  %134 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %134) #11
  %135 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %135, label %136, label %138

136:                                              ; preds = %132
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %137, align 8, !alias.scope !222
  br label %165

138:                                              ; preds = %132
  %139 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %140 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %139, align 8, !noalias !222
  %141 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 0
  %142 = load i32, i32* %141, align 4, !noalias !222
  %143 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %140, i64 0, i32 1, i64 0
  %144 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %142, i32* %144, align 8, !alias.scope !222
  %145 = icmp sgt i32 %142, 5
  br i1 %145, label %146, label %153

146:                                              ; preds = %138
  %147 = sext i32 %142 to i64
  %148 = shl nsw i64 %147, 2
  %149 = tail call i8* @_Znam(i64 %148) #10, !noalias !222
  %150 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %151 = bitcast i32** %150 to i8**
  store i8* %149, i8** %151, align 8, !alias.scope !222
  %152 = bitcast i8* %149 to i32*
  br label %158

153:                                              ; preds = %138
  %154 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %155 = bitcast %union.anon* %154 to i32*
  %156 = sext i32 %142 to i64
  %157 = shl nsw i64 %156, 2
  br label %158

158:                                              ; preds = %153, %146
  %159 = phi i64 [ %148, %146 ], [ %157, %153 ]
  %160 = phi i32* [ %152, %146 ], [ %155, %153 ]
  %161 = bitcast i32* %160 to i8*
  %162 = bitcast i32* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %161, i8* align 4 %162, i64 %159, i1 false) #11
  %163 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %164 = load i32*, i32** %163, align 8
  br label %165

165:                                              ; preds = %136, %158
  %166 = phi i32* [ %164, %158 ], [ null, %136 ]
  %167 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %167) #11
  %168 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %168, label %169, label %171

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %170, align 8, !alias.scope !225
  br label %199

171:                                              ; preds = %165
  %172 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %173 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %172, align 8, !noalias !225
  %174 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 0
  %175 = load i32, i32* %174, align 4, !noalias !225
  %176 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %173, i64 0, i32 1, i64 0
  %177 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %175, i32* %177, align 8, !alias.scope !225
  %178 = icmp sgt i32 %175, 5
  br i1 %178, label %179, label %186

179:                                              ; preds = %171
  %180 = sext i32 %175 to i64
  %181 = shl nsw i64 %180, 2
  %182 = tail call i8* @_Znam(i64 %181) #10, !noalias !225
  %183 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %184 = bitcast i32** %183 to i8**
  store i8* %182, i8** %184, align 8, !alias.scope !225
  %185 = bitcast i8* %182 to i32*
  br label %191

186:                                              ; preds = %171
  %187 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %188 = bitcast %union.anon* %187 to i32*
  %189 = sext i32 %175 to i64
  %190 = shl nsw i64 %189, 2
  br label %191

191:                                              ; preds = %186, %179
  %192 = phi i64 [ %181, %179 ], [ %190, %186 ]
  %193 = phi i32* [ %185, %179 ], [ %188, %186 ]
  %194 = bitcast i32* %193 to i8*
  %195 = bitcast i32* %176 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %194, i8* align 4 %195, i64 %192, i1 false) #11
  %196 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %197 = bitcast %union.TfLitePtrUnion* %196 to i8**
  %198 = load i8*, i8** %197, align 8
  br label %199

199:                                              ; preds = %169, %191
  %200 = phi i8* [ %198, %191 ], [ null, %169 ]
  %201 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %201) #11
  %202 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %202, label %203, label %205

203:                                              ; preds = %199
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %204, align 8, !alias.scope !228
  br label %232

205:                                              ; preds = %199
  %206 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %207 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %206, align 8, !noalias !228
  %208 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 0
  %209 = load i32, i32* %208, align 4, !noalias !228
  %210 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %207, i64 0, i32 1, i64 0
  %211 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %209, i32* %211, align 8, !alias.scope !228
  %212 = icmp sgt i32 %209, 5
  br i1 %212, label %213, label %220

213:                                              ; preds = %205
  %214 = sext i32 %209 to i64
  %215 = shl nsw i64 %214, 2
  %216 = tail call i8* @_Znam(i64 %215) #10, !noalias !228
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %218 = bitcast i32** %217 to i8**
  store i8* %216, i8** %218, align 8, !alias.scope !228
  %219 = bitcast i8* %216 to i32*
  br label %225

220:                                              ; preds = %205
  %221 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %222 = bitcast %union.anon* %221 to i32*
  %223 = sext i32 %209 to i64
  %224 = shl nsw i64 %223, 2
  br label %225

225:                                              ; preds = %220, %213
  %226 = phi i64 [ %215, %213 ], [ %224, %220 ]
  %227 = phi i32* [ %219, %213 ], [ %222, %220 ]
  %228 = bitcast i32* %227 to i8*
  %229 = bitcast i32* %210 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %228, i8* align 4 %229, i64 %226, i1 false) #11
  %230 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %231 = load i32*, i32** %230, align 8
  br label %232

232:                                              ; preds = %203, %225
  %233 = phi i32* [ %231, %225 ], [ null, %203 ]
  %234 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %234, label %238, label %235

235:                                              ; preds = %232
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  br label %238

238:                                              ; preds = %232, %235
  %239 = phi i32* [ %237, %235 ], [ null, %232 ]
  %240 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_PiSC_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %99, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %133, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %166, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %200, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i32* %233, i32* %239, %"class.tflite::CpuBackendContext"* %240)
  %241 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %242 = load i32, i32* %241, align 8
  %243 = icmp sgt i32 %242, 5
  br i1 %243, label %244, label %250

244:                                              ; preds = %238
  %245 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %246 = load i32*, i32** %245, align 8
  %247 = icmp eq i32* %246, null
  br i1 %247, label %250, label %248

248:                                              ; preds = %244
  %249 = bitcast i32* %246 to i8*
  call void @_ZdaPv(i8* %249) #10
  br label %250

250:                                              ; preds = %238, %244, %248
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %201) #11
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %252 = load i32, i32* %251, align 8
  %253 = icmp sgt i32 %252, 5
  br i1 %253, label %254, label %260

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %256 = load i32*, i32** %255, align 8
  %257 = icmp eq i32* %256, null
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = bitcast i32* %256 to i8*
  call void @_ZdaPv(i8* %259) #10
  br label %260

260:                                              ; preds = %250, %254, %258
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %167) #11
  %261 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %262 = load i32, i32* %261, align 8
  %263 = icmp sgt i32 %262, 5
  br i1 %263, label %264, label %270

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %266 = load i32*, i32** %265, align 8
  %267 = icmp eq i32* %266, null
  br i1 %267, label %270, label %268

268:                                              ; preds = %264
  %269 = bitcast i32* %266 to i8*
  call void @_ZdaPv(i8* %269) #10
  br label %270

270:                                              ; preds = %260, %264, %268
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %134) #11
  %271 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %272 = load i32, i32* %271, align 8
  %273 = icmp sgt i32 %272, 5
  br i1 %273, label %274, label %280

274:                                              ; preds = %270
  %275 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %276 = load i32*, i32** %275, align 8
  %277 = icmp eq i32* %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = bitcast i32* %276 to i8*
  call void @_ZdaPv(i8* %279) #10
  br label %280

280:                                              ; preds = %270, %274, %278
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %100) #11
  %281 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %282 = load i32, i32* %281, align 8
  %283 = icmp sgt i32 %282, 5
  br i1 %283, label %284, label %290

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %286 = load i32*, i32** %285, align 8
  %287 = icmp eq i32* %286, null
  br i1 %287, label %290, label %288

288:                                              ; preds = %284
  %289 = bitcast i32* %286 to i8*
  call void @_ZdaPv(i8* %289) #10
  br label %290

290:                                              ; preds = %280, %284, %288
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %66) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_(%struct.TfLiteContext*, %struct.TfLiteTransposeConvParams*, %"struct.tflite::ops::builtin::transpose_conv::OpData"*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor*) local_unnamed_addr #0 comdat {
  %11 = alloca %"struct.tflite::ConvParams", align 4
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = alloca %"class.tflite::RuntimeShape", align 8
  %15 = alloca %"class.tflite::RuntimeShape", align 8
  %16 = alloca %"class.tflite::RuntimeShape", align 8
  %17 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %17) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %17, i8* align 4 getelementptr inbounds ({ i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }, { i8, [1 x i8], %"struct.tflite::PaddingValues", i16, i16, i16, i16, [2 x i8], i32, i32, i32, i32, i32, i32, i32, float, float }* @__const._ZN6tflite3ops7builtin14transpose_conv23EvalQuantizedPerChannelILNS2_10KernelTypeE1EEEvP13TfLiteContextPK25TfLiteTransposeConvParamsPNS2_6OpDataEPK12TfLiteTensorSE_SE_SE_PSC_SF_SF_.op_params, i64 0, i32 0), i64 56, i1 false)
  store i8 1, i8* %17, align 4
  %18 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = trunc i32 %19 to i16
  %21 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 0
  store i16 %20, i16* %21, align 2
  %22 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 1
  %23 = load i32, i32* %22, align 4
  %24 = trunc i32 %23 to i16
  %25 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 1
  store i16 %24, i16* %25, align 2
  %26 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 8
  %28 = trunc i32 %27 to i16
  %29 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 2
  store i16 %28, i16* %29, align 2
  %30 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 6, i32 3
  %31 = load i32, i32* %30, align 4
  %32 = trunc i32 %31 to i16
  %33 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 1, i32 3
  store i16 %32, i16* %33, align 2
  %34 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = trunc i32 %35 to i16
  %37 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 2
  store i16 %36, i16* %37, align 2
  %38 = getelementptr inbounds %struct.TfLiteTransposeConvParams, %struct.TfLiteTransposeConvParams* %1, i64 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = trunc i32 %39 to i16
  %41 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 3
  store i16 %40, i16* %41, align 4
  %42 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 3, i32 1
  %43 = load i32, i32* %42, align 4
  %44 = sub nsw i32 0, %43
  %45 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 6
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 8
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 11
  %50 = load i32, i32* %49, align 8
  %51 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 11
  store i32 %50, i32* %51, align 4
  %52 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 12
  %53 = load i32, i32* %52, align 4
  %54 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %11, i64 0, i32 12
  store i32 %53, i32* %54, align 4
  %55 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 9, i32 0, i32 0
  %56 = load i32*, i32** %55, align 8
  %57 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose_conv::OpData", %"struct.tflite::ops::builtin::transpose_conv::OpData"* %2, i64 0, i32 10, i32 0, i32 0
  %58 = load i32*, i32** %57, align 8
  %59 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %59) #11
  %60 = icmp eq %struct.TfLiteTensor* %3, null
  br i1 %60, label %61, label %63

61:                                               ; preds = %10
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %62, align 8, !alias.scope !231
  br label %91

63:                                               ; preds = %10
  %64 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 2
  %65 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %64, align 8, !noalias !231
  %66 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 0
  %67 = load i32, i32* %66, align 4, !noalias !231
  %68 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %65, i64 0, i32 1, i64 0
  %69 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %67, i32* %69, align 8, !alias.scope !231
  %70 = icmp sgt i32 %67, 5
  br i1 %70, label %71, label %78

71:                                               ; preds = %63
  %72 = sext i32 %67 to i64
  %73 = shl nsw i64 %72, 2
  %74 = tail call i8* @_Znam(i64 %73) #10, !noalias !231
  %75 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %76 = bitcast i32** %75 to i8**
  store i8* %74, i8** %76, align 8, !alias.scope !231
  %77 = bitcast i8* %74 to i32*
  br label %83

78:                                               ; preds = %63
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %80 = bitcast %union.anon* %79 to i32*
  %81 = sext i32 %67 to i64
  %82 = shl nsw i64 %81, 2
  br label %83

83:                                               ; preds = %78, %71
  %84 = phi i64 [ %73, %71 ], [ %82, %78 ]
  %85 = phi i32* [ %77, %71 ], [ %80, %78 ]
  %86 = bitcast i32* %85 to i8*
  %87 = bitcast i32* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %86, i8* align 4 %87, i64 %84, i1 false) #11
  %88 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %3, i64 0, i32 1
  %89 = bitcast %union.TfLitePtrUnion* %88 to i8**
  %90 = load i8*, i8** %89, align 8
  br label %91

91:                                               ; preds = %61, %83
  %92 = phi i8* [ %90, %83 ], [ null, %61 ]
  %93 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %93) #11
  %94 = icmp eq %struct.TfLiteTensor* %5, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %96, align 8, !alias.scope !234
  br label %125

97:                                               ; preds = %91
  %98 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 2
  %99 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %98, align 8, !noalias !234
  %100 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 0
  %101 = load i32, i32* %100, align 4, !noalias !234
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %99, i64 0, i32 1, i64 0
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %101, i32* %103, align 8, !alias.scope !234
  %104 = icmp sgt i32 %101, 5
  br i1 %104, label %105, label %112

105:                                              ; preds = %97
  %106 = sext i32 %101 to i64
  %107 = shl nsw i64 %106, 2
  %108 = tail call i8* @_Znam(i64 %107) #10, !noalias !234
  %109 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %110 = bitcast i32** %109 to i8**
  store i8* %108, i8** %110, align 8, !alias.scope !234
  %111 = bitcast i8* %108 to i32*
  br label %117

112:                                              ; preds = %97
  %113 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %114 = bitcast %union.anon* %113 to i32*
  %115 = sext i32 %101 to i64
  %116 = shl nsw i64 %115, 2
  br label %117

117:                                              ; preds = %112, %105
  %118 = phi i64 [ %107, %105 ], [ %116, %112 ]
  %119 = phi i32* [ %111, %105 ], [ %114, %112 ]
  %120 = bitcast i32* %119 to i8*
  %121 = bitcast i32* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 %118, i1 false) #11
  %122 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %5, i64 0, i32 1
  %123 = bitcast %union.TfLitePtrUnion* %122 to i8**
  %124 = load i8*, i8** %123, align 8
  br label %125

125:                                              ; preds = %95, %117
  %126 = phi i8* [ %124, %117 ], [ null, %95 ]
  %127 = bitcast %"class.tflite::RuntimeShape"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %127) #11
  %128 = icmp eq %struct.TfLiteTensor* %6, null
  br i1 %128, label %129, label %131

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 0, i32* %130, align 8, !alias.scope !237
  br label %158

131:                                              ; preds = %125
  %132 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 2
  %133 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %132, align 8, !noalias !237
  %134 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 0
  %135 = load i32, i32* %134, align 4, !noalias !237
  %136 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %133, i64 0, i32 1, i64 0
  %137 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  store i32 %135, i32* %137, align 8, !alias.scope !237
  %138 = icmp sgt i32 %135, 5
  br i1 %138, label %139, label %146

139:                                              ; preds = %131
  %140 = sext i32 %135 to i64
  %141 = shl nsw i64 %140, 2
  %142 = tail call i8* @_Znam(i64 %141) #10, !noalias !237
  %143 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %144 = bitcast i32** %143 to i8**
  store i8* %142, i8** %144, align 8, !alias.scope !237
  %145 = bitcast i8* %142 to i32*
  br label %151

146:                                              ; preds = %131
  %147 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1
  %148 = bitcast %union.anon* %147 to i32*
  %149 = sext i32 %135 to i64
  %150 = shl nsw i64 %149, 2
  br label %151

151:                                              ; preds = %146, %139
  %152 = phi i64 [ %141, %139 ], [ %150, %146 ]
  %153 = phi i32* [ %145, %139 ], [ %148, %146 ]
  %154 = bitcast i32* %153 to i8*
  %155 = bitcast i32* %136 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %154, i8* align 4 %155, i64 %152, i1 false) #11
  %156 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %6, i64 0, i32 1, i32 0
  %157 = load i32*, i32** %156, align 8
  br label %158

158:                                              ; preds = %129, %151
  %159 = phi i32* [ %157, %151 ], [ null, %129 ]
  %160 = bitcast %"class.tflite::RuntimeShape"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %160) #11
  %161 = icmp eq %struct.TfLiteTensor* %8, null
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 0, i32* %163, align 8, !alias.scope !240
  br label %192

164:                                              ; preds = %158
  %165 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 2
  %166 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %165, align 8, !noalias !240
  %167 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4, !noalias !240
  %169 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %166, i64 0, i32 1, i64 0
  %170 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  store i32 %168, i32* %170, align 8, !alias.scope !240
  %171 = icmp sgt i32 %168, 5
  br i1 %171, label %172, label %179

172:                                              ; preds = %164
  %173 = sext i32 %168 to i64
  %174 = shl nsw i64 %173, 2
  %175 = tail call i8* @_Znam(i64 %174) #10, !noalias !240
  %176 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %177 = bitcast i32** %176 to i8**
  store i8* %175, i8** %177, align 8, !alias.scope !240
  %178 = bitcast i8* %175 to i32*
  br label %184

179:                                              ; preds = %164
  %180 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1
  %181 = bitcast %union.anon* %180 to i32*
  %182 = sext i32 %168 to i64
  %183 = shl nsw i64 %182, 2
  br label %184

184:                                              ; preds = %179, %172
  %185 = phi i64 [ %174, %172 ], [ %183, %179 ]
  %186 = phi i32* [ %178, %172 ], [ %181, %179 ]
  %187 = bitcast i32* %186 to i8*
  %188 = bitcast i32* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %187, i8* align 4 %188, i64 %185, i1 false) #11
  %189 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %8, i64 0, i32 1
  %190 = bitcast %union.TfLitePtrUnion* %189 to i8**
  %191 = load i8*, i8** %190, align 8
  br label %192

192:                                              ; preds = %162, %184
  %193 = phi i8* [ %191, %184 ], [ null, %162 ]
  %194 = bitcast %"class.tflite::RuntimeShape"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %194) #11
  %195 = icmp eq %struct.TfLiteTensor* %7, null
  br i1 %195, label %196, label %198

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 0, i32* %197, align 8, !alias.scope !243
  br label %225

198:                                              ; preds = %192
  %199 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 2
  %200 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %199, align 8, !noalias !243
  %201 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4, !noalias !243
  %203 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %200, i64 0, i32 1, i64 0
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  store i32 %202, i32* %204, align 8, !alias.scope !243
  %205 = icmp sgt i32 %202, 5
  br i1 %205, label %206, label %213

206:                                              ; preds = %198
  %207 = sext i32 %202 to i64
  %208 = shl nsw i64 %207, 2
  %209 = tail call i8* @_Znam(i64 %208) #10, !noalias !243
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %211 = bitcast i32** %210 to i8**
  store i8* %209, i8** %211, align 8, !alias.scope !243
  %212 = bitcast i8* %209 to i32*
  br label %218

213:                                              ; preds = %198
  %214 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1
  %215 = bitcast %union.anon* %214 to i32*
  %216 = sext i32 %202 to i64
  %217 = shl nsw i64 %216, 2
  br label %218

218:                                              ; preds = %213, %206
  %219 = phi i64 [ %208, %206 ], [ %217, %213 ]
  %220 = phi i32* [ %212, %206 ], [ %215, %213 ]
  %221 = bitcast i32* %220 to i8*
  %222 = bitcast i32* %203 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %221, i8* align 4 %222, i64 %219, i1 false) #11
  %223 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %7, i64 0, i32 1, i32 0
  %224 = load i32*, i32** %223, align 8
  br label %225

225:                                              ; preds = %196, %218
  %226 = phi i32* [ %224, %218 ], [ null, %196 ]
  %227 = icmp eq %struct.TfLiteTensor* %9, null
  br i1 %227, label %231, label %228

228:                                              ; preds = %225
  %229 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %9, i64 0, i32 1, i32 0
  %230 = load i32*, i32** %229, align 8
  br label %231

231:                                              ; preds = %225, %228
  %232 = phi i32* [ %230, %228 ], [ null, %225 ]
  %233 = tail call %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext* %0) #11
  call void @_ZN6tflite21optimized_integer_ops15TransposeConvV2ERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_PiSC_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* nonnull dereferenceable(56) %11, i32* %56, i32* %58, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %92, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %126, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %14, i32* %159, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %15, i8* %193, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %16, i32* %226, i32* %232, %"class.tflite::CpuBackendContext"* %233)
  %234 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 0
  %235 = load i32, i32* %234, align 8
  %236 = icmp sgt i32 %235, 5
  br i1 %236, label %237, label %243

237:                                              ; preds = %231
  %238 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %16, i64 0, i32 1, i32 0
  %239 = load i32*, i32** %238, align 8
  %240 = icmp eq i32* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %237
  %242 = bitcast i32* %239 to i8*
  call void @_ZdaPv(i8* %242) #10
  br label %243

243:                                              ; preds = %231, %237, %241
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #11
  %244 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 0
  %245 = load i32, i32* %244, align 8
  %246 = icmp sgt i32 %245, 5
  br i1 %246, label %247, label %253

247:                                              ; preds = %243
  %248 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %15, i64 0, i32 1, i32 0
  %249 = load i32*, i32** %248, align 8
  %250 = icmp eq i32* %249, null
  br i1 %250, label %253, label %251

251:                                              ; preds = %247
  %252 = bitcast i32* %249 to i8*
  call void @_ZdaPv(i8* %252) #10
  br label %253

253:                                              ; preds = %243, %247, %251
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %160) #11
  %254 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 0
  %255 = load i32, i32* %254, align 8
  %256 = icmp sgt i32 %255, 5
  br i1 %256, label %257, label %263

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %14, i64 0, i32 1, i32 0
  %259 = load i32*, i32** %258, align 8
  %260 = icmp eq i32* %259, null
  br i1 %260, label %263, label %261

261:                                              ; preds = %257
  %262 = bitcast i32* %259 to i8*
  call void @_ZdaPv(i8* %262) #10
  br label %263

263:                                              ; preds = %253, %257, %261
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %127) #11
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %265 = load i32, i32* %264, align 8
  %266 = icmp sgt i32 %265, 5
  br i1 %266, label %267, label %273

267:                                              ; preds = %263
  %268 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %269 = load i32*, i32** %268, align 8
  %270 = icmp eq i32* %269, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %267
  %272 = bitcast i32* %269 to i8*
  call void @_ZdaPv(i8* %272) #10
  br label %273

273:                                              ; preds = %263, %267, %271
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %93) #11
  %274 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %275 = load i32, i32* %274, align 8
  %276 = icmp sgt i32 %275, 5
  br i1 %276, label %277, label %283

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %279 = load i32*, i32** %278, align 8
  %280 = icmp eq i32* %279, null
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = bitcast i32* %279 to i8*
  call void @_ZdaPv(i8* %282) #10
  br label %283

283:                                              ; preds = %273, %277, %281
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %59) #11
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %17) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKfS6_S8_S6_S8_S6_PfS6_S9_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* dereferenceable(56), %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::RuntimeShape"* dereferenceable(32), float*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #5 comdat {
  %13 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %14 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %15 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams", align 4
  %16 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams", align 8
  %17 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %19 = load i32, i32* %17, align 8
  %20 = icmp sgt i32 %19, 5
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %23 = load i32, i32* %22, align 8
  %24 = icmp sgt i32 %23, 5
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %26 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %27 = load i32*, i32** %26, align 8
  %28 = bitcast %union.anon* %21 to i32*
  %29 = select i1 %20, i32* %27, i32* %28
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %union.anon, %union.anon* %25, i64 0, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = bitcast %union.anon* %25 to [5 x i32]*
  %34 = bitcast %union.anon* %25 to i32*
  %35 = select i1 %24, i32* %32, i32* %34
  %36 = load i32, i32* %35, align 4
  %37 = icmp slt i32 %36, %30
  %38 = select i1 %37, i32 %36, i32 %30
  %39 = getelementptr inbounds i32, i32* %27, i64 1
  %40 = getelementptr inbounds i32, i32* %27, i64 2
  %41 = bitcast %union.anon* %21 to [5 x i32]*
  %42 = getelementptr inbounds [5 x i32], [5 x i32]* %41, i64 0, i64 1
  %43 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %44 = bitcast [16 x i8]* %43 to i32*
  %45 = select i1 %20, i32* %39, i32* %42
  %46 = select i1 %20, i32* %40, i32* %44
  %47 = load i32, i32* %45, align 4
  %48 = load i32, i32* %46, align 4
  %49 = mul nsw i32 %48, %47
  %50 = getelementptr inbounds i32, i32* %32, i64 1
  %51 = getelementptr inbounds i32, i32* %32, i64 2
  %52 = getelementptr inbounds [5 x i32], [5 x i32]* %33, i64 0, i64 1
  %53 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %54 = bitcast [16 x i8]* %53 to i32*
  %55 = select i1 %24, i32* %50, i32* %52
  %56 = select i1 %24, i32* %51, i32* %54
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  %59 = mul i32 %58, %57
  %60 = load i32, i32* %18, align 8
  %61 = icmp sgt i32 %60, 5
  %62 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %63 = getelementptr inbounds i32, i32* %27, i64 3
  %64 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %65 = bitcast i8* %64 to i32*
  %66 = select i1 %20, i32* %63, i32* %65
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %union.anon, %union.anon* %62, i64 0, i32 0
  %69 = load i32*, i32** %68, align 8
  %70 = getelementptr inbounds i32, i32* %69, i64 3
  %71 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %72 = bitcast i8* %71 to i32*
  %73 = select i1 %61, i32* %70, i32* %72
  %74 = load i32, i32* %73, align 4
  %75 = icmp slt i32 %74, %67
  %76 = select i1 %75, i32 %74, i32 %67
  %77 = getelementptr inbounds i32, i32* %32, i64 3
  %78 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %79 = bitcast i8* %78 to i32*
  %80 = select i1 %24, i32* %77, i32* %79
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %69, i64 2
  %83 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %84 = bitcast [16 x i8]* %83 to i32*
  %85 = select i1 %61, i32* %82, i32* %84
  %86 = load i32, i32* %85, align 4
  %87 = icmp slt i32 %86, %81
  %88 = select i1 %87, i32 %86, i32 %81
  %89 = mul nsw i32 %76, %49
  %90 = mul i32 %59, %88
  %91 = getelementptr inbounds i32, i32* %69, i64 1
  %92 = bitcast %union.anon* %62 to [5 x i32]*
  %93 = bitcast %union.anon* %62 to i32*
  %94 = getelementptr inbounds [5 x i32], [5 x i32]* %92, i64 0, i64 1
  %95 = select i1 %61, i32* %69, i32* %93
  %96 = select i1 %61, i32* %91, i32* %94
  %97 = load i32, i32* %95, align 4
  %98 = load i32, i32* %96, align 4
  %99 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %100 = load i16, i16* %99, align 2
  %101 = sext i16 %100 to i32
  %102 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 3
  %103 = load i16, i16* %102, align 2
  %104 = sext i16 %103 to i32
  %105 = add nsw i32 %104, %101
  %106 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %107 = load i16, i16* %106, align 2
  %108 = sext i16 %107 to i32
  %109 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 2
  %110 = load i16, i16* %109, align 2
  %111 = sext i16 %110 to i32
  %112 = add nsw i32 %111, %108
  %113 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %114 = load i16, i16* %113, align 4
  %115 = sext i16 %114 to i32
  %116 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %117 = load i16, i16* %116, align 2
  %118 = sext i16 %117 to i32
  %119 = mul nsw i32 %98, %97
  %120 = mul nsw i32 %119, %88
  %121 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %121) #11
  %122 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13, i64 0, i32 0
  %123 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13, i64 0, i32 1
  %124 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13, i64 0, i32 2
  %125 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13, i64 0, i32 4
  %126 = bitcast i8* %125 to i32*
  store i32 -1431655766, i32* %126, align 4
  %127 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %13, i64 0, i32 3
  %128 = bitcast float* %127 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %128, i8 0, i64 5, i1 false) #11
  store i32 1, i32* %122, align 4
  store i32 %120, i32* %123, align 4
  store i32 %76, i32* %124, align 4
  %129 = mul i32 %90, %38
  %130 = icmp sgt i32 %129, 0
  br i1 %130, label %131, label %135

131:                                              ; preds = %12
  %132 = bitcast float* %8 to i8*
  %133 = zext i32 %129 to i64
  %134 = shl nuw nsw i64 %133, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %132, i8 0, i64 %134, i1 false)
  br label %135

135:                                              ; preds = %131, %12
  %136 = icmp sgt i32 %38, 0
  br i1 %136, label %137, label %317

137:                                              ; preds = %135
  %138 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %14 to i8*
  %139 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %14, i64 0, i32 1
  %140 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %14, i64 0, i32 2
  %141 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %14, i64 0, i32 4
  %142 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %15 to i8*
  %143 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %15, i64 0, i32 1
  %144 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %15, i64 0, i32 2
  %145 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %15, i64 0, i32 4
  %146 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams"* %16 to i8*
  %147 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %16, i64 0, i32 5
  %148 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %16, i64 0, i32 6
  %149 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %11, i64 0, i32 4
  %150 = sext i32 %90 to i64
  %151 = sext i32 %89 to i64
  %152 = sext i32 %38 to i64
  %153 = bitcast i8* %141 to i32*
  %154 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %14 to i8*
  %155 = bitcast i8* %145 to i32*
  %156 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams"* %15 to i8*
  br label %318

157:                                              ; preds = %327
  %158 = icmp ne float* %6, null
  %159 = and i1 %158, %136
  br i1 %159, label %160, label %317

160:                                              ; preds = %157
  %161 = icmp sgt i32 %57, 0
  %162 = icmp sgt i32 %58, 0
  %163 = icmp sgt i32 %88, 0
  %164 = sext i32 %88 to i64
  %165 = zext i32 %88 to i64
  %166 = getelementptr float, float* %6, i64 %165
  %167 = and i64 %165, 4294967288
  %168 = add nsw i64 %167, -8
  %169 = lshr exact i64 %168, 3
  %170 = add nuw nsw i64 %169, 1
  %171 = icmp ult i32 %88, 8
  %172 = and i64 %165, 4294967288
  %173 = and i64 %170, 1
  %174 = icmp eq i64 %168, 0
  %175 = sub nuw nsw i64 %170, %173
  %176 = icmp eq i64 %173, 0
  %177 = icmp eq i64 %172, %165
  %178 = and i64 %165, 3
  %179 = icmp eq i64 %178, 0
  br label %180

180:                                              ; preds = %186, %160
  %181 = phi i32 [ 0, %160 ], [ %188, %186 ]
  %182 = phi float* [ %8, %160 ], [ %187, %186 ]
  br i1 %161, label %183, label %186

183:                                              ; preds = %180, %281
  %184 = phi i32 [ %283, %281 ], [ 0, %180 ]
  %185 = phi float* [ %282, %281 ], [ %182, %180 ]
  br i1 %162, label %190, label %281

186:                                              ; preds = %281, %180
  %187 = phi float* [ %182, %180 ], [ %282, %281 ]
  %188 = add nuw nsw i32 %181, 1
  %189 = icmp eq i32 %188, %38
  br i1 %189, label %317, label %180

190:                                              ; preds = %183, %285
  %191 = phi i64 [ %289, %285 ], [ 0, %183 ]
  %192 = phi i32 [ %287, %285 ], [ 0, %183 ]
  %193 = phi float* [ %286, %285 ], [ %185, %183 ]
  %194 = mul i64 %191, %164
  %195 = getelementptr float, float* %185, i64 %194
  %196 = add i64 %194, %165
  %197 = getelementptr float, float* %185, i64 %196
  br i1 %163, label %198, label %285

198:                                              ; preds = %190
  br i1 %171, label %199, label %217

199:                                              ; preds = %280, %217, %198
  %200 = phi i64 [ 0, %217 ], [ 0, %198 ], [ %172, %280 ]
  %201 = xor i64 %200, -1
  %202 = add nsw i64 %201, %165
  br i1 %179, label %214, label %203

203:                                              ; preds = %199, %203
  %204 = phi i64 [ %211, %203 ], [ %200, %199 ]
  %205 = phi i64 [ %212, %203 ], [ %178, %199 ]
  %206 = getelementptr inbounds float, float* %6, i64 %204
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds float, float* %193, i64 %204
  %209 = load float, float* %208, align 4
  %210 = fadd float %207, %209
  store float %210, float* %208, align 4
  %211 = add nuw nsw i64 %204, 1
  %212 = add i64 %205, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !246

214:                                              ; preds = %203, %199
  %215 = phi i64 [ %200, %199 ], [ %211, %203 ]
  %216 = icmp ult i64 %202, 3
  br i1 %216, label %285, label %290

217:                                              ; preds = %198
  %218 = icmp ult float* %195, %166
  %219 = icmp ugt float* %197, %6
  %220 = and i1 %218, %219
  br i1 %220, label %199, label %221

221:                                              ; preds = %217
  br i1 %174, label %261, label %222

222:                                              ; preds = %221, %222
  %223 = phi i64 [ %258, %222 ], [ 0, %221 ]
  %224 = phi i64 [ %259, %222 ], [ %175, %221 ]
  %225 = getelementptr inbounds float, float* %6, i64 %223
  %226 = bitcast float* %225 to <4 x float>*
  %227 = load <4 x float>, <4 x float>* %226, align 4, !alias.scope !247
  %228 = getelementptr inbounds float, float* %225, i64 4
  %229 = bitcast float* %228 to <4 x float>*
  %230 = load <4 x float>, <4 x float>* %229, align 4, !alias.scope !247
  %231 = getelementptr inbounds float, float* %193, i64 %223
  %232 = bitcast float* %231 to <4 x float>*
  %233 = load <4 x float>, <4 x float>* %232, align 4, !alias.scope !250, !noalias !247
  %234 = getelementptr inbounds float, float* %231, i64 4
  %235 = bitcast float* %234 to <4 x float>*
  %236 = load <4 x float>, <4 x float>* %235, align 4, !alias.scope !250, !noalias !247
  %237 = fadd <4 x float> %227, %233
  %238 = fadd <4 x float> %230, %236
  %239 = bitcast float* %231 to <4 x float>*
  store <4 x float> %237, <4 x float>* %239, align 4, !alias.scope !250, !noalias !247
  %240 = bitcast float* %234 to <4 x float>*
  store <4 x float> %238, <4 x float>* %240, align 4, !alias.scope !250, !noalias !247
  %241 = or i64 %223, 8
  %242 = getelementptr inbounds float, float* %6, i64 %241
  %243 = bitcast float* %242 to <4 x float>*
  %244 = load <4 x float>, <4 x float>* %243, align 4, !alias.scope !247
  %245 = getelementptr inbounds float, float* %242, i64 4
  %246 = bitcast float* %245 to <4 x float>*
  %247 = load <4 x float>, <4 x float>* %246, align 4, !alias.scope !247
  %248 = getelementptr inbounds float, float* %193, i64 %241
  %249 = bitcast float* %248 to <4 x float>*
  %250 = load <4 x float>, <4 x float>* %249, align 4, !alias.scope !250, !noalias !247
  %251 = getelementptr inbounds float, float* %248, i64 4
  %252 = bitcast float* %251 to <4 x float>*
  %253 = load <4 x float>, <4 x float>* %252, align 4, !alias.scope !250, !noalias !247
  %254 = fadd <4 x float> %244, %250
  %255 = fadd <4 x float> %247, %253
  %256 = bitcast float* %248 to <4 x float>*
  store <4 x float> %254, <4 x float>* %256, align 4, !alias.scope !250, !noalias !247
  %257 = bitcast float* %251 to <4 x float>*
  store <4 x float> %255, <4 x float>* %257, align 4, !alias.scope !250, !noalias !247
  %258 = add i64 %223, 16
  %259 = add i64 %224, -2
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %222, !llvm.loop !252

261:                                              ; preds = %222, %221
  %262 = phi i64 [ 0, %221 ], [ %258, %222 ]
  br i1 %176, label %280, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds float, float* %6, i64 %262
  %265 = bitcast float* %264 to <4 x float>*
  %266 = load <4 x float>, <4 x float>* %265, align 4, !alias.scope !247
  %267 = getelementptr inbounds float, float* %264, i64 4
  %268 = bitcast float* %267 to <4 x float>*
  %269 = load <4 x float>, <4 x float>* %268, align 4, !alias.scope !247
  %270 = getelementptr inbounds float, float* %193, i64 %262
  %271 = bitcast float* %270 to <4 x float>*
  %272 = load <4 x float>, <4 x float>* %271, align 4, !alias.scope !250, !noalias !247
  %273 = getelementptr inbounds float, float* %270, i64 4
  %274 = bitcast float* %273 to <4 x float>*
  %275 = load <4 x float>, <4 x float>* %274, align 4, !alias.scope !250, !noalias !247
  %276 = fadd <4 x float> %266, %272
  %277 = fadd <4 x float> %269, %275
  %278 = bitcast float* %270 to <4 x float>*
  store <4 x float> %276, <4 x float>* %278, align 4, !alias.scope !250, !noalias !247
  %279 = bitcast float* %273 to <4 x float>*
  store <4 x float> %277, <4 x float>* %279, align 4, !alias.scope !250, !noalias !247
  br label %280

280:                                              ; preds = %261, %263
  br i1 %177, label %285, label %199

281:                                              ; preds = %285, %183
  %282 = phi float* [ %185, %183 ], [ %286, %285 ]
  %283 = add nuw nsw i32 %184, 1
  %284 = icmp eq i32 %283, %57
  br i1 %284, label %186, label %183

285:                                              ; preds = %214, %290, %280, %190
  %286 = getelementptr inbounds float, float* %193, i64 %164
  %287 = add nuw nsw i32 %192, 1
  %288 = icmp eq i32 %287, %58
  %289 = add i64 %191, 1
  br i1 %288, label %281, label %190

290:                                              ; preds = %214, %290
  %291 = phi i64 [ %315, %290 ], [ %215, %214 ]
  %292 = getelementptr inbounds float, float* %6, i64 %291
  %293 = load float, float* %292, align 4
  %294 = getelementptr inbounds float, float* %193, i64 %291
  %295 = load float, float* %294, align 4
  %296 = fadd float %293, %295
  store float %296, float* %294, align 4
  %297 = add nuw nsw i64 %291, 1
  %298 = getelementptr inbounds float, float* %6, i64 %297
  %299 = load float, float* %298, align 4
  %300 = getelementptr inbounds float, float* %193, i64 %297
  %301 = load float, float* %300, align 4
  %302 = fadd float %299, %301
  store float %302, float* %300, align 4
  %303 = add nuw nsw i64 %291, 2
  %304 = getelementptr inbounds float, float* %6, i64 %303
  %305 = load float, float* %304, align 4
  %306 = getelementptr inbounds float, float* %193, i64 %303
  %307 = load float, float* %306, align 4
  %308 = fadd float %305, %307
  store float %308, float* %306, align 4
  %309 = add nuw nsw i64 %291, 3
  %310 = getelementptr inbounds float, float* %6, i64 %309
  %311 = load float, float* %310, align 4
  %312 = getelementptr inbounds float, float* %193, i64 %309
  %313 = load float, float* %312, align 4
  %314 = fadd float %311, %313
  store float %314, float* %312, align 4
  %315 = add nuw nsw i64 %291, 4
  %316 = icmp eq i64 %315, %165
  br i1 %316, label %285, label %290, !llvm.loop !253

317:                                              ; preds = %186, %135, %157
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %121) #11
  ret void

318:                                              ; preds = %137, %327
  %319 = phi i64 [ 0, %137 ], [ %329, %327 ]
  %320 = phi float* [ %8, %137 ], [ %328, %327 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %138) #11
  store i32 -1431655766, i32* %153, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %154, i8 0, i64 17, i1 false)
  store i32 %76, i32* %139, align 4
  store i32 %49, i32* %140, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %142) #11
  store i32 -1431655766, i32* %155, align 4
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 0, i64 17, i1 false)
  store i32 %120, i32* %143, align 4
  store i32 %49, i32* %144, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %146) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 0, i64 32, i1 false) #11
  store float 0xFFF0000000000000, float* %147, align 8
  store float 0x7FF0000000000000, float* %148, align 4
  %321 = mul nsw i64 %319, %151
  %322 = getelementptr inbounds float, float* %2, i64 %321
  %323 = load i8, i8* %149, align 4, !range !64
  %324 = icmp eq i8 %323, 0
  br i1 %324, label %326, label %325

325:                                              ; preds = %318
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %13, float* %4, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %14, float* %322, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %15, float* %10, %"struct.tflite::cpu_backend_gemm::GemmParams"* nonnull dereferenceable(40) %16, %"class.tflite::CpuBackendContext"* %11) #11
  br label %327

326:                                              ; preds = %318
  call void @_ZN6tflite16cpu_backend_gemm6detail18GemmImplUsingEigen3RunERKNS0_12MatrixParamsIfEEPKfS6_S8_S6_PfRKNS0_10GemmParamsIffLNS0_18QuantizationFlavorE0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %13, float* %4, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %14, float* %322, %"struct.tflite::cpu_backend_gemm::MatrixParams"* nonnull dereferenceable(20) %15, float* %10, %"struct.tflite::cpu_backend_gemm::GemmParams"* nonnull dereferenceable(40) %16, %"class.tflite::CpuBackendContext"* %11) #11
  br label %327

327:                                              ; preds = %325, %326
  call void @_ZN6tflite13optimized_ops6Col2imIfEEvPKT_iiiiiiiiiiiPS2_(float* %10, i32 %88, i32 %57, i32 %58, i32 %97, i32 %98, i32 %101, i32 %108, i32 %105, i32 %112, i32 %115, i32 %118, float* %320)
  %328 = getelementptr inbounds float, float* %320, i64 %150
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %146) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %142) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %138) #11
  %329 = add nuw nsw i64 %319, 1
  %330 = icmp slt i64 %329, %152
  br i1 %330, label %318, label %157
}

declare %"class.tflite::CpuBackendContext"* @_ZN6tflite17CpuBackendContext14GetFromContextEP13TfLiteContext(%struct.TfLiteContext*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops6Col2imIfEEvPKT_iiiiiiiiiiiPS2_(float*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float*) local_unnamed_addr #0 comdat {
  %14 = sub i32 %2, %4
  %15 = add i32 %14, %6
  %16 = add i32 %15, %8
  %17 = sdiv i32 %16, %10
  %18 = sub i32 %3, %5
  %19 = add i32 %18, %7
  %20 = add i32 %19, %9
  %21 = sdiv i32 %20, %11
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %54, label %23

23:                                               ; preds = %13
  %24 = icmp slt i32 %21, 0
  %25 = icmp slt i32 %1, 1
  %26 = sext i32 %1 to i64
  %27 = mul nsw i32 %18, %1
  %28 = sext i32 %27 to i64
  %29 = sub i32 0, %7
  %30 = sext i32 %29 to i64
  %31 = sext i32 %11 to i64
  %32 = sext i32 %5 to i64
  %33 = sub i32 0, %6
  %34 = sext i32 %33 to i64
  %35 = sext i32 %10 to i64
  %36 = sext i32 %4 to i64
  %37 = sext i32 %3 to i64
  %38 = icmp sgt i32 %4, 0
  %39 = icmp sgt i32 %5, 0
  %40 = zext i32 %1 to i64
  %41 = and i64 %40, 4294967288
  %42 = add nsw i64 %41, -8
  %43 = lshr exact i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i32 %1, 8
  %46 = and i64 %40, 4294967288
  %47 = and i64 %44, 1
  %48 = icmp eq i64 %42, 0
  %49 = sub nuw nsw i64 %44, %47
  %50 = icmp eq i64 %47, 0
  %51 = icmp eq i64 %46, %40
  %52 = and i64 %40, 3
  %53 = icmp eq i64 %52, 0
  br label %55

54:                                               ; preds = %63, %13
  ret void

55:                                               ; preds = %63, %23
  %56 = phi i64 [ %65, %63 ], [ %34, %23 ]
  %57 = phi i32 [ %66, %63 ], [ 0, %23 ]
  %58 = phi float* [ %64, %63 ], [ %0, %23 ]
  br i1 %24, label %63, label %59

59:                                               ; preds = %55
  %60 = mul nsw i64 %56, %37
  %61 = add nsw i64 %56, %36
  %62 = trunc i64 %56 to i32
  br label %68

63:                                               ; preds = %85, %55
  %64 = phi float* [ %58, %55 ], [ %86, %85 ]
  %65 = add i64 %56, %35
  %66 = add nuw i32 %57, 1
  %67 = icmp eq i32 %57, %17
  br i1 %67, label %54, label %55

68:                                               ; preds = %85, %59
  %69 = phi i64 [ %87, %85 ], [ %30, %59 ]
  %70 = phi i32 [ %88, %85 ], [ 0, %59 ]
  %71 = phi float* [ %86, %85 ], [ %58, %59 ]
  br i1 %38, label %72, label %85

72:                                               ; preds = %68
  %73 = add nsw i64 %69, %60
  %74 = mul nsw i64 %73, %26
  %75 = getelementptr inbounds float, float* %12, i64 %74
  %76 = add nsw i64 %69, %32
  %77 = trunc i64 %69 to i32
  br label %78

78:                                               ; preds = %72, %90
  %79 = phi i32 [ %62, %72 ], [ %94, %90 ]
  %80 = phi float* [ %75, %72 ], [ %93, %90 ]
  %81 = phi float* [ %71, %72 ], [ %91, %90 ]
  br i1 %39, label %82, label %90

82:                                               ; preds = %78
  %83 = icmp sgt i32 %79, -1
  %84 = icmp slt i32 %79, %2
  br label %97

85:                                               ; preds = %90, %68
  %86 = phi float* [ %71, %68 ], [ %91, %90 ]
  %87 = add i64 %69, %31
  %88 = add nuw i32 %70, 1
  %89 = icmp eq i32 %70, %21
  br i1 %89, label %63, label %68

90:                                               ; preds = %225, %78
  %91 = phi float* [ %81, %78 ], [ %227, %225 ]
  %92 = phi float* [ %80, %78 ], [ %226, %225 ]
  %93 = getelementptr inbounds float, float* %92, i64 %28
  %94 = add nsw i32 %79, 1
  %95 = sext i32 %94 to i64
  %96 = icmp sgt i64 %61, %95
  br i1 %96, label %78, label %85

97:                                               ; preds = %82, %225
  %98 = phi i64 [ 0, %82 ], [ %231, %225 ]
  %99 = phi i32 [ %77, %82 ], [ %228, %225 ]
  %100 = phi float* [ %80, %82 ], [ %226, %225 ]
  %101 = phi float* [ %81, %82 ], [ %227, %225 ]
  %102 = mul i64 %98, %26
  %103 = getelementptr float, float* %80, i64 %102
  %104 = add i64 %102, %40
  %105 = getelementptr float, float* %80, i64 %104
  %106 = getelementptr float, float* %81, i64 %102
  %107 = getelementptr float, float* %81, i64 %104
  br i1 %83, label %108, label %225

108:                                              ; preds = %97
  %109 = icmp sgt i32 %99, -1
  %110 = and i1 %84, %109
  %111 = icmp slt i32 %99, %3
  %112 = and i1 %111, %110
  %113 = xor i1 %112, true
  %114 = or i1 %25, %113
  br i1 %114, label %225, label %115

115:                                              ; preds = %108
  br i1 %45, label %180, label %116

116:                                              ; preds = %115
  %117 = icmp ult float* %103, %107
  %118 = icmp ult float* %106, %105
  %119 = and i1 %117, %118
  br i1 %119, label %180, label %120

120:                                              ; preds = %116
  br i1 %48, label %160, label %121

121:                                              ; preds = %120, %121
  %122 = phi i64 [ %157, %121 ], [ 0, %120 ]
  %123 = phi i64 [ %158, %121 ], [ %49, %120 ]
  %124 = getelementptr inbounds float, float* %101, i64 %122
  %125 = bitcast float* %124 to <4 x float>*
  %126 = load <4 x float>, <4 x float>* %125, align 4, !alias.scope !254
  %127 = getelementptr inbounds float, float* %124, i64 4
  %128 = bitcast float* %127 to <4 x float>*
  %129 = load <4 x float>, <4 x float>* %128, align 4, !alias.scope !254
  %130 = getelementptr inbounds float, float* %100, i64 %122
  %131 = bitcast float* %130 to <4 x float>*
  %132 = load <4 x float>, <4 x float>* %131, align 4, !alias.scope !257, !noalias !254
  %133 = getelementptr inbounds float, float* %130, i64 4
  %134 = bitcast float* %133 to <4 x float>*
  %135 = load <4 x float>, <4 x float>* %134, align 4, !alias.scope !257, !noalias !254
  %136 = fadd <4 x float> %126, %132
  %137 = fadd <4 x float> %129, %135
  %138 = bitcast float* %130 to <4 x float>*
  store <4 x float> %136, <4 x float>* %138, align 4, !alias.scope !257, !noalias !254
  %139 = bitcast float* %133 to <4 x float>*
  store <4 x float> %137, <4 x float>* %139, align 4, !alias.scope !257, !noalias !254
  %140 = or i64 %122, 8
  %141 = getelementptr inbounds float, float* %101, i64 %140
  %142 = bitcast float* %141 to <4 x float>*
  %143 = load <4 x float>, <4 x float>* %142, align 4, !alias.scope !254
  %144 = getelementptr inbounds float, float* %141, i64 4
  %145 = bitcast float* %144 to <4 x float>*
  %146 = load <4 x float>, <4 x float>* %145, align 4, !alias.scope !254
  %147 = getelementptr inbounds float, float* %100, i64 %140
  %148 = bitcast float* %147 to <4 x float>*
  %149 = load <4 x float>, <4 x float>* %148, align 4, !alias.scope !257, !noalias !254
  %150 = getelementptr inbounds float, float* %147, i64 4
  %151 = bitcast float* %150 to <4 x float>*
  %152 = load <4 x float>, <4 x float>* %151, align 4, !alias.scope !257, !noalias !254
  %153 = fadd <4 x float> %143, %149
  %154 = fadd <4 x float> %146, %152
  %155 = bitcast float* %147 to <4 x float>*
  store <4 x float> %153, <4 x float>* %155, align 4, !alias.scope !257, !noalias !254
  %156 = bitcast float* %150 to <4 x float>*
  store <4 x float> %154, <4 x float>* %156, align 4, !alias.scope !257, !noalias !254
  %157 = add i64 %122, 16
  %158 = add i64 %123, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %121, !llvm.loop !259

160:                                              ; preds = %121, %120
  %161 = phi i64 [ 0, %120 ], [ %157, %121 ]
  br i1 %50, label %179, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds float, float* %101, i64 %161
  %164 = bitcast float* %163 to <4 x float>*
  %165 = load <4 x float>, <4 x float>* %164, align 4, !alias.scope !254
  %166 = getelementptr inbounds float, float* %163, i64 4
  %167 = bitcast float* %166 to <4 x float>*
  %168 = load <4 x float>, <4 x float>* %167, align 4, !alias.scope !254
  %169 = getelementptr inbounds float, float* %100, i64 %161
  %170 = bitcast float* %169 to <4 x float>*
  %171 = load <4 x float>, <4 x float>* %170, align 4, !alias.scope !257, !noalias !254
  %172 = getelementptr inbounds float, float* %169, i64 4
  %173 = bitcast float* %172 to <4 x float>*
  %174 = load <4 x float>, <4 x float>* %173, align 4, !alias.scope !257, !noalias !254
  %175 = fadd <4 x float> %165, %171
  %176 = fadd <4 x float> %168, %174
  %177 = bitcast float* %169 to <4 x float>*
  store <4 x float> %175, <4 x float>* %177, align 4, !alias.scope !257, !noalias !254
  %178 = bitcast float* %172 to <4 x float>*
  store <4 x float> %176, <4 x float>* %178, align 4, !alias.scope !257, !noalias !254
  br label %179

179:                                              ; preds = %160, %162
  br i1 %51, label %225, label %180

180:                                              ; preds = %179, %116, %115
  %181 = phi i64 [ 0, %116 ], [ 0, %115 ], [ %46, %179 ]
  %182 = xor i64 %181, -1
  %183 = add nsw i64 %182, %40
  br i1 %53, label %195, label %184

184:                                              ; preds = %180, %184
  %185 = phi i64 [ %192, %184 ], [ %181, %180 ]
  %186 = phi i64 [ %193, %184 ], [ %52, %180 ]
  %187 = getelementptr inbounds float, float* %101, i64 %185
  %188 = load float, float* %187, align 4
  %189 = getelementptr inbounds float, float* %100, i64 %185
  %190 = load float, float* %189, align 4
  %191 = fadd float %188, %190
  store float %191, float* %189, align 4
  %192 = add nuw nsw i64 %185, 1
  %193 = add i64 %186, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !260

195:                                              ; preds = %184, %180
  %196 = phi i64 [ %181, %180 ], [ %192, %184 ]
  %197 = icmp ult i64 %183, 3
  br i1 %197, label %225, label %198

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %223, %198 ], [ %196, %195 ]
  %200 = getelementptr inbounds float, float* %101, i64 %199
  %201 = load float, float* %200, align 4
  %202 = getelementptr inbounds float, float* %100, i64 %199
  %203 = load float, float* %202, align 4
  %204 = fadd float %201, %203
  store float %204, float* %202, align 4
  %205 = add nuw nsw i64 %199, 1
  %206 = getelementptr inbounds float, float* %101, i64 %205
  %207 = load float, float* %206, align 4
  %208 = getelementptr inbounds float, float* %100, i64 %205
  %209 = load float, float* %208, align 4
  %210 = fadd float %207, %209
  store float %210, float* %208, align 4
  %211 = add nuw nsw i64 %199, 2
  %212 = getelementptr inbounds float, float* %101, i64 %211
  %213 = load float, float* %212, align 4
  %214 = getelementptr inbounds float, float* %100, i64 %211
  %215 = load float, float* %214, align 4
  %216 = fadd float %213, %215
  store float %216, float* %214, align 4
  %217 = add nuw nsw i64 %199, 3
  %218 = getelementptr inbounds float, float* %101, i64 %217
  %219 = load float, float* %218, align 4
  %220 = getelementptr inbounds float, float* %100, i64 %217
  %221 = load float, float* %220, align 4
  %222 = fadd float %219, %221
  store float %222, float* %220, align 4
  %223 = add nuw nsw i64 %199, 4
  %224 = icmp eq i64 %223, %40
  br i1 %224, label %225, label %198, !llvm.loop !261

225:                                              ; preds = %195, %198, %179, %108, %97
  %226 = getelementptr inbounds float, float* %100, i64 %26
  %227 = getelementptr inbounds float, float* %101, i64 %26
  %228 = add nsw i32 %99, 1
  %229 = sext i32 %228 to i64
  %230 = icmp sgt i64 %76, %229
  %231 = add i64 %98, 1
  br i1 %230, label %97, label %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIffffLNS0_18QuantizationFlavorE0EE3RunERKNS0_12MatrixParamsIfEEPKfS8_SA_S8_PfRKNS0_10GemmParamsIffLS3_0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::GemmParams"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat", align 8
  %10 = alloca %"struct.ruy::Mat", align 8
  %11 = alloca %"struct.ruy::Mat", align 8
  %12 = alloca %"class.ruy::MulParams", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !64
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint float* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 3
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  br i1 %15, label %28, label %35

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %0, i64 0, i32 4
  %30 = load i8, i8* %29, align 4
  %31 = icmp eq i8 %30, 1
  %32 = zext i1 %31 to i8
  %33 = icmp eq i8 %30, 2
  %34 = select i1 %33, i8 3, i8 %32
  br label %35

35:                                               ; preds = %8, %28
  %36 = phi i8 [ %34, %28 ], [ 0, %8 ]
  %37 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = select i1 %39, i32 %43, i32 %41
  %45 = ptrtoint float* %3 to i64
  %46 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 3
  %47 = bitcast float* %46 to i32*
  %48 = load i32, i32* %47, align 4
  br i1 %15, label %49, label %56

49:                                               ; preds = %35
  %50 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %2, i64 0, i32 4
  %51 = load i8, i8* %50, align 4
  %52 = icmp eq i8 %51, 1
  %53 = zext i1 %52 to i8
  %54 = icmp eq i8 %51, 2
  %55 = select i1 %54, i8 3, i8 %53
  br label %56

56:                                               ; preds = %35, %49
  %57 = phi i8 [ %55, %49 ], [ 0, %35 ]
  %58 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  %60 = icmp ne i32 %59, 0
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = select i1 %60, i32 %64, i32 %62
  %66 = ptrtoint float* %5 to i64
  %67 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams", %"struct.tflite::cpu_backend_gemm::MatrixParams"* %4, i64 0, i32 3
  %68 = bitcast float* %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = bitcast %"class.ruy::MulParams"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 1
  %72 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 2
  %73 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 3
  %74 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 5
  %75 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %12, i64 0, i32 6
  %76 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams"* %6 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = bitcast float* %71 to i32*
  store i32 %77, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  store i32 %80, i32* %72, align 4
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 2
  %82 = bitcast float** %81 to <2 x i64>*
  %83 = load <2 x i64>, <2 x i64>* %82, align 8
  %84 = bitcast float** %73 to <2 x i64>*
  store <2 x i64> %83, <2 x i64>* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 4
  %86 = bitcast float** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.ruy::MulParams"* %12 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 5
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 8
  %92 = bitcast float* %74 to i32*
  store i32 %91, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams", %"struct.tflite::cpu_backend_gemm::GemmParams"* %6, i64 0, i32 6
  %94 = bitcast float* %93 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = bitcast float* %75 to i32*
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.ruy::Context"*, %"class.ruy::Context"** %97, align 8
  %99 = bitcast %"struct.ruy::Mat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 1, i32 2
  %101 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 2
  %102 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %99, i8 -86, i64 24, i1 false) #11, !alias.scope !262
  %103 = bitcast i8* %102 to i32*
  store i32 -1431655936, i32* %103, align 4, !alias.scope !262
  %104 = bitcast %"struct.ruy::Mat"* %9 to i64*
  store i64 %24, i64* %104, align 8, !alias.scope !262
  %105 = zext i32 %23 to i64
  %106 = zext i1 %18 to i64
  %107 = shl nuw nsw i64 %106, 32
  %108 = or i64 %107, %105
  %109 = zext i32 %22 to i64
  %110 = shl nuw i64 %109, 32
  %111 = zext i32 %20 to i64
  %112 = or i64 %110, %111
  %113 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %9, i64 0, i32 1
  %114 = bitcast %"struct.ruy::MatLayout"* %113 to i64*
  store i64 %112, i64* %114, align 8, !alias.scope !262
  %115 = bitcast i32* %100 to i40*
  %116 = trunc i64 %108 to i40
  store i40 %116, i40* %115, align 8, !alias.scope !262
  %117 = bitcast float* %101 to i32*
  store i32 %27, i32* %117, align 8, !alias.scope !262
  store i8 %36, i8* %102, align 4, !alias.scope !262
  %118 = bitcast %"struct.ruy::Mat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #11
  %119 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 1, i32 2
  %120 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 2
  %121 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 24, i1 false) #11, !alias.scope !265
  %122 = bitcast i8* %121 to i32*
  store i32 -1431655936, i32* %122, align 4, !alias.scope !265
  %123 = bitcast %"struct.ruy::Mat"* %10 to i64*
  store i64 %45, i64* %123, align 8, !alias.scope !265
  %124 = zext i32 %44 to i64
  %125 = zext i1 %39 to i64
  %126 = shl nuw nsw i64 %125, 32
  %127 = or i64 %126, %124
  %128 = zext i32 %43 to i64
  %129 = shl nuw i64 %128, 32
  %130 = zext i32 %41 to i64
  %131 = or i64 %129, %130
  %132 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %10, i64 0, i32 1
  %133 = bitcast %"struct.ruy::MatLayout"* %132 to i64*
  store i64 %131, i64* %133, align 8, !alias.scope !265
  %134 = bitcast i32* %119 to i40*
  %135 = trunc i64 %127 to i40
  store i40 %135, i40* %134, align 8, !alias.scope !265
  %136 = bitcast float* %120 to i32*
  store i32 %48, i32* %136, align 8, !alias.scope !265
  store i8 %57, i8* %121, align 4, !alias.scope !265
  %137 = bitcast %"struct.ruy::Mat"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %137) #11
  %138 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 1, i32 2
  %139 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 2
  %140 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %137, i8 -86, i64 24, i1 false) #11, !alias.scope !268
  %141 = bitcast i8* %140 to i32*
  store i32 -1431655936, i32* %141, align 4, !alias.scope !268
  %142 = bitcast %"struct.ruy::Mat"* %11 to i64*
  store i64 %66, i64* %142, align 8, !alias.scope !268
  %143 = zext i32 %65 to i64
  %144 = zext i1 %60 to i64
  %145 = shl nuw nsw i64 %144, 32
  %146 = or i64 %145, %143
  %147 = zext i32 %64 to i64
  %148 = shl nuw i64 %147, 32
  %149 = zext i32 %62 to i64
  %150 = or i64 %148, %149
  %151 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %11, i64 0, i32 1
  %152 = bitcast %"struct.ruy::MatLayout"* %151 to i64*
  store i64 %150, i64* %152, align 8, !alias.scope !268
  %153 = bitcast i32* %138 to i40*
  %154 = trunc i64 %146 to i40
  store i40 %154, i40* %153, align 8, !alias.scope !268
  %155 = bitcast float* %139 to i32*
  store i32 %69, i32* %155, align 8, !alias.scope !268
  %156 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %98) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %156, %"struct.ruy::Mat"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %137) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %99) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %70) #11
  ret void
}

declare void @_ZN6tflite16cpu_backend_gemm6detail18GemmImplUsingEigen3RunERKNS0_12MatrixParamsIfEEPKfS6_S8_S6_PfRKNS0_10GemmParamsIffLNS0_18QuantizationFlavorE0EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::MatrixParams"* dereferenceable(20), float*, %"struct.tflite::cpu_backend_gemm::GemmParams"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EfffNS_9MulParamsIffEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat"* dereferenceable(32), %"struct.ruy::Mat"* dereferenceable(32), %"class.ruy::MulParams"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::TrMulParams", align 8
  %7 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %12 = bitcast %"struct.ruy::Mat"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = load float, float* %8, align 8
  %22 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 4
  %24 = icmp eq i8 %20, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 272, i1 false)
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 2
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 5
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 2
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 5
  store i8 0, i8* %39, align 4
  %40 = bitcast i8** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 21, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 11, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 22, i1 false) #11
  %49 = bitcast %"class.ruy::SidePair"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %46, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 2
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 5
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 11, i1 false) #11
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %57, align 1
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 7
  %65 = fptosi float %21 to i32
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3
  %67 = bitcast %"class.ruy::SidePair.32"* %66 to i24*
  store i24 262401, i24* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -86, i64 5, i1 false) #11
  %69 = bitcast i8** %28 to i64*
  store i64 %13, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  store i32 %16, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 2
  store i32 %18, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  store i8 %25, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 -86, i64 3, i1 false) #11
  store i32 %65, i32* %29, align 8
  store i8 %23, i8* %30, align 4
  %75 = bitcast %"struct.ruy::Mat"* %1 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !271
  %77 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1
  %78 = bitcast %"struct.ruy::MatLayout"* %77 to i8*
  %79 = load float, float* %9, align 8, !noalias !271
  %80 = fptosi float %79 to i32
  %81 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 3
  %82 = load i8, i8* %81, align 4, !noalias !271
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1
  %84 = bitcast %"struct.ruy::EMat"* %83 to i24*
  store i24 262401, i24* %84, align 8
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -86, i64 5, i1 false) #11
  %86 = bitcast i8** %31 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3
  %88 = bitcast %"struct.ruy::MatLayout"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %78, i64 13, i1 false)
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 -86, i64 3, i1 false) #11
  store i32 %80, i32* %32, align 8
  store i8 %82, i8* %33, align 4
  %90 = bitcast %"struct.ruy::Mat"* %4 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !274
  %92 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 1
  %93 = bitcast %"struct.ruy::MatLayout"* %92 to i8*
  %94 = load float, float* %10, align 8, !noalias !274
  %95 = fptosi float %94 to i32
  %96 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %4, i64 0, i32 3
  %97 = load i8, i8* %96, align 4, !noalias !274
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4
  %99 = bitcast %"struct.ruy::EMat"* %98 to i24*
  store i24 262401, i24* %99, align 8
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %100, i8 -86, i64 5, i1 false) #11
  %101 = bitcast i8** %37 to i64*
  store i64 %91, i64* %101, align 8
  %102 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3
  %103 = bitcast %"struct.ruy::MatLayout"* %102 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %103, i8* align 4 %93, i64 13, i1 false)
  %104 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %104, i8 -86, i64 3, i1 false) #11
  store i32 %95, i32* %38, align 8
  store i8 %97, i8* %39, align 4
  %105 = bitcast i8** %64 to %"class.ruy::MulParams"**
  store %"class.ruy::MulParams"* %2, %"class.ruy::MulParams"** %105, align 8
  %106 = icmp eq i8 %11, 16
  br i1 %106, label %107, label %196

107:                                              ; preds = %5
  br i1 %24, label %116, label %108

108:                                              ; preds = %107
  %109 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %110 = load i8, i8* %109, align 4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %116

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 3
  %114 = load i8, i8* %113, align 4
  %115 = icmp eq i8 %114, 0
  br i1 %115, label %154, label %116

116:                                              ; preds = %107, %112, %108
  store i8 2, i8* %26, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %118 = bitcast %"struct.ruy::PEMat"* %117 to i24*
  store i24 262401, i24* %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %120 = bitcast %"struct.ruy::Type"* %119 to i24*
  store i24 262401, i24* %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %121, align 4
  %122 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %123, align 4
  %124 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %124, align 1
  store i8 1, i8* %46, align 1
  store i8 1, i8* %50, align 1
  %125 = and i32 %16, 255
  %126 = icmp eq i32 %125, 0
  %127 = add nsw i32 %16, 64
  %128 = select i1 %126, i32 %127, i32 %16
  %129 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %128, i32* %129, align 8
  %130 = sitofp i32 %65 to float
  %131 = fptosi float %130 to i32
  store i32 %131, i32* %51, align 8
  %132 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %133 = bitcast %"struct.ruy::PEMat"* %132 to i24*
  store i24 262401, i24* %133, align 8
  %134 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %135 = bitcast %"struct.ruy::Type"* %134 to i24*
  store i24 262401, i24* %135, align 8
  %136 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %138 = load i32, i32* %137, align 8
  %139 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %138, i32* %139, align 8
  %140 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %143, align 1
  store i8 1, i8* %57, align 1
  store i8 1, i8* %60, align 1
  %144 = and i32 %138, 255
  %145 = icmp eq i32 %144, 0
  %146 = add nsw i32 %138, 64
  %147 = select i1 %145, i32 %146, i32 %138
  %148 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %147, i32* %148, align 8
  %149 = sitofp i32 %80 to float
  %150 = fptosi float %149 to i32
  store i32 %150, i32* %61, align 8
  %151 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %152 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %151 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %152, align 8
  %153 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %153, align 8
  br label %197

154:                                              ; preds = %112
  store i8 16, i8* %26, align 8
  %155 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %156 = bitcast %"struct.ruy::PEMat"* %155 to i24*
  store i24 262401, i24* %156, align 8
  %157 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %158 = bitcast %"struct.ruy::Type"* %157 to i24*
  store i24 262401, i24* %158, align 8
  %159 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %159, align 4
  %160 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %160, align 8
  %161 = add i32 %15, 15
  %162 = and i32 %161, -16
  %163 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %162, i32* %163, align 4
  %164 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 1, i8* %164, align 1
  store i8 1, i8* %46, align 1
  store i8 16, i8* %50, align 1
  %165 = and i32 %16, 255
  %166 = icmp eq i32 %165, 0
  %167 = add nsw i32 %16, 64
  %168 = select i1 %166, i32 %167, i32 %16
  %169 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %168, i32* %169, align 8
  %170 = sitofp i32 %65 to float
  %171 = fptosi float %170 to i32
  store i32 %171, i32* %51, align 8
  %172 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %173 = bitcast %"struct.ruy::PEMat"* %172 to i24*
  store i24 262401, i24* %173, align 8
  %174 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %175 = bitcast %"struct.ruy::Type"* %174 to i24*
  store i24 262401, i24* %175, align 8
  %176 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %176, align 4
  %177 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %178, i32* %179, align 8
  %180 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %181 = load i32, i32* %180, align 4
  %182 = add i32 %181, 15
  %183 = and i32 %182, -16
  %184 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %183, i32* %184, align 4
  %185 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 1, i8* %185, align 1
  store i8 1, i8* %57, align 1
  store i8 16, i8* %60, align 1
  %186 = and i32 %178, 255
  %187 = icmp eq i32 %186, 0
  %188 = add nsw i32 %178, 64
  %189 = select i1 %187, i32 %188, i32 %178
  %190 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %189, i32* %190, align 8
  %191 = sitofp i32 %80 to float
  %192 = fptosi float %191 to i32
  store i32 %192, i32* %61, align 8
  %193 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %194 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %193 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %194, align 8
  %195 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %195, align 8
  br label %197

196:                                              ; preds = %5
  call void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext %11, %"struct.ruy::TrMulParams"* nonnull %6) #11
  br label %197

197:                                              ; preds = %154, %116, %196
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #11
  ret void
}

declare %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"*) local_unnamed_addr #3

declare zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"*, %"class.ruy::Ctx"*) local_unnamed_addr #5 comdat {
  %3 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 5
  %4 = load i8, i8* %3, align 4
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  %8 = load i8, i8* %7, align 1
  %9 = zext i8 %8 to i32
  switch i8 %4, label %31 [
    i8 2, label %10
    i8 3, label %15
    i8 1, label %13
  ]

10:                                               ; preds = %2
  %11 = shl nuw nsw i32 %9, 2
  %12 = icmp sgt i32 %6, %11
  br i1 %12, label %31, label %15

13:                                               ; preds = %2
  %14 = icmp sgt i32 %6, %9
  br i1 %14, label %31, label %15

15:                                               ; preds = %10, %13, %2
  %16 = tail call %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"* %1) #11
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 2
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %20 = tail call i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"* %16, i8* %18, %"struct.ruy::PEMat"* %19) #11
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %22, label %29

22:                                               ; preds = %15
  %23 = tail call i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"* %1) #11
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  %27 = load void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %26, align 8
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0
  tail call void %27(i32 %23, %"struct.ruy::EMat"* dereferenceable(40) %28, %"struct.ruy::PEMat"* %19, i32 0, i32 %25) #11
  br label %29

29:                                               ; preds = %22, %15
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 6, i32 0, i64 0
  store i8 1, i8* %30, align 1
  br label %31

31:                                               ; preds = %10, %13, %2, %29
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 5
  %33 = load i8, i8* %32, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %35 = load i32, i32* %34, align 4
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  %37 = load i8, i8* %36, align 1
  %38 = zext i8 %37 to i32
  switch i8 %33, label %60 [
    i8 2, label %41
    i8 3, label %44
    i8 1, label %39
  ]

39:                                               ; preds = %31
  %40 = icmp sgt i32 %35, %38
  br i1 %40, label %60, label %44

41:                                               ; preds = %31
  %42 = shl nuw nsw i32 %38, 2
  %43 = icmp sgt i32 %35, %42
  br i1 %43, label %60, label %44

44:                                               ; preds = %41, %39, %31
  %45 = tail call %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"* %1) #11
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 2
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %49 = tail call i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"* %45, i8* %47, %"struct.ruy::PEMat"* %48) #11
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %51, label %58

51:                                               ; preds = %44
  %52 = tail call i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"* %1) #11
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  %56 = load void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %55, align 8
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1
  tail call void %56(i32 %52, %"struct.ruy::EMat"* dereferenceable(40) %57, %"struct.ruy::PEMat"* %48, i32 0, i32 %54) #11
  br label %58

58:                                               ; preds = %51, %44
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 6, i32 0, i64 1
  store i8 1, i8* %59, align 1
  br label %60

60:                                               ; preds = %58, %41, %39, %31
  ret void
}

declare void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"*, %"class.ruy::Ctx"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %7 = bitcast i8** %6 to float**
  %8 = load float*, float** %7, align 8, !noalias !277
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %14 = bitcast i8** %13 to float**
  %15 = load float*, float** %14, align 8, !noalias !280
  %16 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, %4
  br i1 %18, label %19, label %38

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %3 to i64
  %23 = sext i32 %4 to i64
  %24 = sext i32 %12 to i64
  br label %25

25:                                               ; preds = %19, %25
  %26 = phi i64 [ %22, %19 ], [ %36, %25 ]
  %27 = mul nsw i64 %26, %24
  %28 = getelementptr inbounds float, float* %8, i64 %27
  %29 = trunc i64 %26 to i32
  %30 = and i32 %29, -16
  %31 = mul nsw i32 %30, %17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %15, i64 %32
  %34 = trunc i64 %26 to i32
  %35 = sub i32 %21, %34
  tail call void @_ZN3ruy15PackFloatAvx512EPKfS1_iiiPf(float* %28, float* getelementptr inbounds ([16 x float], [16 x float]* @_ZZN3ruy8PackImplILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi16EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf, i64 0, i64 0), i32 %12, i32 %35, i32 %10, float* %33) #11
  %36 = add i64 %26, 16
  %37 = icmp slt i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %25, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE16EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParamsFloat", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to float**
  %10 = load float*, float** %9, align 8, !noalias !283
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %18 = bitcast i8** %17 to float**
  %19 = load float*, float** %18, align 8, !noalias !286
  %20 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %25 = bitcast i8** %24 to float**
  %26 = load float*, float** %25, align 8, !noalias !289
  %27 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.ruy::KernelParamsFloat"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1176, i8* nonnull %37) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast (%"struct.ruy::KernelParamsFloat"* @__const._ZNK3ruy6KernelILNS_4PathE16EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params to i8*), i64 1176, i1 false) #11
  %38 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 18, i64 0
  %39 = bitcast float* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 64, i1 false) #11
  %40 = mul nsw i32 %30, %23
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float* %19, i64 %41
  %43 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 0
  store float* %42, float** %43, align 8
  %44 = mul nsw i32 %32, %28
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %26, i64 %45
  %47 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 1
  store float* %46, float** %47, align 8
  %48 = mul nsw i32 %32, %16
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, float* %10, i64 %49
  %51 = sext i32 %30 to i64
  %52 = getelementptr inbounds float, float* %50, i64 %51
  %53 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 2
  store float* %52, float** %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 3
  %55 = bitcast i8* %2 to float**
  %56 = load float*, float** %55, align 8
  %57 = icmp eq float* %56, null
  %58 = select i1 %57, float* %38, float* %56
  store float* %58, float** %54, align 8
  %59 = xor i1 %57, true
  %60 = zext i1 %59 to i8
  %61 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 16
  store i8 %60, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 4
  store i32 %30, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 5
  store i32 %32, i32* %63, align 4
  %64 = add nsw i32 %34, -16
  %65 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 6
  store i32 %64, i32* %65, align 8
  %66 = add nsw i32 %36, -16
  %67 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 7
  store i32 %66, i32* %67, align 4
  %68 = shl i32 %23, 2
  %69 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 10
  store i32 %68, i32* %69, align 8
  %70 = shl i32 %28, 2
  %71 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 11
  store i32 %70, i32* %71, align 4
  %72 = shl i32 %16, 2
  %73 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 12
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 13
  store i32 %21, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %2, i64 32
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 14
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %2, i64 36
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 15
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 8
  store i32 %12, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParamsFloat", %"struct.ruy::KernelParamsFloat"* %7, i64 0, i32 9
  store i32 %14, i32* %86, align 4
  %87 = icmp eq i32 %14, 1
  br i1 %87, label %88, label %89

88:                                               ; preds = %6
  call void @_ZN3ruy26KernelFloatAvx512SingleColERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* nonnull dereferenceable(1176) %7) #11
  br label %90

89:                                               ; preds = %6
  call void @_ZN3ruy17KernelFloatAvx512ERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* nonnull dereferenceable(1176) %7) #11
  br label %90

90:                                               ; preds = %88, %89
  call void @llvm.lifetime.end.p0i8(i64 1176, i8* nonnull %37) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca %"struct.ruy::Mat", align 8
  %7 = alloca %"struct.ruy::PMat", align 8
  %8 = bitcast %"struct.ruy::Mat"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %6, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 24, i1 false) #11, !alias.scope !292
  %12 = bitcast i8* %10 to i32*
  store i32 -1431655936, i32* %12, align 4, !alias.scope !292
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8, !noalias !292
  %16 = bitcast %"struct.ruy::Mat"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !292
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3
  %18 = bitcast %"struct.ruy::MatLayout"* %11 to i8*
  %19 = bitcast %"struct.ruy::MatLayout"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 13, i1 false) #11
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !292
  %22 = sitofp i32 %21 to float
  store float %22, float* %9, align 8, !alias.scope !292
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !noalias !292
  store i8 %24, i8* %10, align 4, !alias.scope !292
  %25 = bitcast %"struct.ruy::PMat"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"struct.ruy::PMat"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load i64, i64* %28, align 8, !noalias !295
  %31 = bitcast %"struct.ruy::PMat"* %7 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !295
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !295
  %35 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 1
  %36 = bitcast float** %35 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !295
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %7, i64 0, i32 2
  %39 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  %40 = bitcast %"struct.ruy::PMatLayout"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %42 = load i32, i32* %41, align 8, !noalias !295
  store i32 %42, i32* %26, align 8, !alias.scope !295
  call void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii(i32 %0, %"struct.ruy::Mat"* nonnull dereferenceable(32) %6, %"struct.ruy::PMat"* nonnull %7, i32 %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel", align 1
  %8 = alloca %"struct.ruy::Mat", align 8
  %9 = alloca %"struct.ruy::PMat", align 8
  %10 = alloca %"struct.ruy::PMat", align 8
  %11 = bitcast %"struct.ruy::Mat"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #11, !alias.scope !298
  %15 = bitcast i8* %13 to i32*
  store i32 -1431655936, i32* %15, align 4, !alias.scope !298
  %16 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !298
  %19 = bitcast %"struct.ruy::Mat"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !298
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !298
  %25 = sitofp i32 %24 to float
  store float %25, float* %12, align 8, !alias.scope !298
  %26 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %27 = load i8, i8* %26, align 4, !noalias !298
  store i8 %27, i8* %13, align 4, !alias.scope !298
  %28 = bitcast %"struct.ruy::PMat"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 40, i1 false) #11, !alias.scope !301
  %29 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 3
  %30 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8, !noalias !301
  %33 = bitcast %"struct.ruy::PMat"* %9 to i64*
  store i64 %32, i64* %33, align 8, !alias.scope !301
  %34 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 5
  %35 = bitcast i8** %34 to i64*
  %36 = load i64, i64* %35, align 8, !noalias !301
  %37 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 1
  %38 = bitcast float** %37 to i64*
  store i64 %36, i64* %38, align 8, !alias.scope !301
  %39 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6
  %40 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %9, i64 0, i32 2
  %41 = bitcast %"struct.ruy::PMatLayout"* %40 to i8*
  %42 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 4 %42, i64 16, i1 false) #11
  %43 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 7
  %44 = load i32, i32* %43, align 8, !noalias !301
  store i32 %44, i32* %29, align 8, !alias.scope !301
  %45 = bitcast %"struct.ruy::PMat"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 40, i1 false) #11, !alias.scope !304
  %46 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 3
  %47 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %48 = bitcast i8** %47 to i64*
  %49 = load i64, i64* %48, align 8, !noalias !304
  %50 = bitcast %"struct.ruy::PMat"* %10 to i64*
  store i64 %49, i64* %50, align 8, !alias.scope !304
  %51 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 5
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8, !noalias !304
  %54 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 1
  %55 = bitcast float** %54 to i64*
  store i64 %53, i64* %55, align 8, !alias.scope !304
  %56 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6
  %57 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %10, i64 0, i32 2
  %58 = bitcast %"struct.ruy::PMatLayout"* %57 to i8*
  %59 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 4 %59, i64 16, i1 false) #11
  %60 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 7
  %61 = load i32, i32* %60, align 8, !noalias !304
  store i32 %61, i32* %46, align 8, !alias.scope !304
  %62 = bitcast i8* %2 to %"class.ruy::MulParams"*
  %63 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"struct.ruy::Kernel", %"struct.ruy::Kernel"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %71) #11
  store i8 -86, i8* %71, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE(%"struct.ruy::Kernel"* nonnull %7, %"struct.ruy::PMat"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams"* dereferenceable(40) %62, i32 %64, i32 %66, i32 %68, i32 %70, %"struct.ruy::Mat"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %45) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %28) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEii(i32, %"struct.ruy::Mat"* dereferenceable(32), %"struct.ruy::PMat"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 1
  %7 = load float*, float** %6, align 8
  %8 = icmp slt i32 %3, %4
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %1, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 2
  %20 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 3
  %21 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 2
  %22 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 0
  %23 = icmp eq float* %7, null
  %24 = sext i32 %3 to i64
  %25 = sext i32 %4 to i64
  br label %26

26:                                               ; preds = %107, %9
  %27 = phi i64 [ %24, %9 ], [ %108, %107 ]
  %28 = load i32, i32* %10, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = trunc i64 %27 to i32
  %32 = trunc i64 %27 to i32
  br label %36

33:                                               ; preds = %107, %5
  ret void

34:                                               ; preds = %65, %26
  %35 = phi float [ 0.000000e+00, %26 ], [ %68, %65 ]
  br i1 %23, label %107, label %105

36:                                               ; preds = %30, %65
  %37 = phi i32 [ %102, %65 ], [ 0, %30 ]
  %38 = phi float [ %68, %65 ], [ 0.000000e+00, %30 ]
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %27, %40
  br i1 %41, label %42, label %62

42:                                               ; preds = %36
  %43 = load i32, i32* %12, align 8
  %44 = icmp slt i32 %37, %43
  br i1 %44, label %45, label %62

45:                                               ; preds = %42
  %46 = load float*, float** %14, align 8
  %47 = load i8, i8* %15, align 4
  %48 = load i32, i32* %16, align 4
  switch i8 %47, label %49 [
    i8 0, label %50
    i8 1, label %52
  ]

49:                                               ; preds = %45
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i32 [ 1, %45 ], [ %48, %49 ]
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %45 ]
  %54 = phi i32 [ %48, %50 ], [ 1, %45 ]
  %55 = mul nsw i32 %53, %37
  %56 = mul nsw i32 %54, %32
  %57 = add nsw i32 %56, %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds float, float* %46, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fadd float %60, 0.000000e+00
  br label %65

62:                                               ; preds = %42, %36
  %63 = load i32, i32* %13, align 8
  %64 = sitofp i32 %63 to float
  br label %65

65:                                               ; preds = %62, %52
  %66 = phi i32 [ %31, %62 ], [ %32, %52 ]
  %67 = phi float [ %64, %62 ], [ %61, %52 ]
  %68 = fadd float %38, %67
  %69 = load float*, float** %17, align 8
  %70 = load i8, i8* %18, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 0, %71
  %73 = and i32 %37, %72
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %66, %76
  %78 = load i8, i8* %20, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %21, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %71, i32 %80
  %84 = mul nsw i32 %81, %73
  %85 = mul nsw i32 %83, %77
  %86 = sub nsw i32 %37, %73
  %87 = sub nsw i32 %66, %77
  %88 = load i8, i8* %22, align 1
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i8 1, i8 %74
  %91 = zext i8 %90 to i32
  %92 = icmp eq i8 %88, 1
  %93 = select i1 %92, i8 1, i8 %70
  %94 = zext i8 %93 to i32
  %95 = mul nsw i32 %86, %91
  %96 = mul nsw i32 %87, %94
  %97 = add i32 %84, %85
  %98 = add i32 %97, %96
  %99 = add i32 %98, %95
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds float, float* %69, i64 %100
  store float %67, float* %101, align 4
  %102 = add nuw nsw i32 %37, 1
  %103 = load i32, i32* %10, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %36, label %34

105:                                              ; preds = %34
  %106 = getelementptr inbounds float, float* %7, i64 %27
  store float %35, float* %106, align 4
  br label %107

107:                                              ; preds = %34, %105
  %108 = add nsw i64 %27, 1
  %109 = icmp eq i64 %108, %25
  br i1 %109, label %33, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE(%"struct.ruy::Kernel"*, %"struct.ruy::PMat"* dereferenceable(40), %"struct.ruy::PMat"* dereferenceable(40), %"class.ruy::MulParams"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat"*) local_unnamed_addr #0 comdat align 2 {
  %10 = alloca i32, align 4
  %11 = alloca float, align 4
  %12 = alloca float, align 4
  %13 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %14, %6
  %16 = select i1 %15, i32 %14, i32 %6
  %17 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp slt i32 %18, %7
  %20 = select i1 %19, i32 %18, i32 %7
  %21 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp sgt i32 %16, %4
  br i1 %23, label %24, label %63

24:                                               ; preds = %9
  %25 = icmp sgt i32 %20, %5
  %26 = bitcast i32* %10 to i8*
  %27 = icmp sgt i32 %22, 0
  %28 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 0
  %29 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 1
  %30 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 2
  %31 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 3
  %32 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 2, i32 4, i32 0
  %34 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 1
  %36 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 2
  %37 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 2
  %39 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 2, i32 4, i32 0
  %40 = bitcast i32* %10 to float*
  %41 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 0
  %42 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 3
  %43 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 1
  %44 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %2, i64 0, i32 3
  %45 = getelementptr inbounds %"struct.ruy::PMat", %"struct.ruy::PMat"* %1, i64 0, i32 1
  %46 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 2
  %47 = bitcast float* %11 to i8*
  %48 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 6
  %49 = bitcast float* %12 to i8*
  %50 = getelementptr inbounds %"class.ruy::MulParams", %"class.ruy::MulParams"* %3, i64 0, i32 5
  %51 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 3
  %53 = getelementptr inbounds %"struct.ruy::Mat", %"struct.ruy::Mat"* %8, i64 0, i32 1, i32 2
  %54 = sext i32 %5 to i64
  %55 = sext i32 %20 to i64
  %56 = sext i32 %4 to i64
  %57 = sext i32 %16 to i64
  br label %58

58:                                               ; preds = %24, %64
  %59 = phi i64 [ %56, %24 ], [ %65, %64 ]
  br i1 %25, label %60, label %64

60:                                               ; preds = %58
  %61 = trunc i64 %59 to i32
  %62 = trunc i64 %59 to i32
  br label %67

63:                                               ; preds = %64, %9
  ret void

64:                                               ; preds = %204, %58
  %65 = add nsw i64 %59, 1
  %66 = icmp slt i64 %65, %57
  br i1 %66, label %58, label %63

67:                                               ; preds = %60, %204
  %68 = phi i64 [ %54, %60 ], [ %214, %204 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26)
  store i32 0, i32* %10, align 4
  br i1 %27, label %69, label %120

69:                                               ; preds = %67
  %70 = load float*, float** %28, align 8
  %71 = load i8, i8* %29, align 1
  %72 = zext i8 %71 to i32
  %73 = sub nsw i32 0, %72
  %74 = load i8, i8* %30, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %61, %76
  %78 = load i8, i8* %31, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %32, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %72, i32 %80
  %84 = mul nsw i32 %83, %77
  %85 = sub nsw i32 %61, %77
  %86 = load i8, i8* %33, align 1
  %87 = icmp eq i8 %86, 0
  %88 = select i1 %87, i8 1, i8 %74
  %89 = zext i8 %88 to i32
  %90 = icmp eq i8 %86, 1
  %91 = select i1 %90, i8 1, i8 %71
  %92 = zext i8 %91 to i32
  %93 = mul nsw i32 %85, %92
  %94 = load float*, float** %34, align 8
  %95 = load i8, i8* %35, align 1
  %96 = zext i8 %95 to i32
  %97 = sub nsw i32 0, %96
  %98 = load i8, i8* %36, align 1
  %99 = zext i8 %98 to i32
  %100 = sub nsw i32 0, %99
  %101 = trunc i64 %68 to i32
  %102 = and i32 %101, %100
  %103 = load i8, i8* %37, align 4
  %104 = icmp eq i8 %103, 0
  %105 = load i32, i32* %38, align 4
  %106 = select i1 %104, i32 %99, i32 %105
  %107 = icmp eq i8 %103, 1
  %108 = select i1 %107, i32 %96, i32 %105
  %109 = mul nsw i32 %108, %102
  %110 = sub nsw i32 %101, %102
  %111 = load i8, i8* %39, align 1
  %112 = icmp eq i8 %111, 0
  %113 = select i1 %112, i8 1, i8 %98
  %114 = zext i8 %113 to i32
  %115 = icmp eq i8 %111, 1
  %116 = select i1 %115, i8 1, i8 %95
  %117 = zext i8 %116 to i32
  %118 = mul nsw i32 %110, %117
  br label %124

119:                                              ; preds = %124
  store float %148, float* %40, align 4
  br label %120

120:                                              ; preds = %119, %67
  %121 = phi float [ %148, %119 ], [ 0.000000e+00, %67 ]
  %122 = load float*, float** %41, align 8
  %123 = icmp eq float* %122, null
  br i1 %123, label %155, label %151

124:                                              ; preds = %124, %69
  %125 = phi float [ 0.000000e+00, %69 ], [ %148, %124 ]
  %126 = phi i32 [ 0, %69 ], [ %149, %124 ]
  %127 = and i32 %126, %73
  %128 = mul nsw i32 %81, %127
  %129 = sub nsw i32 %126, %127
  %130 = mul nsw i32 %129, %89
  %131 = add i32 %128, %84
  %132 = add i32 %131, %93
  %133 = add i32 %132, %130
  %134 = sext i32 %133 to i64
  %135 = getelementptr inbounds float, float* %70, i64 %134
  %136 = load float, float* %135, align 4
  %137 = and i32 %126, %97
  %138 = mul nsw i32 %106, %137
  %139 = sub nsw i32 %126, %137
  %140 = mul nsw i32 %139, %114
  %141 = add i32 %138, %109
  %142 = add i32 %141, %118
  %143 = add i32 %142, %140
  %144 = sext i32 %143 to i64
  %145 = getelementptr inbounds float, float* %94, i64 %144
  %146 = load float, float* %145, align 4
  %147 = fmul float %136, %146
  %148 = fadd float %125, %147
  %149 = add nuw nsw i32 %126, 1
  %150 = icmp eq i32 %149, %22
  br i1 %150, label %119, label %124

151:                                              ; preds = %120
  %152 = getelementptr inbounds float, float* %122, i64 %59
  %153 = load float, float* %152, align 4
  %154 = fadd float %153, %121
  store float %154, float* %40, align 4
  br label %155

155:                                              ; preds = %120, %151
  %156 = phi float [ %121, %120 ], [ %154, %151 ]
  %157 = load i32, i32* %42, align 8
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %166, label %159

159:                                              ; preds = %155
  %160 = sitofp i32 %157 to float
  %161 = load float*, float** %43, align 8
  %162 = getelementptr inbounds float, float* %161, i64 %68
  %163 = load float, float* %162, align 4
  %164 = fmul float %163, %160
  %165 = fsub float %156, %164
  store float %165, float* %40, align 4
  br label %166

166:                                              ; preds = %155, %159
  %167 = phi float [ %156, %155 ], [ %165, %159 ]
  %168 = load i32, i32* %44, align 8
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %183, label %170

170:                                              ; preds = %166
  %171 = sitofp i32 %168 to float
  %172 = load float*, float** %45, align 8
  %173 = getelementptr inbounds float, float* %172, i64 %59
  %174 = load float, float* %173, align 4
  %175 = fmul float %174, %171
  %176 = fsub float %167, %175
  store float %176, float* %40, align 4
  %177 = or i1 %158, %169
  br i1 %177, label %183, label %178

178:                                              ; preds = %170
  %179 = mul i32 %157, %22
  %180 = mul i32 %179, %168
  %181 = sitofp i32 %180 to float
  %182 = fadd float %176, %181
  store float %182, float* %40, align 4
  br label %183

183:                                              ; preds = %166, %170, %178
  %184 = phi float [ %176, %170 ], [ %182, %178 ], [ %167, %166 ]
  %185 = load float, float* %46, align 8
  %186 = fadd float %185, %184
  store float %186, float* %40, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47)
  %187 = load float, float* %48, align 4
  store float %187, float* %11, align 4
  %188 = fcmp olt float %187, %186
  %189 = select i1 %188, float* %11, float* %40
  %190 = bitcast float* %189 to i32*
  %191 = load i32, i32* %190, align 4
  store i32 %191, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  %192 = load float, float* %50, align 8
  store float %192, float* %12, align 4
  %193 = bitcast i32 %191 to float
  %194 = fcmp ogt float %192, %193
  %195 = select i1 %194, float* %12, float* %40
  %196 = bitcast float* %195 to i32*
  %197 = load i32, i32* %196, align 4
  store i32 %197, i32* %10, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  %198 = load float*, float** %51, align 8
  %199 = load i8, i8* %52, align 4
  %200 = load i32, i32* %53, align 4
  switch i8 %199, label %201 [
    i8 0, label %202
    i8 1, label %204
  ]

201:                                              ; preds = %183
  br label %202

202:                                              ; preds = %201, %183
  %203 = phi i32 [ 1, %183 ], [ %200, %201 ]
  br label %204

204:                                              ; preds = %183, %202
  %205 = phi i32 [ %203, %202 ], [ %200, %183 ]
  %206 = phi i32 [ %200, %202 ], [ 1, %183 ]
  %207 = mul nsw i32 %205, %62
  %208 = trunc i64 %68 to i32
  %209 = mul nsw i32 %206, %208
  %210 = add nsw i32 %209, %207
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds float, float* %198, i64 %211
  %213 = bitcast float* %212 to i32*
  store i32 %197, i32* %213, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26)
  %214 = add nsw i64 %68, 1
  %215 = icmp slt i64 %214, %55
  br i1 %215, label %67, label %64
}

declare void @_ZN3ruy15PackFloatAvx512EPKfS1_iiiPf(float*, float*, i32, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN3ruy26KernelFloatAvx512SingleColERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* dereferenceable(1176)) local_unnamed_addr #3

declare void @_ZN3ruy17KernelFloatAvx512ERKNS_17KernelParamsFloatILi16ELi16EEE(%"struct.ruy::KernelParamsFloat"* dereferenceable(1176)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EfffNS_9MulParamsIffEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat align 2 {
  switch i8 %0, label %57 [
    i8 8, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %1)
  br label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 0
  store i8 2, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0
  %7 = bitcast %"struct.ruy::PEMat"* %6 to i24*
  store i24 262401, i24* %7, align 8
  %8 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 3
  %9 = bitcast %"struct.ruy::Type"* %8 to i24*
  store i24 262401, i24* %9, align 8
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %19, align 1
  %20 = and i32 %12, 255
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %12, 64
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = sitofp i32 %26 to float
  %28 = fptosi float %27 to i32
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1
  %31 = bitcast %"struct.ruy::PEMat"* %30 to i24*
  store i24 262401, i24* %31, align 8
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 3
  %33 = bitcast %"struct.ruy::Type"* %32 to i24*
  store i24 262401, i24* %33, align 8
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %43, align 1
  %44 = and i32 %36, 255
  %45 = icmp eq i32 %44, 0
  %46 = add nsw i32 %36, 64
  %47 = select i1 %45, i32 %46, i32 %36
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = sitofp i32 %50 to float
  %52 = fptosi float %51 to i32
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 1, i32 0, i64 0
  %55 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %54 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %56, align 8
  br label %57

57:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EfffNS_9MulParamsIffEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %49, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 262401, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262401, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 255
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = sitofp i32 %35 to float
  %37 = fptosi float %36 to i32
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %40 = bitcast %"struct.ruy::PEMat"* %39 to i24*
  store i24 262401, i24* %40, align 8
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %42 = bitcast %"struct.ruy::Type"* %41 to i24*
  store i24 262401, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  br label %89

49:                                               ; preds = %9
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %50, align 8
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %52 = bitcast %"struct.ruy::PEMat"* %51 to i24*
  store i24 262401, i24* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %54 = bitcast %"struct.ruy::Type"* %53 to i24*
  store i24 262401, i24* %54, align 8
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %55, align 4
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %57, i32* %58, align 4
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = add i32 %60, 7
  %62 = and i32 %61, -8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %62, i32* %63, align 4
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 1, i8* %64, align 1
  %65 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %65, align 1
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %66, align 1
  %67 = and i32 %57, 255
  %68 = icmp eq i32 %67, 0
  %69 = add nsw i32 %57, 64
  %70 = select i1 %68, i32 %69, i32 %57
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %73 = load i32, i32* %72, align 8
  %74 = sitofp i32 %73 to float
  %75 = fptosi float %74 to i32
  %76 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %75, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %78 = bitcast %"struct.ruy::PEMat"* %77 to i24*
  store i24 262401, i24* %78, align 8
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %80 = bitcast %"struct.ruy::Type"* %79 to i24*
  store i24 262401, i24* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %81, align 4
  %82 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 7
  %88 = and i32 %87, -8
  br label %89

89:                                               ; preds = %49, %13
  %90 = phi i32 [ %88, %49 ], [ %48, %13 ]
  %91 = phi i8 [ 1, %49 ], [ 0, %13 ]
  %92 = phi i8 [ 8, %49 ], [ 1, %13 ]
  %93 = phi i32 [ %83, %49 ], [ %45, %13 ]
  %94 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %49 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %95 = phi void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %49 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %96 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %90, i32* %96, align 4
  %97 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 %91, i8* %97, align 1
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %98, align 1
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 %92, i8* %99, align 1
  %100 = and i32 %93, 255
  %101 = icmp eq i32 %100, 0
  %102 = add nsw i32 %93, 64
  %103 = select i1 %101, i32 %102, i32 %93
  %104 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %103, i32* %104, align 4
  %105 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %106 = load i32, i32* %105, align 8
  %107 = sitofp i32 %106 to float
  %108 = fptosi float %107 to i32
  %109 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %108, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %94, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %110, align 8
  %111 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %94, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %111, align 8
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* %95, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %112, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEffEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %7 = bitcast i8** %6 to float**
  %8 = load float*, float** %7, align 8, !noalias !307
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %14 = bitcast i8** %13 to float**
  %15 = load float*, float** %14, align 8, !noalias !310
  %16 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = icmp slt i32 %3, %4
  br i1 %18, label %19, label %38

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sext i32 %3 to i64
  %23 = sext i32 %4 to i64
  %24 = sext i32 %12 to i64
  br label %25

25:                                               ; preds = %19, %25
  %26 = phi i64 [ %22, %19 ], [ %36, %25 ]
  %27 = mul nsw i64 %26, %24
  %28 = getelementptr inbounds float, float* %8, i64 %27
  %29 = trunc i64 %26 to i32
  %30 = and i32 %29, -8
  %31 = mul nsw i32 %30, %17
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds float, float* %15, i64 %32
  %34 = trunc i64 %26 to i32
  %35 = sub i32 %21, %34
  tail call void @_ZN3ruy13PackFloatAvx2EPKfS1_iiiPf(float* %28, float* getelementptr inbounds ([8 x float], [8 x float]* @_ZZN3ruy8PackImplILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE1ELi1ELi8EEEfffE3RunENS_6TuningERKNS_3MatIfEEPNS_4PMatIfEEiiE7zerobuf, i64 0, i64 0), i32 %12, i32 %35, i32 %10, float* %33) #11
  %36 = add i64 %26, 8
  %37 = icmp slt i64 %36, %23
  br i1 %37, label %25, label %38

38:                                               ; preds = %25, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE8EfffNS_9MulParamsIffEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParamsFloat.37", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to float**
  %10 = load float*, float** %9, align 8, !noalias !313
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %18 = bitcast i8** %17 to float**
  %19 = load float*, float** %18, align 8, !noalias !316
  %20 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %25 = bitcast i8** %24 to float**
  %26 = load float*, float** %25, align 8, !noalias !319
  %27 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %30 = load i32, i32* %29, align 4
  %31 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %36 = load i32, i32* %35, align 4
  %37 = bitcast %"struct.ruy::KernelParamsFloat.37"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 376, i8* nonnull %37) #11
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* align 8 bitcast (%"struct.ruy::KernelParamsFloat.37"* @__const._ZNK3ruy6KernelILNS_4PathE8EfffNS_9MulParamsIffEEE3RunERKNS_4PMatIfEES8_RKS3_iiiiPNS_3MatIfEE.params to i8*), i64 376, i1 false) #11
  %38 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 18, i64 0
  %39 = bitcast float* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 0, i64 32, i1 false) #11
  %40 = mul nsw i32 %30, %23
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds float, float* %19, i64 %41
  %43 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 0
  store float* %42, float** %43, align 8
  %44 = mul nsw i32 %32, %28
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds float, float* %26, i64 %45
  %47 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 1
  store float* %46, float** %47, align 8
  %48 = mul nsw i32 %32, %16
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds float, float* %10, i64 %49
  %51 = sext i32 %30 to i64
  %52 = getelementptr inbounds float, float* %50, i64 %51
  %53 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 2
  store float* %52, float** %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 3
  %55 = bitcast i8* %2 to float**
  %56 = load float*, float** %55, align 8
  %57 = icmp eq float* %56, null
  %58 = select i1 %57, float* %38, float* %56
  store float* %58, float** %54, align 8
  %59 = xor i1 %57, true
  %60 = zext i1 %59 to i8
  %61 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 16
  store i8 %60, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 4
  store i32 %30, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 5
  store i32 %32, i32* %63, align 4
  %64 = add nsw i32 %34, -8
  %65 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 6
  store i32 %64, i32* %65, align 8
  %66 = add nsw i32 %36, -8
  %67 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 7
  store i32 %66, i32* %67, align 4
  %68 = shl i32 %23, 2
  %69 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 10
  store i32 %68, i32* %69, align 8
  %70 = shl i32 %28, 2
  %71 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 11
  store i32 %70, i32* %71, align 4
  %72 = shl i32 %16, 2
  %73 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 12
  store i32 %72, i32* %73, align 8
  %74 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 13
  store i32 %21, i32* %74, align 4
  %75 = getelementptr inbounds i8, i8* %2, i64 32
  %76 = bitcast i8* %75 to i32*
  %77 = load i32, i32* %76, align 8
  %78 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 14
  %79 = bitcast float* %78 to i32*
  store i32 %77, i32* %79, align 8
  %80 = getelementptr inbounds i8, i8* %2, i64 36
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 15
  %84 = bitcast float* %83 to i32*
  store i32 %82, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 8
  store i32 %12, i32* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::KernelParamsFloat.37", %"struct.ruy::KernelParamsFloat.37"* %7, i64 0, i32 9
  store i32 %14, i32* %86, align 4
  %87 = icmp eq i32 %14, 1
  br i1 %87, label %88, label %89

88:                                               ; preds = %6
  call void @_ZN3ruy24KernelFloatAvx2SingleColERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.37"* nonnull dereferenceable(376) %7) #11
  br label %90

89:                                               ; preds = %6
  call void @_ZN3ruy15KernelFloatAvx2ERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.37"* nonnull dereferenceable(376) %7) #11
  br label %90

90:                                               ; preds = %88, %89
  call void @llvm.lifetime.end.p0i8(i64 376, i8* nonnull %37) #11
  ret void
}

declare void @_ZN3ruy13PackFloatAvx2EPKfS1_iiiPf(float*, float*, i32, i32, i32, float*) local_unnamed_addr #3

declare void @_ZN3ruy24KernelFloatAvx2SingleColERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.37"* dereferenceable(376)) local_unnamed_addr #3

declare void @_ZN3ruy15KernelFloatAvx2ERKNS_17KernelParamsFloatILi8ELi8EEE(%"struct.ruy::KernelParamsFloat.37"* dereferenceable(376)) local_unnamed_addr #3

declare %"class.ruy::PrepackedCache"* @_ZN3ruy3Ctx17GetPrepackedCacheEv(%"class.ruy::Ctx"*) local_unnamed_addr #3

declare i32 @_ZN3ruy14PrepackedCache3GetEPKvPNS_5PEMatE(%"class.ruy::PrepackedCache"*, i8*, %"struct.ruy::PEMat"*) local_unnamed_addr #3

declare i32 @_ZN3ruy3Ctx19GetMainThreadTuningEv(%"class.ruy::Ctx"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops15TransposeConvV2ERKNS_10ConvParamsERKNS_12RuntimeShapeEPKhS6_S8_S6_PKiS6_PhS6_PiSC_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* dereferenceable(56), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #5 comdat {
  %14 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.79", align 4
  %15 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.79", align 4
  %16 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.81", align 4
  %17 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams.83", align 8
  %18 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %20 = load i32, i32* %18, align 8
  %21 = icmp sgt i32 %20, 5
  %22 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp sgt i32 %24, 5
  %26 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %27 = getelementptr inbounds %union.anon, %union.anon* %22, i64 0, i32 0
  %28 = load i32*, i32** %27, align 8
  %29 = bitcast %union.anon* %22 to i32*
  %30 = select i1 %21, i32* %28, i32* %29
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %union.anon, %union.anon* %26, i64 0, i32 0
  %33 = load i32*, i32** %32, align 8
  %34 = bitcast %union.anon* %26 to [5 x i32]*
  %35 = bitcast %union.anon* %26 to i32*
  %36 = select i1 %25, i32* %33, i32* %35
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %31
  %39 = select i1 %38, i32 %37, i32 %31
  %40 = getelementptr inbounds i32, i32* %28, i64 1
  %41 = getelementptr inbounds i32, i32* %28, i64 2
  %42 = bitcast %union.anon* %22 to [5 x i32]*
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %42, i64 0, i64 1
  %44 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %45 = bitcast [16 x i8]* %44 to i32*
  %46 = select i1 %21, i32* %40, i32* %43
  %47 = select i1 %21, i32* %41, i32* %45
  %48 = load i32, i32* %46, align 4
  %49 = load i32, i32* %47, align 4
  %50 = mul nsw i32 %49, %48
  %51 = getelementptr inbounds i32, i32* %33, i64 1
  %52 = getelementptr inbounds i32, i32* %33, i64 2
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %34, i64 0, i64 1
  %54 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %55 = bitcast [16 x i8]* %54 to i32*
  %56 = select i1 %25, i32* %51, i32* %53
  %57 = select i1 %25, i32* %52, i32* %55
  %58 = load i32, i32* %56, align 4
  %59 = load i32, i32* %57, align 4
  %60 = mul i32 %59, %58
  %61 = load i32, i32* %19, align 8
  %62 = icmp sgt i32 %61, 5
  %63 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %64 = getelementptr inbounds i32, i32* %28, i64 3
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1, i64 4
  %66 = bitcast i8* %65 to i32*
  %67 = select i1 %21, i32* %64, i32* %66
  %68 = load i32, i32* %67, align 4
  %69 = getelementptr inbounds %union.anon, %union.anon* %63, i64 0, i32 0
  %70 = load i32*, i32** %69, align 8
  %71 = getelementptr inbounds i32, i32* %70, i64 3
  %72 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %73 = bitcast i8* %72 to i32*
  %74 = select i1 %62, i32* %71, i32* %73
  %75 = load i32, i32* %74, align 4
  %76 = icmp slt i32 %75, %68
  %77 = select i1 %76, i32 %75, i32 %68
  %78 = getelementptr inbounds i32, i32* %33, i64 3
  %79 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %80 = bitcast i8* %79 to i32*
  %81 = select i1 %25, i32* %78, i32* %80
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds i32, i32* %70, i64 2
  %84 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %85 = bitcast [16 x i8]* %84 to i32*
  %86 = select i1 %62, i32* %83, i32* %85
  %87 = load i32, i32* %86, align 4
  %88 = icmp slt i32 %87, %82
  %89 = select i1 %88, i32 %87, i32 %82
  %90 = mul nsw i32 %77, %50
  %91 = mul i32 %60, %89
  %92 = getelementptr inbounds i32, i32* %70, i64 1
  %93 = bitcast %union.anon* %63 to [5 x i32]*
  %94 = bitcast %union.anon* %63 to i32*
  %95 = getelementptr inbounds [5 x i32], [5 x i32]* %93, i64 0, i64 1
  %96 = select i1 %62, i32* %70, i32* %94
  %97 = select i1 %62, i32* %92, i32* %95
  %98 = load i32, i32* %96, align 4
  %99 = load i32, i32* %97, align 4
  %100 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %101 = load i16, i16* %100, align 2
  %102 = sext i16 %101 to i32
  %103 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 3
  %104 = load i16, i16* %103, align 2
  %105 = sext i16 %104 to i32
  %106 = add nsw i32 %105, %102
  %107 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %108 = load i16, i16* %107, align 2
  %109 = sext i16 %108 to i32
  %110 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 2
  %111 = load i16, i16* %110, align 2
  %112 = sext i16 %111 to i32
  %113 = add nsw i32 %112, %109
  %114 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %115 = load i16, i16* %114, align 4
  %116 = sext i16 %115 to i32
  %117 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %118 = load i16, i16* %117, align 2
  %119 = sext i16 %118 to i32
  %120 = mul nsw i32 %99, %98
  %121 = mul nsw i32 %120, %89
  %122 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #11
  %123 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14, i64 0, i32 0
  %124 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14, i64 0, i32 1
  %125 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14, i64 0, i32 2
  %126 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14, i64 0, i32 3
  %127 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %127, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %122, i8 0, i64 14, i1 false) #11
  store i32 1, i32* %123, align 4
  store i32 %121, i32* %124, align 4
  store i32 %77, i32* %125, align 4
  %128 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 7
  %129 = load i32, i32* %128, align 4
  %130 = trunc i32 %129 to i8
  %131 = sub i8 0, %130
  store i8 %131, i8* %126, align 4
  %132 = mul i32 %91, %39
  %133 = icmp sgt i32 %132, 0
  br i1 %133, label %134, label %138

134:                                              ; preds = %13
  %135 = bitcast i32* %11 to i8*
  %136 = zext i32 %132 to i64
  %137 = shl nuw nsw i64 %136, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %135, i8 0, i64 %137, i1 false)
  br label %138

138:                                              ; preds = %134, %13
  %139 = icmp sgt i32 %39, 0
  br i1 %139, label %140, label %319

140:                                              ; preds = %138
  %141 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15 to i8*
  %142 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15, i64 0, i32 1
  %143 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15, i64 0, i32 2
  %144 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15, i64 0, i32 3
  %145 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 6
  %146 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %16 to i8*
  %147 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %16, i64 0, i32 1
  %148 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %16, i64 0, i32 2
  %149 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %17 to i8*
  %150 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %17, i64 0, i32 5
  %151 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %17, i64 0, i32 6
  %152 = sext i32 %91 to i64
  %153 = sext i32 %90 to i64
  %154 = sext i32 %39 to i64
  %155 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15 to i8*
  %156 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %15 to i8*
  %157 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %16 to i8*
  %158 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %16 to i8*
  br label %486

159:                                              ; preds = %486
  %160 = icmp ne i32* %6, null
  %161 = and i1 %160, %139
  br i1 %161, label %162, label %319

162:                                              ; preds = %159
  %163 = icmp sgt i32 %58, 0
  %164 = icmp sgt i32 %59, 0
  %165 = icmp sgt i32 %89, 0
  %166 = sext i32 %89 to i64
  %167 = zext i32 %89 to i64
  %168 = getelementptr i32, i32* %6, i64 %167
  %169 = and i64 %167, 4294967288
  %170 = add nsw i64 %169, -8
  %171 = lshr exact i64 %170, 3
  %172 = add nuw nsw i64 %171, 1
  %173 = icmp ult i32 %89, 8
  %174 = and i64 %167, 4294967288
  %175 = and i64 %172, 1
  %176 = icmp eq i64 %170, 0
  %177 = sub nuw nsw i64 %172, %175
  %178 = icmp eq i64 %175, 0
  %179 = icmp eq i64 %174, %167
  %180 = and i64 %167, 3
  %181 = icmp eq i64 %180, 0
  br label %182

182:                                              ; preds = %188, %162
  %183 = phi i32 [ 0, %162 ], [ %190, %188 ]
  %184 = phi i32* [ %11, %162 ], [ %189, %188 ]
  br i1 %163, label %185, label %188

185:                                              ; preds = %182, %283
  %186 = phi i32 [ %285, %283 ], [ 0, %182 ]
  %187 = phi i32* [ %284, %283 ], [ %184, %182 ]
  br i1 %164, label %192, label %283

188:                                              ; preds = %283, %182
  %189 = phi i32* [ %184, %182 ], [ %284, %283 ]
  %190 = add nuw nsw i32 %183, 1
  %191 = icmp eq i32 %190, %39
  br i1 %191, label %319, label %182

192:                                              ; preds = %185, %287
  %193 = phi i64 [ %291, %287 ], [ 0, %185 ]
  %194 = phi i32 [ %289, %287 ], [ 0, %185 ]
  %195 = phi i32* [ %288, %287 ], [ %187, %185 ]
  %196 = mul i64 %193, %166
  %197 = getelementptr i32, i32* %187, i64 %196
  %198 = add i64 %196, %167
  %199 = getelementptr i32, i32* %187, i64 %198
  br i1 %165, label %200, label %287

200:                                              ; preds = %192
  br i1 %173, label %201, label %219

201:                                              ; preds = %282, %219, %200
  %202 = phi i64 [ 0, %219 ], [ 0, %200 ], [ %174, %282 ]
  %203 = xor i64 %202, -1
  %204 = add nsw i64 %203, %167
  br i1 %181, label %216, label %205

205:                                              ; preds = %201, %205
  %206 = phi i64 [ %213, %205 ], [ %202, %201 ]
  %207 = phi i64 [ %214, %205 ], [ %180, %201 ]
  %208 = getelementptr inbounds i32, i32* %6, i64 %206
  %209 = load i32, i32* %208, align 4
  %210 = getelementptr inbounds i32, i32* %195, i64 %206
  %211 = load i32, i32* %210, align 4
  %212 = add nsw i32 %211, %209
  store i32 %212, i32* %210, align 4
  %213 = add nuw nsw i64 %206, 1
  %214 = add i64 %207, -1
  %215 = icmp eq i64 %214, 0
  br i1 %215, label %216, label %205, !llvm.loop !322

216:                                              ; preds = %205, %201
  %217 = phi i64 [ %202, %201 ], [ %213, %205 ]
  %218 = icmp ult i64 %204, 3
  br i1 %218, label %287, label %292

219:                                              ; preds = %200
  %220 = icmp ult i32* %197, %168
  %221 = icmp ugt i32* %199, %6
  %222 = and i1 %220, %221
  br i1 %222, label %201, label %223

223:                                              ; preds = %219
  br i1 %176, label %263, label %224

224:                                              ; preds = %223, %224
  %225 = phi i64 [ %260, %224 ], [ 0, %223 ]
  %226 = phi i64 [ %261, %224 ], [ %177, %223 ]
  %227 = getelementptr inbounds i32, i32* %6, i64 %225
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4, !alias.scope !323
  %230 = getelementptr inbounds i32, i32* %227, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  %232 = load <4 x i32>, <4 x i32>* %231, align 4, !alias.scope !323
  %233 = getelementptr inbounds i32, i32* %195, i64 %225
  %234 = bitcast i32* %233 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !326, !noalias !323
  %236 = getelementptr inbounds i32, i32* %233, i64 4
  %237 = bitcast i32* %236 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !326, !noalias !323
  %239 = add nsw <4 x i32> %235, %229
  %240 = add nsw <4 x i32> %238, %232
  %241 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %241, align 4, !alias.scope !326, !noalias !323
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %242, align 4, !alias.scope !326, !noalias !323
  %243 = or i64 %225, 8
  %244 = getelementptr inbounds i32, i32* %6, i64 %243
  %245 = bitcast i32* %244 to <4 x i32>*
  %246 = load <4 x i32>, <4 x i32>* %245, align 4, !alias.scope !323
  %247 = getelementptr inbounds i32, i32* %244, i64 4
  %248 = bitcast i32* %247 to <4 x i32>*
  %249 = load <4 x i32>, <4 x i32>* %248, align 4, !alias.scope !323
  %250 = getelementptr inbounds i32, i32* %195, i64 %243
  %251 = bitcast i32* %250 to <4 x i32>*
  %252 = load <4 x i32>, <4 x i32>* %251, align 4, !alias.scope !326, !noalias !323
  %253 = getelementptr inbounds i32, i32* %250, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  %255 = load <4 x i32>, <4 x i32>* %254, align 4, !alias.scope !326, !noalias !323
  %256 = add nsw <4 x i32> %252, %246
  %257 = add nsw <4 x i32> %255, %249
  %258 = bitcast i32* %250 to <4 x i32>*
  store <4 x i32> %256, <4 x i32>* %258, align 4, !alias.scope !326, !noalias !323
  %259 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %259, align 4, !alias.scope !326, !noalias !323
  %260 = add i64 %225, 16
  %261 = add i64 %226, -2
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %224, !llvm.loop !328

263:                                              ; preds = %224, %223
  %264 = phi i64 [ 0, %223 ], [ %260, %224 ]
  br i1 %178, label %282, label %265

265:                                              ; preds = %263
  %266 = getelementptr inbounds i32, i32* %6, i64 %264
  %267 = bitcast i32* %266 to <4 x i32>*
  %268 = load <4 x i32>, <4 x i32>* %267, align 4, !alias.scope !323
  %269 = getelementptr inbounds i32, i32* %266, i64 4
  %270 = bitcast i32* %269 to <4 x i32>*
  %271 = load <4 x i32>, <4 x i32>* %270, align 4, !alias.scope !323
  %272 = getelementptr inbounds i32, i32* %195, i64 %264
  %273 = bitcast i32* %272 to <4 x i32>*
  %274 = load <4 x i32>, <4 x i32>* %273, align 4, !alias.scope !326, !noalias !323
  %275 = getelementptr inbounds i32, i32* %272, i64 4
  %276 = bitcast i32* %275 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !326, !noalias !323
  %278 = add nsw <4 x i32> %274, %268
  %279 = add nsw <4 x i32> %277, %271
  %280 = bitcast i32* %272 to <4 x i32>*
  store <4 x i32> %278, <4 x i32>* %280, align 4, !alias.scope !326, !noalias !323
  %281 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %279, <4 x i32>* %281, align 4, !alias.scope !326, !noalias !323
  br label %282

282:                                              ; preds = %263, %265
  br i1 %179, label %287, label %201

283:                                              ; preds = %287, %185
  %284 = phi i32* [ %187, %185 ], [ %288, %287 ]
  %285 = add nuw nsw i32 %186, 1
  %286 = icmp eq i32 %285, %58
  br i1 %286, label %188, label %185

287:                                              ; preds = %216, %292, %282, %192
  %288 = getelementptr inbounds i32, i32* %195, i64 %166
  %289 = add nuw nsw i32 %194, 1
  %290 = icmp eq i32 %289, %59
  %291 = add i64 %193, 1
  br i1 %290, label %283, label %192

292:                                              ; preds = %216, %292
  %293 = phi i64 [ %317, %292 ], [ %217, %216 ]
  %294 = getelementptr inbounds i32, i32* %6, i64 %293
  %295 = load i32, i32* %294, align 4
  %296 = getelementptr inbounds i32, i32* %195, i64 %293
  %297 = load i32, i32* %296, align 4
  %298 = add nsw i32 %297, %295
  store i32 %298, i32* %296, align 4
  %299 = add nuw nsw i64 %293, 1
  %300 = getelementptr inbounds i32, i32* %6, i64 %299
  %301 = load i32, i32* %300, align 4
  %302 = getelementptr inbounds i32, i32* %195, i64 %299
  %303 = load i32, i32* %302, align 4
  %304 = add nsw i32 %303, %301
  store i32 %304, i32* %302, align 4
  %305 = add nuw nsw i64 %293, 2
  %306 = getelementptr inbounds i32, i32* %6, i64 %305
  %307 = load i32, i32* %306, align 4
  %308 = getelementptr inbounds i32, i32* %195, i64 %305
  %309 = load i32, i32* %308, align 4
  %310 = add nsw i32 %309, %307
  store i32 %310, i32* %308, align 4
  %311 = add nuw nsw i64 %293, 3
  %312 = getelementptr inbounds i32, i32* %6, i64 %311
  %313 = load i32, i32* %312, align 4
  %314 = getelementptr inbounds i32, i32* %195, i64 %311
  %315 = load i32, i32* %314, align 4
  %316 = add nsw i32 %315, %313
  store i32 %316, i32* %314, align 4
  %317 = add nuw nsw i64 %293, 4
  %318 = icmp eq i64 %317, %167
  br i1 %318, label %287, label %292, !llvm.loop !329

319:                                              ; preds = %188, %138, %159
  %320 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 9
  %321 = load i32, i32* %320, align 4
  %322 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 10
  %323 = load i32, i32* %322, align 4
  %324 = load i32, i32* %23, align 8
  %325 = icmp sgt i32 %324, 5
  br i1 %325, label %326, label %328

326:                                              ; preds = %319
  %327 = load i32*, i32** %32, align 8
  br label %330

328:                                              ; preds = %319
  %329 = icmp sgt i32 %324, 0
  br i1 %329, label %330, label %433

330:                                              ; preds = %328, %326
  %331 = phi i32* [ %327, %326 ], [ %35, %328 ]
  %332 = zext i32 %324 to i64
  %333 = icmp ult i32 %324, 8
  br i1 %333, label %419, label %334

334:                                              ; preds = %330
  %335 = and i64 %332, 4294967288
  %336 = add nsw i64 %335, -8
  %337 = lshr exact i64 %336, 3
  %338 = add nuw nsw i64 %337, 1
  %339 = and i64 %338, 3
  %340 = icmp ult i64 %336, 24
  br i1 %340, label %386, label %341

341:                                              ; preds = %334
  %342 = sub nsw i64 %338, %339
  br label %343

343:                                              ; preds = %343, %341
  %344 = phi i64 [ 0, %341 ], [ %383, %343 ]
  %345 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %341 ], [ %381, %343 ]
  %346 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %341 ], [ %382, %343 ]
  %347 = phi i64 [ %342, %341 ], [ %384, %343 ]
  %348 = getelementptr inbounds i32, i32* %331, i64 %344
  %349 = bitcast i32* %348 to <4 x i32>*
  %350 = load <4 x i32>, <4 x i32>* %349, align 4
  %351 = getelementptr inbounds i32, i32* %348, i64 4
  %352 = bitcast i32* %351 to <4 x i32>*
  %353 = load <4 x i32>, <4 x i32>* %352, align 4
  %354 = mul nsw <4 x i32> %350, %345
  %355 = mul nsw <4 x i32> %353, %346
  %356 = or i64 %344, 8
  %357 = getelementptr inbounds i32, i32* %331, i64 %356
  %358 = bitcast i32* %357 to <4 x i32>*
  %359 = load <4 x i32>, <4 x i32>* %358, align 4
  %360 = getelementptr inbounds i32, i32* %357, i64 4
  %361 = bitcast i32* %360 to <4 x i32>*
  %362 = load <4 x i32>, <4 x i32>* %361, align 4
  %363 = mul nsw <4 x i32> %359, %354
  %364 = mul nsw <4 x i32> %362, %355
  %365 = or i64 %344, 16
  %366 = getelementptr inbounds i32, i32* %331, i64 %365
  %367 = bitcast i32* %366 to <4 x i32>*
  %368 = load <4 x i32>, <4 x i32>* %367, align 4
  %369 = getelementptr inbounds i32, i32* %366, i64 4
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = mul nsw <4 x i32> %368, %363
  %373 = mul nsw <4 x i32> %371, %364
  %374 = or i64 %344, 24
  %375 = getelementptr inbounds i32, i32* %331, i64 %374
  %376 = bitcast i32* %375 to <4 x i32>*
  %377 = load <4 x i32>, <4 x i32>* %376, align 4
  %378 = getelementptr inbounds i32, i32* %375, i64 4
  %379 = bitcast i32* %378 to <4 x i32>*
  %380 = load <4 x i32>, <4 x i32>* %379, align 4
  %381 = mul nsw <4 x i32> %377, %372
  %382 = mul nsw <4 x i32> %380, %373
  %383 = add i64 %344, 32
  %384 = add i64 %347, -4
  %385 = icmp eq i64 %384, 0
  br i1 %385, label %386, label %343, !llvm.loop !330

386:                                              ; preds = %343, %334
  %387 = phi <4 x i32> [ undef, %334 ], [ %381, %343 ]
  %388 = phi <4 x i32> [ undef, %334 ], [ %382, %343 ]
  %389 = phi i64 [ 0, %334 ], [ %383, %343 ]
  %390 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %334 ], [ %381, %343 ]
  %391 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %334 ], [ %382, %343 ]
  %392 = icmp eq i64 %339, 0
  br i1 %392, label %409, label %393

393:                                              ; preds = %386, %393
  %394 = phi i64 [ %406, %393 ], [ %389, %386 ]
  %395 = phi <4 x i32> [ %404, %393 ], [ %390, %386 ]
  %396 = phi <4 x i32> [ %405, %393 ], [ %391, %386 ]
  %397 = phi i64 [ %407, %393 ], [ %339, %386 ]
  %398 = getelementptr inbounds i32, i32* %331, i64 %394
  %399 = bitcast i32* %398 to <4 x i32>*
  %400 = load <4 x i32>, <4 x i32>* %399, align 4
  %401 = getelementptr inbounds i32, i32* %398, i64 4
  %402 = bitcast i32* %401 to <4 x i32>*
  %403 = load <4 x i32>, <4 x i32>* %402, align 4
  %404 = mul nsw <4 x i32> %400, %395
  %405 = mul nsw <4 x i32> %403, %396
  %406 = add i64 %394, 8
  %407 = add i64 %397, -1
  %408 = icmp eq i64 %407, 0
  br i1 %408, label %409, label %393, !llvm.loop !331

409:                                              ; preds = %393, %386
  %410 = phi <4 x i32> [ %387, %386 ], [ %404, %393 ]
  %411 = phi <4 x i32> [ %388, %386 ], [ %405, %393 ]
  %412 = mul <4 x i32> %411, %410
  %413 = shufflevector <4 x i32> %412, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %414 = mul <4 x i32> %412, %413
  %415 = shufflevector <4 x i32> %414, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %416 = mul <4 x i32> %414, %415
  %417 = extractelement <4 x i32> %416, i32 0
  %418 = icmp eq i64 %335, %332
  br i1 %418, label %430, label %419

419:                                              ; preds = %409, %330
  %420 = phi i64 [ 0, %330 ], [ %335, %409 ]
  %421 = phi i32 [ 1, %330 ], [ %417, %409 ]
  br label %422

422:                                              ; preds = %419, %422
  %423 = phi i64 [ %428, %422 ], [ %420, %419 ]
  %424 = phi i32 [ %427, %422 ], [ %421, %419 ]
  %425 = getelementptr inbounds i32, i32* %331, i64 %423
  %426 = load i32, i32* %425, align 4
  %427 = mul nsw i32 %426, %424
  %428 = add nuw nsw i64 %423, 1
  %429 = icmp eq i64 %428, %332
  br i1 %429, label %430, label %422, !llvm.loop !332

430:                                              ; preds = %422, %409
  %431 = phi i32 [ %417, %409 ], [ %427, %422 ]
  %432 = icmp sgt i32 %431, 0
  br i1 %432, label %433, label %485

433:                                              ; preds = %328, %430
  %434 = phi i32 [ %431, %430 ], [ 1, %328 ]
  %435 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 8
  %436 = load i32, i32* %435, align 4
  %437 = icmp sgt i32 %323, 0
  %438 = sub nsw i32 0, %323
  %439 = select i1 %437, i32 0, i32 %438
  %440 = shl i32 1, %323
  %441 = select i1 %437, i32 %440, i32 1
  %442 = sext i32 %321 to i64
  %443 = icmp eq i32 %321, -2147483648
  %444 = zext i32 %439 to i64
  %445 = shl nsw i64 -1, %444
  %446 = trunc i64 %445 to i32
  %447 = xor i32 %446, -1
  %448 = ashr i32 %447, 1
  %449 = zext i32 %434 to i64
  br label %450

450:                                              ; preds = %467, %433
  %451 = phi i64 [ 0, %433 ], [ %483, %467 ]
  %452 = getelementptr inbounds i32, i32* %11, i64 %451
  %453 = load i32, i32* %452, align 4
  %454 = mul nsw i32 %453, %441
  %455 = icmp eq i32 %454, %321
  br i1 %455, label %458, label %456

456:                                              ; preds = %450
  %457 = sext i32 %454 to i64
  br label %459

458:                                              ; preds = %450
  br i1 %443, label %467, label %459

459:                                              ; preds = %458, %456
  %460 = phi i64 [ %457, %456 ], [ %442, %458 ]
  %461 = mul nsw i64 %460, %442
  %462 = icmp sgt i64 %461, -1
  %463 = select i1 %462, i64 1073741824, i64 -1073741823
  %464 = add nsw i64 %463, %461
  %465 = sdiv i64 %464, 2147483648
  %466 = trunc i64 %465 to i32
  br label %467

467:                                              ; preds = %459, %458
  %468 = phi i32 [ %466, %459 ], [ 2147483647, %458 ]
  %469 = and i32 %468, %447
  %470 = lshr i32 %468, 31
  %471 = add nsw i32 %470, %448
  %472 = ashr i32 %468, %439
  %473 = icmp sgt i32 %469, %471
  %474 = zext i1 %473 to i32
  %475 = add i32 %472, %436
  %476 = add i32 %475, %474
  %477 = icmp slt i32 %476, 255
  %478 = select i1 %477, i32 %476, i32 255
  %479 = icmp sgt i32 %478, 0
  %480 = select i1 %479, i32 %478, i32 0
  %481 = trunc i32 %480 to i8
  %482 = getelementptr inbounds i8, i8* %8, i64 %451
  store i8 %481, i8* %482, align 1
  %483 = add nuw nsw i64 %451, 1
  %484 = icmp eq i64 %483, %449
  br i1 %484, label %485, label %450

485:                                              ; preds = %467, %430
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #11
  ret void

486:                                              ; preds = %140, %486
  %487 = phi i64 [ 0, %140 ], [ %495, %486 ]
  %488 = phi i32* [ %11, %140 ], [ %494, %486 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %141) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %155, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 0, i64 14, i1 false)
  store i32 %77, i32* %142, align 4
  store i32 %50, i32* %143, align 4
  %489 = load i32, i32* %145, align 4
  %490 = trunc i32 %489 to i8
  %491 = sub i8 0, %490
  store i8 %491, i8* %144, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %146) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %157, i8 -86, i64 20, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %158, i8 0, i64 17, i1 false)
  store i32 %121, i32* %147, align 4
  store i32 %50, i32* %148, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %149) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %149, i8 0, i64 32, i1 false) #11
  store i32 -2147483648, i32* %150, align 8
  store i32 2147483647, i32* %151, align 4
  %492 = mul nsw i64 %487, %153
  %493 = getelementptr inbounds i8, i8* %2, i64 %492
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIhhiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIhEEPKhS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.79"* nonnull dereferenceable(16) %14, i8* %4, %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* nonnull dereferenceable(16) %15, i8* %493, %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* nonnull dereferenceable(20) %16, i32* %10, %"struct.tflite::cpu_backend_gemm::GemmParams.83"* nonnull dereferenceable(40) %17, %"class.tflite::CpuBackendContext"* %12) #11
  call void @_ZN6tflite13optimized_ops6Col2imIiEEvPKT_iiiiiiiiiiiPS2_(i32* %10, i32 %89, i32 %58, i32 %59, i32 %98, i32 %99, i32 %102, i32 %109, i32 %106, i32 %113, i32 %116, i32 %119, i32* %488)
  %494 = getelementptr inbounds i32, i32* %488, i64 %152
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %149) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %146) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %141) #11
  %495 = add nuw nsw i64 %487, 1
  %496 = icmp slt i64 %495, %154
  br i1 %496, label %486, label %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops6Col2imIiEEvPKT_iiiiiiiiiiiPS2_(i32*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32*) local_unnamed_addr #0 comdat {
  %14 = sub i32 %2, %4
  %15 = add i32 %14, %6
  %16 = add i32 %15, %8
  %17 = sdiv i32 %16, %10
  %18 = sub i32 %3, %5
  %19 = add i32 %18, %7
  %20 = add i32 %19, %9
  %21 = sdiv i32 %20, %11
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %54, label %23

23:                                               ; preds = %13
  %24 = icmp slt i32 %21, 0
  %25 = icmp slt i32 %1, 1
  %26 = sext i32 %1 to i64
  %27 = mul nsw i32 %18, %1
  %28 = sext i32 %27 to i64
  %29 = sub i32 0, %7
  %30 = sext i32 %29 to i64
  %31 = sext i32 %11 to i64
  %32 = sext i32 %5 to i64
  %33 = sub i32 0, %6
  %34 = sext i32 %33 to i64
  %35 = sext i32 %10 to i64
  %36 = sext i32 %4 to i64
  %37 = sext i32 %3 to i64
  %38 = icmp sgt i32 %4, 0
  %39 = icmp sgt i32 %5, 0
  %40 = zext i32 %1 to i64
  %41 = and i64 %40, 4294967288
  %42 = add nsw i64 %41, -8
  %43 = lshr exact i64 %42, 3
  %44 = add nuw nsw i64 %43, 1
  %45 = icmp ult i32 %1, 8
  %46 = and i64 %40, 4294967288
  %47 = and i64 %44, 1
  %48 = icmp eq i64 %42, 0
  %49 = sub nuw nsw i64 %44, %47
  %50 = icmp eq i64 %47, 0
  %51 = icmp eq i64 %46, %40
  %52 = and i64 %40, 3
  %53 = icmp eq i64 %52, 0
  br label %55

54:                                               ; preds = %63, %13
  ret void

55:                                               ; preds = %63, %23
  %56 = phi i64 [ %65, %63 ], [ %34, %23 ]
  %57 = phi i32 [ %66, %63 ], [ 0, %23 ]
  %58 = phi i32* [ %64, %63 ], [ %0, %23 ]
  br i1 %24, label %63, label %59

59:                                               ; preds = %55
  %60 = mul nsw i64 %56, %37
  %61 = add nsw i64 %56, %36
  %62 = trunc i64 %56 to i32
  br label %68

63:                                               ; preds = %85, %55
  %64 = phi i32* [ %58, %55 ], [ %86, %85 ]
  %65 = add i64 %56, %35
  %66 = add nuw i32 %57, 1
  %67 = icmp eq i32 %57, %17
  br i1 %67, label %54, label %55

68:                                               ; preds = %85, %59
  %69 = phi i64 [ %87, %85 ], [ %30, %59 ]
  %70 = phi i32 [ %88, %85 ], [ 0, %59 ]
  %71 = phi i32* [ %86, %85 ], [ %58, %59 ]
  br i1 %38, label %72, label %85

72:                                               ; preds = %68
  %73 = add nsw i64 %69, %60
  %74 = mul nsw i64 %73, %26
  %75 = getelementptr inbounds i32, i32* %12, i64 %74
  %76 = add nsw i64 %69, %32
  %77 = trunc i64 %69 to i32
  br label %78

78:                                               ; preds = %72, %90
  %79 = phi i32 [ %62, %72 ], [ %94, %90 ]
  %80 = phi i32* [ %75, %72 ], [ %93, %90 ]
  %81 = phi i32* [ %71, %72 ], [ %91, %90 ]
  br i1 %39, label %82, label %90

82:                                               ; preds = %78
  %83 = icmp sgt i32 %79, -1
  %84 = icmp slt i32 %79, %2
  br label %97

85:                                               ; preds = %90, %68
  %86 = phi i32* [ %71, %68 ], [ %91, %90 ]
  %87 = add i64 %69, %31
  %88 = add nuw i32 %70, 1
  %89 = icmp eq i32 %70, %21
  br i1 %89, label %63, label %68

90:                                               ; preds = %225, %78
  %91 = phi i32* [ %81, %78 ], [ %227, %225 ]
  %92 = phi i32* [ %80, %78 ], [ %226, %225 ]
  %93 = getelementptr inbounds i32, i32* %92, i64 %28
  %94 = add nsw i32 %79, 1
  %95 = sext i32 %94 to i64
  %96 = icmp sgt i64 %61, %95
  br i1 %96, label %78, label %85

97:                                               ; preds = %82, %225
  %98 = phi i64 [ 0, %82 ], [ %231, %225 ]
  %99 = phi i32 [ %77, %82 ], [ %228, %225 ]
  %100 = phi i32* [ %80, %82 ], [ %226, %225 ]
  %101 = phi i32* [ %81, %82 ], [ %227, %225 ]
  %102 = mul i64 %98, %26
  %103 = getelementptr i32, i32* %80, i64 %102
  %104 = add i64 %102, %40
  %105 = getelementptr i32, i32* %80, i64 %104
  %106 = getelementptr i32, i32* %81, i64 %102
  %107 = getelementptr i32, i32* %81, i64 %104
  br i1 %83, label %108, label %225

108:                                              ; preds = %97
  %109 = icmp sgt i32 %99, -1
  %110 = and i1 %84, %109
  %111 = icmp slt i32 %99, %3
  %112 = and i1 %111, %110
  %113 = xor i1 %112, true
  %114 = or i1 %25, %113
  br i1 %114, label %225, label %115

115:                                              ; preds = %108
  br i1 %45, label %180, label %116

116:                                              ; preds = %115
  %117 = icmp ult i32* %103, %107
  %118 = icmp ult i32* %106, %105
  %119 = and i1 %117, %118
  br i1 %119, label %180, label %120

120:                                              ; preds = %116
  br i1 %48, label %160, label %121

121:                                              ; preds = %120, %121
  %122 = phi i64 [ %157, %121 ], [ 0, %120 ]
  %123 = phi i64 [ %158, %121 ], [ %49, %120 ]
  %124 = getelementptr inbounds i32, i32* %101, i64 %122
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4, !alias.scope !333
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4, !alias.scope !333
  %130 = getelementptr inbounds i32, i32* %100, i64 %122
  %131 = bitcast i32* %130 to <4 x i32>*
  %132 = load <4 x i32>, <4 x i32>* %131, align 4, !alias.scope !336, !noalias !333
  %133 = getelementptr inbounds i32, i32* %130, i64 4
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4, !alias.scope !336, !noalias !333
  %136 = add nsw <4 x i32> %132, %126
  %137 = add nsw <4 x i32> %135, %129
  %138 = bitcast i32* %130 to <4 x i32>*
  store <4 x i32> %136, <4 x i32>* %138, align 4, !alias.scope !336, !noalias !333
  %139 = bitcast i32* %133 to <4 x i32>*
  store <4 x i32> %137, <4 x i32>* %139, align 4, !alias.scope !336, !noalias !333
  %140 = or i64 %122, 8
  %141 = getelementptr inbounds i32, i32* %101, i64 %140
  %142 = bitcast i32* %141 to <4 x i32>*
  %143 = load <4 x i32>, <4 x i32>* %142, align 4, !alias.scope !333
  %144 = getelementptr inbounds i32, i32* %141, i64 4
  %145 = bitcast i32* %144 to <4 x i32>*
  %146 = load <4 x i32>, <4 x i32>* %145, align 4, !alias.scope !333
  %147 = getelementptr inbounds i32, i32* %100, i64 %140
  %148 = bitcast i32* %147 to <4 x i32>*
  %149 = load <4 x i32>, <4 x i32>* %148, align 4, !alias.scope !336, !noalias !333
  %150 = getelementptr inbounds i32, i32* %147, i64 4
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !336, !noalias !333
  %153 = add nsw <4 x i32> %149, %143
  %154 = add nsw <4 x i32> %152, %146
  %155 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %153, <4 x i32>* %155, align 4, !alias.scope !336, !noalias !333
  %156 = bitcast i32* %150 to <4 x i32>*
  store <4 x i32> %154, <4 x i32>* %156, align 4, !alias.scope !336, !noalias !333
  %157 = add i64 %122, 16
  %158 = add i64 %123, -2
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %121, !llvm.loop !338

160:                                              ; preds = %121, %120
  %161 = phi i64 [ 0, %120 ], [ %157, %121 ]
  br i1 %50, label %179, label %162

162:                                              ; preds = %160
  %163 = getelementptr inbounds i32, i32* %101, i64 %161
  %164 = bitcast i32* %163 to <4 x i32>*
  %165 = load <4 x i32>, <4 x i32>* %164, align 4, !alias.scope !333
  %166 = getelementptr inbounds i32, i32* %163, i64 4
  %167 = bitcast i32* %166 to <4 x i32>*
  %168 = load <4 x i32>, <4 x i32>* %167, align 4, !alias.scope !333
  %169 = getelementptr inbounds i32, i32* %100, i64 %161
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4, !alias.scope !336, !noalias !333
  %172 = getelementptr inbounds i32, i32* %169, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !336, !noalias !333
  %175 = add nsw <4 x i32> %171, %165
  %176 = add nsw <4 x i32> %174, %168
  %177 = bitcast i32* %169 to <4 x i32>*
  store <4 x i32> %175, <4 x i32>* %177, align 4, !alias.scope !336, !noalias !333
  %178 = bitcast i32* %172 to <4 x i32>*
  store <4 x i32> %176, <4 x i32>* %178, align 4, !alias.scope !336, !noalias !333
  br label %179

179:                                              ; preds = %160, %162
  br i1 %51, label %225, label %180

180:                                              ; preds = %179, %116, %115
  %181 = phi i64 [ 0, %116 ], [ 0, %115 ], [ %46, %179 ]
  %182 = xor i64 %181, -1
  %183 = add nsw i64 %182, %40
  br i1 %53, label %195, label %184

184:                                              ; preds = %180, %184
  %185 = phi i64 [ %192, %184 ], [ %181, %180 ]
  %186 = phi i64 [ %193, %184 ], [ %52, %180 ]
  %187 = getelementptr inbounds i32, i32* %101, i64 %185
  %188 = load i32, i32* %187, align 4
  %189 = getelementptr inbounds i32, i32* %100, i64 %185
  %190 = load i32, i32* %189, align 4
  %191 = add nsw i32 %190, %188
  store i32 %191, i32* %189, align 4
  %192 = add nuw nsw i64 %185, 1
  %193 = add i64 %186, -1
  %194 = icmp eq i64 %193, 0
  br i1 %194, label %195, label %184, !llvm.loop !339

195:                                              ; preds = %184, %180
  %196 = phi i64 [ %181, %180 ], [ %192, %184 ]
  %197 = icmp ult i64 %183, 3
  br i1 %197, label %225, label %198

198:                                              ; preds = %195, %198
  %199 = phi i64 [ %223, %198 ], [ %196, %195 ]
  %200 = getelementptr inbounds i32, i32* %101, i64 %199
  %201 = load i32, i32* %200, align 4
  %202 = getelementptr inbounds i32, i32* %100, i64 %199
  %203 = load i32, i32* %202, align 4
  %204 = add nsw i32 %203, %201
  store i32 %204, i32* %202, align 4
  %205 = add nuw nsw i64 %199, 1
  %206 = getelementptr inbounds i32, i32* %101, i64 %205
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds i32, i32* %100, i64 %205
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, %207
  store i32 %210, i32* %208, align 4
  %211 = add nuw nsw i64 %199, 2
  %212 = getelementptr inbounds i32, i32* %101, i64 %211
  %213 = load i32, i32* %212, align 4
  %214 = getelementptr inbounds i32, i32* %100, i64 %211
  %215 = load i32, i32* %214, align 4
  %216 = add nsw i32 %215, %213
  store i32 %216, i32* %214, align 4
  %217 = add nuw nsw i64 %199, 3
  %218 = getelementptr inbounds i32, i32* %101, i64 %217
  %219 = load i32, i32* %218, align 4
  %220 = getelementptr inbounds i32, i32* %100, i64 %217
  %221 = load i32, i32* %220, align 4
  %222 = add nsw i32 %221, %219
  store i32 %222, i32* %220, align 4
  %223 = add nuw nsw i64 %199, 4
  %224 = icmp eq i64 %223, %40
  br i1 %224, label %225, label %198, !llvm.loop !340

225:                                              ; preds = %195, %198, %179, %108, %97
  %226 = getelementptr inbounds i32, i32* %100, i64 %26
  %227 = getelementptr inbounds i32, i32* %101, i64 %26
  %228 = add nsw i32 %99, 1
  %229 = sext i32 %228 to i64
  %230 = icmp sgt i64 %76, %229
  %231 = add i64 %98, 1
  br i1 %230, label %97, label %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIhhiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIhEEPKhS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.79"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* dereferenceable(20), i32*, %"struct.tflite::cpu_backend_gemm::GemmParams.83"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat.90", align 8
  %10 = alloca %"struct.ruy::Mat.90", align 8
  %11 = alloca %"struct.ruy::Mat.91", align 8
  %12 = alloca %"class.ruy::MulParams.89", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !64
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint i8* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %0, i64 0, i32 3
  %26 = load i8, i8* %25, align 4
  br i1 %15, label %27, label %34

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %0, i64 0, i32 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i8
  %32 = icmp eq i8 %29, 2
  %33 = select i1 %32, i8 3, i8 %31
  br label %34

34:                                               ; preds = %8, %27
  %35 = phi i8 [ %33, %27 ], [ 0, %8 ]
  %36 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %42, i32 %40
  %44 = ptrtoint i8* %3 to i64
  %45 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %2, i64 0, i32 3
  %46 = load i8, i8* %45, align 4
  br i1 %15, label %47, label %54

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.79", %"struct.tflite::cpu_backend_gemm::MatrixParams.79"* %2, i64 0, i32 4
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 1
  %51 = zext i1 %50 to i8
  %52 = icmp eq i8 %49, 2
  %53 = select i1 %52, i8 3, i8 %51
  br label %54

54:                                               ; preds = %34, %47
  %55 = phi i8 [ %53, %47 ], [ 0, %34 ]
  %56 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %58, i32 %62, i32 %60
  %64 = ptrtoint i32* %5 to i64
  %65 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"class.ruy::MulParams.89"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 5
  %69 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 6
  %70 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 1
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 3
  %78 = bitcast i32** %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8
  %80 = bitcast i32** %77 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 4
  %82 = bitcast i32** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.ruy::MulParams.89"* %12 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %68, align 8
  %87 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 6
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %69, align 4
  %89 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.ruy::Context"*, %"class.ruy::Context"** %89, align 8
  %91 = bitcast %"struct.ruy::Mat.90"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %9, i64 0, i32 1, i32 2
  %93 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %9, i64 0, i32 2
  %94 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false) #11
  %95 = bitcast %"struct.ruy::Mat.90"* %9 to i64*
  store i64 %24, i64* %95, align 8, !alias.scope !341
  %96 = zext i32 %23 to i64
  %97 = zext i1 %18 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = or i64 %98, %96
  %100 = zext i32 %22 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %20 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %9, i64 0, i32 1
  %105 = bitcast %"struct.ruy::MatLayout"* %104 to i64*
  store i64 %103, i64* %105, align 8, !alias.scope !341
  %106 = bitcast i32* %92 to i40*
  %107 = trunc i64 %99 to i40
  store i40 %107, i40* %106, align 8, !alias.scope !341
  store i8 %26, i8* %93, align 8, !alias.scope !341
  store i8 %35, i8* %94, align 1, !alias.scope !341
  %108 = bitcast %"struct.ruy::Mat.90"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %10, i64 0, i32 2
  %111 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false) #11
  %112 = bitcast %"struct.ruy::Mat.90"* %10 to i64*
  store i64 %44, i64* %112, align 8, !alias.scope !344
  %113 = zext i32 %43 to i64
  %114 = zext i1 %38 to i64
  %115 = shl nuw nsw i64 %114, 32
  %116 = or i64 %115, %113
  %117 = zext i32 %42 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %40 to i64
  %120 = or i64 %118, %119
  %121 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %10, i64 0, i32 1
  %122 = bitcast %"struct.ruy::MatLayout"* %121 to i64*
  store i64 %120, i64* %122, align 8, !alias.scope !344
  %123 = bitcast i32* %109 to i40*
  %124 = trunc i64 %116 to i40
  store i40 %124, i40* %123, align 8, !alias.scope !344
  store i8 %46, i8* %110, align 8, !alias.scope !344
  store i8 %55, i8* %111, align 1, !alias.scope !344
  %125 = bitcast %"struct.ruy::Mat.91"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 32, i1 false) #11
  %129 = bitcast %"struct.ruy::Mat.91"* %11 to i64*
  store i64 %64, i64* %129, align 8, !alias.scope !347
  %130 = zext i32 %63 to i64
  %131 = zext i1 %58 to i64
  %132 = shl nuw nsw i64 %131, 32
  %133 = or i64 %132, %130
  %134 = zext i32 %62 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %60 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 1
  %139 = bitcast %"struct.ruy::MatLayout"* %138 to i64*
  store i64 %137, i64* %139, align 8, !alias.scope !347
  %140 = bitcast i32* %126 to i40*
  %141 = trunc i64 %133 to i40
  store i40 %141, i40* %140, align 8, !alias.scope !347
  store i32 %66, i32* %127, align 8, !alias.scope !347
  store i8 0, i8* %128, align 4, !alias.scope !347
  %142 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %90) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.90"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat.90"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams.89"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %142, %"struct.ruy::Mat.91"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.90"* dereferenceable(32), %"struct.ruy::Mat.90"* dereferenceable(32), %"class.ruy::MulParams.89"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat.91"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::Mat.90", align 8
  %7 = alloca %"struct.ruy::TrMulParams", align 8
  %8 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %9 = bitcast %"struct.ruy::Mat.90"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #11
  %10 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 1, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 1, i32 3
  %13 = bitcast %"struct.ruy::Mat.90"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %13, i64 32, i1 false)
  %14 = load i8, i8* %12, align 4
  %15 = icmp eq i8 %14, 0
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %12, align 4
  %17 = load i32, i32* %10, align 8
  %18 = load i32, i32* %11, align 4
  store i32 %18, i32* %10, align 8
  store i32 %17, i32* %11, align 4
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %19) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 272, i1 false)
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 1
  %21 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 0, i32 2
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 0, i32 4
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 0, i32 5
  store i8 0, i8* %23, align 4
  %24 = bitcast i8** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 21, i1 false) #11
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %27, align 2
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 3, i32 0, i64 1, i32 5
  store i8 0, i8* %30, align 4
  %31 = bitcast i8** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 21, i1 false) #11
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %33, align 1
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %34, align 2
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 2
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 4
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 4, i32 5
  store i8 0, i8* %37, align 4
  %38 = bitcast i8** %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 21, i1 false) #11
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %40, align 1
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %41, align 2
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 2
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %45 = bitcast i8** %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 11, i1 false) #11
  %46 = bitcast i8** %43 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 22, i1 false) #11
  %47 = bitcast %"class.ruy::SidePair"* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 27, i1 false) #11
  store i8 1, i8* %44, align 1
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %48, align 1
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %50, align 8
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %52, align 2
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 2
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 5
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %56 = bitcast i8** %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 11, i1 false) #11
  %57 = bitcast i8** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %55, align 1
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %58, align 1
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %7, i64 0, i32 7
  store i8* null, i8** %62, align 8
  call void @_ZN3ruy17CreateTrMulParamsILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS4_IT2_EES1_PNS_11TrMulParamsE(%"struct.ruy::Mat.90"* nonnull dereferenceable(32) %6, %"struct.ruy::Mat.90"* dereferenceable(32) %1, %"class.ruy::MulParams.89"* dereferenceable(40) %2, %"struct.ruy::Mat.91"* %4, i8 zeroext %8, %"struct.ruy::TrMulParams"* nonnull %7)
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %7, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %7, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %19) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy17CreateTrMulParamsILNS_4PathE26EhhiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS4_IT2_EES1_PNS_11TrMulParamsE(%"struct.ruy::Mat.90"* dereferenceable(32), %"struct.ruy::Mat.90"* dereferenceable(32), %"class.ruy::MulParams.89"* dereferenceable(40), %"struct.ruy::Mat.91"*, i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %7 = alloca [13 x i8], align 8
  %8 = alloca [13 x i8], align 8
  %9 = alloca [13 x i8], align 8
  %10 = getelementptr inbounds [13 x i8], [13 x i8]* %9, i64 0, i64 0
  %11 = getelementptr inbounds [13 x i8], [13 x i8]* %8, i64 0, i64 0
  %12 = getelementptr inbounds [13 x i8], [13 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %12)
  %13 = bitcast %"struct.ruy::Mat.90"* %0 to i64*
  %14 = load i64, i64* %13, align 8, !noalias !350
  %15 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %0, i64 0, i32 1
  %16 = bitcast %"struct.ruy::MatLayout"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 4 %16, i64 13, i1 false)
  %17 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %0, i64 0, i32 2
  %18 = load i8, i8* %17, align 8, !noalias !350
  %19 = zext i8 %18 to i32
  %20 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %0, i64 0, i32 3
  %21 = load i8, i8* %20, align 1, !noalias !350
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3
  %23 = bitcast %"class.ruy::SidePair.32"* %22 to i24*
  store i24 65536, i24* %23, align 8
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 -86, i64 5, i1 false)
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 2
  %26 = bitcast i8** %25 to i64*
  store i64 %14, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 3
  %28 = bitcast %"struct.ruy::MatLayout"* %27 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %12, i64 13, i1 false)
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 -86, i64 3, i1 false)
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 4
  store i32 %19, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 5
  store i8 %21, i8* %31, align 4
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %12)
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %11)
  %32 = bitcast %"struct.ruy::Mat.90"* %1 to i64*
  %33 = load i64, i64* %32, align 8, !noalias !353
  %34 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 1
  %35 = bitcast %"struct.ruy::MatLayout"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 4 %35, i64 13, i1 false)
  %36 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 2
  %37 = load i8, i8* %36, align 8, !noalias !353
  %38 = zext i8 %37 to i32
  %39 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 3
  %40 = load i8, i8* %39, align 1, !noalias !353
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1
  %42 = bitcast %"struct.ruy::EMat"* %41 to i24*
  store i24 65536, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %43, i8 -86, i64 5, i1 false)
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 2
  %45 = bitcast i8** %44 to i64*
  store i64 %33, i64* %45, align 8
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 3
  %47 = bitcast %"struct.ruy::MatLayout"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* nonnull align 8 %11, i64 13, i1 false)
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %48, i8 -86, i64 3, i1 false)
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 %38, i32* %49, align 8
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 5
  store i8 %40, i8* %50, align 4
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %11)
  call void @llvm.lifetime.start.p0i8(i64 13, i8* nonnull %10)
  %51 = bitcast %"struct.ruy::Mat.91"* %3 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !356
  %53 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %3, i64 0, i32 1
  %54 = bitcast %"struct.ruy::MatLayout"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 4 %54, i64 13, i1 false)
  %55 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %3, i64 0, i32 2
  %56 = load i32, i32* %55, align 8, !noalias !356
  %57 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %3, i64 0, i32 3
  %58 = load i8, i8* %57, align 4, !noalias !356
  %59 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4
  %60 = bitcast %"struct.ruy::EMat"* %59 to i24*
  store i24 262145, i24* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %61, i8 -86, i64 5, i1 false)
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 2
  %63 = bitcast i8** %62 to i64*
  store i64 %52, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 3
  %65 = bitcast %"struct.ruy::MatLayout"* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %65, i8* nonnull align 8 %10, i64 13, i1 false)
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %66, i8 -86, i64 3, i1 false)
  %67 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 4
  store i32 %56, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 4, i32 5
  store i8 %58, i8* %68, align 4
  call void @llvm.lifetime.end.p0i8(i64 13, i8* nonnull %10)
  %69 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 7
  %70 = bitcast i8** %69 to %"class.ruy::MulParams.89"**
  store %"class.ruy::MulParams.89"* %2, %"class.ruy::MulParams.89"** %70, align 8
  switch i8 %4, label %118 [
    i8 16, label %71
    i8 8, label %72
    i8 2, label %73
  ]

71:                                               ; preds = %6
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE16EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %5) #11
  br label %118

72:                                               ; preds = %6
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %5) #11
  br label %118

73:                                               ; preds = %6
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 0
  store i8 2, i8* %74, align 8
  %75 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0
  %76 = bitcast %"struct.ruy::PEMat"* %75 to i24*
  store i24 65536, i24* %76, align 8
  %77 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 3
  %78 = bitcast %"struct.ruy::Type"* %77 to i24*
  store i24 262145, i24* %78, align 8
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %79, align 4
  %80 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %81, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %86, align 1
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %87, align 1
  %88 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %88, align 1
  %89 = and i32 %81, 1023
  %90 = icmp eq i32 %89, 0
  %91 = add nsw i32 %81, 64
  %92 = select i1 %90, i32 %91, i32 %81
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %19, i32* %94, align 8
  %95 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1
  %96 = bitcast %"struct.ruy::PEMat"* %95 to i24*
  store i24 65536, i24* %96, align 8
  %97 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 3
  %98 = bitcast %"struct.ruy::Type"* %97 to i24*
  store i24 262145, i24* %98, align 8
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %99, align 4
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %101, i32* %102, align 4
  %103 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %104 = load i32, i32* %103, align 4
  %105 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %107, align 1
  %108 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %108, align 1
  %109 = and i32 %101, 1023
  %110 = icmp eq i32 %109, 0
  %111 = add nsw i32 %101, 64
  %112 = select i1 %110, i32 %111, i32 %101
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %112, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %38, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 1, i32 0, i64 0
  %116 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %115 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %116, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %5, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EhhiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %117, align 8
  br label %118

118:                                              ; preds = %6, %73, %72, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE16EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 65536, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262145, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 1023
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 255
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %39 = bitcast %"struct.ruy::PEMat"* %38 to i24*
  store i24 65536, i24* %39, align 8
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %41 = bitcast %"struct.ruy::Type"* %40 to i24*
  store i24 262145, i24* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %51, align 1
  %52 = and i32 %44, 1023
  %53 = icmp eq i32 %52, 0
  %54 = add nsw i32 %44, 64
  %55 = select i1 %53, i32 %54, i32 %44
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 255
  br label %119

60:                                               ; preds = %9
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 16, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %63 = bitcast %"struct.ruy::PEMat"* %62 to i24*
  store i24 65537, i24* %63, align 8
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %65 = bitcast %"struct.ruy::Type"* %64 to i24*
  store i24 262145, i24* %65, align 8
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 3
  %70 = and i32 %69, -4
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 15
  %75 = and i32 %74, -16
  %76 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 4, i8* %78, align 1
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 16, i8* %79, align 1
  %80 = and i32 %69, 1020
  %81 = icmp eq i32 %80, 0
  %82 = add nsw i32 %70, 64
  %83 = select i1 %81, i32 %82, i32 %70
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = shl i32 %86, 24
  %88 = ashr exact i32 %87, 24
  %89 = xor i32 %88, -128
  %90 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %92 = bitcast %"struct.ruy::PEMat"* %91 to i24*
  store i24 65537, i24* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %94 = bitcast %"struct.ruy::Type"* %93 to i24*
  store i24 262145, i24* %94, align 8
  %95 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 3
  %99 = and i32 %98, -4
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, 15
  %104 = and i32 %103, -16
  %105 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 4, i8* %107, align 1
  %108 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 16, i8* %108, align 1
  %109 = and i32 %98, 1020
  %110 = icmp eq i32 %109, 0
  %111 = add nsw i32 %99, 64
  %112 = select i1 %110, i32 %111, i32 %99
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %112, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = shl i32 %115, 24
  %117 = ashr exact i32 %116, 24
  %118 = xor i32 %117, -128
  br label %119

119:                                              ; preds = %60, %13
  %120 = phi i32 [ %118, %60 ], [ %59, %13 ]
  %121 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %60 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %122 = phi void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %60 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EhhiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %120, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %121, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %124, align 8
  %125 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %121, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %125, align 8
  %126 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* %122, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %126, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !359
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !362
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !362
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !362
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  %26 = xor i8 %25, -128
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %26, i64 32, i1 false) #11
  %27 = icmp slt i32 %3, %4
  br i1 %27, label %28, label %47

28:                                               ; preds = %5
  %29 = icmp eq i32* %19, null
  %30 = sext i32 %3 to i64
  %31 = sext i32 %4 to i64
  %32 = sext i32 %14 to i64
  br label %33

33:                                               ; preds = %33, %28
  %34 = phi i64 [ %30, %28 ], [ %45, %33 ]
  %35 = getelementptr inbounds i32, i32* %19, i64 %34
  %36 = select i1 %29, i32* null, i32* %35
  %37 = mul nsw i64 %34, %32
  %38 = getelementptr inbounds i8, i8* %8, i64 %37
  %39 = trunc i64 %34 to i32
  %40 = sub nsw i32 %12, %39
  %41 = and i32 %39, -16
  %42 = mul nsw i32 %41, %21
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %16, i64 %43
  call void @_ZN3ruy14Pack8bitAvx512EPKaaS1_iiiPaPi(i8* %38, i8 signext -128, i8* nonnull %24, i32 %14, i32 %40, i32 %10, i8* %44, i32* %36) #11
  %45 = add nsw i64 %34, 16
  %46 = icmp slt i64 %45, %31
  br i1 %46, label %33, label %47

47:                                               ; preds = %33, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to i32**
  %10 = load i32*, i32** %9, align 8, !noalias !365
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !365
  %19 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8, !noalias !368
  %21 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 5
  %22 = bitcast i8** %21 to i32**
  %23 = load i32*, i32** %22, align 8, !noalias !368
  %24 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8, !noalias !368
  %30 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %31 = load i8*, i8** %30, align 8, !noalias !371
  %32 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 5
  %33 = bitcast i8** %32 to i32**
  %34 = load i32*, i32** %33, align 8, !noalias !371
  %35 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 7
  %38 = load i32, i32* %37, align 8, !noalias !371
  %39 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"struct.ruy::KernelParams8bit"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1352, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  %49 = bitcast i32** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 1344, i1 false) #11
  %50 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 27, i64 0
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 64, i1 false) #11
  %52 = mul nsw i32 %40, %27
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %20, i64 %53
  %55 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 3
  store i8* %54, i8** %55, align 8
  %56 = mul nsw i32 %42, %36
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %31, i64 %57
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 6
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 24
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 0
  store i32* %50, i32** %61, align 8
  %62 = bitcast i8* %2 to i32**
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %6
  store i32* %63, i32** %61, align 8
  store i8 1, i8* %60, align 8
  br label %66

66:                                               ; preds = %65, %6
  %67 = phi i8 [ 0, %6 ], [ 1, %65 ]
  %68 = icmp eq i32* %23, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 1
  store i32* %23, i32** %70, align 8
  %71 = or i8 %67, 2
  store i8 %71, i8* %60, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i8 [ %67, %66 ], [ %71, %69 ]
  %74 = icmp eq i32* %34, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 2
  store i32* %34, i32** %76, align 8
  %77 = or i8 %73, 4
  store i8 %77, i8* %60, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i8 [ %73, %72 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 12
  store i32 %40, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 13
  store i32 %42, i32* %81, align 4
  %82 = add nsw i32 %44, -16
  %83 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 14
  store i32 %82, i32* %83, align 8
  %84 = add nsw i32 %46, -16
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 15
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 18
  store i32 %27, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 19
  store i32 %36, i32* %87, align 4
  %88 = shl i32 %16, 2
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 20
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 8
  store i32 %29, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 9
  store i32 %38, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 10
  store i32 %18, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 21
  store i32 %25, i32* %93, align 4
  %94 = mul i32 %29, %25
  %95 = mul i32 %94, %38
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %78
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %79, 24
  store i8 %103, i8* %60, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %148

111:                                              ; preds = %78
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %79, 16
  store i8 %117, i8* %60, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 7
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 7
  %140 = bitcast i32* %138 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %140, align 4
  %141 = bitcast i32* %139 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %141, align 4
  %142 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 11
  %143 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 11
  %144 = bitcast i32* %142 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %144, align 4
  %145 = bitcast i32* %143 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %145, align 4
  %146 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 29, i64 15
  store i32 %125, i32* %146, align 4
  %147 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 30, i64 15
  store i32 %114, i32* %147, align 4
  br label %148

148:                                              ; preds = %101, %118
  %149 = getelementptr inbounds i8, i8* %2, i64 32
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 8
  %152 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 22
  store i32 %151, i32* %152, align 8
  %153 = getelementptr inbounds i8, i8* %2, i64 36
  %154 = bitcast i8* %153 to i32*
  %155 = load i32, i32* %154, align 4
  %156 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 23
  store i32 %155, i32* %156, align 4
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 16
  store i32 %12, i32* %157, align 8
  %158 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 17
  store i32 %14, i32* %158, align 4
  %159 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 25
  store i8 4, i8* %159, align 1
  %160 = mul nsw i32 %42, %16
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i32, i32* %10, i64 %161
  %163 = sext i32 %40 to i64
  %164 = getelementptr inbounds i32, i32* %162, i64 %163
  %165 = getelementptr inbounds %"struct.ruy::KernelParams8bit", %"struct.ruy::KernelParams8bit"* %7, i64 0, i32 7
  %166 = bitcast i8** %165 to i32**
  store i32* %164, i32** %166, align 8
  %167 = icmp eq i32 %14, 1
  br i1 %167, label %168, label %169

168:                                              ; preds = %148
  call void @_ZN3ruy25Kernel8bitAvx512SingleColERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %170

169:                                              ; preds = %148
  call void @_ZN3ruy16Kernel8bitAvx512ERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* nonnull dereferenceable(1352) %7) #11
  br label %170

170:                                              ; preds = %168, %169
  call void @llvm.lifetime.end.p0i8(i64 1352, i8* nonnull %47) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca %"struct.ruy::Mat.90", align 8
  %7 = alloca %"struct.ruy::PMat.92", align 8
  %8 = bitcast %"struct.ruy::Mat.90"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = bitcast %"struct.ruy::Mat.90"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = load i64, i64* %13, align 8, !noalias !374
  %16 = bitcast %"struct.ruy::Mat.90"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !374
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3
  %18 = bitcast %"struct.ruy::MatLayout"* %11 to i8*
  %19 = bitcast %"struct.ruy::MatLayout"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 13, i1 false) #11
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !374
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %9, align 8, !alias.scope !374
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !noalias !374
  store i8 %24, i8* %10, align 1, !alias.scope !374
  %25 = bitcast %"struct.ruy::PMat.92"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"struct.ruy::PMat.92"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load i64, i64* %28, align 8, !noalias !377
  %31 = bitcast %"struct.ruy::PMat.92"* %7 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !377
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !377
  %35 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %7, i64 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !377
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %7, i64 0, i32 2
  %39 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  %40 = bitcast %"struct.ruy::PMatLayout"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %42 = load i32, i32* %41, align 8, !noalias !377
  store i32 %42, i32* %26, align 8, !alias.scope !377
  call void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhiE3RunENS_6TuningERKNS_3MatIhEEPNS_4PMatIhEEii(i32 %0, %"struct.ruy::Mat.90"* nonnull dereferenceable(32) %6, %"struct.ruy::PMat.92"* nonnull %7, i32 %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EhhiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel.93", align 1
  %8 = alloca %"struct.ruy::Mat.91", align 8
  %9 = alloca %"struct.ruy::PMat.92", align 8
  %10 = alloca %"struct.ruy::PMat.92", align 8
  %11 = bitcast %"struct.ruy::Mat.91"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = bitcast %"struct.ruy::Mat.91"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load i64, i64* %16, align 8, !noalias !380
  %19 = bitcast %"struct.ruy::Mat.91"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !380
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !380
  store i32 %24, i32* %12, align 8, !alias.scope !380
  %25 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %26 = load i8, i8* %25, align 4, !noalias !380
  store i8 %26, i8* %13, align 4, !alias.scope !380
  %27 = bitcast %"struct.ruy::PMat.92"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false) #11, !alias.scope !383
  %28 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %9, i64 0, i32 3
  %29 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !383
  %32 = bitcast %"struct.ruy::PMat.92"* %9 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !383
  %33 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 5
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !383
  %36 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %9, i64 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8, !alias.scope !383
  %38 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6
  %39 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %9, i64 0, i32 2
  %40 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  %41 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 16, i1 false) #11
  %42 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8, !noalias !383
  store i32 %43, i32* %28, align 8, !alias.scope !383
  %44 = bitcast %"struct.ruy::PMat.92"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false) #11, !alias.scope !386
  %45 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %10, i64 0, i32 3
  %46 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !386
  %49 = bitcast %"struct.ruy::PMat.92"* %10 to i64*
  store i64 %48, i64* %49, align 8, !alias.scope !386
  %50 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 5
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !386
  %53 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %10, i64 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8, !alias.scope !386
  %55 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6
  %56 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %10, i64 0, i32 2
  %57 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  %58 = bitcast %"struct.ruy::PMatLayout"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false) #11
  %59 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 7
  %60 = load i32, i32* %59, align 8, !noalias !386
  store i32 %60, i32* %45, align 8, !alias.scope !386
  %61 = bitcast i8* %2 to %"class.ruy::MulParams.89"*
  %62 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.ruy::Kernel.93", %"struct.ruy::Kernel.93"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #11
  store i8 -86, i8* %70, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EhhiNS_9MulParamsIiiEEE3RunERKNS_4PMatIhEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.93"* nonnull %7, %"struct.ruy::PMat.92"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat.92"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams.89"* dereferenceable(40) %61, i32 %63, i32 %65, i32 %67, i32 %69, %"struct.ruy::Mat.91"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhiE3RunENS_6TuningERKNS_3MatIhEEPNS_4PMatIhEEii(i32, %"struct.ruy::Mat.90"* dereferenceable(32), %"struct.ruy::PMat.92"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp slt i32 %3, %4
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.ruy::Mat.90", %"struct.ruy::Mat.90"* %1, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 2
  %20 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 3
  %21 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 2
  %22 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 0
  %23 = icmp eq i32* %7, null
  %24 = sext i32 %3 to i64
  %25 = sext i32 %4 to i64
  br label %26

26:                                               ; preds = %107, %9
  %27 = phi i64 [ %24, %9 ], [ %108, %107 ]
  %28 = load i32, i32* %10, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = trunc i64 %27 to i32
  %32 = trunc i64 %27 to i32
  br label %36

33:                                               ; preds = %107, %5
  ret void

34:                                               ; preds = %64, %26
  %35 = phi i32 [ 0, %26 ], [ %68, %64 ]
  br i1 %23, label %107, label %105

36:                                               ; preds = %30, %64
  %37 = phi i32 [ %102, %64 ], [ 0, %30 ]
  %38 = phi i32 [ %68, %64 ], [ 0, %30 ]
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %27, %40
  br i1 %41, label %42, label %61

42:                                               ; preds = %36
  %43 = load i32, i32* %12, align 8
  %44 = icmp slt i32 %37, %43
  br i1 %44, label %45, label %61

45:                                               ; preds = %42
  %46 = load i8*, i8** %14, align 8
  %47 = load i8, i8* %15, align 4
  %48 = load i32, i32* %16, align 4
  switch i8 %47, label %49 [
    i8 0, label %50
    i8 1, label %52
  ]

49:                                               ; preds = %45
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i32 [ 1, %45 ], [ %48, %49 ]
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %45 ]
  %54 = phi i32 [ %48, %50 ], [ 1, %45 ]
  %55 = mul nsw i32 %53, %37
  %56 = mul nsw i32 %54, %32
  %57 = add nsw i32 %56, %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %46, i64 %58
  %60 = load i8, i8* %59, align 1
  br label %64

61:                                               ; preds = %42, %36
  %62 = load i32, i32* %13, align 8
  %63 = trunc i32 %62 to i8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi i32 [ %31, %61 ], [ %32, %52 ]
  %66 = phi i8 [ %63, %61 ], [ %60, %52 ]
  %67 = zext i8 %66 to i32
  %68 = add nuw nsw i32 %38, %67
  %69 = load i8*, i8** %17, align 8
  %70 = load i8, i8* %18, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 0, %71
  %73 = and i32 %37, %72
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %65, %76
  %78 = load i8, i8* %20, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %21, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %71, i32 %80
  %84 = mul nsw i32 %81, %73
  %85 = mul nsw i32 %83, %77
  %86 = sub nsw i32 %37, %73
  %87 = sub nsw i32 %65, %77
  %88 = load i8, i8* %22, align 1
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i8 1, i8 %74
  %91 = zext i8 %90 to i32
  %92 = icmp eq i8 %88, 1
  %93 = select i1 %92, i8 1, i8 %70
  %94 = zext i8 %93 to i32
  %95 = mul nsw i32 %86, %91
  %96 = mul nsw i32 %87, %94
  %97 = add i32 %84, %85
  %98 = add i32 %97, %96
  %99 = add i32 %98, %95
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %69, i64 %100
  store i8 %66, i8* %101, align 1
  %102 = add nuw nsw i32 %37, 1
  %103 = load i32, i32* %10, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %36, label %34

105:                                              ; preds = %34
  %106 = getelementptr inbounds i32, i32* %7, i64 %27
  store i32 %35, i32* %106, align 4
  br label %107

107:                                              ; preds = %34, %105
  %108 = add nsw i64 %27, 1
  %109 = icmp eq i64 %108, %25
  br i1 %109, label %33, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EhhiNS_9MulParamsIiiEEE3RunERKNS_4PMatIhEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.93"*, %"struct.ruy::PMat.92"* dereferenceable(40), %"struct.ruy::PMat.92"* dereferenceable(40), %"class.ruy::MulParams.89"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat.91"*) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  %13 = select i1 %12, i32 %11, i32 %6
  %14 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %7
  %17 = select i1 %16, i32 %15, i32 %7
  %18 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %13, %4
  br i1 %20, label %21, label %56

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %5
  %23 = icmp sgt i32 %19, 0
  %24 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 4, i32 1
  %26 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 4, i32 2
  %27 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 3
  %28 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 2
  %29 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 2, i32 4, i32 0
  %30 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 1
  %32 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 3
  %34 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 2, i32 4, i32 0
  %36 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %2, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.ruy::PMat.92", %"struct.ruy::PMat.92"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 6
  %43 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 3
  %46 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 2
  %47 = sext i32 %5 to i64
  %48 = sext i32 %17 to i64
  %49 = sext i32 %4 to i64
  %50 = sext i32 %13 to i64
  br label %51

51:                                               ; preds = %21, %109
  %52 = phi i64 [ %49, %21 ], [ %110, %109 ]
  br i1 %22, label %53, label %109

53:                                               ; preds = %51
  %54 = trunc i64 %52 to i32
  %55 = trunc i64 %52 to i32
  br label %57

56:                                               ; preds = %109, %9
  ret void

57:                                               ; preds = %53, %190
  %58 = phi i64 [ %47, %53 ], [ %199, %190 ]
  br i1 %23, label %59, label %112

59:                                               ; preds = %57
  %60 = load i8*, i8** %24, align 8
  %61 = load i8, i8* %25, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 0, %62
  %64 = load i8, i8* %26, align 1
  %65 = zext i8 %64 to i32
  %66 = sub nsw i32 0, %65
  %67 = and i32 %54, %66
  %68 = load i8, i8* %27, align 4
  %69 = icmp eq i8 %68, 0
  %70 = load i32, i32* %28, align 4
  %71 = select i1 %69, i32 %65, i32 %70
  %72 = icmp eq i8 %68, 1
  %73 = select i1 %72, i32 %62, i32 %70
  %74 = mul nsw i32 %73, %67
  %75 = sub nsw i32 %54, %67
  %76 = load i8, i8* %29, align 1
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i8 1, i8 %64
  %79 = zext i8 %78 to i32
  %80 = icmp eq i8 %76, 1
  %81 = select i1 %80, i8 1, i8 %61
  %82 = zext i8 %81 to i32
  %83 = mul nsw i32 %75, %82
  %84 = load i8*, i8** %30, align 8
  %85 = load i8, i8* %31, align 1
  %86 = zext i8 %85 to i32
  %87 = sub nsw i32 0, %86
  %88 = load i8, i8* %32, align 1
  %89 = zext i8 %88 to i32
  %90 = sub nsw i32 0, %89
  %91 = trunc i64 %58 to i32
  %92 = and i32 %91, %90
  %93 = load i8, i8* %33, align 4
  %94 = icmp eq i8 %93, 0
  %95 = load i32, i32* %34, align 4
  %96 = select i1 %94, i32 %89, i32 %95
  %97 = icmp eq i8 %93, 1
  %98 = select i1 %97, i32 %86, i32 %95
  %99 = mul nsw i32 %98, %92
  %100 = sub nsw i32 %91, %92
  %101 = load i8, i8* %35, align 1
  %102 = icmp eq i8 %101, 0
  %103 = select i1 %102, i8 1, i8 %88
  %104 = zext i8 %103 to i32
  %105 = icmp eq i8 %101, 1
  %106 = select i1 %105, i8 1, i8 %85
  %107 = zext i8 %106 to i32
  %108 = mul nsw i32 %100, %107
  br label %116

109:                                              ; preds = %190, %51
  %110 = add nsw i64 %52, 1
  %111 = icmp slt i64 %110, %50
  br i1 %111, label %51, label %56

112:                                              ; preds = %116, %57
  %113 = phi i32 [ 0, %57 ], [ %142, %116 ]
  %114 = load i32*, i32** %36, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %149, label %145

116:                                              ; preds = %116, %59
  %117 = phi i32 [ 0, %59 ], [ %143, %116 ]
  %118 = phi i32 [ 0, %59 ], [ %142, %116 ]
  %119 = and i32 %117, %63
  %120 = mul nsw i32 %71, %119
  %121 = sub nsw i32 %117, %119
  %122 = mul nsw i32 %121, %79
  %123 = add i32 %120, %74
  %124 = add i32 %123, %83
  %125 = add i32 %124, %122
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %60, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = zext i8 %128 to i32
  %130 = and i32 %117, %87
  %131 = mul nsw i32 %96, %130
  %132 = sub nsw i32 %117, %130
  %133 = mul nsw i32 %132, %104
  %134 = add i32 %131, %99
  %135 = add i32 %134, %108
  %136 = add i32 %135, %133
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %84, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = zext i8 %139 to i32
  %141 = mul nuw nsw i32 %140, %129
  %142 = add nuw nsw i32 %141, %118
  %143 = add nuw nsw i32 %117, 1
  %144 = icmp eq i32 %143, %19
  br i1 %144, label %112, label %116

145:                                              ; preds = %112
  %146 = getelementptr inbounds i32, i32* %114, i64 %52
  %147 = load i32, i32* %146, align 4
  %148 = add nsw i32 %147, %113
  br label %149

149:                                              ; preds = %112, %145
  %150 = phi i32 [ %113, %112 ], [ %148, %145 ]
  %151 = load i32, i32* %37, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = load i32*, i32** %38, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 %58
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = sub nsw i32 %150, %157
  br label %159

159:                                              ; preds = %149, %153
  %160 = phi i32 [ %150, %149 ], [ %158, %153 ]
  %161 = load i32, i32* %39, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %159
  %164 = load i32*, i32** %40, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 %52
  %166 = load i32, i32* %165, align 4
  %167 = mul nsw i32 %166, %161
  %168 = sub nsw i32 %160, %167
  %169 = or i1 %152, %162
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = mul i32 %151, %19
  %172 = mul i32 %171, %161
  %173 = add nsw i32 %168, %172
  br label %174

174:                                              ; preds = %159, %163, %170
  %175 = phi i32 [ %168, %163 ], [ %173, %170 ], [ %160, %159 ]
  %176 = load i32, i32* %41, align 8
  %177 = add nsw i32 %176, %175
  %178 = load i32, i32* %42, align 4
  %179 = icmp slt i32 %178, %177
  %180 = select i1 %179, i32 %178, i32 %177
  %181 = load i32, i32* %43, align 8
  %182 = icmp slt i32 %180, %181
  %183 = select i1 %182, i32 %181, i32 %180
  %184 = load i32*, i32** %44, align 8
  %185 = load i8, i8* %45, align 4
  %186 = load i32, i32* %46, align 4
  switch i8 %185, label %187 [
    i8 0, label %188
    i8 1, label %190
  ]

187:                                              ; preds = %174
  br label %188

188:                                              ; preds = %187, %174
  %189 = phi i32 [ 1, %174 ], [ %186, %187 ]
  br label %190

190:                                              ; preds = %174, %188
  %191 = phi i32 [ %189, %188 ], [ %186, %174 ]
  %192 = phi i32 [ %186, %188 ], [ 1, %174 ]
  %193 = mul nsw i32 %191, %55
  %194 = trunc i64 %58 to i32
  %195 = mul nsw i32 %192, %194
  %196 = add nsw i32 %195, %193
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %184, i64 %197
  store i32 %183, i32* %198, align 4
  %199 = add nsw i64 %58, 1
  %200 = icmp slt i64 %199, %48
  br i1 %200, label %57, label %109
}

declare void @_ZN3ruy14Pack8bitAvx512EPKaaS1_iiiPaPi(i8*, i8 signext, i8*, i32, i32, i32, i8*, i32*) local_unnamed_addr #3

declare void @_ZN3ruy25Kernel8bitAvx512SingleColERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* dereferenceable(1352)) local_unnamed_addr #3

declare void @_ZN3ruy16Kernel8bitAvx512ERKNS_16KernelParams8bitILi16ELi16EEE(%"struct.ruy::KernelParams8bit"* dereferenceable(1352)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EhhiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %60, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 65536, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262145, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 1023
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, 255
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %36, i32* %37, align 8
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %39 = bitcast %"struct.ruy::PEMat"* %38 to i24*
  store i24 65536, i24* %39, align 8
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %41 = bitcast %"struct.ruy::Type"* %40 to i24*
  store i24 262145, i24* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %44, i32* %45, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %51, align 1
  %52 = and i32 %44, 1023
  %53 = icmp eq i32 %52, 0
  %54 = add nsw i32 %44, 64
  %55 = select i1 %53, i32 %54, i32 %44
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %55, i32* %56, align 4
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %58 = load i32, i32* %57, align 8
  %59 = and i32 %58, 255
  br label %119

60:                                               ; preds = %9
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %63 = bitcast %"struct.ruy::PEMat"* %62 to i24*
  store i24 65537, i24* %63, align 8
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %65 = bitcast %"struct.ruy::Type"* %64 to i24*
  store i24 262145, i24* %65, align 8
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %66, align 4
  %67 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = add i32 %68, 3
  %70 = and i32 %69, -4
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %70, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = add i32 %73, 7
  %75 = and i32 %74, -8
  %76 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %75, i32* %76, align 4
  %77 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %77, align 1
  %78 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 4, i8* %78, align 1
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %79, align 1
  %80 = and i32 %69, 1020
  %81 = icmp eq i32 %80, 0
  %82 = add nsw i32 %70, 64
  %83 = select i1 %81, i32 %82, i32 %70
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %83, i32* %84, align 4
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %86 = load i32, i32* %85, align 8
  %87 = shl i32 %86, 24
  %88 = ashr exact i32 %87, 24
  %89 = xor i32 %88, -128
  %90 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %89, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %92 = bitcast %"struct.ruy::PEMat"* %91 to i24*
  store i24 65537, i24* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %94 = bitcast %"struct.ruy::Type"* %93 to i24*
  store i24 262145, i24* %94, align 8
  %95 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %95, align 4
  %96 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = add i32 %97, 3
  %99 = and i32 %98, -4
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %99, i32* %100, align 4
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = add i32 %102, 7
  %104 = and i32 %103, -8
  %105 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %106, align 1
  %107 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 4, i8* %107, align 1
  %108 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 8, i8* %108, align 1
  %109 = and i32 %98, 1020
  %110 = icmp eq i32 %109, 0
  %111 = add nsw i32 %99, 64
  %112 = select i1 %110, i32 %111, i32 %99
  %113 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %112, i32* %113, align 4
  %114 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %115 = load i32, i32* %114, align 8
  %116 = shl i32 %115, 24
  %117 = ashr exact i32 %116, 24
  %118 = xor i32 %117, -128
  br label %119

119:                                              ; preds = %60, %13
  %120 = phi i32 [ %118, %60 ], [ %59, %13 ]
  %121 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %60 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEhhEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %122 = phi void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %60 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EhhiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %120, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %121, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %124, align 8
  %125 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %121, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %125, align 8
  %126 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* %122, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %126, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEhaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !389
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !392
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !392
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !392
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  %26 = xor i8 %25, -128
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %26, i64 32, i1 false) #11
  %27 = icmp slt i32 %3, %4
  br i1 %27, label %28, label %47

28:                                               ; preds = %5
  %29 = icmp eq i32* %19, null
  %30 = sext i32 %3 to i64
  %31 = sext i32 %4 to i64
  %32 = sext i32 %14 to i64
  br label %33

33:                                               ; preds = %33, %28
  %34 = phi i64 [ %30, %28 ], [ %45, %33 ]
  %35 = getelementptr inbounds i32, i32* %19, i64 %34
  %36 = select i1 %29, i32* null, i32* %35
  %37 = mul nsw i64 %34, %32
  %38 = getelementptr inbounds i8, i8* %8, i64 %37
  %39 = trunc i64 %34 to i32
  %40 = sub nsw i32 %12, %39
  %41 = and i32 %39, -8
  %42 = mul nsw i32 %41, %21
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %16, i64 %43
  call void @_ZN3ruy12Pack8bitAvx2EPKaaS1_iiiPaPi(i8* %38, i8 signext -128, i8* nonnull %24, i32 %14, i32 %40, i32 %10, i8* %44, i32* %36) #11
  %45 = add nsw i64 %34, 8
  %46 = icmp slt i64 %45, %31
  br i1 %46, label %33, label %47

47:                                               ; preds = %33, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::KernelParams8bit.98", align 8
  %8 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %9 = bitcast i8** %8 to i32**
  %10 = load i32*, i32** %9, align 8, !noalias !395
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %18 = load i32, i32* %17, align 8, !noalias !395
  %19 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %20 = load i8*, i8** %19, align 8, !noalias !398
  %21 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 5
  %22 = bitcast i8** %21 to i32**
  %23 = load i32*, i32** %22, align 8, !noalias !398
  %24 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 7
  %29 = load i32, i32* %28, align 8, !noalias !398
  %30 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %31 = load i8*, i8** %30, align 8, !noalias !401
  %32 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 5
  %33 = bitcast i8** %32 to i32**
  %34 = load i32*, i32** %33, align 8, !noalias !401
  %35 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 7
  %38 = load i32, i32* %37, align 8, !noalias !401
  %39 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = bitcast %"struct.ruy::KernelParams8bit.98"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 488, i8* nonnull %47) #11
  %48 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 1
  %49 = bitcast i32** %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 480, i1 false) #11
  %50 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 27, i64 0
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 32, i1 false) #11
  %52 = mul nsw i32 %40, %27
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, i8* %20, i64 %53
  %55 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 3
  store i8* %54, i8** %55, align 8
  %56 = mul nsw i32 %42, %36
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, i8* %31, i64 %57
  %59 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 6
  store i8* %58, i8** %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 24
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 0
  store i32* %50, i32** %61, align 8
  %62 = bitcast i8* %2 to i32**
  %63 = load i32*, i32** %62, align 8
  %64 = icmp eq i32* %63, null
  br i1 %64, label %66, label %65

65:                                               ; preds = %6
  store i32* %63, i32** %61, align 8
  store i8 1, i8* %60, align 8
  br label %66

66:                                               ; preds = %65, %6
  %67 = phi i8 [ 0, %6 ], [ 1, %65 ]
  %68 = icmp eq i32* %23, null
  br i1 %68, label %72, label %69

69:                                               ; preds = %66
  %70 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 1
  store i32* %23, i32** %70, align 8
  %71 = or i8 %67, 2
  store i8 %71, i8* %60, align 8
  br label %72

72:                                               ; preds = %69, %66
  %73 = phi i8 [ %67, %66 ], [ %71, %69 ]
  %74 = icmp eq i32* %34, null
  br i1 %74, label %78, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 2
  store i32* %34, i32** %76, align 8
  %77 = or i8 %73, 4
  store i8 %77, i8* %60, align 8
  br label %78

78:                                               ; preds = %75, %72
  %79 = phi i8 [ %73, %72 ], [ %77, %75 ]
  %80 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 12
  store i32 %40, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 13
  store i32 %42, i32* %81, align 4
  %82 = add nsw i32 %44, -8
  %83 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 14
  store i32 %82, i32* %83, align 8
  %84 = add nsw i32 %46, -8
  %85 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 15
  store i32 %84, i32* %85, align 4
  %86 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 18
  store i32 %27, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 19
  store i32 %36, i32* %87, align 4
  %88 = shl i32 %16, 2
  %89 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 20
  store i32 %88, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 8
  store i32 %29, i32* %90, align 8
  %91 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 9
  store i32 %38, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 10
  store i32 %18, i32* %92, align 8
  %93 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 21
  store i32 %25, i32* %93, align 4
  %94 = mul i32 %29, %25
  %95 = mul i32 %94, %38
  %96 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 11
  store i32 %95, i32* %96, align 4
  %97 = getelementptr inbounds i8, i8* %2, i64 16
  %98 = bitcast i8* %97 to i32**
  %99 = load i32*, i32** %98, align 8
  %100 = icmp eq i32* %99, null
  br i1 %100, label %111, label %101

101:                                              ; preds = %78
  %102 = ptrtoint i32* %99 to i64
  %103 = or i8 %79, 24
  store i8 %103, i8* %60, align 8
  %104 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 4
  %105 = bitcast i32** %104 to i64*
  store i64 %102, i64* %105, align 8
  %106 = getelementptr inbounds i8, i8* %2, i64 24
  %107 = bitcast i8* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 5
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  br label %140

111:                                              ; preds = %78
  %112 = getelementptr inbounds i8, i8* %2, i64 12
  %113 = bitcast i8* %112 to i32*
  %114 = load i32, i32* %113, align 4
  %115 = icmp sgt i32 %114, 0
  br i1 %115, label %116, label %118

116:                                              ; preds = %111
  %117 = or i8 %79, 16
  store i8 %117, i8* %60, align 8
  br label %118

118:                                              ; preds = %116, %111
  %119 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 29, i64 0
  %120 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 4
  store i32* %119, i32** %120, align 8
  %121 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 30, i64 0
  %122 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 5
  store i32* %121, i32** %122, align 8
  %123 = getelementptr inbounds i8, i8* %2, i64 8
  %124 = bitcast i8* %123 to i32*
  %125 = load i32, i32* %124, align 8
  %126 = insertelement <4 x i32> undef, i32 %125, i32 0
  %127 = shufflevector <4 x i32> %126, <4 x i32> undef, <4 x i32> zeroinitializer
  %128 = bitcast i32* %119 to <4 x i32>*
  store <4 x i32> %127, <4 x i32>* %128, align 4
  %129 = insertelement <4 x i32> undef, i32 %114, i32 0
  %130 = shufflevector <4 x i32> %129, <4 x i32> undef, <4 x i32> zeroinitializer
  %131 = bitcast i32* %121 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %131, align 4
  %132 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 29, i64 4
  store i32 %125, i32* %132, align 4
  %133 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 30, i64 4
  store i32 %114, i32* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 29, i64 5
  store i32 %125, i32* %134, align 4
  %135 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 30, i64 5
  store i32 %114, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 29, i64 6
  store i32 %125, i32* %136, align 4
  %137 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 30, i64 6
  store i32 %114, i32* %137, align 4
  %138 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 29, i64 7
  store i32 %125, i32* %138, align 4
  %139 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 30, i64 7
  store i32 %114, i32* %139, align 4
  br label %140

140:                                              ; preds = %101, %118
  %141 = getelementptr inbounds i8, i8* %2, i64 32
  %142 = bitcast i8* %141 to i32*
  %143 = load i32, i32* %142, align 8
  %144 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 22
  store i32 %143, i32* %144, align 8
  %145 = getelementptr inbounds i8, i8* %2, i64 36
  %146 = bitcast i8* %145 to i32*
  %147 = load i32, i32* %146, align 4
  %148 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 23
  store i32 %147, i32* %148, align 4
  %149 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 16
  store i32 %12, i32* %149, align 8
  %150 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 17
  store i32 %14, i32* %150, align 4
  %151 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 25
  store i8 4, i8* %151, align 1
  %152 = mul nsw i32 %42, %16
  %153 = sext i32 %152 to i64
  %154 = getelementptr inbounds i32, i32* %10, i64 %153
  %155 = sext i32 %40 to i64
  %156 = getelementptr inbounds i32, i32* %154, i64 %155
  %157 = getelementptr inbounds %"struct.ruy::KernelParams8bit.98", %"struct.ruy::KernelParams8bit.98"* %7, i64 0, i32 7
  %158 = bitcast i8** %157 to i32**
  store i32* %156, i32** %158, align 8
  %159 = icmp eq i32 %14, 1
  br i1 %159, label %160, label %161

160:                                              ; preds = %140
  call void @_ZN3ruy23Kernel8bitAvx2SingleColERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.98"* nonnull dereferenceable(488) %7) #11
  br label %162

161:                                              ; preds = %140
  call void @_ZN3ruy14Kernel8bitAvx2ERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.98"* nonnull dereferenceable(488) %7) #11
  br label %162

162:                                              ; preds = %160, %161
  call void @llvm.lifetime.end.p0i8(i64 488, i8* nonnull %47) #11
  ret void
}

declare void @_ZN3ruy12Pack8bitAvx2EPKaaS1_iiiPaPi(i8*, i8 signext, i8*, i32, i32, i32, i8*, i32*) local_unnamed_addr #3

declare void @_ZN3ruy23Kernel8bitAvx2SingleColERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.98"* dereferenceable(488)) local_unnamed_addr #3

declare void @_ZN3ruy14Kernel8bitAvx2ERKNS_16KernelParams8bitILi8ELi8EEE(%"struct.ruy::KernelParams8bit.98"* dereferenceable(488)) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite21optimized_integer_ops15TransposeConvV2ERKNS_10ConvParamsEPKiS5_RKNS_12RuntimeShapeEPKaS8_SA_S8_S5_S8_PaS8_PiSC_PNS_17CpuBackendContextE(%"struct.tflite::ConvParams"* dereferenceable(56), i32*, i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*, %"class.tflite::CpuBackendContext"*) local_unnamed_addr #5 comdat {
  %16 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.100", align 4
  %17 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.100", align 4
  %18 = alloca %"struct.tflite::cpu_backend_gemm::MatrixParams.81", align 4
  %19 = alloca %"struct.tflite::cpu_backend_gemm::GemmParams.83", align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 0
  %22 = load i32, i32* %20, align 8
  %23 = icmp sgt i32 %22, 5
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = icmp sgt i32 %26, 5
  %28 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %29 = getelementptr inbounds %union.anon, %union.anon* %24, i64 0, i32 0
  %30 = load i32*, i32** %29, align 8
  %31 = bitcast %union.anon* %24 to i32*
  %32 = select i1 %23, i32* %30, i32* %31
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %union.anon, %union.anon* %28, i64 0, i32 0
  %35 = load i32*, i32** %34, align 8
  %36 = bitcast %union.anon* %28 to [5 x i32]*
  %37 = bitcast %union.anon* %28 to i32*
  %38 = select i1 %27, i32* %35, i32* %37
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, %33
  %41 = select i1 %40, i32 %39, i32 %33
  %42 = getelementptr inbounds i32, i32* %30, i64 1
  %43 = getelementptr inbounds i32, i32* %30, i64 2
  %44 = bitcast %union.anon* %24 to [5 x i32]*
  %45 = getelementptr inbounds [5 x i32], [5 x i32]* %44, i64 0, i64 1
  %46 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1
  %47 = bitcast [16 x i8]* %46 to i32*
  %48 = select i1 %23, i32* %42, i32* %45
  %49 = select i1 %23, i32* %43, i32* %47
  %50 = load i32, i32* %48, align 4
  %51 = load i32, i32* %49, align 4
  %52 = mul nsw i32 %51, %50
  %53 = getelementptr inbounds i32, i32* %35, i64 1
  %54 = getelementptr inbounds i32, i32* %35, i64 2
  %55 = getelementptr inbounds [5 x i32], [5 x i32]* %36, i64 0, i64 1
  %56 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1
  %57 = bitcast [16 x i8]* %56 to i32*
  %58 = select i1 %27, i32* %53, i32* %55
  %59 = select i1 %27, i32* %54, i32* %57
  %60 = load i32, i32* %58, align 4
  %61 = load i32, i32* %59, align 4
  %62 = mul i32 %61, %60
  %63 = load i32, i32* %21, align 8
  %64 = icmp sgt i32 %63, 5
  %65 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1
  %66 = getelementptr inbounds i32, i32* %30, i64 3
  %67 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1, i32 1, i64 4
  %68 = bitcast i8* %67 to i32*
  %69 = select i1 %23, i32* %66, i32* %68
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %union.anon, %union.anon* %65, i64 0, i32 0
  %72 = load i32*, i32** %71, align 8
  %73 = getelementptr inbounds i32, i32* %72, i64 3
  %74 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1, i64 4
  %75 = bitcast i8* %74 to i32*
  %76 = select i1 %64, i32* %73, i32* %75
  %77 = load i32, i32* %76, align 4
  %78 = icmp slt i32 %77, %70
  %79 = select i1 %78, i32 %77, i32 %70
  %80 = getelementptr inbounds i32, i32* %35, i64 3
  %81 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 1, i64 4
  %82 = bitcast i8* %81 to i32*
  %83 = select i1 %27, i32* %80, i32* %82
  %84 = load i32, i32* %83, align 4
  %85 = getelementptr inbounds i32, i32* %72, i64 2
  %86 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %5, i64 0, i32 1, i32 1
  %87 = bitcast [16 x i8]* %86 to i32*
  %88 = select i1 %64, i32* %85, i32* %87
  %89 = load i32, i32* %88, align 4
  %90 = icmp slt i32 %89, %84
  %91 = select i1 %90, i32 %89, i32 %84
  %92 = mul nsw i32 %79, %52
  %93 = mul i32 %62, %91
  %94 = getelementptr inbounds i32, i32* %72, i64 1
  %95 = bitcast %union.anon* %65 to [5 x i32]*
  %96 = bitcast %union.anon* %65 to i32*
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* %95, i64 0, i64 1
  %98 = select i1 %64, i32* %72, i32* %96
  %99 = select i1 %64, i32* %94, i32* %97
  %100 = load i32, i32* %98, align 4
  %101 = load i32, i32* %99, align 4
  %102 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 1
  %103 = load i16, i16* %102, align 2
  %104 = sext i16 %103 to i32
  %105 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 3
  %106 = load i16, i16* %105, align 2
  %107 = sext i16 %106 to i32
  %108 = add nsw i32 %107, %104
  %109 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 0
  %110 = load i16, i16* %109, align 2
  %111 = sext i16 %110 to i32
  %112 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 1, i32 2
  %113 = load i16, i16* %112, align 2
  %114 = sext i16 %113 to i32
  %115 = add nsw i32 %114, %111
  %116 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 3
  %117 = load i16, i16* %116, align 4
  %118 = sext i16 %117 to i32
  %119 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 2
  %120 = load i16, i16* %119, align 2
  %121 = sext i16 %120 to i32
  %122 = mul nsw i32 %101, %100
  %123 = mul nsw i32 %122, %91
  %124 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #11
  %125 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16, i64 0, i32 0
  %126 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16, i64 0, i32 1
  %127 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16, i64 0, i32 3
  %129 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %129, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %124, i8 0, i64 14, i1 false) #11
  store i32 1, i32* %125, align 4
  store i32 %123, i32* %126, align 4
  store i32 %79, i32* %127, align 4
  store i8 0, i8* %128, align 4
  %130 = mul i32 %93, %41
  %131 = icmp sgt i32 %130, 0
  br i1 %131, label %132, label %136

132:                                              ; preds = %15
  %133 = bitcast i32* %13 to i8*
  %134 = zext i32 %130 to i64
  %135 = shl nuw nsw i64 %134, 2
  call void @llvm.memset.p0i8.i64(i8* align 4 %133, i8 0, i64 %135, i1 false)
  br label %136

136:                                              ; preds = %132, %15
  %137 = icmp sgt i32 %41, 0
  br i1 %137, label %138, label %317

138:                                              ; preds = %136
  %139 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17 to i8*
  %140 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17, i64 0, i32 1
  %141 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17, i64 0, i32 2
  %142 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17, i64 0, i32 3
  %143 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 6
  %144 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %18 to i8*
  %145 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %18, i64 0, i32 1
  %146 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %18, i64 0, i32 2
  %147 = bitcast %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %19 to i8*
  %148 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %19, i64 0, i32 5
  %149 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %19, i64 0, i32 6
  %150 = sext i32 %93 to i64
  %151 = sext i32 %92 to i64
  %152 = sext i32 %41 to i64
  %153 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17 to i8*
  %154 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %17 to i8*
  %155 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %18 to i8*
  %156 = bitcast %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %18 to i8*
  br label %497

157:                                              ; preds = %497
  %158 = icmp ne i32* %8, null
  %159 = and i1 %158, %137
  br i1 %159, label %160, label %317

160:                                              ; preds = %157
  %161 = icmp sgt i32 %60, 0
  %162 = icmp sgt i32 %61, 0
  %163 = icmp sgt i32 %91, 0
  %164 = sext i32 %91 to i64
  %165 = zext i32 %91 to i64
  %166 = getelementptr i32, i32* %8, i64 %165
  %167 = and i64 %165, 4294967288
  %168 = add nsw i64 %167, -8
  %169 = lshr exact i64 %168, 3
  %170 = add nuw nsw i64 %169, 1
  %171 = icmp ult i32 %91, 8
  %172 = and i64 %165, 4294967288
  %173 = and i64 %170, 1
  %174 = icmp eq i64 %168, 0
  %175 = sub nuw nsw i64 %170, %173
  %176 = icmp eq i64 %173, 0
  %177 = icmp eq i64 %172, %165
  %178 = and i64 %165, 3
  %179 = icmp eq i64 %178, 0
  br label %180

180:                                              ; preds = %186, %160
  %181 = phi i32 [ 0, %160 ], [ %188, %186 ]
  %182 = phi i32* [ %13, %160 ], [ %187, %186 ]
  br i1 %161, label %183, label %186

183:                                              ; preds = %180, %281
  %184 = phi i32 [ %283, %281 ], [ 0, %180 ]
  %185 = phi i32* [ %282, %281 ], [ %182, %180 ]
  br i1 %162, label %190, label %281

186:                                              ; preds = %281, %180
  %187 = phi i32* [ %182, %180 ], [ %282, %281 ]
  %188 = add nuw nsw i32 %181, 1
  %189 = icmp eq i32 %188, %41
  br i1 %189, label %317, label %180

190:                                              ; preds = %183, %285
  %191 = phi i64 [ %289, %285 ], [ 0, %183 ]
  %192 = phi i32 [ %287, %285 ], [ 0, %183 ]
  %193 = phi i32* [ %286, %285 ], [ %185, %183 ]
  %194 = mul i64 %191, %164
  %195 = getelementptr i32, i32* %185, i64 %194
  %196 = add i64 %194, %165
  %197 = getelementptr i32, i32* %185, i64 %196
  br i1 %163, label %198, label %285

198:                                              ; preds = %190
  br i1 %171, label %199, label %217

199:                                              ; preds = %280, %217, %198
  %200 = phi i64 [ 0, %217 ], [ 0, %198 ], [ %172, %280 ]
  %201 = xor i64 %200, -1
  %202 = add nsw i64 %201, %165
  br i1 %179, label %214, label %203

203:                                              ; preds = %199, %203
  %204 = phi i64 [ %211, %203 ], [ %200, %199 ]
  %205 = phi i64 [ %212, %203 ], [ %178, %199 ]
  %206 = getelementptr inbounds i32, i32* %8, i64 %204
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds i32, i32* %193, i64 %204
  %209 = load i32, i32* %208, align 4
  %210 = add nsw i32 %209, %207
  store i32 %210, i32* %208, align 4
  %211 = add nuw nsw i64 %204, 1
  %212 = add i64 %205, -1
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %214, label %203, !llvm.loop !404

214:                                              ; preds = %203, %199
  %215 = phi i64 [ %200, %199 ], [ %211, %203 ]
  %216 = icmp ult i64 %202, 3
  br i1 %216, label %285, label %290

217:                                              ; preds = %198
  %218 = icmp ult i32* %195, %166
  %219 = icmp ugt i32* %197, %8
  %220 = and i1 %218, %219
  br i1 %220, label %199, label %221

221:                                              ; preds = %217
  br i1 %174, label %261, label %222

222:                                              ; preds = %221, %222
  %223 = phi i64 [ %258, %222 ], [ 0, %221 ]
  %224 = phi i64 [ %259, %222 ], [ %175, %221 ]
  %225 = getelementptr inbounds i32, i32* %8, i64 %223
  %226 = bitcast i32* %225 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !405
  %228 = getelementptr inbounds i32, i32* %225, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !405
  %231 = getelementptr inbounds i32, i32* %193, i64 %223
  %232 = bitcast i32* %231 to <4 x i32>*
  %233 = load <4 x i32>, <4 x i32>* %232, align 4, !alias.scope !408, !noalias !405
  %234 = getelementptr inbounds i32, i32* %231, i64 4
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4, !alias.scope !408, !noalias !405
  %237 = add nsw <4 x i32> %233, %227
  %238 = add nsw <4 x i32> %236, %230
  %239 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %239, align 4, !alias.scope !408, !noalias !405
  %240 = bitcast i32* %234 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %240, align 4, !alias.scope !408, !noalias !405
  %241 = or i64 %223, 8
  %242 = getelementptr inbounds i32, i32* %8, i64 %241
  %243 = bitcast i32* %242 to <4 x i32>*
  %244 = load <4 x i32>, <4 x i32>* %243, align 4, !alias.scope !405
  %245 = getelementptr inbounds i32, i32* %242, i64 4
  %246 = bitcast i32* %245 to <4 x i32>*
  %247 = load <4 x i32>, <4 x i32>* %246, align 4, !alias.scope !405
  %248 = getelementptr inbounds i32, i32* %193, i64 %241
  %249 = bitcast i32* %248 to <4 x i32>*
  %250 = load <4 x i32>, <4 x i32>* %249, align 4, !alias.scope !408, !noalias !405
  %251 = getelementptr inbounds i32, i32* %248, i64 4
  %252 = bitcast i32* %251 to <4 x i32>*
  %253 = load <4 x i32>, <4 x i32>* %252, align 4, !alias.scope !408, !noalias !405
  %254 = add nsw <4 x i32> %250, %244
  %255 = add nsw <4 x i32> %253, %247
  %256 = bitcast i32* %248 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %256, align 4, !alias.scope !408, !noalias !405
  %257 = bitcast i32* %251 to <4 x i32>*
  store <4 x i32> %255, <4 x i32>* %257, align 4, !alias.scope !408, !noalias !405
  %258 = add i64 %223, 16
  %259 = add i64 %224, -2
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %261, label %222, !llvm.loop !410

261:                                              ; preds = %222, %221
  %262 = phi i64 [ 0, %221 ], [ %258, %222 ]
  br i1 %176, label %280, label %263

263:                                              ; preds = %261
  %264 = getelementptr inbounds i32, i32* %8, i64 %262
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4, !alias.scope !405
  %267 = getelementptr inbounds i32, i32* %264, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  %269 = load <4 x i32>, <4 x i32>* %268, align 4, !alias.scope !405
  %270 = getelementptr inbounds i32, i32* %193, i64 %262
  %271 = bitcast i32* %270 to <4 x i32>*
  %272 = load <4 x i32>, <4 x i32>* %271, align 4, !alias.scope !408, !noalias !405
  %273 = getelementptr inbounds i32, i32* %270, i64 4
  %274 = bitcast i32* %273 to <4 x i32>*
  %275 = load <4 x i32>, <4 x i32>* %274, align 4, !alias.scope !408, !noalias !405
  %276 = add nsw <4 x i32> %272, %266
  %277 = add nsw <4 x i32> %275, %269
  %278 = bitcast i32* %270 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %278, align 4, !alias.scope !408, !noalias !405
  %279 = bitcast i32* %273 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %279, align 4, !alias.scope !408, !noalias !405
  br label %280

280:                                              ; preds = %261, %263
  br i1 %177, label %285, label %199

281:                                              ; preds = %285, %183
  %282 = phi i32* [ %185, %183 ], [ %286, %285 ]
  %283 = add nuw nsw i32 %184, 1
  %284 = icmp eq i32 %283, %60
  br i1 %284, label %186, label %183

285:                                              ; preds = %214, %290, %280, %190
  %286 = getelementptr inbounds i32, i32* %193, i64 %164
  %287 = add nuw nsw i32 %192, 1
  %288 = icmp eq i32 %287, %61
  %289 = add i64 %191, 1
  br i1 %288, label %281, label %190

290:                                              ; preds = %214, %290
  %291 = phi i64 [ %315, %290 ], [ %215, %214 ]
  %292 = getelementptr inbounds i32, i32* %8, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = getelementptr inbounds i32, i32* %193, i64 %291
  %295 = load i32, i32* %294, align 4
  %296 = add nsw i32 %295, %293
  store i32 %296, i32* %294, align 4
  %297 = add nuw nsw i64 %291, 1
  %298 = getelementptr inbounds i32, i32* %8, i64 %297
  %299 = load i32, i32* %298, align 4
  %300 = getelementptr inbounds i32, i32* %193, i64 %297
  %301 = load i32, i32* %300, align 4
  %302 = add nsw i32 %301, %299
  store i32 %302, i32* %300, align 4
  %303 = add nuw nsw i64 %291, 2
  %304 = getelementptr inbounds i32, i32* %8, i64 %303
  %305 = load i32, i32* %304, align 4
  %306 = getelementptr inbounds i32, i32* %193, i64 %303
  %307 = load i32, i32* %306, align 4
  %308 = add nsw i32 %307, %305
  store i32 %308, i32* %306, align 4
  %309 = add nuw nsw i64 %291, 3
  %310 = getelementptr inbounds i32, i32* %8, i64 %309
  %311 = load i32, i32* %310, align 4
  %312 = getelementptr inbounds i32, i32* %193, i64 %309
  %313 = load i32, i32* %312, align 4
  %314 = add nsw i32 %313, %311
  store i32 %314, i32* %312, align 4
  %315 = add nuw nsw i64 %291, 4
  %316 = icmp eq i64 %315, %165
  br i1 %316, label %285, label %290, !llvm.loop !411

317:                                              ; preds = %186, %136, %157
  %318 = load i32, i32* %25, align 8
  %319 = icmp sgt i32 %318, 5
  br i1 %319, label %320, label %322

320:                                              ; preds = %317
  %321 = load i32*, i32** %34, align 8
  br label %324

322:                                              ; preds = %317
  %323 = icmp sgt i32 %318, 0
  br i1 %323, label %324, label %424

324:                                              ; preds = %322, %320
  %325 = phi i32* [ %321, %320 ], [ %37, %322 ]
  %326 = zext i32 %318 to i64
  %327 = icmp ult i32 %318, 8
  br i1 %327, label %413, label %328

328:                                              ; preds = %324
  %329 = and i64 %326, 4294967288
  %330 = add nsw i64 %329, -8
  %331 = lshr exact i64 %330, 3
  %332 = add nuw nsw i64 %331, 1
  %333 = and i64 %332, 3
  %334 = icmp ult i64 %330, 24
  br i1 %334, label %380, label %335

335:                                              ; preds = %328
  %336 = sub nsw i64 %332, %333
  br label %337

337:                                              ; preds = %337, %335
  %338 = phi i64 [ 0, %335 ], [ %377, %337 ]
  %339 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %335 ], [ %375, %337 ]
  %340 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %335 ], [ %376, %337 ]
  %341 = phi i64 [ %336, %335 ], [ %378, %337 ]
  %342 = getelementptr inbounds i32, i32* %325, i64 %338
  %343 = bitcast i32* %342 to <4 x i32>*
  %344 = load <4 x i32>, <4 x i32>* %343, align 4
  %345 = getelementptr inbounds i32, i32* %342, i64 4
  %346 = bitcast i32* %345 to <4 x i32>*
  %347 = load <4 x i32>, <4 x i32>* %346, align 4
  %348 = mul nsw <4 x i32> %344, %339
  %349 = mul nsw <4 x i32> %347, %340
  %350 = or i64 %338, 8
  %351 = getelementptr inbounds i32, i32* %325, i64 %350
  %352 = bitcast i32* %351 to <4 x i32>*
  %353 = load <4 x i32>, <4 x i32>* %352, align 4
  %354 = getelementptr inbounds i32, i32* %351, i64 4
  %355 = bitcast i32* %354 to <4 x i32>*
  %356 = load <4 x i32>, <4 x i32>* %355, align 4
  %357 = mul nsw <4 x i32> %353, %348
  %358 = mul nsw <4 x i32> %356, %349
  %359 = or i64 %338, 16
  %360 = getelementptr inbounds i32, i32* %325, i64 %359
  %361 = bitcast i32* %360 to <4 x i32>*
  %362 = load <4 x i32>, <4 x i32>* %361, align 4
  %363 = getelementptr inbounds i32, i32* %360, i64 4
  %364 = bitcast i32* %363 to <4 x i32>*
  %365 = load <4 x i32>, <4 x i32>* %364, align 4
  %366 = mul nsw <4 x i32> %362, %357
  %367 = mul nsw <4 x i32> %365, %358
  %368 = or i64 %338, 24
  %369 = getelementptr inbounds i32, i32* %325, i64 %368
  %370 = bitcast i32* %369 to <4 x i32>*
  %371 = load <4 x i32>, <4 x i32>* %370, align 4
  %372 = getelementptr inbounds i32, i32* %369, i64 4
  %373 = bitcast i32* %372 to <4 x i32>*
  %374 = load <4 x i32>, <4 x i32>* %373, align 4
  %375 = mul nsw <4 x i32> %371, %366
  %376 = mul nsw <4 x i32> %374, %367
  %377 = add i64 %338, 32
  %378 = add i64 %341, -4
  %379 = icmp eq i64 %378, 0
  br i1 %379, label %380, label %337, !llvm.loop !412

380:                                              ; preds = %337, %328
  %381 = phi <4 x i32> [ undef, %328 ], [ %375, %337 ]
  %382 = phi <4 x i32> [ undef, %328 ], [ %376, %337 ]
  %383 = phi i64 [ 0, %328 ], [ %377, %337 ]
  %384 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %328 ], [ %375, %337 ]
  %385 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %328 ], [ %376, %337 ]
  %386 = icmp eq i64 %333, 0
  br i1 %386, label %403, label %387

387:                                              ; preds = %380, %387
  %388 = phi i64 [ %400, %387 ], [ %383, %380 ]
  %389 = phi <4 x i32> [ %398, %387 ], [ %384, %380 ]
  %390 = phi <4 x i32> [ %399, %387 ], [ %385, %380 ]
  %391 = phi i64 [ %401, %387 ], [ %333, %380 ]
  %392 = getelementptr inbounds i32, i32* %325, i64 %388
  %393 = bitcast i32* %392 to <4 x i32>*
  %394 = load <4 x i32>, <4 x i32>* %393, align 4
  %395 = getelementptr inbounds i32, i32* %392, i64 4
  %396 = bitcast i32* %395 to <4 x i32>*
  %397 = load <4 x i32>, <4 x i32>* %396, align 4
  %398 = mul nsw <4 x i32> %394, %389
  %399 = mul nsw <4 x i32> %397, %390
  %400 = add i64 %388, 8
  %401 = add i64 %391, -1
  %402 = icmp eq i64 %401, 0
  br i1 %402, label %403, label %387, !llvm.loop !413

403:                                              ; preds = %387, %380
  %404 = phi <4 x i32> [ %381, %380 ], [ %398, %387 ]
  %405 = phi <4 x i32> [ %382, %380 ], [ %399, %387 ]
  %406 = mul <4 x i32> %405, %404
  %407 = shufflevector <4 x i32> %406, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %408 = mul <4 x i32> %406, %407
  %409 = shufflevector <4 x i32> %408, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %410 = mul <4 x i32> %408, %409
  %411 = extractelement <4 x i32> %410, i32 0
  %412 = icmp eq i64 %329, %326
  br i1 %412, label %424, label %413

413:                                              ; preds = %403, %324
  %414 = phi i64 [ 0, %324 ], [ %329, %403 ]
  %415 = phi i32 [ 1, %324 ], [ %411, %403 ]
  br label %416

416:                                              ; preds = %413, %416
  %417 = phi i64 [ %422, %416 ], [ %414, %413 ]
  %418 = phi i32 [ %421, %416 ], [ %415, %413 ]
  %419 = getelementptr inbounds i32, i32* %325, i64 %417
  %420 = load i32, i32* %419, align 4
  %421 = mul nsw i32 %420, %418
  %422 = add nuw nsw i64 %417, 1
  %423 = icmp eq i64 %422, %326
  br i1 %423, label %424, label %416, !llvm.loop !414

424:                                              ; preds = %416, %403, %322
  %425 = phi i32 [ 1, %322 ], [ %411, %403 ], [ %421, %416 ]
  %426 = getelementptr inbounds %"struct.tflite::ConvParams", %"struct.tflite::ConvParams"* %0, i64 0, i32 8
  %427 = load i32, i32* %426, align 4
  %428 = sdiv i32 %425, %91
  %429 = icmp sgt i32 %91, 0
  br i1 %429, label %430, label %496

430:                                              ; preds = %424
  %431 = icmp sgt i32 %428, 0
  %432 = sext i32 %91 to i64
  %433 = zext i32 %91 to i64
  %434 = zext i32 %428 to i64
  br label %435

435:                                              ; preds = %440, %430
  %436 = phi i64 [ 0, %430 ], [ %441, %440 ]
  br i1 %431, label %437, label %440

437:                                              ; preds = %435
  %438 = getelementptr inbounds i32, i32* %1, i64 %436
  %439 = getelementptr inbounds i32, i32* %2, i64 %436
  br label %443

440:                                              ; preds = %473, %435
  %441 = add nuw nsw i64 %436, 1
  %442 = icmp eq i64 %441, %433
  br i1 %442, label %496, label %435

443:                                              ; preds = %473, %437
  %444 = phi i64 [ 0, %437 ], [ %494, %473 ]
  %445 = mul nsw i64 %444, %432
  %446 = add nsw i64 %445, %436
  %447 = getelementptr inbounds i32, i32* %13, i64 %446
  %448 = load i32, i32* %447, align 4
  %449 = load i32, i32* %438, align 4
  %450 = load i32, i32* %439, align 4
  %451 = icmp sgt i32 %450, 0
  %452 = sub nsw i32 0, %450
  %453 = select i1 %451, i32 0, i32 %452
  %454 = shl i32 1, %450
  %455 = select i1 %451, i32 %454, i32 1
  %456 = mul nsw i32 %455, %448
  %457 = icmp eq i32 %456, %449
  br i1 %457, label %462, label %458

458:                                              ; preds = %443
  %459 = sext i32 %456 to i64
  %460 = sext i32 %449 to i64
  %461 = mul nsw i64 %459, %460
  br label %466

462:                                              ; preds = %443
  %463 = icmp eq i32 %449, -2147483648
  %464 = sext i32 %449 to i64
  %465 = mul nsw i64 %464, %464
  br i1 %463, label %473, label %466

466:                                              ; preds = %462, %458
  %467 = phi i64 [ %461, %458 ], [ %465, %462 ]
  %468 = icmp sgt i64 %467, -1
  %469 = select i1 %468, i64 1073741824, i64 -1073741823
  %470 = add nsw i64 %469, %467
  %471 = sdiv i64 %470, 2147483648
  %472 = trunc i64 %471 to i32
  br label %473

473:                                              ; preds = %466, %462
  %474 = phi i32 [ %472, %466 ], [ 2147483647, %462 ]
  %475 = zext i32 %453 to i64
  %476 = shl nsw i64 -1, %475
  %477 = trunc i64 %476 to i32
  %478 = xor i32 %477, -1
  %479 = and i32 %474, %478
  %480 = ashr i32 %478, 1
  %481 = lshr i32 %474, 31
  %482 = add nsw i32 %481, %480
  %483 = ashr i32 %474, %453
  %484 = icmp sgt i32 %479, %482
  %485 = zext i1 %484 to i32
  %486 = add i32 %483, %427
  %487 = add i32 %486, %485
  %488 = icmp sgt i32 %487, -128
  %489 = select i1 %488, i32 %487, i32 -128
  %490 = icmp slt i32 %489, 127
  %491 = select i1 %490, i32 %489, i32 127
  %492 = trunc i32 %491 to i8
  %493 = getelementptr inbounds i8, i8* %10, i64 %446
  store i8 %492, i8* %493, align 1
  %494 = add nuw nsw i64 %444, 1
  %495 = icmp eq i64 %494, %434
  br i1 %495, label %440, label %443

496:                                              ; preds = %440, %424
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #11
  ret void

497:                                              ; preds = %138, %497
  %498 = phi i64 [ 0, %138 ], [ %506, %497 ]
  %499 = phi i32* [ %13, %138 ], [ %505, %497 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %153, i8 -86, i64 16, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %154, i8 0, i64 14, i1 false)
  store i32 %79, i32* %140, align 4
  store i32 %52, i32* %141, align 4
  %500 = load i32, i32* %143, align 4
  %501 = trunc i32 %500 to i8
  %502 = sub i8 0, %501
  store i8 %502, i8* %142, align 4
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %144) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %155, i8 -86, i64 20, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %156, i8 0, i64 17, i1 false)
  store i32 %123, i32* %145, align 4
  store i32 %52, i32* %146, align 4
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %147) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %147, i8 0, i64 32, i1 false) #11
  store i32 -2147483648, i32* %148, align 8
  store i32 2147483647, i32* %149, align 4
  %503 = mul nsw i64 %498, %151
  %504 = getelementptr inbounds i8, i8* %4, i64 %503
  call void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.100"* nonnull dereferenceable(16) %16, i8* %6, %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* nonnull dereferenceable(16) %17, i8* %504, %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* nonnull dereferenceable(20) %18, i32* %12, %"struct.tflite::cpu_backend_gemm::GemmParams.83"* nonnull dereferenceable(40) %19, %"class.tflite::CpuBackendContext"* %14) #11
  call void @_ZN6tflite13optimized_ops6Col2imIiEEvPKT_iiiiiiiiiiiPS2_(i32* %12, i32 %91, i32 %60, i32 %61, i32 %100, i32 %101, i32 %104, i32 %111, i32 %108, i32 %115, i32 %118, i32 %121, i32* %499)
  %505 = getelementptr inbounds i32, i32* %499, i64 %150
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %147) #11
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %144) #11
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #11
  %506 = add nuw nsw i64 %498, 1
  %507 = icmp slt i64 %506, %152
  br i1 %507, label %497, label %157
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite16cpu_backend_gemm6detail16GemmImplUsingRuyIaaiiLNS0_18QuantizationFlavorE1EE3RunERKNS0_12MatrixParamsIaEEPKaS8_SA_RKNS5_IiEEPiRKNS0_10GemmParamsIiiLS3_1EEEPNS_17CpuBackendContextE(%"struct.tflite::cpu_backend_gemm::MatrixParams.100"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* dereferenceable(16), i8*, %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* dereferenceable(20), i32*, %"struct.tflite::cpu_backend_gemm::GemmParams.83"* dereferenceable(40), %"class.tflite::CpuBackendContext"*) local_unnamed_addr #0 comdat align 2 {
  %9 = alloca %"struct.ruy::Mat.105", align 8
  %10 = alloca %"struct.ruy::Mat.105", align 8
  %11 = alloca %"struct.ruy::Mat.91", align 8
  %12 = alloca %"class.ruy::MulParams.89", align 8
  %13 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 4
  %14 = load i8, i8* %13, align 4, !range !64
  %15 = icmp ne i8 %14, 0
  %16 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %0, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp ne i32 %17, 0
  %19 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = select i1 %18, i32 %22, i32 %20
  %24 = ptrtoint i8* %1 to i64
  %25 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %0, i64 0, i32 3
  %26 = load i8, i8* %25, align 4
  br i1 %15, label %27, label %34

27:                                               ; preds = %8
  %28 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %0, i64 0, i32 4
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 1
  %31 = zext i1 %30 to i8
  %32 = icmp eq i8 %29, 2
  %33 = select i1 %32, i8 3, i8 %31
  br label %34

34:                                               ; preds = %8, %27
  %35 = phi i8 [ %33, %27 ], [ 0, %8 ]
  %36 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %2, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp ne i32 %37, 0
  %39 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %2, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %2, i64 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = select i1 %38, i32 %42, i32 %40
  %44 = ptrtoint i8* %3 to i64
  %45 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %2, i64 0, i32 3
  %46 = load i8, i8* %45, align 4
  br i1 %15, label %47, label %54

47:                                               ; preds = %34
  %48 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.100", %"struct.tflite::cpu_backend_gemm::MatrixParams.100"* %2, i64 0, i32 4
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 1
  %51 = zext i1 %50 to i8
  %52 = icmp eq i8 %49, 2
  %53 = select i1 %52, i8 3, i8 %51
  br label %54

54:                                               ; preds = %34, %47
  %55 = phi i8 [ %53, %47 ], [ 0, %34 ]
  %56 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp ne i32 %57, 0
  %59 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = select i1 %58, i32 %62, i32 %60
  %64 = ptrtoint i32* %5 to i64
  %65 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::MatrixParams.81", %"struct.tflite::cpu_backend_gemm::MatrixParams.81"* %4, i64 0, i32 3
  %66 = load i32, i32* %65, align 4
  %67 = bitcast %"class.ruy::MulParams.89"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %67) #11
  %68 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 5
  %69 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 6
  %70 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 0
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 1
  store i32 %71, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 1
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 2
  store i32 %74, i32* %75, align 4
  %76 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 2
  %77 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %12, i64 0, i32 3
  %78 = bitcast i32** %76 to <2 x i64>*
  %79 = load <2 x i64>, <2 x i64>* %78, align 8
  %80 = bitcast i32** %77 to <2 x i64>*
  store <2 x i64> %79, <2 x i64>* %80, align 8
  %81 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 4
  %82 = bitcast i32** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.ruy::MulParams.89"* %12 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 5
  %86 = load i32, i32* %85, align 8
  store i32 %86, i32* %68, align 8
  %87 = getelementptr inbounds %"struct.tflite::cpu_backend_gemm::GemmParams.83", %"struct.tflite::cpu_backend_gemm::GemmParams.83"* %6, i64 0, i32 6
  %88 = load i32, i32* %87, align 4
  store i32 %88, i32* %69, align 4
  %89 = getelementptr inbounds %"class.tflite::CpuBackendContext", %"class.tflite::CpuBackendContext"* %7, i64 0, i32 1, i32 0, i32 0, i32 0
  %90 = load %"class.ruy::Context"*, %"class.ruy::Context"** %89, align 8
  %91 = bitcast %"struct.ruy::Mat.105"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %91) #11
  %92 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %9, i64 0, i32 1, i32 2
  %93 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %9, i64 0, i32 2
  %94 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 32, i1 false) #11
  %95 = bitcast %"struct.ruy::Mat.105"* %9 to i64*
  store i64 %24, i64* %95, align 8, !alias.scope !415
  %96 = zext i32 %23 to i64
  %97 = zext i1 %18 to i64
  %98 = shl nuw nsw i64 %97, 32
  %99 = or i64 %98, %96
  %100 = zext i32 %22 to i64
  %101 = shl nuw i64 %100, 32
  %102 = zext i32 %20 to i64
  %103 = or i64 %101, %102
  %104 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %9, i64 0, i32 1
  %105 = bitcast %"struct.ruy::MatLayout"* %104 to i64*
  store i64 %103, i64* %105, align 8, !alias.scope !415
  %106 = bitcast i32* %92 to i40*
  %107 = trunc i64 %99 to i40
  store i40 %107, i40* %106, align 8, !alias.scope !415
  store i8 %26, i8* %93, align 8, !alias.scope !415
  store i8 %35, i8* %94, align 1, !alias.scope !415
  %108 = bitcast %"struct.ruy::Mat.105"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %108) #11
  %109 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %10, i64 0, i32 1, i32 2
  %110 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %10, i64 0, i32 2
  %111 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %10, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 32, i1 false) #11
  %112 = bitcast %"struct.ruy::Mat.105"* %10 to i64*
  store i64 %44, i64* %112, align 8, !alias.scope !418
  %113 = zext i32 %43 to i64
  %114 = zext i1 %38 to i64
  %115 = shl nuw nsw i64 %114, 32
  %116 = or i64 %115, %113
  %117 = zext i32 %42 to i64
  %118 = shl nuw i64 %117, 32
  %119 = zext i32 %40 to i64
  %120 = or i64 %118, %119
  %121 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %10, i64 0, i32 1
  %122 = bitcast %"struct.ruy::MatLayout"* %121 to i64*
  store i64 %120, i64* %122, align 8, !alias.scope !418
  %123 = bitcast i32* %109 to i40*
  %124 = trunc i64 %116 to i40
  store i40 %124, i40* %123, align 8, !alias.scope !418
  store i8 %46, i8* %110, align 8, !alias.scope !418
  store i8 %55, i8* %111, align 1, !alias.scope !418
  %125 = bitcast %"struct.ruy::Mat.91"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %125) #11
  %126 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 1, i32 2
  %127 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 2
  %128 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %125, i8 -86, i64 32, i1 false) #11
  %129 = bitcast %"struct.ruy::Mat.91"* %11 to i64*
  store i64 %64, i64* %129, align 8, !alias.scope !421
  %130 = zext i32 %63 to i64
  %131 = zext i1 %58 to i64
  %132 = shl nuw nsw i64 %131, 32
  %133 = or i64 %132, %130
  %134 = zext i32 %62 to i64
  %135 = shl nuw i64 %134, 32
  %136 = zext i32 %60 to i64
  %137 = or i64 %135, %136
  %138 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %11, i64 0, i32 1
  %139 = bitcast %"struct.ruy::MatLayout"* %138 to i64*
  store i64 %137, i64* %139, align 8, !alias.scope !421
  %140 = bitcast i32* %126 to i40*
  %141 = trunc i64 %133 to i40
  store i40 %141, i40* %140, align 8, !alias.scope !421
  store i32 %66, i32* %127, align 8, !alias.scope !421
  store i8 0, i8* %128, align 4, !alias.scope !421
  %142 = tail call %"class.ruy::Ctx"* @_ZN3ruy7get_ctxEPNS_7ContextE(%"class.ruy::Context"* %90) #11
  call void @_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.105"* nonnull dereferenceable(32) %9, %"struct.ruy::Mat.105"* nonnull dereferenceable(32) %10, %"class.ruy::MulParams.89"* nonnull dereferenceable(40) %12, %"class.ruy::Ctx"* %142, %"struct.ruy::Mat.91"* nonnull %11) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %125) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %108) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %91) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %67) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy11DispatchMulILNS_4PathE26EaaiNS_9MulParamsIiiEEEEvRKNS_3MatIT0_EERKNS4_IT1_EERKT3_PNS_3CtxEPNS4_IT2_EE(%"struct.ruy::Mat.105"* dereferenceable(32), %"struct.ruy::Mat.105"* dereferenceable(32), %"class.ruy::MulParams.89"* dereferenceable(40), %"class.ruy::Ctx"*, %"struct.ruy::Mat.91"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.ruy::TrMulParams", align 8
  %7 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 1, i32 1
  %8 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %4, i64 0, i32 2
  %11 = tail call zeroext i8 @_ZN3ruy3Ctx10SelectPathENS_4PathE(%"class.ruy::Ctx"* %3, i8 zeroext 26) #11
  %12 = bitcast %"struct.ruy::Mat.105"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 1, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = load i32, i32* %7, align 4
  %17 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 1, i32 2
  %18 = load i32, i32* %17, align 8
  %19 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 1, i32 3
  %20 = load i8, i8* %19, align 4
  %21 = load i8, i8* %8, align 8
  %22 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %0, i64 0, i32 3
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %20, 0
  %25 = zext i1 %24 to i8
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 280, i8* nonnull %26) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 272, i1 false)
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 2
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 4
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 5
  %31 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 2
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 4
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 5
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 0
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 1
  store i8 0, i8* %35, align 1
  %36 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 0, i32 2
  store i8 0, i8* %36, align 2
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 2
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 4
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 5
  store i8 0, i8* %39, align 4
  %40 = bitcast i8** %37 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 21, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 0
  store i8 0, i8* %41, align 8
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 1
  store i8 0, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 0, i32 2
  store i8 0, i8* %43, align 2
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 2
  %45 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 5
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  %47 = bitcast i8** %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 11, i1 false) #11
  %48 = bitcast i8** %45 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 22, i1 false) #11
  %49 = bitcast %"class.ruy::SidePair"* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 24, i1 false) #11
  store i8 1, i8* %46, align 1
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 1
  store i8 0, i8* %53, align 1
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 0, i32 2
  store i8 0, i8* %54, align 2
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 2
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 5
  %57 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  %58 = bitcast i8** %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 11, i1 false) #11
  %59 = bitcast i8** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 22, i1 false) #11
  store i8 1, i8* %57, align 1
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %60, align 1
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 0, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 0
  store i8 0, i8* %62, align 8
  %63 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 6, i32 0, i64 1
  store i8 0, i8* %63, align 1
  %64 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 7
  %65 = sext i8 %21 to i32
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3
  %67 = bitcast %"class.ruy::SidePair.32"* %66 to i24*
  store i24 65537, i24* %67, align 8
  %68 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %68, i8 -86, i64 5, i1 false) #11
  %69 = bitcast i8** %28 to i64*
  store i64 %13, i64* %69, align 8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  store i32 %16, i32* %70, align 8
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 2
  store i32 %18, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  store i8 %25, i8* %73, align 4
  %74 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 0, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %74, i8 -86, i64 3, i1 false) #11
  store i32 %65, i32* %29, align 8
  store i8 %23, i8* %30, align 4
  %75 = bitcast %"struct.ruy::Mat.105"* %1 to i64*
  %76 = load i64, i64* %75, align 8, !noalias !424
  %77 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 1
  %78 = bitcast %"struct.ruy::MatLayout"* %77 to i8*
  %79 = load i8, i8* %9, align 8, !noalias !424
  %80 = sext i8 %79 to i32
  %81 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 3
  %82 = load i8, i8* %81, align 1, !noalias !424
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1
  %84 = bitcast %"struct.ruy::EMat"* %83 to i24*
  store i24 65537, i24* %84, align 8
  %85 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %85, i8 -86, i64 5, i1 false) #11
  %86 = bitcast i8** %31 to i64*
  store i64 %76, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3
  %88 = bitcast %"struct.ruy::MatLayout"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 4 %78, i64 13, i1 false)
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %89, i8 -86, i64 3, i1 false) #11
  store i32 %80, i32* %32, align 8
  store i8 %82, i8* %33, align 4
  %90 = bitcast %"struct.ruy::Mat.91"* %4 to i64*
  %91 = load i64, i64* %90, align 8, !noalias !427
  %92 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %4, i64 0, i32 1
  %93 = bitcast %"struct.ruy::MatLayout"* %92 to i8*
  %94 = load i32, i32* %10, align 8, !noalias !427
  %95 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %4, i64 0, i32 3
  %96 = load i8, i8* %95, align 4, !noalias !427
  %97 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4
  %98 = bitcast %"struct.ruy::EMat"* %97 to i24*
  store i24 262145, i24* %98, align 8
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %99, i8 -86, i64 5, i1 false) #11
  %100 = bitcast i8** %37 to i64*
  store i64 %91, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3
  %102 = bitcast %"struct.ruy::MatLayout"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 4 %93, i64 13, i1 false)
  %103 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 4, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %103, i8 -86, i64 3, i1 false) #11
  store i32 %94, i32* %38, align 8
  store i8 %96, i8* %39, align 4
  %104 = bitcast i8** %64 to %"class.ruy::MulParams.89"**
  store %"class.ruy::MulParams.89"* %2, %"class.ruy::MulParams.89"** %104, align 8
  %105 = icmp eq i8 %11, 16
  br i1 %105, label %106, label %191

106:                                              ; preds = %5
  br i1 %24, label %115, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %109 = load i8, i8* %108, align 4
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %115

111:                                              ; preds = %107
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 4, i32 3, i32 3
  %113 = load i8, i8* %112, align 4
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %149, label %115

115:                                              ; preds = %106, %111, %107
  store i8 2, i8* %26, align 8
  %116 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %117 = bitcast %"struct.ruy::PEMat"* %116 to i24*
  store i24 65537, i24* %117, align 8
  %118 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %119 = bitcast %"struct.ruy::Type"* %118 to i24*
  store i24 262145, i24* %119, align 8
  %120 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %120, align 4
  %121 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %16, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %122, align 4
  %123 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %123, align 1
  store i8 1, i8* %46, align 1
  store i8 1, i8* %50, align 1
  %124 = and i32 %16, 1023
  %125 = icmp eq i32 %124, 0
  %126 = add nsw i32 %16, 64
  %127 = select i1 %125, i32 %126, i32 %16
  %128 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %127, i32* %128, align 8
  store i32 %65, i32* %51, align 8
  %129 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %130 = bitcast %"struct.ruy::PEMat"* %129 to i24*
  store i24 65537, i24* %130, align 8
  %131 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %132 = bitcast %"struct.ruy::Type"* %131 to i24*
  store i24 262145, i24* %132, align 8
  %133 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %133, align 4
  %134 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %135 = load i32, i32* %134, align 8
  %136 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %135, i32* %136, align 8
  %137 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %138 = load i32, i32* %137, align 4
  %139 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %138, i32* %139, align 4
  %140 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %140, align 1
  store i8 1, i8* %57, align 1
  store i8 1, i8* %60, align 1
  %141 = and i32 %135, 1023
  %142 = icmp eq i32 %141, 0
  %143 = add nsw i32 %135, 64
  %144 = select i1 %142, i32 %143, i32 %135
  %145 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %144, i32* %145, align 8
  store i32 %80, i32* %61, align 8
  %146 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %147 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %146 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %147, align 8
  %148 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %148, align 8
  br label %192

149:                                              ; preds = %111
  store i8 16, i8* %26, align 8
  %150 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0
  %151 = bitcast %"struct.ruy::PEMat"* %150 to i24*
  store i24 65537, i24* %151, align 8
  %152 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 3
  %153 = bitcast %"struct.ruy::Type"* %152 to i24*
  store i24 262145, i24* %153, align 8
  %154 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %154, align 4
  %155 = add i32 %16, 3
  %156 = and i32 %155, -4
  %157 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %156, i32* %157, align 8
  %158 = add i32 %15, 15
  %159 = and i32 %158, -16
  %160 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %159, i32* %160, align 4
  %161 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %161, align 1
  store i8 4, i8* %46, align 1
  store i8 16, i8* %50, align 1
  %162 = and i32 %155, 1020
  %163 = icmp eq i32 %162, 0
  %164 = add nsw i32 %156, 64
  %165 = select i1 %163, i32 %164, i32 %156
  %166 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %165, i32* %166, align 8
  store i32 %65, i32* %51, align 8
  %167 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1
  %168 = bitcast %"struct.ruy::PEMat"* %167 to i24*
  store i24 65537, i24* %168, align 8
  %169 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 3
  %170 = bitcast %"struct.ruy::Type"* %169 to i24*
  store i24 262145, i24* %170, align 8
  %171 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %171, align 4
  %172 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %173 = load i32, i32* %172, align 8
  %174 = add i32 %173, 3
  %175 = and i32 %174, -4
  %176 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %175, i32* %176, align 8
  %177 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = add i32 %178, 15
  %180 = and i32 %179, -16
  %181 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %180, i32* %181, align 4
  %182 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %182, align 1
  store i8 4, i8* %57, align 1
  store i8 16, i8* %60, align 1
  %183 = and i32 %174, 1020
  %184 = icmp eq i32 %183, 0
  %185 = add nsw i32 %175, 64
  %186 = select i1 %184, i32 %185, i32 %175
  %187 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %186, i32* %187, align 8
  store i32 %80, i32* %61, align 8
  %188 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 1, i32 0, i64 0
  %189 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %188 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %189, align 8
  %190 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %6, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE16EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %190, align 8
  br label %192

191:                                              ; preds = %5
  call void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext %11, %"struct.ruy::TrMulParams"* nonnull %6) #11
  br label %192

192:                                              ; preds = %149, %115, %191
  call void @_ZN3ruy22HandlePrepackedCachingEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3)
  call void @_ZN3ruy5TrMulEPNS_11TrMulParamsEPNS_3CtxE(%"struct.ruy::TrMulParams"* nonnull %6, %"class.ruy::Ctx"* %3) #11
  call void @llvm.lifetime.end.p0i8(i64 280, i8* nonnull %26) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE16ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi16EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !430
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !433
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !433
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !433
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %25, i64 32, i1 false) #11
  %26 = icmp slt i32 %3, %4
  br i1 %26, label %27, label %46

27:                                               ; preds = %5
  %28 = icmp eq i32* %19, null
  %29 = sext i32 %3 to i64
  %30 = sext i32 %4 to i64
  %31 = sext i32 %14 to i64
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi i64 [ %29, %27 ], [ %44, %32 ]
  %34 = getelementptr inbounds i32, i32* %19, i64 %33
  %35 = select i1 %28, i32* null, i32* %34
  %36 = mul nsw i64 %33, %31
  %37 = getelementptr inbounds i8, i8* %8, i64 %36
  %38 = trunc i64 %33 to i32
  %39 = sub nsw i32 %12, %38
  %40 = and i32 %38, -16
  %41 = mul nsw i32 %40, %21
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %16, i64 %42
  call void @_ZN3ruy14Pack8bitAvx512EPKaaS1_iiiPaPi(i8* %37, i8 signext 0, i8* nonnull %24, i32 %14, i32 %39, i32 %10, i8* %43, i32* %35) #11
  %44 = add nsw i64 %33, 16
  %45 = icmp slt i64 %44, %30
  br i1 %45, label %32, label %46

46:                                               ; preds = %32, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca %"struct.ruy::Mat.105", align 8
  %7 = alloca %"struct.ruy::PMat.95", align 8
  %8 = bitcast %"struct.ruy::Mat.105"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %6, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %6, i64 0, i32 3
  %11 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %6, i64 0, i32 1
  %12 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %13 = bitcast i8** %12 to i64*
  %14 = bitcast %"struct.ruy::Mat.105"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = load i64, i64* %13, align 8, !noalias !436
  %16 = bitcast %"struct.ruy::Mat.105"* %6 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !436
  %17 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3
  %18 = bitcast %"struct.ruy::MatLayout"* %11 to i8*
  %19 = bitcast %"struct.ruy::MatLayout"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 4 %19, i64 13, i1 false) #11
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 4
  %21 = load i32, i32* %20, align 8, !noalias !436
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %9, align 8, !alias.scope !436
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 5
  %24 = load i8, i8* %23, align 4, !noalias !436
  store i8 %24, i8* %10, align 1, !alias.scope !436
  %25 = bitcast %"struct.ruy::PMat.95"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %25) #11
  %26 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %7, i64 0, i32 3
  %27 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %28 = bitcast i8** %27 to i64*
  %29 = bitcast %"struct.ruy::PMat.95"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 40, i1 false)
  %30 = load i64, i64* %28, align 8, !noalias !439
  %31 = bitcast %"struct.ruy::PMat.95"* %7 to i64*
  store i64 %30, i64* %31, align 8, !alias.scope !439
  %32 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %33 = bitcast i8** %32 to i64*
  %34 = load i64, i64* %33, align 8, !noalias !439
  %35 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %7, i64 0, i32 1
  %36 = bitcast i32** %35 to i64*
  store i64 %34, i64* %36, align 8, !alias.scope !439
  %37 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6
  %38 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %7, i64 0, i32 2
  %39 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  %40 = bitcast %"struct.ruy::PMatLayout"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* align 4 %40, i64 16, i1 false) #11
  %41 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %42 = load i32, i32* %41, align 8, !noalias !439
  store i32 %42, i32* %26, align 8, !alias.scope !439
  call void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii(i32 %0, %"struct.ruy::Mat.105"* nonnull dereferenceable(32) %6, %"struct.ruy::PMat.95"* nonnull %7, i32 %3, i32 %4)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %25) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE(i32, %"class.ruy::SidePair.30"* dereferenceable(112), i8*, %"class.ruy::SidePair.31"* dereferenceable(8), %"class.ruy::SidePair.31"* dereferenceable(8), %"struct.ruy::EMat"*) #0 comdat {
  %7 = alloca %"struct.ruy::Kernel.106", align 1
  %8 = alloca %"struct.ruy::Mat.91", align 8
  %9 = alloca %"struct.ruy::PMat.95", align 8
  %10 = alloca %"struct.ruy::PMat.95", align 8
  %11 = bitcast %"struct.ruy::Mat.91"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #11
  %12 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 2
  %13 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 2
  %16 = bitcast i8** %15 to i64*
  %17 = bitcast %"struct.ruy::Mat.91"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  %18 = load i64, i64* %16, align 8, !noalias !442
  %19 = bitcast %"struct.ruy::Mat.91"* %8 to i64*
  store i64 %18, i64* %19, align 8, !alias.scope !442
  %20 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 3
  %21 = bitcast %"struct.ruy::MatLayout"* %14 to i8*
  %22 = bitcast %"struct.ruy::MatLayout"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 4 %22, i64 13, i1 false) #11
  %23 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 4
  %24 = load i32, i32* %23, align 8, !noalias !442
  store i32 %24, i32* %12, align 8, !alias.scope !442
  %25 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %5, i64 0, i32 5
  %26 = load i8, i8* %25, align 4, !noalias !442
  store i8 %26, i8* %13, align 4, !alias.scope !442
  %27 = bitcast %"struct.ruy::PMat.95"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 40, i1 false) #11, !alias.scope !445
  %28 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %9, i64 0, i32 3
  %29 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 2
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8, !noalias !445
  %32 = bitcast %"struct.ruy::PMat.95"* %9 to i64*
  store i64 %31, i64* %32, align 8, !alias.scope !445
  %33 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 5
  %34 = bitcast i8** %33 to i64*
  %35 = load i64, i64* %34, align 8, !noalias !445
  %36 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %9, i64 0, i32 1
  %37 = bitcast i32** %36 to i64*
  store i64 %35, i64* %37, align 8, !alias.scope !445
  %38 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 6
  %39 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %9, i64 0, i32 2
  %40 = bitcast %"struct.ruy::PMatLayout"* %39 to i8*
  %41 = bitcast %"struct.ruy::PMatLayout"* %38 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 4 %41, i64 16, i1 false) #11
  %42 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8, !noalias !445
  store i32 %43, i32* %28, align 8, !alias.scope !445
  %44 = bitcast %"struct.ruy::PMat.95"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false) #11, !alias.scope !448
  %45 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %10, i64 0, i32 3
  %46 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 2
  %47 = bitcast i8** %46 to i64*
  %48 = load i64, i64* %47, align 8, !noalias !448
  %49 = bitcast %"struct.ruy::PMat.95"* %10 to i64*
  store i64 %48, i64* %49, align 8, !alias.scope !448
  %50 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 5
  %51 = bitcast i8** %50 to i64*
  %52 = load i64, i64* %51, align 8, !noalias !448
  %53 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %10, i64 0, i32 1
  %54 = bitcast i32** %53 to i64*
  store i64 %52, i64* %54, align 8, !alias.scope !448
  %55 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 6
  %56 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %10, i64 0, i32 2
  %57 = bitcast %"struct.ruy::PMatLayout"* %56 to i8*
  %58 = bitcast %"struct.ruy::PMatLayout"* %55 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false) #11
  %59 = getelementptr inbounds %"class.ruy::SidePair.30", %"class.ruy::SidePair.30"* %1, i64 0, i32 0, i64 1, i32 7
  %60 = load i32, i32* %59, align 8, !noalias !448
  store i32 %60, i32* %45, align 8, !alias.scope !448
  %61 = bitcast i8* %2 to %"class.ruy::MulParams.89"*
  %62 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 0
  %63 = load i32, i32* %62, align 4
  %64 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %3, i64 0, i32 0, i64 1
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 0
  %67 = load i32, i32* %66, align 4
  %68 = getelementptr inbounds %"class.ruy::SidePair.31", %"class.ruy::SidePair.31"* %4, i64 0, i32 0, i64 1
  %69 = load i32, i32* %68, align 4
  %70 = getelementptr inbounds %"struct.ruy::Kernel.106", %"struct.ruy::Kernel.106"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %70) #11
  store i8 -86, i8* %70, align 1
  call void @_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.106"* nonnull %7, %"struct.ruy::PMat.95"* nonnull dereferenceable(40) %9, %"struct.ruy::PMat.95"* nonnull dereferenceable(40) %10, %"class.ruy::MulParams.89"* dereferenceable(40) %61, i32 %63, i32 %65, i32 %67, i32 %69, %"struct.ruy::Mat.91"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %70) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %44) #11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy8PackImplILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaiE3RunENS_6TuningERKNS_3MatIaEEPNS_4PMatIaEEii(i32, %"struct.ruy::Mat.105"* dereferenceable(32), %"struct.ruy::PMat.95"*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 1
  %7 = load i32*, i32** %6, align 8
  %8 = icmp slt i32 %3, %4
  br i1 %8, label %9, label %33

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 0
  %11 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 1, i32 1
  %12 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 3
  %14 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 1, i32 3
  %16 = getelementptr inbounds %"struct.ruy::Mat.105", %"struct.ruy::Mat.105"* %1, i64 0, i32 1, i32 2
  %17 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 1
  %19 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 2
  %20 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 3
  %21 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 2
  %22 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 0
  %23 = icmp eq i32* %7, null
  %24 = sext i32 %3 to i64
  %25 = sext i32 %4 to i64
  br label %26

26:                                               ; preds = %107, %9
  %27 = phi i64 [ %24, %9 ], [ %108, %107 ]
  %28 = load i32, i32* %10, align 8
  %29 = icmp sgt i32 %28, 0
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = trunc i64 %27 to i32
  %32 = trunc i64 %27 to i32
  br label %36

33:                                               ; preds = %107, %5
  ret void

34:                                               ; preds = %64, %26
  %35 = phi i32 [ 0, %26 ], [ %68, %64 ]
  br i1 %23, label %107, label %105

36:                                               ; preds = %30, %64
  %37 = phi i32 [ %102, %64 ], [ 0, %30 ]
  %38 = phi i32 [ %68, %64 ], [ 0, %30 ]
  %39 = load i32, i32* %11, align 4
  %40 = sext i32 %39 to i64
  %41 = icmp slt i64 %27, %40
  br i1 %41, label %42, label %61

42:                                               ; preds = %36
  %43 = load i32, i32* %12, align 8
  %44 = icmp slt i32 %37, %43
  br i1 %44, label %45, label %61

45:                                               ; preds = %42
  %46 = load i8*, i8** %14, align 8
  %47 = load i8, i8* %15, align 4
  %48 = load i32, i32* %16, align 4
  switch i8 %47, label %49 [
    i8 0, label %50
    i8 1, label %52
  ]

49:                                               ; preds = %45
  br label %50

50:                                               ; preds = %49, %45
  %51 = phi i32 [ 1, %45 ], [ %48, %49 ]
  br label %52

52:                                               ; preds = %45, %50
  %53 = phi i32 [ %51, %50 ], [ %48, %45 ]
  %54 = phi i32 [ %48, %50 ], [ 1, %45 ]
  %55 = mul nsw i32 %53, %37
  %56 = mul nsw i32 %54, %32
  %57 = add nsw i32 %56, %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds i8, i8* %46, i64 %58
  %60 = load i8, i8* %59, align 1
  br label %64

61:                                               ; preds = %42, %36
  %62 = load i32, i32* %13, align 8
  %63 = trunc i32 %62 to i8
  br label %64

64:                                               ; preds = %61, %52
  %65 = phi i32 [ %31, %61 ], [ %32, %52 ]
  %66 = phi i8 [ %63, %61 ], [ %60, %52 ]
  %67 = sext i8 %66 to i32
  %68 = add nsw i32 %38, %67
  %69 = load i8*, i8** %17, align 8
  %70 = load i8, i8* %18, align 1
  %71 = zext i8 %70 to i32
  %72 = sub nsw i32 0, %71
  %73 = and i32 %37, %72
  %74 = load i8, i8* %19, align 1
  %75 = zext i8 %74 to i32
  %76 = sub nsw i32 0, %75
  %77 = and i32 %65, %76
  %78 = load i8, i8* %20, align 4
  %79 = icmp eq i8 %78, 0
  %80 = load i32, i32* %21, align 4
  %81 = select i1 %79, i32 %75, i32 %80
  %82 = icmp eq i8 %78, 1
  %83 = select i1 %82, i32 %71, i32 %80
  %84 = mul nsw i32 %81, %73
  %85 = mul nsw i32 %83, %77
  %86 = sub nsw i32 %37, %73
  %87 = sub nsw i32 %65, %77
  %88 = load i8, i8* %22, align 1
  %89 = icmp eq i8 %88, 0
  %90 = select i1 %89, i8 1, i8 %74
  %91 = zext i8 %90 to i32
  %92 = icmp eq i8 %88, 1
  %93 = select i1 %92, i8 1, i8 %70
  %94 = zext i8 %93 to i32
  %95 = mul nsw i32 %86, %91
  %96 = mul nsw i32 %87, %94
  %97 = add i32 %84, %85
  %98 = add i32 %97, %96
  %99 = add i32 %98, %95
  %100 = sext i32 %99 to i64
  %101 = getelementptr inbounds i8, i8* %69, i64 %100
  store i8 %66, i8* %101, align 1
  %102 = add nuw nsw i32 %37, 1
  %103 = load i32, i32* %10, align 8
  %104 = icmp slt i32 %102, %103
  br i1 %104, label %36, label %34

105:                                              ; preds = %34
  %106 = getelementptr inbounds i32, i32* %7, i64 %27
  store i32 %35, i32* %106, align 4
  br label %107

107:                                              ; preds = %34, %105
  %108 = add nsw i64 %27, 1
  %109 = icmp eq i64 %108, %25
  br i1 %109, label %33, label %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3ruy6KernelILNS_4PathE2EaaiNS_9MulParamsIiiEEE3RunERKNS_4PMatIaEES8_RKS3_iiiiPNS_3MatIiEE(%"struct.ruy::Kernel.106"*, %"struct.ruy::PMat.95"* dereferenceable(40), %"struct.ruy::PMat.95"* dereferenceable(40), %"class.ruy::MulParams.89"* dereferenceable(40), i32, i32, i32, i32, %"struct.ruy::Mat.91"*) local_unnamed_addr #0 comdat align 2 {
  %10 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, %6
  %13 = select i1 %12, i32 %11, i32 %6
  %14 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp slt i32 %15, %7
  %17 = select i1 %16, i32 %15, i32 %7
  %18 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %13, %4
  br i1 %20, label %21, label %56

21:                                               ; preds = %9
  %22 = icmp sgt i32 %17, %5
  %23 = icmp sgt i32 %19, 0
  %24 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 0
  %25 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 4, i32 1
  %26 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 4, i32 2
  %27 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 3
  %28 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 2
  %29 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 2, i32 4, i32 0
  %30 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 1
  %32 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 2
  %33 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 3
  %34 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 2
  %35 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 2, i32 4, i32 0
  %36 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 3
  %38 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 1
  %39 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %2, i64 0, i32 3
  %40 = getelementptr inbounds %"struct.ruy::PMat.95", %"struct.ruy::PMat.95"* %1, i64 0, i32 1
  %41 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 2
  %42 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 6
  %43 = getelementptr inbounds %"class.ruy::MulParams.89", %"class.ruy::MulParams.89"* %3, i64 0, i32 5
  %44 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 3
  %46 = getelementptr inbounds %"struct.ruy::Mat.91", %"struct.ruy::Mat.91"* %8, i64 0, i32 1, i32 2
  %47 = sext i32 %5 to i64
  %48 = sext i32 %17 to i64
  %49 = sext i32 %4 to i64
  %50 = sext i32 %13 to i64
  br label %51

51:                                               ; preds = %21, %109
  %52 = phi i64 [ %49, %21 ], [ %110, %109 ]
  br i1 %22, label %53, label %109

53:                                               ; preds = %51
  %54 = trunc i64 %52 to i32
  %55 = trunc i64 %52 to i32
  br label %57

56:                                               ; preds = %109, %9
  ret void

57:                                               ; preds = %53, %190
  %58 = phi i64 [ %47, %53 ], [ %199, %190 ]
  br i1 %23, label %59, label %112

59:                                               ; preds = %57
  %60 = load i8*, i8** %24, align 8
  %61 = load i8, i8* %25, align 1
  %62 = zext i8 %61 to i32
  %63 = sub nsw i32 0, %62
  %64 = load i8, i8* %26, align 1
  %65 = zext i8 %64 to i32
  %66 = sub nsw i32 0, %65
  %67 = and i32 %54, %66
  %68 = load i8, i8* %27, align 4
  %69 = icmp eq i8 %68, 0
  %70 = load i32, i32* %28, align 4
  %71 = select i1 %69, i32 %65, i32 %70
  %72 = icmp eq i8 %68, 1
  %73 = select i1 %72, i32 %62, i32 %70
  %74 = mul nsw i32 %73, %67
  %75 = sub nsw i32 %54, %67
  %76 = load i8, i8* %29, align 1
  %77 = icmp eq i8 %76, 0
  %78 = select i1 %77, i8 1, i8 %64
  %79 = zext i8 %78 to i32
  %80 = icmp eq i8 %76, 1
  %81 = select i1 %80, i8 1, i8 %61
  %82 = zext i8 %81 to i32
  %83 = mul nsw i32 %75, %82
  %84 = load i8*, i8** %30, align 8
  %85 = load i8, i8* %31, align 1
  %86 = zext i8 %85 to i32
  %87 = sub nsw i32 0, %86
  %88 = load i8, i8* %32, align 1
  %89 = zext i8 %88 to i32
  %90 = sub nsw i32 0, %89
  %91 = trunc i64 %58 to i32
  %92 = and i32 %91, %90
  %93 = load i8, i8* %33, align 4
  %94 = icmp eq i8 %93, 0
  %95 = load i32, i32* %34, align 4
  %96 = select i1 %94, i32 %89, i32 %95
  %97 = icmp eq i8 %93, 1
  %98 = select i1 %97, i32 %86, i32 %95
  %99 = mul nsw i32 %98, %92
  %100 = sub nsw i32 %91, %92
  %101 = load i8, i8* %35, align 1
  %102 = icmp eq i8 %101, 0
  %103 = select i1 %102, i8 1, i8 %88
  %104 = zext i8 %103 to i32
  %105 = icmp eq i8 %101, 1
  %106 = select i1 %105, i8 1, i8 %85
  %107 = zext i8 %106 to i32
  %108 = mul nsw i32 %100, %107
  br label %116

109:                                              ; preds = %190, %51
  %110 = add nsw i64 %52, 1
  %111 = icmp slt i64 %110, %50
  br i1 %111, label %51, label %56

112:                                              ; preds = %116, %57
  %113 = phi i32 [ 0, %57 ], [ %142, %116 ]
  %114 = load i32*, i32** %36, align 8
  %115 = icmp eq i32* %114, null
  br i1 %115, label %149, label %145

116:                                              ; preds = %116, %59
  %117 = phi i32 [ 0, %59 ], [ %143, %116 ]
  %118 = phi i32 [ 0, %59 ], [ %142, %116 ]
  %119 = and i32 %117, %63
  %120 = mul nsw i32 %71, %119
  %121 = sub nsw i32 %117, %119
  %122 = mul nsw i32 %121, %79
  %123 = add i32 %120, %74
  %124 = add i32 %123, %83
  %125 = add i32 %124, %122
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, i8* %60, i64 %126
  %128 = load i8, i8* %127, align 1
  %129 = sext i8 %128 to i32
  %130 = and i32 %117, %87
  %131 = mul nsw i32 %96, %130
  %132 = sub nsw i32 %117, %130
  %133 = mul nsw i32 %132, %104
  %134 = add i32 %131, %99
  %135 = add i32 %134, %108
  %136 = add i32 %135, %133
  %137 = sext i32 %136 to i64
  %138 = getelementptr inbounds i8, i8* %84, i64 %137
  %139 = load i8, i8* %138, align 1
  %140 = sext i8 %139 to i32
  %141 = mul nsw i32 %140, %129
  %142 = add nsw i32 %141, %118
  %143 = add nuw nsw i32 %117, 1
  %144 = icmp eq i32 %143, %19
  br i1 %144, label %112, label %116

145:                                              ; preds = %112
  %146 = getelementptr inbounds i32, i32* %114, i64 %52
  %147 = load i32, i32* %146, align 4
  %148 = add nsw i32 %147, %113
  br label %149

149:                                              ; preds = %112, %145
  %150 = phi i32 [ %113, %112 ], [ %148, %145 ]
  %151 = load i32, i32* %37, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %149
  %154 = load i32*, i32** %38, align 8
  %155 = getelementptr inbounds i32, i32* %154, i64 %58
  %156 = load i32, i32* %155, align 4
  %157 = mul nsw i32 %156, %151
  %158 = sub nsw i32 %150, %157
  br label %159

159:                                              ; preds = %149, %153
  %160 = phi i32 [ %150, %149 ], [ %158, %153 ]
  %161 = load i32, i32* %39, align 8
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %174, label %163

163:                                              ; preds = %159
  %164 = load i32*, i32** %40, align 8
  %165 = getelementptr inbounds i32, i32* %164, i64 %52
  %166 = load i32, i32* %165, align 4
  %167 = mul nsw i32 %166, %161
  %168 = sub nsw i32 %160, %167
  %169 = or i1 %152, %162
  br i1 %169, label %174, label %170

170:                                              ; preds = %163
  %171 = mul i32 %151, %19
  %172 = mul i32 %171, %161
  %173 = add nsw i32 %168, %172
  br label %174

174:                                              ; preds = %159, %163, %170
  %175 = phi i32 [ %168, %163 ], [ %173, %170 ], [ %160, %159 ]
  %176 = load i32, i32* %41, align 8
  %177 = add nsw i32 %176, %175
  %178 = load i32, i32* %42, align 4
  %179 = icmp slt i32 %178, %177
  %180 = select i1 %179, i32 %178, i32 %177
  %181 = load i32, i32* %43, align 8
  %182 = icmp slt i32 %180, %181
  %183 = select i1 %182, i32 %181, i32 %180
  %184 = load i32*, i32** %44, align 8
  %185 = load i8, i8* %45, align 4
  %186 = load i32, i32* %46, align 4
  switch i8 %185, label %187 [
    i8 0, label %188
    i8 1, label %190
  ]

187:                                              ; preds = %174
  br label %188

188:                                              ; preds = %187, %174
  %189 = phi i32 [ 1, %174 ], [ %186, %187 ]
  br label %190

190:                                              ; preds = %174, %188
  %191 = phi i32 [ %189, %188 ], [ %186, %174 ]
  %192 = phi i32 [ %186, %188 ], [ 1, %174 ]
  %193 = mul nsw i32 %191, %55
  %194 = trunc i64 %58 to i32
  %195 = mul nsw i32 %192, %194
  %196 = add nsw i32 %195, %193
  %197 = sext i32 %196 to i64
  %198 = getelementptr inbounds i32, i32* %184, i64 %197
  store i32 %183, i32* %198, align 4
  %199 = add nsw i64 %58, 1
  %200 = icmp slt i64 %199, %48
  br i1 %200, label %57, label %109
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy27PathSearchOnlyCompiledPathsILNS_4PathE26ELb1ELi3EaaiNS_9MulParamsIiiEEE6SearchES1_PNS_11TrMulParamsE(i8 zeroext, %"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat align 2 {
  switch i8 %0, label %57 [
    i8 8, label %3
    i8 2, label %4
  ]

3:                                                ; preds = %2
  tail call void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"* %1)
  br label %57

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 0
  store i8 2, i8* %5, align 8
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0
  %7 = bitcast %"struct.ruy::PEMat"* %6 to i24*
  store i24 65537, i24* %7, align 8
  %8 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 3
  %9 = bitcast %"struct.ruy::Type"* %8 to i24*
  store i24 262145, i24* %9, align 8
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %12, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %18, align 1
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %19, align 1
  %20 = and i32 %12, 1023
  %21 = icmp eq i32 %20, 0
  %22 = add nsw i32 %12, 64
  %23 = select i1 %21, i32 %22, i32 %12
  %24 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %23, i32* %24, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = shl i32 %26, 24
  %28 = ashr exact i32 %27, 24
  %29 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %28, i32* %29, align 8
  %30 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1
  %31 = bitcast %"struct.ruy::PEMat"* %30 to i24*
  store i24 65537, i24* %31, align 8
  %32 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 3
  %33 = bitcast %"struct.ruy::Type"* %32 to i24*
  store i24 262145, i24* %33, align 8
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %34, align 4
  %35 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %36, i32* %37, align 4
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %39, i32* %40, align 4
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %42, align 1
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %43, align 1
  %44 = and i32 %36, 1023
  %45 = icmp eq i32 %44, 0
  %46 = add nsw i32 %36, 64
  %47 = select i1 %45, i32 %46, i32 %36
  %48 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %47, i32* %48, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 3, i32 0, i64 1, i32 4
  %50 = load i32, i32* %49, align 8
  %51 = shl i32 %50, 24
  %52 = ashr exact i32 %51, 24
  %53 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %52, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 1, i32 0, i64 0
  %55 = bitcast void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %54 to <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>*
  store <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*> <void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii>, <2 x void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)*>* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %1, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %56, align 8
  br label %57

57:                                               ; preds = %2, %4, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy19PopulateTrMulParamsILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvPNS_11TrMulParamsE(%"struct.ruy::TrMulParams"*) local_unnamed_addr #0 comdat {
  %2 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 3
  %3 = load i8, i8* %2, align 4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %13

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 3
  %7 = load i8, i8* %6, align 4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 4, i32 3, i32 3
  %11 = load i8, i8* %10, align 4
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %54, label %13

13:                                               ; preds = %1, %5, %9
  %14 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 2, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %16 = bitcast %"struct.ruy::PEMat"* %15 to i24*
  store i24 65537, i24* %16, align 8
  %17 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %18 = bitcast %"struct.ruy::Type"* %17 to i24*
  store i24 262145, i24* %18, align 8
  %19 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %19, align 4
  %20 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %21, i32* %22, align 4
  %23 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %24, i32* %25, align 4
  %26 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %26, align 1
  %27 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 1, i8* %27, align 1
  %28 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 1, i8* %28, align 1
  %29 = and i32 %21, 1023
  %30 = icmp eq i32 %29, 0
  %31 = add nsw i32 %21, 64
  %32 = select i1 %30, i32 %31, i32 %21
  %33 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %35 = load i32, i32* %34, align 8
  %36 = shl i32 %35, 24
  %37 = ashr exact i32 %36, 24
  %38 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %37, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %40 = bitcast %"struct.ruy::PEMat"* %39 to i24*
  store i24 65537, i24* %40, align 8
  %41 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %42 = bitcast %"struct.ruy::Type"* %41 to i24*
  store i24 262145, i24* %42, align 8
  %43 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %43, align 4
  %44 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %45, i32* %46, align 4
  %47 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %48, i32* %49, align 4
  %50 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 1, i8* %51, align 1
  %52 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 1, i8* %52, align 1
  %53 = and i32 %45, 1023
  br label %103

54:                                               ; preds = %9
  %55 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 0
  store i8 8, i8* %55, align 8
  %56 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0
  %57 = bitcast %"struct.ruy::PEMat"* %56 to i24*
  store i24 65537, i24* %57, align 8
  %58 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 3
  %59 = bitcast %"struct.ruy::Type"* %58 to i24*
  store i24 262145, i24* %59, align 8
  %60 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 3
  store i8 0, i8* %60, align 4
  %61 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = add i32 %62, 3
  %64 = and i32 %63, -4
  %65 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 0
  store i32 %64, i32* %65, align 4
  %66 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 3, i32 1
  %67 = load i32, i32* %66, align 4
  %68 = add i32 %67, 7
  %69 = and i32 %68, -8
  %70 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 1
  store i32 %69, i32* %70, align 4
  %71 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 0
  store i8 0, i8* %71, align 1
  %72 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 1
  store i8 4, i8* %72, align 1
  %73 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 4, i32 2
  store i8 8, i8* %73, align 1
  %74 = and i32 %63, 1020
  %75 = icmp eq i32 %74, 0
  %76 = add nsw i32 %64, 64
  %77 = select i1 %75, i32 %76, i32 %64
  %78 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 6, i32 2
  store i32 %77, i32* %78, align 4
  %79 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 0, i32 4
  %80 = load i32, i32* %79, align 8
  %81 = shl i32 %80, 24
  %82 = ashr exact i32 %81, 24
  %83 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 0, i32 7
  store i32 %82, i32* %83, align 8
  %84 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1
  %85 = bitcast %"struct.ruy::PEMat"* %84 to i24*
  store i24 65537, i24* %85, align 8
  %86 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 3
  %87 = bitcast %"struct.ruy::Type"* %86 to i24*
  store i24 262145, i24* %87, align 8
  %88 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 3
  store i8 0, i8* %88, align 4
  %89 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 3
  %92 = and i32 %91, -4
  %93 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 0
  store i32 %92, i32* %93, align 4
  %94 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 3, i32 1
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 7
  %97 = and i32 %96, -8
  %98 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 1
  store i32 %97, i32* %98, align 4
  %99 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 0
  store i8 0, i8* %99, align 1
  %100 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 1
  store i8 4, i8* %100, align 1
  %101 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 4, i32 2
  store i8 8, i8* %101, align 1
  %102 = and i32 %91, 1020
  br label %103

103:                                              ; preds = %54, %13
  %104 = phi i32 [ %102, %54 ], [ %53, %13 ]
  %105 = phi i32 [ %92, %54 ], [ %45, %13 ]
  %106 = phi void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* [ @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %54 ], [ @_ZN3ruy7RunPackILNS_4PathE2ENS_17FixedKernelLayoutILNS_5OrderE0ELi1ELi1EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii, %13 ]
  %107 = phi void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* [ @_ZN3ruy9RunKernelILNS_4PathE8EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %54 ], [ @_ZN3ruy9RunKernelILNS_4PathE2EaaiNS_9MulParamsIiiEEEEvNS_6TuningERKNS_8SidePairINS_5PEMatEEEPvRKNS5_IiEESD_PNS_4EMatE, %13 ]
  %108 = icmp eq i32 %104, 0
  %109 = add nsw i32 %105, 64
  %110 = select i1 %108, i32 %109, i32 %105
  %111 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 6, i32 2
  store i32 %110, i32* %111, align 4
  %112 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 3, i32 0, i64 1, i32 4
  %113 = load i32, i32* %112, align 8
  %114 = shl i32 %113, 24
  %115 = ashr exact i32 %114, 24
  %116 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 5, i32 0, i64 1, i32 7
  store i32 %115, i32* %116, align 8
  %117 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 0
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %117, align 8
  %118 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 1, i32 0, i64 1
  store void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)* %106, void (i32, %"struct.ruy::EMat"*, %"struct.ruy::PEMat"*, i32, i32)** %118, align 8
  %119 = getelementptr inbounds %"struct.ruy::TrMulParams", %"struct.ruy::TrMulParams"* %0, i64 0, i32 2
  store void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)* %107, void (i32, %"class.ruy::SidePair.30"*, i8*, %"class.ruy::SidePair.31"*, %"class.ruy::SidePair.31"*, %"struct.ruy::EMat"*)** %119, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ruy7RunPackILNS_4PathE8ENS_17FixedKernelLayoutILNS_5OrderE0ELi4ELi8EEEaaEEvNS_6TuningERKNS_4EMatEPNS_5PEMatEii(i32, %"struct.ruy::EMat"* dereferenceable(40), %"struct.ruy::PEMat"*, i32, i32) #0 comdat {
  %6 = alloca [32 x i8], align 16
  %7 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 2
  %8 = load i8*, i8** %7, align 8, !noalias !451
  %9 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.ruy::EMat", %"struct.ruy::EMat"* %1, i64 0, i32 3, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 2
  %16 = load i8*, i8** %15, align 8, !noalias !454
  %17 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 5
  %18 = bitcast i8** %17 to i32**
  %19 = load i32*, i32** %18, align 8, !noalias !454
  %20 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 6, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = getelementptr inbounds %"struct.ruy::PEMat", %"struct.ruy::PEMat"* %2, i64 0, i32 7
  %23 = load i32, i32* %22, align 8, !noalias !454
  %24 = getelementptr inbounds [32 x i8], [32 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %24) #11
  %25 = trunc i32 %23 to i8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %24, i8 %25, i64 32, i1 false) #11
  %26 = icmp slt i32 %3, %4
  br i1 %26, label %27, label %46

27:                                               ; preds = %5
  %28 = icmp eq i32* %19, null
  %29 = sext i32 %3 to i64
  %30 = sext i32 %4 to i64
  %31 = sext i32 %14 to i64
  br label %32

32:                                               ; preds = %32, %27
  %33 = phi i64 [ %29, %27 ], [ %44, %32 ]
  %34 = getelementptr inbounds i32, i32* %19, i64 %33
  %35 = select i1 %28, i32* null, i32* %34
  %36 = mul nsw i64 %33, %31
  %37 = getelementptr inbounds i8, i8* %8, i64 %36
  %38 = trunc i64 %33 to i32
  %39 = sub nsw i32 %12, %38
  %40 = and i32 %38, -8
  %41 = mul nsw i32 %40, %21
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %16, i64 %42
  call void @_ZN3ruy12Pack8bitAvx2EPKaaS1_iiiPaPi(i8* %37, i8 signext 0, i8* nonnull %24, i32 %14, i32 %39, i32 %10, i8* %43, i32* %35) #11
  %44 = add nsw i64 %33, 8
  %45 = icmp slt i64 %44, %30
  br i1 %45, label %32, label %46

46:                                               ; preds = %32, %5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %24) #11
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inaccessiblemem_or_argmemonly nounwind }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!8 = distinct !{!8, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!11 = distinct !{!11, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!14 = distinct !{!14, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!17 = distinct !{!17, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!20 = distinct !{!20, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!23 = distinct !{!23, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!24 = distinct !{!24, !25}
!25 = !{!"llvm.loop.isvectorized", i32 1}
!26 = distinct !{!26, !3}
!27 = distinct !{!27, !28, !25}
!28 = !{!"llvm.loop.unroll.runtime.disable"}
!29 = distinct !{!29, !25}
!30 = distinct !{!30, !3}
!31 = distinct !{!31, !28, !25}
!32 = distinct !{!32, !25}
!33 = distinct !{!33, !3}
!34 = distinct !{!34, !28, !25}
!35 = distinct !{!35, !25}
!36 = distinct !{!36, !3}
!37 = distinct !{!37, !28, !25}
!38 = distinct !{!38, !25}
!39 = distinct !{!39, !3}
!40 = distinct !{!40, !28, !25}
!41 = distinct !{!41, !25}
!42 = distinct !{!42, !3}
!43 = distinct !{!43, !28, !25}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!46 = distinct !{!46, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = distinct !{!59, !25}
!60 = distinct !{!60, !3}
!61 = distinct !{!61, !28, !25}
!62 = distinct !{!62, !3}
!63 = distinct !{!63, !3}
!64 = !{i8 0, i8 2}
!65 = distinct !{!65, !3}
!66 = distinct !{!66, !3}
!67 = distinct !{!67, !3}
!68 = distinct !{!68, !3}
!69 = distinct !{!69, !3}
!70 = distinct !{!70, !3}
!71 = distinct !{!71, !3}
!72 = distinct !{!72, !3}
!73 = distinct !{!73, !3}
!74 = distinct !{!74, !3}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !3}
!77 = distinct !{!77, !3}
!78 = distinct !{!78, !3}
!79 = distinct !{!79, !3}
!80 = distinct !{!80, !3}
!81 = distinct !{!81, !3}
!82 = distinct !{!82, !3}
!83 = distinct !{!83, !3}
!84 = distinct !{!84, !3}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!87 = distinct !{!87, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!88 = distinct !{!88, !25}
!89 = distinct !{!89, !3}
!90 = distinct !{!90, !28, !25}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!93 = distinct !{!93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!94 = distinct !{!94, !25}
!95 = distinct !{!95, !3}
!96 = distinct !{!96, !28, !25}
!97 = !{!98}
!98 = distinct !{!98, !99}
!99 = distinct !{!99, !"LVerDomain"}
!100 = !{!101}
!101 = distinct !{!101, !99}
!102 = distinct !{!102, !25}
!103 = distinct !{!103, !25}
!104 = !{!105}
!105 = distinct !{!105, !106}
!106 = distinct !{!106, !"LVerDomain"}
!107 = !{!108}
!108 = distinct !{!108, !106}
!109 = distinct !{!109, !25}
!110 = distinct !{!110, !25}
!111 = distinct !{!111, !3}
!112 = distinct !{!112, !3}
!113 = distinct !{!113, !3}
!114 = distinct !{!114, !3}
!115 = distinct !{!115, !3}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!118 = distinct !{!118, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!119 = distinct !{!119, !25}
!120 = distinct !{!120, !3}
!121 = distinct !{!121, !28, !25}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!124 = distinct !{!124, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!125 = distinct !{!125, !25}
!126 = distinct !{!126, !3}
!127 = distinct !{!127, !28, !25}
!128 = !{!129}
!129 = distinct !{!129, !130}
!130 = distinct !{!130, !"LVerDomain"}
!131 = !{!132}
!132 = distinct !{!132, !130}
!133 = distinct !{!133, !25}
!134 = distinct !{!134, !25}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !25}
!141 = distinct !{!141, !25}
!142 = distinct !{!142, !3}
!143 = distinct !{!143, !3}
!144 = distinct !{!144, !3}
!145 = distinct !{!145, !3}
!146 = distinct !{!146, !3}
!147 = !{!148}
!148 = distinct !{!148, !149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!149 = distinct !{!149, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!150 = !{!151}
!151 = distinct !{!151, !152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!152 = distinct !{!152, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!153 = !{!154}
!154 = distinct !{!154, !155, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!155 = distinct !{!155, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!156 = !{!157}
!157 = distinct !{!157, !158, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!158 = distinct !{!158, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!159 = !{!160}
!160 = distinct !{!160, !161, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!161 = distinct !{!161, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!162 = !{!163}
!163 = distinct !{!163, !164, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!164 = distinct !{!164, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!165 = !{!166}
!166 = distinct !{!166, !167, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!167 = distinct !{!167, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!168 = !{!169}
!169 = distinct !{!169, !170, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!170 = distinct !{!170, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!171 = !{!172}
!172 = distinct !{!172, !173, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!173 = distinct !{!173, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!174 = !{!175}
!175 = distinct !{!175, !176, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!176 = distinct !{!176, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!177 = !{!178}
!178 = distinct !{!178, !179, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!179 = distinct !{!179, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!180 = !{!181}
!181 = distinct !{!181, !182, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!182 = distinct !{!182, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!183 = !{!184}
!184 = distinct !{!184, !185, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!185 = distinct !{!185, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!186 = !{!187}
!187 = distinct !{!187, !188, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!188 = distinct !{!188, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!189 = !{!190}
!190 = distinct !{!190, !191, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!191 = distinct !{!191, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!192 = distinct !{!192, !25}
!193 = distinct !{!193, !3}
!194 = distinct !{!194, !28, !25}
!195 = distinct !{!195, !25}
!196 = distinct !{!196, !3}
!197 = distinct !{!197, !28, !25}
!198 = distinct !{!198, !25}
!199 = distinct !{!199, !3}
!200 = distinct !{!200, !28, !25}
!201 = !{!202}
!202 = distinct !{!202, !203, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!203 = distinct !{!203, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!204 = !{!205}
!205 = distinct !{!205, !206, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!206 = distinct !{!206, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!207 = !{!208}
!208 = distinct !{!208, !209, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!209 = distinct !{!209, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!210 = !{!211}
!211 = distinct !{!211, !212, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!212 = distinct !{!212, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!213 = !{!214}
!214 = distinct !{!214, !215, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!215 = distinct !{!215, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!216 = !{!217}
!217 = distinct !{!217, !218, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!218 = distinct !{!218, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!219 = !{!220}
!220 = distinct !{!220, !221, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!221 = distinct !{!221, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!222 = !{!223}
!223 = distinct !{!223, !224, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!224 = distinct !{!224, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!227 = distinct !{!227, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!230 = distinct !{!230, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!231 = !{!232}
!232 = distinct !{!232, !233, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!233 = distinct !{!233, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!234 = !{!235}
!235 = distinct !{!235, !236, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!236 = distinct !{!236, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!237 = !{!238}
!238 = distinct !{!238, !239, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!239 = distinct !{!239, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!240 = !{!241}
!241 = distinct !{!241, !242, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!242 = distinct !{!242, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!243 = !{!244}
!244 = distinct !{!244, !245, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!245 = distinct !{!245, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!246 = distinct !{!246, !3}
!247 = !{!248}
!248 = distinct !{!248, !249}
!249 = distinct !{!249, !"LVerDomain"}
!250 = !{!251}
!251 = distinct !{!251, !249}
!252 = distinct !{!252, !25}
!253 = distinct !{!253, !25}
!254 = !{!255}
!255 = distinct !{!255, !256}
!256 = distinct !{!256, !"LVerDomain"}
!257 = !{!258}
!258 = distinct !{!258, !256}
!259 = distinct !{!259, !25}
!260 = distinct !{!260, !3}
!261 = distinct !{!261, !25}
!262 = !{!263}
!263 = distinct !{!263, !264, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!264 = distinct !{!264, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!265 = !{!266}
!266 = distinct !{!266, !267, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!267 = distinct !{!267, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!268 = !{!269}
!269 = distinct !{!269, !270, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!270 = distinct !{!270, !"_ZN3ruy10ToInternalIfEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!271 = !{!272}
!272 = distinct !{!272, !273, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!273 = distinct !{!273, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE"}
!274 = !{!275}
!275 = distinct !{!275, !276, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!276 = distinct !{!276, !"_ZN3ruy9EraseTypeIfEENS_4EMatERKNS_3MatIT_EE"}
!277 = !{!278}
!278 = distinct !{!278, !279, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!279 = distinct !{!279, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!280 = !{!281}
!281 = distinct !{!281, !282, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!282 = distinct !{!282, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!283 = !{!284}
!284 = distinct !{!284, !285, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!285 = distinct !{!285, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!286 = !{!287}
!287 = distinct !{!287, !288, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!288 = distinct !{!288, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!289 = !{!290}
!290 = distinct !{!290, !291, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!291 = distinct !{!291, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!292 = !{!293}
!293 = distinct !{!293, !294, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!294 = distinct !{!294, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!295 = !{!296}
!296 = distinct !{!296, !297, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!297 = distinct !{!297, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!298 = !{!299}
!299 = distinct !{!299, !300, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!300 = distinct !{!300, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!301 = !{!302}
!302 = distinct !{!302, !303, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!303 = distinct !{!303, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!304 = !{!305}
!305 = distinct !{!305, !306, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!306 = distinct !{!306, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!307 = !{!308}
!308 = distinct !{!308, !309, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!309 = distinct !{!309, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!310 = !{!311}
!311 = distinct !{!311, !312, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!312 = distinct !{!312, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!313 = !{!314}
!314 = distinct !{!314, !315, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!315 = distinct !{!315, !"_ZN3ruy11UneraseTypeIfEENS_3MatIT_EERKNS_4EMatE"}
!316 = !{!317}
!317 = distinct !{!317, !318, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!318 = distinct !{!318, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!319 = !{!320}
!320 = distinct !{!320, !321, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!321 = distinct !{!321, !"_ZN3ruy11UneraseTypeIfEENS_4PMatIT_EERKNS_5PEMatE"}
!322 = distinct !{!322, !3}
!323 = !{!324}
!324 = distinct !{!324, !325}
!325 = distinct !{!325, !"LVerDomain"}
!326 = !{!327}
!327 = distinct !{!327, !325}
!328 = distinct !{!328, !25}
!329 = distinct !{!329, !25}
!330 = distinct !{!330, !25}
!331 = distinct !{!331, !3}
!332 = distinct !{!332, !28, !25}
!333 = !{!334}
!334 = distinct !{!334, !335}
!335 = distinct !{!335, !"LVerDomain"}
!336 = !{!337}
!337 = distinct !{!337, !335}
!338 = distinct !{!338, !25}
!339 = distinct !{!339, !3}
!340 = distinct !{!340, !25}
!341 = !{!342}
!342 = distinct !{!342, !343, !"_ZN3ruy10ToInternalIhEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!343 = distinct !{!343, !"_ZN3ruy10ToInternalIhEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!344 = !{!345}
!345 = distinct !{!345, !346, !"_ZN3ruy10ToInternalIhEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!346 = distinct !{!346, !"_ZN3ruy10ToInternalIhEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!347 = !{!348}
!348 = distinct !{!348, !349, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!349 = distinct !{!349, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!350 = !{!351}
!351 = distinct !{!351, !352, !"_ZN3ruy9EraseTypeIhEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!352 = distinct !{!352, !"_ZN3ruy9EraseTypeIhEENS_4EMatERKNS_3MatIT_EE"}
!353 = !{!354}
!354 = distinct !{!354, !355, !"_ZN3ruy9EraseTypeIhEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!355 = distinct !{!355, !"_ZN3ruy9EraseTypeIhEENS_4EMatERKNS_3MatIT_EE"}
!356 = !{!357}
!357 = distinct !{!357, !358, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!358 = distinct !{!358, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE"}
!359 = !{!360}
!360 = distinct !{!360, !361, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!361 = distinct !{!361, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE"}
!362 = !{!363}
!363 = distinct !{!363, !364, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!364 = distinct !{!364, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!365 = !{!366}
!366 = distinct !{!366, !367, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!367 = distinct !{!367, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!368 = !{!369}
!369 = distinct !{!369, !370, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!370 = distinct !{!370, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!371 = !{!372}
!372 = distinct !{!372, !373, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!373 = distinct !{!373, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!374 = !{!375}
!375 = distinct !{!375, !376, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!376 = distinct !{!376, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE"}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!379 = distinct !{!379, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!382 = distinct !{!382, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!383 = !{!384}
!384 = distinct !{!384, !385, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!385 = distinct !{!385, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE"}
!386 = !{!387}
!387 = distinct !{!387, !388, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!388 = distinct !{!388, !"_ZN3ruy11UneraseTypeIhEENS_4PMatIT_EERKNS_5PEMatE"}
!389 = !{!390}
!390 = distinct !{!390, !391, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!391 = distinct !{!391, !"_ZN3ruy11UneraseTypeIhEENS_3MatIT_EERKNS_4EMatE"}
!392 = !{!393}
!393 = distinct !{!393, !394, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!394 = distinct !{!394, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!395 = !{!396}
!396 = distinct !{!396, !397, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!397 = distinct !{!397, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!398 = !{!399}
!399 = distinct !{!399, !400, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!400 = distinct !{!400, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!401 = !{!402}
!402 = distinct !{!402, !403, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!403 = distinct !{!403, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!404 = distinct !{!404, !3}
!405 = !{!406}
!406 = distinct !{!406, !407}
!407 = distinct !{!407, !"LVerDomain"}
!408 = !{!409}
!409 = distinct !{!409, !407}
!410 = distinct !{!410, !25}
!411 = distinct !{!411, !25}
!412 = distinct !{!412, !25}
!413 = distinct !{!413, !3}
!414 = distinct !{!414, !28, !25}
!415 = !{!416}
!416 = distinct !{!416, !417, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!417 = distinct !{!417, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!418 = !{!419}
!419 = distinct !{!419, !420, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE: argument 0"}
!420 = distinct !{!420, !"_ZN3ruy10ToInternalIaEENS_3MatIT_EERKNS_6MatrixIS2_EE"}
!421 = !{!422}
!422 = distinct !{!422, !423, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE: argument 0"}
!423 = distinct !{!423, !"_ZN3ruy10ToInternalIiEENS_3MatIT_EERNS_6MatrixIS2_EE"}
!424 = !{!425}
!425 = distinct !{!425, !426, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!426 = distinct !{!426, !"_ZN3ruy9EraseTypeIaEENS_4EMatERKNS_3MatIT_EE"}
!427 = !{!428}
!428 = distinct !{!428, !429, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE: argument 0"}
!429 = distinct !{!429, !"_ZN3ruy9EraseTypeIiEENS_4EMatERKNS_3MatIT_EE"}
!430 = !{!431}
!431 = distinct !{!431, !432, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!432 = distinct !{!432, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!433 = !{!434}
!434 = distinct !{!434, !435, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!435 = distinct !{!435, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!436 = !{!437}
!437 = distinct !{!437, !438, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!438 = distinct !{!438, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!439 = !{!440}
!440 = distinct !{!440, !441, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!441 = distinct !{!441, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!442 = !{!443}
!443 = distinct !{!443, !444, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!444 = distinct !{!444, !"_ZN3ruy11UneraseTypeIiEENS_3MatIT_EERKNS_4EMatE"}
!445 = !{!446}
!446 = distinct !{!446, !447, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!447 = distinct !{!447, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!448 = !{!449}
!449 = distinct !{!449, !450, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!450 = distinct !{!450, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
!451 = !{!452}
!452 = distinct !{!452, !453, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE: argument 0"}
!453 = distinct !{!453, !"_ZN3ruy11UneraseTypeIaEENS_3MatIT_EERKNS_4EMatE"}
!454 = !{!455}
!455 = distinct !{!455, !456, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE: argument 0"}
!456 = distinct !{!456, !"_ZN3ruy11UneraseTypeIaEENS_4PMatIT_EERKNS_5PEMatE"}
