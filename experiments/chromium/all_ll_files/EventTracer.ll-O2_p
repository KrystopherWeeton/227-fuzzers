; ModuleID = '../../third_party/dawn/src/dawn_platform/tracing/EventTracer.cpp'
source_filename = "../../third_party/dawn/src/dawn_platform/tracing/EventTracer.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_platform::Platform" = type { i32 (...)** }

@_ZZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryEE8disabled = internal global i8 0, align 1

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryE(%"class.dawn_platform::Platform"*, i32) local_unnamed_addr #0 {
  %3 = icmp eq %"class.dawn_platform::Platform"* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.dawn_platform::Platform"* %0 to i8* (%"class.dawn_platform::Platform"*, i32)***
  %6 = load i8* (%"class.dawn_platform::Platform"*, i32)**, i8* (%"class.dawn_platform::Platform"*, i32)*** %5, align 8
  %7 = getelementptr inbounds i8* (%"class.dawn_platform::Platform"*, i32)*, i8* (%"class.dawn_platform::Platform"*, i32)** %6, i64 2
  %8 = load i8* (%"class.dawn_platform::Platform"*, i32)*, i8* (%"class.dawn_platform::Platform"*, i32)** %7, align 8
  %9 = tail call i8* %8(%"class.dawn_platform::Platform"* nonnull %0, i32 %1) #1
  %10 = icmp eq i8* %9, null
  %11 = select i1 %10, i8* @_ZZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryEE8disabled, i8* %9
  br label %12

12:                                               ; preds = %2, %4
  %13 = phi i8* [ %11, %4 ], [ @_ZZN13dawn_platform7tracing27GetTraceCategoryEnabledFlagEPNS_8PlatformENS_13TraceCategoryEE8disabled, %2 ]
  ret i8* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN13dawn_platform7tracing13AddTraceEventEPNS_8PlatformEcPKhPKcmiPS6_S4_PKmh(%"class.dawn_platform::Platform"*, i8 signext, i8*, i8*, i64, i32, i8**, i8*, i64*, i8 zeroext) local_unnamed_addr #0 {
  %11 = bitcast %"class.dawn_platform::Platform"* %0 to double (%"class.dawn_platform::Platform"*)***
  %12 = load double (%"class.dawn_platform::Platform"*)**, double (%"class.dawn_platform::Platform"*)*** %11, align 8
  %13 = getelementptr inbounds double (%"class.dawn_platform::Platform"*)*, double (%"class.dawn_platform::Platform"*)** %12, i64 3
  %14 = load double (%"class.dawn_platform::Platform"*)*, double (%"class.dawn_platform::Platform"*)** %13, align 8
  %15 = tail call double %14(%"class.dawn_platform::Platform"* %0) #1
  %16 = fcmp une double %15, 0.000000e+00
  br i1 %16, label %17, label %23

17:                                               ; preds = %10
  %18 = bitcast %"class.dawn_platform::Platform"* %0 to i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)***
  %19 = load i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)**, i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*** %18, align 8
  %20 = getelementptr inbounds i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)** %19, i64 4
  %21 = load i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)*, i64 (%"class.dawn_platform::Platform"*, i8, i8*, i8*, i64, double, i32, i8**, i8*, i64*, i8)** %20, align 8
  %22 = tail call i64 %21(%"class.dawn_platform::Platform"* %0, i8 signext %1, i8* %2, i8* %3, i64 %4, double %15, i32 %5, i8** %6, i8* %7, i64* %8, i8 zeroext %9) #1
  br label %23

23:                                               ; preds = %10, %17
  %24 = phi i64 [ %22, %17 ], [ 0, %10 ]
  ret i64 %24
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
