; ModuleID = '../../third_party/blink/renderer/core/svg/svg_view_spec.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_view_spec.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::QualifiedName" = type { %class.scoped_refptr.203 }
%class.scoped_refptr.203 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.187 }
%class.scoped_refptr.187 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.188" }
%"struct.std::__1::atomic.188" = type { %"struct.std::__1::__atomic_base.189" }
%"struct.std::__1::__atomic_base.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.138", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.154", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.166", %"class.std::__1::unique_ptr.172", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.178", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.131" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.146" }
%"class.WTF::VectorBuffer.146" = type { %"class.WTF::VectorBufferBase.147" }
%"class.WTF::VectorBufferBase.147" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.154" = type { %"class.std::__1::__compressed_pair.155" }
%"class.std::__1::__compressed_pair.155" = type { %"struct.std::__1::__compressed_pair_elem.156" }
%"struct.std::__1::__compressed_pair_elem.156" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.182" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.166" = type { %"class.std::__1::__compressed_pair.167" }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.178" = type { %"struct.std::__1::__atomic_base.179" }
%"struct.std::__1::__atomic_base.179" = type { %"struct.std::__1::__cxx_atomic_impl.180" }
%"struct.std::__1::__cxx_atomic_impl.180" = type { %"struct.std::__1::__cxx_atomic_base_impl.181" }
%"struct.std::__1::__cxx_atomic_base_impl.181" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.322" }
%"struct.std::__1::atomic.322" = type { %"struct.std::__1::__atomic_base.323" }
%"struct.std::__1::__atomic_base.323" = type { %"struct.std::__1::__atomic_base.324" }
%"struct.std::__1::__atomic_base.324" = type { %"struct.std::__1::__cxx_atomic_impl.325" }
%"struct.std::__1::__cxx_atomic_impl.325" = type { %"struct.std::__1::__cxx_atomic_base_impl.326" }
%"struct.std::__1::__cxx_atomic_base_impl.326" = type { i32 }
%"class.blink::SVGViewSpec" = type <{ %"class.blink::Member", %"class.blink::Member.2", %"class.blink::Member.5", i32, [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::SVGRect"* }
%"class.blink::SVGRect" = type <{ %"class.blink::SVGPropertyHelper", i8, [3 x i8], %"class.blink::FloatRect", [4 x i8] }>
%"class.blink::SVGPropertyHelper" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::SVGPreserveAspectRatio"* }
%"class.blink::SVGPreserveAspectRatio" = type { %"class.blink::SVGPropertyHelper.4", i32, i32 }
%"class.blink::SVGPropertyHelper.4" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::SVGTransformList"* }
%"class.blink::SVGTransformList" = type { %"class.blink::SVGListPropertyHelper" }
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member.9"*, i32, i32 }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.11" }
%"class.blink::MemberBase.11" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGViewElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8] }>
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.227", %"class.blink::Member.229" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.204" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.195", %"class.blink::Member.195" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.195", %"class.blink::Member.197", %"class.blink::Member.195", %"class.blink::Member.195", %"class.blink::Member.199" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.246", %"class.blink::Member.248", %"class.blink::Member.197", %"class.blink::Member.250", %"class.blink::Member.250", %"class.blink::Member.274", %"class.blink::Member.276", %"class.blink::Member.278", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.283", %"class.blink::HeapVector.285" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.246" = type { %"class.blink::MemberBase.247" }
%"class.blink::MemberBase.247" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::Document"* }
%"class.blink::Document" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.254" }
%"class.blink::HeapHashMap.254" = type { %"class.WTF::HashMap.257" }
%"class.WTF::HashMap.257" = type { %"class.WTF::HashTable.258" }
%"class.WTF::HashTable.258" = type <{ %"struct.WTF::KeyValuePair.260"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.260" = type { %"class.WTF::AtomicString", %"class.blink::Member.261" }
%"class.blink::Member.261" = type { %"class.blink::MemberBase.262" }
%"class.blink::MemberBase.262" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.265", i32, %"class.blink::HeapVector.267" }
%"class.blink::Member.265" = type { %"class.blink::MemberBase.266" }
%"class.blink::MemberBase.266" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.267" = type { %"class.WTF::Vector.270" }
%"class.WTF::Vector.270" = type { %"class.WTF::VectorBuffer.271" }
%"class.WTF::VectorBuffer.271" = type { %"class.WTF::VectorBufferBase.272" }
%"class.WTF::VectorBufferBase.272" = type { %"class.blink::Member.265"*, i32, i32 }
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.278" = type { %"class.blink::MemberBase.279" }
%"class.blink::MemberBase.279" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.280" }
%"class.blink::Member.280" = type { %"class.blink::MemberBase.281" }
%"class.blink::MemberBase.281" = type { %"class.blink::HeapHashMap.282"* }
%"class.blink::HeapHashMap.282" = type opaque
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.285" = type { %"class.WTF::Vector.288" }
%"class.WTF::Vector.288" = type { %"class.WTF::VectorBuffer.289" }
%"class.WTF::VectorBuffer.289" = type { %"class.WTF::VectorBufferBase.290" }
%"class.WTF::VectorBufferBase.290" = type { %"class.blink::Member.291"*, i32, i32 }
%"class.blink::Member.291" = type opaque
%"class.blink::Member.199" = type { %"class.blink::MemberBase.200" }
%"class.blink::MemberBase.200" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.204" = type { %"class.blink::MemberBase.205" }
%"class.blink::MemberBase.205" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.208", %"class.blink::Member.210", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.208" = type { %"class.WTF::SingleThreadedBitField.209" }
%"class.WTF::SingleThreadedBitField.209" = type { i32 }
%"class.blink::Member.210" = type { %"class.blink::MemberBase.211" }
%"class.blink::MemberBase.211" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.212 }
%class.scoped_refptr.212 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.213", %"class.WTF::AtomicString", %"class.WTF::Vector.215" }
%"class.WTF::RefCounted.213" = type { %"class.base::RefCounted.214" }
%"class.base::RefCounted.214" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.215" = type { %"class.WTF::VectorBuffer.216" }
%"class.WTF::VectorBuffer.216" = type { %"class.WTF::VectorBufferBase.217", [32 x i8] }
%"class.WTF::VectorBufferBase.217" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.225" }
%"class.WTF::HashTable.225" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.227" = type { %"class.blink::MemberBase.228" }
%"class.blink::MemberBase.228" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.231", %"class.blink::Member.239" }
%"class.blink::Member.231" = type { %"class.blink::MemberBase.232" }
%"class.blink::MemberBase.232" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.235", %"class.blink::Member.235" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.233", %"class.blink::QualifiedName"* }
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::SVGRectTearOff"* }
%"class.blink::SVGRectTearOff" = type { %"class.blink::SVGPropertyTearOff" }
%"class.blink::SVGPropertyTearOff" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member" }
%"class.blink::SVGPropertyTearOffBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.233", %"class.blink::Member.237", i32 }>
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.241" }
%"class.blink::SVGAnimatedProperty.241" = type { %"class.blink::SVGAnimatedPropertyCommon.242", %"class.blink::Member.243", %"class.blink::Member.243" }
%"class.blink::SVGAnimatedPropertyCommon.242" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.2", %"class.blink::Member.2" }
%"class.blink::Member.243" = type { %"class.blink::MemberBase.244" }
%"class.blink::MemberBase.244" = type { %"class.blink::SVGPreserveAspectRatioTearOff"* }
%"class.blink::SVGPreserveAspectRatioTearOff" = type { %"class.blink::SVGPropertyTearOff.245" }
%"class.blink::SVGPropertyTearOff.245" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.2" }
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }

$_ZN5blink11SVGViewSpec21ParseViewSpecInternalIhEEbPKT_S4_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink11SVGViewSpec21ParseViewSpecInternalIDsEEbPKT_S4_ = comdat any

$_ZN5blink10TraceTraitINS_7SVGRectEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_16SVGTransformListEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11SVGViewSpecEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11SVGViewSpecEE7GetNameEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink9svg_names15kZoomAndPanAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str.2 = private unnamed_addr constant [11 x i8] c"viewTarget\00", align 1
@.str.3 = private unnamed_addr constant [11 x i8] c"zoomAndPan\00", align 1
@.str.4 = private unnamed_addr constant [20 x i8] c"preserveAspectRatio\00", align 1
@.str.5 = private unnamed_addr constant [10 x i8] c"transform\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11SVGViewSpecEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGViewSpec]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11SVGViewSpecEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink11SVGViewSpecC1Ev = hidden unnamed_addr alias void (%"class.blink::SVGViewSpec"*), void (%"class.blink::SVGViewSpec"*)* @_ZN5blink11SVGViewSpecC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink11SVGViewSpecC2Ev(%"class.blink::SVGViewSpec"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::SVGViewSpec"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11SVGViewSpec5TraceEPNS_7VisitorE(%"class.blink::SVGViewSpec"* nocapture readonly, %"class.blink::Visitor"*) local_unnamed_addr #1 align 2 {
  %3 = bitcast %"class.blink::SVGViewSpec"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7SVGRectEE5TraceEPNS_7VisitorEPKv) #6
  br label %12

12:                                               ; preds = %2, %6
  %13 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 1
  %14 = bitcast %"class.blink::Member.2"* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %1, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv) #6
  br label %23

23:                                               ; preds = %12, %17
  %24 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 2
  %25 = bitcast %"class.blink::Member.5"* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16SVGTransformListEE5TraceEPNS_7VisitorEPKv) #6
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec18CreateFromFragmentERKN3WTF6StringE(%"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11SVGViewSpecEEEPhm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.blink::SVGViewSpec"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %32, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 1
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 1
  br i1 %19, label %26, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  %23 = zext i32 %13 to i64
  %24 = getelementptr inbounds i8, i8* %22, i64 %23
  %25 = tail call zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIhEEbPKT_S4_(%"class.blink::SVGViewSpec"* %3, i8* %22, i8* %24) #6
  br i1 %25, label %31, label %32

26:                                               ; preds = %15
  %27 = bitcast %"class.WTF::StringImpl"* %20 to i16*
  %28 = zext i32 %13 to i64
  %29 = getelementptr inbounds i16, i16* %27, i64 %28
  %30 = tail call zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIDsEEbPKT_S4_(%"class.blink::SVGViewSpec"* %3, i16* %27, i16* %29) #6
  br i1 %30, label %31, label %32

31:                                               ; preds = %21, %26
  br label %32

32:                                               ; preds = %1, %11, %21, %26, %31
  %33 = phi %"class.blink::SVGViewSpec"* [ %3, %31 ], [ null, %26 ], [ null, %21 ], [ null, %11 ], [ null, %1 ]
  ret %"class.blink::SVGViewSpec"* %33
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11SVGViewSpec13ParseViewSpecERKN3WTF6StringE(%"class.blink::SVGViewSpec"*, %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %26, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %26, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 1
  br i1 %14, label %21, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.WTF::StringImpl"* %15 to i8*
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds i8, i8* %17, i64 %18
  %20 = tail call zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIhEEbPKT_S4_(%"class.blink::SVGViewSpec"* %0, i8* %17, i8* %19) #6
  br label %26

21:                                               ; preds = %10
  %22 = bitcast %"class.WTF::StringImpl"* %15 to i16*
  %23 = zext i32 %8 to i64
  %24 = getelementptr inbounds i16, i16* %22, i64 %23
  %25 = tail call zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIDsEEbPKT_S4_(%"class.blink::SVGViewSpec"* %0, i16* %22, i16* %24) #6
  br label %26

26:                                               ; preds = %2, %21, %16, %6
  %27 = phi i1 [ false, %6 ], [ %20, %16 ], [ %25, %21 ], [ false, %2 ]
  ret i1 %27
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec20CreateForViewElementERKNS_14SVGViewElementE(%"class.blink::SVGViewElement"* dereferenceable(208)) local_unnamed_addr #1 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11SVGViewSpecEEEPhm(i64 32) #6
  %3 = bitcast i8* %2 to %"class.blink::SVGViewSpec"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 28, i1 false) #6
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  %8 = getelementptr inbounds %"class.blink::SVGViewElement", %"class.blink::SVGViewElement"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %9 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %11, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %24, label %15

15:                                               ; preds = %1
  %16 = tail call %"class.blink::SVGRect"* @_ZNK5blink7SVGRect5CloneEv(%"class.blink::SVGRect"* %11) #6
  %17 = ptrtoint %"class.blink::SVGRect"* %16 to i64
  %18 = bitcast i8* %2 to i64*
  store atomic i64 %17, i64* %18 monotonic, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::SVGRect"* %16 to i8*
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #6
  br label %24

24:                                               ; preds = %1, %21, %15
  %25 = getelementptr inbounds %"class.blink::SVGViewElement", %"class.blink::SVGViewElement"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %26 = load %"class.blink::SVGAnimatedPreserveAspectRatio"*, %"class.blink::SVGAnimatedPreserveAspectRatio"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SVGAnimatedPreserveAspectRatio", %"class.blink::SVGAnimatedPreserveAspectRatio"* %26, i64 0, i32 1, i32 0, i32 0
  %28 = tail call zeroext i1 @_ZNK5blink23SVGAnimatedPropertyBase11IsSpecifiedEv(%"class.blink::SVGAnimatedPropertyBase"* %27) #6
  br i1 %28, label %29, label %42

29:                                               ; preds = %24
  %30 = load %"class.blink::SVGAnimatedPreserveAspectRatio"*, %"class.blink::SVGAnimatedPreserveAspectRatio"** %25, align 8
  %31 = getelementptr inbounds %"class.blink::SVGAnimatedPreserveAspectRatio", %"class.blink::SVGAnimatedPreserveAspectRatio"* %30, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %31, align 8
  %33 = tail call %"class.blink::SVGPreserveAspectRatio"* @_ZNK5blink22SVGPreserveAspectRatio5CloneEv(%"class.blink::SVGPreserveAspectRatio"* %32) #6
  %34 = getelementptr inbounds i8, i8* %2, i64 8
  %35 = ptrtoint %"class.blink::SVGPreserveAspectRatio"* %33 to i64
  %36 = bitcast i8* %34 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::SVGPreserveAspectRatio"* %33 to i8*
  %41 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #6
  br label %42

42:                                               ; preds = %39, %29, %24
  %43 = getelementptr inbounds %"class.blink::SVGViewElement", %"class.blink::SVGViewElement"* %0, i64 0, i32 0, i32 0
  %44 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names15kZoomAndPanAttrE, align 8
  %45 = tail call zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"* %43, %"class.blink::QualifiedName"* dereferenceable(8) %44) #6
  br i1 %45, label %46, label %51

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::SVGViewElement", %"class.blink::SVGViewElement"* %0, i64 0, i32 2, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = getelementptr inbounds i8, i8* %2, i64 24
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 8
  br label %51

51:                                               ; preds = %46, %42
  ret %"class.blink::SVGViewSpec"* %3
}

declare %"class.blink::SVGRect"* @_ZNK5blink7SVGRect5CloneEv(%"class.blink::SVGRect"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink23SVGAnimatedPropertyBase11IsSpecifiedEv(%"class.blink::SVGAnimatedPropertyBase"*) local_unnamed_addr #3

declare %"class.blink::SVGPreserveAspectRatio"* @_ZNK5blink22SVGPreserveAspectRatio5CloneEv(%"class.blink::SVGPreserveAspectRatio"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink7Element12hasAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIhEEbPKT_S4_(%"class.blink::SVGViewSpec"*, i8*, i8*) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.blink::FloatRect", align 4
  store i8* %1, i8** %4, align 8
  %10 = icmp ult i8* %1, %2
  br i1 %10, label %11, label %242

11:                                               ; preds = %3
  %12 = load i8, i8* %1, align 1
  %13 = icmp eq i8 %12, 115
  br i1 %13, label %14, label %242

14:                                               ; preds = %11
  %15 = getelementptr inbounds i8, i8* %1, i64 1
  %16 = icmp eq i8* %15, %2
  br i1 %16, label %242, label %281

17:                                               ; preds = %314
  store i8* %2, i8** %4, align 8
  br label %242

18:                                               ; preds = %317
  %19 = load i8, i8* %315, align 1
  %20 = icmp eq i8 %19, 40
  br i1 %20, label %21, label %242

21:                                               ; preds = %18
  %22 = getelementptr inbounds i8, i8* %315, i64 1
  store i8* %22, i8** %4, align 8
  %23 = icmp ult i8* %22, %2
  br i1 %23, label %24, label %242

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 2
  %26 = bitcast %"class.blink::Member.5"* %25 to i64*
  %27 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %25, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 1
  %29 = bitcast %"class.blink::Member.2"* %28 to i64*
  %30 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %28, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 3
  %32 = bitcast float* %5 to i8*
  %33 = bitcast float* %6 to i8*
  %34 = bitcast float* %7 to i8*
  %35 = bitcast float* %8 to i8*
  %36 = bitcast %"class.blink::FloatRect"* %9 to i8*
  %37 = bitcast float* %5 to i32*
  %38 = bitcast float* %6 to i32*
  %39 = bitcast float* %7 to i32*
  %40 = bitcast float* %8 to i32*
  %41 = bitcast %"class.blink::FloatRect"* %9 to i32*
  %42 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 1
  %43 = bitcast float* %42 to i32*
  %44 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 0
  %45 = bitcast float* %44 to i32*
  %46 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 1
  %47 = bitcast float* %46 to i32*
  %48 = bitcast %"class.blink::SVGViewSpec"* %0 to i64*
  br label %49

49:                                               ; preds = %24, %237
  %50 = phi i8* [ %22, %24 ], [ %238, %237 ]
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 41
  br i1 %52, label %240, label %53

53:                                               ; preds = %49
  %54 = zext i8 %51 to i32
  %55 = add nsw i32 %54, -112
  %56 = lshr i32 %55, 1
  %57 = shl i32 %55, 31
  %58 = or i32 %56, %57
  switch i32 %58, label %242 [
    i32 3, label %59
    i32 5, label %85
    i32 0, label %104
    i32 2, label %123
  ]

59:                                               ; preds = %53
  %60 = load i8, i8* %50, align 1
  %61 = icmp eq i8 %60, 118
  br i1 %61, label %62, label %65

62:                                               ; preds = %59
  %63 = getelementptr inbounds i8, i8* %50, i64 1
  %64 = icmp eq i8* %63, %2
  br i1 %64, label %65, label %244

65:                                               ; preds = %271, %265, %259, %253, %247, %62, %59, %244, %250, %256, %262, %268, %274
  br label %66

66:                                               ; preds = %65, %76
  %67 = phi i1 [ %80, %76 ], [ false, %65 ]
  %68 = phi i8 [ %79, %76 ], [ 118, %65 ]
  %69 = phi i8* [ %77, %76 ], [ %50, %65 ]
  %70 = phi i8* [ %78, %76 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), %65 ]
  br i1 %67, label %83, label %71

71:                                               ; preds = %66
  %72 = load i8, i8* %69, align 1
  %73 = zext i8 %72 to i32
  %74 = sext i8 %68 to i32
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %76, label %242

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %69, i64 1
  %78 = getelementptr inbounds i8, i8* %70, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  %81 = icmp eq i8* %77, %2
  br i1 %81, label %82, label %66

82:                                               ; preds = %76
  br i1 %80, label %83, label %242

83:                                               ; preds = %66, %82
  %84 = phi i8* [ %2, %82 ], [ %69, %66 ]
  store i8* %84, i8** %4, align 8
  br label %142

85:                                               ; preds = %53, %95
  %86 = phi i1 [ %99, %95 ], [ false, %53 ]
  %87 = phi i8 [ %98, %95 ], [ 122, %53 ]
  %88 = phi i8* [ %96, %95 ], [ %50, %53 ]
  %89 = phi i8* [ %97, %95 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %53 ]
  br i1 %86, label %102, label %90

90:                                               ; preds = %85
  %91 = load i8, i8* %88, align 1
  %92 = zext i8 %91 to i32
  %93 = sext i8 %87 to i32
  %94 = icmp eq i32 %92, %93
  br i1 %94, label %95, label %242

95:                                               ; preds = %90
  %96 = getelementptr inbounds i8, i8* %88, i64 1
  %97 = getelementptr inbounds i8, i8* %89, i64 1
  %98 = load i8, i8* %97, align 1
  %99 = icmp eq i8 %98, 0
  %100 = icmp eq i8* %96, %2
  br i1 %100, label %101, label %85

101:                                              ; preds = %95
  br i1 %99, label %102, label %242

102:                                              ; preds = %85, %101
  %103 = phi i8* [ %2, %101 ], [ %88, %85 ]
  store i8* %103, i8** %4, align 8
  br label %142

104:                                              ; preds = %53, %114
  %105 = phi i1 [ %118, %114 ], [ false, %53 ]
  %106 = phi i8 [ %117, %114 ], [ 112, %53 ]
  %107 = phi i8* [ %115, %114 ], [ %50, %53 ]
  %108 = phi i8* [ %116, %114 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), %53 ]
  br i1 %105, label %121, label %109

109:                                              ; preds = %104
  %110 = load i8, i8* %107, align 1
  %111 = zext i8 %110 to i32
  %112 = sext i8 %106 to i32
  %113 = icmp eq i32 %111, %112
  br i1 %113, label %114, label %242

114:                                              ; preds = %109
  %115 = getelementptr inbounds i8, i8* %107, i64 1
  %116 = getelementptr inbounds i8, i8* %108, i64 1
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  %119 = icmp eq i8* %115, %2
  br i1 %119, label %120, label %104

120:                                              ; preds = %114
  br i1 %118, label %121, label %242

121:                                              ; preds = %104, %120
  %122 = phi i8* [ %2, %120 ], [ %107, %104 ]
  store i8* %122, i8** %4, align 8
  br label %142

123:                                              ; preds = %53, %133
  %124 = phi i1 [ %137, %133 ], [ false, %53 ]
  %125 = phi i8 [ %136, %133 ], [ 116, %53 ]
  %126 = phi i8* [ %134, %133 ], [ %50, %53 ]
  %127 = phi i8* [ %135, %133 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), %53 ]
  br i1 %124, label %140, label %128

128:                                              ; preds = %123
  %129 = load i8, i8* %126, align 1
  %130 = zext i8 %129 to i32
  %131 = sext i8 %125 to i32
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %133, label %242

133:                                              ; preds = %128
  %134 = getelementptr inbounds i8, i8* %126, i64 1
  %135 = getelementptr inbounds i8, i8* %127, i64 1
  %136 = load i8, i8* %135, align 1
  %137 = icmp eq i8 %136, 0
  %138 = icmp eq i8* %134, %2
  br i1 %138, label %139, label %123

139:                                              ; preds = %133
  br i1 %137, label %140, label %242

140:                                              ; preds = %123, %139
  %141 = phi i8* [ %2, %139 ], [ %126, %123 ]
  store i8* %141, i8** %4, align 8
  br label %142

142:                                              ; preds = %140, %121, %102, %83, %277
  %143 = phi i8* [ %280, %277 ], [ %84, %83 ], [ %103, %102 ], [ %122, %121 ], [ %141, %140 ]
  %144 = phi i32 [ 3, %277 ], [ 4, %83 ], [ 5, %102 ], [ 1, %121 ], [ 2, %140 ]
  %145 = icmp ult i8* %143, %2
  br i1 %145, label %146, label %242

146:                                              ; preds = %142
  %147 = load i8, i8* %143, align 1
  %148 = icmp eq i8 %147, 40
  br i1 %148, label %149, label %242

149:                                              ; preds = %146
  %150 = getelementptr inbounds i8, i8* %143, i64 1
  store i8* %150, i8** %4, align 8
  switch i32 %144, label %223 [
    i32 3, label %151
    i32 4, label %177
    i32 5, label %186
    i32 1, label %189
    i32 2, label %206
  ]

151:                                              ; preds = %149
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32) #6
  store float 0.000000e+00, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33) #6
  store float 0.000000e+00, float* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #6
  store float 0.000000e+00, float* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #6
  store float 0.000000e+00, float* %8, align 4
  %152 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %152, label %153, label %176

153:                                              ; preds = %151
  %154 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %6, i32 3) #6
  br i1 %154, label %155, label %176

155:                                              ; preds = %153
  %156 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %7, i32 3) #6
  br i1 %156, label %157, label %176

157:                                              ; preds = %155
  %158 = call zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** nonnull dereferenceable(8) %4, i8* %2, float* nonnull dereferenceable(4) %8, i32 0) #6
  br i1 %158, label %159, label %176

159:                                              ; preds = %157
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #6
  %160 = load i32, i32* %37, align 4
  %161 = load i32, i32* %38, align 4
  %162 = load i32, i32* %39, align 4
  %163 = load i32, i32* %40, align 4
  store i32 %160, i32* %41, align 4
  store i32 %161, i32* %43, align 4
  store i32 %162, i32* %45, align 4
  store i32 %163, i32* %47, align 4
  %164 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #6
  %165 = bitcast i8* %164 to %"class.blink::SVGRect"*
  call void @_ZN5blink7SVGRectC1ERKNS_9FloatRectE(%"class.blink::SVGRect"* %165, %"class.blink::FloatRect"* nonnull dereferenceable(16) %9) #6
  %166 = getelementptr inbounds i8, i8* %164, i64 -4
  %167 = bitcast i8* %166 to i16*
  %168 = load atomic i16, i16* %167 monotonic, align 2
  %169 = or i16 %168, 1
  store atomic i16 %169, i16* %167 release, align 2
  %170 = ptrtoint i8* %164 to i64
  store atomic i64 %170, i64* %48 monotonic, align 8
  %171 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %159
  %174 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %164) #6
  br label %175

175:                                              ; preds = %159, %173
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  br label %223

176:                                              ; preds = %151, %153, %155, %157
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32) #6
  br label %242

177:                                              ; preds = %149
  %178 = icmp ult i8* %150, %2
  br i1 %178, label %179, label %223

179:                                              ; preds = %177, %183
  %180 = phi i8* [ %184, %183 ], [ %150, %177 ]
  %181 = load i8, i8* %180, align 1
  %182 = icmp eq i8 %181, 41
  br i1 %182, label %223, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds i8, i8* %180, i64 1
  store i8* %184, i8** %4, align 8
  %185 = icmp eq i8* %184, %2
  br i1 %185, label %223, label %179

186:                                              ; preds = %149
  %187 = call i32 @_ZN5blink13SVGZoomAndPan5ParseERPKhS2_(i8** nonnull dereferenceable(8) %4, i8* %2) #6
  store i32 %187, i32* %31, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %242, label %223

189:                                              ; preds = %149
  %190 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #6
  %191 = bitcast i8* %190 to %"class.blink::SVGPreserveAspectRatio"*
  call void @_ZN5blink22SVGPreserveAspectRatioC1Ev(%"class.blink::SVGPreserveAspectRatio"* %191) #6
  %192 = getelementptr inbounds i8, i8* %190, i64 -4
  %193 = bitcast i8* %192 to i16*
  %194 = load atomic i16, i16* %193 monotonic, align 2
  %195 = or i16 %194, 1
  store atomic i16 %195, i16* %193 release, align 2
  %196 = ptrtoint i8* %190 to i64
  store atomic i64 %196, i64* %29 monotonic, align 8
  %197 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %198 = icmp eq i32 %197, 0
  %199 = bitcast i8* %190 to %"class.blink::SVGPreserveAspectRatio"*
  br i1 %198, label %203, label %200

200:                                              ; preds = %189
  %201 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %190) #6
  %202 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %30, align 8
  br label %203

203:                                              ; preds = %189, %200
  %204 = phi %"class.blink::SVGPreserveAspectRatio"* [ %199, %189 ], [ %202, %200 ]
  %205 = call zeroext i1 @_ZN5blink22SVGPreserveAspectRatio5ParseERPKhS2_b(%"class.blink::SVGPreserveAspectRatio"* %204, i8** nonnull dereferenceable(8) %4, i8* %2, i1 zeroext false) #6
  br i1 %205, label %223, label %242

206:                                              ; preds = %149
  %207 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %208 = bitcast i8* %207 to %"class.blink::SVGTransformList"*
  call void @_ZN5blink16SVGTransformListC1Ev(%"class.blink::SVGTransformList"* %208) #6
  %209 = getelementptr inbounds i8, i8* %207, i64 -4
  %210 = bitcast i8* %209 to i16*
  %211 = load atomic i16, i16* %210 monotonic, align 2
  %212 = or i16 %211, 1
  store atomic i16 %212, i16* %210 release, align 2
  %213 = ptrtoint i8* %207 to i64
  store atomic i64 %213, i64* %26 monotonic, align 8
  %214 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %215 = icmp eq i32 %214, 0
  %216 = bitcast i8* %207 to %"class.blink::SVGTransformList"*
  br i1 %215, label %220, label %217

217:                                              ; preds = %206
  %218 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %207) #6
  %219 = load %"class.blink::SVGTransformList"*, %"class.blink::SVGTransformList"** %27, align 8
  br label %220

220:                                              ; preds = %206, %217
  %221 = phi %"class.blink::SVGTransformList"* [ %216, %206 ], [ %219, %217 ]
  %222 = call zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKhS2_(%"class.blink::SVGTransformList"* %221, i8** nonnull dereferenceable(8) %4, i8* %2) #6
  br label %223

223:                                              ; preds = %183, %179, %177, %175, %149, %203, %186, %220
  %224 = load i8*, i8** %4, align 8
  %225 = icmp ult i8* %224, %2
  br i1 %225, label %226, label %242

226:                                              ; preds = %223
  %227 = load i8, i8* %224, align 1
  %228 = icmp eq i8 %227, 41
  br i1 %228, label %229, label %242

229:                                              ; preds = %226
  %230 = getelementptr inbounds i8, i8* %224, i64 1
  store i8* %230, i8** %4, align 8
  %231 = icmp ult i8* %230, %2
  br i1 %231, label %232, label %237

232:                                              ; preds = %229
  %233 = load i8, i8* %230, align 1
  %234 = icmp eq i8 %233, 59
  br i1 %234, label %235, label %237

235:                                              ; preds = %232
  %236 = getelementptr inbounds i8, i8* %224, i64 2
  store i8* %236, i8** %4, align 8
  br label %237

237:                                              ; preds = %229, %232, %235
  %238 = phi i8* [ %230, %229 ], [ %230, %232 ], [ %236, %235 ]
  %239 = icmp ult i8* %238, %2
  br i1 %239, label %49, label %242

240:                                              ; preds = %49
  %241 = getelementptr inbounds i8, i8* %50, i64 1
  store i8* %241, i8** %4, align 8
  br label %242

242:                                              ; preds = %308, %302, %296, %290, %284, %14, %11, %281, %287, %293, %299, %305, %311, %203, %186, %237, %53, %82, %101, %120, %139, %146, %142, %226, %223, %128, %109, %90, %71, %17, %21, %317, %18, %3, %240, %176
  %243 = phi i1 [ false, %176 ], [ true, %240 ], [ false, %3 ], [ false, %18 ], [ false, %317 ], [ false, %21 ], [ false, %17 ], [ false, %71 ], [ false, %90 ], [ false, %109 ], [ false, %128 ], [ false, %223 ], [ false, %226 ], [ false, %142 ], [ false, %146 ], [ false, %139 ], [ false, %120 ], [ false, %101 ], [ false, %82 ], [ false, %53 ], [ false, %237 ], [ false, %186 ], [ false, %203 ], [ false, %311 ], [ false, %305 ], [ false, %299 ], [ false, %293 ], [ false, %287 ], [ false, %281 ], [ false, %11 ], [ false, %14 ], [ false, %284 ], [ false, %290 ], [ false, %296 ], [ false, %302 ], [ false, %308 ]
  ret i1 %243

244:                                              ; preds = %62
  %245 = load i8, i8* %63, align 1
  %246 = icmp eq i8 %245, 105
  br i1 %246, label %247, label %65

247:                                              ; preds = %244
  %248 = getelementptr inbounds i8, i8* %50, i64 2
  %249 = icmp eq i8* %248, %2
  br i1 %249, label %65, label %250

250:                                              ; preds = %247
  %251 = load i8, i8* %248, align 1
  %252 = icmp eq i8 %251, 101
  br i1 %252, label %253, label %65

253:                                              ; preds = %250
  %254 = getelementptr inbounds i8, i8* %50, i64 3
  %255 = icmp eq i8* %254, %2
  br i1 %255, label %65, label %256

256:                                              ; preds = %253
  %257 = load i8, i8* %254, align 1
  %258 = icmp eq i8 %257, 119
  br i1 %258, label %259, label %65

259:                                              ; preds = %256
  %260 = getelementptr inbounds i8, i8* %50, i64 4
  %261 = icmp eq i8* %260, %2
  br i1 %261, label %65, label %262

262:                                              ; preds = %259
  %263 = load i8, i8* %260, align 1
  %264 = icmp eq i8 %263, 66
  br i1 %264, label %265, label %65

265:                                              ; preds = %262
  %266 = getelementptr inbounds i8, i8* %50, i64 5
  %267 = icmp eq i8* %266, %2
  br i1 %267, label %65, label %268

268:                                              ; preds = %265
  %269 = load i8, i8* %266, align 1
  %270 = icmp eq i8 %269, 111
  br i1 %270, label %271, label %65

271:                                              ; preds = %268
  %272 = getelementptr inbounds i8, i8* %50, i64 6
  %273 = icmp eq i8* %272, %2
  br i1 %273, label %65, label %274

274:                                              ; preds = %271
  %275 = load i8, i8* %272, align 1
  %276 = icmp eq i8 %275, 120
  br i1 %276, label %277, label %65

277:                                              ; preds = %274
  %278 = getelementptr inbounds i8, i8* %50, i64 7
  %279 = icmp eq i8* %278, %2
  %280 = select i1 %279, i8* %2, i8* %278
  store i8* %280, i8** %4, align 8
  br label %142

281:                                              ; preds = %14
  %282 = load i8, i8* %15, align 1
  %283 = icmp eq i8 %282, 118
  br i1 %283, label %284, label %242

284:                                              ; preds = %281
  %285 = getelementptr inbounds i8, i8* %1, i64 2
  %286 = icmp eq i8* %285, %2
  br i1 %286, label %242, label %287

287:                                              ; preds = %284
  %288 = load i8, i8* %285, align 1
  %289 = icmp eq i8 %288, 103
  br i1 %289, label %290, label %242

290:                                              ; preds = %287
  %291 = getelementptr inbounds i8, i8* %1, i64 3
  %292 = icmp eq i8* %291, %2
  br i1 %292, label %242, label %293

293:                                              ; preds = %290
  %294 = load i8, i8* %291, align 1
  %295 = icmp eq i8 %294, 86
  br i1 %295, label %296, label %242

296:                                              ; preds = %293
  %297 = getelementptr inbounds i8, i8* %1, i64 4
  %298 = icmp eq i8* %297, %2
  br i1 %298, label %242, label %299

299:                                              ; preds = %296
  %300 = load i8, i8* %297, align 1
  %301 = icmp eq i8 %300, 105
  br i1 %301, label %302, label %242

302:                                              ; preds = %299
  %303 = getelementptr inbounds i8, i8* %1, i64 5
  %304 = icmp eq i8* %303, %2
  br i1 %304, label %242, label %305

305:                                              ; preds = %302
  %306 = load i8, i8* %303, align 1
  %307 = icmp eq i8 %306, 101
  br i1 %307, label %308, label %242

308:                                              ; preds = %305
  %309 = getelementptr inbounds i8, i8* %1, i64 6
  %310 = icmp eq i8* %309, %2
  br i1 %310, label %242, label %311

311:                                              ; preds = %308
  %312 = load i8, i8* %309, align 1
  %313 = icmp eq i8 %312, 119
  br i1 %313, label %314, label %242

314:                                              ; preds = %311
  %315 = getelementptr inbounds i8, i8* %1, i64 7
  %316 = icmp eq i8* %315, %2
  br i1 %316, label %17, label %317

317:                                              ; preds = %314
  store i8* %315, i8** %4, align 8
  %318 = icmp ult i8* %315, %2
  br i1 %318, label %18, label %242
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKhS1_RfNS_14WhitespaceModeE(i8** dereferenceable(8), i8*, float* dereferenceable(4), i32) local_unnamed_addr #3

declare i32 @_ZN5blink13SVGZoomAndPan5ParseERPKhS2_(i8** dereferenceable(8), i8*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink22SVGPreserveAspectRatio5ParseERPKhS2_b(%"class.blink::SVGPreserveAspectRatio"*, i8** dereferenceable(8), i8*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKhS2_(%"class.blink::SVGTransformList"*, i8** dereferenceable(8), i8*) local_unnamed_addr #3

declare void @_ZN5blink7SVGRectC1ERKNS_9FloatRectE(%"class.blink::SVGRect"*, %"class.blink::FloatRect"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.188"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.188"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #6
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #6
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #6
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #6
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #6
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #6
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #6
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #6
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #6
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #6
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #6
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #3

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #1 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.188"*) local_unnamed_addr #3

declare void @_ZN5blink22SVGPreserveAspectRatioC1Ev(%"class.blink::SVGPreserveAspectRatio"*) unnamed_addr #3

declare void @_ZN5blink16SVGTransformListC1Ev(%"class.blink::SVGTransformList"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink11SVGViewSpec21ParseViewSpecInternalIDsEEbPKT_S4_(%"class.blink::SVGViewSpec"*, i16*, i16*) local_unnamed_addr #1 comdat align 2 {
  %4 = alloca i16*, align 8
  %5 = alloca float, align 4
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.blink::FloatRect", align 4
  store i16* %1, i16** %4, align 8
  %10 = icmp ult i16* %1, %2
  br i1 %10, label %11, label %252

11:                                               ; preds = %3
  %12 = load i16, i16* %1, align 2
  %13 = icmp eq i16 %12, 115
  br i1 %13, label %14, label %252

14:                                               ; preds = %11
  %15 = getelementptr inbounds i16, i16* %1, i64 1
  %16 = icmp ult i16* %15, %2
  br i1 %16, label %290, label %17

17:                                               ; preds = %323, %317, %311, %305, %299, %293, %14
  %18 = phi i16* [ %15, %14 ], [ %294, %293 ], [ %300, %299 ], [ %306, %305 ], [ %312, %311 ], [ %318, %317 ], [ %324, %323 ]
  %19 = phi i1 [ false, %14 ], [ false, %293 ], [ false, %299 ], [ false, %305 ], [ false, %311 ], [ false, %317 ], [ true, %323 ]
  br i1 %19, label %20, label %252

20:                                               ; preds = %323, %17
  %21 = phi i16* [ %18, %17 ], [ %324, %323 ]
  store i16* %21, i16** %4, align 8
  %22 = icmp ult i16* %21, %2
  br i1 %22, label %23, label %252

23:                                               ; preds = %20
  %24 = load i16, i16* %21, align 2
  %25 = icmp eq i16 %24, 40
  br i1 %25, label %26, label %252

26:                                               ; preds = %23
  %27 = getelementptr inbounds i16, i16* %21, i64 1
  store i16* %27, i16** %4, align 8
  %28 = icmp ult i16* %27, %2
  br i1 %28, label %29, label %252

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 2
  %31 = bitcast %"class.blink::Member.5"* %30 to i64*
  %32 = getelementptr inbounds %"class.blink::Member.5", %"class.blink::Member.5"* %30, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 1
  %34 = bitcast %"class.blink::Member.2"* %33 to i64*
  %35 = getelementptr inbounds %"class.blink::Member.2", %"class.blink::Member.2"* %33, i64 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %0, i64 0, i32 3
  %37 = bitcast float* %5 to i8*
  %38 = bitcast float* %6 to i8*
  %39 = bitcast float* %7 to i8*
  %40 = bitcast float* %8 to i8*
  %41 = bitcast %"class.blink::FloatRect"* %9 to i8*
  %42 = bitcast float* %5 to i32*
  %43 = bitcast float* %6 to i32*
  %44 = bitcast float* %7 to i32*
  %45 = bitcast float* %8 to i32*
  %46 = bitcast %"class.blink::FloatRect"* %9 to i32*
  %47 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 0, i32 1
  %48 = bitcast float* %47 to i32*
  %49 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 0
  %50 = bitcast float* %49 to i32*
  %51 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %9, i64 0, i32 1, i32 1
  %52 = bitcast float* %51 to i32*
  %53 = bitcast %"class.blink::SVGViewSpec"* %0 to i64*
  br label %54

54:                                               ; preds = %29, %247
  %55 = phi i16* [ %27, %29 ], [ %248, %247 ]
  %56 = load i16, i16* %55, align 2
  %57 = icmp eq i16 %56, 41
  br i1 %57, label %250, label %58

58:                                               ; preds = %54
  %59 = zext i16 %56 to i32
  %60 = add nsw i32 %59, -112
  %61 = lshr i32 %60, 1
  %62 = shl i32 %60, 31
  %63 = or i32 %61, %62
  switch i32 %63, label %252 [
    i32 3, label %64
    i32 5, label %95
    i32 0, label %114
    i32 2, label %133
  ]

64:                                               ; preds = %58
  %65 = load i16, i16* %55, align 2
  %66 = icmp eq i16 %65, 118
  br i1 %66, label %67, label %73

67:                                               ; preds = %64
  %68 = getelementptr inbounds i16, i16* %55, i64 1
  %69 = icmp ult i16* %68, %2
  br i1 %69, label %254, label %70

70:                                               ; preds = %287, %281, %275, %269, %263, %257, %67
  %71 = phi i16* [ %68, %67 ], [ %258, %257 ], [ %264, %263 ], [ %270, %269 ], [ %276, %275 ], [ %282, %281 ], [ %288, %287 ]
  %72 = phi i1 [ false, %67 ], [ false, %257 ], [ false, %263 ], [ false, %269 ], [ false, %275 ], [ false, %281 ], [ true, %287 ]
  br i1 %72, label %74, label %73

73:                                               ; preds = %64, %254, %260, %266, %272, %278, %284, %70
  br label %76

74:                                               ; preds = %287, %70
  %75 = phi i16* [ %71, %70 ], [ %288, %287 ]
  store i16* %75, i16** %4, align 8
  br label %152

76:                                               ; preds = %73, %86
  %77 = phi i1 [ %91, %86 ], [ false, %73 ]
  %78 = phi i8 [ %90, %86 ], [ 118, %73 ]
  %79 = phi i16* [ %87, %86 ], [ %55, %73 ]
  %80 = phi i8* [ %88, %86 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.2, i64 0, i64 0), %73 ]
  br i1 %77, label %93, label %81

81:                                               ; preds = %76
  %82 = load i16, i16* %79, align 2
  %83 = zext i16 %82 to i32
  %84 = sext i8 %78 to i32
  %85 = icmp eq i32 %83, %84
  br i1 %85, label %86, label %252

86:                                               ; preds = %81
  %87 = getelementptr inbounds i16, i16* %79, i64 1
  %88 = getelementptr inbounds i8, i8* %80, i64 1
  %89 = icmp ult i16* %87, %2
  %90 = load i8, i8* %88, align 1
  %91 = icmp eq i8 %90, 0
  br i1 %89, label %76, label %92

92:                                               ; preds = %86
  br i1 %91, label %93, label %252

93:                                               ; preds = %76, %92
  %94 = phi i16* [ %87, %92 ], [ %79, %76 ]
  store i16* %94, i16** %4, align 8
  br label %152

95:                                               ; preds = %58, %105
  %96 = phi i1 [ %110, %105 ], [ false, %58 ]
  %97 = phi i8 [ %109, %105 ], [ 122, %58 ]
  %98 = phi i16* [ %106, %105 ], [ %55, %58 ]
  %99 = phi i8* [ %107, %105 ], [ getelementptr inbounds ([11 x i8], [11 x i8]* @.str.3, i64 0, i64 0), %58 ]
  br i1 %96, label %112, label %100

100:                                              ; preds = %95
  %101 = load i16, i16* %98, align 2
  %102 = zext i16 %101 to i32
  %103 = sext i8 %97 to i32
  %104 = icmp eq i32 %102, %103
  br i1 %104, label %105, label %252

105:                                              ; preds = %100
  %106 = getelementptr inbounds i16, i16* %98, i64 1
  %107 = getelementptr inbounds i8, i8* %99, i64 1
  %108 = icmp ult i16* %106, %2
  %109 = load i8, i8* %107, align 1
  %110 = icmp eq i8 %109, 0
  br i1 %108, label %95, label %111

111:                                              ; preds = %105
  br i1 %110, label %112, label %252

112:                                              ; preds = %95, %111
  %113 = phi i16* [ %106, %111 ], [ %98, %95 ]
  store i16* %113, i16** %4, align 8
  br label %152

114:                                              ; preds = %58, %124
  %115 = phi i1 [ %129, %124 ], [ false, %58 ]
  %116 = phi i8 [ %128, %124 ], [ 112, %58 ]
  %117 = phi i16* [ %125, %124 ], [ %55, %58 ]
  %118 = phi i8* [ %126, %124 ], [ getelementptr inbounds ([20 x i8], [20 x i8]* @.str.4, i64 0, i64 0), %58 ]
  br i1 %115, label %131, label %119

119:                                              ; preds = %114
  %120 = load i16, i16* %117, align 2
  %121 = zext i16 %120 to i32
  %122 = sext i8 %116 to i32
  %123 = icmp eq i32 %121, %122
  br i1 %123, label %124, label %252

124:                                              ; preds = %119
  %125 = getelementptr inbounds i16, i16* %117, i64 1
  %126 = getelementptr inbounds i8, i8* %118, i64 1
  %127 = icmp ult i16* %125, %2
  %128 = load i8, i8* %126, align 1
  %129 = icmp eq i8 %128, 0
  br i1 %127, label %114, label %130

130:                                              ; preds = %124
  br i1 %129, label %131, label %252

131:                                              ; preds = %114, %130
  %132 = phi i16* [ %125, %130 ], [ %117, %114 ]
  store i16* %132, i16** %4, align 8
  br label %152

133:                                              ; preds = %58, %143
  %134 = phi i1 [ %148, %143 ], [ false, %58 ]
  %135 = phi i8 [ %147, %143 ], [ 116, %58 ]
  %136 = phi i16* [ %144, %143 ], [ %55, %58 ]
  %137 = phi i8* [ %145, %143 ], [ getelementptr inbounds ([10 x i8], [10 x i8]* @.str.5, i64 0, i64 0), %58 ]
  br i1 %134, label %150, label %138

138:                                              ; preds = %133
  %139 = load i16, i16* %136, align 2
  %140 = zext i16 %139 to i32
  %141 = sext i8 %135 to i32
  %142 = icmp eq i32 %140, %141
  br i1 %142, label %143, label %252

143:                                              ; preds = %138
  %144 = getelementptr inbounds i16, i16* %136, i64 1
  %145 = getelementptr inbounds i8, i8* %137, i64 1
  %146 = icmp ult i16* %144, %2
  %147 = load i8, i8* %145, align 1
  %148 = icmp eq i8 %147, 0
  br i1 %146, label %133, label %149

149:                                              ; preds = %143
  br i1 %148, label %150, label %252

150:                                              ; preds = %133, %149
  %151 = phi i16* [ %144, %149 ], [ %136, %133 ]
  store i16* %151, i16** %4, align 8
  br label %152

152:                                              ; preds = %150, %131, %112, %93, %74
  %153 = phi i16* [ %75, %74 ], [ %94, %93 ], [ %113, %112 ], [ %132, %131 ], [ %151, %150 ]
  %154 = phi i32 [ 3, %74 ], [ 4, %93 ], [ 5, %112 ], [ 1, %131 ], [ 2, %150 ]
  %155 = icmp ult i16* %153, %2
  br i1 %155, label %156, label %252

156:                                              ; preds = %152
  %157 = load i16, i16* %153, align 2
  %158 = icmp eq i16 %157, 40
  br i1 %158, label %159, label %252

159:                                              ; preds = %156
  %160 = getelementptr inbounds i16, i16* %153, i64 1
  store i16* %160, i16** %4, align 8
  switch i32 %154, label %233 [
    i32 3, label %161
    i32 4, label %187
    i32 5, label %196
    i32 1, label %199
    i32 2, label %216
  ]

161:                                              ; preds = %159
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #6
  store float 0.000000e+00, float* %5, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38) #6
  store float 0.000000e+00, float* %6, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39) #6
  store float 0.000000e+00, float* %7, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #6
  store float 0.000000e+00, float* %8, align 4
  %162 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %5, i32 3) #6
  br i1 %162, label %163, label %186

163:                                              ; preds = %161
  %164 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %6, i32 3) #6
  br i1 %164, label %165, label %186

165:                                              ; preds = %163
  %166 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %7, i32 3) #6
  br i1 %166, label %167, label %186

167:                                              ; preds = %165
  %168 = call zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** nonnull dereferenceable(8) %4, i16* %2, float* nonnull dereferenceable(4) %8, i32 0) #6
  br i1 %168, label %169, label %186

169:                                              ; preds = %167
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #6
  %170 = load i32, i32* %42, align 4
  %171 = load i32, i32* %43, align 4
  %172 = load i32, i32* %44, align 4
  %173 = load i32, i32* %45, align 4
  store i32 %170, i32* %46, align 4
  store i32 %171, i32* %48, align 4
  store i32 %172, i32* %50, align 4
  store i32 %173, i32* %52, align 4
  %174 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #6
  %175 = bitcast i8* %174 to %"class.blink::SVGRect"*
  call void @_ZN5blink7SVGRectC1ERKNS_9FloatRectE(%"class.blink::SVGRect"* %175, %"class.blink::FloatRect"* nonnull dereferenceable(16) %9) #6
  %176 = getelementptr inbounds i8, i8* %174, i64 -4
  %177 = bitcast i8* %176 to i16*
  %178 = load atomic i16, i16* %177 monotonic, align 2
  %179 = or i16 %178, 1
  store atomic i16 %179, i16* %177 release, align 2
  %180 = ptrtoint i8* %174 to i64
  store atomic i64 %180, i64* %53 monotonic, align 8
  %181 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %185, label %183

183:                                              ; preds = %169
  %184 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %174) #6
  br label %185

185:                                              ; preds = %169, %183
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  br label %233

186:                                              ; preds = %161, %163, %165, %167
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38) #6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #6
  br label %252

187:                                              ; preds = %159
  %188 = icmp ult i16* %160, %2
  br i1 %188, label %189, label %233

189:                                              ; preds = %187, %193
  %190 = phi i16* [ %194, %193 ], [ %160, %187 ]
  %191 = load i16, i16* %190, align 2
  %192 = icmp eq i16 %191, 41
  br i1 %192, label %233, label %193

193:                                              ; preds = %189
  %194 = getelementptr inbounds i16, i16* %190, i64 1
  store i16* %194, i16** %4, align 8
  %195 = icmp ult i16* %194, %2
  br i1 %195, label %189, label %233

196:                                              ; preds = %159
  %197 = call i32 @_ZN5blink13SVGZoomAndPan5ParseERPKDsS2_(i16** nonnull dereferenceable(8) %4, i16* %2) #6
  store i32 %197, i32* %36, align 8
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %252, label %233

199:                                              ; preds = %159
  %200 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #6
  %201 = bitcast i8* %200 to %"class.blink::SVGPreserveAspectRatio"*
  call void @_ZN5blink22SVGPreserveAspectRatioC1Ev(%"class.blink::SVGPreserveAspectRatio"* %201) #6
  %202 = getelementptr inbounds i8, i8* %200, i64 -4
  %203 = bitcast i8* %202 to i16*
  %204 = load atomic i16, i16* %203 monotonic, align 2
  %205 = or i16 %204, 1
  store atomic i16 %205, i16* %203 release, align 2
  %206 = ptrtoint i8* %200 to i64
  store atomic i64 %206, i64* %34 monotonic, align 8
  %207 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %208 = icmp eq i32 %207, 0
  %209 = bitcast i8* %200 to %"class.blink::SVGPreserveAspectRatio"*
  br i1 %208, label %213, label %210

210:                                              ; preds = %199
  %211 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %200) #6
  %212 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %35, align 8
  br label %213

213:                                              ; preds = %199, %210
  %214 = phi %"class.blink::SVGPreserveAspectRatio"* [ %209, %199 ], [ %212, %210 ]
  %215 = call zeroext i1 @_ZN5blink22SVGPreserveAspectRatio5ParseERPKDsS2_b(%"class.blink::SVGPreserveAspectRatio"* %214, i16** nonnull dereferenceable(8) %4, i16* %2, i1 zeroext false) #6
  br i1 %215, label %233, label %252

216:                                              ; preds = %159
  %217 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #6
  %218 = bitcast i8* %217 to %"class.blink::SVGTransformList"*
  call void @_ZN5blink16SVGTransformListC1Ev(%"class.blink::SVGTransformList"* %218) #6
  %219 = getelementptr inbounds i8, i8* %217, i64 -4
  %220 = bitcast i8* %219 to i16*
  %221 = load atomic i16, i16* %220 monotonic, align 2
  %222 = or i16 %221, 1
  store atomic i16 %222, i16* %220 release, align 2
  %223 = ptrtoint i8* %217 to i64
  store atomic i64 %223, i64* %31 monotonic, align 8
  %224 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %225 = icmp eq i32 %224, 0
  %226 = bitcast i8* %217 to %"class.blink::SVGTransformList"*
  br i1 %225, label %230, label %227

227:                                              ; preds = %216
  %228 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %217) #6
  %229 = load %"class.blink::SVGTransformList"*, %"class.blink::SVGTransformList"** %32, align 8
  br label %230

230:                                              ; preds = %216, %227
  %231 = phi %"class.blink::SVGTransformList"* [ %226, %216 ], [ %229, %227 ]
  %232 = call zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKDsS2_(%"class.blink::SVGTransformList"* %231, i16** nonnull dereferenceable(8) %4, i16* %2) #6
  br label %233

233:                                              ; preds = %193, %189, %187, %185, %159, %213, %196, %230
  %234 = load i16*, i16** %4, align 8
  %235 = icmp ult i16* %234, %2
  br i1 %235, label %236, label %252

236:                                              ; preds = %233
  %237 = load i16, i16* %234, align 2
  %238 = icmp eq i16 %237, 41
  br i1 %238, label %239, label %252

239:                                              ; preds = %236
  %240 = getelementptr inbounds i16, i16* %234, i64 1
  store i16* %240, i16** %4, align 8
  %241 = icmp ult i16* %240, %2
  br i1 %241, label %242, label %247

242:                                              ; preds = %239
  %243 = load i16, i16* %240, align 2
  %244 = icmp eq i16 %243, 59
  br i1 %244, label %245, label %247

245:                                              ; preds = %242
  %246 = getelementptr inbounds i16, i16* %234, i64 2
  store i16* %246, i16** %4, align 8
  br label %247

247:                                              ; preds = %239, %242, %245
  %248 = phi i16* [ %240, %239 ], [ %240, %242 ], [ %246, %245 ]
  %249 = icmp ult i16* %248, %2
  br i1 %249, label %54, label %252

250:                                              ; preds = %54
  %251 = getelementptr inbounds i16, i16* %55, i64 1
  store i16* %251, i16** %4, align 8
  br label %252

252:                                              ; preds = %11, %290, %296, %302, %308, %314, %320, %213, %196, %247, %58, %92, %111, %130, %149, %156, %152, %236, %233, %138, %119, %100, %81, %26, %20, %23, %3, %17, %250, %186
  %253 = phi i1 [ false, %186 ], [ true, %250 ], [ false, %17 ], [ false, %3 ], [ false, %23 ], [ false, %20 ], [ false, %26 ], [ false, %81 ], [ false, %100 ], [ false, %119 ], [ false, %138 ], [ false, %233 ], [ false, %236 ], [ false, %152 ], [ false, %156 ], [ false, %149 ], [ false, %130 ], [ false, %111 ], [ false, %92 ], [ false, %58 ], [ false, %247 ], [ false, %196 ], [ false, %213 ], [ false, %320 ], [ false, %314 ], [ false, %308 ], [ false, %302 ], [ false, %296 ], [ false, %290 ], [ false, %11 ]
  ret i1 %253

254:                                              ; preds = %67
  %255 = load i16, i16* %68, align 2
  %256 = icmp eq i16 %255, 105
  br i1 %256, label %257, label %73

257:                                              ; preds = %254
  %258 = getelementptr inbounds i16, i16* %55, i64 2
  %259 = icmp ult i16* %258, %2
  br i1 %259, label %260, label %70

260:                                              ; preds = %257
  %261 = load i16, i16* %258, align 2
  %262 = icmp eq i16 %261, 101
  br i1 %262, label %263, label %73

263:                                              ; preds = %260
  %264 = getelementptr inbounds i16, i16* %55, i64 3
  %265 = icmp ult i16* %264, %2
  br i1 %265, label %266, label %70

266:                                              ; preds = %263
  %267 = load i16, i16* %264, align 2
  %268 = icmp eq i16 %267, 119
  br i1 %268, label %269, label %73

269:                                              ; preds = %266
  %270 = getelementptr inbounds i16, i16* %55, i64 4
  %271 = icmp ult i16* %270, %2
  br i1 %271, label %272, label %70

272:                                              ; preds = %269
  %273 = load i16, i16* %270, align 2
  %274 = icmp eq i16 %273, 66
  br i1 %274, label %275, label %73

275:                                              ; preds = %272
  %276 = getelementptr inbounds i16, i16* %55, i64 5
  %277 = icmp ult i16* %276, %2
  br i1 %277, label %278, label %70

278:                                              ; preds = %275
  %279 = load i16, i16* %276, align 2
  %280 = icmp eq i16 %279, 111
  br i1 %280, label %281, label %73

281:                                              ; preds = %278
  %282 = getelementptr inbounds i16, i16* %55, i64 6
  %283 = icmp ult i16* %282, %2
  br i1 %283, label %284, label %70

284:                                              ; preds = %281
  %285 = load i16, i16* %282, align 2
  %286 = icmp eq i16 %285, 120
  br i1 %286, label %287, label %73

287:                                              ; preds = %284
  %288 = getelementptr inbounds i16, i16* %55, i64 7
  %289 = icmp ult i16* %288, %2
  br i1 %289, label %74, label %70

290:                                              ; preds = %14
  %291 = load i16, i16* %15, align 2
  %292 = icmp eq i16 %291, 118
  br i1 %292, label %293, label %252

293:                                              ; preds = %290
  %294 = getelementptr inbounds i16, i16* %1, i64 2
  %295 = icmp ult i16* %294, %2
  br i1 %295, label %296, label %17

296:                                              ; preds = %293
  %297 = load i16, i16* %294, align 2
  %298 = icmp eq i16 %297, 103
  br i1 %298, label %299, label %252

299:                                              ; preds = %296
  %300 = getelementptr inbounds i16, i16* %1, i64 3
  %301 = icmp ult i16* %300, %2
  br i1 %301, label %302, label %17

302:                                              ; preds = %299
  %303 = load i16, i16* %300, align 2
  %304 = icmp eq i16 %303, 86
  br i1 %304, label %305, label %252

305:                                              ; preds = %302
  %306 = getelementptr inbounds i16, i16* %1, i64 4
  %307 = icmp ult i16* %306, %2
  br i1 %307, label %308, label %17

308:                                              ; preds = %305
  %309 = load i16, i16* %306, align 2
  %310 = icmp eq i16 %309, 105
  br i1 %310, label %311, label %252

311:                                              ; preds = %308
  %312 = getelementptr inbounds i16, i16* %1, i64 5
  %313 = icmp ult i16* %312, %2
  br i1 %313, label %314, label %17

314:                                              ; preds = %311
  %315 = load i16, i16* %312, align 2
  %316 = icmp eq i16 %315, 101
  br i1 %316, label %317, label %252

317:                                              ; preds = %314
  %318 = getelementptr inbounds i16, i16* %1, i64 6
  %319 = icmp ult i16* %318, %2
  br i1 %319, label %320, label %17

320:                                              ; preds = %317
  %321 = load i16, i16* %318, align 2
  %322 = icmp eq i16 %321, 119
  br i1 %322, label %323, label %252

323:                                              ; preds = %320
  %324 = getelementptr inbounds i16, i16* %1, i64 7
  %325 = icmp ult i16* %324, %2
  br i1 %325, label %20, label %17
}

declare zeroext i1 @_ZN5blink11ParseNumberERPKDsS1_RfNS_14WhitespaceModeE(i16** dereferenceable(8), i16*, float* dereferenceable(4), i32) local_unnamed_addr #3

declare i32 @_ZN5blink13SVGZoomAndPan5ParseERPKDsS2_(i16** dereferenceable(8), i16*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink22SVGPreserveAspectRatio5ParseERPKDsS2_b(%"class.blink::SVGPreserveAspectRatio"*, i16** dereferenceable(8), i16*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16SVGTransformList5ParseERPKDsS2_(%"class.blink::SVGTransformList"*, i16** dereferenceable(8), i16*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7SVGRectEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16SVGTransformListEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast i8* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #6
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %0, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #6
  br label %18

18:                                               ; preds = %2, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_23SVGListablePropertyBaseEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.9"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.9", %"class.blink::Member.9"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.9"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv) #6
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23SVGListablePropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11SVGViewSpecEEEPhm(i64) local_unnamed_addr #1 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #6
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #6
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #6
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.188"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11SVGViewSpecEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.188"*)) #6
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11SVGViewSpecEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #1 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7SVGRectEE5TraceEPNS_7VisitorEPKv) #6
  br label %12

12:                                               ; preds = %6, %2
  %13 = getelementptr inbounds i8, i8* %1, i64 8
  %14 = bitcast i8* %13 to i64*
  %15 = load atomic i64, i64* %14 monotonic, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %12
  %18 = inttoptr i64 %15 to i8*
  %19 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %20 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %20, i64 5
  %22 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, align 8
  tail call void %22(%"class.blink::Visitor"* %0, i8* nonnull %18, i8* nonnull %18, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22SVGPreserveAspectRatioEE5TraceEPNS_7VisitorEPKv) #6
  br label %23

23:                                               ; preds = %17, %12
  %24 = getelementptr inbounds i8, i8* %1, i64 16
  %25 = bitcast i8* %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %34, label %28

28:                                               ; preds = %23
  %29 = inttoptr i64 %26 to i8*
  %30 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %31, i64 5
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %0, i8* nonnull %29, i8* nonnull %29, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_16SVGTransformListEE5TraceEPNS_7VisitorEPKv) #6
  br label %34

34:                                               ; preds = %23, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11SVGViewSpecEE7GetNameEPKv(i8*) #1 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
