; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/ContextGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/ContextGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.rx::ContextGL" = type <{ %"class.rx::ContextImpl", %"class.std::__1::shared_ptr.643", i32, [4 x i8] }>
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"class.gl::MemoryProgramCache" = type opaque
%"class.std::__1::shared_ptr.643" = type { %"class.rx::RendererGL"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::RendererGL" = type <{ i32 (...)**, %"struct.gl::Version", %"class.std::__1::unique_ptr.644", %"class.rx::StateManagerGL"*, %"class.rx::BlitGL"*, %"class.rx::ClearMultiviewGL"*, i8, i8, [6 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", i32, [4 x i8], %"class.absl::flat_hash_map.687", %"class.std::__1::list", %"class.std::__1::mutex", i8, [7 x i8], %"struct.angle::FeaturesGL", i8, [7 x i8] }>
%"struct.gl::Version" = type { i32, i32 }
%"class.std::__1::unique_ptr.644" = type { %"class.std::__1::__compressed_pair.645" }
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.rx::FunctionsGL"* }
%"class.rx::FunctionsGL" = type { %"class.rx::DispatchTableGL", %"struct.gl::Version", i32, i32, %"class.std::__1::vector.125" }
%"class.rx::DispatchTableGL" = type { i32 (...)**, void (i32, i32)*, void (i32)*, void (float, float, float, float)*, void (double)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32)*, void (i8)*, void (double, double)*, void (i32)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32)*, void (i32, i8*)*, void (i32, double*)*, i32 ()*, void (i32, float*)*, void (i32, i32*)*, i8* (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, float)*, void (i32, i32)*, void (float)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32, i32*)*, i8 (i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (float, float, float, float)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, i8* (i32, i32)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, float)*, void (i32, float*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32)*, void (i32, i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i8, i8, i8, i8)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8* (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8* (i32, i64, i64, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8**, i32*)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i64*)*, void (i32, i32, float*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, i8 (%struct.__GLsync*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (float)*, void (i32, float*)*, void (i32, i32)*, void ()*, void ()*, void (i32, double)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32)*, void (float)*, i32 (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (float, float)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void ()*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, void (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void ()*, void (float, float, float, float, float, float, float, float)*, void (i32)*, void (i32, i8*)*, void ()*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i32, i64)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8*)*, void (i32, i8*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i64, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i64*)*, i8 (i32)*, void (i32, i32, i64*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)* }
%struct.__GLsync = type opaque
%"class.std::__1::vector.125" = type { %"class.std::__1::__vector_base.126" }
%"class.std::__1::__vector_base.126" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.std::__1::basic_string"* }
%"class.rx::StateManagerGL" = type { %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"*, i32, i32, %"class.std::__1::vector.389", i32, %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"*, %"class.angle::PackedEnumMap.665", %"class.angle::PackedEnumMap.667", i64, %"class.angle::PackedEnumMap.676", %"struct.std::__1::array.169", %"class.std::__1::vector.678", i32, %"class.rx::TransformFeedbackGL"*, %"class.angle::PackedEnumMap.685", %"class.angle::PackedEnumMap.685", %"struct.gl::ContextID", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector", i32, i8, %"struct.gl::Rectangle", %"struct.gl::Rectangle", float, float, %"struct.angle::Color", %"class.gl::BlendStateExt", i8, i8, i8, float, i8, i8, %"struct.std::__1::array.384", i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, float, float, i8, float, i8, i32, %"struct.angle::Color", float, i32, i8, i8, i8, i8, i8, i8, i8, i32, i8, i32, %"class.angle::BitSetT.487", i64, %"class.angle::BitSetT.168", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.389" = type { %"class.std::__1::__vector_base.390" }
%"class.std::__1::__vector_base.390" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.392" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.391, i32 }
%union.anon.391 = type { [4 x float] }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"struct.rx::VertexArrayStateGL" = type { i32, %"class.angle::FixedVector.661", %"class.angle::FixedVector.663" }
%"class.angle::FixedVector.661" = type { %"struct.std::__1::array.662", i64 }
%"struct.std::__1::array.662" = type { [16 x %"struct.rx::VertexAttributeGL"] }
%"struct.rx::VertexAttributeGL" = type { i8, %"struct.angle::Format"*, i8*, i32, i32 }
%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.angle::FixedVector.663" = type { %"struct.std::__1::array.664", i64 }
%"struct.std::__1::array.664" = type { [16 x %"struct.rx::VertexBindingGL"] }
%"struct.rx::VertexBindingGL" = type <{ i32, i32, i64, i32, [4 x i8] }>
%"class.angle::PackedEnumMap.665" = type { %"struct.std::__1::array.666" }
%"struct.std::__1::array.666" = type { [13 x i32] }
%"class.angle::PackedEnumMap.667" = type { %"struct.std::__1::array.668" }
%"struct.std::__1::array.668" = type { [13 x %"class.std::__1::vector.669"] }
%"class.std::__1::vector.669" = type { %"class.std::__1::__vector_base.670" }
%"class.std::__1::__vector_base.670" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"class.std::__1::__compressed_pair.671" }
%"struct.rx::StateManagerGL::IndexedBufferBinding" = type <{ i64, i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"* }
%"class.angle::PackedEnumMap.676" = type { %"struct.std::__1::array.677" }
%"struct.std::__1::array.677" = type { [11 x %"struct.std::__1::array.169"] }
%"struct.std::__1::array.169" = type { [96 x i32] }
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"class.std::__1::__compressed_pair.680" }
%"struct.rx::StateManagerGL::ImageUnitBinding" = type { i32, i32, i8, i32, i32, i32 }
%"class.std::__1::__compressed_pair.680" = type { %"struct.std::__1::__compressed_pair_elem.681" }
%"struct.std::__1::__compressed_pair_elem.681" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"* }
%"class.rx::TransformFeedbackGL" = type <{ %"class.rx::TransformFeedbackImpl", %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*, i32, i8, i8, [2 x i8], i32, [4 x i8] }>
%"class.rx::TransformFeedbackImpl" = type { i32 (...)**, %"class.gl::TransformFeedbackState"* }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.451" }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.235", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.201" }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.rx::Serial" = type { i64 }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.123", i32, %"class.std::__1::vector.125", %"class.std::__1::vector.132", %"class.std::__1::vector.139", %"class.gl::Range", %"class.angle::BitSetT.147", %"class.std::__1::vector", %"class.angle::BitSetT.148", i8, i8, i8, i8, %"class.angle::BitSetT", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.angle::PackedEnumMap.123" = type { %"struct.std::__1::array.124" }
%"struct.std::__1::array.124" = type { [6 x %"class.gl::Shader"*] }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.85", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer", %"class.std::__1::unique_ptr.107", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.77", %"class.std::__1::vector.77", %"class.std::__1::vector.70", %"class.std::__1::vector.70", %"class.std::__1::vector.70", i8, [3 x i8], %"class.angle::BitSetT", i32, %struct.Optional, %struct.Optional, %struct.Optional.84, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.79" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.70" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.70" = type { %"class.std::__1::__vector_base.71" }
%"class.std::__1::__vector_base.71" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.72" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector", i8, i8, %"class.std::__1::vector.70", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.72" = type { %"struct.std::__1::__compressed_pair_elem.73" }
%"struct.std::__1::__compressed_pair_elem.73" = type { %"struct.sh::ShaderVariable"* }
%struct.Optional = type { i8, i8 }
%struct.Optional.84 = type { i8, i32 }
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type { i32 (...)**, %"class.gl::ShaderState"* }
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer.91" }
%"class.angle::BindingPointer.91" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.92", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.98" }
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type { i32 (...)** }
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.std::__1::array.32" = type { [3 x i32] }
%"class.angle::PackedEnumMap.98" = type { %"struct.std::__1::array.99" }
%"struct.std::__1::array.99" = type { [6 x %"class.std::__1::vector.100"] }
%"class.std::__1::vector.100" = type { %"class.std::__1::__vector_base.101" }
%"class.std::__1::__vector_base.101" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.102" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.102" = type { %"struct.std::__1::__compressed_pair_elem.103" }
%"struct.std::__1::__compressed_pair_elem.103" = type { %"class.gl::ShCompilerInstance"* }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.std::__1::vector.132" = type { %"class.std::__1::__vector_base.133" }
%"class.std::__1::__vector_base.133" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.134" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.142" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.141" }>
%"class.angle::BitSetT.141" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.angle::BitSetT.147" = type { i8 }
%"class.angle::BitSetT.148" = type { i64 }
%"class.angle::BitSetT" = type { i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.141", %"class.angle::BitSetT.141", [6 x i8], %"class.angle::BitSetT.166", i32, [4 x i8], %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"struct.std::__1::array.169", %"struct.std::__1::array.170", %"class.angle::BitSetArray", %"struct.std::__1::array.171", %"struct.std::__1::array.172", %"class.angle::BitSetArray", %"struct.std::__1::array.172", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.132", %"class.std::__1::vector.132", i8, [7 x i8], %"class.std::__1::vector.70", %"class.std::__1::vector.173", %"class.std::__1::vector.180", i32, [4 x i8], %"class.std::__1::vector.187", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.194", %"class.angle::BitSetT.201", %"class.std::__1::vector.202", %"class.gl::Range", %"class.std::__1::vector.194", %"class.std::__1::vector.194", %"class.gl::Range", %"class.std::__1::vector.209", %"class.std::__1::vector.216", %"class.std::__1::vector.216", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap.223", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.225, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.160" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.170" = type { [96 x i8] }
%"struct.std::__1::array.171" = type { [96 x i8] }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.167" }
%"struct.std::__1::array.167" = type { [2 x %"class.angle::BitSetT.168"] }
%"struct.std::__1::array.172" = type { [96 x %"class.angle::BitSetT.141"] }
%"class.std::__1::vector.173" = type { %"class.std::__1::__vector_base.174" }
%"class.std::__1::__vector_base.174" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.175" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.180" = type { %"class.std::__1::__vector_base.181" }
%"class.std::__1::__vector_base.181" = type { i32*, i32*, %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { i32* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.189" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.202" = type { %"class.std::__1::__vector_base.203" }
%"class.std::__1::__vector_base.203" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.204" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.209" = type { %"class.std::__1::__vector_base.210" }
%"class.std::__1::__vector_base.210" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.211" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.211" = type { %"struct.std::__1::__compressed_pair_elem.212" }
%"struct.std::__1::__compressed_pair_elem.212" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.218" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.223" = type { %"struct.std::__1::array.224" }
%"struct.std::__1::array.224" = type { [6 x %"class.std::__1::vector.70"] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.29" }
%"struct.std::__1::array.29" = type { [6 x i32] }
%struct.Optional.225 = type { i8, i8 }
%"class.rx::ProgramImpl" = type { i32 (...)**, %"class.gl::ProgramState"* }
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.226" }
%"class.absl::flat_hash_map.226" = type { %"class.absl::container_internal::raw_hash_map.227" }
%"class.absl::container_internal::raw_hash_map.227" = type { %"class.absl::container_internal::raw_hash_set.228" }
%"class.absl::container_internal::raw_hash_set.228" = type { i8*, %"union.absl::container_internal::map_slot_type.229"*, i64, i64, %"class.absl::container_internal::CompressedTuple.230" }
%"union.absl::container_internal::map_slot_type.229" = type opaque
%"class.absl::container_internal::CompressedTuple.230" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.231" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.149" }
%"class.absl::flat_hash_map.149" = type { %"class.absl::container_internal::raw_hash_map.150" }
%"class.absl::container_internal::raw_hash_map.150" = type { %"class.absl::container_internal::raw_hash_set.151" }
%"class.absl::container_internal::raw_hash_set.151" = type { i8*, %"union.absl::container_internal::map_slot_type.152"*, i64, i64, %"class.absl::container_internal::CompressedTuple.153" }
%"union.absl::container_internal::map_slot_type.152" = type opaque
%"class.absl::container_internal::CompressedTuple.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.154" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.235" = type { %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.69", %"class.gl::ResourceMap.122" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector", %"class.std::__1::vector.45", %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::vector.45" = type { %"class.std::__1::__vector_base.46" }
%"class.std::__1::__vector_base.46" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.47" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.gl::ResourceMap.69" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.113" }
%"class.absl::flat_hash_map.113" = type { %"class.absl::container_internal::raw_hash_map.114" }
%"class.absl::container_internal::raw_hash_map.114" = type { %"class.absl::container_internal::raw_hash_set.115" }
%"class.absl::container_internal::raw_hash_set.115" = type { i8*, %"union.absl::container_internal::map_slot_type.116"*, i64, i64, %"class.absl::container_internal::CompressedTuple.117" }
%"union.absl::container_internal::map_slot_type.116" = type opaque
%"class.absl::container_internal::CompressedTuple.117" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.118" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.122" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.241" }
%"class.absl::flat_hash_map.241" = type { %"class.absl::container_internal::raw_hash_map.242" }
%"class.absl::container_internal::raw_hash_map.242" = type { %"class.absl::container_internal::raw_hash_set.243" }
%"class.absl::container_internal::raw_hash_set.243" = type { i8*, %"union.absl::container_internal::map_slot_type.244"*, i64, i64, %"class.absl::container_internal::CompressedTuple.245" }
%"union.absl::container_internal::map_slot_type.244" = type { %"struct.std::__1::pair.736" }
%"struct.std::__1::pair.736" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.245" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.246" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.angle::BitSetT.201" = type { i64 }
%"class.std::__1::vector.451" = type { %"class.std::__1::__vector_base.452" }
%"class.std::__1::__vector_base.452" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.453" }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer.264", i64, i64 }
%"class.gl::BindingPointer.264" = type { %"class.angle::BindingPointer.265" }
%"class.angle::BindingPointer.265" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base.53", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base.53" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"struct.gl::BufferID" = type { i32 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.54" }
%"class.std::__1::__tree.54" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.55", %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::PackedEnumMap.685" = type { %"struct.std::__1::array.686" }
%"struct.std::__1::array.686" = type { [7 x %"class.rx::QueryGL"*] }
%"class.rx::QueryGL" = type { %"class.rx::QueryImpl.base", [7 x i8] }
%"class.rx::QueryImpl.base" = type <{ i32 (...)**, i8 }>
%"struct.gl::ContextID" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { i32* }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i64 }
%"struct.std::__1::array.384" = type { [2 x i32] }
%"struct.angle::Color" = type { float, float, float, float }
%"class.angle::BitSetT.487" = type { i32 }
%"class.angle::BitSetT.168" = type { i64 }
%"class.angle::BitSetT.166" = type { i64 }
%"class.rx::BlitGL" = type opaque
%"class.rx::ClearMultiviewGL" = type opaque
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.30", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.32", %"struct.std::__1::array.32", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.28", i32 }
%"struct.std::__1::array.28" = type { [2 x i32] }
%"class.angle::PackedEnumMap.30" = type { %"struct.std::__1::array.31" }
%"struct.std::__1::array.31" = type { [6 x i64] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.33" }
%"class.angle::PackedEnumMap.33" = type { %"struct.std::__1::array.34" }
%"struct.std::__1::array.34" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.35" }
%"class.std::__1::set.35" = type { %"class.std::__1::__tree.36" }
%"class.std::__1::__tree.36" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.37", %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.absl::flat_hash_map.687" = type { %"class.absl::container_internal::raw_hash_map.688" }
%"class.absl::container_internal::raw_hash_map.688" = type { %"class.absl::container_internal::raw_hash_set.689" }
%"class.absl::container_internal::raw_hash_set.689" = type { i8*, %"union.absl::container_internal::map_slot_type.690"*, i64, i64, %"class.absl::container_internal::CompressedTuple.691" }
%"union.absl::container_internal::map_slot_type.690" = type opaque
%"class.absl::container_internal::CompressedTuple.691" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.692" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.692" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.702" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.angle::FeaturesGL" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.650" }
%"class.std::__1::map.650" = type { %"class.std::__1::__tree.651" }
%"class.std::__1::__tree.651" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.652", %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.384", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.385", %"class.gl::Program"*, %"class.gl::BindingPointer.387", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.389", %"class.gl::VertexArray"*, %"class.angle::BitSetT.148", i64, %"class.angle::PackedEnumMap.417", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.325", %"class.angle::BitSetArray", %"class.std::__1::vector.429", %"class.std::__1::vector.438", %"class.angle::PackedEnumMap.445", %"class.angle::PackedEnumMap.449", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.std::__1::vector.451", %"class.angle::BitSetArray.458", %"class.angle::BitSetT.459", %"class.angle::BitSetT.168", %"class.gl::BindingPointer.460", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.487", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.168", %"class.angle::BitSetT.546", [4 x i8], %"class.angle::BitSetT.323", %"class.angle::BitSetT.166", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.147", %"class.angle::BitSetT.147", i8, [5 x i8] }>
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.250" }
%"class.gl::TypedResourceManager.250" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.251" }
%"class.gl::ResourceMap.251" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.270" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.253", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.266", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.268", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.253" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.4", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.4" = type { i32 (...)**, i64 }
%"class.egl::LabeledObject" = type { i32 (...)** }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.5", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.257", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.254, i8, [3 x i8] }>
%union.anon.254 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.257" = type { %"class.std::__1::__vector_base.258" }
%"class.std::__1::__vector_base.258" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.259" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.gl::ImageDesc"* }
%"class.angle::BitSetT.266" = type { i64 }
%"class.rx::TextureImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::TextureState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.egl::Surface" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.267", i32, i32 }
%"class.egl::Display" = type opaque
%"class.rx::StreamProducerImpl" = type opaque
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.547", [4 x i8], %"class.std::__1::unique_ptr.548", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.554", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.586", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.596", i8*, %"class.std::__1::vector.596", %"class.std::__1::unique_ptr.603", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.323", %"class.gl::StateCache", %"class.angle::BitSetT.168", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::BitSetT.168", %"class.angle::BitSetT.323", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %"class.std::__1::vector.325", %struct.Optional.617, %struct.Optional.617, %"class.std::__1::shared_ptr.618", %"class.std::__1::unique_ptr.619", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.35" }
%"class.angle::BitSetT.547" = type { i32 }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.rx::ContextImpl"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.554" = type { %"struct.std::__1::array.555" }
%"struct.std::__1::array.555" = type { [11 x %"class.gl::BindingPointer.421"] }
%"class.gl::BindingPointer.421" = type { %"class.angle::BindingPointer.422" }
%"class.angle::BindingPointer.422" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.557" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.567" }
%"class.gl::Query" = type opaque
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.586" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.587" }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.463", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.463" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.absl::flat_hash_map.587" = type { %"class.absl::container_internal::raw_hash_map.588" }
%"class.absl::container_internal::raw_hash_map.588" = type { %"class.absl::container_internal::raw_hash_set.589" }
%"class.absl::container_internal::raw_hash_set.589" = type { i8*, %"union.absl::container_internal::map_slot_type.590"*, i64, i64, %"class.absl::container_internal::CompressedTuple.591" }
%"union.absl::container_internal::map_slot_type.590" = type opaque
%"class.absl::container_internal::CompressedTuple.591" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.592" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::vector.596" = type { %"class.std::__1::__vector_base.597" }
%"class.std::__1::__vector_base.597" = type { i8**, i8**, %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.599" }
%"struct.std::__1::__compressed_pair_elem.599" = type { i8** }
%"class.std::__1::unique_ptr.603" = type { %"class.std::__1::__compressed_pair.604" }
%"class.std::__1::__compressed_pair.604" = type { %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type { i8, %"class.gl::ShaderProgramManager"*, %"struct.gl::GLES1Renderer::GLES1UniformBuffers", %"struct.gl::GLES1Renderer::GLES1ProgramState", i8, [4 x float], [2 x float] }
%"struct.gl::GLES1Renderer::GLES1UniformBuffers" = type { %"struct.std::__1::array.625", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.626", %"struct.std::__1::array.627", %"struct.std::__1::array.628", %"struct.std::__1::array.628", %"struct.std::__1::array.626", %"struct.std::__1::array.629", %"struct.std::__1::array.630", %"struct.std::__1::array.630", %"struct.std::__1::array.630", %"struct.std::__1::array.630", %"struct.std::__1::array.631", %"struct.std::__1::array.632", %"struct.std::__1::array.632", %"struct.std::__1::array.632", %"struct.std::__1::array.632", %"struct.std::__1::array.632", %"struct.std::__1::array.29", %"struct.std::__1::array.633", %"struct.std::__1::array.627" }
%"struct.std::__1::array.625" = type { [4 x [16 x float]] }
%"struct.std::__1::array.628" = type { [4 x float] }
%"struct.std::__1::array.626" = type { [4 x i32] }
%"struct.std::__1::array.629" = type { [8 x i32] }
%"struct.std::__1::array.630" = type { [8 x [4 x float]] }
%"struct.std::__1::array.631" = type { [8 x [3 x float]] }
%"struct.std::__1::array.632" = type { [8 x float] }
%"struct.std::__1::array.633" = type { [6 x [4 x float]] }
%"struct.std::__1::array.627" = type { [4 x [4 x float]] }
%"struct.gl::GLES1Renderer::GLES1ProgramState" = type { %"struct.gl::ShaderProgramID", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.std::__1::array.634", %"struct.std::__1::array.634", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation", %"struct.gl::UniformLocation" }
%"struct.std::__1::array.634" = type { [4 x %"struct.gl::UniformLocation"] }
%"struct.gl::UniformLocation" = type { i32 }
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.168", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.609", %"class.angle::PackedEnumMap.611", %"class.angle::PackedEnumMap.613", %"class.angle::PackedEnumMap.615", %"class.angle::PackedEnumMap.615", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.609" = type { %"struct.std::__1::array.610" }
%"struct.std::__1::array.610" = type { [16 x i8] }
%"class.angle::PackedEnumMap.611" = type { %"struct.std::__1::array.612" }
%"struct.std::__1::array.612" = type { [12 x i8] }
%"class.angle::PackedEnumMap.613" = type { %"struct.std::__1::array.614" }
%"struct.std::__1::array.614" = type { [4 x i8] }
%"class.angle::PackedEnumMap.615" = type { %"struct.std::__1::array.616" }
%"struct.std::__1::array.616" = type { [19 x i32] }
%struct.Optional.617 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.618" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.619" = type { %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.621" }
%"struct.std::__1::__compressed_pair_elem.621" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"struct.std::__1::array.267" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.268" = type { %"struct.std::__1::array.269", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.269" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.270" = type { %"class.absl::container_internal::raw_hash_map.271" }
%"class.absl::container_internal::raw_hash_map.271" = type { %"class.absl::container_internal::raw_hash_set.272" }
%"class.absl::container_internal::raw_hash_set.272" = type { i8*, %"union.absl::container_internal::map_slot_type.273"*, i64, i64, %"class.absl::container_internal::CompressedTuple.274" }
%"union.absl::container_internal::map_slot_type.273" = type { %"struct.std::__1::pair.738" }
%"struct.std::__1::pair.738" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.274" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.275" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.279" }
%"class.gl::TypedResourceManager.279" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.280" }
%"class.gl::ResourceMap.280" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.281" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.absl::flat_hash_map.281" = type { %"class.absl::container_internal::raw_hash_map.282" }
%"class.absl::container_internal::raw_hash_map.282" = type { %"class.absl::container_internal::raw_hash_set.283" }
%"class.absl::container_internal::raw_hash_set.283" = type { i8*, %"union.absl::container_internal::map_slot_type.284"*, i64, i64, %"class.absl::container_internal::CompressedTuple.285" }
%"union.absl::container_internal::map_slot_type.284" = type { %"struct.std::__1::pair.740" }
%"struct.std::__1::pair.740" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.285" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.286" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.290" }
%"class.gl::TypedResourceManager.290" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.291" }
%"class.gl::ResourceMap.291" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.294" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.293", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.293" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type { i32 (...)**, %"class.gl::SamplerState"* }
%"class.absl::flat_hash_map.294" = type { %"class.absl::container_internal::raw_hash_map.295" }
%"class.absl::container_internal::raw_hash_map.295" = type { %"class.absl::container_internal::raw_hash_set.296" }
%"class.absl::container_internal::raw_hash_set.296" = type { i8*, %"union.absl::container_internal::map_slot_type.297"*, i64, i64, %"class.absl::container_internal::CompressedTuple.298" }
%"union.absl::container_internal::map_slot_type.297" = type { %"struct.std::__1::pair.742" }
%"struct.std::__1::pair.742" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.298" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.299" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.303" }
%"class.gl::TypedResourceManager.303" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.304" }
%"class.gl::ResourceMap.304" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.305" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.305" = type { %"class.absl::container_internal::raw_hash_map.306" }
%"class.absl::container_internal::raw_hash_map.306" = type { %"class.absl::container_internal::raw_hash_set.307" }
%"class.absl::container_internal::raw_hash_set.307" = type { i8*, %"union.absl::container_internal::map_slot_type.308"*, i64, i64, %"class.absl::container_internal::CompressedTuple.309" }
%"union.absl::container_internal::map_slot_type.308" = type opaque
%"class.absl::container_internal::CompressedTuple.309" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.310" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.314" }
%"class.gl::TypedResourceManager.314" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.315" }
%"class.gl::ResourceMap.315" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.334" }
%"class.absl::flat_hash_map.334" = type { %"class.absl::container_internal::raw_hash_map.335" }
%"class.absl::container_internal::raw_hash_map.335" = type { %"class.absl::container_internal::raw_hash_set.336" }
%"class.absl::container_internal::raw_hash_set.336" = type { i8*, %"union.absl::container_internal::map_slot_type.337"*, i64, i64, %"class.absl::container_internal::CompressedTuple.338" }
%"union.absl::container_internal::map_slot_type.337" = type { %"struct.std::__1::pair.744" }
%"struct.std::__1::pair.744" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.338" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.339" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.343" }
%"class.gl::TypedResourceManager.343" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.344" }
%"class.gl::ResourceMap.344" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.355" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.346", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.347", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.325", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.346" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.std::__1::unique_ptr.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.349" }
%"struct.std::__1::__compressed_pair_elem.349" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type { i32 (...)**, %"class.gl::ProgramPipelineState"* }
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.353", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.353" = type { %"struct.std::__1::array.354" }
%"struct.std::__1::array.354" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.355" = type { %"class.absl::container_internal::raw_hash_map.356" }
%"class.absl::container_internal::raw_hash_map.356" = type { %"class.absl::container_internal::raw_hash_set.357" }
%"class.absl::container_internal::raw_hash_set.357" = type { i8*, %"union.absl::container_internal::map_slot_type.358"*, i64, i64, %"class.absl::container_internal::CompressedTuple.359" }
%"union.absl::container_internal::map_slot_type.358" = type { %"struct.std::__1::pair.746" }
%"struct.std::__1::pair.746" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.359" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.360" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.364" }
%"class.gl::ResourceMap.364" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.365" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.365" = type { %"class.absl::container_internal::raw_hash_map.366" }
%"class.absl::container_internal::raw_hash_map.366" = type { %"class.absl::container_internal::raw_hash_set.367" }
%"class.absl::container_internal::raw_hash_set.367" = type { i8*, %"union.absl::container_internal::map_slot_type.368"*, i64, i64, %"class.absl::container_internal::CompressedTuple.369" }
%"union.absl::container_internal::map_slot_type.368" = type opaque
%"class.absl::container_internal::CompressedTuple.369" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.370" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.374" }
%"class.gl::ResourceMap.374" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.375" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.375" = type { %"class.absl::container_internal::raw_hash_map.376" }
%"class.absl::container_internal::raw_hash_map.376" = type { %"class.absl::container_internal::raw_hash_set.377" }
%"class.absl::container_internal::raw_hash_set.377" = type { i8*, %"union.absl::container_internal::map_slot_type.378"*, i64, i64, %"class.absl::container_internal::CompressedTuple.379" }
%"union.absl::container_internal::map_slot_type.378" = type opaque
%"class.absl::container_internal::CompressedTuple.379" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.380" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.324, %"class.std::__1::vector.325", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.332", %"class.angle::BitSetT.147", %struct.Optional.333 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.316", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.147", %"class.std::__1::vector", i32, %"class.angle::BitSetT.147", %"class.angle::BitSetT.148", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.323", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.316" = type { %"class.std::__1::__vector_base.317" }
%"class.std::__1::__vector_base.317" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type { i32 (...)**, %"class.gl::FramebufferState"* }
%struct.Optional.324 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.332" = type { i64 }
%struct.Optional.333 = type { i8, %"class.angle::BitSetT.332" }
%"class.gl::BindingPointer.385" = type { %"class.angle::BindingPointer.386" }
%"class.angle::BindingPointer.386" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::BindingPointer.387" = type { %"class.angle::BindingPointer.388" }
%"class.angle::BindingPointer.388" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.411", %"struct.std::__1::array.412", %"struct.std::__1::array.414", %struct.Optional.416, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.325", %"class.angle::BitSetT.166", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector.397", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.404", %"class.angle::BitSetT.166", %"class.angle::BitSetT.148", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"class.angle::BitSetT.166" }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.399" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer.264", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.404" = type { %"class.std::__1::__vector_base.405" }
%"class.std::__1::__vector_base.405" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.406" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer.264", %"class.angle::BitSetT.166" }
%"class.std::__1::__compressed_pair.406" = type { %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.411" = type { i64 }
%"struct.std::__1::array.412" = type { [16 x %"class.angle::BitSetT.413"] }
%"class.angle::BitSetT.413" = type { i64 }
%"struct.std::__1::array.414" = type { [16 x %"class.angle::BitSetT.415"] }
%"class.angle::BitSetT.415" = type { i64 }
%struct.Optional.416 = type { i8, %"class.angle::BitSetT.411" }
%"class.rx::VertexArrayImpl" = type { i32 (...)**, %"class.gl::VertexArrayState"* }
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.417" = type { %"struct.std::__1::array.418" }
%"struct.std::__1::array.418" = type { [11 x %"class.std::__1::vector.419"] }
%"class.std::__1::vector.419" = type { %"class.std::__1::__vector_base.420" }
%"class.std::__1::__vector_base.420" = type { %"class.gl::BindingPointer.421"*, %"class.gl::BindingPointer.421"*, %"class.std::__1::__compressed_pair.423" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"class.gl::BindingPointer.421"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.428" }
%"struct.std::__1::array.428" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.325" = type { %"class.std::__1::__vector_base.326" }
%"class.std::__1::__vector_base.326" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.327" }
%"class.std::__1::__compressed_pair.327" = type { %"struct.std::__1::__compressed_pair_elem.328" }
%"struct.std::__1::__compressed_pair_elem.328" = type { %"class.angle::ObserverBinding"* }
%"class.std::__1::vector.429" = type { %"class.std::__1::__vector_base.430" }
%"class.std::__1::__vector_base.430" = type { %"class.gl::BindingPointer.431"*, %"class.gl::BindingPointer.431"*, %"class.std::__1::__compressed_pair.433" }
%"class.gl::BindingPointer.431" = type { %"class.angle::BindingPointer.432" }
%"class.angle::BindingPointer.432" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.433" = type { %"struct.std::__1::__compressed_pair_elem.434" }
%"struct.std::__1::__compressed_pair_elem.434" = type { %"class.gl::BindingPointer.431"* }
%"class.std::__1::vector.438" = type { %"class.std::__1::__vector_base.439" }
%"class.std::__1::__vector_base.439" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.440" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.421", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.445" = type { %"struct.std::__1::array.446" }
%"struct.std::__1::array.446" = type { [7 x %"class.gl::BindingPointer.447"] }
%"class.gl::BindingPointer.447" = type { %"class.angle::BindingPointer.448" }
%"class.angle::BindingPointer.448" = type { i32 (...)**, %"class.gl::Query"* }
%"class.angle::PackedEnumMap.449" = type { %"struct.std::__1::array.450" }
%"struct.std::__1::array.450" = type { [13 x %"class.gl::BindingPointer.264"] }
%"class.angle::BitSetArray.458" = type { %"struct.std::__1::array.167" }
%"class.angle::BitSetT.459" = type { i64 }
%"class.gl::BindingPointer.460" = type { %"class.angle::BindingPointer.461" }
%"class.angle::BindingPointer.461" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.473" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.469" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.464" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.464" = type { %"struct.std::__1::__compressed_pair_elem.465" }
%"struct.std::__1::__compressed_pair_elem.465" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector.473" = type { %"class.std::__1::__vector_base.474" }
%"class.std::__1::__vector_base.474" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.482" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.475" }
%"class.std::__1::vector.475" = type { %"class.std::__1::__vector_base.476" }
%"class.std::__1::__vector_base.476" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.477" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.477" = type { %"struct.std::__1::__compressed_pair_elem.478" }
%"struct.std::__1::__compressed_pair_elem.478" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"struct.gl::Debug::Group"* }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT.166", %"class.std::__1::vector.488", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.496", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.501", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.516", %"class.std::__1::vector.523", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.530", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.539", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.488" = type { %"class.std::__1::__vector_base.489" }
%"class.std::__1::__vector_base.489" = type { %"class.angle::BitSetT.490"*, %"class.angle::BitSetT.490"*, %"class.std::__1::__compressed_pair.491" }
%"class.angle::BitSetT.490" = type opaque
%"class.std::__1::__compressed_pair.491" = type { %"struct.std::__1::__compressed_pair_elem.492" }
%"struct.std::__1::__compressed_pair_elem.492" = type { %"class.angle::BitSetT.490"* }
%"class.std::__1::vector.496" = type { i64*, i64, %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.501" = type { %"class.std::__1::__vector_base.502" }
%"class.std::__1::__vector_base.502" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.503" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.508", i64 }
%"struct.std::__1::array.508" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.509", i32, i32 }
%"class.std::__1::vector.509" = type { %"class.std::__1::__vector_base.510" }
%"class.std::__1::__vector_base.510" = type { float*, float*, %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.512" = type { float* }
%"class.std::__1::vector.516" = type { %"class.std::__1::__vector_base.517" }
%"class.std::__1::__vector_base.517" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.518" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.523" = type { %"class.std::__1::__vector_base.524" }
%"class.std::__1::__vector_base.524" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.525" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.530" = type { %"class.std::__1::__vector_base.531" }
%"class.std::__1::__vector_base.531" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.534" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.532", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.532" = type { %"class.angle::VectorBase.533" }
%"class.angle::VectorBase.533" = type { [4 x float] }
%"class.std::__1::__compressed_pair.534" = type { %"struct.std::__1::__compressed_pair_elem.535" }
%"struct.std::__1::__compressed_pair_elem.535" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.539" = type { %"class.std::__1::__vector_base.540" }
%"class.std::__1::__vector_base.540" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.541" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.532" }
%"class.std::__1::__compressed_pair.541" = type { %"struct.std::__1::__compressed_pair_elem.542" }
%"struct.std::__1::__compressed_pair_elem.542" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.546" = type { i32 }
%"class.angle::BitSetT.323" = type { i64 }
%"class.rx::OverlayImpl" = type { i32 (...)**, %"class.gl::OverlayState"* }
%"class.gl::OverlayState" = type { i32, %"class.angle::PackedEnumMap.635" }
%"class.angle::PackedEnumMap.635" = type { %"struct.std::__1::array.636" }
%"struct.std::__1::array.636" = type { [10 x %"class.std::__1::unique_ptr.637"] }
%"class.std::__1::unique_ptr.637" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"class.gl::overlay::Widget"* }
%"class.gl::overlay::Widget" = type <{ i32 (...)**, i32, i8, [3 x i8], i32, [4 x i32], [4 x float], [4 x i8] }>
%"class.rx::CompilerGL" = type <{ %"class.rx::CompilerImpl", i32, [4 x i8] }>
%"class.rx::ShaderGL" = type { %"class.rx::ShaderImpl", i32, i32, %"class.std::__1::shared_ptr.643", i32, %"class.std::__1::basic_string" }
%"class.rx::ProgramGL" = type <{ %"class.rx::ProgramImpl", %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"*, %"class.rx::StateManagerGL"*, %"class.std::__1::vector.180", %"class.std::__1::vector", i32, i32, %"class.std::__1::shared_ptr.643", i8, [7 x i8] }>
%"class.rx::FramebufferGL" = type <{ %"class.rx::FramebufferImpl", i32, i8, i8, %"class.angle::BitSetT.147", i8 }>
%"class.rx::TextureGL" = type { %"class.rx::TextureImpl", %"class.std::__1::vector.706", %"class.angle::BitSetT.266", %"class.angle::BitSetT.266", %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32 }
%"class.std::__1::vector.706" = type { %"class.std::__1::__vector_base.707" }
%"class.std::__1::__vector_base.707" = type { %"struct.rx::LevelInfoGL"*, %"struct.rx::LevelInfoGL"*, %"class.std::__1::__compressed_pair.708" }
%"struct.rx::LevelInfoGL" = type <{ i32, i32, i8, [3 x i8], %"struct.rx::LUMAWorkaroundGL", i8, [3 x i8] }>
%"struct.rx::LUMAWorkaroundGL" = type { i8, i32 }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"struct.rx::LevelInfoGL"* }
%"class.rx::RenderbufferGL" = type { %"class.rx::RenderbufferImpl", i32, i32 }
%"class.rx::BufferGL" = type <{ %"class.rx::BufferImpl", i8, [7 x i8], i64, i64, %"class.angle::MemoryBuffer", i64, i32, [4 x i8] }>
%"class.rx::VertexArrayGL" = type { %"class.rx::VertexArrayImpl", i32, i32, %"class.angle::BitSetT.166", i8, %"struct.rx::VertexArrayStateGL"*, %"class.gl::BindingPointer.264", %"struct.std::__1::array.713", i64, i32, i64, i32, %"class.angle::BitSetT.166", %"class.angle::BitSetT.166", %"struct.std::__1::array.714" }
%"struct.std::__1::array.713" = type { [16 x %"class.gl::BindingPointer.264"] }
%"struct.std::__1::array.714" = type { [16 x i32] }
%"class.rx::QueryImpl" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.rx::SyncQueryGL" = type <{ %"class.rx::QueryGL.base", [7 x i8], %"class.rx::FunctionsGL"*, %"class.std::__1::unique_ptr.715", i8, [7 x i8] }>
%"class.rx::QueryGL.base" = type { %"class.rx::QueryImpl.base" }
%"class.std::__1::unique_ptr.715" = type { %"class.std::__1::__compressed_pair.716" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.rx::SyncProviderGL"* }
%"class.rx::SyncProviderGL" = type opaque
%"class.rx::StandardQueryGL" = type { %"class.rx::QueryGL.base", %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*, i32, %"class.std::__1::deque.721", i64 }
%"class.std::__1::deque.721" = type { %"class.std::__1::__deque_base.722" }
%"class.std::__1::__deque_base.722" = type { %"struct.std::__1::__split_buffer.723", i64, %"class.std::__1::__compressed_pair.729" }
%"struct.std::__1::__split_buffer.723" = type { i32**, i32**, i32**, %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { i32** }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.rx::FenceNVImpl" = type { i32 (...)** }
%"class.rx::FenceNVGL" = type { %"class.rx::FenceNVImpl", i32, %"class.rx::FunctionsGL"* }
%"class.rx::FenceNVSyncGL" = type { %"class.rx::FenceNVImpl", %struct.__GLsync*, %"class.rx::FunctionsGL"* }
%"class.rx::SyncImpl" = type { i32 (...)** }
%"class.rx::SyncGL" = type { %"class.rx::SyncImpl", %"class.rx::FunctionsGL"*, %struct.__GLsync* }
%"class.rx::SamplerGL" = type { %"class.rx::SamplerImpl", %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*, %"class.gl::SamplerState", i32 }
%"class.rx::ProgramPipelineGL" = type <{ %"class.rx::ProgramPipelineImpl", %"class.rx::FunctionsGL"*, i32, [4 x i8] }>
%"class.rx::MemoryObjectImpl" = type { i32 (...)** }
%"class.rx::MemoryObjectGL" = type <{ %"class.rx::MemoryObjectImpl", i32, [4 x i8] }>
%"class.rx::SemaphoreImpl" = type { i32 (...)** }
%"class.rx::SemaphoreGL" = type <{ %"class.rx::SemaphoreImpl", i32, [4 x i8] }>
%"class.egl::Error" = type { i32, i32, %"class.std::__1::unique_ptr.730" }
%"class.std::__1::unique_ptr.730" = type { %"class.std::__1::__compressed_pair.731" }
%"class.std::__1::__compressed_pair.731" = type { %"struct.std::__1::__compressed_pair_elem.128" }

$_ZN2rx11OverlayImpl4initEPKN2gl7ContextEPb = comdat any

$_ZN2rx11OverlayImplD2Ev = comdat any

$_ZN2rx11OverlayImplD0Ev = comdat any

$_ZN2rx11OverlayImpl9onDestroyEPKN2gl7ContextE = comdat any

$_ZN2rx11ContextImpl9onDestroyEPKN2gl7ContextE = comdat any

$_ZN2rx11ContextImpl23framebufferFetchBarrierEv = comdat any

$_ZTVN2rx11OverlayImplE = comdat any

@_ZTVN2rx9ContextGLE = hidden unnamed_addr constant { [69 x i8*] } { [69 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGLD2Ev to i8*), i8* bitcast (void (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGLD0Ev to i8*), i8* bitcast (%"class.rx::CompilerImpl"* (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL14createCompilerEv to i8*), i8* bitcast (%"class.rx::ShaderImpl"* (%"class.rx::ContextGL"*, %"class.gl::ShaderState"*)* @_ZN2rx9ContextGL12createShaderERKN2gl11ShaderStateE to i8*), i8* bitcast (%"class.rx::ProgramImpl"* (%"class.rx::ContextGL"*, %"class.gl::ProgramState"*)* @_ZN2rx9ContextGL13createProgramERKN2gl12ProgramStateE to i8*), i8* bitcast (%"class.rx::FramebufferImpl"* (%"class.rx::ContextGL"*, %"class.gl::FramebufferState"*)* @_ZN2rx9ContextGL17createFramebufferERKN2gl16FramebufferStateE to i8*), i8* bitcast (%"class.rx::TextureImpl"* (%"class.rx::ContextGL"*, %"class.gl::TextureState"*)* @_ZN2rx9ContextGL13createTextureERKN2gl12TextureStateE to i8*), i8* bitcast (%"class.rx::RenderbufferImpl"* (%"class.rx::ContextGL"*, %"class.gl::RenderbufferState"*)* @_ZN2rx9ContextGL18createRenderbufferERKN2gl17RenderbufferStateE to i8*), i8* bitcast (%"class.rx::BufferImpl"* (%"class.rx::ContextGL"*, %"class.gl::BufferState"*)* @_ZN2rx9ContextGL12createBufferERKN2gl11BufferStateE to i8*), i8* bitcast (%"class.rx::VertexArrayImpl"* (%"class.rx::ContextGL"*, %"class.gl::VertexArrayState"*)* @_ZN2rx9ContextGL17createVertexArrayERKN2gl16VertexArrayStateE to i8*), i8* bitcast (%"class.rx::QueryImpl"* (%"class.rx::ContextGL"*, i8)* @_ZN2rx9ContextGL11createQueryEN2gl9QueryTypeE to i8*), i8* bitcast (%"class.rx::FenceNVImpl"* (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL13createFenceNVEv to i8*), i8* bitcast (%"class.rx::SyncImpl"* (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL10createSyncEv to i8*), i8* bitcast (%"class.rx::TransformFeedbackImpl"* (%"class.rx::ContextGL"*, %"class.gl::TransformFeedbackState"*)* @_ZN2rx9ContextGL23createTransformFeedbackERKN2gl22TransformFeedbackStateE to i8*), i8* bitcast (%"class.rx::SamplerImpl"* (%"class.rx::ContextGL"*, %"class.gl::SamplerState"*)* @_ZN2rx9ContextGL13createSamplerERKN2gl12SamplerStateE to i8*), i8* bitcast (%"class.rx::ProgramPipelineImpl"* (%"class.rx::ContextGL"*, %"class.gl::ProgramPipelineState"*)* @_ZN2rx9ContextGL21createProgramPipelineERKN2gl20ProgramPipelineStateE to i8*), i8* bitcast (%"class.rx::MemoryObjectImpl"* (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL18createMemoryObjectEv to i8*), i8* bitcast (%"class.rx::SemaphoreImpl"* (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL15createSemaphoreEv to i8*), i8* bitcast (%"class.rx::OverlayImpl"* (%"class.rx::ContextGL"*, %"class.gl::OverlayState"*)* @_ZN2rx9ContextGL13createOverlayERKN2gl12OverlayStateE to i8*), i8* bitcast (void (%"class.rx::ContextImpl"*, %"class.gl::Context"*)* @_ZN2rx11ContextImpl9onDestroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL10initializeEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*)* @_ZN2rx9ContextGL5flushEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*)* @_ZN2rx9ContextGL6finishEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i32)* @_ZN2rx9ContextGL10drawArraysEPKN2gl7ContextENS1_13PrimitiveModeEii to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i32, i32)* @_ZN2rx9ContextGL19drawArraysInstancedEPKN2gl7ContextENS1_13PrimitiveModeEiii to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i32, i32, i32)* @_ZN2rx9ContextGL31drawArraysInstancedBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEiiij to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i64, i8*)* @_ZN2rx9ContextGL12drawElementsEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)* @_ZN2rx9ContextGL22drawElementsBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvi to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32)* @_ZN2rx9ContextGL21drawElementsInstancedEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvi to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32)* @_ZN2rx9ContextGL31drawElementsInstancedBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvii to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i64, i8*, i32, i32, i32)* @_ZN2rx9ContextGL43drawElementsInstancedBaseVertexBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKviij to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*)* @_ZN2rx9ContextGL17drawRangeElementsEPKN2gl7ContextENS1_13PrimitiveModeEjjiNS1_16DrawElementsTypeEPKv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32, i32, i32, i64, i8*, i32)* @_ZN2rx9ContextGL27drawRangeElementsBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEjjiNS1_16DrawElementsTypeEPKvi to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i8*)* @_ZN2rx9ContextGL18drawArraysIndirectEPKN2gl7ContextENS1_13PrimitiveModeEPKv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i64, i8*)* @_ZN2rx9ContextGL20drawElementsIndirectEPKN2gl7ContextENS1_13PrimitiveModeENS1_16DrawElementsTypeEPKv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i32*, i32)* @_ZN2rx9ContextGL15multiDrawArraysEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_i to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32)* @_ZN2rx9ContextGL24multiDrawArraysInstancedEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_S7_i to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32)* @_ZN2rx9ContextGL17multiDrawElementsEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvi to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32)* @_ZN2rx9ContextGL26multiDrawElementsInstancedEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvS7_i to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i32*, i32*, i32*, i32)* @_ZN2rx9ContextGL36multiDrawArraysInstancedBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_S7_PKji to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i8, i32*, i64, i8**, i32*, i32*, i32*, i32)* @_ZN2rx9ContextGL48multiDrawElementsInstancedBaseVertexBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvS7_S7_PKji to i8*), i8* bitcast (i8 (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL14getResetStatusEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, i32, i8*)* @_ZN2rx9ContextGL17insertEventMarkerEiPKc to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, i32, i8*)* @_ZN2rx9ContextGL15pushGroupMarkerEiPKc to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL14popGroupMarkerEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i32, i32, %"class.std::__1::basic_string"*)* @_ZN2rx9ContextGL14pushDebugGroupEPKN2gl7ContextEjjRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*)* @_ZN2rx9ContextGL13popDebugGroupEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ContextImpl"*)* @_ZN2rx11ContextImpl19handleNoopDrawEventEv to i8*), i8* bitcast (void (%"class.rx::ContextGL"*, i32)* @_ZN2rx9ContextGL27setMaxShaderCompilerThreadsEj to i8*), i8* bitcast (void (%"class.rx::ContextGL"*, i8)* @_ZN2rx9ContextGL17invalidateTextureEN2gl11TextureTypeE to i8*), i8* bitcast (void (%"class.rx::ContextImpl"*)* @_ZN2rx11ContextImpl23framebufferFetchBarrierEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"*, %"class.angle::BitSetT.168"*)* @_ZN2rx9ContextGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm64EmmEES9_ to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL14getGPUDisjointEv to i8*), i8* bitcast (i64 (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGL12getTimestampEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*)* @_ZN2rx9ContextGL13onMakeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*)* @_ZN2rx9ContextGL15onUnMakeCurrentEPKN2gl7ContextE to i8*), i8* bitcast (void (%"struct.gl::Caps"*, %"class.rx::ContextGL"*)* @_ZNK2rx9ContextGL13getNativeCapsEv to i8*), i8* bitcast (%"class.gl::TextureCapsMap"* (%"class.rx::ContextGL"*)* @_ZNK2rx9ContextGL20getNativeTextureCapsEv to i8*), i8* bitcast (%"struct.gl::Extensions"* (%"class.rx::ContextGL"*)* @_ZNK2rx9ContextGL19getNativeExtensionsEv to i8*), i8* bitcast (%"struct.gl::Limitations"* (%"class.rx::ContextGL"*)* @_ZNK2rx9ContextGL20getNativeLimitationsEv to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i32, i32, i32)* @_ZN2rx9ContextGL15dispatchComputeEPKN2gl7ContextEjjj to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i64)* @_ZN2rx9ContextGL23dispatchComputeIndirectEPKN2gl7ContextEl to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i32)* @_ZN2rx9ContextGL13memoryBarrierEPKN2gl7ContextEj to i8*), i8* bitcast (i32 (%"class.rx::ContextGL"*, %"class.gl::Context"*, i32)* @_ZN2rx9ContextGL21memoryBarrierByRegionEPKN2gl7ContextEj to i8*), i8* bitcast (i8 (%"class.rx::ContextImpl"*)* @_ZNK2rx11ContextImpl18getContextPriorityEv to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)* @_ZN2rx11ContextImpl19releaseHighPowerGPUEPN2gl7ContextE to i8*), i8* bitcast (void (%"class.egl::Error"*, %"class.rx::ContextImpl"*, %"class.gl::Context"*)* @_ZN2rx11ContextImpl21reacquireHighPowerGPUEPN2gl7ContextE to i8*)] }, align 8
@_ZTVN2rx11OverlayImplE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.rx::OverlayImpl"*)* @_ZN2rx11OverlayImplD2Ev to i8*), i8* bitcast (void (%"class.rx::OverlayImpl"*)* @_ZN2rx11OverlayImplD0Ev to i8*), i8* bitcast (void (%"class.rx::OverlayImpl"*, %"class.gl::Context"*)* @_ZN2rx11OverlayImpl9onDestroyEPKN2gl7ContextE to i8*), i8* bitcast (i32 (%"class.rx::OverlayImpl"*, %"class.gl::Context"*, i8*)* @_ZN2rx11OverlayImpl4initEPKN2gl7ContextEPb to i8*)] }, comdat, align 8
@switch.table._ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE.2 = private unnamed_addr constant [5 x i32] [i32 33640, i32 36193, i32 36255, i32 36342, i32 36343], align 4

@_ZN2rx9ContextGLC1ERKN2gl5StateEPNS1_8ErrorSetERKNSt3__110shared_ptrINS_10RendererGLEEENS_32RobustnessVideoMemoryPurgeStatusE = hidden unnamed_addr alias void (%"class.rx::ContextGL"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"class.std::__1::shared_ptr.643"*, i32), void (%"class.rx::ContextGL"*, %"class.gl::State"*, %"class.gl::ErrorSet"*, %"class.std::__1::shared_ptr.643"*, i32)* @_ZN2rx9ContextGLC2ERKN2gl5StateEPNS1_8ErrorSetERKNSt3__110shared_ptrINS_10RendererGLEEENS_32RobustnessVideoMemoryPurgeStatusE
@_ZN2rx9ContextGLD1Ev = hidden unnamed_addr alias void (%"class.rx::ContextGL"*), void (%"class.rx::ContextGL"*)* @_ZN2rx9ContextGLD2Ev

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2rx11OverlayImpl4initEPKN2gl7ContextEPb(%"class.rx::OverlayImpl"*, %"class.gl::Context"*, i8*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGLC2ERKN2gl5StateEPNS1_8ErrorSetERKNSt3__110shared_ptrINS_10RendererGLEEENS_32RobustnessVideoMemoryPurgeStatusE(%"class.rx::ContextGL"*, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*, %"class.std::__1::shared_ptr.643"* nocapture readonly dereferenceable(16), i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11ContextImplC2ERKN2gl5StateEPNS1_8ErrorSetE(%"class.rx::ContextImpl"* %6, %"class.gl::State"* dereferenceable(12296) %1, %"class.gl::ErrorSet"* %2) #11
  %7 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*] }, { [69 x i8*] }* @_ZTVN2rx9ContextGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1
  %9 = bitcast %"class.std::__1::shared_ptr.643"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::shared_ptr.643"* %8 to i64*
  store i64 %10, i64* %11, align 8
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 1
  %13 = getelementptr inbounds %"class.std::__1::shared_ptr.643", %"class.std::__1::shared_ptr.643"* %3, i64 0, i32 1
  %14 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %13, align 8
  store %"class.std::__1::__shared_weak_count"* %14, %"class.std::__1::__shared_weak_count"** %12, align 8
  %15 = icmp eq %"class.std::__1::__shared_weak_count"* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %14, i64 0, i32 0, i32 1
  %18 = atomicrmw add i64* %17, i64 1 monotonic
  br label %19

19:                                               ; preds = %5, %16
  %20 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 2
  store i32 %4, i32* %20, align 8
  ret void
}

declare void @_ZN2rx11ContextImplC2ERKN2gl5StateEPNS1_8ErrorSetE(%"class.rx::ContextImpl"*, %"class.gl::State"* dereferenceable(12296), %"class.gl::ErrorSet"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGLD2Ev(%"class.rx::ContextGL"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*] }, { [69 x i8*] }* @_ZTVN2rx9ContextGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11ContextImplD2Ev(%"class.rx::ContextImpl"* %17) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2rx11ContextImplD2Ev(%"class.rx::ContextImpl"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGLD0Ev(%"class.rx::ContextGL"*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [69 x i8*] }, { [69 x i8*] }* @_ZTVN2rx9ContextGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 1
  %4 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %3, align 8
  %5 = icmp eq %"class.std::__1::__shared_weak_count"* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0, i32 1
  %8 = atomicrmw add i64* %7, i64 -1 acq_rel
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %16

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %4, i64 0, i32 0
  %12 = bitcast %"class.std::__1::__shared_weak_count"* %4 to void (%"class.std::__1::__shared_count"*)***
  %13 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, i64 2
  %15 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %14, align 8
  tail call void %15(%"class.std::__1::__shared_count"* %11) #11
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %4) #11
  br label %16

16:                                               ; preds = %1, %6, %10
  %17 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  tail call void @_ZN2rx11ContextImplD2Ev(%"class.rx::ContextImpl"* %17) #11
  %18 = bitcast %"class.rx::ContextGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %18) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN2rx9ContextGL10initializeEv(%"class.rx::ContextGL"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::CompilerImpl"* @_ZN2rx9ContextGL14createCompilerEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #12
  %3 = bitcast i8* %2 to %"class.rx::CompilerGL"*
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  tail call void @_ZN2rx10CompilerGLC1EPKNS_11FunctionsGLE(%"class.rx::CompilerGL"* nonnull %3, %"class.rx::FunctionsGL"* %7) #11
  %8 = bitcast i8* %2 to %"class.rx::CompilerImpl"*
  ret %"class.rx::CompilerImpl"* %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN2rx10CompilerGLC1EPKNS_11FunctionsGLE(%"class.rx::CompilerGL"*, %"class.rx::FunctionsGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ShaderImpl"* @_ZN2rx9ContextGL12createShaderERKN2gl11ShaderStateE(%"class.rx::ContextGL"*, %"class.gl::ShaderState"* dereferenceable(368)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 115
  %8 = load i32 (i32)*, i32 (i32)** %7, align 8
  %9 = getelementptr inbounds %"class.gl::ShaderState", %"class.gl::ShaderState"* %1, i64 0, i32 1
  %10 = load i8, i8* %9, align 8
  %11 = tail call i32 @_ZN2gl8ToGLenumENS_10ShaderTypeE(i8 zeroext %10) #11
  %12 = tail call i32 %8(i32 %11) #11
  %13 = tail call i8* @_Znwm(i64 72) #12
  %14 = bitcast i8* %13 to %"class.rx::ShaderGL"*
  %15 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1
  %16 = getelementptr inbounds %"class.std::__1::shared_ptr.643", %"class.std::__1::shared_ptr.643"* %15, i64 0, i32 0
  %17 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %16, align 8
  %18 = tail call i32 @_ZNK2rx10RendererGL30getMultiviewImplementationTypeEv(%"class.rx::RendererGL"* %17) #11
  tail call void @_ZN2rx8ShaderGLC1ERKN2gl11ShaderStateEjNS_29MultiviewImplementationTypeGLERKNSt3__110shared_ptrINS_10RendererGLEEE(%"class.rx::ShaderGL"* nonnull %14, %"class.gl::ShaderState"* dereferenceable(368) %1, i32 %12, i32 %18, %"class.std::__1::shared_ptr.643"* dereferenceable(16) %15) #11
  %19 = bitcast i8* %13 to %"class.rx::ShaderImpl"*
  ret %"class.rx::ShaderImpl"* %19
}

declare i32 @_ZN2gl8ToGLenumENS_10ShaderTypeE(i8 zeroext) local_unnamed_addr #3

declare i32 @_ZNK2rx10RendererGL30getMultiviewImplementationTypeEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

declare void @_ZN2rx8ShaderGLC1ERKN2gl11ShaderStateEjNS_29MultiviewImplementationTypeGLERKNSt3__110shared_ptrINS_10RendererGLEEE(%"class.rx::ShaderGL"*, %"class.gl::ShaderState"* dereferenceable(368), i32, i32, %"class.std::__1::shared_ptr.643"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ProgramImpl"* @_ZN2rx9ContextGL13createProgramERKN2gl12ProgramStateE(%"class.rx::ContextGL"*, %"class.gl::ProgramState"* dereferenceable(304)) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 120) #12
  %4 = bitcast i8* %3 to %"class.rx::ProgramGL"*
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 20
  %10 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 3
  %11 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %10, align 8
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1
  tail call void @_ZN2rx9ProgramGLC1ERKN2gl12ProgramStateEPKNS_11FunctionsGLERKN5angle10FeaturesGLEPNS_14StateManagerGLERKNSt3__110shared_ptrINS_10RendererGLEEE(%"class.rx::ProgramGL"* nonnull %4, %"class.gl::ProgramState"* dereferenceable(304) %1, %"class.rx::FunctionsGL"* %8, %"struct.angle::FeaturesGL"* dereferenceable(3576) %9, %"class.rx::StateManagerGL"* %11, %"class.std::__1::shared_ptr.643"* dereferenceable(16) %12) #11
  %13 = bitcast i8* %3 to %"class.rx::ProgramImpl"*
  ret %"class.rx::ProgramImpl"* %13
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZNK2rx9ContextGL13getFeaturesGLEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 20
  ret %"struct.angle::FeaturesGL"* %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::StateManagerGL"* @_ZN2rx9ContextGL15getStateManagerEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 3
  %5 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %4, align 8
  ret %"class.rx::StateManagerGL"* %5
}

declare void @_ZN2rx9ProgramGLC1ERKN2gl12ProgramStateEPKNS_11FunctionsGLERKN5angle10FeaturesGLEPNS_14StateManagerGLERKNSt3__110shared_ptrINS_10RendererGLEEE(%"class.rx::ProgramGL"*, %"class.gl::ProgramState"* dereferenceable(304), %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"* dereferenceable(3576), %"class.rx::StateManagerGL"*, %"class.std::__1::shared_ptr.643"* dereferenceable(16)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::FramebufferImpl"* @_ZN2rx9ContextGL17createFramebufferERKN2gl16FramebufferStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::FramebufferState"* dereferenceable(464)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 0, i32* %3, align 4
  %9 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 238
  %10 = load void (i32, i32*)*, void (i32, i32*)** %9, align 8
  call void %10(i32 1, i32* nonnull %3) #11
  %11 = call i8* @_Znwm(i64 24) #12
  %12 = bitcast i8* %11 to %"class.rx::FramebufferGL"*
  %13 = load i32, i32* %3, align 4
  call void @_ZN2rx13FramebufferGLC1ERKN2gl16FramebufferStateEjbb(%"class.rx::FramebufferGL"* nonnull %12, %"class.gl::FramebufferState"* dereferenceable(464) %1, i32 %13, i1 zeroext false, i1 zeroext false) #11
  %14 = bitcast i8* %11 to %"class.rx::FramebufferImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret %"class.rx::FramebufferImpl"* %14
}

declare void @_ZN2rx13FramebufferGLC1ERKN2gl16FramebufferStateEjbb(%"class.rx::FramebufferGL"*, %"class.gl::FramebufferState"* dereferenceable(464), i32, i1 zeroext, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::TextureImpl"* @_ZN2rx9ContextGL13createTextureERKN2gl12TextureStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::TextureState"* dereferenceable(216)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 3
  %9 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %3, align 4
  %11 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 57
  %12 = load void (i32, i32*)*, void (i32, i32*)** %11, align 8
  call void %12(i32 1, i32* nonnull %3) #11
  %13 = getelementptr inbounds %"class.gl::TextureState", %"class.gl::TextureState"* %1, i64 0, i32 0
  %14 = load i8, i8* %13, align 8
  %15 = load i32, i32* %3, align 4
  call void @_ZN2rx14StateManagerGL11bindTextureEN2gl11TextureTypeEj(%"class.rx::StateManagerGL"* %9, i8 zeroext %14, i32 %15) #11
  %16 = call i8* @_Znwm(i64 240) #12
  %17 = bitcast i8* %16 to %"class.rx::TextureGL"*
  %18 = load i32, i32* %3, align 4
  call void @_ZN2rx9TextureGLC1ERKN2gl12TextureStateEj(%"class.rx::TextureGL"* nonnull %17, %"class.gl::TextureState"* dereferenceable(216) %1, i32 %18) #11
  %19 = bitcast i8* %16 to %"class.rx::TextureImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  ret %"class.rx::TextureImpl"* %19
}

declare void @_ZN2rx14StateManagerGL11bindTextureEN2gl11TextureTypeEj(%"class.rx::StateManagerGL"*, i8 zeroext, i32) local_unnamed_addr #3

declare void @_ZN2rx9TextureGLC1ERKN2gl12TextureStateEj(%"class.rx::TextureGL"*, %"class.gl::TextureState"* dereferenceable(216), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::RenderbufferImpl"* @_ZN2rx9ContextGL18createRenderbufferERKN2gl17RenderbufferStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::RenderbufferState"* dereferenceable(32)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 3
  %9 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %8, align 8
  %10 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %10) #11
  store i32 0, i32* %3, align 4
  %11 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 239
  %12 = load void (i32, i32*)*, void (i32, i32*)** %11, align 8
  call void %12(i32 1, i32* nonnull %3) #11
  %13 = load i32, i32* %3, align 4
  call void @_ZN2rx14StateManagerGL16bindRenderbufferEjj(%"class.rx::StateManagerGL"* %9, i32 36161, i32 %13) #11
  %14 = call i8* @_Znwm(i64 112) #12
  %15 = bitcast i8* %14 to %"class.rx::RenderbufferGL"*
  %16 = load i32, i32* %3, align 4
  call void @_ZN2rx14RenderbufferGLC1ERKN2gl17RenderbufferStateEj(%"class.rx::RenderbufferGL"* nonnull %15, %"class.gl::RenderbufferState"* dereferenceable(32) %1, i32 %16) #11
  %17 = bitcast i8* %14 to %"class.rx::RenderbufferImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %10) #11
  ret %"class.rx::RenderbufferImpl"* %17
}

declare void @_ZN2rx14StateManagerGL16bindRenderbufferEjj(%"class.rx::StateManagerGL"*, i32, i32) local_unnamed_addr #3

declare void @_ZN2rx14RenderbufferGLC1ERKN2gl17RenderbufferStateEj(%"class.rx::RenderbufferGL"*, %"class.gl::RenderbufferState"* dereferenceable(32), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::BufferImpl"* @_ZN2rx9ContextGL12createBufferERKN2gl11BufferStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::BufferState"* dereferenceable(104)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  %8 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #11
  store i32 0, i32* %3, align 4
  %9 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 98
  %10 = load void (i32, i32*)*, void (i32, i32*)** %9, align 8
  call void %10(i32 1, i32* nonnull %3) #11
  %11 = call i8* @_Znwm(i64 160) #12
  %12 = bitcast i8* %11 to %"class.rx::BufferGL"*
  %13 = load i32, i32* %3, align 4
  call void @_ZN2rx8BufferGLC1ERKN2gl11BufferStateEj(%"class.rx::BufferGL"* nonnull %12, %"class.gl::BufferState"* dereferenceable(104) %1, i32 %13) #11
  %14 = bitcast i8* %11 to %"class.rx::BufferImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #11
  ret %"class.rx::BufferImpl"* %14
}

declare void @_ZN2rx8BufferGLC1ERKN2gl11BufferStateEj(%"class.rx::BufferGL"*, %"class.gl::BufferState"* dereferenceable(104), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::VertexArrayImpl"* @_ZN2rx9ContextGL17createVertexArrayERKN2gl16VertexArrayStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::VertexArrayState"* dereferenceable(168)) unnamed_addr #2 align 2 {
  %3 = alloca i32, align 4
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 20, i32 70, i32 4
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 3
  %11 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %10, align 8
  %12 = tail call i8* @_Znwm(i64 432) #12
  %13 = bitcast i8* %12 to %"class.rx::VertexArrayGL"*
  %14 = tail call i32 @_ZNK2rx14StateManagerGL13getDefaultVAOEv(%"class.rx::StateManagerGL"* %11) #11
  %15 = tail call %"struct.rx::VertexArrayStateGL"* @_ZN2rx14StateManagerGL18getDefaultVAOStateEv(%"class.rx::StateManagerGL"* %11) #11
  tail call void @_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEjPNS_18VertexArrayStateGLE(%"class.rx::VertexArrayGL"* nonnull %13, %"class.gl::VertexArrayState"* dereferenceable(168) %1, i32 %14, %"struct.rx::VertexArrayStateGL"* %15) #11
  br label %25

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %18 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %17, align 8
  %19 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #11
  store i32 0, i32* %3, align 4
  %20 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %18, i64 0, i32 0, i32 240
  %21 = load void (i32, i32*)*, void (i32, i32*)** %20, align 8
  call void %21(i32 1, i32* nonnull %3) #11
  %22 = call i8* @_Znwm(i64 432) #12
  %23 = bitcast i8* %22 to %"class.rx::VertexArrayGL"*
  %24 = load i32, i32* %3, align 4
  call void @_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEj(%"class.rx::VertexArrayGL"* nonnull %23, %"class.gl::VertexArrayState"* dereferenceable(168) %1, i32 %24) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #11
  br label %25

25:                                               ; preds = %16, %9
  %26 = phi i8* [ %12, %9 ], [ %22, %16 ]
  %27 = bitcast i8* %26 to %"class.rx::VertexArrayImpl"*
  ret %"class.rx::VertexArrayImpl"* %27
}

declare i32 @_ZNK2rx14StateManagerGL13getDefaultVAOEv(%"class.rx::StateManagerGL"*) local_unnamed_addr #3

declare %"struct.rx::VertexArrayStateGL"* @_ZN2rx14StateManagerGL18getDefaultVAOStateEv(%"class.rx::StateManagerGL"*) local_unnamed_addr #3

declare void @_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEjPNS_18VertexArrayStateGLE(%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"* dereferenceable(168), i32, %"struct.rx::VertexArrayStateGL"*) unnamed_addr #3

declare void @_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEj(%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"* dereferenceable(168), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::QueryImpl"* @_ZN2rx9ContextGL11createQueryEN2gl9QueryTypeE(%"class.rx::ContextGL"* nocapture readonly, i8 zeroext) unnamed_addr #2 align 2 {
  %3 = icmp eq i8 %1, 2
  br i1 %3, label %4, label %11

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 40) #12
  %6 = bitcast i8* %5 to %"class.rx::SyncQueryGL"*
  %7 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %10 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %9, align 8
  tail call void @_ZN2rx11SyncQueryGLC1EN2gl9QueryTypeEPKNS_11FunctionsGLE(%"class.rx::SyncQueryGL"* nonnull %6, i8 zeroext 2, %"class.rx::FunctionsGL"* %10) #11
  br label %20

11:                                               ; preds = %2
  %12 = tail call i8* @_Znwm(i64 96) #12
  %13 = bitcast i8* %12 to %"class.rx::StandardQueryGL"*
  %14 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %15 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %14, align 8
  %16 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %15, i64 0, i32 2, i32 0, i32 0, i32 0
  %17 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %16, align 8
  %18 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %15, i64 0, i32 3
  %19 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %18, align 8
  tail call void @_ZN2rx15StandardQueryGLC1EN2gl9QueryTypeEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::StandardQueryGL"* nonnull %13, i8 zeroext %1, %"class.rx::FunctionsGL"* %17, %"class.rx::StateManagerGL"* %19) #11
  br label %20

20:                                               ; preds = %11, %4
  %21 = phi i8* [ %5, %4 ], [ %12, %11 ]
  %22 = bitcast i8* %21 to %"class.rx::QueryImpl"*
  ret %"class.rx::QueryImpl"* %22
}

declare void @_ZN2rx11SyncQueryGLC1EN2gl9QueryTypeEPKNS_11FunctionsGLE(%"class.rx::SyncQueryGL"*, i8 zeroext, %"class.rx::FunctionsGL"*) unnamed_addr #3

declare void @_ZN2rx15StandardQueryGLC1EN2gl9QueryTypeEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::StandardQueryGL"*, i8 zeroext, %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::FenceNVImpl"* @_ZN2rx9ContextGL13createFenceNVEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %4, align 8
  %6 = tail call zeroext i1 @_ZN2rx9FenceNVGL9SupportedEPKNS_11FunctionsGLE(%"class.rx::FunctionsGL"* %5) #11
  %7 = tail call i8* @_Znwm(i64 24) #12
  br i1 %6, label %8, label %10

8:                                                ; preds = %1
  %9 = bitcast i8* %7 to %"class.rx::FenceNVGL"*
  tail call void @_ZN2rx9FenceNVGLC1EPKNS_11FunctionsGLE(%"class.rx::FenceNVGL"* nonnull %9, %"class.rx::FunctionsGL"* %5) #11
  br label %12

10:                                               ; preds = %1
  %11 = bitcast i8* %7 to %"class.rx::FenceNVSyncGL"*
  tail call void @_ZN2rx13FenceNVSyncGLC1EPKNS_11FunctionsGLE(%"class.rx::FenceNVSyncGL"* nonnull %11, %"class.rx::FunctionsGL"* %5) #11
  br label %12

12:                                               ; preds = %10, %8
  %13 = bitcast i8* %7 to %"class.rx::FenceNVImpl"*
  ret %"class.rx::FenceNVImpl"* %13
}

declare zeroext i1 @_ZN2rx9FenceNVGL9SupportedEPKNS_11FunctionsGLE(%"class.rx::FunctionsGL"*) local_unnamed_addr #3

declare void @_ZN2rx9FenceNVGLC1EPKNS_11FunctionsGLE(%"class.rx::FenceNVGL"*, %"class.rx::FunctionsGL"*) unnamed_addr #3

declare void @_ZN2rx13FenceNVSyncGLC1EPKNS_11FunctionsGLE(%"class.rx::FenceNVSyncGL"*, %"class.rx::FunctionsGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SyncImpl"* @_ZN2rx9ContextGL10createSyncEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #12
  %3 = bitcast i8* %2 to %"class.rx::SyncGL"*
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %5, i64 0, i32 2, i32 0, i32 0, i32 0
  %7 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %6, align 8
  tail call void @_ZN2rx6SyncGLC1EPKNS_11FunctionsGLE(%"class.rx::SyncGL"* nonnull %3, %"class.rx::FunctionsGL"* %7) #11
  %8 = bitcast i8* %2 to %"class.rx::SyncImpl"*
  ret %"class.rx::SyncImpl"* %8
}

declare void @_ZN2rx6SyncGLC1EPKNS_11FunctionsGLE(%"class.rx::SyncGL"*, %"class.rx::FunctionsGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::TransformFeedbackImpl"* @_ZN2rx9ContextGL23createTransformFeedbackERKN2gl22TransformFeedbackStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::TransformFeedbackState"* dereferenceable(80)) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 48) #12
  %4 = bitcast i8* %3 to %"class.rx::TransformFeedbackGL"*
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 3
  %10 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %9, align 8
  tail call void @_ZN2rx19TransformFeedbackGLC1ERKN2gl22TransformFeedbackStateEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::TransformFeedbackGL"* nonnull %4, %"class.gl::TransformFeedbackState"* dereferenceable(80) %1, %"class.rx::FunctionsGL"* %8, %"class.rx::StateManagerGL"* %10) #11
  %11 = bitcast i8* %3 to %"class.rx::TransformFeedbackImpl"*
  ret %"class.rx::TransformFeedbackImpl"* %11
}

declare void @_ZN2rx19TransformFeedbackGLC1ERKN2gl22TransformFeedbackStateEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::TransformFeedbackGL"*, %"class.gl::TransformFeedbackState"* dereferenceable(80), %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SamplerImpl"* @_ZN2rx9ContextGL13createSamplerERKN2gl12SamplerStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::SamplerState"* dereferenceable(68)) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 104) #12
  %4 = bitcast i8* %3 to %"class.rx::SamplerGL"*
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 3
  %10 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %9, align 8
  tail call void @_ZN2rx9SamplerGLC1ERKN2gl12SamplerStateEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::SamplerGL"* nonnull %4, %"class.gl::SamplerState"* dereferenceable(68) %1, %"class.rx::FunctionsGL"* %8, %"class.rx::StateManagerGL"* %10) #11
  %11 = bitcast i8* %3 to %"class.rx::SamplerImpl"*
  ret %"class.rx::SamplerImpl"* %11
}

declare void @_ZN2rx9SamplerGLC1ERKN2gl12SamplerStateEPKNS_11FunctionsGLEPNS_14StateManagerGLE(%"class.rx::SamplerGL"*, %"class.gl::SamplerState"* dereferenceable(68), %"class.rx::FunctionsGL"*, %"class.rx::StateManagerGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::ProgramPipelineImpl"* @_ZN2rx9ContextGL21createProgramPipelineERKN2gl20ProgramPipelineStateE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::ProgramPipelineState"* dereferenceable(104)) unnamed_addr #2 align 2 {
  %3 = tail call i8* @_Znwm(i64 32) #12
  %4 = bitcast i8* %3 to %"class.rx::ProgramPipelineGL"*
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %7, align 8
  tail call void @_ZN2rx17ProgramPipelineGLC1ERKN2gl20ProgramPipelineStateEPKNS_11FunctionsGLE(%"class.rx::ProgramPipelineGL"* nonnull %4, %"class.gl::ProgramPipelineState"* dereferenceable(104) %1, %"class.rx::FunctionsGL"* %8) #11
  %9 = bitcast i8* %3 to %"class.rx::ProgramPipelineImpl"*
  ret %"class.rx::ProgramPipelineImpl"* %9
}

declare void @_ZN2rx17ProgramPipelineGLC1ERKN2gl20ProgramPipelineStateEPKNS_11FunctionsGLE(%"class.rx::ProgramPipelineGL"*, %"class.gl::ProgramPipelineState"* dereferenceable(104), %"class.rx::FunctionsGL"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::MemoryObjectImpl"* @_ZN2rx9ContextGL18createMemoryObjectEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %5, align 8
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %2, align 4
  %8 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 671
  %9 = load void (i32, i32*)*, void (i32, i32*)** %8, align 8
  call void %9(i32 1, i32* nonnull %2) #11
  %10 = call i8* @_Znwm(i64 16) #12
  %11 = bitcast i8* %10 to %"class.rx::MemoryObjectGL"*
  %12 = load i32, i32* %2, align 4
  call void @_ZN2rx14MemoryObjectGLC1Ej(%"class.rx::MemoryObjectGL"* nonnull %11, i32 %12) #11
  %13 = bitcast i8* %10 to %"class.rx::MemoryObjectImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret %"class.rx::MemoryObjectImpl"* %13
}

declare void @_ZN2rx14MemoryObjectGLC1Ej(%"class.rx::MemoryObjectGL"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.rx::SemaphoreImpl"* @_ZN2rx9ContextGL15createSemaphoreEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = alloca i32, align 4
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %5, align 8
  %7 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #11
  store i32 0, i32* %2, align 4
  %8 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 693
  %9 = load void (i32, i32*)*, void (i32, i32*)** %8, align 8
  call void %9(i32 1, i32* nonnull %2) #11
  %10 = call i8* @_Znwm(i64 16) #12
  %11 = bitcast i8* %10 to %"class.rx::SemaphoreGL"*
  %12 = load i32, i32* %2, align 4
  call void @_ZN2rx11SemaphoreGLC1Ej(%"class.rx::SemaphoreGL"* nonnull %11, i32 %12) #11
  %13 = bitcast i8* %10 to %"class.rx::SemaphoreImpl"*
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #11
  ret %"class.rx::SemaphoreImpl"* %13
}

declare void @_ZN2rx11SemaphoreGLC1Ej(%"class.rx::SemaphoreGL"*, i32) unnamed_addr #3

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %"class.rx::OverlayImpl"* @_ZN2rx9ContextGL13createOverlayERKN2gl12OverlayStateE(%"class.rx::ContextGL"* nocapture readnone, %"class.gl::OverlayState"* dereferenceable(88)) unnamed_addr #9 align 2 {
  %3 = tail call i8* @_Znwm(i64 16) #12
  %4 = bitcast i8* %3 to %"class.rx::OverlayImpl"*
  %5 = bitcast i8* %3 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx11OverlayImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 8
  %7 = bitcast i8* %6 to %"class.gl::OverlayState"**
  store %"class.gl::OverlayState"* %1, %"class.gl::OverlayState"** %7, align 8
  ret %"class.rx::OverlayImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL5flushEPKN2gl7ContextE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = tail call i32 @_ZN2rx10RendererGL5flushEv(%"class.rx::RendererGL"* %4) #11
  ret i32 %5
}

declare i32 @_ZN2rx10RendererGL5flushEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL6finishEPKN2gl7ContextE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = tail call i32 @_ZN2rx10RendererGL6finishEv(%"class.rx::RendererGL"* %4) #11
  ret i32 %5
}

declare i32 @_ZN2rx10RendererGL6finishEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL10drawArraysEPKN2gl7ContextENS1_13PrimitiveModeEii(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %7 = load %"class.gl::Program"*, %"class.gl::Program"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %7, i64 0, i32 4, i32 16
  %9 = load i32, i32* %8, align 8
  %10 = icmp ne i32 %9, -1
  %11 = select i1 %10, i32 %9, i32 0
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %13 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %12, align 8
  %14 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %13, i64 0, i32 20, i32 69, i32 4
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp ne i8 %19, 0
  %21 = icmp sgt i32 %3, 0
  %22 = and i1 %21, %20
  br i1 %22, label %23, label %36

23:                                               ; preds = %17, %5
  %24 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %25 = load %"class.gl::State"*, %"class.gl::State"** %24, align 8
  %26 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %25, i64 0, i32 65
  %27 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %29 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %28, align 8
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %29, i64 0, i32 10
  %31 = bitcast %"class.rx::VertexArrayImpl"** %30 to %"class.rx::VertexArrayGL"**
  %32 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %31, align 8
  %33 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %27, i64 0, i32 5
  %34 = tail call i32 @_ZNK2rx13VertexArrayGL18syncClientSideDataEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiii(%"class.rx::VertexArrayGL"* %32, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %33, i32 %3, i32 %4, i32 %11) #11
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %67, label %45

36:                                               ; preds = %17
  %37 = icmp eq i32 %3, 0
  %38 = and i1 %37, %20
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %41 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %40, align 8
  %42 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %41, i64 0, i32 10
  %43 = bitcast %"class.rx::VertexArrayImpl"** %42 to %"class.rx::VertexArrayGL"**
  %44 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %43, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %44, %"class.gl::Context"* %1) #11
  br label %45

45:                                               ; preds = %39, %36, %23
  %46 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %13, i64 0, i32 20, i32 46, i32 4
  %47 = load i8, i8* %46, align 8, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %45
  %50 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %12, align 8
  %51 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %50, i64 0, i32 3
  %52 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %51, align 8
  %53 = tail call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %52, %"class.gl::Context"* %1, i32 -1) #11
  %54 = icmp eq i32 %53, 1
  br i1 %54, label %67, label %55

55:                                               ; preds = %45, %49
  %56 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %12, align 8
  %57 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %56, i64 0, i32 2, i32 0, i32 0, i32 0
  %58 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %57, align 8
  br i1 %10, label %63, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %58, i64 0, i32 0, i32 55
  %61 = load void (i32, i32, i32)*, void (i32, i32, i32)** %60, align 8
  %62 = zext i8 %2 to i32
  tail call void %61(i32 %62, i32 %3, i32 %4) #11
  br label %67

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %58, i64 0, i32 0, i32 294
  %65 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %64, align 8
  %66 = zext i8 %2 to i32
  tail call void %65(i32 %66, i32 %3, i32 %4, i32 %11) #11
  br label %67

67:                                               ; preds = %49, %23, %59, %63
  %68 = phi i32 [ 0, %63 ], [ 0, %59 ], [ 1, %23 ], [ 1, %49 ]
  ret i32 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL19drawArraysInstancedEPKN2gl7ContextENS1_13PrimitiveModeEiii(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i32, i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %8 = load %"class.gl::Program"*, %"class.gl::Program"** %7, align 8
  %9 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %8, i64 0, i32 4, i32 16
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, -1
  %12 = select i1 %11, i32 1, i32 %10
  %13 = mul nsw i32 %12, %5
  %14 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %15 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %15, i64 0, i32 20, i32 69, i32 4
  %21 = load i8, i8* %20, align 8, !range !2
  %22 = icmp ne i8 %21, 0
  %23 = icmp sgt i32 %3, 0
  %24 = and i1 %23, %22
  br i1 %24, label %25, label %38

25:                                               ; preds = %19, %6
  %26 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %27 = load %"class.gl::State"*, %"class.gl::State"** %26, align 8
  %28 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %27, i64 0, i32 65
  %29 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %28, align 8
  %30 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %31 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %30, align 8
  %32 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %31, i64 0, i32 10
  %33 = bitcast %"class.rx::VertexArrayImpl"** %32 to %"class.rx::VertexArrayGL"**
  %34 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %29, i64 0, i32 5
  %36 = tail call i32 @_ZNK2rx13VertexArrayGL18syncClientSideDataEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiii(%"class.rx::VertexArrayGL"* %34, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %35, i32 %3, i32 %4, i32 %13) #11
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %64, label %47

38:                                               ; preds = %19
  %39 = icmp eq i32 %3, 0
  %40 = and i1 %39, %22
  br i1 %40, label %41, label %47

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %43 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %43, i64 0, i32 10
  %45 = bitcast %"class.rx::VertexArrayImpl"** %44 to %"class.rx::VertexArrayGL"**
  %46 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %45, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %46, %"class.gl::Context"* %1) #11
  br label %47

47:                                               ; preds = %41, %38, %25
  %48 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %15, i64 0, i32 20, i32 46, i32 4
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %47
  %52 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %14, align 8
  %53 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %52, i64 0, i32 3
  %54 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %53, align 8
  %55 = tail call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %54, %"class.gl::Context"* %1, i32 -1) #11
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %64, label %57

57:                                               ; preds = %47, %51
  %58 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %14, align 8
  %59 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %58, i64 0, i32 2, i32 0, i32 0, i32 0
  %60 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %59, align 8
  %61 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %60, i64 0, i32 0, i32 294
  %62 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %61, align 8
  %63 = zext i8 %2 to i32
  tail call void %62(i32 %63, i32 %3, i32 %4, i32 %13) #11
  br label %64

64:                                               ; preds = %51, %25, %57
  %65 = phi i32 [ 0, %57 ], [ 1, %25 ], [ 1, %51 ]
  ret i32 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL31updateAttributesForBaseInstanceEPKN2gl7ProgramEj(%"class.angle::BitSetT.166"* noalias nocapture sret, %"class.rx::ContextGL"* nocapture readonly, %"class.gl::Program"* nocapture readnone, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %1, i64 0, i32 0, i32 1
  %6 = load %"class.gl::State"*, %"class.gl::State"** %5, align 8
  %7 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %6, i64 0, i32 65
  %8 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %7, align 8
  %9 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %0, i64 0, i32 0
  store i64 0, i64* %9, align 8
  %10 = icmp eq i32 %3, 0
  br i1 %10, label %112, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %1, i64 0, i32 1, i32 0
  %13 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %12, align 8
  %14 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %13, i64 0, i32 2, i32 0, i32 0, i32 0
  %15 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %14, align 8
  %16 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %6, i64 0, i32 69
  %17 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %17, i64 0, i32 5, i32 1, i32 0, i32 0
  %19 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %17, i64 0, i32 5, i32 3, i32 0, i32 0
  %20 = zext i32 %3 to i64
  %21 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %15, i64 0, i32 0, i32 202
  %22 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %15, i64 0, i32 0, i32 292
  br label %23

23:                                               ; preds = %108, %11
  %24 = phi i64 [ 0, %11 ], [ %109, %108 ]
  %25 = phi i64 [ 0, %11 ], [ %110, %108 ]
  %26 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %18, align 8
  %27 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25
  %28 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %19, align 8
  %32 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %31, i64 %30
  %33 = tail call zeroext i1 @_ZNK2gl17ProgramExecutable22isAttribLocationActiveEm(%"class.gl::ProgramExecutable"* %8, i64 %25) #11
  br i1 %33, label %34, label %108

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %31, i64 %30, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %108, label %38

38:                                               ; preds = %34
  %39 = shl i64 1, %25
  %40 = and i64 %39, 65535
  %41 = or i64 %24, %40
  store i64 %41, i64* %9, align 8
  %42 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25, i32 2
  %43 = load i8*, i8** %42, align 8
  %44 = tail call i64 @_ZN2gl28ComputeVertexAttributeStrideERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* dereferenceable(48) %27, %"class.gl::VertexBinding"* dereferenceable(40) %32) #11
  %45 = mul i64 %44, %20
  %46 = getelementptr inbounds i8, i8* %43, i64 %45
  %47 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %31, i64 %30, i32 3, i32 0, i32 1
  %48 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %47, align 8
  %49 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %48, i64 0, i32 5
  %50 = bitcast %"class.rx::BufferImpl"** %49 to %"class.rx::BufferGL"**
  %51 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %50, align 8
  %52 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %12, align 8
  %53 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %52, i64 0, i32 3
  %54 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %53, align 8
  %55 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %51) #11
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %54, i8 zeroext 0, i32 %55) #11
  %56 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25, i32 1
  %57 = load %"struct.angle::Format"*, %"struct.angle::Format"** %56, align 8
  %58 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 7
  %59 = load i32, i32* %58, align 8
  %60 = or i32 %59, 1
  %61 = icmp eq i32 %60, 5125
  br i1 %61, label %62, label %85

62:                                               ; preds = %38
  %63 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 20
  %64 = load i8, i8* %63, align 2, !range !2
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %85

66:                                               ; preds = %62
  %67 = load void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)** %22, align 8
  %68 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 17
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 23
  %71 = load i32, i32* %70, align 4
  %72 = add i32 %71, -13
  %73 = icmp ult i32 %72, 5
  br i1 %73, label %76, label %74

74:                                               ; preds = %66
  %75 = add i32 %71, 5120
  br label %80

76:                                               ; preds = %66
  %77 = sext i32 %72 to i64
  %78 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE.2, i64 0, i64 %77
  %79 = load i32, i32* %78, align 4
  br label %80

80:                                               ; preds = %76, %74
  %81 = phi i32 [ %75, %74 ], [ %79, %76 ]
  %82 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25, i32 4
  %83 = load i32, i32* %82, align 4
  %84 = trunc i64 %25 to i32
  tail call void %67(i32 %84, i32 %69, i32 %81, i32 %83, i8* %46) #11
  br label %108

85:                                               ; preds = %38, %62
  %86 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** %21, align 8
  %87 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 17
  %88 = load i32, i32* %87, align 8
  %89 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %57, i64 0, i32 23
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, -13
  %92 = icmp ult i32 %91, 5
  br i1 %92, label %95, label %93

93:                                               ; preds = %85
  %94 = add i32 %90, 5120
  br label %99

95:                                               ; preds = %85
  %96 = sext i32 %91 to i64
  %97 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE.2, i64 0, i64 %96
  %98 = load i32, i32* %97, align 4
  br label %99

99:                                               ; preds = %95, %93
  %100 = phi i32 [ %94, %93 ], [ %98, %95 ]
  %101 = icmp eq i32 %59, 36764
  %102 = icmp eq i32 %59, 35863
  %103 = or i1 %101, %102
  %104 = zext i1 %103 to i8
  %105 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %26, i64 %25, i32 4
  %106 = load i32, i32* %105, align 4
  %107 = trunc i64 %25 to i32
  tail call void %86(i32 %107, i32 %88, i32 %100, i8 zeroext %104, i32 %106, i8* %46) #11
  br label %108

108:                                              ; preds = %80, %99, %34, %23
  %109 = phi i64 [ %41, %80 ], [ %41, %99 ], [ %24, %34 ], [ %24, %23 ]
  %110 = add nuw nsw i64 %25, 1
  %111 = icmp eq i64 %110, 16
  br i1 %111, label %112, label %23

112:                                              ; preds = %108, %4
  ret void
}

declare zeroext i1 @_ZNK2gl17ProgramExecutable22isAttribLocationActiveEm(%"class.gl::ProgramExecutable"*, i64) local_unnamed_addr #3

declare i64 @_ZN2gl28ComputeVertexAttributeStrideERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"*, i8 zeroext, i32) local_unnamed_addr #3

declare i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE(%"class.rx::ContextGL"* nocapture readonly, %"class.angle::BitSetT.166"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %5, align 8
  %7 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !3
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %15, label %10

10:                                               ; preds = %2
  %11 = tail call i64 @llvm.cttz.i64(i64 %8, i1 true) #11, !range !6
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 202
  %14 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %6, i64 0, i32 0, i32 292
  br label %16

15:                                               ; preds = %94, %2
  ret void

16:                                               ; preds = %99, %10
  %17 = phi %"class.rx::RendererGL"* [ %4, %10 ], [ %101, %99 ]
  %18 = phi i64 [ %11, %10 ], [ %100, %99 ]
  %19 = phi i64 [ %8, %10 ], [ %97, %99 ]
  %20 = load %"class.gl::State"*, %"class.gl::State"** %12, align 8
  %21 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %20, i64 0, i32 69
  %22 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 5, i32 1, i32 0, i32 0
  %24 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %23, align 8
  %25 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 5, i32 3, i32 0, i32 0
  %29 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %28, align 8
  %30 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %17, i64 0, i32 3
  %31 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %30, align 8
  %32 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %29, i64 %27, i32 3, i32 0, i32 1
  %33 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %32, align 8
  %34 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %33, i64 0, i32 5
  %35 = bitcast %"class.rx::BufferImpl"** %34 to %"class.rx::BufferGL"**
  %36 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %35, align 8
  %37 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %36) #11
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %31, i8 zeroext 0, i32 %37) #11
  %38 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 1
  %39 = load %"struct.angle::Format"*, %"struct.angle::Format"** %38, align 8
  %40 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = or i32 %41, 1
  %43 = icmp eq i32 %42, 5125
  br i1 %43, label %44, label %69

44:                                               ; preds = %16
  %45 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 20
  %46 = load i8, i8* %45, align 2, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %48, label %69

48:                                               ; preds = %44
  %49 = load void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)** %14, align 8
  %50 = trunc i64 %18 to i32
  %51 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 17
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 23
  %54 = load i32, i32* %53, align 4
  %55 = add i32 %54, -13
  %56 = icmp ult i32 %55, 5
  br i1 %56, label %59, label %57

57:                                               ; preds = %48
  %58 = add i32 %54, 5120
  br label %63

59:                                               ; preds = %48
  %60 = sext i32 %55 to i64
  %61 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE.2, i64 0, i64 %60
  %62 = load i32, i32* %61, align 4
  br label %63

63:                                               ; preds = %59, %57
  %64 = phi i32 [ %58, %57 ], [ %62, %59 ]
  %65 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 4
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 2
  %68 = load i8*, i8** %67, align 8
  tail call void %49(i32 %50, i32 %52, i32 %64, i32 %66, i8* %68) #11
  br label %94

69:                                               ; preds = %16, %44
  %70 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** %13, align 8
  %71 = trunc i64 %18 to i32
  %72 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 17
  %73 = load i32, i32* %72, align 8
  %74 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %39, i64 0, i32 23
  %75 = load i32, i32* %74, align 4
  %76 = add i32 %75, -13
  %77 = icmp ult i32 %76, 5
  br i1 %77, label %80, label %78

78:                                               ; preds = %69
  %79 = add i32 %75, 5120
  br label %84

80:                                               ; preds = %69
  %81 = sext i32 %76 to i64
  %82 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE.2, i64 0, i64 %81
  %83 = load i32, i32* %82, align 4
  br label %84

84:                                               ; preds = %80, %78
  %85 = phi i32 [ %79, %78 ], [ %83, %80 ]
  %86 = icmp eq i32 %41, 36764
  %87 = icmp eq i32 %41, 35863
  %88 = or i1 %86, %87
  %89 = zext i1 %88 to i8
  %90 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 4
  %91 = load i32, i32* %90, align 4
  %92 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %18, i32 2
  %93 = load i8*, i8** %92, align 8
  tail call void %70(i32 %71, i32 %73, i32 %85, i8 zeroext %89, i32 %91, i8* %93) #11
  br label %94

94:                                               ; preds = %84, %63
  %95 = shl i64 1, %18
  %96 = xor i64 %95, -1
  %97 = and i64 %19, %96
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %15, label %99

99:                                               ; preds = %94
  %100 = tail call i64 @llvm.cttz.i64(i64 %97, i1 true) #11, !range !6
  %101 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  br label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL31drawArraysInstancedBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEiiij(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i32, i32, i32) unnamed_addr #2 align 2 {
  %8 = alloca %"class.angle::BitSetT.166", align 8
  %9 = alloca %"class.angle::BitSetT.166", align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %11 = load %"class.gl::Program"*, %"class.gl::Program"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %11, i64 0, i32 4, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  %15 = select i1 %14, i32 1, i32 %13
  %16 = mul nsw i32 %15, %5
  %17 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %18 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %18, i64 0, i32 20, i32 69, i32 4
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp ne i8 %24, 0
  %26 = icmp sgt i32 %3, 0
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %41

28:                                               ; preds = %22, %7
  %29 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %30 = load %"class.gl::State"*, %"class.gl::State"** %29, align 8
  %31 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %30, i64 0, i32 65
  %32 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %31, align 8
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %34 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %34, i64 0, i32 10
  %36 = bitcast %"class.rx::VertexArrayImpl"** %35 to %"class.rx::VertexArrayGL"**
  %37 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %36, align 8
  %38 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %32, i64 0, i32 5
  %39 = tail call i32 @_ZNK2rx13VertexArrayGL18syncClientSideDataEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiii(%"class.rx::VertexArrayGL"* %37, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %38, i32 %3, i32 %4, i32 %16) #11
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %77, label %50

41:                                               ; preds = %22
  %42 = icmp eq i32 %3, 0
  %43 = and i1 %42, %25
  br i1 %43, label %44, label %50

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %46 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %45, align 8
  %47 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %46, i64 0, i32 10
  %48 = bitcast %"class.rx::VertexArrayImpl"** %47 to %"class.rx::VertexArrayGL"**
  %49 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %48, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %49, %"class.gl::Context"* %1) #11
  br label %50

50:                                               ; preds = %44, %41, %28
  %51 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %18, i64 0, i32 20, i32 46, i32 4
  %52 = load i8, i8* %51, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %50
  %55 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %17, align 8
  %56 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %55, i64 0, i32 3
  %57 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %56, align 8
  %58 = tail call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %57, %"class.gl::Context"* %1, i32 -1) #11
  %59 = icmp eq i32 %58, 1
  br i1 %59, label %77, label %60

60:                                               ; preds = %50, %54
  %61 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %17, align 8
  %62 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %61, i64 0, i32 2, i32 0, i32 0, i32 0
  %63 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %62, align 8
  %64 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %63, i64 0, i32 0, i32 487
  %65 = load void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)** %64, align 8
  %66 = icmp eq void (i32, i32, i32, i32, i32)* %65, null
  br i1 %66, label %69, label %67

67:                                               ; preds = %60
  %68 = zext i8 %2 to i32
  tail call void %65(i32 %68, i32 %3, i32 %4, i32 %16, i32 %6) #11
  br label %77

69:                                               ; preds = %60
  %70 = bitcast %"class.angle::BitSetT.166"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #11
  %71 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %8, i64 0, i32 0
  store i64 -6148914691236517206, i64* %71, align 8
  call void @_ZN2rx9ContextGL31updateAttributesForBaseInstanceEPKN2gl7ProgramEj(%"class.angle::BitSetT.166"* nonnull sret %8, %"class.rx::ContextGL"* %0, %"class.gl::Program"* undef, i32 %6)
  %72 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %63, i64 0, i32 0, i32 294
  %73 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %72, align 8
  %74 = zext i8 %2 to i32
  tail call void %73(i32 %74, i32 %3, i32 %4, i32 %16) #11
  %75 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %9, i64 0, i32 0
  %76 = load i64, i64* %71, align 8
  store i64 %76, i64* %75, align 8
  call void @_ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE(%"class.rx::ContextGL"* %0, %"class.angle::BitSetT.166"* nonnull %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #11
  br label %77

77:                                               ; preds = %54, %28, %67, %69
  %78 = phi i32 [ 0, %69 ], [ 0, %67 ], [ 1, %28 ], [ 1, %54 ]
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL12drawElementsEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKv(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i64, i8*) unnamed_addr #2 align 2 {
  %7 = alloca i8*, align 8
  %8 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %9 = load %"class.gl::Program"*, %"class.gl::Program"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %9, i64 0, i32 4, i32 16
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, -1
  %13 = select i1 %12, i32 %11, i32 0
  %14 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #11
  store i8* null, i8** %7, align 8
  %15 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %16 = load %"class.gl::State"*, %"class.gl::State"** %15, align 8
  %17 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %16, i64 0, i32 65
  %18 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %20 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %19, align 8
  %21 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %22 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %21, align 8
  %23 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %22, i64 0, i32 20, i32 69, i32 4
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %30, label %26

26:                                               ; preds = %6
  %27 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %20, i64 0, i32 10
  %28 = bitcast %"class.rx::VertexArrayImpl"** %27 to %"class.rx::VertexArrayGL"**
  %29 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %28, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %29, %"class.gl::Context"* %1) #11
  br label %30

30:                                               ; preds = %26, %6
  %31 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %38

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %20, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %36 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %35, align 8
  %37 = icmp eq %"class.gl::Buffer"* %36, null
  br i1 %37, label %38, label %48

38:                                               ; preds = %34, %30
  %39 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %20, i64 0, i32 10
  %40 = bitcast %"class.rx::VertexArrayImpl"** %39 to %"class.rx::VertexArrayGL"**
  %41 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %40, align 8
  %42 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %18, i64 0, i32 5
  %43 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %44 = load i8, i8* %43, align 4, !range !2
  %45 = icmp ne i8 %44, 0
  %46 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %41, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %42, i32 0, i32 %3, i64 %4, i8* %5, i32 %13, i1 zeroext %45, i8** nonnull %7) #11
  %47 = icmp eq i32 %46, 1
  br i1 %47, label %84, label %49

48:                                               ; preds = %34
  store i8* %5, i8** %7, align 8
  br label %49

49:                                               ; preds = %48, %38
  %50 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %51 = load i8, i8* %50, align 4, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %64, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %22, i64 0, i32 20, i32 45, i32 4
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %53
  %58 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %21, align 8
  %59 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %58, i64 0, i32 3
  %60 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %59, align 8
  %61 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %4) #11
  %62 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %60, %"class.gl::Context"* %1, i32 %61) #11
  %63 = icmp eq i32 %62, 1
  br i1 %63, label %84, label %64

64:                                               ; preds = %49, %53, %57
  %65 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %21, align 8
  %66 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %65, i64 0, i32 2, i32 0, i32 0, i32 0
  %67 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %66, align 8
  br i1 %12, label %76, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %67, i64 0, i32 0, i32 56
  %70 = load void (i32, i32, i32, i8*)*, void (i32, i32, i32, i8*)** %69, align 8
  %71 = zext i8 %2 to i32
  %72 = trunc i64 %4 to i32
  %73 = shl i32 %72, 1
  %74 = add i32 %73, 5121
  %75 = load i8*, i8** %7, align 8
  call void %70(i32 %71, i32 %3, i32 %74, i8* %75) #11
  br label %84

76:                                               ; preds = %64
  %77 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %67, i64 0, i32 0, i32 295
  %78 = load void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32)** %77, align 8
  %79 = zext i8 %2 to i32
  %80 = trunc i64 %4 to i32
  %81 = shl i32 %80, 1
  %82 = add i32 %81, 5121
  %83 = load i8*, i8** %7, align 8
  call void %78(i32 %79, i32 %3, i32 %82, i8* %83, i32 %13) #11
  br label %84

84:                                               ; preds = %57, %38, %68, %76
  %85 = phi i32 [ 0, %76 ], [ 0, %68 ], [ 1, %38 ], [ 1, %57 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #11
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL22drawElementsBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvi(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32) unnamed_addr #2 align 2 {
  %8 = alloca i8*, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %10, i64 0, i32 4, i32 16
  %12 = load i32, i32* %11, align 8
  %13 = icmp ne i32 %12, -1
  %14 = select i1 %13, i32 %12, i32 0
  %15 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #11
  store i8* null, i8** %8, align 8
  %16 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %17 = load %"class.gl::State"*, %"class.gl::State"** %16, align 8
  %18 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %17, i64 0, i32 65
  %19 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %21 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %20, align 8
  %22 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %23 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %22, align 8
  %24 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %23, i64 0, i32 20, i32 69, i32 4
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %7
  %28 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %21, i64 0, i32 10
  %29 = bitcast %"class.rx::VertexArrayImpl"** %28 to %"class.rx::VertexArrayGL"**
  %30 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %29, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %30, %"class.gl::Context"* %1) #11
  br label %31

31:                                               ; preds = %27, %7
  %32 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %33 = load i64, i64* %32, align 8
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %39

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %21, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %37 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %36, align 8
  %38 = icmp eq %"class.gl::Buffer"* %37, null
  br i1 %38, label %39, label %49

39:                                               ; preds = %35, %31
  %40 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %21, i64 0, i32 10
  %41 = bitcast %"class.rx::VertexArrayImpl"** %40 to %"class.rx::VertexArrayGL"**
  %42 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %41, align 8
  %43 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %19, i64 0, i32 5
  %44 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %45 = load i8, i8* %44, align 4, !range !2
  %46 = icmp ne i8 %45, 0
  %47 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %42, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %43, i32 0, i32 %3, i64 %4, i8* %5, i32 %14, i1 zeroext %46, i8** nonnull %8) #11
  %48 = icmp eq i32 %47, 1
  br i1 %48, label %85, label %50

49:                                               ; preds = %35
  store i8* %5, i8** %8, align 8
  br label %50

50:                                               ; preds = %49, %39
  %51 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %52 = load i8, i8* %51, align 4, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %65, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %23, i64 0, i32 20, i32 45, i32 4
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %65, label %58

58:                                               ; preds = %54
  %59 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %22, align 8
  %60 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %59, i64 0, i32 3
  %61 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %60, align 8
  %62 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %4) #11
  %63 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %61, %"class.gl::Context"* %1, i32 %62) #11
  %64 = icmp eq i32 %63, 1
  br i1 %64, label %85, label %65

65:                                               ; preds = %50, %54, %58
  %66 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %22, align 8
  %67 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %66, i64 0, i32 2, i32 0, i32 0, i32 0
  %68 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %67, align 8
  br i1 %13, label %77, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %68, i64 0, i32 0, i32 307
  %71 = load void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32)** %70, align 8
  %72 = zext i8 %2 to i32
  %73 = trunc i64 %4 to i32
  %74 = shl i32 %73, 1
  %75 = add i32 %74, 5121
  %76 = load i8*, i8** %8, align 8
  call void %71(i32 %72, i32 %3, i32 %75, i8* %76, i32 %6) #11
  br label %85

77:                                               ; preds = %65
  %78 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %68, i64 0, i32 0, i32 308
  %79 = load void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)** %78, align 8
  %80 = zext i8 %2 to i32
  %81 = trunc i64 %4 to i32
  %82 = shl i32 %81, 1
  %83 = add i32 %82, 5121
  %84 = load i8*, i8** %8, align 8
  call void %79(i32 %80, i32 %3, i32 %83, i8* %84, i32 %14, i32 %6) #11
  br label %85

85:                                               ; preds = %58, %39, %69, %77
  %86 = phi i32 [ 0, %77 ], [ 0, %69 ], [ 1, %39 ], [ 1, %58 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #11
  ret i32 %86
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL21drawElementsInstancedEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvi(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32) unnamed_addr #2 align 2 {
  %8 = alloca i8*, align 8
  %9 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %10 = load %"class.gl::Program"*, %"class.gl::Program"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %10, i64 0, i32 4, i32 16
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, -1
  %14 = select i1 %13, i32 1, i32 %12
  %15 = mul nsw i32 %14, %6
  %16 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %8, align 8
  %17 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.gl::State"*, %"class.gl::State"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %18, i64 0, i32 65
  %20 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %22 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %21, align 8
  %23 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %25 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %24, i64 0, i32 20, i32 69, i32 4
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 10
  %30 = bitcast %"class.rx::VertexArrayImpl"** %29 to %"class.rx::VertexArrayGL"**
  %31 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %30, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %31, %"class.gl::Context"* %1) #11
  br label %32

32:                                               ; preds = %28, %7
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %38 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %37, align 8
  %39 = icmp eq %"class.gl::Buffer"* %38, null
  br i1 %39, label %40, label %50

40:                                               ; preds = %36, %32
  %41 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 10
  %42 = bitcast %"class.rx::VertexArrayImpl"** %41 to %"class.rx::VertexArrayGL"**
  %43 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 5
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %43, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %44, i32 0, i32 %3, i64 %4, i8* %5, i32 %15, i1 zeroext %47, i8** nonnull %8) #11
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %77, label %51

50:                                               ; preds = %36
  store i8* %5, i8** %8, align 8
  br label %51

51:                                               ; preds = %50, %40
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %24, i64 0, i32 20, i32 45, i32 4
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %61 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %60, i64 0, i32 3
  %62 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %61, align 8
  %63 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %4) #11
  %64 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %62, %"class.gl::Context"* %1, i32 %63) #11
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %77, label %66

66:                                               ; preds = %51, %55, %59
  %67 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %68 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %67, i64 0, i32 2, i32 0, i32 0, i32 0
  %69 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %68, align 8
  %70 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %69, i64 0, i32 0, i32 295
  %71 = load void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32)** %70, align 8
  %72 = zext i8 %2 to i32
  %73 = trunc i64 %4 to i32
  %74 = shl i32 %73, 1
  %75 = add i32 %74, 5121
  %76 = load i8*, i8** %8, align 8
  call void %71(i32 %72, i32 %3, i32 %75, i8* %76, i32 %15) #11
  br label %77

77:                                               ; preds = %59, %40, %66
  %78 = phi i32 [ 0, %66 ], [ 1, %40 ], [ 1, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  ret i32 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL31drawElementsInstancedBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKvii(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32, i32) unnamed_addr #2 align 2 {
  %9 = alloca i8*, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %11 = load %"class.gl::Program"*, %"class.gl::Program"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %11, i64 0, i32 4, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  %15 = select i1 %14, i32 1, i32 %13
  %16 = mul nsw i32 %15, %6
  %17 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  store i8* null, i8** %9, align 8
  %18 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.gl::State"*, %"class.gl::State"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %19, i64 0, i32 65
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %20, align 8
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %23 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %22, align 8
  %24 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %25 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %26 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %25, i64 0, i32 20, i32 69, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %8
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 10
  %31 = bitcast %"class.rx::VertexArrayImpl"** %30 to %"class.rx::VertexArrayGL"**
  %32 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %31, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %32, %"class.gl::Context"* %1) #11
  br label %33

33:                                               ; preds = %29, %8
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %39 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %38, align 8
  %40 = icmp eq %"class.gl::Buffer"* %39, null
  br i1 %40, label %41, label %51

41:                                               ; preds = %37, %33
  %42 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 10
  %43 = bitcast %"class.rx::VertexArrayImpl"** %42 to %"class.rx::VertexArrayGL"**
  %44 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %43, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 5
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %44, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %45, i32 0, i32 %3, i64 %4, i8* %5, i32 %16, i1 zeroext %48, i8** nonnull %9) #11
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %78, label %52

51:                                               ; preds = %37
  store i8* %5, i8** %9, align 8
  br label %52

52:                                               ; preds = %51, %41
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %25, i64 0, i32 20, i32 45, i32 4
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %62 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %61, i64 0, i32 3
  %63 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %62, align 8
  %64 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %4) #11
  %65 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %63, %"class.gl::Context"* %1, i32 %64) #11
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %78, label %67

67:                                               ; preds = %52, %56, %60
  %68 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %69 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %69, align 8
  %71 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %70, i64 0, i32 0, i32 308
  %72 = load void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)** %71, align 8
  %73 = zext i8 %2 to i32
  %74 = trunc i64 %4 to i32
  %75 = shl i32 %74, 1
  %76 = add i32 %75, 5121
  %77 = load i8*, i8** %9, align 8
  call void %72(i32 %73, i32 %3, i32 %76, i8* %77, i32 %16, i32 %7) #11
  br label %78

78:                                               ; preds = %60, %41, %67
  %79 = phi i32 [ 0, %67 ], [ 1, %41 ], [ 1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL43drawElementsInstancedBaseVertexBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEiNS1_16DrawElementsTypeEPKviij(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i64, i8*, i32, i32, i32) unnamed_addr #2 align 2 {
  %10 = alloca i8*, align 8
  %11 = alloca %"class.angle::BitSetT.166", align 8
  %12 = alloca %"class.angle::BitSetT.166", align 8
  %13 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %14 = load %"class.gl::Program"*, %"class.gl::Program"** %13, align 8
  %15 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %14, i64 0, i32 4, i32 16
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, -1
  %18 = select i1 %17, i32 1, i32 %16
  %19 = mul nsw i32 %18, %6
  %20 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #11
  store i8* null, i8** %10, align 8
  %21 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %22 = load %"class.gl::State"*, %"class.gl::State"** %21, align 8
  %23 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %22, i64 0, i32 65
  %24 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %23, align 8
  %25 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %26 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %25, align 8
  %27 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %27, align 8
  %29 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %28, i64 0, i32 20, i32 69, i32 4
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %36, label %32

32:                                               ; preds = %9
  %33 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %26, i64 0, i32 10
  %34 = bitcast %"class.rx::VertexArrayImpl"** %33 to %"class.rx::VertexArrayGL"**
  %35 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %34, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %35, %"class.gl::Context"* %1) #11
  br label %36

36:                                               ; preds = %32, %9
  %37 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %40, label %44

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %26, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %42 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %41, align 8
  %43 = icmp eq %"class.gl::Buffer"* %42, null
  br i1 %43, label %44, label %54

44:                                               ; preds = %40, %36
  %45 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %26, i64 0, i32 10
  %46 = bitcast %"class.rx::VertexArrayImpl"** %45 to %"class.rx::VertexArrayGL"**
  %47 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %46, align 8
  %48 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %24, i64 0, i32 5
  %49 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %50 = load i8, i8* %49, align 4, !range !2
  %51 = icmp ne i8 %50, 0
  %52 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %47, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %48, i32 0, i32 %3, i64 %4, i8* %5, i32 %19, i1 zeroext %51, i8** nonnull %10) #11
  %53 = icmp eq i32 %52, 1
  br i1 %53, label %95, label %55

54:                                               ; preds = %40
  store i8* %5, i8** %10, align 8
  br label %55

55:                                               ; preds = %54, %44
  %56 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %57 = load i8, i8* %56, align 4, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %70, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %28, i64 0, i32 20, i32 45, i32 4
  %61 = load i8, i8* %60, align 8, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %59
  %64 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %27, align 8
  %65 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %64, i64 0, i32 3
  %66 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %65, align 8
  %67 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %4) #11
  %68 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %66, %"class.gl::Context"* %1, i32 %67) #11
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %95, label %70

70:                                               ; preds = %55, %59, %63
  %71 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %27, align 8
  %72 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %71, i64 0, i32 2, i32 0, i32 0, i32 0
  %73 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %72, align 8
  %74 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %73, i64 0, i32 0, i32 489
  %75 = load void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)** %74, align 8
  %76 = icmp eq void (i32, i32, i32, i8*, i32, i32, i32)* %75, null
  br i1 %76, label %83, label %77

77:                                               ; preds = %70
  %78 = zext i8 %2 to i32
  %79 = trunc i64 %4 to i32
  %80 = shl i32 %79, 1
  %81 = add i32 %80, 5121
  %82 = load i8*, i8** %10, align 8
  call void %75(i32 %78, i32 %3, i32 %81, i8* %82, i32 %19, i32 %7, i32 %8) #11
  br label %95

83:                                               ; preds = %70
  %84 = bitcast %"class.angle::BitSetT.166"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #11
  %85 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %11, i64 0, i32 0
  store i64 -6148914691236517206, i64* %85, align 8
  call void @_ZN2rx9ContextGL31updateAttributesForBaseInstanceEPKN2gl7ProgramEj(%"class.angle::BitSetT.166"* nonnull sret %11, %"class.rx::ContextGL"* %0, %"class.gl::Program"* undef, i32 %8)
  %86 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %73, i64 0, i32 0, i32 308
  %87 = load void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)** %86, align 8
  %88 = zext i8 %2 to i32
  %89 = trunc i64 %4 to i32
  %90 = shl i32 %89, 1
  %91 = add i32 %90, 5121
  %92 = load i8*, i8** %10, align 8
  call void %87(i32 %88, i32 %3, i32 %91, i8* %92, i32 %19, i32 %7) #11
  %93 = getelementptr inbounds %"class.angle::BitSetT.166", %"class.angle::BitSetT.166"* %12, i64 0, i32 0
  %94 = load i64, i64* %85, align 8
  store i64 %94, i64* %93, align 8
  call void @_ZN2rx9ContextGL22resetUpdatedAttributesEN5angle7BitSetTILm16EmmEE(%"class.rx::ContextGL"* %0, %"class.angle::BitSetT.166"* nonnull %12)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #11
  br label %95

95:                                               ; preds = %63, %44, %77, %83
  %96 = phi i32 [ 0, %83 ], [ 0, %77 ], [ 1, %44 ], [ 1, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #11
  ret i32 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL17drawRangeElementsEPKN2gl7ContextENS1_13PrimitiveModeEjjiNS1_16DrawElementsTypeEPKv(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i32, i32, i64, i8*) unnamed_addr #2 align 2 {
  %9 = alloca i8*, align 8
  %10 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %11 = load %"class.gl::Program"*, %"class.gl::Program"** %10, align 8
  %12 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %11, i64 0, i32 4, i32 16
  %13 = load i32, i32* %12, align 8
  %14 = icmp ne i32 %13, -1
  %15 = select i1 %14, i32 %13, i32 0
  %16 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #11
  store i8* null, i8** %9, align 8
  %17 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %18 = load %"class.gl::State"*, %"class.gl::State"** %17, align 8
  %19 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %18, i64 0, i32 65
  %20 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %19, align 8
  %21 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %22 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %21, align 8
  %23 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %24 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %25 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %24, i64 0, i32 20, i32 69, i32 4
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %8
  %29 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 10
  %30 = bitcast %"class.rx::VertexArrayImpl"** %29 to %"class.rx::VertexArrayGL"**
  %31 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %30, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %31, %"class.gl::Context"* %1) #11
  br label %32

32:                                               ; preds = %28, %8
  %33 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %38 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %37, align 8
  %39 = icmp eq %"class.gl::Buffer"* %38, null
  br i1 %39, label %40, label %50

40:                                               ; preds = %36, %32
  %41 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %22, i64 0, i32 10
  %42 = bitcast %"class.rx::VertexArrayImpl"** %41 to %"class.rx::VertexArrayGL"**
  %43 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %42, align 8
  %44 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %20, i64 0, i32 5
  %45 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp ne i8 %46, 0
  %48 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %43, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %44, i32 0, i32 %5, i64 %6, i8* %7, i32 %15, i1 zeroext %47, i8** nonnull %9) #11
  %49 = icmp eq i32 %48, 1
  br i1 %49, label %86, label %51

50:                                               ; preds = %36
  store i8* %7, i8** %9, align 8
  br label %51

51:                                               ; preds = %50, %40
  %52 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %53 = load i8, i8* %52, align 4, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %66, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %24, i64 0, i32 20, i32 45, i32 4
  %57 = load i8, i8* %56, align 8, !range !2
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %66, label %59

59:                                               ; preds = %55
  %60 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %61 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %60, i64 0, i32 3
  %62 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %61, align 8
  %63 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %6) #11
  %64 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %62, %"class.gl::Context"* %1, i32 %63) #11
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %86, label %66

66:                                               ; preds = %51, %55, %59
  %67 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %23, align 8
  %68 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %67, i64 0, i32 2, i32 0, i32 0, i32 0
  %69 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %68, align 8
  br i1 %14, label %78, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %69, i64 0, i32 0, i32 65
  %72 = load void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)** %71, align 8
  %73 = zext i8 %2 to i32
  %74 = trunc i64 %6 to i32
  %75 = shl i32 %74, 1
  %76 = add i32 %75, 5121
  %77 = load i8*, i8** %9, align 8
  call void %72(i32 %73, i32 %3, i32 %4, i32 %5, i32 %76, i8* %77) #11
  br label %86

78:                                               ; preds = %66
  %79 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %69, i64 0, i32 0, i32 295
  %80 = load void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32)** %79, align 8
  %81 = zext i8 %2 to i32
  %82 = trunc i64 %6 to i32
  %83 = shl i32 %82, 1
  %84 = add i32 %83, 5121
  %85 = load i8*, i8** %9, align 8
  call void %80(i32 %81, i32 %5, i32 %84, i8* %85, i32 %15) #11
  br label %86

86:                                               ; preds = %59, %40, %70, %78
  %87 = phi i32 [ 0, %78 ], [ 0, %70 ], [ 1, %40 ], [ 1, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #11
  ret i32 %87
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL27drawRangeElementsBaseVertexEPKN2gl7ContextENS1_13PrimitiveModeEjjiNS1_16DrawElementsTypeEPKvi(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i8 zeroext, i32, i32, i32, i64, i8*, i32) unnamed_addr #2 align 2 {
  %10 = alloca i8*, align 8
  %11 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 63
  %12 = load %"class.gl::Program"*, %"class.gl::Program"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::Program", %"class.gl::Program"* %12, i64 0, i32 4, i32 16
  %14 = load i32, i32* %13, align 8
  %15 = icmp ne i32 %14, -1
  %16 = select i1 %15, i32 %14, i32 0
  %17 = bitcast i8** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #11
  store i8* null, i8** %10, align 8
  %18 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0, i32 1
  %19 = load %"class.gl::State"*, %"class.gl::State"** %18, align 8
  %20 = getelementptr inbounds %"class.gl::State", %"class.gl::State"* %19, i64 0, i32 65
  %21 = load %"class.gl::ProgramExecutable"*, %"class.gl::ProgramExecutable"** %20, align 8
  %22 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 69
  %23 = load %"class.gl::VertexArray"*, %"class.gl::VertexArray"** %22, align 8
  %24 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %25 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %26 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %25, i64 0, i32 20, i32 69, i32 4
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %9
  %30 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 10
  %31 = bitcast %"class.rx::VertexArrayImpl"** %30 to %"class.rx::VertexArrayGL"**
  %32 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %31, align 8
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %32, %"class.gl::Context"* %1) #11
  br label %33

33:                                               ; preds = %29, %9
  %34 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %41

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 5, i32 2, i32 0, i32 0, i32 1
  %39 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %38, align 8
  %40 = icmp eq %"class.gl::Buffer"* %39, null
  br i1 %40, label %41, label %51

41:                                               ; preds = %37, %33
  %42 = getelementptr inbounds %"class.gl::VertexArray", %"class.gl::VertexArray"* %23, i64 0, i32 10
  %43 = bitcast %"class.rx::VertexArrayImpl"** %42 to %"class.rx::VertexArrayGL"**
  %44 = load %"class.rx::VertexArrayGL"*, %"class.rx::VertexArrayGL"** %43, align 8
  %45 = getelementptr inbounds %"class.gl::ProgramExecutable", %"class.gl::ProgramExecutable"* %21, i64 0, i32 5
  %46 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %47 = load i8, i8* %46, align 4, !range !2
  %48 = icmp ne i8 %47, 0
  %49 = call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %44, %"class.gl::Context"* %1, %"class.angle::BitSetT.166"* dereferenceable(8) %45, i32 0, i32 %5, i64 %6, i8* %7, i32 %16, i1 zeroext %48, i8** nonnull %10) #11
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %87, label %52

51:                                               ; preds = %37
  store i8* %7, i8** %10, align 8
  br label %52

52:                                               ; preds = %51, %41
  %53 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 2, i32 89
  %54 = load i8, i8* %53, align 4, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %67, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %25, i64 0, i32 20, i32 45, i32 4
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %67, label %60

60:                                               ; preds = %56
  %61 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %62 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %61, i64 0, i32 3
  %63 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %62, align 8
  %64 = call i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64 %6) #11
  %65 = call i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"* %63, %"class.gl::Context"* %1, i32 %64) #11
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %87, label %67

67:                                               ; preds = %52, %56, %60
  %68 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %24, align 8
  %69 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %68, i64 0, i32 2, i32 0, i32 0, i32 0
  %70 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %69, align 8
  br i1 %15, label %79, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %70, i64 0, i32 0, i32 309
  %73 = load void (i32, i32, i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)** %72, align 8
  %74 = zext i8 %2 to i32
  %75 = trunc i64 %6 to i32
  %76 = shl i32 %75, 1
  %77 = add i32 %76, 5121
  %78 = load i8*, i8** %10, align 8
  call void %73(i32 %74, i32 %3, i32 %4, i32 %5, i32 %77, i8* %78, i32 %8) #11
  br label %87

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %70, i64 0, i32 0, i32 308
  %81 = load void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)** %80, align 8
  %82 = zext i8 %2 to i32
  %83 = trunc i64 %6 to i32
  %84 = shl i32 %83, 1
  %85 = add i32 %84, 5121
  %86 = load i8*, i8** %10, align 8
  call void %81(i32 %82, i32 %5, i32 %85, i8* %86, i32 %16, i32 %8) #11
  br label %87

87:                                               ; preds = %60, %41, %71, %79
  %88 = phi i32 [ 0, %79 ], [ 0, %71 ], [ 1, %41 ], [ 1, %60 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #11
  ret i32 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL18drawArraysIndirectEPKN2gl7ContextENS1_13PrimitiveModeEPKv(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i8 zeroext, i8*) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 2, i32 0, i32 0, i32 0
  %8 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %7, align 8
  %9 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %8, i64 0, i32 0, i32 359
  %10 = load void (i32, i8*)*, void (i32, i8*)** %9, align 8
  %11 = zext i8 %2 to i32
  tail call void %10(i32 %11, i8* %3) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL20drawElementsIndirectEPKN2gl7ContextENS1_13PrimitiveModeENS1_16DrawElementsTypeEPKv(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i8 zeroext, i64, i8*) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %7, i64 0, i32 2, i32 0, i32 0, i32 0
  %9 = load %"class.rx::FunctionsGL"*, %"class.rx::FunctionsGL"** %8, align 8
  %10 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %9, i64 0, i32 0, i32 360
  %11 = load void (i32, i32, i8*)*, void (i32, i32, i8*)** %10, align 8
  %12 = zext i8 %2 to i32
  %13 = trunc i64 %3 to i32
  %14 = shl i32 %13, 1
  %15 = add i32 %14, 5121
  tail call void %11(i32 %12, i32 %15, i8* %4) #11
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL15multiDrawArraysEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_i(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32) unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %8 = tail call i32 @_ZN2rx22MultiDrawArraysGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_i(%"class.rx::ContextImpl"* %7, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i32* %4, i32 %5) #11
  ret i32 %8
}

declare i32 @_ZN2rx22MultiDrawArraysGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_i(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL24multiDrawArraysInstancedEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_S7_i(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZN2rx31MultiDrawArraysInstancedGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_S8_i(%"class.rx::ContextImpl"* %8, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i32* %4, i32* %5, i32 %6) #11
  ret i32 %9
}

declare i32 @_ZN2rx31MultiDrawArraysInstancedGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_S8_i(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL17multiDrawElementsEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvi(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32) unnamed_addr #2 align 2 {
  %8 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %9 = tail call i32 @_ZN2rx24MultiDrawElementsGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvi(%"class.rx::ContextImpl"* %8, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i64 %4, i8** %5, i32 %6) #11
  ret i32 %9
}

declare i32 @_ZN2rx24MultiDrawElementsGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvi(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL26multiDrawElementsInstancedEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvS7_i(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32) unnamed_addr #2 align 2 {
  %9 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZN2rx33MultiDrawElementsInstancedGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvS8_i(%"class.rx::ContextImpl"* %9, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i64 %4, i8** %5, i32* %6, i32 %7) #11
  ret i32 %10
}

declare i32 @_ZN2rx33MultiDrawElementsInstancedGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvS8_i(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL36multiDrawArraysInstancedBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEPKiS7_S7_PKji(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32*, i32) unnamed_addr #2 align 2 {
  %9 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %10 = tail call i32 @_ZN2rx43MultiDrawArraysInstancedBaseInstanceGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_S8_PKji(%"class.rx::ContextImpl"* %9, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i32* %4, i32* %5, i32* %6, i32 %7) #11
  ret i32 %10
}

declare i32 @_ZN2rx43MultiDrawArraysInstancedBaseInstanceGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiS8_S8_PKji(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i32*, i32*, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL48multiDrawElementsInstancedBaseVertexBaseInstanceEPKN2gl7ContextENS1_13PrimitiveModeEPKiNS1_16DrawElementsTypeEPKPKvS7_S7_PKji(%"class.rx::ContextGL"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32*, i32*, i32) unnamed_addr #2 align 2 {
  %11 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %12 = tail call i32 @_ZN2rx55MultiDrawElementsInstancedBaseVertexBaseInstanceGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvS8_S8_PKji(%"class.rx::ContextImpl"* %11, %"class.gl::Context"* %1, i8 zeroext %2, i32* %3, i64 %4, i8** %5, i32* %6, i32* %7, i32* %8, i32 %9) #11
  ret i32 %12
}

declare i32 @_ZN2rx55MultiDrawElementsInstancedBaseVertexBaseInstanceGeneralEPNS_11ContextImplEPKN2gl7ContextENS2_13PrimitiveModeEPKiNS2_16DrawElementsTypeEPKPKvS8_S8_PKji(%"class.rx::ContextImpl"*, %"class.gl::Context"*, i8 zeroext, i32*, i64, i8**, i32*, i32*, i32*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZN2rx9ContextGL14getResetStatusEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call zeroext i8 @_ZN2rx10RendererGL14getResetStatusEv(%"class.rx::RendererGL"* %3) #11
  %5 = icmp eq i8 %4, 4
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 2
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  %10 = select i1 %9, i8 3, i8 4
  ret i8 %10

11:                                               ; preds = %1
  ret i8 %4
}

declare zeroext i8 @_ZN2rx10RendererGL14getResetStatusEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL17insertEventMarkerEiPKc(%"class.rx::ContextGL"* nocapture readonly, i32, i8*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  tail call void @_ZN2rx10RendererGL17insertEventMarkerEiPKc(%"class.rx::RendererGL"* %5, i32 %1, i8* %2) #11
  ret i32 0
}

declare void @_ZN2rx10RendererGL17insertEventMarkerEiPKc(%"class.rx::RendererGL"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL15pushGroupMarkerEiPKc(%"class.rx::ContextGL"* nocapture readonly, i32, i8*) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  tail call void @_ZN2rx10RendererGL15pushGroupMarkerEiPKc(%"class.rx::RendererGL"* %5, i32 %1, i8* %2) #11
  ret i32 0
}

declare void @_ZN2rx10RendererGL15pushGroupMarkerEiPKc(%"class.rx::RendererGL"*, i32, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL14popGroupMarkerEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  tail call void @_ZN2rx10RendererGL14popGroupMarkerEv(%"class.rx::RendererGL"* %3) #11
  ret i32 0
}

declare void @_ZN2rx10RendererGL14popGroupMarkerEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL14pushDebugGroupEPKN2gl7ContextEjjRKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %6, align 8
  tail call void @_ZN2rx10RendererGL14pushDebugGroupEjjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.rx::RendererGL"* %7, i32 %2, i32 %3, %"class.std::__1::basic_string"* dereferenceable(24) %4) #11
  ret i32 0
}

declare void @_ZN2rx10RendererGL14pushDebugGroupEjjRKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.rx::RendererGL"*, i32, i32, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL13popDebugGroupEPKN2gl7ContextE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  tail call void @_ZN2rx10RendererGL13popDebugGroupEv(%"class.rx::RendererGL"* %4) #11
  ret i32 0
}

declare void @_ZN2rx10RendererGL13popDebugGroupEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm64EmmEES9_(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, %"class.angle::BitSetT.168"* dereferenceable(8), %"class.angle::BitSetT.168"* dereferenceable(8)) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %6, i64 0, i32 3
  %8 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %7, align 8
  %9 = tail call i32 @_ZN2rx14StateManagerGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm64EmmEES9_(%"class.rx::StateManagerGL"* %8, %"class.gl::Context"* %1, %"class.angle::BitSetT.168"* dereferenceable(8) %2, %"class.angle::BitSetT.168"* dereferenceable(8) %3) #11
  ret i32 %9
}

declare i32 @_ZN2rx14StateManagerGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm64EmmEES9_(%"class.rx::StateManagerGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.168"* dereferenceable(8), %"class.angle::BitSetT.168"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL14getGPUDisjointEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call i32 @_ZN2rx10RendererGL14getGPUDisjointEv(%"class.rx::RendererGL"* %3) #11
  ret i32 %4
}

declare i32 @_ZN2rx10RendererGL14getGPUDisjointEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2rx9ContextGL12getTimestampEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call i64 @_ZN2rx10RendererGL12getTimestampEv(%"class.rx::RendererGL"* %3) #11
  ret i64 %4
}

declare i64 @_ZN2rx10RendererGL12getTimestampEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL13onMakeCurrentEPKN2gl7ContextE(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 3
  %6 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %5, align 8
  %7 = tail call i32 @_ZN2rx14StateManagerGL13onMakeCurrentEPKN2gl7ContextE(%"class.rx::StateManagerGL"* %6, %"class.gl::Context"* %1) #11
  ret i32 %7
}

declare i32 @_ZN2rx14StateManagerGL13onMakeCurrentEPKN2gl7ContextE(%"class.rx::StateManagerGL"*, %"class.gl::Context"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL15onUnMakeCurrentEPKN2gl7ContextE(%"class.rx::ContextGL"*, %"class.gl::Context"*) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 20, i32 72, i32 4
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 3
  %10 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %9, align 8
  tail call void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"* %10, i32 36160, i32 0) #11
  br label %11

11:                                               ; preds = %2, %8
  %12 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 0
  %13 = tail call i32 @_ZN2rx11ContextImpl15onUnMakeCurrentEPKN2gl7ContextE(%"class.rx::ContextImpl"* %12, %"class.gl::Context"* %1) #11
  ret i32 %13
}

declare void @_ZN2rx14StateManagerGL15bindFramebufferEjj(%"class.rx::StateManagerGL"*, i32, i32) local_unnamed_addr #3

declare i32 @_ZN2rx11ContextImpl15onUnMakeCurrentEPKN2gl7ContextE(%"class.rx::ContextImpl"*, %"class.gl::Context"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx9ContextGL13getNativeCapsEv(%"struct.gl::Caps"* noalias sret, %"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %1, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = tail call dereferenceable(872) %"struct.gl::Caps"* @_ZNK2rx10RendererGL13getNativeCapsEv(%"class.rx::RendererGL"* %4) #11
  tail call void @_ZN2gl4CapsC1ERKS0_(%"struct.gl::Caps"* %0, %"struct.gl::Caps"* dereferenceable(872) %5) #11
  ret void
}

declare dereferenceable(872) %"struct.gl::Caps"* @_ZNK2rx10RendererGL13getNativeCapsEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

declare void @_ZN2gl4CapsC1ERKS0_(%"struct.gl::Caps"*, %"struct.gl::Caps"* dereferenceable(872)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(7264) %"class.gl::TextureCapsMap"* @_ZNK2rx9ContextGL20getNativeTextureCapsEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call dereferenceable(7264) %"class.gl::TextureCapsMap"* @_ZNK2rx10RendererGL20getNativeTextureCapsEv(%"class.rx::RendererGL"* %3) #11
  ret %"class.gl::TextureCapsMap"* %4
}

declare dereferenceable(7264) %"class.gl::TextureCapsMap"* @_ZNK2rx10RendererGL20getNativeTextureCapsEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(228) %"struct.gl::Extensions"* @_ZNK2rx9ContextGL19getNativeExtensionsEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call dereferenceable(228) %"struct.gl::Extensions"* @_ZNK2rx10RendererGL19getNativeExtensionsEv(%"class.rx::RendererGL"* %3) #11
  ret %"struct.gl::Extensions"* %4
}

declare dereferenceable(228) %"struct.gl::Extensions"* @_ZNK2rx10RendererGL19getNativeExtensionsEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(12) %"struct.gl::Limitations"* @_ZNK2rx9ContextGL20getNativeLimitationsEv(%"class.rx::ContextGL"* nocapture readonly) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = tail call dereferenceable(12) %"struct.gl::Limitations"* @_ZNK2rx10RendererGL20getNativeLimitationsEv(%"class.rx::RendererGL"* %3) #11
  ret %"struct.gl::Limitations"* %4
}

declare dereferenceable(12) %"struct.gl::Limitations"* @_ZNK2rx10RendererGL20getNativeLimitationsEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::BlitGL"* @_ZNK2rx9ContextGL10getBlitterEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 4
  %5 = load %"class.rx::BlitGL"*, %"class.rx::BlitGL"** %4, align 8
  ret %"class.rx::BlitGL"* %5
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.rx::ClearMultiviewGL"* @_ZNK2rx9ContextGL19getMultiviewClearerEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 5
  %5 = load %"class.rx::ClearMultiviewGL"*, %"class.rx::ClearMultiviewGL"** %4, align 8
  ret %"class.rx::ClearMultiviewGL"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL15dispatchComputeEPKN2gl7ContextEjjj(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i32, i32, i32) unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %7 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %6, align 8
  %8 = tail call i32 @_ZN2rx10RendererGL15dispatchComputeEPKN2gl7ContextEjjj(%"class.rx::RendererGL"* %7, %"class.gl::Context"* %1, i32 %2, i32 %3, i32 %4) #11
  ret i32 %8
}

declare i32 @_ZN2rx10RendererGL15dispatchComputeEPKN2gl7ContextEjjj(%"class.rx::RendererGL"*, %"class.gl::Context"*, i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL23dispatchComputeIndirectEPKN2gl7ContextEl(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"*, i64) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = tail call i32 @_ZN2rx10RendererGL23dispatchComputeIndirectEPKN2gl7ContextEl(%"class.rx::RendererGL"* %5, %"class.gl::Context"* %1, i64 %2) #11
  ret i32 %6
}

declare i32 @_ZN2rx10RendererGL23dispatchComputeIndirectEPKN2gl7ContextEl(%"class.rx::RendererGL"*, %"class.gl::Context"*, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL13memoryBarrierEPKN2gl7ContextEj(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = tail call i32 @_ZN2rx10RendererGL13memoryBarrierEj(%"class.rx::RendererGL"* %5, i32 %2) #11
  ret i32 %6
}

declare i32 @_ZN2rx10RendererGL13memoryBarrierEj(%"class.rx::RendererGL"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx9ContextGL21memoryBarrierByRegionEPKN2gl7ContextEj(%"class.rx::ContextGL"* nocapture readonly, %"class.gl::Context"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %5 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %4, align 8
  %6 = tail call i32 @_ZN2rx10RendererGL21memoryBarrierByRegionEj(%"class.rx::RendererGL"* %5, i32 %2) #11
  ret i32 %6
}

declare i32 @_ZN2rx10RendererGL21memoryBarrierByRegionEj(%"class.rx::RendererGL"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL27setMaxShaderCompilerThreadsEj(%"class.rx::ContextGL"* nocapture readonly, i32) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  tail call void @_ZN2rx10RendererGL27setMaxShaderCompilerThreadsEj(%"class.rx::RendererGL"* %4, i32 %1) #11
  ret void
}

declare void @_ZN2rx10RendererGL27setMaxShaderCompilerThreadsEj(%"class.rx::RendererGL"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL17invalidateTextureEN2gl11TextureTypeE(%"class.rx::ContextGL"* nocapture readonly, i8 zeroext) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %3, align 8
  %5 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %4, i64 0, i32 3
  %6 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %5, align 8
  tail call void @_ZN2rx14StateManagerGL17invalidateTextureEN2gl11TextureTypeE(%"class.rx::StateManagerGL"* %6, i8 zeroext %1) #11
  ret void
}

declare void @_ZN2rx14StateManagerGL17invalidateTextureEN2gl11TextureTypeE(%"class.rx::StateManagerGL"*, i8 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx9ContextGL13validateStateEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  %4 = getelementptr inbounds %"class.rx::RendererGL", %"class.rx::RendererGL"* %3, i64 0, i32 3
  %5 = load %"class.rx::StateManagerGL"*, %"class.rx::StateManagerGL"** %4, align 8
  tail call void @_ZNK2rx14StateManagerGL13validateStateEv(%"class.rx::StateManagerGL"* %5) #11
  ret void
}

declare void @_ZNK2rx14StateManagerGL13validateStateEv(%"class.rx::StateManagerGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL33setNeedsFlushBeforeDeleteTexturesEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  tail call void @_ZN2rx10RendererGL33setNeedsFlushBeforeDeleteTexturesEv(%"class.rx::RendererGL"* %3) #11
  ret void
}

declare void @_ZN2rx10RendererGL33setNeedsFlushBeforeDeleteTexturesEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx9ContextGL36flushIfNecessaryBeforeDeleteTexturesEv(%"class.rx::ContextGL"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %0, i64 0, i32 1, i32 0
  %3 = load %"class.rx::RendererGL"*, %"class.rx::RendererGL"** %2, align 8
  tail call void @_ZN2rx10RendererGL36flushIfNecessaryBeforeDeleteTexturesEv(%"class.rx::RendererGL"* %3) #11
  ret void
}

declare void @_ZN2rx10RendererGL36flushIfNecessaryBeforeDeleteTexturesEv(%"class.rx::RendererGL"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11OverlayImplD2Ev(%"class.rx::OverlayImpl"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11OverlayImplD0Ev(%"class.rx::OverlayImpl"*) unnamed_addr #2 comdat align 2 {
  %2 = bitcast %"class.rx::OverlayImpl"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11OverlayImpl9onDestroyEPKN2gl7ContextE(%"class.rx::OverlayImpl"*, %"class.gl::Context"*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11ContextImpl9onDestroyEPKN2gl7ContextE(%"class.rx::ContextImpl"*, %"class.gl::Context"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare i32 @_ZN2rx11ContextImpl19handleNoopDrawEventEv(%"class.rx::ContextImpl"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2rx11ContextImpl23framebufferFetchBarrierEv(%"class.rx::ContextImpl"*) unnamed_addr #2 comdat align 2 {
  ret void
}

declare zeroext i8 @_ZNK2rx11ContextImpl18getContextPriorityEv(%"class.rx::ContextImpl"*) unnamed_addr #3

declare void @_ZN2rx11ContextImpl19releaseHighPowerGPUEPN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::ContextImpl"*, %"class.gl::Context"*) unnamed_addr #3

declare void @_ZN2rx11ContextImpl21reacquireHighPowerGPUEPN2gl7ContextE(%"class.egl::Error"* sret, %"class.rx::ContextImpl"*, %"class.gl::Context"*) unnamed_addr #3

declare i32 @_ZNK2rx13VertexArrayGL18syncClientSideDataEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiii(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.166"* dereferenceable(8), i32, i32, i32) local_unnamed_addr #3

declare void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*) local_unnamed_addr #3

declare i32 @_ZN2rx14StateManagerGL24setPrimitiveRestartIndexEPKN2gl7ContextEj(%"class.rx::StateManagerGL"*, %"class.gl::Context"*, i32) local_unnamed_addr #3

declare i32 @_ZN2gl24GetPrimitiveRestartIndexENS_16DrawElementsTypeE(i64) local_unnamed_addr #3

declare i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.166"* dereferenceable(8), i32, i32, i64, i8*, i32, i1 zeroext, i8**) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #10

attributes #0 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!5 = distinct !{!5, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!6 = !{i64 0, i64 65}
