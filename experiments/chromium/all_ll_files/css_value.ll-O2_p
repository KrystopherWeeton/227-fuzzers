; ModuleID = '../../third_party/blink/renderer/core/css/css_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.143", %"class.std::__1::unique_ptr.143", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.159", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.177", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.184", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.16", %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.34", %"class.std::__1::unique_ptr.40", %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.58", %"class.std::__1::unique_ptr.65", %"class.std::__1::unique_ptr.72", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.100", %"class.std::__1::unique_ptr.123", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__atomic_base.45" }
%"struct.std::__1::__atomic_base.45" = type { %"struct.std::__1::__cxx_atomic_impl.46" }
%"struct.std::__1::__cxx_atomic_impl.46" = type { %"struct.std::__1::__cxx_atomic_base_impl.47" }
%"struct.std::__1::__cxx_atomic_base_impl.47" = type { i64 }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::Worklist.54"* }
%"class.blink::Worklist.54" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.blink::Worklist.61"* }
%"class.blink::Worklist.61" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.65" = type { %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { %"class.blink::Worklist.68"* }
%"class.blink::Worklist.68" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.blink::Worklist.75"* }
%"class.blink::Worklist.75" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::Worklist.82"* }
%"class.blink::Worklist.82" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::Worklist.89"* }
%"class.blink::Worklist.89" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.blink::Worklist.96"* }
%"class.blink::Worklist.96" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.43" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.103", %"class.std::__1::__compressed_pair.110", %"class.std::__1::__compressed_pair.115", %"class.std::__1::__compressed_pair.117", [4 x i8] }>
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105", %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.107" }
%"class.std::__1::__compressed_pair.107" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"struct.std::__1::__compressed_pair_elem.108" = type { i64 }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { float }
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.126", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.126" = type { %"class.std::__1::__compressed_pair.127" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.135" }
%"class.WTF::Vector.135" = type { %"class.WTF::VectorBuffer.136" }
%"class.WTF::VectorBuffer.136" = type { %"class.WTF::VectorBufferBase.137" }
%"class.WTF::VectorBufferBase.137" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.143" = type { %"class.std::__1::__compressed_pair.144" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.151" }
%"class.WTF::VectorBuffer.151" = type { %"class.WTF::VectorBufferBase.152" }
%"class.WTF::VectorBufferBase.152" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.165" }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.54"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.61"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.68"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.75"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.82"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.375", i64 }
%"class.std::__1::vector.375" = type { %"class.std::__1::__vector_base.376" }
%"class.std::__1::__vector_base.376" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.377" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.183 }
%class.scoped_refptr.183 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.184" = type { %"struct.std::__1::__atomic_base.185" }
%"struct.std::__1::__atomic_base.185" = type { %"struct.std::__1::__cxx_atomic_impl.186" }
%"struct.std::__1::__cxx_atomic_impl.186" = type { %"struct.std::__1::__cxx_atomic_base_impl.187" }
%"struct.std::__1::__cxx_atomic_base_impl.187" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Length" = type <{ %union.anon, i8, i8, i8, i8 }>
%union.anon = type { i32 }
%"class.blink::CSSIdentifierValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValueList" = type { %"class.blink::CSSValue", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSFontFaceSrcValue" = type { %"class.blink::CSSValue", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"struct.blink::Referrer", i8, %class.scoped_refptr.3, i32, i8, %"class.blink::Member.188" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%class.scoped_refptr.3 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.188" = type { %"class.blink::MemberBase.189" }
%"class.blink::MemberBase.189" = type { %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"* }
%"class.blink::CSSFontFaceSrcValue::FontResourceHelper" = type { %"class.blink::FontResourceClient.base", [7 x i8] }
%"class.blink::FontResourceClient.base" = type { %"class.blink::ResourceClient.base" }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.192", i8 }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.192" = type { %"class.blink::MemberBase.193" }
%"class.blink::MemberBase.193" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.229", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.349", %"class.blink::ResourceResponse", %class.scoped_refptr.351, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.196 }
%union.anon.196 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.203", i8, %"class.absl::optional.214", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.197" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::KURL"* }
%"class.absl::optional.203" = type { %"class.absl::optional_internal::optional_data.204" }
%"class.absl::optional_internal::optional_data.204" = type { %"class.absl::optional_internal::optional_data_base.205" }
%"class.absl::optional_internal::optional_data_base.205" = type { %"class.absl::optional_internal::optional_data_dtor_base.206" }
%"class.absl::optional_internal::optional_data_dtor_base.206" = type { i8, [7 x i8], %union.anon.207 }
%union.anon.207 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.210 }
%union.anon.210 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional.214" = type { %"class.absl::optional_internal::optional_data.215" }
%"class.absl::optional_internal::optional_data.215" = type { %"class.absl::optional_internal::optional_data_base.216" }
%"class.absl::optional_internal::optional_data_base.216" = type { %"class.absl::optional_internal::optional_data_dtor_base.217" }
%"class.absl::optional_internal::optional_data_dtor_base.217" = type { i8, %union.anon.218 }
%union.anon.218 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.219", %"class.WTF::Vector.224" }
%"class.WTF::Vector.219" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { i32*, i32, i32 }
%"class.WTF::Vector.224" = type { %"class.WTF::VectorBuffer.225" }
%"class.WTF::VectorBuffer.225" = type { %"class.WTF::VectorBufferBase.226" }
%"class.WTF::VectorBufferBase.226" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.229" = type { %"class.WTF::VectorBuffer.230" }
%"class.WTF::VectorBuffer.230" = type { %"class.WTF::VectorBufferBase.231" }
%"class.WTF::VectorBufferBase.231" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.330" }
%"class.WTF::HashMap.330" = type { %"class.WTF::HashTable.331" }
%"class.WTF::HashTable.331" = type <{ %"struct.WTF::KeyValuePair.333"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.333" = type <{ %"class.blink::WeakMember.567", i32, [4 x i8] }>
%"class.blink::WeakMember.567" = type { %"class.blink::MemberBase.568" }
%"class.blink::MemberBase.568" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.192", i8, [7 x i8] }>
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"class.blink::WeakMember.338"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.338" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.339", i8, i8, %class.scoped_refptr.3, %class.scoped_refptr.344, %class.scoped_refptr.346 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.339" = type { %"class.WTF::HashTable.340" }
%"class.WTF::HashTable.340" = type <{ %"struct.std::__1::pair.343"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.343" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.344 = type { %"class.base::RefCountedData.345"* }
%"class.base::RefCountedData.345" = type opaque
%class.scoped_refptr.346 = type { %"class.base::RefCountedData.347"* }
%"class.base::RefCountedData.347" = type opaque
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.293" }
%"class.base::time_internal::TimeBase.293" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.348 }
%class.scoped_refptr.348 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.237, %class.scoped_refptr.237, %class.scoped_refptr.237, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.243, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.257", %"class.absl::optional.262", %"class.absl::optional.272", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.282", %"class.absl::optional.272", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.272", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.282", %"class.absl::optional.287", i8, %class.scoped_refptr.292 }
%"class.base::TimeDelta" = type { i64 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.232" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.232" = type { %"class.absl::optional_internal::optional_data.233" }
%"class.absl::optional_internal::optional_data.233" = type { %"class.absl::optional_internal::optional_data_base.234" }
%"class.absl::optional_internal::optional_data_base.234" = type { %"class.absl::optional_internal::optional_data_dtor_base.235" }
%"class.absl::optional_internal::optional_data_dtor_base.235" = type { i8, %union.anon.236 }
%union.anon.236 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.237 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.373", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.232", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.237 }
%"class.WTF::RefCounted.373" = type { %"class.base::RefCounted.374" }
%"class.base::RefCounted.374" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.238" }
%"class.WTF::HashMap.238" = type { %"class.WTF::HashTable.239" }
%"class.WTF::HashTable.239" = type <{ %"struct.WTF::KeyValuePair.242"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.242" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.243 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.244", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.251, i8, %"class.url::Origin" }
%"class.base::RefCounted.244" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.245"*, %"class.std::__1::unique_ptr.245"*, %"class.std::__1::__compressed_pair.246" }
%"class.std::__1::unique_ptr.245" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.247" }
%"struct.std::__1::__compressed_pair_elem.247" = type { %"class.std::__1::unique_ptr.245"* }
%class.scoped_refptr.251 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.252" }
%"struct.std::__1::atomic.252" = type { %"struct.std::__1::__atomic_base.253" }
%"struct.std::__1::__atomic_base.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i32 }
%"class.absl::optional.257" = type { %"class.absl::optional_internal::optional_data.258" }
%"class.absl::optional_internal::optional_data.258" = type { %"class.absl::optional_internal::optional_data_base.259" }
%"class.absl::optional_internal::optional_data_base.259" = type { %"class.absl::optional_internal::optional_data_dtor_base.260" }
%"class.absl::optional_internal::optional_data_dtor_base.260" = type { i8, %union.anon.261 }
%union.anon.261 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.262" = type { %"class.absl::optional_internal::optional_data.263" }
%"class.absl::optional_internal::optional_data.263" = type { %"class.absl::optional_internal::optional_data_base.264" }
%"class.absl::optional_internal::optional_data_base.264" = type { %"class.absl::optional_internal::optional_data_dtor_base.265" }
%"class.absl::optional_internal::optional_data_dtor_base.265" = type { i8, %union.anon.266 }
%union.anon.266 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.267", %"class.WTF::Vector.224", %"class.WTF::String" }
%"class.WTF::Vector.267" = type { %"class.WTF::VectorBuffer.268" }
%"class.WTF::VectorBuffer.268" = type { %"class.WTF::VectorBufferBase.269" }
%"class.WTF::VectorBufferBase.269" = type { %class.scoped_refptr.237*, i32, i32 }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.277", %"class.absl::optional.277" }
%"class.absl::optional.277" = type { %"class.absl::optional_internal::optional_data.278" }
%"class.absl::optional_internal::optional_data.278" = type { %"class.absl::optional_internal::optional_data_base.279" }
%"class.absl::optional_internal::optional_data_base.279" = type { %"class.absl::optional_internal::optional_data_dtor_base.280" }
%"class.absl::optional_internal::optional_data_dtor_base.280" = type { i8, %union.anon.281 }
%union.anon.281 = type { %"class.base::TimeDelta" }
%"class.absl::optional.272" = type { %"class.absl::optional_internal::optional_data.273" }
%"class.absl::optional_internal::optional_data.273" = type { %"class.absl::optional_internal::optional_data_base.274" }
%"class.absl::optional_internal::optional_data_base.274" = type { %"class.absl::optional_internal::optional_data_dtor_base.275" }
%"class.absl::optional_internal::optional_data_dtor_base.275" = type { i8, %union.anon.276 }
%union.anon.276 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.282" = type { %"class.absl::optional_internal::optional_data.283" }
%"class.absl::optional_internal::optional_data.283" = type { %"class.absl::optional_internal::optional_data_base.284" }
%"class.absl::optional_internal::optional_data_base.284" = type { %"class.absl::optional_internal::optional_data_dtor_base.285" }
%"class.absl::optional_internal::optional_data_dtor_base.285" = type { i8, %union.anon.286 }
%union.anon.286 = type { %"class.base::UnguessableToken" }
%"class.absl::optional.287" = type { %"class.absl::optional_internal::optional_data.288" }
%"class.absl::optional_internal::optional_data.288" = type { %"class.absl::optional_internal::optional_data_base.289" }
%"class.absl::optional_internal::optional_data_base.289" = type { %"class.absl::optional_internal::optional_data_dtor_base.290" }
%"class.absl::optional_internal::optional_data_dtor_base.290" = type { i8, %union.anon.291 }
%union.anon.291 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.292 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.559", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.559" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.560" }
%"class.std::__1::vector.560" = type { %"class.std::__1::__vector_base.561" }
%"class.std::__1::__vector_base.561" = type { i32*, i32*, %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.563" = type { i32* }
%"class.blink::Member.349" = type { %"class.blink::MemberBase.350" }
%"class.blink::MemberBase.350" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.294", %class.scoped_refptr.309, %class.scoped_refptr.310, %"struct.blink::CacheControlHeader", %"class.absl::optional.277", %"class.absl::optional.311", %"class.absl::optional.311", %"class.absl::optional.311", i64, %"class.blink::KURL", %"class.WTF::Vector.316", %"class.WTF::String", %"class.WTF::Vector.224", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.282", %"class.WTF::Vector.224", %"class.blink::KURL", %"class.absl::optional.321" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.294" = type { %"class.absl::optional_internal::optional_data.295" }
%"class.absl::optional_internal::optional_data.295" = type { %"class.absl::optional_internal::optional_data_base.296" }
%"class.absl::optional_internal::optional_data_base.296" = type { %"class.absl::optional_internal::optional_data_dtor_base.297" }
%"class.absl::optional_internal::optional_data_dtor_base.297" = type { i8, %union.anon.298 }
%union.anon.298 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.224", %"class.WTF::String", i64, i64, %"class.WTF::Vector.299", %"class.WTF::Vector.304" }
%"class.WTF::Vector.299" = type { %"class.WTF::VectorBuffer.300" }
%"class.WTF::VectorBuffer.300" = type { %"class.WTF::VectorBufferBase.301" }
%"class.WTF::VectorBufferBase.301" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.WTF::Vector.304" = type { %"class.WTF::VectorBuffer.305" }
%"class.WTF::VectorBuffer.305" = type { %"class.WTF::VectorBufferBase.306" }
%"class.WTF::VectorBufferBase.306" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.309 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.310 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.311" = type { %"class.absl::optional_internal::optional_data.312" }
%"class.absl::optional_internal::optional_data.312" = type { %"class.absl::optional_internal::optional_data_base.313" }
%"class.absl::optional_internal::optional_data_base.313" = type { %"class.absl::optional_internal::optional_data_dtor_base.314" }
%"class.absl::optional_internal::optional_data_dtor_base.314" = type { i8, %union.anon.315 }
%union.anon.315 = type { %"class.base::Time" }
%"class.WTF::Vector.316" = type { %"class.WTF::VectorBuffer.317" }
%"class.WTF::VectorBuffer.317" = type { %"class.WTF::VectorBufferBase.318" }
%"class.WTF::VectorBufferBase.318" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.321" = type { %"class.absl::optional_internal::optional_data.322" }
%"class.absl::optional_internal::optional_data.322" = type { %"class.absl::optional_internal::optional_data_base.323" }
%"class.absl::optional_internal::optional_data_base.323" = type { %"class.absl::optional_internal::optional_data_dtor_base.324" }
%"class.absl::optional_internal::optional_data_dtor_base.324" = type { i8, %union.anon.325 }
%union.anon.325 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.351 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.352", i64, %"class.WTF::Vector.354", %"class.WTF::Vector.359" }
%"class.WTF::RefCounted.352" = type { %"class.base::RefCounted.353" }
%"class.base::RefCounted.353" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.354" = type { %"class.WTF::VectorBuffer.355" }
%"class.WTF::VectorBuffer.355" = type { %"class.WTF::VectorBufferBase.356" }
%"class.WTF::VectorBufferBase.356" = type { i8*, i32, i32 }
%"class.WTF::Vector.359" = type { %"class.WTF::VectorBuffer.360" }
%"class.WTF::VectorBuffer.360" = type { %"class.WTF::VectorBufferBase.361" }
%"class.WTF::VectorBufferBase.361" = type { %"class.std::__1::unique_ptr.362"*, i32, i32 }
%"class.std::__1::unique_ptr.362" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.365", %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.365" = type { %"struct.std::__1::__compressed_pair_elem.366" }
%"struct.std::__1::__compressed_pair_elem.366" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.108" }
%"class.blink::CSSImageValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %"struct.blink::Referrer", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.382", i32, i8, [3 x i8] }>
%"class.blink::Member.382" = type { %"class.blink::MemberBase.383" }
%"class.blink::MemberBase.383" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::cssvalue::CSSCrossfadeValue" = type { %"class.blink::CSSImageGeneratorValue", %"class.blink::ThreadState::PrefinalizerRegistration.404", %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.407", %"class.blink::Member.409", %"class.blink::Member.409", %"class.blink::cssvalue::CSSCrossfadeValue::CrossfadeSubimageObserverProxy" }
%"class.blink::CSSImageGeneratorValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap.386", %"class.blink::GeneratedImageCache", %"class.blink::SelfKeepAlive" }
%"class.WTF::HashMap.386" = type { %"class.WTF::HashTable.387" }
%"class.WTF::HashTable.387" = type <{ %"struct.WTF::KeyValuePair.390"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.390" = type opaque
%"class.blink::GeneratedImageCache" = type { %"class.WTF::HashCountedSet.391", %"class.WTF::HashMap.397" }
%"class.WTF::HashCountedSet.391" = type { %"class.WTF::HashMap.392" }
%"class.WTF::HashMap.392" = type { %"class.WTF::HashTable.393" }
%"class.WTF::HashTable.393" = type <{ %"struct.WTF::KeyValuePair.396"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.396" = type opaque
%"class.WTF::HashMap.397" = type { %"class.WTF::HashTable.398" }
%"class.WTF::HashTable.398" = type <{ %"struct.WTF::KeyValuePair.401"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.401" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.402" }
%"class.blink::Persistent.402" = type { %"class.blink::PersistentBase.403" }
%"class.blink::PersistentBase.403" = type { %"class.blink::CSSImageGeneratorValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ThreadState::PrefinalizerRegistration.404" = type { i8 }
%"class.blink::Member.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::CSSValue"* }
%"class.blink::Member.407" = type { %"class.blink::MemberBase.408" }
%"class.blink::MemberBase.408" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::Member.409" = type { %"class.blink::MemberBase.410" }
%"class.blink::MemberBase.410" = type { %"class.blink::ImageResourceContent"* }
%"class.blink::ImageResourceContent" = type { %"class.blink::ImageObserver", i8, i8, i8, i32, %"class.blink::Member.413", float, i8, %class.scoped_refptr.415, %"class.WTF::HashCountedSet.425", %"class.WTF::HashCountedSet.425" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.413" = type { %"class.blink::MemberBase.414" }
%"class.blink::MemberBase.414" = type { %"class.blink::ImageResourceInfo"* }
%"class.blink::ImageResourceInfo" = type opaque
%class.scoped_refptr.415 = type { %"class.blink::Image"* }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.351, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.419" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.416" }
%"class.base::RefCountedThreadSafe.416" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.417" }
%"class.blink::PersistentBase.417" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.418" }
%"class.blink::PersistentNodePtr.418" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.419" = type { %"class.std::__1::__compressed_pair.420" }
%"class.std::__1::__compressed_pair.420" = type { %"struct.std::__1::__compressed_pair_elem.421" }
%"struct.std::__1::__compressed_pair_elem.421" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.WTF::HashCountedSet.425" = type { %"class.WTF::HashMap.426" }
%"class.WTF::HashMap.426" = type { %"class.WTF::HashTable.427" }
%"class.WTF::HashTable.427" = type <{ %"struct.WTF::KeyValuePair.430"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.430" = type <{ %"class.blink::ImageResourceObserver"*, i32, [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::cssvalue::CSSCrossfadeValue::CrossfadeSubimageObserverProxy" = type <{ %"class.blink::ImageResourceObserver", %"class.blink::Member.431", i8, [7 x i8] }>
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::cssvalue::CSSCrossfadeValue"* }
%"class.blink::Document" = type opaque
%"class.blink::cssvalue::CSSURIValue" = type { %"class.blink::CSSValue", %"class.WTF::AtomicString", i8, %"class.blink::Member.438", %"class.WTF::AtomicString" }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.442", %"class.blink::HeapHashMap.444" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::Element"* }
%"class.blink::Element" = type opaque
%"class.blink::HeapHashMap.444" = type { %"class.WTF::HashMap.447" }
%"class.WTF::HashMap.447" = type { %"class.WTF::HashTable.448" }
%"class.WTF::HashTable.448" = type <{ %"struct.WTF::KeyValuePair.450"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.450" = type opaque
%"class.blink::cssvalue::CSSBasicShapeCircleValue" = type { %"class.blink::CSSValue", %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.405" }
%"class.blink::cssvalue::CSSBasicShapeEllipseValue" = type { %"class.blink::CSSValue", %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.405" }
%"class.blink::cssvalue::CSSBasicShapePolygonValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::HeapVector.451", i32, [4 x i8] }>
%"class.blink::HeapVector.451" = type { %"class.WTF::Vector.454" }
%"class.WTF::Vector.454" = type { %"class.WTF::VectorBuffer.455" }
%"class.WTF::VectorBuffer.455" = type { %"class.WTF::VectorBufferBase.456" }
%"class.WTF::VectorBufferBase.456" = type { %"class.blink::Member.407"*, i32, i32 }
%"class.blink::cssvalue::CSSBasicShapeInsetValue" = type { %"class.blink::CSSValue", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.458", %"class.blink::Member.458", %"class.blink::Member.458", %"class.blink::Member.458" }
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::CSSValuePair"* }
%"class.blink::CSSValuePair" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member", %"class.blink::Member", i32, [4 x i8] }>
%"class.blink::cssvalue::CSSBorderImageSliceValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member.460", i8, [7 x i8] }>
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::CSSQuadValue"* }
%"class.blink::CSSQuadValue" = type { %"class.blink::CSSValue", i32, %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.405", %"class.blink::Member.405" }
%"class.blink::cssvalue::CSSCounterValue" = type { %"class.blink::CSSValue", %"class.blink::Member.462", %"class.blink::Member.462", %"class.blink::Member.464" }
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::CSSCustomIdentValue"* }
%"class.blink::CSSCustomIdentValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::CSSStringValue"* }
%"class.blink::CSSStringValue" = type { %"class.blink::CSSValue", %"class.WTF::String" }
%"class.blink::cssvalue::CSSCursorImageValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member", %"class.blink::IntPoint", i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::cssvalue::CSSFontFeatureValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::cssvalue::CSSFontStyleRangeValue" = type { %"class.blink::CSSValue", %"class.blink::Member.466", %"class.blink::Member.468" }
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::CSSIdentifierValue"* }
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::CSSValueList"* }
%"class.blink::cssvalue::CSSFontVariationValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", float, [4 x i8] }>
%"class.blink::cssvalue::CSSLayoutFunctionValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member.462", i8, [7 x i8] }>
%"class.blink::cssvalue::CSSLinearGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.476" }
%"class.blink::cssvalue::CSSGradientValue.base" = type <{ %"class.blink::CSSImageGeneratorValue", %"class.blink::HeapVector.470", i32, i8 }>
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475", [32 x i8] }
%"class.WTF::VectorBufferBase.475" = type { %"struct.blink::cssvalue::CSSGradientColorStop"*, i32, i32 }
%"struct.blink::cssvalue::CSSGradientColorStop" = type { %"class.blink::Member.476", %"class.blink::Member" }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::cssvalue::CSSRadialGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.476", %"class.blink::Member.476", %"class.blink::Member.466", %"class.blink::Member.466", %"class.blink::Member.476", %"class.blink::Member.476" }
%"class.blink::cssvalue::CSSConicGradientValue" = type { %"class.blink::cssvalue::CSSGradientValue.base", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.476" }
%"class.blink::CSSPaintValue" = type <{ %"class.blink::CSSImageGeneratorValue", i8, [7 x i8], %"class.blink::Member.462", %"class.blink::HeapHashMap.480", %"class.blink::Member.487", %"class.blink::Member.493", %"class.WTF::Vector.496", i32, [4 x i8] }>
%"class.blink::HeapHashMap.480" = type { %"class.WTF::HashMap.483" }
%"class.WTF::HashMap.483" = type { %"class.WTF::HashTable.484" }
%"class.WTF::HashTable.484" = type <{ %"struct.WTF::KeyValuePair.486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.486" = type opaque
%"class.blink::Member.487" = type { %"class.blink::MemberBase.488" }
%"class.blink::MemberBase.488" = type { %"class.blink::CSSPaintValue::Observer"* }
%"class.blink::CSSPaintValue::Observer" = type { %"class.blink::CSSPaintImageGenerator::Observer", %"class.blink::Member.491" }
%"class.blink::CSSPaintImageGenerator::Observer" = type { i32 (...)** }
%"class.blink::Member.491" = type { %"class.blink::MemberBase.492" }
%"class.blink::MemberBase.492" = type { %"class.blink::CSSPaintValue"* }
%"class.blink::Member.493" = type { %"class.blink::MemberBase.494" }
%"class.blink::MemberBase.494" = type { %"class.blink::HeapVector.495"* }
%"class.blink::HeapVector.495" = type opaque
%"class.WTF::Vector.496" = type { %"class.WTF::VectorBuffer.497" }
%"class.WTF::VectorBuffer.497" = type { %"class.WTF::VectorBufferBase.498" }
%"class.WTF::VectorBufferBase.498" = type { %class.scoped_refptr.499*, i32, i32 }
%class.scoped_refptr.499 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.500", %"class.WTF::Vector.224", %"class.WTF::Vector.502", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.500" = type { %"class.base::RefCounted.501" }
%"class.base::RefCounted.501" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.502" = type { %"class.WTF::VectorBuffer.503" }
%"class.WTF::VectorBuffer.503" = type { %"class.WTF::VectorBufferBase.504" }
%"class.WTF::VectorBufferBase.504" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.505 }
%union.anon.505 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::cssvalue::CSSGridAutoRepeatValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::cssvalue::CSSGridIntegerRepeatValue" = type { %"class.blink::CSSValueList", i64 }
%"class.blink::cssvalue::CSSGridTemplateAreasValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap.511", i64, i64 }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.blink::cssvalue::CSSPathValue" = type <{ %"class.blink::CSSValue", [5 x i8], %class.scoped_refptr.516, i32, [4 x i8] }>
%class.scoped_refptr.516 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.519", %"class.std::__1::unique_ptr.530", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.517" }>
%"class.WTF::RefCounted.517" = type { %"class.base::RefCounted.518" }
%"class.base::RefCounted.518" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.519" = type { %"class.std::__1::__compressed_pair.520" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.521" }
%"struct.std::__1::__compressed_pair_elem.521" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type { %"class.WTF::Vector.522" }
%"class.WTF::Vector.522" = type { %"class.WTF::VectorBuffer.523" }
%"class.WTF::VectorBuffer.523" = type { %"class.WTF::VectorBufferBase.524" }
%"class.WTF::VectorBufferBase.524" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.530" = type { %"class.std::__1::__compressed_pair.531" }
%"class.std::__1::__compressed_pair.531" = type { %"struct.std::__1::__compressed_pair_elem.532" }
%"struct.std::__1::__compressed_pair_elem.532" = type { %"class.blink::Path"* }
%"class.blink::Path" = type opaque
%"class.blink::CSSNumericLiteralValue" = type { %"class.blink::CSSPrimitiveValue", double }
%"class.blink::CSSMathFunctionValue" = type { %"class.blink::CSSPrimitiveValue", %"class.blink::Member.536" }
%"class.blink::Member.536" = type { %"class.blink::MemberBase.537" }
%"class.blink::MemberBase.537" = type { %"class.blink::CSSMathExpressionNode"* }
%"class.blink::CSSMathExpressionNode" = type <{ i32 (...)**, i32, i8, i8, i8, i8 }>
%"class.blink::cssvalue::CSSRayValue" = type { %"class.blink::CSSValue", %"class.blink::Member.476", %"class.blink::Member.466", %"class.blink::Member.466" }
%"class.blink::ImmutableCSSPropertyValueSet" = type { %"class.blink::CSSPropertyValueSet", [4 x i8] }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::cssvalue::CSSReflectValue" = type { %"class.blink::CSSValue", %"class.blink::Member.544", %"class.blink::Member.407", %"class.blink::Member.405" }
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::CSSIdentifierValue"* }
%"class.blink::CSSShadowValue" = type { %"class.blink::CSSValue", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.407", %"class.blink::Member.544", %"class.blink::Member.405" }
%"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue" = type { %"class.blink::CSSValue", double, double, double, double }
%"class.blink::cssvalue::CSSStepsTimingFunctionValue" = type { %"class.blink::CSSValue", i32, i32 }
%"class.blink::cssvalue::CSSUnicodeRangeValue" = type { %"class.blink::CSSValue", i32, i32 }
%"class.blink::cssvalue::CSSContentDistributionValue" = type { %"class.blink::CSSValue", i32, i32, i32 }
%"class.blink::CSSVariableReferenceValue" = type { %"class.blink::CSSValue", %class.scoped_refptr.499, %"class.blink::Member.546" }
%"class.blink::Member.546" = type { %"class.blink::MemberBase.547" }
%"class.blink::MemberBase.547" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.3, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.550", i32, [4 x i8] }>
%"class.blink::WeakMember.550" = type { %"class.blink::MemberBase.551" }
%"class.blink::MemberBase.551" = type { %"class.blink::Document"* }
%"class.blink::cssvalue::CSSElementOffsetValue" = type { %"class.blink::CSSValue", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::cssvalue::CSSAxisValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::CSSFontFamilyValue" = type { %"class.blink::CSSValue", %"class.WTF::String" }
%"class.blink::CSSFunctionValue" = type <{ %"class.blink::CSSValueList", i32, [4 x i8] }>
%"class.blink::CSSInheritedValue" = type { %"class.blink::CSSValue" }
%"class.blink::cssvalue::CSSUnsetValue" = type { %"class.blink::CSSValue" }
%"class.blink::cssvalue::CSSRevertValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSInitialValue" = type { %"class.blink::CSSValue" }
%"class.blink::cssvalue::CSSGridLineNamesValue" = type { %"class.blink::CSSValueList" }
%"class.blink::CSSKeyframeShorthandValue" = type { %"class.blink::CSSValue", i32, %"class.blink::Member.540" }
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::ImmutableCSSPropertyValueSet"* }
%"class.blink::CSSInitialColorValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSImageSetValue" = type { %"class.blink::CSSValueList", %"class.blink::Member.382", float, %"class.WTF::Vector.433" }
%"class.WTF::Vector.433" = type { %"class.WTF::VectorBuffer.434" }
%"class.WTF::VectorBuffer.434" = type { %"class.WTF::VectorBufferBase.435" }
%"class.WTF::VectorBufferBase.435" = type { %"struct.blink::CSSImageSetValue::ImageWithScale"*, i32, i32 }
%"struct.blink::CSSImageSetValue::ImageWithScale" = type { i32, float }
%"class.blink::CSSCustomPropertyDeclaration" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.499, i32, [4 x i8] }>
%"class.blink::cssvalue::CSSPendingSubstitutionValue" = type { %"class.blink::CSSValue", i32, %"class.blink::Member.552" }
%"class.blink::Member.552" = type { %"class.blink::MemberBase.553" }
%"class.blink::MemberBase.553" = type { %"class.blink::CSSVariableReferenceValue"* }
%"class.blink::cssvalue::CSSPendingSystemFontValue" = type { %"class.blink::CSSValue", i32 }
%"class.blink::CSSInvalidVariableValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSCyclicVariableValue" = type { %"class.blink::CSSInvalidVariableValue" }
%"class.blink::CSSLightDarkValuePair" = type { %"class.blink::CSSValuePair.base", [4 x i8] }
%"class.blink::CSSValuePair.base" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.blink::Member", %"class.blink::Member", i32 }>
%"class.blink::cssvalue::CSSIdSelectorValue" = type { %"class.blink::CSSValue", %"class.WTF::AtomicString" }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.591", %"class.WTF::String" }
%"class.WTF::StringAppend.591" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.517", [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::StringTypeAdapter.592" = type { %"class.WTF::StringTypeAdapter.593" }
%"class.WTF::StringTypeAdapter.593" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>

$_ZNK5blink12CSSValuePair13CustomCSSTextEv = comdat any

$_ZN5blink19CSSFontFaceSrcValueD2Ev = comdat any

$_ZN5blink8CSSValue14AllocateObjectINS_18CSSIdentifierValueEEEPvm = comdat any

$_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv = comdat any

$_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN3WTF12VectorBufferIN5blink8cssvalue20CSSGradientColorStopELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink10TraceTraitINS_19CSSFontFaceSrcValue18FontResourceHelperEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK5blink8cssvalue15CSSCounterValue6EqualsERKS1_ = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.1 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.2 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.3 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.4 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.5 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.6 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSValue"* @_ZN5blink8CSSValue6CreateERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %16 [
    i8 0, label %5
    i8 3, label %5
    i8 4, label %5
    i8 6, label %5
    i8 7, label %5
    i8 9, label %5
    i8 1, label %13
    i8 2, label %13
    i8 8, label %13
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2
  %6 = tail call i8* @_ZN5blink8CSSValue14AllocateObjectINS_18CSSIdentifierValueEEEPvm(i64 8) #8
  %7 = bitcast i8* %6 to %"class.blink::CSSIdentifierValue"*
  tail call void @_ZN5blink18CSSIdentifierValueC1ERKNS_6LengthE(%"class.blink::CSSIdentifierValue"* %7, %"class.blink::Length"* dereferenceable(8) %0) #8
  %8 = getelementptr inbounds i8, i8* %6, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  %12 = bitcast i8* %6 to %"class.blink::CSSValue"*
  br label %16

13:                                               ; preds = %2, %2, %2
  %14 = tail call %"class.blink::CSSPrimitiveValue"* @_ZN5blink17CSSPrimitiveValue16CreateFromLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8) %0, float %1) #8
  %15 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %14, i64 0, i32 0
  br label %16

16:                                               ; preds = %2, %13, %5
  %17 = phi %"class.blink::CSSValue"* [ %15, %13 ], [ %12, %5 ], [ null, %2 ]
  ret %"class.blink::CSSValue"* %17
}

declare %"class.blink::CSSPrimitiveValue"* @_ZN5blink17CSSPrimitiveValue16CreateFromLengthERKNS_6LengthEf(%"class.blink::Length"* dereferenceable(8), float) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CSSValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp ugt i8 %3, 51
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  %7 = tail call zeroext i1 @_ZNK5blink12CSSValueList31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSValueList"* %6) #8
  br label %18

8:                                                ; preds = %1
  switch i8 %3, label %18 [
    i8 28, label %9
    i8 17, label %12
    i8 19, label %15
  ]

9:                                                ; preds = %8
  %10 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFontFaceSrcValue"*
  %11 = tail call zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSFontFaceSrcValue"* %10) #8
  br label %18

12:                                               ; preds = %8
  %13 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageValue"*
  %14 = tail call zeroext i1 @_ZNK5blink13CSSImageValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSImageValue"* %13) #8
  br label %18

15:                                               ; preds = %8
  %16 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %17 = tail call zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::cssvalue::CSSCrossfadeValue"* %16) #8
  br label %18

18:                                               ; preds = %8, %15, %12, %9, %5
  %19 = phi i1 [ %7, %5 ], [ %11, %9 ], [ %14, %12 ], [ %17, %15 ], [ false, %8 ]
  ret i1 %19
}

declare zeroext i1 @_ZNK5blink12CSSValueList31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSValueList"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSFontFaceSrcValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13CSSImageValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::CSSImageValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue31HasFailedOrCanceledSubresourcesEv(%"class.blink::cssvalue::CSSCrossfadeValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CSSValue13MayContainUrlEv(%"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp ugt i8 %3, 51
  br i1 %4, label %5, label %8

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  %7 = tail call zeroext i1 @_ZNK5blink12CSSValueList13MayContainUrlEv(%"class.blink::CSSValueList"* %6) #8
  ret i1 %7

8:                                                ; preds = %1
  %9 = icmp eq i8 %3, 17
  %10 = icmp eq i8 %3, 8
  %11 = or i1 %9, %10
  ret i1 %11
}

declare zeroext i1 @_ZNK5blink12CSSValueList13MayContainUrlEv(%"class.blink::CSSValueList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8CSSValue12ReResolveUrlERKNS_8DocumentE(%"class.blink::CSSValue"*, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %9 [
    i8 17, label %5
    i8 8, label %7
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageValue"*
  tail call void @_ZNK5blink13CSSImageValue12ReResolveURLERKNS_8DocumentE(%"class.blink::CSSImageValue"* %6, %"class.blink::Document"* %1) #8
  br label %13

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSURIValue"*
  tail call void @_ZNK5blink8cssvalue11CSSURIValue12ReResolveUrlERKNS_8DocumentE(%"class.blink::cssvalue::CSSURIValue"* %8, %"class.blink::Document"* %1) #8
  br label %13

9:                                                ; preds = %2
  %10 = icmp ugt i8 %4, 51
  br i1 %10, label %11, label %13

11:                                               ; preds = %9
  %12 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList12ReResolveUrlERKNS_8DocumentE(%"class.blink::CSSValueList"* %12, %"class.blink::Document"* %1) #8
  br label %13

13:                                               ; preds = %5, %7, %11, %9
  ret void
}

declare void @_ZNK5blink13CSSImageValue12ReResolveURLERKNS_8DocumentE(%"class.blink::CSSImageValue"*, %"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue11CSSURIValue12ReResolveUrlERKNS_8DocumentE(%"class.blink::cssvalue::CSSURIValue"*, %"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZNK5blink12CSSValueList12ReResolveUrlERKNS_8DocumentE(%"class.blink::CSSValueList"*, %"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"*, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #0 align 2 {
  br label %3

3:                                                ; preds = %240, %2
  %4 = phi %"class.blink::CSSValue"* [ %0, %2 ], [ %236, %240 ]
  %5 = phi %"class.blink::CSSValue"* [ %1, %2 ], [ %238, %240 ]
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 0, i32 2
  %7 = load i8, i8* %6, align 1
  %8 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %7, %9
  br i1 %10, label %11, label %398

11:                                               ; preds = %3
  switch i8 %7, label %398 [
    i8 58, label %12
    i8 13, label %16
    i8 14, label %20
    i8 15, label %24
    i8 16, label %28
    i8 26, label %32
    i8 3, label %36
    i8 4, label %44
    i8 18, label %48
    i8 28, label %52
    i8 29, label %56
    i8 27, label %64
    i8 30, label %68
    i8 31, label %72
    i8 53, label %76
    i8 48, label %88
    i8 21, label %92
    i8 22, label %96
    i8 23, label %100
    i8 19, label %104
    i8 20, label %108
    i8 6, label %112
    i8 17, label %130
    i8 32, label %400
    i8 33, label %400
    i8 34, label %400
    i8 35, label %400
    i8 56, label %134
    i8 57, label %138
    i8 55, label %142
    i8 39, label %146
    i8 40, label %150
    i8 0, label %154
    i8 1, label %158
    i8 41, label %162
    i8 2, label %166
    i8 50, label %174
    i8 51, label %400
    i8 5, label %190
    i8 36, label %244
    i8 37, label %248
    i8 7, label %252
    i8 24, label %260
    i8 25, label %264
    i8 38, label %268
    i8 8, label %272
    i8 52, label %276
    i8 9, label %280
    i8 54, label %316
    i8 49, label %320
    i8 43, label %324
    i8 42, label %326
    i8 44, label %334
    i8 45, label %342
    i8 46, label %400
    i8 47, label %400
    i8 10, label %350
    i8 11, label %386
    i8 12, label %394
  ]

12:                                               ; preds = %11
  %13 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSValueList"*
  %14 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSValueList"*
  %15 = tail call zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"* %13, %"class.blink::CSSValueList"* dereferenceable(56) %14) #8
  br label %400

16:                                               ; preds = %11
  %17 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSBasicShapeCircleValue"*
  %18 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSBasicShapeCircleValue"*
  %19 = tail call zeroext i1 @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* %17, %"class.blink::cssvalue::CSSBasicShapeCircleValue"* dereferenceable(32) %18) #8
  br label %400

20:                                               ; preds = %11
  %21 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSBasicShapeEllipseValue"*
  %22 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSBasicShapeEllipseValue"*
  %23 = tail call zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %21, %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* dereferenceable(40) %22) #8
  br label %400

24:                                               ; preds = %11
  %25 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSBasicShapePolygonValue"*
  %26 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSBasicShapePolygonValue"*
  %27 = tail call zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapePolygonValue"* %25, %"class.blink::cssvalue::CSSBasicShapePolygonValue"* dereferenceable(32) %26) #8
  br label %400

28:                                               ; preds = %11
  %29 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSBasicShapeInsetValue"*
  %30 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSBasicShapeInsetValue"*
  %31 = tail call zeroext i1 @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* %29, %"class.blink::cssvalue::CSSBasicShapeInsetValue"* dereferenceable(72) %30) #8
  br label %400

32:                                               ; preds = %11
  %33 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSBorderImageSliceValue"*
  %34 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSBorderImageSliceValue"*
  %35 = tail call zeroext i1 @_ZNK5blink8cssvalue24CSSBorderImageSliceValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBorderImageSliceValue"* %33, %"class.blink::cssvalue::CSSBorderImageSliceValue"* dereferenceable(24) %34) #8
  br label %400

36:                                               ; preds = %11
  %37 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 1, i32 1
  %38 = bitcast i8* %37 to i32*
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %41 = bitcast i8* %40 to i32*
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %39, %42
  br label %400

44:                                               ; preds = %11
  %45 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSCounterValue"*
  %46 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSCounterValue"*
  %47 = tail call zeroext i1 @_ZNK5blink8cssvalue15CSSCounterValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCounterValue"* %45, %"class.blink::cssvalue::CSSCounterValue"* dereferenceable(32) %46) #8
  br label %400

48:                                               ; preds = %11
  %49 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSCursorImageValue"*
  %50 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSCursorImageValue"*
  %51 = tail call zeroext i1 @_ZNK5blink8cssvalue19CSSCursorImageValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCursorImageValue"* %49, %"class.blink::cssvalue::CSSCursorImageValue"* dereferenceable(32) %50) #8
  br label %400

52:                                               ; preds = %11
  %53 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSFontFaceSrcValue"*
  %54 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSFontFaceSrcValue"*
  %55 = tail call zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue6EqualsERKS0_(%"class.blink::CSSFontFaceSrcValue"* %53, %"class.blink::CSSFontFaceSrcValue"* dereferenceable(80) %54) #8
  br label %400

56:                                               ; preds = %11
  %57 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %58 = bitcast i8* %57 to %"class.WTF::StringImpl"**
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %61 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %59, %"class.WTF::StringImpl"* %62) #8
  br label %400

64:                                               ; preds = %11
  %65 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSFontFeatureValue"*
  %66 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSFontFeatureValue"*
  %67 = tail call zeroext i1 @_ZNK5blink8cssvalue19CSSFontFeatureValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontFeatureValue"* %65, %"class.blink::cssvalue::CSSFontFeatureValue"* dereferenceable(24) %66) #8
  br label %400

68:                                               ; preds = %11
  %69 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSFontStyleRangeValue"*
  %70 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSFontStyleRangeValue"*
  %71 = tail call zeroext i1 @_ZNK5blink8cssvalue22CSSFontStyleRangeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontStyleRangeValue"* %69, %"class.blink::cssvalue::CSSFontStyleRangeValue"* dereferenceable(24) %70) #8
  br label %400

72:                                               ; preds = %11
  %73 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSFontVariationValue"*
  %74 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSFontVariationValue"*
  %75 = tail call zeroext i1 @_ZNK5blink8cssvalue21CSSFontVariationValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontVariationValue"* %73, %"class.blink::cssvalue::CSSFontVariationValue"* dereferenceable(24) %74) #8
  br label %400

76:                                               ; preds = %11
  %77 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 18, i32 2
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 8
  %80 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 18, i32 2
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 8
  %83 = icmp eq i32 %79, %82
  br i1 %83, label %84, label %400

84:                                               ; preds = %76
  %85 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSValueList"*
  %86 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSValueList"*
  %87 = tail call zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"* %85, %"class.blink::CSSValueList"* dereferenceable(56) %86) #8
  br label %400

88:                                               ; preds = %11
  %89 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSLayoutFunctionValue"*
  %90 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSLayoutFunctionValue"*
  %91 = tail call zeroext i1 @_ZNK5blink8cssvalue22CSSLayoutFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSLayoutFunctionValue"* %89, %"class.blink::cssvalue::CSSLayoutFunctionValue"* dereferenceable(24) %90) #8
  br label %400

92:                                               ; preds = %11
  %93 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSLinearGradientValue"*
  %94 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSLinearGradientValue"*
  %95 = tail call zeroext i1 @_ZNK5blink8cssvalue22CSSLinearGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSLinearGradientValue"* %93, %"class.blink::cssvalue::CSSLinearGradientValue"* dereferenceable(192) %94) #8
  br label %400

96:                                               ; preds = %11
  %97 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSRadialGradientValue"*
  %98 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSRadialGradientValue"*
  %99 = tail call zeroext i1 @_ZNK5blink8cssvalue22CSSRadialGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSRadialGradientValue"* %97, %"class.blink::cssvalue::CSSRadialGradientValue"* dereferenceable(232) %98) #8
  br label %400

100:                                              ; preds = %11
  %101 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSConicGradientValue"*
  %102 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSConicGradientValue"*
  %103 = tail call zeroext i1 @_ZNK5blink8cssvalue21CSSConicGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSConicGradientValue"* %101, %"class.blink::cssvalue::CSSConicGradientValue"* dereferenceable(176) %102) #8
  br label %400

104:                                              ; preds = %11
  %105 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %106 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %107 = tail call zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCrossfadeValue"* %105, %"class.blink::cssvalue::CSSCrossfadeValue"* dereferenceable(168) %106) #8
  br label %400

108:                                              ; preds = %11
  %109 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSPaintValue"*
  %110 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSPaintValue"*
  %111 = tail call zeroext i1 @_ZNK5blink13CSSPaintValue6EqualsERKS0_(%"class.blink::CSSPaintValue"* %109, %"class.blink::CSSPaintValue"* dereferenceable(176) %110) #8
  br label %400

112:                                              ; preds = %11
  %113 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 5, i32 1
  %114 = bitcast i8* %113 to i32*
  %115 = load i32, i32* %114, align 8
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %122, label %117

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 5, i32 1
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 8
  %121 = icmp eq i32 %115, %120
  br label %400

122:                                              ; preds = %112
  %123 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %124 = bitcast i8* %123 to %"class.WTF::StringImpl"**
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %127 = bitcast i8* %126 to %"class.WTF::StringImpl"**
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %125, %128
  br label %400

130:                                              ; preds = %11
  %131 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSImageValue"*
  %132 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSImageValue"*
  %133 = tail call zeroext i1 @_ZNK5blink13CSSImageValue6EqualsERKS0_(%"class.blink::CSSImageValue"* %131, %"class.blink::CSSImageValue"* dereferenceable(64) %132) #8
  br label %400

134:                                              ; preds = %11
  %135 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSGridAutoRepeatValue"*
  %136 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSGridAutoRepeatValue"*
  %137 = tail call zeroext i1 @_ZNK5blink8cssvalue22CSSGridAutoRepeatValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridAutoRepeatValue"* %135, %"class.blink::cssvalue::CSSGridAutoRepeatValue"* dereferenceable(64) %136) #8
  br label %400

138:                                              ; preds = %11
  %139 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSGridIntegerRepeatValue"*
  %140 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSGridIntegerRepeatValue"*
  %141 = tail call zeroext i1 @_ZNK5blink8cssvalue25CSSGridIntegerRepeatValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridIntegerRepeatValue"* %139, %"class.blink::cssvalue::CSSGridIntegerRepeatValue"* dereferenceable(64) %140) #8
  br label %400

142:                                              ; preds = %11
  %143 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSValueList"*
  %144 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSValueList"*
  %145 = tail call zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"* %143, %"class.blink::CSSValueList"* dereferenceable(56) %144) #8
  br label %400

146:                                              ; preds = %11
  %147 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSGridTemplateAreasValue"*
  %148 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSGridTemplateAreasValue"*
  %149 = tail call zeroext i1 @_ZNK5blink8cssvalue25CSSGridTemplateAreasValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridTemplateAreasValue"* %147, %"class.blink::cssvalue::CSSGridTemplateAreasValue"* dereferenceable(48) %148) #8
  br label %400

150:                                              ; preds = %11
  %151 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSPathValue"*
  %152 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSPathValue"*
  %153 = tail call zeroext i1 @_ZNK5blink8cssvalue12CSSPathValue6EqualsERKS1_(%"class.blink::cssvalue::CSSPathValue"* %151, %"class.blink::cssvalue::CSSPathValue"* dereferenceable(24) %152) #8
  br label %400

154:                                              ; preds = %11
  %155 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSNumericLiteralValue"*
  %156 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSNumericLiteralValue"*
  %157 = tail call zeroext i1 @_ZNK5blink22CSSNumericLiteralValue6EqualsERKS0_(%"class.blink::CSSNumericLiteralValue"* %155, %"class.blink::CSSNumericLiteralValue"* dereferenceable(16) %156) #8
  br label %400

158:                                              ; preds = %11
  %159 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSMathFunctionValue"*
  %160 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSMathFunctionValue"*
  %161 = tail call zeroext i1 @_ZNK5blink20CSSMathFunctionValue6EqualsERKS0_(%"class.blink::CSSMathFunctionValue"* %159, %"class.blink::CSSMathFunctionValue"* dereferenceable(16) %160) #8
  br label %400

162:                                              ; preds = %11
  %163 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSRayValue"*
  %164 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSRayValue"*
  %165 = tail call zeroext i1 @_ZNK5blink8cssvalue11CSSRayValue6EqualsERKS1_(%"class.blink::cssvalue::CSSRayValue"* %163, %"class.blink::cssvalue::CSSRayValue"* dereferenceable(32) %164) #8
  br label %400

166:                                              ; preds = %11
  %167 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 1, i32 1
  %168 = bitcast i8* %167 to i32*
  %169 = load i32, i32* %168, align 4
  %170 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %171 = bitcast i8* %170 to i32*
  %172 = load i32, i32* %171, align 4
  %173 = icmp eq i32 %169, %172
  br label %400

174:                                              ; preds = %11
  %175 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 1, i32 1
  %176 = bitcast i8* %175 to i32*
  %177 = load i32, i32* %176, align 4
  %178 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %179 = bitcast i8* %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = icmp eq i32 %177, %180
  br i1 %181, label %182, label %400

182:                                              ; preds = %174
  %183 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %184 = bitcast i8* %183 to %"class.blink::ImmutableCSSPropertyValueSet"**
  %185 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %184, align 8
  %186 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %187 = bitcast i8* %186 to %"class.blink::ImmutableCSSPropertyValueSet"**
  %188 = load %"class.blink::ImmutableCSSPropertyValueSet"*, %"class.blink::ImmutableCSSPropertyValueSet"** %187, align 8
  %189 = icmp eq %"class.blink::ImmutableCSSPropertyValueSet"* %185, %188
  br label %400

190:                                              ; preds = %11
  %191 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %192 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %193 = bitcast i8* %191 to %"class.blink::CSSValue"**
  %194 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %193, align 8
  %195 = bitcast i8* %192 to %"class.blink::CSSValue"**
  %196 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %195, align 8
  %197 = icmp eq %"class.blink::CSSValue"* %194, %196
  br i1 %197, label %204, label %198

198:                                              ; preds = %190
  %199 = icmp ne %"class.blink::CSSValue"* %194, null
  %200 = icmp ne %"class.blink::CSSValue"* %196, null
  %201 = and i1 %199, %200
  br i1 %201, label %202, label %398

202:                                              ; preds = %198
  %203 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %194, %"class.blink::CSSValue"* nonnull dereferenceable(3) %196) #8
  br i1 %203, label %204, label %398

204:                                              ; preds = %190, %202
  %205 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 5, i32 1
  %206 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 5, i32 1
  %207 = bitcast i8* %205 to %"class.blink::CSSValue"**
  %208 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %207, align 8
  %209 = bitcast i8* %206 to %"class.blink::CSSValue"**
  %210 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %209, align 8
  %211 = icmp eq %"class.blink::CSSValue"* %208, %210
  br i1 %211, label %218, label %212

212:                                              ; preds = %204
  %213 = icmp ne %"class.blink::CSSValue"* %208, null
  %214 = icmp ne %"class.blink::CSSValue"* %210, null
  %215 = and i1 %213, %214
  br i1 %215, label %216, label %398

216:                                              ; preds = %212
  %217 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %208, %"class.blink::CSSValue"* nonnull dereferenceable(3) %210) #8
  br i1 %217, label %218, label %398

218:                                              ; preds = %204, %216
  %219 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 10, i32 2
  %220 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 10, i32 2
  %221 = bitcast i8* %219 to %"class.blink::CSSValue"**
  %222 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %221, align 8
  %223 = bitcast i8* %220 to %"class.blink::CSSValue"**
  %224 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %223, align 8
  %225 = icmp eq %"class.blink::CSSValue"* %222, %224
  br i1 %225, label %232, label %226

226:                                              ; preds = %218
  %227 = icmp ne %"class.blink::CSSValue"* %222, null
  %228 = icmp ne %"class.blink::CSSValue"* %224, null
  %229 = and i1 %227, %228
  br i1 %229, label %230, label %398

230:                                              ; preds = %226
  %231 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %222, %"class.blink::CSSValue"* nonnull dereferenceable(3) %224) #8
  br i1 %231, label %232, label %398

232:                                              ; preds = %218, %230
  %233 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 8
  %234 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 8
  %235 = bitcast %"class.blink::CSSValue"* %233 to %"class.blink::CSSValue"**
  %236 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %235, align 8
  %237 = bitcast %"class.blink::CSSValue"* %234 to %"class.blink::CSSValue"**
  %238 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %237, align 8
  %239 = icmp eq %"class.blink::CSSValue"* %236, %238
  br i1 %239, label %398, label %240

240:                                              ; preds = %232
  %241 = icmp ne %"class.blink::CSSValue"* %236, null
  %242 = icmp ne %"class.blink::CSSValue"* %238, null
  %243 = and i1 %241, %242
  br i1 %243, label %3, label %398

244:                                              ; preds = %11
  %245 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSReflectValue"*
  %246 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSReflectValue"*
  %247 = tail call zeroext i1 @_ZNK5blink8cssvalue15CSSReflectValue6EqualsERKS1_(%"class.blink::cssvalue::CSSReflectValue"* %245, %"class.blink::cssvalue::CSSReflectValue"* dereferenceable(32) %246) #8
  br label %400

248:                                              ; preds = %11
  %249 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSShadowValue"*
  %250 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSShadowValue"*
  %251 = tail call zeroext i1 @_ZNK5blink14CSSShadowValue6EqualsERKS0_(%"class.blink::CSSShadowValue"* %249, %"class.blink::CSSShadowValue"* dereferenceable(56) %250) #8
  br label %400

252:                                              ; preds = %11
  %253 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %254 = bitcast i8* %253 to %"class.WTF::StringImpl"**
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %257 = bitcast i8* %256 to %"class.WTF::StringImpl"**
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8
  %259 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %255, %"class.WTF::StringImpl"* %258) #8
  br label %400

260:                                              ; preds = %11
  %261 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"*
  %262 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"*
  %263 = tail call zeroext i1 @_ZNK5blink8cssvalue33CSSCubicBezierTimingFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"* %261, %"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"* dereferenceable(40) %262) #8
  br label %400

264:                                              ; preds = %11
  %265 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSStepsTimingFunctionValue"*
  %266 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSStepsTimingFunctionValue"*
  %267 = tail call zeroext i1 @_ZNK5blink8cssvalue27CSSStepsTimingFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSStepsTimingFunctionValue"* %265, %"class.blink::cssvalue::CSSStepsTimingFunctionValue"* dereferenceable(12) %266) #8
  br label %400

268:                                              ; preds = %11
  %269 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSUnicodeRangeValue"*
  %270 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSUnicodeRangeValue"*
  %271 = tail call zeroext i1 @_ZNK5blink8cssvalue20CSSUnicodeRangeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSUnicodeRangeValue"* %269, %"class.blink::cssvalue::CSSUnicodeRangeValue"* dereferenceable(12) %270) #8
  br label %400

272:                                              ; preds = %11
  %273 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSURIValue"*
  %274 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSURIValue"*
  %275 = tail call zeroext i1 @_ZNK5blink8cssvalue11CSSURIValue6EqualsERKS1_(%"class.blink::cssvalue::CSSURIValue"* %273, %"class.blink::cssvalue::CSSURIValue"* dereferenceable(40) %274) #8
  br label %400

276:                                              ; preds = %11
  %277 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSValueList"*
  %278 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSValueList"*
  %279 = tail call zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"* %277, %"class.blink::CSSValueList"* dereferenceable(56) %278) #8
  br label %400

280:                                              ; preds = %11
  %281 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %282 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %283 = bitcast i8* %281 to %"class.blink::CSSValue"**
  %284 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %283, align 8
  %285 = bitcast i8* %282 to %"class.blink::CSSValue"**
  %286 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %285, align 8
  %287 = icmp eq %"class.blink::CSSValue"* %284, %286
  br i1 %287, label %294, label %288

288:                                              ; preds = %280
  %289 = icmp ne %"class.blink::CSSValue"* %284, null
  %290 = icmp ne %"class.blink::CSSValue"* %286, null
  %291 = and i1 %289, %290
  br i1 %291, label %292, label %400

292:                                              ; preds = %288
  %293 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %284, %"class.blink::CSSValue"* nonnull dereferenceable(3) %286) #8
  br i1 %293, label %294, label %400

294:                                              ; preds = %280, %292
  %295 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 5, i32 1
  %296 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 5, i32 1
  %297 = bitcast i8* %295 to %"class.blink::CSSValue"**
  %298 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %297, align 8
  %299 = bitcast i8* %296 to %"class.blink::CSSValue"**
  %300 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %299, align 8
  %301 = icmp eq %"class.blink::CSSValue"* %298, %300
  br i1 %301, label %308, label %302

302:                                              ; preds = %294
  %303 = icmp ne %"class.blink::CSSValue"* %298, null
  %304 = icmp ne %"class.blink::CSSValue"* %300, null
  %305 = and i1 %303, %304
  br i1 %305, label %306, label %400

306:                                              ; preds = %302
  %307 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %298, %"class.blink::CSSValue"* nonnull dereferenceable(3) %300) #8
  br i1 %307, label %308, label %400

308:                                              ; preds = %294, %306
  %309 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 8
  %310 = bitcast %"class.blink::CSSValue"* %309 to i32*
  %311 = load i32, i32* %310, align 8
  %312 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 8
  %313 = bitcast %"class.blink::CSSValue"* %312 to i32*
  %314 = load i32, i32* %313, align 8
  %315 = icmp eq i32 %311, %314
  br label %400

316:                                              ; preds = %11
  %317 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::CSSValueList"*
  %318 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::CSSValueList"*
  %319 = tail call zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"* %317, %"class.blink::CSSValueList"* dereferenceable(56) %318) #8
  br label %400

320:                                              ; preds = %11
  %321 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSContentDistributionValue"*
  %322 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSContentDistributionValue"*
  %323 = tail call zeroext i1 @_ZNK5blink8cssvalue27CSSContentDistributionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSContentDistributionValue"* %321, %"class.blink::cssvalue::CSSContentDistributionValue"* dereferenceable(16) %322) #8
  br label %400

324:                                              ; preds = %11
  %325 = icmp eq %"class.blink::CSSValue"* %4, %5
  br label %400

326:                                              ; preds = %11
  %327 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %328 = bitcast i8* %327 to %"class.blink::CSSVariableData"**
  %329 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %328, align 8
  %330 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %331 = bitcast i8* %330 to %"class.blink::CSSVariableData"**
  %332 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %331, align 8
  %333 = icmp eq %"class.blink::CSSVariableData"* %329, %332
  br label %400

334:                                              ; preds = %11
  %335 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %336 = bitcast i8* %335 to %"class.blink::CSSVariableReferenceValue"**
  %337 = load %"class.blink::CSSVariableReferenceValue"*, %"class.blink::CSSVariableReferenceValue"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %339 = bitcast i8* %338 to %"class.blink::CSSVariableReferenceValue"**
  %340 = load %"class.blink::CSSVariableReferenceValue"*, %"class.blink::CSSVariableReferenceValue"** %339, align 8
  %341 = icmp eq %"class.blink::CSSVariableReferenceValue"* %337, %340
  br label %400

342:                                              ; preds = %11
  %343 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 1, i32 1
  %344 = bitcast i8* %343 to i32*
  %345 = load i32, i32* %344, align 4
  %346 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 1, i32 1
  %347 = bitcast i8* %346 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %345, %348
  br label %400

350:                                              ; preds = %11
  %351 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %352 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %353 = bitcast i8* %351 to %"class.blink::CSSValue"**
  %354 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %353, align 8
  %355 = bitcast i8* %352 to %"class.blink::CSSValue"**
  %356 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %355, align 8
  %357 = icmp eq %"class.blink::CSSValue"* %354, %356
  br i1 %357, label %364, label %358

358:                                              ; preds = %350
  %359 = icmp ne %"class.blink::CSSValue"* %354, null
  %360 = icmp ne %"class.blink::CSSValue"* %356, null
  %361 = and i1 %359, %360
  br i1 %361, label %362, label %400

362:                                              ; preds = %358
  %363 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %354, %"class.blink::CSSValue"* nonnull dereferenceable(3) %356) #8
  br i1 %363, label %364, label %400

364:                                              ; preds = %350, %362
  %365 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 5, i32 1
  %366 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 5, i32 1
  %367 = bitcast i8* %365 to %"class.blink::CSSValue"**
  %368 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %367, align 8
  %369 = bitcast i8* %366 to %"class.blink::CSSValue"**
  %370 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %369, align 8
  %371 = icmp eq %"class.blink::CSSValue"* %368, %370
  br i1 %371, label %378, label %372

372:                                              ; preds = %364
  %373 = icmp ne %"class.blink::CSSValue"* %368, null
  %374 = icmp ne %"class.blink::CSSValue"* %370, null
  %375 = and i1 %373, %374
  br i1 %375, label %376, label %400

376:                                              ; preds = %372
  %377 = tail call zeroext i1 @_ZNK5blink8CSSValueeqERKS0_(%"class.blink::CSSValue"* nonnull %368, %"class.blink::CSSValue"* nonnull dereferenceable(3) %370) #8
  br i1 %377, label %378, label %400

378:                                              ; preds = %364, %376
  %379 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 8
  %380 = bitcast %"class.blink::CSSValue"* %379 to i32*
  %381 = load i32, i32* %380, align 8
  %382 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 8
  %383 = bitcast %"class.blink::CSSValue"* %382 to i32*
  %384 = load i32, i32* %383, align 8
  %385 = icmp eq i32 %381, %384
  br label %400

386:                                              ; preds = %11
  %387 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %4, i64 2, i32 2
  %388 = bitcast i8* %387 to %"class.WTF::StringImpl"**
  %389 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %388, align 8
  %390 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %5, i64 2, i32 2
  %391 = bitcast i8* %390 to %"class.WTF::StringImpl"**
  %392 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %389, %392
  br label %400

394:                                              ; preds = %11
  %395 = bitcast %"class.blink::CSSValue"* %4 to %"class.blink::cssvalue::CSSElementOffsetValue"*
  %396 = bitcast %"class.blink::CSSValue"* %5 to %"class.blink::cssvalue::CSSElementOffsetValue"*
  %397 = tail call zeroext i1 @_ZNK5blink8cssvalue21CSSElementOffsetValue6EqualsERKS1_(%"class.blink::cssvalue::CSSElementOffsetValue"* %395, %"class.blink::cssvalue::CSSElementOffsetValue"* dereferenceable(32) %396) #8
  br label %400

398:                                              ; preds = %11, %3, %240, %232, %202, %216, %230, %198, %212, %226
  %399 = phi i1 [ false, %226 ], [ false, %212 ], [ false, %198 ], [ false, %240 ], [ true, %232 ], [ false, %202 ], [ false, %216 ], [ false, %230 ], [ false, %3 ], [ false, %11 ]
  br label %400

400:                                              ; preds = %11, %11, %11, %11, %11, %11, %11, %398, %372, %358, %302, %288, %378, %376, %362, %308, %306, %292, %182, %174, %122, %117, %84, %76, %394, %386, %342, %334, %326, %324, %320, %316, %276, %272, %268, %264, %260, %252, %248, %244, %166, %162, %158, %154, %150, %146, %142, %138, %134, %130, %108, %104, %100, %96, %92, %88, %72, %68, %64, %56, %52, %48, %44, %36, %32, %28, %24, %20, %16, %12
  %401 = phi i1 [ %397, %394 ], [ %393, %386 ], [ %349, %342 ], [ %341, %334 ], [ %333, %326 ], [ %325, %324 ], [ %323, %320 ], [ %319, %316 ], [ %279, %276 ], [ %275, %272 ], [ %271, %268 ], [ %267, %264 ], [ %263, %260 ], [ %259, %252 ], [ %251, %248 ], [ %247, %244 ], [ %173, %166 ], [ %165, %162 ], [ %161, %158 ], [ %157, %154 ], [ %153, %150 ], [ %149, %146 ], [ %145, %142 ], [ %141, %138 ], [ %137, %134 ], [ %133, %130 ], [ %111, %108 ], [ %107, %104 ], [ %103, %100 ], [ %99, %96 ], [ %95, %92 ], [ %91, %88 ], [ %75, %72 ], [ %71, %68 ], [ %67, %64 ], [ %63, %56 ], [ %55, %52 ], [ %51, %48 ], [ %47, %44 ], [ %43, %36 ], [ %35, %32 ], [ %31, %28 ], [ %27, %24 ], [ %23, %20 ], [ %19, %16 ], [ %15, %12 ], [ false, %76 ], [ %87, %84 ], [ %121, %117 ], [ %129, %122 ], [ false, %174 ], [ %189, %182 ], [ false, %306 ], [ false, %292 ], [ %315, %308 ], [ false, %376 ], [ false, %362 ], [ %385, %378 ], [ false, %288 ], [ false, %302 ], [ false, %358 ], [ false, %372 ], [ %399, %398 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ true, %11 ], [ true, %11 ]
  ret i1 %401
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %242 [
    i8 58, label %4
    i8 13, label %8
    i8 14, label %12
    i8 15, label %16
    i8 16, label %20
    i8 26, label %24
    i8 3, label %28
    i8 4, label %34
    i8 18, label %38
    i8 28, label %42
    i8 29, label %46
    i8 27, label %50
    i8 30, label %54
    i8 31, label %58
    i8 53, label %62
    i8 48, label %66
    i8 21, label %70
    i8 22, label %74
    i8 23, label %78
    i8 19, label %82
    i8 20, label %86
    i8 6, label %90
    i8 17, label %94
    i8 32, label %98
    i8 34, label %102
    i8 35, label %106
    i8 33, label %110
    i8 56, label %114
    i8 57, label %118
    i8 55, label %122
    i8 39, label %126
    i8 40, label %130
    i8 0, label %134
    i8 1, label %138
    i8 41, label %142
    i8 2, label %146
    i8 50, label %150
    i8 51, label %154
    i8 5, label %158
    i8 36, label %162
    i8 37, label %166
    i8 7, label %170
    i8 24, label %174
    i8 25, label %178
    i8 38, label %182
    i8 8, label %186
    i8 9, label %190
    i8 52, label %194
    i8 54, label %198
    i8 49, label %202
    i8 42, label %206
    i8 43, label %210
    i8 44, label %214
    i8 45, label %218
    i8 46, label %222
    i8 47, label %226
    i8 10, label %230
    i8 11, label %234
    i8 12, label %238
  ]

4:                                                ; preds = %1
  %5 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSAxisValue"*
  %6 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue12CSSAxisValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSAxisValue"* %5) #8
  %7 = ptrtoint %"class.WTF::StringImpl"* %6 to i64
  br label %242

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeCircleValue"*
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* %9) #8
  %11 = ptrtoint %"class.WTF::StringImpl"* %10 to i64
  br label %242

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeEllipseValue"*
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %13) #8
  %15 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  br label %242

16:                                               ; preds = %1
  %17 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapePolygonValue"*
  %18 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapePolygonValue"* %17) #8
  %19 = ptrtoint %"class.WTF::StringImpl"* %18 to i64
  br label %242

20:                                               ; preds = %1
  %21 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeInsetValue"*
  %22 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* %21) #8
  %23 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  br label %242

24:                                               ; preds = %1
  %25 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBorderImageSliceValue"*
  %26 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue24CSSBorderImageSliceValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBorderImageSliceValue"* %25) #8
  %27 = ptrtoint %"class.WTF::StringImpl"* %26 to i64
  br label %242

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 1, i32 1
  %30 = bitcast i8* %29 to i32*
  %31 = load i32, i32* %30, align 4
  %32 = tail call %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32 %31) #8
  %33 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  br label %242

34:                                               ; preds = %1
  %35 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCounterValue"*
  %36 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue15CSSCounterValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCounterValue"* %35) #8
  %37 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  br label %242

38:                                               ; preds = %1
  %39 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCursorImageValue"*
  %40 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue19CSSCursorImageValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCursorImageValue"* %39) #8
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  br label %242

42:                                               ; preds = %1
  %43 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFontFaceSrcValue"*
  %44 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSFontFaceSrcValue13CustomCSSTextEv(%"class.blink::CSSFontFaceSrcValue"* %43) #8
  %45 = ptrtoint %"class.WTF::StringImpl"* %44 to i64
  br label %242

46:                                               ; preds = %1
  %47 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFontFamilyValue"*
  %48 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18CSSFontFamilyValue13CustomCSSTextEv(%"class.blink::CSSFontFamilyValue"* %47) #8
  %49 = ptrtoint %"class.WTF::StringImpl"* %48 to i64
  br label %242

50:                                               ; preds = %1
  %51 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSFontFeatureValue"*
  %52 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue19CSSFontFeatureValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontFeatureValue"* %51) #8
  %53 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  br label %242

54:                                               ; preds = %1
  %55 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSFontStyleRangeValue"*
  %56 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSFontStyleRangeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontStyleRangeValue"* %55) #8
  %57 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  br label %242

58:                                               ; preds = %1
  %59 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSFontVariationValue"*
  %60 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSFontVariationValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontVariationValue"* %59) #8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  br label %242

62:                                               ; preds = %1
  %63 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFunctionValue"*
  %64 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16CSSFunctionValue13CustomCSSTextEv(%"class.blink::CSSFunctionValue"* %63) #8
  %65 = ptrtoint %"class.WTF::StringImpl"* %64 to i64
  br label %242

66:                                               ; preds = %1
  %67 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSLayoutFunctionValue"*
  %68 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSLayoutFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSLayoutFunctionValue"* %67) #8
  %69 = ptrtoint %"class.WTF::StringImpl"* %68 to i64
  br label %242

70:                                               ; preds = %1
  %71 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSLinearGradientValue"*
  %72 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSLinearGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSLinearGradientValue"* %71) #8
  %73 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  br label %242

74:                                               ; preds = %1
  %75 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSRadialGradientValue"*
  %76 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSRadialGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRadialGradientValue"* %75) #8
  %77 = ptrtoint %"class.WTF::StringImpl"* %76 to i64
  br label %242

78:                                               ; preds = %1
  %79 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSConicGradientValue"*
  %80 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSConicGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSConicGradientValue"* %79) #8
  %81 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  br label %242

82:                                               ; preds = %1
  %83 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  %84 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue17CSSCrossfadeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCrossfadeValue"* %83) #8
  %85 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  br label %242

86:                                               ; preds = %1
  %87 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPaintValue"*
  %88 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue13CustomCSSTextEv(%"class.blink::CSSPaintValue"* %87) #8
  %89 = ptrtoint %"class.WTF::StringImpl"* %88 to i64
  br label %242

90:                                               ; preds = %1
  %91 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSCustomIdentValue"*
  %92 = tail call %"class.WTF::StringImpl"* @_ZNK5blink19CSSCustomIdentValue13CustomCSSTextEv(%"class.blink::CSSCustomIdentValue"* %91) #8
  %93 = ptrtoint %"class.WTF::StringImpl"* %92 to i64
  br label %242

94:                                               ; preds = %1
  %95 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageValue"*
  %96 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13CSSImageValue13CustomCSSTextEv(%"class.blink::CSSImageValue"* %95) #8
  %97 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  br label %242

98:                                               ; preds = %1
  %99 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSInheritedValue"*
  %100 = tail call %"class.WTF::StringImpl"* @_ZNK5blink17CSSInheritedValue13CustomCSSTextEv(%"class.blink::CSSInheritedValue"* %99) #8
  %101 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  br label %242

102:                                              ; preds = %1
  %103 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSUnsetValue"*
  %104 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue13CSSUnsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSUnsetValue"* %103) #8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  br label %242

106:                                              ; preds = %1
  %107 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSRevertValue"*
  %108 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue14CSSRevertValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRevertValue"* %107) #8
  %109 = ptrtoint %"class.WTF::StringImpl"* %108 to i64
  br label %242

110:                                              ; preds = %1
  %111 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSInitialValue"*
  %112 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15CSSInitialValue13CustomCSSTextEv(%"class.blink::CSSInitialValue"* %111) #8
  %113 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  br label %242

114:                                              ; preds = %1
  %115 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSGridAutoRepeatValue"*
  %116 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSGridAutoRepeatValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridAutoRepeatValue"* %115) #8
  %117 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  br label %242

118:                                              ; preds = %1
  %119 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSGridIntegerRepeatValue"*
  %120 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSGridIntegerRepeatValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridIntegerRepeatValue"* %119) #8
  %121 = ptrtoint %"class.WTF::StringImpl"* %120 to i64
  br label %242

122:                                              ; preds = %1
  %123 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSGridLineNamesValue"*
  %124 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSGridLineNamesValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridLineNamesValue"* %123) #8
  %125 = ptrtoint %"class.WTF::StringImpl"* %124 to i64
  br label %242

126:                                              ; preds = %1
  %127 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSGridTemplateAreasValue"*
  %128 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSGridTemplateAreasValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridTemplateAreasValue"* %127) #8
  %129 = ptrtoint %"class.WTF::StringImpl"* %128 to i64
  br label %242

130:                                              ; preds = %1
  %131 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPathValue"*
  %132 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue12CSSPathValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPathValue"* %131) #8
  %133 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  br label %242

134:                                              ; preds = %1
  %135 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  %136 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22CSSNumericLiteralValue13CustomCSSTextEv(%"class.blink::CSSNumericLiteralValue"* %135) #8
  %137 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  br label %242

138:                                              ; preds = %1
  %139 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  %140 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20CSSMathFunctionValue13CustomCSSTextEv(%"class.blink::CSSMathFunctionValue"* %139) #8
  %141 = ptrtoint %"class.WTF::StringImpl"* %140 to i64
  br label %242

142:                                              ; preds = %1
  %143 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSRayValue"*
  %144 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue11CSSRayValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRayValue"* %143) #8
  %145 = ptrtoint %"class.WTF::StringImpl"* %144 to i64
  br label %242

146:                                              ; preds = %1
  %147 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSIdentifierValue"*
  %148 = tail call %"class.WTF::StringImpl"* @_ZNK5blink18CSSIdentifierValue13CustomCSSTextEv(%"class.blink::CSSIdentifierValue"* %147) #8
  %149 = ptrtoint %"class.WTF::StringImpl"* %148 to i64
  br label %242

150:                                              ; preds = %1
  %151 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSKeyframeShorthandValue"*
  %152 = tail call %"class.WTF::StringImpl"* @_ZNK5blink25CSSKeyframeShorthandValue13CustomCSSTextEv(%"class.blink::CSSKeyframeShorthandValue"* %151) #8
  %153 = ptrtoint %"class.WTF::StringImpl"* %152 to i64
  br label %242

154:                                              ; preds = %1
  %155 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSInitialColorValue"*
  %156 = tail call %"class.WTF::StringImpl"* @_ZNK5blink20CSSInitialColorValue13CustomCSSTextEv(%"class.blink::CSSInitialColorValue"* %155) #8
  %157 = ptrtoint %"class.WTF::StringImpl"* %156 to i64
  br label %242

158:                                              ; preds = %1
  %159 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSQuadValue"*
  %160 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSQuadValue13CustomCSSTextEv(%"class.blink::CSSQuadValue"* %159) #8
  %161 = ptrtoint %"class.WTF::StringImpl"* %160 to i64
  br label %242

162:                                              ; preds = %1
  %163 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSReflectValue"*
  %164 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue15CSSReflectValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSReflectValue"* %163) #8
  %165 = ptrtoint %"class.WTF::StringImpl"* %164 to i64
  br label %242

166:                                              ; preds = %1
  %167 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSShadowValue"*
  %168 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14CSSShadowValue13CustomCSSTextEv(%"class.blink::CSSShadowValue"* %167) #8
  %169 = ptrtoint %"class.WTF::StringImpl"* %168 to i64
  br label %242

170:                                              ; preds = %1
  %171 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSStringValue"*
  %172 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14CSSStringValue13CustomCSSTextEv(%"class.blink::CSSStringValue"* %171) #8
  %173 = ptrtoint %"class.WTF::StringImpl"* %172 to i64
  br label %242

174:                                              ; preds = %1
  %175 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"*
  %176 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue33CSSCubicBezierTimingFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"* %175) #8
  %177 = ptrtoint %"class.WTF::StringImpl"* %176 to i64
  br label %242

178:                                              ; preds = %1
  %179 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSStepsTimingFunctionValue"*
  %180 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSStepsTimingFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSStepsTimingFunctionValue"* %179) #8
  %181 = ptrtoint %"class.WTF::StringImpl"* %180 to i64
  br label %242

182:                                              ; preds = %1
  %183 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSUnicodeRangeValue"*
  %184 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue20CSSUnicodeRangeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSUnicodeRangeValue"* %183) #8
  %185 = ptrtoint %"class.WTF::StringImpl"* %184 to i64
  br label %242

186:                                              ; preds = %1
  %187 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSURIValue"*
  %188 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue11CSSURIValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSURIValue"* %187) #8
  %189 = ptrtoint %"class.WTF::StringImpl"* %188 to i64
  br label %242

190:                                              ; preds = %1
  %191 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValuePair"*
  %192 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSValuePair13CustomCSSTextEv(%"class.blink::CSSValuePair"* %191)
  %193 = ptrtoint %"class.WTF::StringImpl"* %192 to i64
  br label %242

194:                                              ; preds = %1
  %195 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  %196 = tail call %"class.WTF::StringImpl"* @_ZNK5blink12CSSValueList13CustomCSSTextEv(%"class.blink::CSSValueList"* %195) #8
  %197 = ptrtoint %"class.WTF::StringImpl"* %196 to i64
  br label %242

198:                                              ; preds = %1
  %199 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageSetValue"*
  %200 = tail call %"class.WTF::StringImpl"* @_ZNK5blink16CSSImageSetValue13CustomCSSTextEv(%"class.blink::CSSImageSetValue"* %199) #8
  %201 = ptrtoint %"class.WTF::StringImpl"* %200 to i64
  br label %242

202:                                              ; preds = %1
  %203 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSContentDistributionValue"*
  %204 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSContentDistributionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSContentDistributionValue"* %203) #8
  %205 = ptrtoint %"class.WTF::StringImpl"* %204 to i64
  br label %242

206:                                              ; preds = %1
  %207 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSVariableReferenceValue"*
  %208 = tail call %"class.WTF::StringImpl"* @_ZNK5blink25CSSVariableReferenceValue13CustomCSSTextEv(%"class.blink::CSSVariableReferenceValue"* %207) #8
  %209 = ptrtoint %"class.WTF::StringImpl"* %208 to i64
  br label %242

210:                                              ; preds = %1
  %211 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSCustomPropertyDeclaration"*
  %212 = tail call %"class.WTF::StringImpl"* @_ZNK5blink28CSSCustomPropertyDeclaration13CustomCSSTextEv(%"class.blink::CSSCustomPropertyDeclaration"* %211) #8
  %213 = ptrtoint %"class.WTF::StringImpl"* %212 to i64
  br label %242

214:                                              ; preds = %1
  %215 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSubstitutionValue"*
  %216 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSPendingSubstitutionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPendingSubstitutionValue"* %215) #8
  %217 = ptrtoint %"class.WTF::StringImpl"* %216 to i64
  br label %242

218:                                              ; preds = %1
  %219 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  %220 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"* %219) #8
  %221 = ptrtoint %"class.WTF::StringImpl"* %220 to i64
  br label %242

222:                                              ; preds = %1
  %223 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSInvalidVariableValue"*
  %224 = tail call %"class.WTF::StringImpl"* @_ZNK5blink23CSSInvalidVariableValue13CustomCSSTextEv(%"class.blink::CSSInvalidVariableValue"* %223) #8
  %225 = ptrtoint %"class.WTF::StringImpl"* %224 to i64
  br label %242

226:                                              ; preds = %1
  %227 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSCyclicVariableValue"*
  %228 = tail call %"class.WTF::StringImpl"* @_ZNK5blink22CSSCyclicVariableValue13CustomCSSTextEv(%"class.blink::CSSCyclicVariableValue"* %227) #8
  %229 = ptrtoint %"class.WTF::StringImpl"* %228 to i64
  br label %242

230:                                              ; preds = %1
  %231 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSLightDarkValuePair"*
  %232 = tail call %"class.WTF::StringImpl"* @_ZNK5blink21CSSLightDarkValuePair13CustomCSSTextEv(%"class.blink::CSSLightDarkValuePair"* %231) #8
  %233 = ptrtoint %"class.WTF::StringImpl"* %232 to i64
  br label %242

234:                                              ; preds = %1
  %235 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSIdSelectorValue"*
  %236 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue18CSSIdSelectorValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSIdSelectorValue"* %235) #8
  %237 = ptrtoint %"class.WTF::StringImpl"* %236 to i64
  br label %242

238:                                              ; preds = %1
  %239 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSElementOffsetValue"*
  %240 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSElementOffsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSElementOffsetValue"* %239) #8
  %241 = ptrtoint %"class.WTF::StringImpl"* %240 to i64
  br label %242

242:                                              ; preds = %1, %238, %234, %230, %226, %222, %218, %214, %210, %206, %202, %198, %194, %190, %186, %182, %178, %174, %170, %166, %162, %158, %154, %150, %146, %142, %138, %134, %130, %126, %122, %118, %114, %110, %106, %102, %98, %94, %90, %86, %82, %78, %74, %70, %66, %62, %58, %54, %50, %46, %42, %38, %34, %28, %24, %20, %16, %12, %8, %4
  %243 = phi i64 [ %241, %238 ], [ %237, %234 ], [ %233, %230 ], [ %229, %226 ], [ %225, %222 ], [ %221, %218 ], [ %217, %214 ], [ %213, %210 ], [ %209, %206 ], [ %205, %202 ], [ %201, %198 ], [ %197, %194 ], [ %193, %190 ], [ %189, %186 ], [ %185, %182 ], [ %181, %178 ], [ %177, %174 ], [ %173, %170 ], [ %169, %166 ], [ %165, %162 ], [ %161, %158 ], [ %157, %154 ], [ %153, %150 ], [ %149, %146 ], [ %145, %142 ], [ %141, %138 ], [ %137, %134 ], [ %133, %130 ], [ %129, %126 ], [ %125, %122 ], [ %121, %118 ], [ %117, %114 ], [ %113, %110 ], [ %109, %106 ], [ %105, %102 ], [ %101, %98 ], [ %97, %94 ], [ %93, %90 ], [ %89, %86 ], [ %85, %82 ], [ %81, %78 ], [ %77, %74 ], [ %73, %70 ], [ %69, %66 ], [ %65, %62 ], [ %61, %58 ], [ %57, %54 ], [ %53, %50 ], [ %49, %46 ], [ %45, %42 ], [ %41, %38 ], [ %37, %34 ], [ %33, %28 ], [ %27, %24 ], [ %23, %20 ], [ %19, %16 ], [ %15, %12 ], [ %11, %8 ], [ %7, %4 ], [ 0, %1 ]
  %244 = inttoptr i64 %243 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %244
}

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue12CSSAxisValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSAxisValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeCircleValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBasicShapeInsetValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue24CSSBorderImageSliceValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSBorderImageSliceValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue15CSSCounterValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCounterValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue19CSSCursorImageValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCursorImageValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSFontFaceSrcValue13CustomCSSTextEv(%"class.blink::CSSFontFaceSrcValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18CSSFontFamilyValue13CustomCSSTextEv(%"class.blink::CSSFontFamilyValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue19CSSFontFeatureValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontFeatureValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSFontStyleRangeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontStyleRangeValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSFontVariationValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSFontVariationValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16CSSFunctionValue13CustomCSSTextEv(%"class.blink::CSSFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSLayoutFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSLayoutFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSLinearGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSLinearGradientValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSRadialGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRadialGradientValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSConicGradientValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSConicGradientValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue17CSSCrossfadeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCrossfadeValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue13CustomCSSTextEv(%"class.blink::CSSPaintValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSCustomIdentValue13CustomCSSTextEv(%"class.blink::CSSCustomIdentValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSImageValue13CustomCSSTextEv(%"class.blink::CSSImageValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17CSSInheritedValue13CustomCSSTextEv(%"class.blink::CSSInheritedValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue13CSSUnsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSUnsetValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue14CSSRevertValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRevertValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSInitialValue13CustomCSSTextEv(%"class.blink::CSSInitialValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue22CSSGridAutoRepeatValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridAutoRepeatValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSGridIntegerRepeatValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridIntegerRepeatValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSGridLineNamesValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridLineNamesValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSGridTemplateAreasValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSGridTemplateAreasValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue12CSSPathValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPathValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink22CSSNumericLiteralValue13CustomCSSTextEv(%"class.blink::CSSNumericLiteralValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink20CSSMathFunctionValue13CustomCSSTextEv(%"class.blink::CSSMathFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue11CSSRayValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSRayValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink18CSSIdentifierValue13CustomCSSTextEv(%"class.blink::CSSIdentifierValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink25CSSKeyframeShorthandValue13CustomCSSTextEv(%"class.blink::CSSKeyframeShorthandValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink20CSSInitialColorValue13CustomCSSTextEv(%"class.blink::CSSInitialColorValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink12CSSQuadValue13CustomCSSTextEv(%"class.blink::CSSQuadValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue15CSSReflectValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSReflectValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink14CSSShadowValue13CustomCSSTextEv(%"class.blink::CSSShadowValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink14CSSStringValue13CustomCSSTextEv(%"class.blink::CSSStringValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue33CSSCubicBezierTimingFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSStepsTimingFunctionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSStepsTimingFunctionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue20CSSUnicodeRangeValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSUnicodeRangeValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue11CSSURIValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSURIValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink12CSSValuePair13CustomCSSTextEv(%"class.blink::CSSValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringAppend", align 8
  %3 = alloca { %"class.WTF::StringImpl"*, i8 }, align 8
  %4 = bitcast { %"class.WTF::StringImpl"*, i8 }* %3 to %"class.WTF::StringAppend.591"*
  %5 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %0, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %5, align 8
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %6)
  %8 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %0, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %8, align 8
  %10 = tail call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %9)
  %11 = getelementptr inbounds %"class.blink::CSSValuePair", %"class.blink::CSSValuePair"* %0, i64 0, i32 4
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %16

14:                                               ; preds = %1
  %15 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %10) #8
  br i1 %15, label %137, label %16

16:                                               ; preds = %14, %1
  %17 = bitcast %"class.WTF::StringAppend"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #8
  %18 = bitcast { %"class.WTF::StringImpl"*, i8 }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #8
  %19 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %19, label %64, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %37

27:                                               ; preds = %20
  %28 = zext i32 %26 to i33
  %29 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %28, i33 1) #8
  %30 = extractvalue { i33, i1 } %29, 1
  %31 = extractvalue { i33, i1 } %29, 0
  %32 = icmp slt i33 %31, 0
  %33 = or i1 %30, %32
  br i1 %33, label %34, label %35, !prof !2

34:                                               ; preds = %27
  tail call void @llvm.trap() #8
  unreachable

35:                                               ; preds = %27
  %36 = trunc i33 %31 to i32
  store i32 %36, i32* %25, align 4
  br label %37

37:                                               ; preds = %20, %35
  %38 = phi i32 [ %36, %35 ], [ %26, %20 ]
  %39 = load atomic i32, i32* %21 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  br i1 %41, label %43, label %53

43:                                               ; preds = %37
  %44 = zext i32 %38 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #8
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #8
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %37
  %54 = phi i32 [ %52, %51 ], [ %38, %37 ]
  %55 = load atomic i32, i32* %21 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  %59 = add i32 %54, -1
  store i32 %59, i32* %42, align 4
  br label %60

60:                                               ; preds = %58, %53
  %61 = phi i32 [ %59, %58 ], [ %54, %53 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #8
  br label %64

64:                                               ; preds = %16, %60, %63
  %65 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %65, align 8
  %66 = getelementptr inbounds { %"class.WTF::StringImpl"*, i8 }, { %"class.WTF::StringImpl"*, i8 }* %3, i64 0, i32 1
  store i8 32, i8* %66, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %67, label %85, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %85

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  %76 = zext i32 %75 to i33
  %77 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #8
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %73
  tail call void @llvm.trap() #8
  unreachable

83:                                               ; preds = %73
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %74, align 4
  br label %85

85:                                               ; preds = %64, %68, %83
  call void @_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* nonnull sret %2, %"class.WTF::StringAppend.591"* nonnull dereferenceable(16) %4, %"class.WTF::StringImpl"* %10)
  %86 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %2)
  %87 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 1, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #8
  br label %103

103:                                              ; preds = %102, %99, %85
  %104 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #8
  br label %120

120:                                              ; preds = %103, %116, %119
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #8
  br label %136

136:                                              ; preds = %120, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #8
  br label %137

137:                                              ; preds = %14, %136
  %138 = phi %"class.WTF::StringImpl"* [ %7, %136 ], [ null, %14 ]
  %139 = phi %"class.WTF::StringImpl"* [ %86, %136 ], [ %7, %14 ]
  %140 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #8
  br label %154

154:                                              ; preds = %137, %150, %153
  %155 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #8
  br label %169

169:                                              ; preds = %154, %165, %168
  ret %"class.WTF::StringImpl"* %139
}

declare %"class.WTF::StringImpl"* @_ZNK5blink12CSSValueList13CustomCSSTextEv(%"class.blink::CSSValueList"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16CSSImageSetValue13CustomCSSTextEv(%"class.blink::CSSImageSetValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSContentDistributionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSContentDistributionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink25CSSVariableReferenceValue13CustomCSSTextEv(%"class.blink::CSSVariableReferenceValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink28CSSCustomPropertyDeclaration13CustomCSSTextEv(%"class.blink::CSSCustomPropertyDeclaration"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue27CSSPendingSubstitutionValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPendingSubstitutionValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue25CSSPendingSystemFontValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSPendingSystemFontValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink23CSSInvalidVariableValue13CustomCSSTextEv(%"class.blink::CSSInvalidVariableValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink22CSSCyclicVariableValue13CustomCSSTextEv(%"class.blink::CSSCyclicVariableValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21CSSLightDarkValuePair13CustomCSSTextEv(%"class.blink::CSSLightDarkValuePair"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue18CSSIdSelectorValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSIdSelectorValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8cssvalue21CSSElementOffsetValue13CustomCSSTextEv(%"class.blink::cssvalue::CSSElementOffsetValue"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %3 = load i8, i8* %2, align 1
  switch i8 %3, label %423 [
    i8 58, label %4
    i8 11, label %405
    i8 43, label %375
    i8 42, label %363
    i8 54, label %361
    i8 52, label %339
    i8 8, label %337
    i8 7, label %319
    i8 40, label %301
    i8 28, label %26
    i8 29, label %28
    i8 27, label %46
    i8 39, label %263
    i8 31, label %64
    i8 53, label %82
    i8 55, label %241
    i8 21, label %104
    i8 22, label %127
    i8 23, label %150
    i8 19, label %173
    i8 20, label %175
    i8 6, label %177
    i8 17, label %195
    i8 57, label %219
    i8 56, label %197
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %6 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  %10 = bitcast i8* %5 to %"class.blink::Member"**
  %11 = load %"class.blink::Member"*, %"class.blink::Member"** %10, align 8
  br i1 %9, label %19, label %12, !prof !2

12:                                               ; preds = %4
  %13 = icmp ne %"class.blink::Member"* %11, null
  %14 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %15 = bitcast i8* %14 to %"class.blink::Member"*
  %16 = icmp ne %"class.blink::Member"* %11, %15
  %17 = and i1 %13, %16
  br i1 %17, label %19, label %18

18:                                               ; preds = %12
  store i32 0, i32* %7, align 4
  br label %19

19:                                               ; preds = %4, %18, %12
  %20 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %21 = bitcast i8* %20 to %"class.blink::Member"*
  %22 = icmp eq %"class.blink::Member"* %11, %21
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %19
  %24 = bitcast i8* %5 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %24, %"class.blink::Member"* %11) #8
  br label %25

25:                                               ; preds = %19, %23
  store %"class.blink::Member"* null, %"class.blink::Member"** %10, align 8
  br label %423

26:                                               ; preds = %1
  %27 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFontFaceSrcValue"*
  tail call void @_ZN5blink19CSSFontFaceSrcValueD2Ev(%"class.blink::CSSFontFaceSrcValue"* %27) #8
  br label %423

28:                                               ; preds = %1
  %29 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %30 = bitcast i8* %29 to %"class.WTF::StringImpl"**
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %423, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %423

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %423

46:                                               ; preds = %1
  %47 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %48 = bitcast i8* %47 to %"class.WTF::StringImpl"**
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %423, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %423

63:                                               ; preds = %60
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #8
  br label %423

64:                                               ; preds = %1
  %65 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %66 = bitcast i8* %65 to %"class.WTF::StringImpl"**
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %423, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %423

81:                                               ; preds = %78
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #8
  br label %423

82:                                               ; preds = %1
  %83 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %84 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %85 = bitcast i8* %84 to i32*
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %86, 0
  %88 = bitcast i8* %83 to %"class.blink::Member"**
  %89 = load %"class.blink::Member"*, %"class.blink::Member"** %88, align 8
  br i1 %87, label %97, label %90, !prof !2

90:                                               ; preds = %82
  %91 = icmp ne %"class.blink::Member"* %89, null
  %92 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %93 = bitcast i8* %92 to %"class.blink::Member"*
  %94 = icmp ne %"class.blink::Member"* %89, %93
  %95 = and i1 %91, %94
  br i1 %95, label %97, label %96

96:                                               ; preds = %90
  store i32 0, i32* %85, align 4
  br label %97

97:                                               ; preds = %82, %96, %90
  %98 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %99 = bitcast i8* %98 to %"class.blink::Member"*
  %100 = icmp eq %"class.blink::Member"* %89, %99
  br i1 %100, label %103, label %101, !prof !3

101:                                              ; preds = %97
  %102 = bitcast i8* %83 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %102, %"class.blink::Member"* %89) #8
  br label %103

103:                                              ; preds = %97, %101
  store %"class.blink::Member"* null, %"class.blink::Member"** %88, align 8
  br label %423

104:                                              ; preds = %1
  %105 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 32
  %106 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 36
  %107 = bitcast %"class.blink::CSSValue"* %106 to i32*
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  %110 = bitcast %"class.blink::CSSValue"* %105 to %"struct.blink::cssvalue::CSSGradientColorStop"**
  %111 = load %"struct.blink::cssvalue::CSSGradientColorStop"*, %"struct.blink::cssvalue::CSSGradientColorStop"** %110, align 8
  br i1 %109, label %119, label %112, !prof !2

112:                                              ; preds = %104
  %113 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %111, null
  %114 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %115 = bitcast i8* %114 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %116 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %111, %115
  %117 = and i1 %113, %116
  br i1 %117, label %119, label %118

118:                                              ; preds = %112
  store i32 0, i32* %107, align 4
  br label %119

119:                                              ; preds = %104, %118, %112
  %120 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %121 = bitcast i8* %120 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %122 = icmp eq %"struct.blink::cssvalue::CSSGradientColorStop"* %111, %121
  br i1 %122, label %125, label %123, !prof !3

123:                                              ; preds = %119
  %124 = bitcast %"class.blink::CSSValue"* %105 to %"class.WTF::VectorBuffer.474"*
  tail call void @_ZN3WTF12VectorBufferIN5blink8cssvalue20CSSGradientColorStopELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.474"* %124, %"struct.blink::cssvalue::CSSGradientColorStop"* %111) #8
  br label %125

125:                                              ; preds = %119, %123
  store %"struct.blink::cssvalue::CSSGradientColorStop"* null, %"struct.blink::cssvalue::CSSGradientColorStop"** %110, align 8
  %126 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageGeneratorValue"*
  tail call void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"* %126) #8
  br label %423

127:                                              ; preds = %1
  %128 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 32
  %129 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 36
  %130 = bitcast %"class.blink::CSSValue"* %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = icmp eq i32 %131, 0
  %133 = bitcast %"class.blink::CSSValue"* %128 to %"struct.blink::cssvalue::CSSGradientColorStop"**
  %134 = load %"struct.blink::cssvalue::CSSGradientColorStop"*, %"struct.blink::cssvalue::CSSGradientColorStop"** %133, align 8
  br i1 %132, label %142, label %135, !prof !2

135:                                              ; preds = %127
  %136 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %134, null
  %137 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %138 = bitcast i8* %137 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %139 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %134, %138
  %140 = and i1 %136, %139
  br i1 %140, label %142, label %141

141:                                              ; preds = %135
  store i32 0, i32* %130, align 4
  br label %142

142:                                              ; preds = %127, %141, %135
  %143 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %144 = bitcast i8* %143 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %145 = icmp eq %"struct.blink::cssvalue::CSSGradientColorStop"* %134, %144
  br i1 %145, label %148, label %146, !prof !3

146:                                              ; preds = %142
  %147 = bitcast %"class.blink::CSSValue"* %128 to %"class.WTF::VectorBuffer.474"*
  tail call void @_ZN3WTF12VectorBufferIN5blink8cssvalue20CSSGradientColorStopELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.474"* %147, %"struct.blink::cssvalue::CSSGradientColorStop"* %134) #8
  br label %148

148:                                              ; preds = %142, %146
  store %"struct.blink::cssvalue::CSSGradientColorStop"* null, %"struct.blink::cssvalue::CSSGradientColorStop"** %133, align 8
  %149 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageGeneratorValue"*
  tail call void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"* %149) #8
  br label %423

150:                                              ; preds = %1
  %151 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 32
  %152 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 36
  %153 = bitcast %"class.blink::CSSValue"* %152 to i32*
  %154 = load i32, i32* %153, align 4
  %155 = icmp eq i32 %154, 0
  %156 = bitcast %"class.blink::CSSValue"* %151 to %"struct.blink::cssvalue::CSSGradientColorStop"**
  %157 = load %"struct.blink::cssvalue::CSSGradientColorStop"*, %"struct.blink::cssvalue::CSSGradientColorStop"** %156, align 8
  br i1 %155, label %165, label %158, !prof !2

158:                                              ; preds = %150
  %159 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %157, null
  %160 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %161 = bitcast i8* %160 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %162 = icmp ne %"struct.blink::cssvalue::CSSGradientColorStop"* %157, %161
  %163 = and i1 %159, %162
  br i1 %163, label %165, label %164

164:                                              ; preds = %158
  store i32 0, i32* %153, align 4
  br label %165

165:                                              ; preds = %150, %164, %158
  %166 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 37, i32 1
  %167 = bitcast i8* %166 to %"struct.blink::cssvalue::CSSGradientColorStop"*
  %168 = icmp eq %"struct.blink::cssvalue::CSSGradientColorStop"* %157, %167
  br i1 %168, label %171, label %169, !prof !3

169:                                              ; preds = %165
  %170 = bitcast %"class.blink::CSSValue"* %151 to %"class.WTF::VectorBuffer.474"*
  tail call void @_ZN3WTF12VectorBufferIN5blink8cssvalue20CSSGradientColorStopELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.474"* %170, %"struct.blink::cssvalue::CSSGradientColorStop"* %157) #8
  br label %171

171:                                              ; preds = %165, %169
  store %"struct.blink::cssvalue::CSSGradientColorStop"* null, %"struct.blink::cssvalue::CSSGradientColorStop"** %156, align 8
  %172 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageGeneratorValue"*
  tail call void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"* %172) #8
  br label %423

173:                                              ; preds = %1
  %174 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  tail call void @_ZN5blink8cssvalue17CSSCrossfadeValueD1Ev(%"class.blink::cssvalue::CSSCrossfadeValue"* %174) #8
  br label %423

175:                                              ; preds = %1
  %176 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPaintValue"*
  tail call void @_ZN5blink13CSSPaintValueD1Ev(%"class.blink::CSSPaintValue"* %176) #8
  br label %423

177:                                              ; preds = %1
  %178 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"**
  %180 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %179, align 8
  %181 = icmp eq %"class.WTF::StringImpl"* %180, null
  br i1 %181, label %423, label %182

182:                                              ; preds = %177
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %180, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %182
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %182
  %192 = phi i32 [ %190, %189 ], [ %188, %182 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %423

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %180) #8
  br label %423

195:                                              ; preds = %1
  %196 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageValue"*
  tail call void @_ZN5blink13CSSImageValueD1Ev(%"class.blink::CSSImageValue"* %196) #8
  br label %423

197:                                              ; preds = %1
  %198 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %199 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %200 = bitcast i8* %199 to i32*
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  %203 = bitcast i8* %198 to %"class.blink::Member"**
  %204 = load %"class.blink::Member"*, %"class.blink::Member"** %203, align 8
  br i1 %202, label %212, label %205, !prof !2

205:                                              ; preds = %197
  %206 = icmp ne %"class.blink::Member"* %204, null
  %207 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %208 = bitcast i8* %207 to %"class.blink::Member"*
  %209 = icmp ne %"class.blink::Member"* %204, %208
  %210 = and i1 %206, %209
  br i1 %210, label %212, label %211

211:                                              ; preds = %205
  store i32 0, i32* %200, align 4
  br label %212

212:                                              ; preds = %197, %211, %205
  %213 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %214 = bitcast i8* %213 to %"class.blink::Member"*
  %215 = icmp eq %"class.blink::Member"* %204, %214
  br i1 %215, label %218, label %216, !prof !3

216:                                              ; preds = %212
  %217 = bitcast i8* %198 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %217, %"class.blink::Member"* %204) #8
  br label %218

218:                                              ; preds = %212, %216
  store %"class.blink::Member"* null, %"class.blink::Member"** %203, align 8
  br label %423

219:                                              ; preds = %1
  %220 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %221 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %222 = bitcast i8* %221 to i32*
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  %225 = bitcast i8* %220 to %"class.blink::Member"**
  %226 = load %"class.blink::Member"*, %"class.blink::Member"** %225, align 8
  br i1 %224, label %234, label %227, !prof !2

227:                                              ; preds = %219
  %228 = icmp ne %"class.blink::Member"* %226, null
  %229 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %230 = bitcast i8* %229 to %"class.blink::Member"*
  %231 = icmp ne %"class.blink::Member"* %226, %230
  %232 = and i1 %228, %231
  br i1 %232, label %234, label %233

233:                                              ; preds = %227
  store i32 0, i32* %222, align 4
  br label %234

234:                                              ; preds = %219, %233, %227
  %235 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %236 = bitcast i8* %235 to %"class.blink::Member"*
  %237 = icmp eq %"class.blink::Member"* %226, %236
  br i1 %237, label %240, label %238, !prof !3

238:                                              ; preds = %234
  %239 = bitcast i8* %220 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %239, %"class.blink::Member"* %226) #8
  br label %240

240:                                              ; preds = %234, %238
  store %"class.blink::Member"* null, %"class.blink::Member"** %225, align 8
  br label %423

241:                                              ; preds = %1
  %242 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %243 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %244 = bitcast i8* %243 to i32*
  %245 = load i32, i32* %244, align 4
  %246 = icmp eq i32 %245, 0
  %247 = bitcast i8* %242 to %"class.blink::Member"**
  %248 = load %"class.blink::Member"*, %"class.blink::Member"** %247, align 8
  br i1 %246, label %256, label %249, !prof !2

249:                                              ; preds = %241
  %250 = icmp ne %"class.blink::Member"* %248, null
  %251 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %252 = bitcast i8* %251 to %"class.blink::Member"*
  %253 = icmp ne %"class.blink::Member"* %248, %252
  %254 = and i1 %250, %253
  br i1 %254, label %256, label %255

255:                                              ; preds = %249
  store i32 0, i32* %244, align 4
  br label %256

256:                                              ; preds = %241, %255, %249
  %257 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %258 = bitcast i8* %257 to %"class.blink::Member"*
  %259 = icmp eq %"class.blink::Member"* %248, %258
  br i1 %259, label %262, label %260, !prof !3

260:                                              ; preds = %256
  %261 = bitcast i8* %242 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %261, %"class.blink::Member"* %248) #8
  br label %262

262:                                              ; preds = %256, %260
  store %"class.blink::Member"* null, %"class.blink::Member"** %247, align 8
  br label %423

263:                                              ; preds = %1
  %264 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %265 = bitcast i8* %264 to %"struct.WTF::KeyValuePair.515"**
  %266 = load %"struct.WTF::KeyValuePair.515"*, %"struct.WTF::KeyValuePair.515"** %265, align 8
  %267 = icmp eq %"struct.WTF::KeyValuePair.515"* %266, null
  br i1 %267, label %423, label %268, !prof !3

268:                                              ; preds = %263
  %269 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 5, i32 1
  %270 = bitcast i8* %269 to i32*
  %271 = load i32, i32* %270, align 8
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %299, label %273

273:                                              ; preds = %268
  %274 = zext i32 %271 to i64
  br label %275

275:                                              ; preds = %296, %273
  %276 = phi i64 [ 0, %273 ], [ %297, %296 ]
  %277 = getelementptr inbounds %"struct.WTF::KeyValuePair.515", %"struct.WTF::KeyValuePair.515"* %266, i64 %276
  %278 = bitcast %"struct.WTF::KeyValuePair.515"* %277 to i8**
  %279 = load i8*, i8** %278, align 8
  %280 = bitcast i8* %279 to %"class.WTF::StringImpl"*
  %281 = ptrtoint i8* %279 to i64
  switch i64 %281, label %282 [
    i64 -1, label %296
    i64 0, label %296
  ]

282:                                              ; preds = %275
  %283 = getelementptr inbounds i8, i8* %279, i64 8
  %284 = bitcast i8* %283 to i32*
  %285 = load atomic i32, i32* %284 monotonic, align 4
  %286 = and i32 %285, 2
  %287 = icmp eq i32 %286, 0
  %288 = bitcast i8* %279 to i32*
  %289 = load i32, i32* %288, align 4
  br i1 %287, label %290, label %292

290:                                              ; preds = %282
  %291 = add i32 %289, -1
  store i32 %291, i32* %288, align 4
  br label %292

292:                                              ; preds = %290, %282
  %293 = phi i32 [ %291, %290 ], [ %289, %282 ]
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %295, label %296

295:                                              ; preds = %292
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %280) #8
  br label %296

296:                                              ; preds = %295, %292, %275, %275
  %297 = add nuw nsw i64 %276, 1
  %298 = icmp eq i64 %297, %274
  br i1 %298, label %299, label %275

299:                                              ; preds = %296, %268
  %300 = bitcast %"struct.WTF::KeyValuePair.515"* %266 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %300) #8
  store %"struct.WTF::KeyValuePair.515"* null, %"struct.WTF::KeyValuePair.515"** %265, align 8
  br label %423

301:                                              ; preds = %1
  %302 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %303 = bitcast i8* %302 to %"class.blink::StylePath"**
  %304 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %303, align 8
  %305 = icmp eq %"class.blink::StylePath"* %304, null
  br i1 %305, label %423, label %306

306:                                              ; preds = %301
  %307 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %304, i64 0, i32 0, i32 1, i32 0
  %308 = getelementptr inbounds %"class.base::RefCounted.518", %"class.base::RefCounted.518"* %307, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %308) #8
  %309 = getelementptr inbounds %"class.base::RefCounted.518", %"class.base::RefCounted.518"* %307, i64 0, i32 0, i32 0
  %310 = load i32, i32* %309, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %423

312:                                              ; preds = %306
  %313 = getelementptr inbounds %"class.base::RefCounted.518", %"class.base::RefCounted.518"* %307, i64 -2
  %314 = bitcast %"class.base::RefCounted.518"* %313 to %"class.blink::BasicShape"*
  %315 = bitcast %"class.base::RefCounted.518"* %313 to void (%"class.blink::BasicShape"*)***
  %316 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %315, align 8
  %317 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %316, i64 1
  %318 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %317, align 8
  tail call void %318(%"class.blink::BasicShape"* nonnull %314) #8
  br label %423

319:                                              ; preds = %1
  %320 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %321 = bitcast i8* %320 to %"class.WTF::StringImpl"**
  %322 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %321, align 8
  %323 = icmp eq %"class.WTF::StringImpl"* %322, null
  br i1 %323, label %423, label %324

324:                                              ; preds = %319
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %326 = load atomic i32, i32* %325 monotonic, align 4
  %327 = and i32 %326, 2
  %328 = icmp eq i32 %327, 0
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %322, i64 0, i32 0
  %330 = load i32, i32* %329, align 4
  br i1 %328, label %331, label %333

331:                                              ; preds = %324
  %332 = add i32 %330, -1
  store i32 %332, i32* %329, align 4
  br label %333

333:                                              ; preds = %331, %324
  %334 = phi i32 [ %332, %331 ], [ %330, %324 ]
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %423

336:                                              ; preds = %333
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %322) #8
  br label %423

337:                                              ; preds = %1
  %338 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSURIValue"*
  tail call void @_ZN5blink8cssvalue11CSSURIValueD1Ev(%"class.blink::cssvalue::CSSURIValue"* %338) #8
  br label %423

339:                                              ; preds = %1
  %340 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %341 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 6, i32 2
  %342 = bitcast i8* %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = icmp eq i32 %343, 0
  %345 = bitcast i8* %340 to %"class.blink::Member"**
  %346 = load %"class.blink::Member"*, %"class.blink::Member"** %345, align 8
  br i1 %344, label %354, label %347, !prof !2

347:                                              ; preds = %339
  %348 = icmp ne %"class.blink::Member"* %346, null
  %349 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %350 = bitcast i8* %349 to %"class.blink::Member"*
  %351 = icmp ne %"class.blink::Member"* %346, %350
  %352 = and i1 %348, %351
  br i1 %352, label %354, label %353

353:                                              ; preds = %347
  store i32 0, i32* %342, align 4
  br label %354

354:                                              ; preds = %339, %353, %347
  %355 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 8, i32 0
  %356 = bitcast i8* %355 to %"class.blink::Member"*
  %357 = icmp eq %"class.blink::Member"* %346, %356
  br i1 %357, label %360, label %358, !prof !3

358:                                              ; preds = %354
  %359 = bitcast i8* %340 to %"class.WTF::VectorBuffer"*
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"* %359, %"class.blink::Member"* %346) #8
  br label %360

360:                                              ; preds = %354, %358
  store %"class.blink::Member"* null, %"class.blink::Member"** %345, align 8
  br label %423

361:                                              ; preds = %1
  %362 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageSetValue"*
  tail call void @_ZN5blink16CSSImageSetValueD1Ev(%"class.blink::CSSImageSetValue"* %362) #8
  br label %423

363:                                              ; preds = %1
  %364 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %365 = bitcast i8* %364 to %"class.blink::CSSVariableData"**
  %366 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %365, align 8
  %367 = icmp eq %"class.blink::CSSVariableData"* %366, null
  br i1 %367, label %423, label %368

368:                                              ; preds = %363
  %369 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %366, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %369) #8
  %370 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %366, i64 0, i32 0, i32 0, i32 0, i32 0
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %423

373:                                              ; preds = %368
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %366) #8
  %374 = bitcast %"class.blink::CSSVariableData"* %366 to i8*
  tail call void @free(i8* %374) #8
  br label %423

375:                                              ; preds = %1
  %376 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 5, i32 1
  %377 = bitcast i8* %376 to %"class.blink::CSSVariableData"**
  %378 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %377, align 8
  %379 = icmp eq %"class.blink::CSSVariableData"* %378, null
  br i1 %379, label %387, label %380

380:                                              ; preds = %375
  %381 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %378, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %381) #8
  %382 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %378, i64 0, i32 0, i32 0, i32 0, i32 0
  %383 = load i32, i32* %382, align 4
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %380
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %378) #8
  %386 = bitcast %"class.blink::CSSVariableData"* %378 to i8*
  tail call void @free(i8* %386) #8
  br label %387

387:                                              ; preds = %385, %380, %375
  %388 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %389 = bitcast i8* %388 to %"class.WTF::StringImpl"**
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %391 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %391, label %423, label %392

392:                                              ; preds = %387
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  br i1 %396, label %399, label %401

399:                                              ; preds = %392
  %400 = add i32 %398, -1
  store i32 %400, i32* %397, align 4
  br label %401

401:                                              ; preds = %399, %392
  %402 = phi i32 [ %400, %399 ], [ %398, %392 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %423

404:                                              ; preds = %401
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #8
  br label %423

405:                                              ; preds = %1
  %406 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 2, i32 2
  %407 = bitcast i8* %406 to %"class.WTF::StringImpl"**
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %423, label %410

410:                                              ; preds = %405
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %416 = load i32, i32* %415, align 4
  br i1 %414, label %417, label %419

417:                                              ; preds = %410
  %418 = add i32 %416, -1
  store i32 %418, i32* %415, align 4
  br label %419

419:                                              ; preds = %417, %410
  %420 = phi i32 [ %418, %417 ], [ %416, %410 ]
  %421 = icmp eq i32 %420, 0
  br i1 %421, label %422, label %423

422:                                              ; preds = %419
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %408) #8
  br label %423

423:                                              ; preds = %422, %419, %405, %404, %401, %387, %373, %368, %363, %336, %333, %319, %312, %306, %301, %299, %263, %194, %191, %177, %81, %78, %64, %63, %60, %46, %45, %42, %28, %25, %26, %103, %125, %148, %171, %173, %175, %195, %218, %240, %262, %337, %360, %361, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19CSSFontFaceSrcValueD2Ev(%"class.blink::CSSFontFaceSrcValue"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 6, i32 0
  %3 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %2, align 8
  %4 = icmp eq %"class.blink::DOMWrapperWorld"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #8
  %7 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %3) #8
  %11 = bitcast %"class.blink::DOMWrapperWorld"* %3 to i8*
  tail call void @free(i8* %11) #8
  br label %12

12:                                               ; preds = %1, %5, %10
  %13 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #8
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 3, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #8
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 2, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #8
  br label %63

63:                                               ; preds = %46, %59, %62
  %64 = getelementptr inbounds %"class.blink::CSSFontFaceSrcValue", %"class.blink::CSSFontFaceSrcValue"* %0, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #8
  br label %80

80:                                               ; preds = %63, %76, %79
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8cssvalue17CSSCrossfadeValueD1Ev(%"class.blink::cssvalue::CSSCrossfadeValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13CSSPaintValueD1Ev(%"class.blink::CSSPaintValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink13CSSImageValueD1Ev(%"class.blink::CSSImageValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink8cssvalue11CSSURIValueD1Ev(%"class.blink::cssvalue::CSSURIValue"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink16CSSImageSetValueD1Ev(%"class.blink::CSSImageSetValue"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 0, i32 2
  %4 = load i8, i8* %3, align 1
  switch i8 %4, label %102 [
    i8 58, label %5
    i8 13, label %7
    i8 14, label %9
    i8 15, label %11
    i8 16, label %13
    i8 26, label %15
    i8 12, label %100
    i8 4, label %17
    i8 18, label %19
    i8 28, label %21
    i8 29, label %32
    i8 11, label %98
    i8 30, label %34
    i8 10, label %96
    i8 53, label %36
    i8 48, label %38
    i8 21, label %40
    i8 22, label %42
    i8 23, label %44
    i8 19, label %46
    i8 20, label %48
    i8 6, label %50
    i8 17, label %52
    i8 45, label %94
    i8 44, label %92
    i8 43, label %90
    i8 42, label %88
    i8 56, label %54
    i8 57, label %56
    i8 55, label %58
    i8 54, label %86
    i8 40, label %60
    i8 0, label %62
    i8 1, label %64
    i8 41, label %66
    i8 2, label %68
    i8 50, label %70
    i8 9, label %84
    i8 5, label %72
    i8 36, label %74
    i8 37, label %76
    i8 7, label %78
    i8 52, label %82
    i8 8, label %80
  ]

5:                                                ; preds = %2
  %6 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %6, %"class.blink::Visitor"* %1) #8
  br label %102

7:                                                ; preds = %2
  %8 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeCircleValue"*
  tail call void @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeCircleValue"* %8, %"class.blink::Visitor"* %1) #8
  br label %102

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeEllipseValue"*
  tail call void @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"* %10, %"class.blink::Visitor"* %1) #8
  br label %102

11:                                               ; preds = %2
  %12 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapePolygonValue"*
  tail call void @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapePolygonValue"* %12, %"class.blink::Visitor"* %1) #8
  br label %102

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBasicShapeInsetValue"*
  tail call void @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeInsetValue"* %14, %"class.blink::Visitor"* %1) #8
  br label %102

15:                                               ; preds = %2
  %16 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSBorderImageSliceValue"*
  tail call void @_ZNK5blink8cssvalue24CSSBorderImageSliceValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBorderImageSliceValue"* %16, %"class.blink::Visitor"* %1) #8
  br label %102

17:                                               ; preds = %2
  %18 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCounterValue"*
  tail call void @_ZNK5blink8cssvalue15CSSCounterValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCounterValue"* %18, %"class.blink::Visitor"* %1) #8
  br label %102

19:                                               ; preds = %2
  %20 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCursorImageValue"*
  tail call void @_ZNK5blink8cssvalue19CSSCursorImageValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCursorImageValue"* %20, %"class.blink::Visitor"* %1) #8
  br label %102

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::CSSValue", %"class.blink::CSSValue"* %0, i64 24
  %23 = bitcast %"class.blink::CSSValue"* %22 to i64*
  %24 = load atomic i64, i64* %23 monotonic, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %102, label %26

26:                                               ; preds = %21
  %27 = inttoptr i64 %24 to i8*
  %28 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %29 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %29, i64 5
  %31 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %30, align 8
  tail call void %31(%"class.blink::Visitor"* %1, i8* nonnull %27, i8* nonnull %27, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSFontFaceSrcValue18FontResourceHelperEE5TraceEPNS_7VisitorEPKv) #8
  br label %102

32:                                               ; preds = %2
  %33 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSFontFamilyValue"*
  tail call void @_ZNK5blink18CSSFontFamilyValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSFontFamilyValue"* %33, %"class.blink::Visitor"* %1) #8
  br label %102

34:                                               ; preds = %2
  %35 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSFontStyleRangeValue"*
  tail call void @_ZNK5blink8cssvalue22CSSFontStyleRangeValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSFontStyleRangeValue"* %35, %"class.blink::Visitor"* %1) #8
  br label %102

36:                                               ; preds = %2
  %37 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %37, %"class.blink::Visitor"* %1) #8
  br label %102

38:                                               ; preds = %2
  %39 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSLayoutFunctionValue"*
  tail call void @_ZNK5blink8cssvalue22CSSLayoutFunctionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSLayoutFunctionValue"* %39, %"class.blink::Visitor"* %1) #8
  br label %102

40:                                               ; preds = %2
  %41 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSLinearGradientValue"*
  tail call void @_ZNK5blink8cssvalue22CSSLinearGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSLinearGradientValue"* %41, %"class.blink::Visitor"* %1) #8
  br label %102

42:                                               ; preds = %2
  %43 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSRadialGradientValue"*
  tail call void @_ZNK5blink8cssvalue22CSSRadialGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSRadialGradientValue"* %43, %"class.blink::Visitor"* %1) #8
  br label %102

44:                                               ; preds = %2
  %45 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSConicGradientValue"*
  tail call void @_ZNK5blink8cssvalue21CSSConicGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSConicGradientValue"* %45, %"class.blink::Visitor"* %1) #8
  br label %102

46:                                               ; preds = %2
  %47 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSCrossfadeValue"*
  tail call void @_ZNK5blink8cssvalue17CSSCrossfadeValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCrossfadeValue"* %47, %"class.blink::Visitor"* %1) #8
  br label %102

48:                                               ; preds = %2
  %49 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSPaintValue"*
  tail call void @_ZNK5blink13CSSPaintValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSPaintValue"* %49, %"class.blink::Visitor"* %1) #8
  br label %102

50:                                               ; preds = %2
  %51 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSCustomIdentValue"*
  tail call void @_ZNK5blink19CSSCustomIdentValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSCustomIdentValue"* %51, %"class.blink::Visitor"* %1) #8
  br label %102

52:                                               ; preds = %2
  %53 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageValue"*
  tail call void @_ZNK5blink13CSSImageValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSImageValue"* %53, %"class.blink::Visitor"* %1) #8
  br label %102

54:                                               ; preds = %2
  %55 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %55, %"class.blink::Visitor"* %1) #8
  br label %102

56:                                               ; preds = %2
  %57 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %57, %"class.blink::Visitor"* %1) #8
  br label %102

58:                                               ; preds = %2
  %59 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %59, %"class.blink::Visitor"* %1) #8
  br label %102

60:                                               ; preds = %2
  %61 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPathValue"*
  tail call void @_ZNK5blink8cssvalue12CSSPathValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPathValue"* %61, %"class.blink::Visitor"* %1) #8
  br label %102

62:                                               ; preds = %2
  %63 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSNumericLiteralValue"*
  tail call void @_ZNK5blink22CSSNumericLiteralValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSNumericLiteralValue"* %63, %"class.blink::Visitor"* %1) #8
  br label %102

64:                                               ; preds = %2
  %65 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSMathFunctionValue"*
  tail call void @_ZNK5blink20CSSMathFunctionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSMathFunctionValue"* %65, %"class.blink::Visitor"* %1) #8
  br label %102

66:                                               ; preds = %2
  %67 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSRayValue"*
  tail call void @_ZNK5blink8cssvalue11CSSRayValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSRayValue"* %67, %"class.blink::Visitor"* %1) #8
  br label %102

68:                                               ; preds = %2
  %69 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSIdentifierValue"*
  tail call void @_ZNK5blink18CSSIdentifierValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSIdentifierValue"* %69, %"class.blink::Visitor"* %1) #8
  br label %102

70:                                               ; preds = %2
  %71 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSKeyframeShorthandValue"*
  tail call void @_ZNK5blink25CSSKeyframeShorthandValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSKeyframeShorthandValue"* %71, %"class.blink::Visitor"* %1) #8
  br label %102

72:                                               ; preds = %2
  %73 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSQuadValue"*
  tail call void @_ZNK5blink12CSSQuadValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSQuadValue"* %73, %"class.blink::Visitor"* %1) #8
  br label %102

74:                                               ; preds = %2
  %75 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSReflectValue"*
  tail call void @_ZNK5blink8cssvalue15CSSReflectValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSReflectValue"* %75, %"class.blink::Visitor"* %1) #8
  br label %102

76:                                               ; preds = %2
  %77 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSShadowValue"*
  tail call void @_ZNK5blink14CSSShadowValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSShadowValue"* %77, %"class.blink::Visitor"* %1) #8
  br label %102

78:                                               ; preds = %2
  %79 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSStringValue"*
  tail call void @_ZNK5blink14CSSStringValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSStringValue"* %79, %"class.blink::Visitor"* %1) #8
  br label %102

80:                                               ; preds = %2
  %81 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSURIValue"*
  tail call void @_ZNK5blink8cssvalue11CSSURIValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSURIValue"* %81, %"class.blink::Visitor"* %1) #8
  br label %102

82:                                               ; preds = %2
  %83 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValueList"*
  tail call void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"* %83, %"class.blink::Visitor"* %1) #8
  br label %102

84:                                               ; preds = %2
  %85 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValuePair"*
  tail call void @_ZNK5blink12CSSValuePair18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValuePair"* %85, %"class.blink::Visitor"* %1) #8
  br label %102

86:                                               ; preds = %2
  %87 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSImageSetValue"*
  tail call void @_ZNK5blink16CSSImageSetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSImageSetValue"* %87, %"class.blink::Visitor"* %1) #8
  br label %102

88:                                               ; preds = %2
  %89 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSVariableReferenceValue"*
  tail call void @_ZNK5blink25CSSVariableReferenceValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSVariableReferenceValue"* %89, %"class.blink::Visitor"* %1) #8
  br label %102

90:                                               ; preds = %2
  %91 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSCustomPropertyDeclaration"*
  tail call void @_ZNK5blink28CSSCustomPropertyDeclaration18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSCustomPropertyDeclaration"* %91, %"class.blink::Visitor"* %1) #8
  br label %102

92:                                               ; preds = %2
  %93 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSubstitutionValue"*
  tail call void @_ZNK5blink8cssvalue27CSSPendingSubstitutionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPendingSubstitutionValue"* %93, %"class.blink::Visitor"* %1) #8
  br label %102

94:                                               ; preds = %2
  %95 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSPendingSystemFontValue"*
  tail call void @_ZNK5blink8cssvalue25CSSPendingSystemFontValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPendingSystemFontValue"* %95, %"class.blink::Visitor"* %1) #8
  br label %102

96:                                               ; preds = %2
  %97 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::CSSValuePair"*
  tail call void @_ZNK5blink12CSSValuePair18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValuePair"* %97, %"class.blink::Visitor"* %1) #8
  br label %102

98:                                               ; preds = %2
  %99 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSIdSelectorValue"*
  tail call void @_ZNK5blink8cssvalue18CSSIdSelectorValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSIdSelectorValue"* %99, %"class.blink::Visitor"* %1) #8
  br label %102

100:                                              ; preds = %2
  %101 = bitcast %"class.blink::CSSValue"* %0 to %"class.blink::cssvalue::CSSElementOffsetValue"*
  tail call void @_ZNK5blink8cssvalue21CSSElementOffsetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSElementOffsetValue"* %101, %"class.blink::Visitor"* %1) #8
  br label %102

102:                                              ; preds = %26, %21, %5, %7, %9, %11, %13, %15, %17, %19, %32, %34, %36, %38, %40, %42, %44, %46, %48, %50, %52, %54, %56, %58, %60, %62, %64, %66, %68, %70, %72, %74, %76, %78, %80, %82, %84, %86, %88, %90, %92, %94, %96, %98, %100, %2
  ret void
}

declare void @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeCircleValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBasicShapeInsetValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue24CSSBorderImageSliceValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSBorderImageSliceValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue15CSSCounterValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCounterValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue19CSSCursorImageValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCursorImageValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink18CSSFontFamilyValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSFontFamilyValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue22CSSFontStyleRangeValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSFontStyleRangeValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue22CSSLayoutFunctionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSLayoutFunctionValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue22CSSLinearGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSLinearGradientValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue22CSSRadialGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSRadialGradientValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue21CSSConicGradientValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSConicGradientValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue17CSSCrossfadeValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink13CSSPaintValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSPaintValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink19CSSCustomIdentValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSCustomIdentValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink13CSSImageValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSImageValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue12CSSPathValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPathValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink22CSSNumericLiteralValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSNumericLiteralValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink20CSSMathFunctionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSMathFunctionValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue11CSSRayValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSRayValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink18CSSIdentifierValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSIdentifierValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink25CSSKeyframeShorthandValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSKeyframeShorthandValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink12CSSQuadValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSQuadValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue15CSSReflectValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSReflectValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink14CSSShadowValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSShadowValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink14CSSStringValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSStringValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue11CSSURIValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSURIValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink12CSSValueList18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValueList"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink12CSSValuePair18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSValuePair"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink16CSSImageSetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSImageSetValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink25CSSVariableReferenceValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSVariableReferenceValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink28CSSCustomPropertyDeclaration18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSCustomPropertyDeclaration"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue27CSSPendingSubstitutionValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPendingSubstitutionValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue25CSSPendingSystemFontValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSPendingSystemFontValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue18CSSIdSelectorValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSIdSelectorValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZNK5blink8cssvalue21CSSElementOffsetValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::cssvalue::CSSElementOffsetValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink8CSSValue14AllocateObjectINS_18CSSIdentifierValueEEEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %11
  %20 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %21 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %20, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_8CSSValueEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #8
  br label %22

22:                                               ; preds = %11, %19
  %23 = phi i32 [ %17, %11 ], [ %21, %19 ]
  %24 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 7
  %25 = bitcast %"class.blink::BaseArena"** %24 to %"class.blink::NormalPageArena"**
  %26 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %25, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %28, align 8
  %29 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  %30 = icmp ult i64 %0, -8
  br i1 %30, label %31, label %32

31:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* null, i8** %28, align 8
  br label %42

32:                                               ; preds = %22
  %33 = add nsw i64 %0, 8
  %34 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %33) #8
  %35 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.1, i64 0, i64 0), i8* %34, i8* %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %37 = load i8*, i8** %36, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  store i8* %37, i8** %28, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %32
  %40 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.2, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #8
  %41 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #8
  br label %42

42:                                               ; preds = %31, %32, %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #8
  %43 = add i64 %0, 15
  %44 = and i64 %43, -8
  %45 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 4
  %46 = load i64, i64* %45, align 8
  %47 = icmp ult i64 %46, %44
  br i1 %47, label %80, label %48, !prof !2

48:                                               ; preds = %42
  %49 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %26, i64 0, i32 3
  %50 = load i8*, i8** %49, align 8
  %51 = getelementptr inbounds i8, i8* %50, i64 %44
  store i8* %51, i8** %49, align 8
  %52 = sub i64 %46, %44
  store i64 %52, i64* %45, align 8
  %53 = bitcast i8* %50 to i32*
  store i32 0, i32* %53, align 4
  %54 = getelementptr inbounds i8, i8* %50, i64 4
  %55 = bitcast i8* %54 to i16*
  %56 = trunc i32 %23 to i16
  %57 = shl i16 %56, 2
  store atomic i16 %57, i16* %55 monotonic, align 2
  %58 = lshr exact i64 %44, 1
  %59 = trunc i64 %58 to i16
  %60 = getelementptr inbounds i8, i8* %50, i64 6
  %61 = bitcast i8* %60 to i16*
  store i16 %59, i16* %61, align 2
  %62 = ptrtoint i8* %50 to i64
  %63 = and i64 %62, -131072
  %64 = inttoptr i64 %63 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 4400
  %66 = bitcast i8* %65 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %67 = bitcast i8* %65 to i64*
  %68 = load i64, i64* %67, align 16
  %69 = sub i64 %62, %68
  %70 = lshr i64 %69, 3
  %71 = lshr i64 %69, 6
  %72 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %66, i64 0, i32 0, i32 1, i64 %71
  %73 = load i8, i8* %72, align 1
  %74 = trunc i64 %70 to i32
  %75 = and i32 %74, 7
  %76 = shl i32 1, %75
  %77 = trunc i32 %76 to i8
  %78 = or i8 %73, %77
  store atomic i8 %78, i8* %72 release, align 1
  %79 = getelementptr inbounds i8, i8* %50, i64 8
  br label %83

80:                                               ; preds = %42
  %81 = zext i32 %23 to i64
  %82 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %26, i64 %44, i64 %81) #8
  br label %83

83:                                               ; preds = %48, %80
  %84 = phi i8* [ %79, %48 ], [ %82, %80 ]
  ret i8* %84
}

declare void @_ZN5blink18CSSIdentifierValueC1ERKNS_6LengthE(%"class.blink::CSSIdentifierValue"*, %"class.blink::Length"* dereferenceable(8)) unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8CSSValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_8CSSValueEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSValue"*
  tail call void @_ZN5blink8CSSValue30FinalizeGarbageCollectedObjectEv(%"class.blink::CSSValue"* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_8CSSValueEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEcS1_EENS_12StringAppendINS2_IT_T0_EET1_EERKS5_S6_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.591"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.591", %"class.WTF::StringAppend.591"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #8
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.591", %"class.WTF::StringAppend.591"* %1, i64 0, i32 1
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  %36 = zext i32 %35 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #8
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %33
  tail call void @llvm.trap() #8
  unreachable

43:                                               ; preds = %33
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %34, align 4
  br label %46

45:                                               ; preds = %24
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* null)
  br label %58

46:                                               ; preds = %28, %43
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8 %26, %"class.WTF::StringImpl"* nonnull %2)
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %46
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %46
  %55 = phi i32 [ %53, %52 ], [ %51, %46 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #8
  br label %58

58:                                               ; preds = %45, %54, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.592", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.592", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.592", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.592", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  %14 = select i1 %13, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %12
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %109, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %9, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %109, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #8
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #8
  %30 = load i8*, i8** %6, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %32 = bitcast %"class.WTF::StringTypeAdapter.592"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %5, i64 0, i32 0, i32 0, i32 1
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %32, i8 -86, i64 24, i1 false) #8
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %37, label %39

37:                                               ; preds = %26
  %38 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

39:                                               ; preds = %26
  %40 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 1
  %44 = bitcast %"class.WTF::StringImpl"* %43 to i8*
  br label %45

45:                                               ; preds = %39, %37
  %46 = phi i8* [ null, %37 ], [ %44, %39 ]
  %47 = phi i64 [ %38, %37 ], [ %40, %39 ]
  %48 = phi i32 [ 0, %37 ], [ %42, %39 ]
  %49 = bitcast %"class.WTF::StringTypeAdapter.592"* %5 to i64*
  store i64 %47, i64* %49, align 8
  store i8* %46, i8** %33, align 8
  store i32 %48, i32* %34, align 8
  %50 = bitcast %"class.WTF::StringTypeAdapter.592"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #8
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %4, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 24, i1 false) #8
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %55, label %57

55:                                               ; preds = %45
  %56 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %63

57:                                               ; preds = %45
  %58 = ptrtoint %"class.WTF::StringImpl"* %53 to i64
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 1
  %60 = load i32, i32* %59, align 4
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 1
  %62 = bitcast %"class.WTF::StringImpl"* %61 to i8*
  br label %63

63:                                               ; preds = %55, %57
  %64 = phi i8* [ null, %55 ], [ %62, %57 ]
  %65 = phi i64 [ %56, %55 ], [ %58, %57 ]
  %66 = phi i32 [ 0, %55 ], [ %60, %57 ]
  %67 = bitcast %"class.WTF::StringTypeAdapter.592"* %4 to i64*
  store i64 %65, i64* %67, align 8
  store i8* %64, i8** %51, align 8
  store i32 %66, i32* %52, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %69 = load i8, i8* %68, align 8
  %70 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.593"* nonnull %70, i8* %30) #8
  %71 = load i32, i32* %52, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i8, i8* %30, i64 %72
  store i8 %69, i8* %73, align 1
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #8
  %74 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %5, i64 0, i32 0
  %75 = call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.591"* %31) #8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds i8, i8* %30, i64 %76
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.593"* nonnull %74, i8* %77) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #8
  %78 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %78, label %193, label %79

79:                                               ; preds = %63
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %96

86:                                               ; preds = %79
  %87 = zext i32 %85 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #8
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %86
  call void @llvm.trap() #8
  unreachable

94:                                               ; preds = %86
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %84, align 4
  br label %96

96:                                               ; preds = %79, %94
  %97 = phi i32 [ %95, %94 ], [ %85, %79 ]
  %98 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %99 = load atomic i32, i32* %80 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %104 = add i32 %97, -1
  store i32 %104, i32* %103, align 4
  br label %105

105:                                              ; preds = %102, %96
  %106 = phi i32 [ %104, %102 ], [ %97, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %193

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #8
  br label %193

109:                                              ; preds = %19, %1
  %110 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #8
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %111 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %111, i16** nonnull dereferenceable(8) %7) #8
  %113 = load i16*, i16** %7, align 8
  %114 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %115 = bitcast %"class.WTF::StringTypeAdapter.592"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %115) #8
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %3, i64 0, i32 0, i32 0, i32 1
  %117 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %115, i8 -86, i64 24, i1 false) #8
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %120, label %122

120:                                              ; preds = %109
  %121 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %128

122:                                              ; preds = %109
  %123 = ptrtoint %"class.WTF::StringImpl"* %118 to i64
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 1
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 1
  %127 = bitcast %"class.WTF::StringImpl"* %126 to i8*
  br label %128

128:                                              ; preds = %122, %120
  %129 = phi i8* [ null, %120 ], [ %127, %122 ]
  %130 = phi i64 [ %121, %120 ], [ %123, %122 ]
  %131 = phi i32 [ 0, %120 ], [ %125, %122 ]
  %132 = bitcast %"class.WTF::StringTypeAdapter.592"* %3 to i64*
  store i64 %130, i64* %132, align 8
  store i8* %129, i8** %116, align 8
  store i32 %131, i32* %117, align 8
  %133 = bitcast %"class.WTF::StringTypeAdapter.592"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %133) #8
  %134 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %2, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %133, i8 -86, i64 24, i1 false) #8
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %137 = icmp eq %"class.WTF::StringImpl"* %136, null
  br i1 %137, label %138, label %140

138:                                              ; preds = %128
  %139 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %146

140:                                              ; preds = %128
  %141 = ptrtoint %"class.WTF::StringImpl"* %136 to i64
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 0, i32 1
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %136, i64 1
  %145 = bitcast %"class.WTF::StringImpl"* %144 to i8*
  br label %146

146:                                              ; preds = %138, %140
  %147 = phi i8* [ null, %138 ], [ %145, %140 ]
  %148 = phi i64 [ %139, %138 ], [ %141, %140 ]
  %149 = phi i32 [ 0, %138 ], [ %143, %140 ]
  %150 = bitcast %"class.WTF::StringTypeAdapter.592"* %2 to i64*
  store i64 %148, i64* %150, align 8
  store i8* %147, i8** %134, align 8
  store i32 %149, i32* %135, align 8
  %151 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %152 = load i8, i8* %151, align 8
  %153 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.593"* nonnull %153, i16* %113) #8
  %154 = load i32, i32* %135, align 8
  %155 = zext i32 %154 to i64
  %156 = getelementptr inbounds i16, i16* %113, i64 %155
  %157 = zext i8 %152 to i16
  store i16 %157, i16* %156, align 2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %133) #8
  %158 = getelementptr inbounds %"class.WTF::StringTypeAdapter.592", %"class.WTF::StringTypeAdapter.592"* %3, i64 0, i32 0
  %159 = call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.591"* %114) #8
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds i16, i16* %113, i64 %160
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.593"* nonnull %158, i16* %161) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %115) #8
  %162 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %162, label %193, label %163

163:                                              ; preds = %146
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %180

170:                                              ; preds = %163
  %171 = zext i32 %169 to i33
  %172 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %171, i33 1) #8
  %173 = extractvalue { i33, i1 } %172, 1
  %174 = extractvalue { i33, i1 } %172, 0
  %175 = icmp slt i33 %174, 0
  %176 = or i1 %173, %175
  br i1 %176, label %177, label %178, !prof !2

177:                                              ; preds = %170
  call void @llvm.trap() #8
  unreachable

178:                                              ; preds = %170
  %179 = trunc i33 %174 to i32
  store i32 %179, i32* %168, align 4
  br label %180

180:                                              ; preds = %163, %178
  %181 = phi i32 [ %179, %178 ], [ %169, %163 ]
  %182 = ptrtoint %"class.WTF::StringImpl"* %112 to i64
  %183 = load atomic i32, i32* %164 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %189

186:                                              ; preds = %180
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %188 = add i32 %181, -1
  store i32 %188, i32* %187, align 4
  br label %189

189:                                              ; preds = %186, %180
  %190 = phi i32 [ %188, %186 ], [ %181, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #8
  br label %193

193:                                              ; preds = %192, %189, %146, %108, %105, %63
  %194 = phi i8* [ %27, %63 ], [ %27, %105 ], [ %27, %108 ], [ %110, %146 ], [ %110, %189 ], [ %110, %192 ]
  %195 = phi i64 [ 0, %63 ], [ %98, %105 ], [ %98, %108 ], [ 0, %146 ], [ %182, %189 ], [ %182, %192 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #8
  %196 = inttoptr i64 %195 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %196
}

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEcEES1_EC2ES2_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %5, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #8
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #8
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %4, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  store i8 %2, i8* %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %26, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %27, label %57, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %45

35:                                               ; preds = %28
  %36 = zext i32 %34 to i33
  %37 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %36, i33 1) #8
  %38 = extractvalue { i33, i1 } %37, 1
  %39 = extractvalue { i33, i1 } %37, 0
  %40 = icmp slt i33 %39, 0
  %41 = or i1 %38, %40
  br i1 %41, label %42, label %43, !prof !2

42:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

43:                                               ; preds = %35
  %44 = trunc i33 %39 to i32
  store i32 %44, i32* %33, align 4
  br label %45

45:                                               ; preds = %28, %43
  %46 = phi i32 [ %44, %43 ], [ %34, %28 ]
  %47 = load atomic i32, i32* %29 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %52 = add i32 %46, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %45
  %54 = phi i32 [ %52, %50 ], [ %46, %45 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #8
  br label %57

57:                                               ; preds = %24, %53, %56
  br i1 %6, label %71, label %58

58:                                               ; preds = %57
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #8
  br label %71

71:                                               ; preds = %57, %67, %70
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.591"* %8) #8
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #8
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.591"* %8) #8
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %26, i8* %27) #8
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #8
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #8
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #8
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %41, i8* %42) #8
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #8
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #8
  ret i32 %18
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEcE6lengthEv(%"class.WTF::StringAppend.591"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.591", %"class.WTF::StringAppend.591"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = add i32 %15, 1
  %17 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp eq i32 %15, -1
  br i1 %20, label %22, label %21

21:                                               ; preds = %14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #8
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 -1) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.4, i64 0, i64 0), i8* %23, i8* %24) #8
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #8
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #8
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  %32 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #8
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %33, align 8
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = icmp eq i32 %16, 0
  br i1 %35, label %37, label %36

36:                                               ; preds = %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %33, align 8
  br label %46

37:                                               ; preds = %31
  %38 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #8
  %39 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 1) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.6, i64 0, i64 0), i8* %38, i8* %39) #8
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %41, i8** %33, align 8
  %42 = icmp eq i8* %41, null
  br i1 %42, label %46, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.5, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #8
  %45 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #8
  br label %46

46:                                               ; preds = %36, %37, %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #8
  ret i32 %16
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.593"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.593"*, i16*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberIKNS1_8CSSValueEEELj4ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer"*, %"class.blink::Member"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"class.blink::Member"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink8cssvalue20CSSGradientColorStopELj2ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.474"*, %"struct.blink::cssvalue::CSSGradientColorStop"*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast %"struct.blink::cssvalue::CSSGradientColorStop"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #8
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #8
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #8
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #8
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.224", %"class.WTF::Vector.224"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !2

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #8
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.224"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #8
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSFontFaceSrcValue18FontResourceHelperEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = load void (%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"*, %"class.blink::Visitor"*)** %5, align 8
  tail call void %6(%"class.blink::CSSFontFaceSrcValue::FontResourceHelper"* %3, %"class.blink::Visitor"* %0) #8
  ret void
}

declare zeroext i1 @_ZNK5blink12CSSValueList6EqualsERKS0_(%"class.blink::CSSValueList"*, %"class.blink::CSSValueList"* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue24CSSBasicShapeCircleValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeCircleValue"*, %"class.blink::cssvalue::CSSBasicShapeCircleValue"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapeEllipseValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeEllipseValue"*, %"class.blink::cssvalue::CSSBasicShapeEllipseValue"* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue25CSSBasicShapePolygonValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapePolygonValue"*, %"class.blink::cssvalue::CSSBasicShapePolygonValue"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue23CSSBasicShapeInsetValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBasicShapeInsetValue"*, %"class.blink::cssvalue::CSSBasicShapeInsetValue"* dereferenceable(72)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue24CSSBorderImageSliceValue6EqualsERKS1_(%"class.blink::cssvalue::CSSBorderImageSliceValue"*, %"class.blink::cssvalue::CSSBorderImageSliceValue"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8cssvalue15CSSCounterValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCounterValue"*, %"class.blink::cssvalue::CSSCounterValue"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %25

15:                                               ; preds = %8
  %16 = zext i32 %14 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #8
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %15
  tail call void @llvm.trap() #8
  unreachable

23:                                               ; preds = %15
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %13, align 4
  br label %25

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %24, %23 ], [ %14, %8 ]
  %27 = load atomic i32, i32* %9 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  br i1 %29, label %31, label %41

31:                                               ; preds = %25
  %32 = zext i32 %26 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #8
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  tail call void @llvm.trap() #8
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %25
  %42 = phi i32 [ %40, %39 ], [ %26, %25 ]
  %43 = load atomic i32, i32* %9 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = add i32 %42, -1
  store i32 %47, i32* %30, align 4
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i32 [ %47, %46 ], [ %42, %41 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #8
  br label %52

52:                                               ; preds = %2, %48, %51
  %53 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %1, i64 0, i32 1, i32 0, i32 0
  %54 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %54, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %102, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %75

65:                                               ; preds = %58
  %66 = zext i32 %64 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #8
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !2

72:                                               ; preds = %65
  tail call void @llvm.trap() #8
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %63, align 4
  br label %75

75:                                               ; preds = %58, %73
  %76 = phi i32 [ %74, %73 ], [ %64, %58 ]
  %77 = load atomic i32, i32* %59 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  br i1 %79, label %81, label %91

81:                                               ; preds = %75
  %82 = zext i32 %76 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #8
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %81
  tail call void @llvm.trap() #8
  unreachable

89:                                               ; preds = %81
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %75
  %92 = phi i32 [ %90, %89 ], [ %76, %75 ]
  %93 = load atomic i32, i32* %59 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = add i32 %92, -1
  store i32 %97, i32* %80, align 4
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i32 [ %97, %96 ], [ %92, %91 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %102

102:                                              ; preds = %52, %98, %101
  %103 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %56) #8
  br i1 %103, label %104, label %257

104:                                              ; preds = %102
  %105 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %0, i64 0, i32 2, i32 0, i32 0
  %106 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %106, i64 0, i32 2, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %127, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #8
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %115
  tail call void @llvm.trap() #8
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %104, %110, %125
  %128 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %1, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %129, i64 0, i32 2, i32 0, i32 0, i32 0
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %130, align 8
  %132 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %132, label %150, label %133

133:                                              ; preds = %127
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = and i32 %135, 2
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %150

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = zext i32 %140 to i33
  %142 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %141, i33 1) #8
  %143 = extractvalue { i33, i1 } %142, 1
  %144 = extractvalue { i33, i1 } %142, 0
  %145 = icmp slt i33 %144, 0
  %146 = or i1 %143, %145
  br i1 %146, label %147, label %148, !prof !2

147:                                              ; preds = %138
  tail call void @llvm.trap() #8
  unreachable

148:                                              ; preds = %138
  %149 = trunc i33 %144 to i32
  store i32 %149, i32* %139, align 4
  br label %150

150:                                              ; preds = %127, %133, %148
  %151 = icmp eq %"class.WTF::StringImpl"* %108, %131
  br i1 %151, label %152, label %228

152:                                              ; preds = %150
  %153 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %0, i64 0, i32 3, i32 0, i32 0
  %154 = load %"class.blink::CSSStringValue"*, %"class.blink::CSSStringValue"** %153, align 8
  %155 = getelementptr inbounds %"class.blink::CSSStringValue", %"class.blink::CSSStringValue"* %154, i64 0, i32 1, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #8
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !2

172:                                              ; preds = %163
  tail call void @llvm.trap() #8
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %175

175:                                              ; preds = %152, %158, %173
  %176 = getelementptr inbounds %"class.blink::cssvalue::CSSCounterValue", %"class.blink::cssvalue::CSSCounterValue"* %1, i64 0, i32 3, i32 0, i32 0
  %177 = load %"class.blink::CSSStringValue"*, %"class.blink::CSSStringValue"** %176, align 8
  %178 = getelementptr inbounds %"class.blink::CSSStringValue", %"class.blink::CSSStringValue"* %177, i64 0, i32 1, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %198, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %200

186:                                              ; preds = %181
  %187 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %188 = load i32, i32* %187, align 4
  %189 = zext i32 %188 to i33
  %190 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #8
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !2

195:                                              ; preds = %186
  tail call void @llvm.trap() #8
  unreachable

196:                                              ; preds = %186
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %187, align 4
  br label %200

198:                                              ; preds = %175
  %199 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"* null) #8
  br label %213

200:                                              ; preds = %181, %196
  %201 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %156, %"class.WTF::StringImpl"* nonnull %179) #8
  %202 = load atomic i32, i32* %182 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #8
  br label %213

213:                                              ; preds = %198, %209, %212
  %214 = phi i1 [ %199, %198 ], [ %201, %209 ], [ %201, %212 ]
  br i1 %157, label %228, label %215

215:                                              ; preds = %213
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #8
  br label %228

228:                                              ; preds = %227, %224, %213, %150
  %229 = phi i1 [ false, %150 ], [ %214, %213 ], [ %214, %224 ], [ %214, %227 ]
  br i1 %132, label %243, label %230

230:                                              ; preds = %228
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  br i1 %234, label %237, label %239

237:                                              ; preds = %230
  %238 = add i32 %236, -1
  store i32 %238, i32* %235, align 4
  br label %239

239:                                              ; preds = %237, %230
  %240 = phi i32 [ %238, %237 ], [ %236, %230 ]
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %243

242:                                              ; preds = %239
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %131) #8
  br label %243

243:                                              ; preds = %228, %239, %242
  br i1 %109, label %257, label %244

244:                                              ; preds = %243
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %246 = load atomic i32, i32* %245 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %250 = load i32, i32* %249, align 4
  br i1 %248, label %251, label %253

251:                                              ; preds = %244
  %252 = add i32 %250, -1
  store i32 %252, i32* %249, align 4
  br label %253

253:                                              ; preds = %251, %244
  %254 = phi i32 [ %252, %251 ], [ %250, %244 ]
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %257

256:                                              ; preds = %253
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #8
  br label %257

257:                                              ; preds = %256, %253, %243, %102
  %258 = phi i1 [ false, %102 ], [ %229, %243 ], [ %229, %253 ], [ %229, %256 ]
  br i1 %57, label %272, label %259

259:                                              ; preds = %257
  %260 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %261 = load atomic i32, i32* %260 monotonic, align 4
  %262 = and i32 %261, 2
  %263 = icmp eq i32 %262, 0
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %265 = load i32, i32* %264, align 4
  br i1 %263, label %266, label %268

266:                                              ; preds = %259
  %267 = add i32 %265, -1
  store i32 %267, i32* %264, align 4
  br label %268

268:                                              ; preds = %266, %259
  %269 = phi i32 [ %267, %266 ], [ %265, %259 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #8
  br label %272

272:                                              ; preds = %257, %268, %271
  br i1 %7, label %286, label %273

273:                                              ; preds = %272
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #8
  br label %286

286:                                              ; preds = %272, %282, %285
  ret i1 %258
}

declare zeroext i1 @_ZNK5blink8cssvalue19CSSCursorImageValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCursorImageValue"*, %"class.blink::cssvalue::CSSCursorImageValue"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink19CSSFontFaceSrcValue6EqualsERKS0_(%"class.blink::CSSFontFaceSrcValue"*, %"class.blink::CSSFontFaceSrcValue"* dereferenceable(80)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue19CSSFontFeatureValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontFeatureValue"*, %"class.blink::cssvalue::CSSFontFeatureValue"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue22CSSFontStyleRangeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontStyleRangeValue"*, %"class.blink::cssvalue::CSSFontStyleRangeValue"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue21CSSFontVariationValue6EqualsERKS1_(%"class.blink::cssvalue::CSSFontVariationValue"*, %"class.blink::cssvalue::CSSFontVariationValue"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue22CSSLayoutFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSLayoutFunctionValue"*, %"class.blink::cssvalue::CSSLayoutFunctionValue"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue22CSSLinearGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSLinearGradientValue"*, %"class.blink::cssvalue::CSSLinearGradientValue"* dereferenceable(192)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue22CSSRadialGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSRadialGradientValue"*, %"class.blink::cssvalue::CSSRadialGradientValue"* dereferenceable(232)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue21CSSConicGradientValue6EqualsERKS1_(%"class.blink::cssvalue::CSSConicGradientValue"*, %"class.blink::cssvalue::CSSConicGradientValue"* dereferenceable(176)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue17CSSCrossfadeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCrossfadeValue"*, %"class.blink::cssvalue::CSSCrossfadeValue"* dereferenceable(168)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13CSSPaintValue6EqualsERKS0_(%"class.blink::CSSPaintValue"*, %"class.blink::CSSPaintValue"* dereferenceable(176)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink13CSSImageValue6EqualsERKS0_(%"class.blink::CSSImageValue"*, %"class.blink::CSSImageValue"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue22CSSGridAutoRepeatValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridAutoRepeatValue"*, %"class.blink::cssvalue::CSSGridAutoRepeatValue"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue25CSSGridIntegerRepeatValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridIntegerRepeatValue"*, %"class.blink::cssvalue::CSSGridIntegerRepeatValue"* dereferenceable(64)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue25CSSGridTemplateAreasValue6EqualsERKS1_(%"class.blink::cssvalue::CSSGridTemplateAreasValue"*, %"class.blink::cssvalue::CSSGridTemplateAreasValue"* dereferenceable(48)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue12CSSPathValue6EqualsERKS1_(%"class.blink::cssvalue::CSSPathValue"*, %"class.blink::cssvalue::CSSPathValue"* dereferenceable(24)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink22CSSNumericLiteralValue6EqualsERKS0_(%"class.blink::CSSNumericLiteralValue"*, %"class.blink::CSSNumericLiteralValue"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink20CSSMathFunctionValue6EqualsERKS0_(%"class.blink::CSSMathFunctionValue"*, %"class.blink::CSSMathFunctionValue"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue11CSSRayValue6EqualsERKS1_(%"class.blink::cssvalue::CSSRayValue"*, %"class.blink::cssvalue::CSSRayValue"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue15CSSReflectValue6EqualsERKS1_(%"class.blink::cssvalue::CSSReflectValue"*, %"class.blink::cssvalue::CSSReflectValue"* dereferenceable(32)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink14CSSShadowValue6EqualsERKS0_(%"class.blink::CSSShadowValue"*, %"class.blink::CSSShadowValue"* dereferenceable(56)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue33CSSCubicBezierTimingFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"*, %"class.blink::cssvalue::CSSCubicBezierTimingFunctionValue"* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue27CSSStepsTimingFunctionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSStepsTimingFunctionValue"*, %"class.blink::cssvalue::CSSStepsTimingFunctionValue"* dereferenceable(12)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue20CSSUnicodeRangeValue6EqualsERKS1_(%"class.blink::cssvalue::CSSUnicodeRangeValue"*, %"class.blink::cssvalue::CSSUnicodeRangeValue"* dereferenceable(12)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue11CSSURIValue6EqualsERKS1_(%"class.blink::cssvalue::CSSURIValue"*, %"class.blink::cssvalue::CSSURIValue"* dereferenceable(40)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue27CSSContentDistributionValue6EqualsERKS1_(%"class.blink::cssvalue::CSSContentDistributionValue"*, %"class.blink::cssvalue::CSSContentDistributionValue"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8cssvalue21CSSElementOffsetValue6EqualsERKS1_(%"class.blink::cssvalue::CSSElementOffsetValue"*, %"class.blink::cssvalue::CSSElementOffsetValue"* dereferenceable(32)) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
