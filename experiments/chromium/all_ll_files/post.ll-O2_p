; ModuleID = '../../third_party/ots/src/src/post.cc'
source_filename = "../../third_party/ots/src/src/post.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.ots::OpenTypePOST" = type { %"class.ots::Table.base", i32, i32, i16, i16, i32, %"class.std::__1::vector", %"class.std::__1::vector.29" }
%"class.ots::Table.base" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8 }>
%"struct.ots::Font" = type { %"struct.ots::FontFile"*, i32, i16, i16, i16, i16, %"class.std::__1::map.15" }
%"struct.ots::FontFile" = type { %"class.ots::OTSContext"*, %"class.std::__1::map", %"class.std::__1::map.4" }
%"class.ots::OTSContext" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.std::__1::map.4" = type { %"class.std::__1::__tree.5" }
%"class.std::__1::__tree.5" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::map.15" = type { %"class.std::__1::__tree.16" }
%"class.std::__1::__tree.16" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i16*, i16*, %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { i16* }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.36" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"class.std::__1::basic_string"* }
%"class.ots::Table" = type <{ i32 (...)**, i32, i32, %"struct.ots::Font"*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.ots::OTSStream" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN3ots12OpenTypePOSTD2Ev = comdat any

$_ZN3ots12OpenTypePOSTD0Ev = comdat any

$_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_ = comdat any

@.str = private unnamed_addr constant [29 x i8] c"Failed to read table version\00", align 1
@.str.1 = private unnamed_addr constant [31 x i8] c"Unsupported table version 0x%x\00", align 1
@.str.2 = private unnamed_addr constant [28 x i8] c"Failed to read table header\00", align 1
@.str.3 = private unnamed_addr constant [30 x i8] c"Failed to read numberOfGlyphs\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"Missing required maxp table\00", align 1
@.str.5 = private unnamed_addr constant [85 x i8] c"Can't have no glyphs in the post table if there are more than 258 glyphs in the font\00", align 1
@.str.6 = private unnamed_addr constant [49 x i8] c"Table version is 1, but no glyph names are found\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"Bad number of glyphs: %d\00", align 1
@.str.8 = private unnamed_addr constant [29 x i8] c"Failed to read glyph name %d\00", align 1
@.str.9 = private unnamed_addr constant [21 x i8] c"Bad string length %d\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"Bad string of length %d\00", align 1
@.str.11 = private unnamed_addr constant [20 x i8] c"Bad string index %d\00", align 1
@.str.12 = private unnamed_addr constant [71 x i8] c"Only version supported for fonts with CFF table is 0x00030000 not 0x%x\00", align 1
@.str.13 = private unnamed_addr constant [28 x i8] c"Failed to write post header\00", align 1
@.str.14 = private unnamed_addr constant [34 x i8] c"Failed to write number of indices\00", align 1
@.str.15 = private unnamed_addr constant [30 x i8] c"Failed to write name index %d\00", align 1
@.str.16 = private unnamed_addr constant [26 x i8] c"Failed to write string %d\00", align 1
@.str.17 = private unnamed_addr constant [44 x i8] c"Failed to write string length for string %d\00", align 1
@_ZTVN3ots12OpenTypePOSTE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.ots::OpenTypePOST"*)* @_ZN3ots12OpenTypePOSTD2Ev to i8*), i8* bitcast (void (%"class.ots::OpenTypePOST"*)* @_ZN3ots12OpenTypePOSTD0Ev to i8*), i8* bitcast (i1 (%"class.ots::OpenTypePOST"*, i8*, i64)* @_ZN3ots12OpenTypePOST5ParseEPKhm to i8*), i8* bitcast (i1 (%"class.ots::OpenTypePOST"*, %"class.ots::OTSStream"*)* @_ZN3ots12OpenTypePOST9SerializeEPNS_9OTSStreamE to i8*), i8* bitcast (i1 (%"class.ots::Table"*)* @_ZN3ots5Table15ShouldSerializeEv to i8*)] }, align 8

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypePOST5ParseEPKhm(%"class.ots::OpenTypePOST"*, i8*, i64) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 1
  %6 = icmp ult i64 %2, 4
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %9 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %8, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0)) #10
  br label %216

10:                                               ; preds = %3
  %11 = bitcast i8* %1 to i32*
  %12 = load i32, i32* %11, align 1
  %13 = tail call i32 @llvm.bswap.i32(i32 %12) #10
  store i32 %13, i32* %5, align 4
  switch i32 %13, label %14 [
    i32 65536, label %17
    i32 131072, label %17
    i32 196608, label %17
  ]

14:                                               ; preds = %10
  %15 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %16 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %15, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.1, i64 0, i64 0), i32 %13) #10
  br label %216

17:                                               ; preds = %10, %10, %10
  %18 = icmp ult i64 %2, 8
  br i1 %18, label %50, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 2
  %21 = getelementptr inbounds i8, i8* %1, i64 4
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 1
  %24 = tail call i32 @llvm.bswap.i32(i32 %23) #10
  store i32 %24, i32* %20, align 4
  %25 = icmp ult i64 %2, 10
  br i1 %25, label %50, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 3
  %28 = getelementptr inbounds i8, i8* %1, i64 8
  %29 = bitcast i8* %28 to i16*
  %30 = load i16, i16* %29, align 1
  %31 = tail call i16 @llvm.bswap.i16(i16 %30) #10
  store i16 %31, i16* %27, align 2
  %32 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 4
  %33 = icmp ult i64 %2, 12
  br i1 %33, label %50, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds i8, i8* %1, i64 10
  %36 = bitcast i8* %35 to i16*
  %37 = load i16, i16* %36, align 1
  %38 = tail call i16 @llvm.bswap.i16(i16 %37) #10
  store i16 %38, i16* %32, align 2
  %39 = icmp ult i64 %2, 16
  br i1 %39, label %50, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 5
  %42 = getelementptr inbounds i8, i8* %1, i64 12
  %43 = bitcast i8* %42 to i32*
  %44 = load i32, i32* %43, align 1
  %45 = tail call i32 @llvm.bswap.i32(i32 %44) #10
  store i32 %45, i32* %41, align 4
  %46 = icmp ult i64 %2, 32
  %47 = and i64 %2, -16
  %48 = icmp eq i64 %47, 16
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %40, %34, %26, %19, %17
  %51 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %52 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %51, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.2, i64 0, i64 0)) #10
  br label %216

53:                                               ; preds = %40
  %54 = icmp slt i16 %38, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %53
  store i16 1, i16* %32, align 2
  br label %56

56:                                               ; preds = %55, %53
  switch i32 %13, label %57 [
    i32 65536, label %216
    i32 196608, label %216
  ]

57:                                               ; preds = %56
  %58 = icmp ult i64 %2, 34
  br i1 %58, label %59, label %62

59:                                               ; preds = %57
  %60 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %61 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %60, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.3, i64 0, i64 0)) #10
  br label %216

62:                                               ; preds = %57
  %63 = getelementptr inbounds i8, i8* %1, i64 32
  %64 = bitcast i8* %63 to i16*
  %65 = load i16, i16* %64, align 1
  %66 = tail call i16 @llvm.bswap.i16(i16 %65) #10
  %67 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %68 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 0, i32 3
  %69 = load %"struct.ots::Font"*, %"struct.ots::Font"** %68, align 8
  %70 = tail call %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"* %69, i32 1835104368) #10
  %71 = icmp eq %"class.ots::Table"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %62
  %73 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0)) #10
  br label %216

74:                                               ; preds = %62
  %75 = zext i16 %66 to i32
  %76 = icmp eq i16 %65, 0
  %77 = getelementptr inbounds %"class.ots::Table", %"class.ots::Table"* %70, i64 0, i32 5, i64 1
  %78 = bitcast i8* %77 to i16*
  %79 = load i16, i16* %78, align 2
  br i1 %76, label %80, label %86

80:                                               ; preds = %74
  %81 = icmp ugt i16 %79, 258
  br i1 %81, label %82, label %84

82:                                               ; preds = %80
  %83 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.5, i64 0, i64 0)) #10
  br label %216

84:                                               ; preds = %80
  store i32 65536, i32* %5, align 4
  %85 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.6, i64 0, i64 0)) #10
  br label %216

86:                                               ; preds = %74
  %87 = icmp eq i16 %66, %79
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0), i32 %75) #10
  br label %216

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6
  %92 = zext i16 %66 to i64
  %93 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 1
  %94 = bitcast i16** %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.std::__1::vector"* %91 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = sub i64 %95, %97
  %99 = ashr exact i64 %98, 1
  %100 = icmp ult i64 %99, %92
  %101 = inttoptr i64 %97 to i16*
  br i1 %100, label %102, label %104

102:                                              ; preds = %90
  %103 = sub nsw i64 %92, %99
  tail call void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"* %91, i64 %103) #10
  br label %108

104:                                              ; preds = %90
  %105 = icmp ugt i64 %99, %92
  br i1 %105, label %106, label %108

106:                                              ; preds = %104
  %107 = getelementptr inbounds i16, i16* %101, i64 %92
  store i16* %107, i16** %93, align 8
  br label %108

108:                                              ; preds = %106, %104, %102
  %109 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %91, i64 0, i32 0, i32 0
  %110 = zext i16 %66 to i64
  br label %111

111:                                              ; preds = %108, %116
  %112 = phi i64 [ 0, %108 ], [ %123, %116 ]
  %113 = phi i64 [ 34, %108 ], [ %114, %116 ]
  %114 = add nuw nsw i64 %113, 2
  %115 = icmp ugt i64 %114, %2
  br i1 %115, label %125, label %116

116:                                              ; preds = %111
  %117 = load i16*, i16** %109, align 8
  %118 = getelementptr inbounds i16, i16* %117, i64 %112
  %119 = getelementptr inbounds i8, i8* %1, i64 %113
  %120 = bitcast i8* %119 to i16*
  %121 = load i16, i16* %120, align 1
  %122 = tail call i16 @llvm.bswap.i16(i16 %121) #10
  store i16 %122, i16* %118, align 2
  %123 = add nuw nsw i64 %112, 1
  %124 = icmp ult i64 %123, %110
  br i1 %124, label %111, label %128

125:                                              ; preds = %111
  %126 = trunc i64 %112 to i32
  %127 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.8, i64 0, i64 0), i32 %126) #10
  br label %216

128:                                              ; preds = %116
  %129 = getelementptr inbounds i8, i8* %1, i64 %2
  %130 = icmp eq i64 %114, %2
  br i1 %130, label %189, label %131

131:                                              ; preds = %128
  %132 = getelementptr inbounds i8, i8* %1, i64 %114
  %133 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7
  %134 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %135 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %137 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %138 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %139 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %138, i64 0, i32 1, i32 0
  %140 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 1
  %141 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %142 = bitcast %"class.std::__1::basic_string"** %140 to i64*
  br label %143

143:                                              ; preds = %131, %185
  %144 = phi i8* [ %132, %131 ], [ %187, %185 ]
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i64
  %147 = getelementptr inbounds i8, i8* %144, i64 1
  %148 = getelementptr inbounds i8, i8* %147, i64 %146
  %149 = icmp ugt i8* %148, %129
  br i1 %149, label %150, label %153

150:                                              ; preds = %143
  %151 = zext i8 %145 to i32
  %152 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.9, i64 0, i64 0), i32 %151) #10
  br label %216

153:                                              ; preds = %143
  %154 = call i8* @memchr(i8* %147, i32 0, i64 %146) #11
  %155 = icmp eq i8* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %153
  %157 = zext i8 %145 to i32
  %158 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.10, i64 0, i64 0), i32 %157) #10
  br label %216

159:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %134) #10
  %160 = icmp ult i8 %145, 23
  br i1 %160, label %166, label %161

161:                                              ; preds = %159
  %162 = add nuw nsw i64 %146, 16
  %163 = and i64 %162, 496
  %164 = call i8* @_Znwm(i64 %163) #12
  store i8* %164, i8** %135, align 8
  %165 = or i64 %163, -9223372036854775808
  store i64 %165, i64* %136, align 8
  store i64 %146, i64* %137, align 8
  br label %168

166:                                              ; preds = %159
  store i8 %145, i8* %139, align 1
  %167 = icmp eq i8 %145, 0
  br i1 %167, label %170, label %168

168:                                              ; preds = %166, %161
  %169 = phi i8* [ %164, %161 ], [ %134, %166 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %169, i8* align 1 %147, i64 %146, i1 false) #10
  br label %170

170:                                              ; preds = %166, %168
  %171 = phi i8* [ %134, %166 ], [ %169, %168 ]
  %172 = getelementptr inbounds i8, i8* %171, i64 %146
  store i8 0, i8* %172, align 1
  %173 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %140, align 8
  %174 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %141, align 8
  %175 = icmp ult %"class.std::__1::basic_string"* %173, %174
  br i1 %175, label %176, label %180

176:                                              ; preds = %170
  %177 = bitcast %"class.std::__1::basic_string"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* nonnull align 8 %134, i64 24, i1 false) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %134, i8 0, i64 24, i1 false) #10
  %178 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %173, i64 1
  %179 = ptrtoint %"class.std::__1::basic_string"* %178 to i64
  store i64 %179, i64* %142, align 8
  br label %185

180:                                              ; preds = %170
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.29"* %133, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %181 = load i8, i8* %139, align 1
  %182 = icmp slt i8 %181, 0
  br i1 %182, label %183, label %185

183:                                              ; preds = %180
  %184 = load i8*, i8** %135, align 8
  call void @_ZdlPv(i8* %184) #12
  br label %185

185:                                              ; preds = %176, %183, %180
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %134) #10
  %186 = add nuw nsw i64 %146, 1
  %187 = getelementptr inbounds i8, i8* %144, i64 %186
  %188 = icmp eq i8* %187, %129
  br i1 %188, label %189, label %143

189:                                              ; preds = %185, %128
  %190 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7
  %191 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 1
  %192 = bitcast %"class.std::__1::basic_string"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast %"class.std::__1::vector.29"* %190 to i64*
  %195 = load i64, i64* %194, align 8
  %196 = sub i64 %193, %195
  %197 = sdiv exact i64 %196, 24
  %198 = trunc i64 %197 to i32
  %199 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %91, i64 0, i32 0, i32 0
  %200 = load i16*, i16** %199, align 8
  %201 = zext i16 %66 to i64
  br label %202

202:                                              ; preds = %189, %211
  %203 = phi i64 [ 0, %189 ], [ %212, %211 ]
  %204 = getelementptr inbounds i16, i16* %200, i64 %203
  %205 = load i16, i16* %204, align 2
  %206 = icmp ult i16 %205, 258
  br i1 %206, label %211, label %207

207:                                              ; preds = %202
  %208 = zext i16 %205 to i32
  %209 = add nsw i32 %208, -258
  %210 = icmp ult i32 %209, %198
  br i1 %210, label %211, label %214

211:                                              ; preds = %202, %207
  %212 = add nuw nsw i64 %203, 1
  %213 = icmp ult i64 %212, %201
  br i1 %213, label %202, label %216

214:                                              ; preds = %207
  %215 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %67, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.11, i64 0, i64 0), i32 %209) #10
  br label %216

216:                                              ; preds = %211, %156, %150, %59, %88, %84, %82, %72, %125, %214, %56, %56, %50, %14, %7
  %217 = phi i1 [ %16, %14 ], [ %52, %50 ], [ %9, %7 ], [ true, %56 ], [ true, %56 ], [ %61, %59 ], [ %83, %82 ], [ %85, %84 ], [ %89, %88 ], [ %127, %125 ], [ %73, %72 ], [ %215, %214 ], [ %158, %156 ], [ %152, %150 ], [ true, %211 ]
  ret i1 %217
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

declare %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"*, i8*, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nofree nounwind readonly
declare i8* @memchr(i8*, i32, i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3ots12OpenTypePOST9SerializeEPNS_9OTSStreamE(%"class.ots::OpenTypePOST"*, %"class.ots::OTSStream"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i16, align 2
  %8 = alloca i32, align 4
  %9 = alloca i32, align 4
  %10 = alloca i16, align 2
  %11 = alloca i32, align 4
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = alloca i32, align 4
  %20 = alloca i32, align 4
  %21 = alloca i32, align 4
  %22 = alloca i32, align 4
  %23 = alloca i32, align 4
  %24 = alloca i32, align 4
  %25 = alloca i32, align 4
  %26 = alloca i32, align 4
  %27 = alloca i32, align 4
  %28 = alloca i16, align 2
  %29 = alloca i32, align 4
  %30 = alloca i32, align 4
  %31 = alloca i16, align 2
  %32 = alloca i32, align 4
  %33 = alloca i32, align 4
  %34 = alloca i32, align 4
  %35 = alloca i32, align 4
  %36 = alloca i32, align 4
  %37 = alloca i32, align 4
  %38 = alloca i32, align 4
  %39 = alloca i32, align 4
  %40 = alloca i8, align 1
  %41 = bitcast %"class.ots::OpenTypePOST"* %0 to %"class.ots::Table"*
  %42 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 0, i32 3
  %43 = load %"struct.ots::Font"*, %"struct.ots::Font"** %42, align 8
  %44 = tail call %"class.ots::Table"* @_ZNK3ots4Font8GetTableEj(%"struct.ots::Font"* %43, i32 1128678944) #10
  %45 = icmp eq %"class.ots::Table"* %44, null
  %46 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %52, label %48

48:                                               ; preds = %2
  %49 = icmp eq i32 %47, 196608
  br i1 %49, label %52, label %50

50:                                               ; preds = %48
  %51 = tail call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table7WarningEPKcz(%"class.ots::Table"* %41, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @.str.12, i64 0, i64 0), i32 %47) #10
  store i32 196608, i32* %46, align 4
  br label %52

52:                                               ; preds = %2, %48, %50
  %53 = phi i32 [ 196608, %48 ], [ 196608, %50 ], [ %47, %2 ]
  %54 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 1
  %55 = bitcast i32* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %55)
  %56 = tail call i32 @llvm.bswap.i32(i32 %53) #10
  store i32 %56, i32* %37, align 4
  %57 = bitcast %"class.ots::OTSStream"* %1 to i64 (%"class.ots::OTSStream"*)***
  %58 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %59 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %58, i64 4
  %60 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %59, align 8
  %61 = tail call i64 %60(%"class.ots::OTSStream"* %1) #10
  %62 = and i64 %61, 3
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %67

64:                                               ; preds = %52
  %65 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  br label %79

67:                                               ; preds = %52
  %68 = sub nuw nsw i64 4, %62
  %69 = icmp ult i64 %68, 4
  %70 = select i1 %69, i64 %68, i64 4
  %71 = bitcast i32* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #10
  store i32 0, i32* %35, align 4
  %72 = getelementptr inbounds i8, i8* %71, i64 %62
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %72, i8* nonnull align 4 %55, i64 %70, i1 false) #10
  %73 = load i32, i32* %35, align 4
  %74 = tail call i32 @llvm.bswap.i32(i32 %73) #10
  %75 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, %74
  store i32 %77, i32* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #10
  %78 = icmp eq i64 %70, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %67, %64
  %80 = phi i32 [ %77, %67 ], [ %66, %64 ]
  %81 = phi i64 [ %68, %67 ], [ 0, %64 ]
  %82 = getelementptr inbounds i8, i8* %55, i64 %81
  %83 = bitcast i8* %82 to i32*
  %84 = load i32, i32* %83, align 1
  %85 = tail call i32 @llvm.bswap.i32(i32 %84) #10
  %86 = add i32 %85, %80
  %87 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %86, i32* %87, align 8
  br label %95

88:                                               ; preds = %67
  %89 = sub nuw nsw i64 4, %70
  %90 = bitcast i32* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %90)
  store i32 0, i32* %36, align 4
  %91 = getelementptr inbounds i8, i8* %55, i64 %68
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %90, i8* align 1 %91, i64 %89, i1 false) #10
  %92 = load i32, i32* %36, align 4
  %93 = tail call i32 @llvm.bswap.i32(i32 %92) #10
  %94 = add i32 %93, %77
  store i32 %94, i32* %75, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %90)
  br label %95

95:                                               ; preds = %79, %88
  %96 = bitcast %"class.ots::OTSStream"* %1 to i1 (%"class.ots::OTSStream"*, i8*, i64)***
  %97 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %98 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %97, i64 2
  %99 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %98, align 8
  %100 = call zeroext i1 %99(%"class.ots::OTSStream"* %1, i8* nonnull %55, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %55)
  br i1 %100, label %101, label %453

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 2
  %103 = load i32, i32* %102, align 8
  %104 = bitcast i32* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %104)
  %105 = call i32 @llvm.bswap.i32(i32 %103) #10
  store i32 %105, i32* %34, align 4
  %106 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %107 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %106, i64 4
  %108 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %107, align 8
  %109 = call i64 %108(%"class.ots::OTSStream"* %1) #10
  %110 = and i64 %109, 3
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %101
  %113 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %114 = load i32, i32* %113, align 8
  br label %127

115:                                              ; preds = %101
  %116 = sub nuw nsw i64 4, %110
  %117 = icmp ult i64 %116, 4
  %118 = select i1 %117, i64 %116, i64 4
  %119 = bitcast i32* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %119) #10
  store i32 0, i32* %32, align 4
  %120 = getelementptr inbounds i8, i8* %119, i64 %110
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* nonnull align 4 %104, i64 %118, i1 false) #10
  %121 = load i32, i32* %32, align 4
  %122 = call i32 @llvm.bswap.i32(i32 %121) #10
  %123 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  store i32 %125, i32* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %119) #10
  %126 = icmp eq i64 %118, 0
  br i1 %126, label %127, label %136

127:                                              ; preds = %115, %112
  %128 = phi i32 [ %125, %115 ], [ %114, %112 ]
  %129 = phi i64 [ %116, %115 ], [ 0, %112 ]
  %130 = getelementptr inbounds i8, i8* %104, i64 %129
  %131 = bitcast i8* %130 to i32*
  %132 = load i32, i32* %131, align 1
  %133 = call i32 @llvm.bswap.i32(i32 %132) #10
  %134 = add i32 %133, %128
  %135 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %134, i32* %135, align 8
  br label %143

136:                                              ; preds = %115
  %137 = sub nuw nsw i64 4, %118
  %138 = bitcast i32* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %138)
  store i32 0, i32* %33, align 4
  %139 = getelementptr inbounds i8, i8* %104, i64 %116
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %138, i8* align 1 %139, i64 %137, i1 false) #10
  %140 = load i32, i32* %33, align 4
  %141 = call i32 @llvm.bswap.i32(i32 %140) #10
  %142 = add i32 %141, %125
  store i32 %142, i32* %123, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %138)
  br label %143

143:                                              ; preds = %127, %136
  %144 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %145 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %144, i64 2
  %146 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %145, align 8
  %147 = call zeroext i1 %146(%"class.ots::OTSStream"* %1, i8* nonnull %104, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %104)
  br i1 %147, label %148, label %453

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 3
  %150 = load i16, i16* %149, align 4
  %151 = bitcast i16* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %151)
  %152 = call i16 @llvm.bswap.i16(i16 %150) #10
  store i16 %152, i16* %31, align 2
  %153 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %154 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %153, i64 4
  %155 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %154, align 8
  %156 = call i64 %155(%"class.ots::OTSStream"* %1) #10
  %157 = and i64 %156, 3
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %159, label %162

159:                                              ; preds = %148
  %160 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %161 = load i32, i32* %160, align 8
  br label %174

162:                                              ; preds = %148
  %163 = sub nuw nsw i64 4, %157
  %164 = icmp ult i64 %163, 2
  %165 = select i1 %164, i64 %163, i64 2
  %166 = bitcast i32* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %166) #10
  store i32 0, i32* %29, align 4
  %167 = getelementptr inbounds i8, i8* %166, i64 %157
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %167, i8* nonnull align 2 %151, i64 %165, i1 false) #10
  %168 = load i32, i32* %29, align 4
  %169 = call i32 @llvm.bswap.i32(i32 %168) #10
  %170 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %171 = load i32, i32* %170, align 8
  %172 = add i32 %171, %169
  store i32 %172, i32* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %166) #10
  %173 = icmp eq i64 %157, 3
  br i1 %173, label %174, label %184

174:                                              ; preds = %162, %159
  %175 = phi i32 [ %172, %162 ], [ %161, %159 ]
  %176 = phi i64 [ %165, %162 ], [ 0, %159 ]
  %177 = phi i64 [ 1, %162 ], [ 2, %159 ]
  %178 = bitcast i32* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %178)
  store i32 0, i32* %30, align 4
  %179 = getelementptr inbounds i8, i8* %151, i64 %176
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %178, i8* align 1 %179, i64 %177, i1 false) #10
  %180 = load i32, i32* %30, align 4
  %181 = call i32 @llvm.bswap.i32(i32 %180) #10
  %182 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %183 = add i32 %181, %175
  store i32 %183, i32* %182, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %178)
  br label %184

184:                                              ; preds = %162, %174
  %185 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %186 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %185, i64 2
  %187 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %186, align 8
  %188 = call zeroext i1 %187(%"class.ots::OTSStream"* %1, i8* nonnull %151, i64 2) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %151)
  br i1 %188, label %189, label %453

189:                                              ; preds = %184
  %190 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 4
  %191 = load i16, i16* %190, align 2
  %192 = bitcast i16* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %192)
  %193 = call i16 @llvm.bswap.i16(i16 %191) #10
  store i16 %193, i16* %28, align 2
  %194 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %195 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %194, i64 4
  %196 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %195, align 8
  %197 = call i64 %196(%"class.ots::OTSStream"* %1) #10
  %198 = and i64 %197, 3
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %203

200:                                              ; preds = %189
  %201 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %202 = load i32, i32* %201, align 8
  br label %215

203:                                              ; preds = %189
  %204 = sub nuw nsw i64 4, %198
  %205 = icmp ult i64 %204, 2
  %206 = select i1 %205, i64 %204, i64 2
  %207 = bitcast i32* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %207) #10
  store i32 0, i32* %26, align 4
  %208 = getelementptr inbounds i8, i8* %207, i64 %198
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %208, i8* nonnull align 2 %192, i64 %206, i1 false) #10
  %209 = load i32, i32* %26, align 4
  %210 = call i32 @llvm.bswap.i32(i32 %209) #10
  %211 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = add i32 %212, %210
  store i32 %213, i32* %211, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %207) #10
  %214 = icmp eq i64 %198, 3
  br i1 %214, label %215, label %225

215:                                              ; preds = %203, %200
  %216 = phi i32 [ %213, %203 ], [ %202, %200 ]
  %217 = phi i64 [ %206, %203 ], [ 0, %200 ]
  %218 = phi i64 [ 1, %203 ], [ 2, %200 ]
  %219 = bitcast i32* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %219)
  store i32 0, i32* %27, align 4
  %220 = getelementptr inbounds i8, i8* %192, i64 %217
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %219, i8* align 1 %220, i64 %218, i1 false) #10
  %221 = load i32, i32* %27, align 4
  %222 = call i32 @llvm.bswap.i32(i32 %221) #10
  %223 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %224 = add i32 %222, %216
  store i32 %224, i32* %223, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %219)
  br label %225

225:                                              ; preds = %203, %215
  %226 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %227 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %226, i64 2
  %228 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %227, align 8
  %229 = call zeroext i1 %228(%"class.ots::OTSStream"* %1, i8* nonnull %192, i64 2) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %192)
  br i1 %229, label %230, label %453

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 5
  %232 = load i32, i32* %231, align 8
  %233 = bitcast i32* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %233)
  %234 = call i32 @llvm.bswap.i32(i32 %232) #10
  store i32 %234, i32* %25, align 4
  %235 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %236 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %235, i64 4
  %237 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %236, align 8
  %238 = call i64 %237(%"class.ots::OTSStream"* %1) #10
  %239 = and i64 %238, 3
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %241, label %244

241:                                              ; preds = %230
  %242 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %243 = load i32, i32* %242, align 8
  br label %256

244:                                              ; preds = %230
  %245 = sub nuw nsw i64 4, %239
  %246 = icmp ult i64 %245, 4
  %247 = select i1 %246, i64 %245, i64 4
  %248 = bitcast i32* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %248) #10
  store i32 0, i32* %23, align 4
  %249 = getelementptr inbounds i8, i8* %248, i64 %239
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %249, i8* nonnull align 4 %233, i64 %247, i1 false) #10
  %250 = load i32, i32* %23, align 4
  %251 = call i32 @llvm.bswap.i32(i32 %250) #10
  %252 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = add i32 %253, %251
  store i32 %254, i32* %252, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %248) #10
  %255 = icmp eq i64 %247, 0
  br i1 %255, label %256, label %265

256:                                              ; preds = %244, %241
  %257 = phi i32 [ %254, %244 ], [ %243, %241 ]
  %258 = phi i64 [ %245, %244 ], [ 0, %241 ]
  %259 = getelementptr inbounds i8, i8* %233, i64 %258
  %260 = bitcast i8* %259 to i32*
  %261 = load i32, i32* %260, align 1
  %262 = call i32 @llvm.bswap.i32(i32 %261) #10
  %263 = add i32 %262, %257
  %264 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %263, i32* %264, align 8
  br label %272

265:                                              ; preds = %244
  %266 = sub nuw nsw i64 4, %247
  %267 = bitcast i32* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %267)
  store i32 0, i32* %24, align 4
  %268 = getelementptr inbounds i8, i8* %233, i64 %245
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %267, i8* align 1 %268, i64 %266, i1 false) #10
  %269 = load i32, i32* %24, align 4
  %270 = call i32 @llvm.bswap.i32(i32 %269) #10
  %271 = add i32 %270, %254
  store i32 %271, i32* %252, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %267)
  br label %272

272:                                              ; preds = %256, %265
  %273 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %274 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %273, i64 2
  %275 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %274, align 8
  %276 = call zeroext i1 %275(%"class.ots::OTSStream"* %1, i8* nonnull %233, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %233)
  br i1 %276, label %277, label %453

277:                                              ; preds = %272
  %278 = bitcast i32* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %278)
  store i32 0, i32* %22, align 4
  %279 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %280 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %279, i64 4
  %281 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %280, align 8
  %282 = call i64 %281(%"class.ots::OTSStream"* %1) #10
  %283 = and i64 %282, 3
  %284 = icmp eq i64 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %277
  %286 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %287 = load i32, i32* %286, align 8
  br label %300

288:                                              ; preds = %277
  %289 = sub nuw nsw i64 4, %283
  %290 = icmp ult i64 %289, 4
  %291 = select i1 %290, i64 %289, i64 4
  %292 = bitcast i32* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %292) #10
  store i32 0, i32* %20, align 4
  %293 = getelementptr inbounds i8, i8* %292, i64 %283
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %293, i8* nonnull align 4 %278, i64 %291, i1 false) #10
  %294 = load i32, i32* %20, align 4
  %295 = call i32 @llvm.bswap.i32(i32 %294) #10
  %296 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %297 = load i32, i32* %296, align 8
  %298 = add i32 %297, %295
  store i32 %298, i32* %296, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %292) #10
  %299 = icmp eq i64 %291, 0
  br i1 %299, label %300, label %309

300:                                              ; preds = %288, %285
  %301 = phi i32 [ %298, %288 ], [ %287, %285 ]
  %302 = phi i64 [ %289, %288 ], [ 0, %285 ]
  %303 = getelementptr inbounds i8, i8* %278, i64 %302
  %304 = bitcast i8* %303 to i32*
  %305 = load i32, i32* %304, align 1
  %306 = call i32 @llvm.bswap.i32(i32 %305) #10
  %307 = add i32 %306, %301
  %308 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %307, i32* %308, align 8
  br label %316

309:                                              ; preds = %288
  %310 = sub nuw nsw i64 4, %291
  %311 = bitcast i32* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %311)
  store i32 0, i32* %21, align 4
  %312 = getelementptr inbounds i8, i8* %278, i64 %289
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %311, i8* align 1 %312, i64 %310, i1 false) #10
  %313 = load i32, i32* %21, align 4
  %314 = call i32 @llvm.bswap.i32(i32 %313) #10
  %315 = add i32 %314, %298
  store i32 %315, i32* %296, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %311)
  br label %316

316:                                              ; preds = %300, %309
  %317 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %318 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %317, i64 2
  %319 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %318, align 8
  %320 = call zeroext i1 %319(%"class.ots::OTSStream"* %1, i8* nonnull %278, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %278)
  br i1 %320, label %321, label %453

321:                                              ; preds = %316
  %322 = bitcast i32* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %322)
  store i32 0, i32* %19, align 4
  %323 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %324 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %323, i64 4
  %325 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %324, align 8
  %326 = call i64 %325(%"class.ots::OTSStream"* %1) #10
  %327 = and i64 %326, 3
  %328 = icmp eq i64 %327, 0
  br i1 %328, label %329, label %332

329:                                              ; preds = %321
  %330 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %331 = load i32, i32* %330, align 8
  br label %344

332:                                              ; preds = %321
  %333 = sub nuw nsw i64 4, %327
  %334 = icmp ult i64 %333, 4
  %335 = select i1 %334, i64 %333, i64 4
  %336 = bitcast i32* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %336) #10
  store i32 0, i32* %17, align 4
  %337 = getelementptr inbounds i8, i8* %336, i64 %327
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %337, i8* nonnull align 4 %322, i64 %335, i1 false) #10
  %338 = load i32, i32* %17, align 4
  %339 = call i32 @llvm.bswap.i32(i32 %338) #10
  %340 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %341 = load i32, i32* %340, align 8
  %342 = add i32 %341, %339
  store i32 %342, i32* %340, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %336) #10
  %343 = icmp eq i64 %335, 0
  br i1 %343, label %344, label %353

344:                                              ; preds = %332, %329
  %345 = phi i32 [ %342, %332 ], [ %331, %329 ]
  %346 = phi i64 [ %333, %332 ], [ 0, %329 ]
  %347 = getelementptr inbounds i8, i8* %322, i64 %346
  %348 = bitcast i8* %347 to i32*
  %349 = load i32, i32* %348, align 1
  %350 = call i32 @llvm.bswap.i32(i32 %349) #10
  %351 = add i32 %350, %345
  %352 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %351, i32* %352, align 8
  br label %360

353:                                              ; preds = %332
  %354 = sub nuw nsw i64 4, %335
  %355 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %355)
  store i32 0, i32* %18, align 4
  %356 = getelementptr inbounds i8, i8* %322, i64 %333
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %355, i8* align 1 %356, i64 %354, i1 false) #10
  %357 = load i32, i32* %18, align 4
  %358 = call i32 @llvm.bswap.i32(i32 %357) #10
  %359 = add i32 %358, %342
  store i32 %359, i32* %340, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %355)
  br label %360

360:                                              ; preds = %344, %353
  %361 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %362 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %361, i64 2
  %363 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %362, align 8
  %364 = call zeroext i1 %363(%"class.ots::OTSStream"* %1, i8* nonnull %322, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %322)
  br i1 %364, label %365, label %453

365:                                              ; preds = %360
  %366 = bitcast i32* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %366)
  store i32 0, i32* %16, align 4
  %367 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %368 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %367, i64 4
  %369 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %368, align 8
  %370 = call i64 %369(%"class.ots::OTSStream"* %1) #10
  %371 = and i64 %370, 3
  %372 = icmp eq i64 %371, 0
  br i1 %372, label %373, label %376

373:                                              ; preds = %365
  %374 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %375 = load i32, i32* %374, align 8
  br label %388

376:                                              ; preds = %365
  %377 = sub nuw nsw i64 4, %371
  %378 = icmp ult i64 %377, 4
  %379 = select i1 %378, i64 %377, i64 4
  %380 = bitcast i32* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %380) #10
  store i32 0, i32* %14, align 4
  %381 = getelementptr inbounds i8, i8* %380, i64 %371
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %381, i8* nonnull align 4 %366, i64 %379, i1 false) #10
  %382 = load i32, i32* %14, align 4
  %383 = call i32 @llvm.bswap.i32(i32 %382) #10
  %384 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %385 = load i32, i32* %384, align 8
  %386 = add i32 %385, %383
  store i32 %386, i32* %384, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %380) #10
  %387 = icmp eq i64 %379, 0
  br i1 %387, label %388, label %397

388:                                              ; preds = %376, %373
  %389 = phi i32 [ %386, %376 ], [ %375, %373 ]
  %390 = phi i64 [ %377, %376 ], [ 0, %373 ]
  %391 = getelementptr inbounds i8, i8* %366, i64 %390
  %392 = bitcast i8* %391 to i32*
  %393 = load i32, i32* %392, align 1
  %394 = call i32 @llvm.bswap.i32(i32 %393) #10
  %395 = add i32 %394, %389
  %396 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %395, i32* %396, align 8
  br label %404

397:                                              ; preds = %376
  %398 = sub nuw nsw i64 4, %379
  %399 = bitcast i32* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %399)
  store i32 0, i32* %15, align 4
  %400 = getelementptr inbounds i8, i8* %366, i64 %377
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %399, i8* align 1 %400, i64 %398, i1 false) #10
  %401 = load i32, i32* %15, align 4
  %402 = call i32 @llvm.bswap.i32(i32 %401) #10
  %403 = add i32 %402, %386
  store i32 %403, i32* %384, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %399)
  br label %404

404:                                              ; preds = %388, %397
  %405 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %406 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %405, i64 2
  %407 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %406, align 8
  %408 = call zeroext i1 %407(%"class.ots::OTSStream"* %1, i8* nonnull %366, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %366)
  br i1 %408, label %409, label %453

409:                                              ; preds = %404
  %410 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %410)
  store i32 0, i32* %13, align 4
  %411 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %412 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %411, i64 4
  %413 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %412, align 8
  %414 = call i64 %413(%"class.ots::OTSStream"* %1) #10
  %415 = and i64 %414, 3
  %416 = icmp eq i64 %415, 0
  br i1 %416, label %417, label %420

417:                                              ; preds = %409
  %418 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %419 = load i32, i32* %418, align 8
  br label %432

420:                                              ; preds = %409
  %421 = sub nuw nsw i64 4, %415
  %422 = icmp ult i64 %421, 4
  %423 = select i1 %422, i64 %421, i64 4
  %424 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %424) #10
  store i32 0, i32* %11, align 4
  %425 = getelementptr inbounds i8, i8* %424, i64 %415
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %425, i8* nonnull align 4 %410, i64 %423, i1 false) #10
  %426 = load i32, i32* %11, align 4
  %427 = call i32 @llvm.bswap.i32(i32 %426) #10
  %428 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %429 = load i32, i32* %428, align 8
  %430 = add i32 %429, %427
  store i32 %430, i32* %428, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %424) #10
  %431 = icmp eq i64 %423, 0
  br i1 %431, label %432, label %441

432:                                              ; preds = %420, %417
  %433 = phi i32 [ %430, %420 ], [ %419, %417 ]
  %434 = phi i64 [ %421, %420 ], [ 0, %417 ]
  %435 = getelementptr inbounds i8, i8* %410, i64 %434
  %436 = bitcast i8* %435 to i32*
  %437 = load i32, i32* %436, align 1
  %438 = call i32 @llvm.bswap.i32(i32 %437) #10
  %439 = add i32 %438, %433
  %440 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  store i32 %439, i32* %440, align 8
  br label %448

441:                                              ; preds = %420
  %442 = sub nuw nsw i64 4, %423
  %443 = bitcast i32* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %443)
  store i32 0, i32* %12, align 4
  %444 = getelementptr inbounds i8, i8* %410, i64 %421
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %443, i8* align 1 %444, i64 %442, i1 false) #10
  %445 = load i32, i32* %12, align 4
  %446 = call i32 @llvm.bswap.i32(i32 %445) #10
  %447 = add i32 %446, %430
  store i32 %447, i32* %428, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %443)
  br label %448

448:                                              ; preds = %432, %441
  %449 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %450 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %449, i64 2
  %451 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %450, align 8
  %452 = call zeroext i1 %451(%"class.ots::OTSStream"* %1, i8* nonnull %410, i64 4) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %410)
  br i1 %452, label %455, label %453

453:                                              ; preds = %448, %404, %360, %316, %272, %225, %184, %143, %95
  %454 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %41, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.13, i64 0, i64 0)) #10
  br label %753

455:                                              ; preds = %448
  %456 = load i32, i32* %54, align 4
  %457 = icmp eq i32 %456, 131072
  br i1 %457, label %458, label %753

458:                                              ; preds = %455
  %459 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6
  %460 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 1
  %461 = bitcast i16** %460 to i64*
  %462 = load i64, i64* %461, align 8
  %463 = bitcast %"class.std::__1::vector"* %459 to i64*
  %464 = load i64, i64* %463, align 8
  %465 = sub i64 %462, %464
  %466 = ashr exact i64 %465, 1
  %467 = icmp ult i64 %466, 65536
  br i1 %467, label %468, label %518

468:                                              ; preds = %458
  %469 = trunc i64 %466 to i16
  %470 = bitcast i16* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %470)
  %471 = call i16 @llvm.bswap.i16(i16 %469) #10
  store i16 %471, i16* %10, align 2
  %472 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %473 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %472, i64 4
  %474 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %473, align 8
  %475 = call i64 %474(%"class.ots::OTSStream"* %1) #10
  %476 = and i64 %475, 3
  %477 = icmp eq i64 %476, 0
  br i1 %477, label %478, label %481

478:                                              ; preds = %468
  %479 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %480 = load i32, i32* %479, align 8
  br label %493

481:                                              ; preds = %468
  %482 = sub nuw nsw i64 4, %476
  %483 = icmp ult i64 %482, 2
  %484 = select i1 %483, i64 %482, i64 2
  %485 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %485) #10
  store i32 0, i32* %8, align 4
  %486 = getelementptr inbounds i8, i8* %485, i64 %476
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %486, i8* nonnull align 2 %470, i64 %484, i1 false) #10
  %487 = load i32, i32* %8, align 4
  %488 = call i32 @llvm.bswap.i32(i32 %487) #10
  %489 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %490 = load i32, i32* %489, align 8
  %491 = add i32 %490, %488
  store i32 %491, i32* %489, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %485) #10
  %492 = icmp eq i64 %476, 3
  br i1 %492, label %493, label %503

493:                                              ; preds = %481, %478
  %494 = phi i32 [ %491, %481 ], [ %480, %478 ]
  %495 = phi i64 [ %484, %481 ], [ 0, %478 ]
  %496 = phi i64 [ 1, %481 ], [ 2, %478 ]
  %497 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %497)
  store i32 0, i32* %9, align 4
  %498 = getelementptr inbounds i8, i8* %470, i64 %495
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %497, i8* align 1 %498, i64 %496, i1 false) #10
  %499 = load i32, i32* %9, align 4
  %500 = call i32 @llvm.bswap.i32(i32 %499) #10
  %501 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %502 = add i32 %500, %494
  store i32 %502, i32* %501, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %497)
  br label %503

503:                                              ; preds = %481, %493
  %504 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %505 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %504, i64 2
  %506 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %505, align 8
  %507 = call zeroext i1 %506(%"class.ots::OTSStream"* %1, i8* nonnull %470, i64 2) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %470)
  br i1 %507, label %508, label %518

508:                                              ; preds = %503
  %509 = trunc i64 %466 to i32
  %510 = and i32 %509, 65535
  %511 = icmp eq i32 %510, 0
  br i1 %511, label %523, label %512

512:                                              ; preds = %508
  %513 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %459, i64 0, i32 0, i32 0
  %514 = bitcast i16* %7 to i8*
  %515 = bitcast i32* %5 to i8*
  %516 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %517 = bitcast i32* %6 to i8*
  br label %537

518:                                              ; preds = %458, %503
  %519 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %41, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.14, i64 0, i64 0)) #10
  br label %753

520:                                              ; preds = %571
  %521 = zext i16 %576 to i32
  %522 = icmp ugt i32 %510, %521
  br i1 %522, label %537, label %523

523:                                              ; preds = %520, %508
  %524 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7
  %525 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 1
  %526 = bitcast %"class.std::__1::basic_string"** %525 to i64*
  %527 = load i64, i64* %526, align 8
  %528 = bitcast %"class.std::__1::vector.29"* %524 to i64*
  %529 = load i64, i64* %528, align 8
  %530 = icmp eq i64 %527, %529
  br i1 %530, label %753, label %531

531:                                              ; preds = %523
  %532 = bitcast i32* %3 to i8*
  %533 = getelementptr inbounds %"class.ots::OTSStream", %"class.ots::OTSStream"* %1, i64 0, i32 1
  %534 = bitcast i32* %4 to i8*
  %535 = bitcast i32* %38 to i8*
  %536 = bitcast i32* %39 to i8*
  br label %579

537:                                              ; preds = %512, %520
  %538 = phi i32 [ 0, %512 ], [ %521, %520 ]
  %539 = phi i16 [ 0, %512 ], [ %576, %520 ]
  %540 = zext i16 %539 to i64
  %541 = load i16*, i16** %513, align 8
  %542 = getelementptr inbounds i16, i16* %541, i64 %540
  %543 = load i16, i16* %542, align 2
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %514)
  %544 = call i16 @llvm.bswap.i16(i16 %543) #10
  store i16 %544, i16* %7, align 2
  %545 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %546 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %545, i64 4
  %547 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %546, align 8
  %548 = call i64 %547(%"class.ots::OTSStream"* %1) #10
  %549 = and i64 %548, 3
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %553

551:                                              ; preds = %537
  %552 = load i32, i32* %516, align 8
  br label %563

553:                                              ; preds = %537
  %554 = sub nuw nsw i64 4, %549
  %555 = icmp ult i64 %554, 2
  %556 = select i1 %555, i64 %554, i64 2
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %515) #10
  store i32 0, i32* %5, align 4
  %557 = getelementptr inbounds i8, i8* %515, i64 %549
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %557, i8* nonnull align 2 %514, i64 %556, i1 false) #10
  %558 = load i32, i32* %5, align 4
  %559 = call i32 @llvm.bswap.i32(i32 %558) #10
  %560 = load i32, i32* %516, align 8
  %561 = add i32 %560, %559
  store i32 %561, i32* %516, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %515) #10
  %562 = icmp eq i64 %549, 3
  br i1 %562, label %563, label %571

563:                                              ; preds = %553, %551
  %564 = phi i32 [ %561, %553 ], [ %552, %551 ]
  %565 = phi i64 [ %556, %553 ], [ 0, %551 ]
  %566 = phi i64 [ 1, %553 ], [ 2, %551 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %517)
  store i32 0, i32* %6, align 4
  %567 = getelementptr inbounds i8, i8* %514, i64 %565
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %517, i8* align 1 %567, i64 %566, i1 false) #10
  %568 = load i32, i32* %6, align 4
  %569 = call i32 @llvm.bswap.i32(i32 %568) #10
  %570 = add i32 %569, %564
  store i32 %570, i32* %516, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %517)
  br label %571

571:                                              ; preds = %553, %563
  %572 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %573 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %572, i64 2
  %574 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %573, align 8
  %575 = call zeroext i1 %574(%"class.ots::OTSStream"* %1, i8* nonnull %514, i64 2) #10
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %514)
  %576 = add i16 %539, 1
  br i1 %575, label %520, label %577

577:                                              ; preds = %571
  %578 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %41, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.15, i64 0, i64 0), i32 %538) #10
  br label %753

579:                                              ; preds = %531, %742
  %580 = phi i64 [ %529, %531 ], [ %746, %742 ]
  %581 = phi i64 [ 0, %531 ], [ %744, %742 ]
  %582 = phi i32 [ 0, %531 ], [ %743, %742 ]
  %583 = inttoptr i64 %580 to %"class.std::__1::basic_string"*
  %584 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %583, i64 %581
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %40) #10
  store i8 -86, i8* %40, align 1
  %585 = bitcast %"class.std::__1::basic_string"* %584 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %586 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %585, i64 0, i32 1, i32 0
  %587 = load i8, i8* %586, align 1
  %588 = icmp slt i8 %587, 0
  br i1 %588, label %589, label %592

589:                                              ; preds = %579
  %590 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %583, i64 %581, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %591 = load i64, i64* %590, align 8
  br label %594

592:                                              ; preds = %579
  %593 = zext i8 %587 to i64
  br label %594

594:                                              ; preds = %589, %592
  %595 = phi i64 [ %591, %589 ], [ %593, %592 ]
  %596 = trunc i64 %595 to i8
  store i8 %596, i8* %40, align 1
  %597 = and i64 %595, 255
  %598 = load i8, i8* %586, align 1
  %599 = icmp slt i8 %598, 0
  br i1 %599, label %600, label %603

600:                                              ; preds = %594
  %601 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %583, i64 %581, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %602 = load i64, i64* %601, align 8
  br label %605

603:                                              ; preds = %594
  %604 = zext i8 %598 to i64
  br label %605

605:                                              ; preds = %600, %603
  %606 = phi i64 [ %602, %600 ], [ %604, %603 ]
  %607 = icmp eq i64 %597, %606
  br i1 %607, label %608, label %750

608:                                              ; preds = %605
  %609 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %610 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %609, i64 4
  %611 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %610, align 8
  %612 = call i64 %611(%"class.ots::OTSStream"* %1) #10
  %613 = and i64 %612, 3
  %614 = icmp eq i64 %613, 0
  br i1 %614, label %622, label %615

615:                                              ; preds = %608
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %532) #10
  store i32 0, i32* %3, align 4
  %616 = getelementptr inbounds i8, i8* %532, i64 %613
  %617 = load i8, i8* %40, align 1
  store i8 %617, i8* %616, align 1
  %618 = load i32, i32* %3, align 4
  %619 = call i32 @llvm.bswap.i32(i32 %618) #10
  %620 = load i32, i32* %533, align 8
  %621 = add i32 %620, %619
  store i32 %621, i32* %533, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %532) #10
  br label %628

622:                                              ; preds = %608
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %534)
  store i32 0, i32* %4, align 4
  %623 = load i8, i8* %40, align 1
  store i8 %623, i8* %534, align 4
  %624 = load i32, i32* %4, align 4
  %625 = call i32 @llvm.bswap.i32(i32 %624) #10
  %626 = load i32, i32* %533, align 8
  %627 = add i32 %626, %625
  store i32 %627, i32* %533, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %534)
  br label %628

628:                                              ; preds = %615, %622
  %629 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %630 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %629, i64 2
  %631 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %630, align 8
  %632 = call zeroext i1 %631(%"class.ots::OTSStream"* %1, i8* nonnull %40, i64 1) #10
  br i1 %632, label %633, label %750

633:                                              ; preds = %628
  %634 = load i8, i8* %40, align 1
  %635 = icmp eq i8 %634, 0
  br i1 %635, label %742, label %636

636:                                              ; preds = %633
  %637 = load i8, i8* %586, align 1
  %638 = icmp slt i8 %637, 0
  br i1 %638, label %639, label %642

639:                                              ; preds = %636
  %640 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %584, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %641 = load i8*, i8** %640, align 8
  br label %644

642:                                              ; preds = %636
  %643 = bitcast %"class.std::__1::basic_string"* %584 to i8*
  br label %644

644:                                              ; preds = %642, %639
  %645 = phi i8* [ %641, %639 ], [ %643, %642 ]
  %646 = zext i8 %634 to i64
  %647 = load i64 (%"class.ots::OTSStream"*)**, i64 (%"class.ots::OTSStream"*)*** %57, align 8
  %648 = getelementptr inbounds i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %647, i64 4
  %649 = load i64 (%"class.ots::OTSStream"*)*, i64 (%"class.ots::OTSStream"*)** %648, align 8
  %650 = call i64 %649(%"class.ots::OTSStream"* %1) #10
  %651 = and i64 %650, 3
  %652 = icmp eq i64 %651, 0
  br i1 %652, label %663, label %653

653:                                              ; preds = %644
  %654 = sub nuw nsw i64 4, %651
  %655 = icmp ult i64 %654, %646
  %656 = select i1 %655, i64 %654, i64 %646
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %535) #10
  store i32 0, i32* %38, align 4
  %657 = getelementptr inbounds i8, i8* %535, i64 %651
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %657, i8* align 1 %645, i64 %656, i1 false) #10
  %658 = load i32, i32* %38, align 4
  %659 = call i32 @llvm.bswap.i32(i32 %658) #10
  %660 = load i32, i32* %533, align 8
  %661 = add i32 %660, %659
  store i32 %661, i32* %533, align 8
  %662 = sub nsw i64 %646, %656
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %535) #10
  br label %663

663:                                              ; preds = %653, %644
  %664 = phi i64 [ %646, %644 ], [ %662, %653 ]
  %665 = phi i64 [ 0, %644 ], [ %656, %653 ]
  %666 = icmp ugt i64 %664, 3
  br i1 %666, label %667, label %727

667:                                              ; preds = %663
  %668 = load i32, i32* %533, align 8
  %669 = add nsw i64 %664, -4
  %670 = lshr i64 %669, 2
  %671 = add nuw nsw i64 %670, 1
  %672 = and i64 %671, 3
  %673 = icmp eq i64 %672, 0
  br i1 %673, label %688, label %674

674:                                              ; preds = %667, %674
  %675 = phi i32 [ %683, %674 ], [ %668, %667 ]
  %676 = phi i64 [ %685, %674 ], [ %665, %667 ]
  %677 = phi i64 [ %684, %674 ], [ %664, %667 ]
  %678 = phi i64 [ %686, %674 ], [ %672, %667 ]
  %679 = getelementptr inbounds i8, i8* %645, i64 %676
  %680 = bitcast i8* %679 to i32*
  %681 = load i32, i32* %680, align 1
  %682 = call i32 @llvm.bswap.i32(i32 %681) #10
  %683 = add i32 %682, %675
  store i32 %683, i32* %533, align 8
  %684 = add i64 %677, -4
  %685 = add i64 %676, 4
  %686 = add i64 %678, -1
  %687 = icmp eq i64 %686, 0
  br i1 %687, label %688, label %674, !llvm.loop !2

688:                                              ; preds = %674, %667
  %689 = phi i32 [ %668, %667 ], [ %683, %674 ]
  %690 = phi i64 [ %665, %667 ], [ %685, %674 ]
  %691 = phi i64 [ %664, %667 ], [ %684, %674 ]
  %692 = phi i64 [ undef, %667 ], [ %685, %674 ]
  %693 = icmp ult i64 %669, 12
  br i1 %693, label %724, label %694

694:                                              ; preds = %688, %694
  %695 = phi i32 [ %720, %694 ], [ %689, %688 ]
  %696 = phi i64 [ %722, %694 ], [ %690, %688 ]
  %697 = phi i64 [ %721, %694 ], [ %691, %688 ]
  %698 = getelementptr inbounds i8, i8* %645, i64 %696
  %699 = bitcast i8* %698 to i32*
  %700 = load i32, i32* %699, align 1
  %701 = call i32 @llvm.bswap.i32(i32 %700) #10
  %702 = add i32 %701, %695
  store i32 %702, i32* %533, align 8
  %703 = add i64 %696, 4
  %704 = getelementptr inbounds i8, i8* %645, i64 %703
  %705 = bitcast i8* %704 to i32*
  %706 = load i32, i32* %705, align 1
  %707 = call i32 @llvm.bswap.i32(i32 %706) #10
  %708 = add i32 %707, %702
  store i32 %708, i32* %533, align 8
  %709 = add i64 %696, 8
  %710 = getelementptr inbounds i8, i8* %645, i64 %709
  %711 = bitcast i8* %710 to i32*
  %712 = load i32, i32* %711, align 1
  %713 = call i32 @llvm.bswap.i32(i32 %712) #10
  %714 = add i32 %713, %708
  store i32 %714, i32* %533, align 8
  %715 = add i64 %696, 12
  %716 = getelementptr inbounds i8, i8* %645, i64 %715
  %717 = bitcast i8* %716 to i32*
  %718 = load i32, i32* %717, align 1
  %719 = call i32 @llvm.bswap.i32(i32 %718) #10
  %720 = add i32 %719, %714
  store i32 %720, i32* %533, align 8
  %721 = add i64 %697, -16
  %722 = add i64 %696, 16
  %723 = icmp ugt i64 %721, 3
  br i1 %723, label %694, label %724

724:                                              ; preds = %694, %688
  %725 = phi i64 [ %692, %688 ], [ %722, %694 ]
  %726 = and i64 %664, 3
  br label %727

727:                                              ; preds = %724, %663
  %728 = phi i64 [ %664, %663 ], [ %726, %724 ]
  %729 = phi i64 [ %665, %663 ], [ %725, %724 ]
  %730 = icmp eq i64 %728, 0
  br i1 %730, label %737, label %731

731:                                              ; preds = %727
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %536)
  store i32 0, i32* %39, align 4
  %732 = getelementptr inbounds i8, i8* %645, i64 %729
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %536, i8* align 1 %732, i64 %728, i1 false) #10
  %733 = load i32, i32* %39, align 4
  %734 = call i32 @llvm.bswap.i32(i32 %733) #10
  %735 = load i32, i32* %533, align 8
  %736 = add i32 %735, %734
  store i32 %736, i32* %533, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %536)
  br label %737

737:                                              ; preds = %727, %731
  %738 = load i1 (%"class.ots::OTSStream"*, i8*, i64)**, i1 (%"class.ots::OTSStream"*, i8*, i64)*** %96, align 8
  %739 = getelementptr inbounds i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %738, i64 2
  %740 = load i1 (%"class.ots::OTSStream"*, i8*, i64)*, i1 (%"class.ots::OTSStream"*, i8*, i64)** %739, align 8
  %741 = call zeroext i1 %740(%"class.ots::OTSStream"* %1, i8* %645, i64 %646) #10
  br i1 %741, label %742, label %750

742:                                              ; preds = %633, %737
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #10
  %743 = add i32 %582, 1
  %744 = zext i32 %743 to i64
  %745 = load i64, i64* %526, align 8
  %746 = load i64, i64* %528, align 8
  %747 = sub i64 %745, %746
  %748 = sdiv exact i64 %747, 24
  %749 = icmp ugt i64 %748, %744
  br i1 %749, label %579, label %753

750:                                              ; preds = %737, %628, %605
  %751 = phi i8* [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), %605 ], [ getelementptr inbounds ([26 x i8], [26 x i8]* @.str.16, i64 0, i64 0), %628 ], [ getelementptr inbounds ([44 x i8], [44 x i8]* @.str.17, i64 0, i64 0), %737 ]
  %752 = call zeroext i1 (%"class.ots::Table"*, i8*, ...) @_ZN3ots5Table5ErrorEPKcz(%"class.ots::Table"* %41, i8* %751, i32 %582) #10
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %40) #10
  br label %753

753:                                              ; preds = %742, %523, %453, %455, %518, %577, %750
  %754 = phi i1 [ %752, %750 ], [ %454, %453 ], [ true, %455 ], [ %519, %518 ], [ %578, %577 ], [ true, %523 ], [ true, %742 ]
  ret i1 %754
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypePOSTD2Ev(%"class.ots::OpenTypePOST"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypePOSTE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp eq i16* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i16* %31 to i64
  %35 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 1
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i16* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %33
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3ots12OpenTypePOSTD0Ev(%"class.ots::OpenTypePOST"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN3ots12OpenTypePOSTE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7
  %4 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 7, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #12
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.std::__1::vector.29"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #12
  br label %29

29:                                               ; preds = %27, %1
  %30 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 0
  %31 = load i16*, i16** %30, align 8
  %32 = icmp eq i16* %31, null
  br i1 %32, label %38, label %33

33:                                               ; preds = %29
  %34 = ptrtoint i16* %31 to i64
  %35 = getelementptr inbounds %"class.ots::OpenTypePOST", %"class.ots::OpenTypePOST"* %0, i64 0, i32 6, i32 0, i32 1
  %36 = bitcast i16** %35 to i64*
  store i64 %34, i64* %36, align 8
  %37 = bitcast i16* %31 to i8*
  tail call void @_ZdlPv(i8* %37) #12
  br label %38

38:                                               ; preds = %29, %33
  %39 = bitcast %"class.ots::OpenTypePOST"* %0 to i8*
  tail call void @_ZdlPv(i8* %39) #12
  ret void
}

declare zeroext i1 @_ZN3ots5Table15ShouldSerializeEv(%"class.ots::Table"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorItNS_9allocatorItEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i16** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i16** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 1
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i16*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i16, i16* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i16, i16* %13, i64 %18
  %20 = bitcast i16* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 2
  %25 = and i64 %24, -2
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint i16* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %81

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 1
  %34 = add i64 %33, %1
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #13
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 1
  %41 = icmp ult i64 %40, 4611686018427387903
  %42 = icmp ult i64 %39, %34
  %43 = select i1 %42, i64 %34, i64 %39
  %44 = select i1 %41, i64 %43, i64 9223372036854775807
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %53, label %46

46:                                               ; preds = %38
  %47 = icmp slt i64 %44, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %46
  tail call void @abort() #13
  unreachable

49:                                               ; preds = %46
  %50 = shl i64 %44, 1
  %51 = tail call i8* @_Znwm(i64 %50) #12
  %52 = bitcast i8* %51 to i16*
  br label %53

53:                                               ; preds = %49, %38
  %54 = phi i16* [ %52, %49 ], [ null, %38 ]
  %55 = getelementptr inbounds i16, i16* %54, i64 %33
  %56 = getelementptr inbounds i16, i16* %54, i64 %44
  %57 = getelementptr inbounds i16, i16* %55, i64 %1
  %58 = bitcast i16* %55 to i8*
  %59 = shl i64 %1, 1
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %58, i8 0, i64 %59, i1 false) #10
  %60 = ptrtoint i16* %56 to i64
  %61 = ptrtoint i16* %57 to i64
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %63 = load i16*, i16** %62, align 8
  %64 = load i64, i64* %7, align 8
  %65 = ptrtoint i16* %63 to i64
  %66 = sub i64 %64, %65
  %67 = ashr exact i64 %66, 1
  %68 = sub nsw i64 0, %67
  %69 = getelementptr inbounds i16, i16* %55, i64 %68
  %70 = ptrtoint i16* %69 to i64
  %71 = icmp sgt i64 %66, 0
  br i1 %71, label %72, label %76

72:                                               ; preds = %53
  %73 = bitcast i16* %69 to i8*
  %74 = bitcast i16* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %73, i8* align 2 %74, i64 %66, i1 false) #10
  %75 = load i16*, i16** %62, align 8
  br label %76

76:                                               ; preds = %53, %72
  %77 = phi i16* [ %63, %53 ], [ %75, %72 ]
  store i64 %70, i64* %30, align 8
  store i64 %61, i64* %7, align 8
  store i64 %60, i64* %4, align 8
  %78 = icmp eq i16* %77, null
  br i1 %78, label %81, label %79

79:                                               ; preds = %76
  %80 = bitcast i16* %77 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %79, %76, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE21__push_back_slow_pathIS6_EEvOT_(%"class.std::__1::vector.29"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::basic_string"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.29"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 768614336404564650
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.29"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #13
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = sdiv exact i64 %18, 24
  %20 = icmp ult i64 %19, 384307168202282325
  br i1 %20, label %21, label %26

21:                                               ; preds = %14
  %22 = shl nsw i64 %19, 1
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %31, label %26

26:                                               ; preds = %14, %21
  %27 = phi i64 [ %24, %21 ], [ 768614336404564650, %14 ]
  %28 = mul i64 %27, 24
  %29 = tail call i8* @_Znwm(i64 %28) #12
  %30 = bitcast i8* %29 to %"class.std::__1::basic_string"*
  br label %31

31:                                               ; preds = %21, %26
  %32 = phi i64 [ %27, %26 ], [ 0, %21 ]
  %33 = phi %"class.std::__1::basic_string"* [ %30, %26 ], [ null, %21 ]
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %9
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 %32
  %36 = ptrtoint %"class.std::__1::basic_string"* %35 to i64
  %37 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %40 = ptrtoint %"class.std::__1::basic_string"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::vector.29", %"class.std::__1::vector.29"* %0, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %44 = icmp eq %"class.std::__1::basic_string"* %43, %42
  br i1 %44, label %45, label %47

45:                                               ; preds = %31
  %46 = ptrtoint %"class.std::__1::basic_string"* %42 to i64
  br label %58

47:                                               ; preds = %31, %47
  %48 = phi %"class.std::__1::basic_string"* [ %50, %47 ], [ %34, %31 ]
  %49 = phi %"class.std::__1::basic_string"* [ %51, %47 ], [ %43, %31 ]
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 -1
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 -1
  %52 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  %53 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %53, i64 24, i1 false) #10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  %54 = icmp eq %"class.std::__1::basic_string"* %51, %42
  br i1 %54, label %55, label %47

55:                                               ; preds = %47
  %56 = load i64, i64* %6, align 8
  %57 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  br label %58

58:                                               ; preds = %45, %55
  %59 = phi %"class.std::__1::basic_string"* [ %42, %45 ], [ %57, %55 ]
  %60 = phi %"class.std::__1::basic_string"* [ %34, %45 ], [ %50, %55 ]
  %61 = phi i64 [ %46, %45 ], [ %56, %55 ]
  %62 = ptrtoint %"class.std::__1::basic_string"* %60 to i64
  store i64 %62, i64* %6, align 8
  store i64 %40, i64* %4, align 8
  store i64 %36, i64* %16, align 8
  %63 = inttoptr i64 %61 to %"class.std::__1::basic_string"*
  %64 = icmp eq %"class.std::__1::basic_string"* %59, %63
  br i1 %64, label %77, label %65

65:                                               ; preds = %58, %75
  %66 = phi %"class.std::__1::basic_string"* [ %67, %75 ], [ %59, %58 ]
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 -1
  %68 = bitcast %"class.std::__1::basic_string"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  br i1 %71, label %72, label %75

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  tail call void @_ZdlPv(i8* %74) #12
  br label %75

75:                                               ; preds = %72, %65
  %76 = icmp eq %"class.std::__1::basic_string"* %67, %63
  br i1 %76, label %77, label %65

77:                                               ; preds = %75, %58
  %78 = icmp eq i64 %61, 0
  br i1 %78, label %81, label %79

79:                                               ; preds = %77
  %80 = inttoptr i64 %61 to i8*
  tail call void @_ZdlPv(i8* %80) #12
  br label %81

81:                                               ; preds = %77, %79
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #9

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { builtin nounwind }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
