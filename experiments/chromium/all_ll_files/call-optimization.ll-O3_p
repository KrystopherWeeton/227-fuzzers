; ModuleID = '../../v8/src/ic/call-optimization.cc'
source_filename = "../../v8/src/ic/call-optimization.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.544" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.142", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.22", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.22", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.22", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.22", i64, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.32", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.149", %"class.std::__1::unique_ptr.149", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.164", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.22", i64, i8, %"struct.std::__1::atomic.22", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.168", %"class.std::__1::vector.168", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.175", %"class.std::__1::unique_ptr.181", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.323", %"class.std::__1::unique_ptr.362", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.431", %"class.std::__1::unique_ptr.437", %"class.std::__1::unique_ptr.447", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.453", %"class.std::__1::unique_ptr.459", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.465", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", %"class.std::__1::shared_ptr.483", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.506", %"class.std::__1::unique_ptr.532", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.538", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.551", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.333", i8, [7 x i8], %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.583", %"class.std::__1::unordered_map.557", %"class.std::__1::unordered_map.607", %"class.std::__1::vector.635", i8, %"class.std::__1::unique_ptr.642", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.5", %"class.std::__1::__compressed_pair.12", %"class.std::__1::__compressed_pair.17", %"class.std::__1::__compressed_pair.19", [4 x i8] }>
%"class.std::__1::unique_ptr.5" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7", %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i64 }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.27" }
%"struct.std::__1::atomic.27" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.648", %"class.std::__1::unique_ptr.669", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.679", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.818", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.831", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.841", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.852", %"struct.std::__1::atomic.155", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.927", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.970"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.978", i32, i8, i8, i32, i32, %"class.std::__1::vector.984", %"class.std::__1::vector.984", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.991", i64, %"class.std::__1::unordered_map.992", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.544", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.163", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1048", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1086", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1120", %"class.std::__1::vector.1124", %"class.std::__1::vector.1124", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle.2", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle.2" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.648" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.142", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.649", %"class.std::__1::unique_ptr.663" }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.652" }
%"class.std::__1::vector.652" = type { %"class.std::__1::__vector_base.653" }
%"class.std::__1::__vector_base.653" = type { %"class.std::__1::unique_ptr.654"*, %"class.std::__1::unique_ptr.654"*, %"class.std::__1::__compressed_pair.655" }
%"class.std::__1::unique_ptr.654" = type { %"class.std::__1::__compressed_pair.1133" }
%"class.std::__1::__compressed_pair.1133" = type { %"struct.std::__1::__compressed_pair_elem.1134" }
%"struct.std::__1::__compressed_pair_elem.1134" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.656" }
%"struct.std::__1::__compressed_pair_elem.656" = type { %"class.std::__1::unique_ptr.654"* }
%"class.std::__1::unique_ptr.663" = type { %"class.std::__1::__compressed_pair.664" }
%"class.std::__1::__compressed_pair.664" = type { %"struct.std::__1::__compressed_pair_elem.665" }
%"struct.std::__1::__compressed_pair_elem.665" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.669" = type { %"class.std::__1::__compressed_pair.670" }
%"class.std::__1::__compressed_pair.670" = type { %"struct.std::__1::__compressed_pair_elem.671" }
%"struct.std::__1::__compressed_pair_elem.671" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.672", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.672" = type { %"struct.std::__1::__atomic_base.673" }
%"struct.std::__1::__atomic_base.673" = type { %"struct.std::__1::__cxx_atomic_impl.674" }
%"struct.std::__1::__cxx_atomic_impl.674" = type { %"struct.std::__1::__cxx_atomic_base_impl.675" }
%"struct.std::__1::__cxx_atomic_base_impl.675" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.679" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.680", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.680" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.681", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.681" = type { %"class.std::__1::__vector_base.682" }
%"class.std::__1::__vector_base.682" = type { %"class.std::__1::unique_ptr.683"*, %"class.std::__1::unique_ptr.683"*, %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::unique_ptr.683" = type opaque
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"class.std::__1::unique_ptr.683"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.689", %"class.std::__1::unique_ptr.695", %"struct.std::__1::atomic.155", %"class.std::__1::unique_ptr.701", %"class.std::__1::unique_ptr.707", %"class.std::__1::unique_ptr.713", %"class.std::__1::unique_ptr.719", %"class.std::__1::unique_ptr.725", %"class.std::__1::set.731", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.689" = type { %"class.std::__1::__compressed_pair.690" }
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.695" = type { %"class.std::__1::__compressed_pair.696" }
%"class.std::__1::__compressed_pair.696" = type { %"struct.std::__1::__compressed_pair_elem.697" }
%"struct.std::__1::__compressed_pair_elem.697" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.701" = type { %"class.std::__1::__compressed_pair.702" }
%"class.std::__1::__compressed_pair.702" = type { %"struct.std::__1::__compressed_pair_elem.703" }
%"struct.std::__1::__compressed_pair_elem.703" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.713" = type { %"class.std::__1::__compressed_pair.714" }
%"class.std::__1::__compressed_pair.714" = type { %"struct.std::__1::__compressed_pair_elem.715" }
%"struct.std::__1::__compressed_pair_elem.715" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.719" = type { %"class.std::__1::__compressed_pair.720" }
%"class.std::__1::__compressed_pair.720" = type { %"struct.std::__1::__compressed_pair_elem.721" }
%"struct.std::__1::__compressed_pair_elem.721" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.725" = type { %"class.std::__1::__compressed_pair.726" }
%"class.std::__1::__compressed_pair.726" = type { %"struct.std::__1::__compressed_pair_elem.727" }
%"struct.std::__1::__compressed_pair_elem.727" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.731" = type { %"class.std::__1::__tree.732" }
%"class.std::__1::__tree.732" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.733", %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.733" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"struct.std::__1::__compressed_pair_elem.83" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.740" }
%"class.v8::internal::TaggedImpl.740" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.739" }
%"class.v8::internal::TaggedImpl.739" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.747", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.753", %"class.v8::internal::DetachableVector.754", %"class.v8::internal::DetachableVector.753", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.754" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.753" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.std::__1::unique_ptr.741", %"class.std::__1::unique_ptr.484" }
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.487", %"class.std::__1::set.495" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.487" = type { %"class.std::__1::__tree.488" }
%"class.std::__1::__tree.488" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.493" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::set.495" = type { %"class.std::__1::__tree.496" }
%"class.std::__1::__tree.496" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.489", %"class.std::__1::__compressed_pair.497" }
%"class.std::__1::__compressed_pair.497" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.755", %"class.std::__1::vector.761", %"class.std::__1::unique_ptr.768", %"class.std::__1::vector.775", %"class.std::__1::unique_ptr.782", i64, %"class.std::__1::vector.788", %"class.std::__1::vector.796", %"class.std::__1::vector.804", i8, i8, i32 }
%"class.std::__1::unique_ptr.755" = type { %"class.std::__1::__compressed_pair.756" }
%"class.std::__1::__compressed_pair.756" = type { %"struct.std::__1::__compressed_pair_elem.757" }
%"struct.std::__1::__compressed_pair_elem.757" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.761" = type { %"class.std::__1::__vector_base.762" }
%"class.std::__1::__vector_base.762" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.763" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.763" = type { %"struct.std::__1::__compressed_pair_elem.764" }
%"struct.std::__1::__compressed_pair_elem.764" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.768" = type { %"class.std::__1::__compressed_pair.769" }
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::GlobalHandles::NodeSpace.771"* }
%"class.v8::internal::GlobalHandles::NodeSpace.771" = type opaque
%"class.std::__1::vector.775" = type { %"class.std::__1::__vector_base.776" }
%"class.std::__1::__vector_base.776" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.777" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.777" = type { %"struct.std::__1::__compressed_pair_elem.778" }
%"struct.std::__1::__compressed_pair_elem.778" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.782" = type { %"class.std::__1::__compressed_pair.783" }
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.std::__1::pair.790"*, %"struct.std::__1::pair.790"*, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::pair.790" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::pair.790"* }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"struct.std::__1::pair.798"*, %"struct.std::__1::pair.798"*, %"class.std::__1::__compressed_pair.799" }
%"struct.std::__1::pair.798" = type opaque
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.std::__1::pair.798"* }
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.806" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.806" = type { %"struct.std::__1::__compressed_pair_elem.807" }
%"struct.std::__1::__compressed_pair_elem.807" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.811", %"class.std::__1::vector.818" }
%"class.std::__1::vector.811" = type { %"class.std::__1::__vector_base.812" }
%"class.std::__1::__vector_base.812" = type { i64**, i64**, %"class.std::__1::__compressed_pair.813" }
%"class.std::__1::__compressed_pair.813" = type { %"struct.std::__1::__compressed_pair_elem.814" }
%"struct.std::__1::__compressed_pair_elem.814" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.825" }
%"class.std::__1::unique_ptr.825" = type { %"class.std::__1::__compressed_pair.826" }
%"class.std::__1::__compressed_pair.826" = type { %"struct.std::__1::__compressed_pair_elem.827" }
%"struct.std::__1::__compressed_pair_elem.827" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.818" = type { %"class.std::__1::__vector_base.819" }
%"class.std::__1::__vector_base.819" = type { i32*, i32*, %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.831" = type { %"struct.std::__1::__atomic_base.832" }
%"struct.std::__1::__atomic_base.832" = type { %"struct.std::__1::__cxx_atomic_impl.833" }
%"struct.std::__1::__cxx_atomic_impl.833" = type { %"struct.std::__1::__cxx_atomic_base_impl.834" }
%"struct.std::__1::__cxx_atomic_base_impl.834" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.841" = type { %"struct.std::__1::__atomic_base.842" }
%"struct.std::__1::__atomic_base.842" = type { %"struct.std::__1::__cxx_atomic_impl.843" }
%"struct.std::__1::__cxx_atomic_impl.843" = type { %"struct.std::__1::__cxx_atomic_base_impl.844" }
%"struct.std::__1::__cxx_atomic_base_impl.844" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.848 }
%union.anon.848 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.852" = type { %"class.std::__1::__hash_table.853" }
%"class.std::__1::__hash_table.853" = type <{ %"class.std::__1::unique_ptr.854", %"class.std::__1::__compressed_pair.864", %"class.std::__1::__compressed_pair.869", %"class.std::__1::__compressed_pair.872", [4 x i8] }>
%"class.std::__1::unique_ptr.854" = type { %"class.std::__1::__compressed_pair.855" }
%"class.std::__1::__compressed_pair.855" = type { %"struct.std::__1::__compressed_pair_elem.856", %"struct.std::__1::__compressed_pair_elem.858" }
%"struct.std::__1::__compressed_pair_elem.856" = type { %"struct.std::__1::__hash_node_base.857"** }
%"struct.std::__1::__hash_node_base.857" = type { %"struct.std::__1::__hash_node_base.857"* }
%"struct.std::__1::__compressed_pair_elem.858" = type { %"class.std::__1::__bucket_list_deallocator.859" }
%"class.std::__1::__bucket_list_deallocator.859" = type { %"class.std::__1::__compressed_pair.860" }
%"class.std::__1::__compressed_pair.860" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.865" }
%"struct.std::__1::__compressed_pair_elem.865" = type { %"struct.std::__1::__hash_node_base.857" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::atomic.155" = type { %"struct.std::__1::__atomic_base.156" }
%"struct.std::__1::__atomic_base.156" = type { %"struct.std::__1::__cxx_atomic_impl.157" }
%"struct.std::__1::__cxx_atomic_impl.157" = type { %"struct.std::__1::__cxx_atomic_base_impl.158" }
%"struct.std::__1::__cxx_atomic_base_impl.158" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.878", %"class.v8::internal::Handle.884", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.885", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.884" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.885" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.886", %"class.std::__1::vector.892", %"class.std::__1::unique_ptr.900", %"class.std::__1::unique_ptr.906", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.912", %"class.std::__1::vector.918", %"struct.std::__1::pair.926" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.886" = type { %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.892" = type { %"class.std::__1::__vector_base.893" }
%"class.std::__1::__vector_base.893" = type { %"class.std::__1::unique_ptr.894"*, %"class.std::__1::unique_ptr.894"*, %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::unique_ptr.894" = type opaque
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.std::__1::unique_ptr.894"* }
%"class.std::__1::unique_ptr.900" = type { %"class.std::__1::__compressed_pair.901" }
%"class.std::__1::__compressed_pair.901" = type { %"struct.std::__1::__compressed_pair_elem.902" }
%"struct.std::__1::__compressed_pair_elem.902" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.906" = type { %"class.std::__1::__compressed_pair.907" }
%"class.std::__1::__compressed_pair.907" = type { %"struct.std::__1::__compressed_pair_elem.908" }
%"struct.std::__1::__compressed_pair_elem.908" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.912" = type { %"class.std::__1::__compressed_pair.913" }
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"struct.std::__1::pair.920"*, %"struct.std::__1::pair.920"*, %"class.std::__1::__compressed_pair.921" }
%"struct.std::__1::pair.920" = type opaque
%"class.std::__1::__compressed_pair.921" = type { %"struct.std::__1::__compressed_pair_elem.922" }
%"struct.std::__1::__compressed_pair_elem.922" = type { %"struct.std::__1::pair.920"* }
%"struct.std::__1::pair.926" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.3"*, i16, i8*)*, i8* }
%"class.v8::Local.3" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.930", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.930" = type { %"class.std::__1::__hash_table.931" }
%"class.std::__1::__hash_table.931" = type <{ %"class.std::__1::unique_ptr.932", %"class.std::__1::__compressed_pair.942", %"class.std::__1::__compressed_pair.947", %"class.std::__1::__compressed_pair.951", [4 x i8] }>
%"class.std::__1::unique_ptr.932" = type { %"class.std::__1::__compressed_pair.933" }
%"class.std::__1::__compressed_pair.933" = type { %"struct.std::__1::__compressed_pair_elem.934", %"struct.std::__1::__compressed_pair_elem.936" }
%"struct.std::__1::__compressed_pair_elem.934" = type { %"struct.std::__1::__hash_node_base.935"** }
%"struct.std::__1::__hash_node_base.935" = type { %"struct.std::__1::__hash_node_base.935"* }
%"struct.std::__1::__compressed_pair_elem.936" = type { %"class.std::__1::__bucket_list_deallocator.937" }
%"class.std::__1::__bucket_list_deallocator.937" = type { %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"struct.std::__1::__hash_node_base.935" }
%"class.std::__1::__compressed_pair.947" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.951" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.965" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"struct.std::__1::pair.959"**, %"class.std::__1::__compressed_pair.960" }
%"struct.std::__1::pair.959" = type opaque
%"class.std::__1::__compressed_pair.960" = type { %"struct.std::__1::__compressed_pair_elem.961" }
%"struct.std::__1::__compressed_pair_elem.961" = type { %"struct.std::__1::pair.959"** }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.970" = type { %"class.std::__1::__vector_base.971" }
%"class.std::__1::__vector_base.971" = type { %"class.v8::internal::Handle.972"*, %"class.v8::internal::Handle.972"*, %"class.std::__1::__compressed_pair.973" }
%"class.v8::internal::Handle.972" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.973" = type { %"struct.std::__1::__compressed_pair_elem.974" }
%"struct.std::__1::__compressed_pair_elem.974" = type { %"class.v8::internal::Handle.972"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.836", i32, %"class.v8::Local.3" }
%"class.v8::Local.836" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.978" = type { %"class.std::__1::__compressed_pair.979" }
%"class.std::__1::__compressed_pair.979" = type { %"struct.std::__1::__compressed_pair_elem.980" }
%"struct.std::__1::__compressed_pair_elem.980" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.811", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.984" = type { %"class.std::__1::__vector_base.985" }
%"class.std::__1::__vector_base.985" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.986" }
%"class.std::__1::__compressed_pair.986" = type { %"struct.std::__1::__compressed_pair_elem.987" }
%"struct.std::__1::__compressed_pair_elem.987" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.991" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.992" = type { %"class.std::__1::__hash_table.993" }
%"class.std::__1::__hash_table.993" = type <{ %"class.std::__1::unique_ptr.994", %"class.std::__1::__compressed_pair.1004", %"class.std::__1::__compressed_pair.1009", %"class.std::__1::__compressed_pair.1012", [4 x i8] }>
%"class.std::__1::unique_ptr.994" = type { %"class.std::__1::__compressed_pair.995" }
%"class.std::__1::__compressed_pair.995" = type { %"struct.std::__1::__compressed_pair_elem.996", %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.996" = type { %"struct.std::__1::__hash_node_base.997"** }
%"struct.std::__1::__hash_node_base.997" = type { %"struct.std::__1::__hash_node_base.997"* }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"class.std::__1::__bucket_list_deallocator.999" }
%"class.std::__1::__bucket_list_deallocator.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.1005" }
%"struct.std::__1::__compressed_pair_elem.1005" = type { %"struct.std::__1::__hash_node_base.997" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.163" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1016", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1045", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1046", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1016" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1041, %union.anon.1043, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1041 = type { i64 }
%union.anon.1043 = type { i64 }
%"class.std::__1::weak_ptr.1045" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.22", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.163" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1046" = type { %"class.v8::PersistentBase.1047" }
%"class.v8::PersistentBase.1047" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1017", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1017" = type { %"class.std::__1::__hash_table.1018" }
%"class.std::__1::__hash_table.1018" = type <{ %"class.std::__1::unique_ptr.1019", %"class.std::__1::__compressed_pair.1029", %"class.std::__1::__compressed_pair.1034", %"class.std::__1::__compressed_pair.1037", [4 x i8] }>
%"class.std::__1::unique_ptr.1019" = type { %"class.std::__1::__compressed_pair.1020" }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021", %"struct.std::__1::__compressed_pair_elem.1023" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.std::__1::__hash_node_base.1022"** }
%"struct.std::__1::__hash_node_base.1022" = type { %"struct.std::__1::__hash_node_base.1022"* }
%"struct.std::__1::__compressed_pair_elem.1023" = type { %"class.std::__1::__bucket_list_deallocator.1024" }
%"class.std::__1::__bucket_list_deallocator.1024" = type { %"class.std::__1::__compressed_pair.1025" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.1030" }
%"struct.std::__1::__compressed_pair_elem.1030" = type { %"struct.std::__1::__hash_node_base.1022" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1037" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1048" = type { %"class.std::__1::__compressed_pair.1049" }
%"class.std::__1::__compressed_pair.1049" = type { %"struct.std::__1::__compressed_pair_elem.1050" }
%"struct.std::__1::__compressed_pair_elem.1050" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1077", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1053", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1057", %"class.std::__1::unique_ptr.1063", %"class.std::__1::unique_ptr.477", %"class.std::__1::vector.1069", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1053" = type { %"struct.std::__1::__atomic_base.1054" }
%"struct.std::__1::__atomic_base.1054" = type { %"struct.std::__1::__cxx_atomic_impl.1055" }
%"struct.std::__1::__cxx_atomic_impl.1055" = type { %"struct.std::__1::__cxx_atomic_base_impl.1056" }
%"struct.std::__1::__cxx_atomic_base_impl.1056" = type { i32 }
%"class.std::__1::unique_ptr.1057" = type { %"class.std::__1::__compressed_pair.1058" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.1059" }
%"struct.std::__1::__compressed_pair_elem.1059" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.811" }
%"class.std::__1::unique_ptr.1063" = type { %"class.std::__1::__compressed_pair.1064" }
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1069" = type { %"class.std::__1::__vector_base.1070" }
%"class.std::__1::__vector_base.1070" = type { %"struct.std::__1::pair.1071"*, %"struct.std::__1::pair.1071"*, %"class.std::__1::__compressed_pair.1072" }
%"struct.std::__1::pair.1071" = type opaque
%"class.std::__1::__compressed_pair.1072" = type { %"struct.std::__1::__compressed_pair_elem.1073" }
%"struct.std::__1::__compressed_pair_elem.1073" = type { %"struct.std::__1::pair.1071"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.22"*, %"class.std::__1::unique_ptr.100" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.41", %"class.std::__1::vector.41", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.41" = type { %"class.std::__1::__vector_base.42" }
%"class.std::__1::__vector_base.42" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.43" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.44" }
%"struct.std::__1::__compressed_pair_elem.44" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.48" }
%"class.std::__1::__hash_table.48" = type <{ %"class.std::__1::unique_ptr.49", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"struct.std::__1::__hash_node_base.52"** }
%"struct.std::__1::__hash_node_base.52" = type { %"struct.std::__1::__hash_node_base.52"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator.54" }
%"class.std::__1::__bucket_list_deallocator.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base.52" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.27", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.89", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.22"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.27", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.27", %"struct.std::__1::atomic.71", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.71" = type { %"struct.std::__1::__atomic_base.72" }
%"struct.std::__1::__atomic_base.72" = type { %"struct.std::__1::__cxx_atomic_impl.73" }
%"struct.std::__1::__cxx_atomic_impl.73" = type { %"struct.std::__1::__cxx_atomic_base_impl.74" }
%"struct.std::__1::__cxx_atomic_base_impl.74" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.75" }
%"class.std::__1::vector.75" = type { %"class.std::__1::__vector_base.76" }
%"class.std::__1::__vector_base.76" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.77" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem.83" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::atomic.89" = type { %"struct.std::__1::__atomic_base.90" }
%"struct.std::__1::__atomic_base.90" = type { %"struct.std::__1::__cxx_atomic_impl.91" }
%"struct.std::__1::__cxx_atomic_impl.91" = type { %"struct.std::__1::__cxx_atomic_base_impl.92" }
%"struct.std::__1::__cxx_atomic_base_impl.92" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.93", i8, [7 x i8] }>
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { i64*, i64*, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.22", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1077" = type { %"class.std::__1::__compressed_pair.1078" }
%"class.std::__1::__compressed_pair.1078" = type { %"struct.std::__1::__compressed_pair_elem.1079" }
%"struct.std::__1::__compressed_pair_elem.1079" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1086" = type { %"class.std::__1::__compressed_pair.1087" }
%"class.std::__1::__compressed_pair.1087" = type { %"struct.std::__1::__compressed_pair_elem.1088" }
%"struct.std::__1::__compressed_pair_elem.1088" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.837", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.837" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1094" }
%"class.std::__1::unordered_map.1094" = type { %"class.std::__1::__hash_table.1095" }
%"class.std::__1::__hash_table.1095" = type <{ %"class.std::__1::unique_ptr.1096", %"class.std::__1::__compressed_pair.1106", %"class.std::__1::__compressed_pair.1111", %"class.std::__1::__compressed_pair.1114", [4 x i8] }>
%"class.std::__1::unique_ptr.1096" = type { %"class.std::__1::__compressed_pair.1097" }
%"class.std::__1::__compressed_pair.1097" = type { %"struct.std::__1::__compressed_pair_elem.1098", %"struct.std::__1::__compressed_pair_elem.1100" }
%"struct.std::__1::__compressed_pair_elem.1098" = type { %"struct.std::__1::__hash_node_base.1099"** }
%"struct.std::__1::__hash_node_base.1099" = type { %"struct.std::__1::__hash_node_base.1099"* }
%"struct.std::__1::__compressed_pair_elem.1100" = type { %"class.std::__1::__bucket_list_deallocator.1101" }
%"class.std::__1::__bucket_list_deallocator.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.1107" }
%"struct.std::__1::__compressed_pair_elem.1107" = type { %"struct.std::__1::__hash_node_base.1099" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::atomic.1120" = type { %"struct.std::__1::__atomic_base.1121" }
%"struct.std::__1::__atomic_base.1121" = type { %"struct.std::__1::__cxx_atomic_impl.1122" }
%"struct.std::__1::__cxx_atomic_impl.1122" = type { %"struct.std::__1::__cxx_atomic_base_impl.1123" }
%"struct.std::__1::__cxx_atomic_base_impl.1123" = type { %"class.std::__1::vector.1124"* }
%"class.std::__1::vector.1124" = type { %"class.std::__1::__vector_base.1125" }
%"class.std::__1::__vector_base.1125" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1126" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1126" = type { %"struct.std::__1::__compressed_pair_elem.1127" }
%"struct.std::__1::__compressed_pair_elem.1127" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.32" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl.34" }
%"struct.std::__1::__cxx_atomic_impl.34" = type { %"struct.std::__1::__cxx_atomic_base_impl.35" }
%"struct.std::__1::__cxx_atomic_base_impl.35" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.36" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.36" = type { %"struct.std::__1::__compressed_pair_elem.37" }
%"struct.std::__1::__compressed_pair_elem.37" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.106" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %"struct.std::__1::pair.108"*, %"struct.std::__1::pair.108"*, %"class.std::__1::__compressed_pair.109" }
%"struct.std::__1::pair.108" = type { i32, i64 }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.110" }
%"struct.std::__1::__compressed_pair_elem.110" = type { %"struct.std::__1::pair.108"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.22", i32, %"struct.std::__1::atomic.22", %"class.v8::base::Mutex", %"struct.std::__1::atomic.22" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.114" }
%"class.std::__1::unordered_map.114" = type { %"class.std::__1::__hash_table.115" }
%"class.std::__1::__hash_table.115" = type <{ %"class.std::__1::unique_ptr.116", %"class.std::__1::__compressed_pair.126", %"class.std::__1::__compressed_pair.131", %"class.std::__1::__compressed_pair.136", [4 x i8] }>
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118", %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"struct.std::__1::__hash_node_base.119"** }
%"struct.std::__1::__hash_node_base.119" = type { %"struct.std::__1::__hash_node_base.119"* }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.std::__1::__bucket_list_deallocator.121" }
%"class.std::__1::__bucket_list_deallocator.121" = type { %"class.std::__1::__compressed_pair.122" }
%"class.std::__1::__compressed_pair.122" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { %"struct.std::__1::__hash_node_base.119" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.136" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.155", %"struct.std::__1::atomic.159", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.22" }
%"struct.std::__1::atomic.159" = type { %"struct.std::__1::__atomic_base.160" }
%"struct.std::__1::__atomic_base.160" = type { %"struct.std::__1::__cxx_atomic_impl.161" }
%"struct.std::__1::__cxx_atomic_impl.161" = type { %"struct.std::__1::__cxx_atomic_base_impl.162" }
%"struct.std::__1::__cxx_atomic_base_impl.162" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.164" = type { %"struct.std::__1::__atomic_base.165" }
%"struct.std::__1::__atomic_base.165" = type { %"struct.std::__1::__cxx_atomic_impl.166" }
%"struct.std::__1::__cxx_atomic_impl.166" = type { %"struct.std::__1::__cxx_atomic_base_impl.167" }
%"struct.std::__1::__cxx_atomic_base_impl.167" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.168" = type { %"class.std::__1::__vector_base.169" }
%"class.std::__1::__vector_base.169" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.170" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.175" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.223", %"class.std::__1::unique_ptr.229", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.std::__1::vector.290", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.184", %"class.std::__1::vector.185", %"class.std::__1::vector.192", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.184" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.185" = type { %"class.std::__1::__vector_base.186" }
%"class.std::__1::__vector_base.186" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.187" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type opaque
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.200", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.202", %"class.v8::internal::Worklist.204", %"class.v8::internal::Worklist.206", %"class.v8::internal::Worklist.208", %"class.v8::internal::Worklist.210", %"class.v8::internal::Worklist.212", %"class.v8::internal::Worklist.214" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.200" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.202" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.204" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.206" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.208" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.210" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.212" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"class.v8::internal::Worklist.214" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.22" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.216", i8, i64 }
%"class.std::__1::vector.216" = type { %"class.std::__1::__vector_base.217" }
%"class.std::__1::__vector_base.217" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.218" }
%"class.std::__1::__compressed_pair.218" = type { %"struct.std::__1::__compressed_pair_elem.219" }
%"struct.std::__1::__compressed_pair_elem.219" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.223" = type { %"class.std::__1::__compressed_pair.224" }
%"class.std::__1::__compressed_pair.224" = type { %"struct.std::__1::__compressed_pair_elem.225" }
%"struct.std::__1::__compressed_pair_elem.225" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.229" = type { %"class.std::__1::__compressed_pair.230" }
%"class.std::__1::__compressed_pair.230" = type { %"struct.std::__1::__compressed_pair_elem.231" }
%"struct.std::__1::__compressed_pair_elem.231" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.232" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.184"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.232" = type { %"class.std::__1::__hash_table.233" }
%"class.std::__1::__hash_table.233" = type <{ %"class.std::__1::unique_ptr.234", %"class.std::__1::__compressed_pair.244", %"class.std::__1::__compressed_pair.249", %"class.std::__1::__compressed_pair.252", [4 x i8] }>
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236", %"struct.std::__1::__compressed_pair_elem.238" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"struct.std::__1::__hash_node_base.237"** }
%"struct.std::__1::__hash_node_base.237" = type { %"struct.std::__1::__hash_node_base.237"* }
%"struct.std::__1::__compressed_pair_elem.238" = type { %"class.std::__1::__bucket_list_deallocator.239" }
%"class.std::__1::__bucket_list_deallocator.239" = type { %"class.std::__1::__compressed_pair.240" }
%"class.std::__1::__compressed_pair.240" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"struct.std::__1::__hash_node_base.237" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.259" }
%"class.std::__1::unordered_map.259" = type { %"class.std::__1::__hash_table.260" }
%"class.std::__1::__hash_table.260" = type <{ %"class.std::__1::unique_ptr.261", %"class.std::__1::__compressed_pair.271", %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.279", [4 x i8] }>
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263", %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"struct.std::__1::__hash_node_base.264"** }
%"struct.std::__1::__hash_node_base.264" = type { %"struct.std::__1::__hash_node_base.264"* }
%"struct.std::__1::__compressed_pair_elem.265" = type { %"class.std::__1::__bucket_list_deallocator.266" }
%"class.std::__1::__bucket_list_deallocator.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.271" = type { %"struct.std::__1::__compressed_pair_elem.272" }
%"struct.std::__1::__compressed_pair_elem.272" = type { %"struct.std::__1::__hash_node_base.264" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.285" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.290" = type { %"class.std::__1::__vector_base.291" }
%"class.std::__1::__vector_base.291" = type { %"struct.std::__1::pair.292"*, %"struct.std::__1::pair.292"*, %"class.std::__1::__compressed_pair.293" }
%"struct.std::__1::pair.292" = type opaque
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"struct.std::__1::pair.292"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.298", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.283"], [3 x %"class.std::__1::vector.283"], i8, %"struct.std::__1::atomic.155", [6 x i8], %"class.std::__1::vector.283", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.298" = type { %"class.std::__1::__compressed_pair.299" }
%"class.std::__1::__compressed_pair.299" = type { %"struct.std::__1::__compressed_pair_elem.300" }
%"struct.std::__1::__compressed_pair_elem.300" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.308"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.283", %"class.std::__1::vector.283", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.308" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.323" = type { %"class.std::__1::__compressed_pair.324" }
%"class.std::__1::__compressed_pair.324" = type { %"struct.std::__1::__compressed_pair_elem.325" }
%"struct.std::__1::__compressed_pair_elem.325" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.22", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.333", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.326"], %"class.std::__1::unique_ptr.298" }
%"class.std::__1::vector.326" = type { %"class.std::__1::__vector_base.327" }
%"class.std::__1::__vector_base.327" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.328" }
%"class.std::__1::__compressed_pair.328" = type { %"struct.std::__1::__compressed_pair_elem.329" }
%"struct.std::__1::__compressed_pair_elem.329" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.362" = type { %"class.std::__1::__compressed_pair.363" }
%"class.std::__1::__compressed_pair.363" = type { %"struct.std::__1::__compressed_pair_elem.364" }
%"struct.std::__1::__compressed_pair_elem.364" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.365", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.369", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.374" }
%"struct.std::__1::atomic.365" = type { %"struct.std::__1::__atomic_base.366" }
%"struct.std::__1::__atomic_base.366" = type { %"struct.std::__1::__cxx_atomic_impl.367" }
%"struct.std::__1::__cxx_atomic_impl.367" = type { %"struct.std::__1::__cxx_atomic_base_impl.368" }
%"struct.std::__1::__cxx_atomic_base_impl.368" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.369" = type { %"struct.std::__1::__atomic_base.370" }
%"struct.std::__1::__atomic_base.370" = type { %"struct.std::__1::__cxx_atomic_impl.371" }
%"struct.std::__1::__cxx_atomic_impl.371" = type { %"struct.std::__1::__cxx_atomic_base_impl.372" }
%"struct.std::__1::__cxx_atomic_base_impl.372" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.298", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.22", %"struct.std::__1::atomic.155", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.404", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.404" = type { %"class.std::__1::__hash_table.405" }
%"class.std::__1::__hash_table.405" = type <{ %"class.std::__1::unique_ptr.406", %"class.std::__1::__compressed_pair.416", %"class.std::__1::__compressed_pair.421", %"class.std::__1::__compressed_pair.424", [4 x i8] }>
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408", %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"struct.std::__1::__hash_node_base.409"** }
%"struct.std::__1::__hash_node_base.409" = type { %"struct.std::__1::__hash_node_base.409"* }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.std::__1::__bucket_list_deallocator.411" }
%"class.std::__1::__bucket_list_deallocator.411" = type { %"class.std::__1::__compressed_pair.412" }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.416" = type { %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"struct.std::__1::__hash_node_base.409" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.431" = type { %"class.std::__1::__compressed_pair.432" }
%"class.std::__1::__compressed_pair.432" = type { %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.437" = type { %"class.std::__1::__compressed_pair.438" }
%"class.std::__1::__compressed_pair.438" = type { %"struct.std::__1::__compressed_pair_elem.439" }
%"struct.std::__1::__compressed_pair_elem.439" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.440" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.459" = type { %"class.std::__1::__compressed_pair.460" }
%"class.std::__1::__compressed_pair.460" = type { %"struct.std::__1::__compressed_pair_elem.461" }
%"struct.std::__1::__compressed_pair_elem.461" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.465" = type { %"class.std::__1::__compressed_pair.466" }
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.483" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.502", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.484", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.502" = type { %"struct.std::__1::__atomic_base.503" }
%"struct.std::__1::__atomic_base.503" = type { %"struct.std::__1::__cxx_atomic_impl.504" }
%"struct.std::__1::__cxx_atomic_impl.504" = type { %"struct.std::__1::__cxx_atomic_base_impl.505" }
%"struct.std::__1::__cxx_atomic_base_impl.505" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.506" = type { %"class.std::__1::__hash_table.507" }
%"class.std::__1::__hash_table.507" = type <{ %"class.std::__1::unique_ptr.508", %"class.std::__1::__compressed_pair.518", %"class.std::__1::__compressed_pair.523", %"class.std::__1::__compressed_pair.526", [4 x i8] }>
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510", %"struct.std::__1::__compressed_pair_elem.512" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"struct.std::__1::__hash_node_base.511"** }
%"struct.std::__1::__hash_node_base.511" = type { %"struct.std::__1::__hash_node_base.511"* }
%"struct.std::__1::__compressed_pair_elem.512" = type { %"class.std::__1::__bucket_list_deallocator.513" }
%"class.std::__1::__bucket_list_deallocator.513" = type { %"class.std::__1::__compressed_pair.514" }
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.518" = type { %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"struct.std::__1::__hash_node_base.511" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unique_ptr.532" = type { %"class.std::__1::__compressed_pair.533" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.534" }
%"struct.std::__1::__compressed_pair_elem.534" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.544", %"class.std::__1::vector.544" }
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.333" = type { %"class.std::__1::__hash_table.334" }
%"class.std::__1::__hash_table.334" = type <{ %"class.std::__1::unique_ptr.335", %"class.std::__1::__compressed_pair.345", %"class.std::__1::__compressed_pair.350", %"class.std::__1::__compressed_pair.354", [4 x i8] }>
%"class.std::__1::unique_ptr.335" = type { %"class.std::__1::__compressed_pair.336" }
%"class.std::__1::__compressed_pair.336" = type { %"struct.std::__1::__compressed_pair_elem.337", %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.337" = type { %"struct.std::__1::__hash_node_base.338"** }
%"struct.std::__1::__hash_node_base.338" = type { %"struct.std::__1::__hash_node_base.338"* }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.std::__1::__bucket_list_deallocator.340" }
%"class.std::__1::__bucket_list_deallocator.340" = type { %"class.std::__1::__compressed_pair.341" }
%"class.std::__1::__compressed_pair.341" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.345" = type { %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"struct.std::__1::__hash_node_base.338" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.354" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.583" = type { %"class.std::__1::__hash_table.584" }
%"class.std::__1::__hash_table.584" = type <{ %"class.std::__1::unique_ptr.585", %"class.std::__1::__compressed_pair.595", %"class.std::__1::__compressed_pair.600", %"class.std::__1::__compressed_pair.603", [4 x i8] }>
%"class.std::__1::unique_ptr.585" = type { %"class.std::__1::__compressed_pair.586" }
%"class.std::__1::__compressed_pair.586" = type { %"struct.std::__1::__compressed_pair_elem.587", %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.587" = type { %"struct.std::__1::__hash_node_base.588"** }
%"struct.std::__1::__hash_node_base.588" = type { %"struct.std::__1::__hash_node_base.588"* }
%"struct.std::__1::__compressed_pair_elem.589" = type { %"class.std::__1::__bucket_list_deallocator.590" }
%"class.std::__1::__bucket_list_deallocator.590" = type { %"class.std::__1::__compressed_pair.591" }
%"class.std::__1::__compressed_pair.591" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"struct.std::__1::__hash_node_base.588" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.557" = type { %"class.std::__1::__hash_table.558" }
%"class.std::__1::__hash_table.558" = type <{ %"class.std::__1::unique_ptr.559", %"class.std::__1::__compressed_pair.569", %"class.std::__1::__compressed_pair.574", %"class.std::__1::__compressed_pair.577", [4 x i8] }>
%"class.std::__1::unique_ptr.559" = type { %"class.std::__1::__compressed_pair.560" }
%"class.std::__1::__compressed_pair.560" = type { %"struct.std::__1::__compressed_pair_elem.561", %"struct.std::__1::__compressed_pair_elem.563" }
%"struct.std::__1::__compressed_pair_elem.561" = type { %"struct.std::__1::__hash_node_base.562"** }
%"struct.std::__1::__hash_node_base.562" = type { %"struct.std::__1::__hash_node_base.562"* }
%"struct.std::__1::__compressed_pair_elem.563" = type { %"class.std::__1::__bucket_list_deallocator.564" }
%"class.std::__1::__bucket_list_deallocator.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"struct.std::__1::__hash_node_base.562" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::unordered_map.607" = type { %"class.std::__1::__hash_table.608" }
%"class.std::__1::__hash_table.608" = type <{ %"class.std::__1::unique_ptr.609", %"class.std::__1::__compressed_pair.619", %"class.std::__1::__compressed_pair.624", %"class.std::__1::__compressed_pair.629", [4 x i8] }>
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611", %"struct.std::__1::__compressed_pair_elem.613" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"struct.std::__1::__hash_node_base.612"** }
%"struct.std::__1::__hash_node_base.612" = type { %"struct.std::__1::__hash_node_base.612"* }
%"struct.std::__1::__compressed_pair_elem.613" = type { %"class.std::__1::__bucket_list_deallocator.614" }
%"class.std::__1::__bucket_list_deallocator.614" = type { %"class.std::__1::__compressed_pair.615" }
%"class.std::__1::__compressed_pair.615" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.619" = type { %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"struct.std::__1::__hash_node_base.612" }
%"class.std::__1::__compressed_pair.624" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"class.std::__1::vector.635" = type { %"class.std::__1::__vector_base.636" }
%"class.std::__1::__vector_base.636" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.638" }
%"struct.std::__1::__compressed_pair_elem.638" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.642" = type { %"class.std::__1::__compressed_pair.643" }
%"class.std::__1::__compressed_pair.643" = type { %"struct.std::__1::__compressed_pair_elem.644" }
%"struct.std::__1::__compressed_pair_elem.644" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.22" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__cxx_atomic_impl.25" }
%"struct.std::__1::__cxx_atomic_impl.25" = type { %"struct.std::__1::__cxx_atomic_base_impl.26" }
%"struct.std::__1::__cxx_atomic_base_impl.26" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.22", i64, %"struct.std::__1::atomic.22" }
%"class.std::__1::vector.142" = type { %"class.std::__1::__vector_base.143" }
%"class.std::__1::__vector_base.143" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.144" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.144" = type { %"struct.std::__1::__compressed_pair_elem.145" }
%"struct.std::__1::__compressed_pair_elem.145" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.544" = type { %"class.std::__1::__vector_base.545" }
%"class.std::__1::__vector_base.545" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::CallOptimization" = type <{ %"class.v8::internal::Handle", %"class.v8::internal::Handle.0", %"class.v8::internal::Handle.1", i8, i8, [6 x i8] }>
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.0" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef" = type { %"class.v8::internal::FunctionTemplateInfo" }
%"class.v8::internal::FunctionTemplateInfo" = type { %"class.v8::internal::TorqueGeneratedFunctionTemplateInfo" }
%"class.v8::internal::TorqueGeneratedFunctionTemplateInfo" = type { %"class.v8::internal::TemplateInfo" }
%"class.v8::internal::TemplateInfo" = type { %"class.v8::internal::TorqueGeneratedTemplateInfo" }
%"class.v8::internal::TorqueGeneratedTemplateInfo" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }

$_ZN2v88internal16CallOptimizationC5INS0_7IsolateEEEPT_NS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal16CallOptimization10InitializeINS0_7IsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE = comdat any

$_ZN2v88internal16CallOptimizationC5INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE = comdat any

$_ZN2v88internal16CallOptimization10InitializeINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE = comdat any

$_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_7IsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE = comdat any

$_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_12LocalIsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE = comdat any

$_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_7IsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE = comdat any

$_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE = comdat any

@.str = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8

@_ZN2v88internal16CallOptimizationC1INS0_7IsolateEEEPT_NS0_6HandleINS0_6ObjectEEE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal16CallOptimizationC2INS0_7IsolateEEEPT_NS0_6HandleINS0_6ObjectEEE
@_ZN2v88internal16CallOptimizationC1INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE = weak_odr hidden unnamed_addr alias void (%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*), void (%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*)* @_ZN2v88internal16CallOptimizationC2INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16CallOptimizationC2INS0_7IsolateEEEPT_NS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 comdat($_ZN2v88internal16CallOptimizationC5INS0_7IsolateEEEPT_NS0_6HandleINS0_6ObjectEEE) align 2 {
  %4 = bitcast %"class.v8::internal::CallOptimization"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 26, i1 false)
  %5 = load i64, i64* %2, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %3
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = add i16 %17, -1059
  %19 = icmp ult i16 %18, 15
  br i1 %19, label %20, label %61

20:                                               ; preds = %8
  %21 = ptrtoint i64* %2 to i64
  %22 = icmp eq i64* %2, null
  br i1 %22, label %70, label %23

23:                                               ; preds = %20
  %24 = add i64 %5, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 acquire, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = add i64 %28, 31
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = icmp eq i32 %31, 85
  br i1 %32, label %70, label %33

33:                                               ; preds = %23
  %34 = add i64 %5, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %9, %37
  %39 = add i64 %38, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 acquire, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %9, %42
  %44 = icmp eq i32 %41, 170
  br i1 %44, label %70, label %45

45:                                               ; preds = %33
  %46 = and i64 %42, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %59, label %48

48:                                               ; preds = %45
  %49 = add i64 %43, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %9, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = add i16 %56, -157
  %58 = icmp ugt i16 %57, 1
  br i1 %58, label %59, label %70

59:                                               ; preds = %48, %45
  %60 = bitcast %"class.v8::internal::CallOptimization"* %0 to i64*
  store i64 %21, i64* %60, align 8
  tail call void @_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_7IsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::CallOptimization"* %0, %"class.v8::internal::Isolate"* %1, i64* nonnull %2) #4
  br label %70

61:                                               ; preds = %8
  %62 = load atomic i32, i32* %11 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %9, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 83
  br i1 %68, label %69, label %70

69:                                               ; preds = %61
  tail call void @_ZN2v88internal16CallOptimization10InitializeINS0_7IsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE(%"class.v8::internal::CallOptimization"* %0, %"class.v8::internal::Isolate"* %1, i64* %2)
  br label %70

70:                                               ; preds = %3, %59, %48, %33, %23, %20, %61, %69
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16CallOptimization10InitializeINS0_7IsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %2, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %12 = load i64, i64* %11, align 8
  %13 = trunc i64 %12 to i32
  %14 = icmp eq i32 %8, %13
  br i1 %14, label %78, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %17 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %18 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %17, i64 %10) #4
  br label %34

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %25 = load i64*, i64** %24, align 8
  %26 = icmp eq i64* %23, %25
  br i1 %26, label %27, label %29

27:                                               ; preds = %21
  %28 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %29

29:                                               ; preds = %27, %21
  %30 = phi i64* [ %28, %27 ], [ %23, %21 ]
  %31 = ptrtoint i64* %30 to i64
  %32 = add i64 %31, 8
  %33 = inttoptr i64 %32 to i64*
  store i64* %33, i64** %22, align 8
  store i64 %10, i64* %30, align 8
  br label %34

34:                                               ; preds = %19, %29
  %35 = phi i64* [ %20, %19 ], [ %30, %29 ]
  %36 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %35, i64** %36, align 8
  %37 = load i64, i64* %2, align 8
  %38 = and i64 %37, -4294967296
  %39 = add i64 %37, 31
  %40 = inttoptr i64 %39 to i32*
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %38, %42
  %44 = load i64, i64* %11, align 8
  %45 = trunc i64 %44 to i32
  %46 = icmp eq i32 %41, %45
  br i1 %46, label %68, label %47

47:                                               ; preds = %34
  %48 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %16, align 8
  %49 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %48, i64 %43) #4
  br label %65

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %54 = load i64*, i64** %53, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %56 = load i64*, i64** %55, align 8
  %57 = icmp eq i64* %54, %56
  br i1 %57, label %58, label %60

58:                                               ; preds = %52
  %59 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %60

60:                                               ; preds = %58, %52
  %61 = phi i64* [ %59, %58 ], [ %54, %52 ]
  %62 = ptrtoint i64* %61 to i64
  %63 = add i64 %62, 8
  %64 = inttoptr i64 %63 to i64*
  store i64* %64, i64** %53, align 8
  store i64 %43, i64* %61, align 8
  br label %65

65:                                               ; preds = %50, %60
  %66 = phi i64* [ %51, %50 ], [ %61, %60 ]
  %67 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* %66, i64** %67, align 8
  br label %68

68:                                               ; preds = %65, %34
  %69 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 3
  store i8 1, i8* %69, align 8
  %70 = load i64, i64* %2, align 8
  %71 = add i64 %70, 43
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 4
  %75 = lshr i32 %73, 5
  %76 = trunc i32 %75 to i8
  %77 = and i8 %76, 1
  store i8 %77, i8* %74, align 1
  br label %78

78:                                               ; preds = %3, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal16CallOptimizationC2INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*) unnamed_addr #0 comdat($_ZN2v88internal16CallOptimizationC5INS0_12LocalIsolateEEEPT_NS0_6HandleINS0_6ObjectEEE) align 2 {
  %4 = bitcast %"class.v8::internal::CallOptimization"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 26, i1 false)
  %5 = load i64, i64* %2, align 8
  %6 = and i64 %5, 1
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %70, label %8

8:                                                ; preds = %3
  %9 = and i64 %5, -4294967296
  %10 = add i64 %5, -1
  %11 = inttoptr i64 %10 to i32*
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = add i64 %14, 7
  %16 = inttoptr i64 %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = add i16 %17, -1059
  %19 = icmp ult i16 %18, 15
  br i1 %19, label %20, label %61

20:                                               ; preds = %8
  %21 = ptrtoint i64* %2 to i64
  %22 = icmp eq i64* %2, null
  br i1 %22, label %70, label %23

23:                                               ; preds = %20
  %24 = add i64 %5, 23
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 acquire, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %9, %27
  %29 = add i64 %28, 31
  %30 = inttoptr i64 %29 to i32*
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = icmp eq i32 %31, 85
  br i1 %32, label %70, label %33

33:                                               ; preds = %23
  %34 = add i64 %5, 11
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = zext i32 %36 to i64
  %38 = or i64 %9, %37
  %39 = add i64 %38, 3
  %40 = inttoptr i64 %39 to i32*
  %41 = load atomic i32, i32* %40 acquire, align 4
  %42 = zext i32 %41 to i64
  %43 = or i64 %9, %42
  %44 = icmp eq i32 %41, 170
  br i1 %44, label %70, label %45

45:                                               ; preds = %33
  %46 = and i64 %42, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %59, label %48

48:                                               ; preds = %45
  %49 = add i64 %43, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %9, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = add i16 %56, -157
  %58 = icmp ugt i16 %57, 1
  br i1 %58, label %59, label %70

59:                                               ; preds = %48, %45
  %60 = bitcast %"class.v8::internal::CallOptimization"* %0 to i64*
  store i64 %21, i64* %60, align 8
  tail call void @_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::CallOptimization"* %0, %"class.v8::internal::LocalIsolate"* %1, i64* nonnull %2) #4
  br label %70

61:                                               ; preds = %8
  %62 = load atomic i32, i32* %11 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %9, %63
  %65 = add i64 %64, 7
  %66 = inttoptr i64 %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = icmp eq i16 %67, 83
  br i1 %68, label %69, label %70

69:                                               ; preds = %61
  tail call void @_ZN2v88internal16CallOptimization10InitializeINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE(%"class.v8::internal::CallOptimization"* %0, %"class.v8::internal::LocalIsolate"* %1, i64* %2)
  br label %70

70:                                               ; preds = %3, %59, %48, %33, %23, %20, %61, %69
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16CallOptimization10InitializeINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_20FunctionTemplateInfoEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %2, align 8
  %5 = and i64 %4, -4294967296
  %6 = add i64 %4, 23
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = zext i32 %8 to i64
  %10 = or i64 %5, %9
  %11 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i64*, i64** %11, align 8
  %13 = getelementptr inbounds i64, i64* %12, i64 4
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = icmp eq i32 %8, %15
  br i1 %16, label %88, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %23 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %22, i64 %10) #4
  br label %39

24:                                               ; preds = %17
  %25 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %26 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %26, i64 0, i32 0, i32 0
  %28 = load i64*, i64** %27, align 8
  %29 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %26, i64 0, i32 0, i32 1
  %30 = load i64*, i64** %29, align 8
  %31 = icmp eq i64* %28, %30
  br i1 %31, label %32, label %35

32:                                               ; preds = %24
  %33 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %26) #4
  %34 = load i64*, i64** %27, align 8
  br label %35

35:                                               ; preds = %32, %24
  %36 = phi i64* [ %34, %32 ], [ %28, %24 ]
  %37 = phi i64* [ %33, %32 ], [ %28, %24 ]
  %38 = getelementptr inbounds i64, i64* %36, i64 1
  store i64* %38, i64** %27, align 8
  store i64 %10, i64* %37, align 8
  br label %39

39:                                               ; preds = %21, %35
  %40 = phi i64* [ %23, %21 ], [ %37, %35 ]
  %41 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %40, i64** %41, align 8
  %42 = load i64, i64* %2, align 8
  %43 = and i64 %42, -4294967296
  %44 = add i64 %42, 31
  %45 = inttoptr i64 %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %43, %47
  %49 = load i64*, i64** %11, align 8
  %50 = getelementptr inbounds i64, i64* %49, i64 4
  %51 = load i64, i64* %50, align 8
  %52 = trunc i64 %51 to i32
  %53 = icmp eq i32 %46, %52
  br i1 %53, label %78, label %54

54:                                               ; preds = %39
  %55 = load i8, i8* %18, align 8, !range !2
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %54
  %58 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %59 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %58, i64 %48) #4
  br label %75

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %62 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %62, i64 0, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %62, i64 0, i32 0, i32 1
  %66 = load i64*, i64** %65, align 8
  %67 = icmp eq i64* %64, %66
  br i1 %67, label %68, label %71

68:                                               ; preds = %60
  %69 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %62) #4
  %70 = load i64*, i64** %63, align 8
  br label %71

71:                                               ; preds = %68, %60
  %72 = phi i64* [ %70, %68 ], [ %64, %60 ]
  %73 = phi i64* [ %69, %68 ], [ %64, %60 ]
  %74 = getelementptr inbounds i64, i64* %72, i64 1
  store i64* %74, i64** %63, align 8
  store i64 %48, i64* %73, align 8
  br label %75

75:                                               ; preds = %57, %71
  %76 = phi i64* [ %59, %57 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* %76, i64** %77, align 8
  br label %78

78:                                               ; preds = %75, %39
  %79 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 3
  store i8 1, i8* %79, align 8
  %80 = load i64, i64* %2, align 8
  %81 = add i64 %80, 43
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 4
  %85 = lshr i32 %83, 5
  %86 = trunc i32 %85 to i8
  %87 = and i8 %86, 1
  store i8 %87, i8* %84, align 1
  br label %88

88:                                               ; preds = %3, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_7IsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", align 8
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = icmp ugt i16 %10, 188
  br i1 %11, label %12, label %114

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  br i1 %15, label %22, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5, i64 0, i32 0
  %21 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %20, i64 %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br i1 %21, label %114, label %23

22:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %114

23:                                               ; preds = %17
  %24 = load i64, i64* %2, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 190
  br i1 %28, label %29, label %113

29:                                               ; preds = %23
  %30 = and i64 %24, -4294967296
  %31 = add i64 %24, 15
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %37 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 1, i64 0
  br label %52

44:                                               ; preds = %38, %29
  %45 = and i64 %35, -262144
  %46 = or i64 %45, 16
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = add i64 %48, -41416
  %50 = inttoptr i64 %49 to %"class.v8::internal::Isolate"*
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %52

52:                                               ; preds = %42, %44
  %53 = phi i64* [ %51, %44 ], [ %43, %42 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 6
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %33, %56
  br i1 %57, label %113, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %60 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %61 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %58
  %63 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %60, i64 %35) #4
  %64 = load i64, i64* %63, align 8
  br label %78

65:                                               ; preds = %58
  %66 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %67 = load i64*, i64** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %69 = load i64*, i64** %68, align 8
  %70 = icmp eq i64* %67, %69
  br i1 %70, label %71, label %73

71:                                               ; preds = %65
  %72 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %73

73:                                               ; preds = %71, %65
  %74 = phi i64* [ %72, %71 ], [ %67, %65 ]
  %75 = ptrtoint i64* %74 to i64
  %76 = add i64 %75, 8
  %77 = inttoptr i64 %76 to i64*
  store i64* %77, i64** %66, align 8
  store i64 %35, i64* %74, align 8
  br label %78

78:                                               ; preds = %62, %73
  %79 = phi i64 [ %64, %62 ], [ %35, %73 ]
  %80 = phi i64* [ %63, %62 ], [ %74, %73 ]
  %81 = and i64 %79, -4294967296
  %82 = add i64 %79, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %59, align 8
  %88 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %87, null
  br i1 %88, label %91, label %89

89:                                               ; preds = %78
  %90 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %87, i64 %86) #4
  br label %104

91:                                               ; preds = %78
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %93 = load i64*, i64** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %95 = load i64*, i64** %94, align 8
  %96 = icmp eq i64* %93, %95
  br i1 %96, label %97, label %99

97:                                               ; preds = %91
  %98 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %99

99:                                               ; preds = %97, %91
  %100 = phi i64* [ %98, %97 ], [ %93, %91 ]
  %101 = ptrtoint i64* %100 to i64
  %102 = add i64 %101, 8
  %103 = inttoptr i64 %102 to i64*
  store i64* %103, i64** %92, align 8
  store i64 %86, i64* %100, align 8
  br label %104

104:                                              ; preds = %89, %99
  %105 = phi i64* [ %90, %89 ], [ %100, %99 ]
  %106 = bitcast %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #4
  %107 = load i64*, i64** %13, align 8
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6, i64 0, i32 0
  %111 = load i64, i64* %105, align 8
  %112 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %110, i64 %111) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #4
  br i1 %112, label %114, label %113

113:                                              ; preds = %23, %104, %52
  br label %114

114:                                              ; preds = %104, %17, %22, %4, %113
  %115 = phi i32 [ 0, %113 ], [ 0, %4 ], [ 1, %22 ], [ 1, %17 ], [ 2, %104 ]
  %116 = phi i64* [ null, %113 ], [ null, %4 ], [ null, %22 ], [ null, %17 ], [ %80, %104 ]
  store i32 %115, i32* %3, align 4
  ret i64* %116
}

declare zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden i64* @_ZNK2v88internal16CallOptimization26LookupHolderOfExpectedTypeINS0_12LocalIsolateEEENS0_6HandleINS0_8JSObjectEEEPT_NS4_INS0_3MapEEEPNS1_12HolderLookupE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", align 8
  %7 = load i64, i64* %2, align 8
  %8 = add i64 %7, 7
  %9 = inttoptr i64 %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = icmp ugt i16 %10, 188
  br i1 %11, label %12, label %120

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  %15 = icmp eq i64* %14, null
  %16 = bitcast %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #4
  br i1 %15, label %22, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %14, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %5, i64 0, i32 0
  %21 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %20, i64 %7) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br i1 %21, label %120, label %23

22:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #4
  br label %120

23:                                               ; preds = %17
  %24 = load i64, i64* %2, align 8
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 190
  br i1 %28, label %29, label %119

29:                                               ; preds = %23
  %30 = and i64 %24, -4294967296
  %31 = add i64 %24, 15
  %32 = inttoptr i64 %31 to i32*
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %30, %34
  %36 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %37 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %36, null
  br i1 %37, label %44, label %38

38:                                               ; preds = %29
  %39 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 0, i32 1
  %40 = load i8, i8* %39, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %36, i64 0, i32 1, i64 0
  br label %52

44:                                               ; preds = %38, %29
  %45 = and i64 %35, -262144
  %46 = or i64 %45, 16
  %47 = inttoptr i64 %46 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = add i64 %48, -41416
  %50 = inttoptr i64 %49 to %"class.v8::internal::Isolate"*
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %52

52:                                               ; preds = %42, %44
  %53 = phi i64* [ %51, %44 ], [ %43, %42 ]
  %54 = getelementptr inbounds i64, i64* %53, i64 6
  %55 = load i64, i64* %54, align 8
  %56 = trunc i64 %55 to i32
  %57 = icmp eq i32 %33, %56
  br i1 %57, label %119, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %66, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %64 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %63, i64 %35) #4
  %65 = load i64, i64* %64, align 8
  br label %81

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %68 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %68, i64 0, i32 0, i32 0
  %70 = load i64*, i64** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %68, i64 0, i32 0, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = icmp eq i64* %70, %72
  br i1 %73, label %74, label %77

74:                                               ; preds = %66
  %75 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %68) #4
  %76 = load i64*, i64** %69, align 8
  br label %77

77:                                               ; preds = %74, %66
  %78 = phi i64* [ %76, %74 ], [ %70, %66 ]
  %79 = phi i64* [ %75, %74 ], [ %70, %66 ]
  %80 = getelementptr inbounds i64, i64* %78, i64 1
  store i64* %80, i64** %69, align 8
  store i64 %35, i64* %79, align 8
  br label %81

81:                                               ; preds = %62, %77
  %82 = phi i64 [ %65, %62 ], [ %35, %77 ]
  %83 = phi i64* [ %64, %62 ], [ %79, %77 ]
  %84 = and i64 %82, -4294967296
  %85 = add i64 %82, -1
  %86 = inttoptr i64 %85 to i32*
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = zext i32 %87 to i64
  %89 = or i64 %84, %88
  %90 = load i8, i8* %59, align 8, !range !2
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %95, label %92

92:                                               ; preds = %81
  %93 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %94 = call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %93, i64 %89) #4
  br label %110

95:                                               ; preds = %81
  %96 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %97 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %97, i64 0, i32 0, i32 0
  %99 = load i64*, i64** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %97, i64 0, i32 0, i32 1
  %101 = load i64*, i64** %100, align 8
  %102 = icmp eq i64* %99, %101
  br i1 %102, label %103, label %106

103:                                              ; preds = %95
  %104 = call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %97) #4
  %105 = load i64*, i64** %98, align 8
  br label %106

106:                                              ; preds = %103, %95
  %107 = phi i64* [ %105, %103 ], [ %99, %95 ]
  %108 = phi i64* [ %104, %103 ], [ %99, %95 ]
  %109 = getelementptr inbounds i64, i64* %107, i64 1
  store i64* %109, i64** %98, align 8
  store i64 %89, i64* %108, align 8
  br label %110

110:                                              ; preds = %92, %106
  %111 = phi i64* [ %94, %92 ], [ %108, %106 ]
  %112 = bitcast %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #4
  %113 = load i64*, i64** %13, align 8
  %114 = load i64, i64* %113, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FunctionTemplateInfo>::ObjectRef"* %6, i64 0, i32 0
  %117 = load i64, i64* %111, align 8
  %118 = call zeroext i1 @_ZNK2v88internal20FunctionTemplateInfo13IsTemplateForENS0_3MapE(%"class.v8::internal::FunctionTemplateInfo"* nonnull %116, i64 %117) #4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #4
  br i1 %118, label %120, label %119

119:                                              ; preds = %23, %110, %52
  br label %120

120:                                              ; preds = %110, %17, %22, %4, %119
  %121 = phi i32 [ 0, %119 ], [ 0, %4 ], [ 1, %22 ], [ 1, %17 ], [ 2, %110 ]
  %122 = phi i64* [ null, %119 ], [ null, %4 ], [ null, %22 ], [ null, %17 ], [ %83, %110 ]
  store i32 %121, i32* %3, align 4
  ret i64* %122
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal16CallOptimization18GetAccessorContextENS0_3MapE(%"class.v8::internal::CallOptimization"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = icmp eq i64* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = load i64, i64* %4, align 8
  br label %87

8:                                                ; preds = %2
  %9 = and i64 %1, -4294967296
  %10 = add i64 %1, 19
  %11 = inttoptr i64 %10 to i32*
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = or i64 %9, %13
  %15 = and i64 %13, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %87, label %17

17:                                               ; preds = %8
  %18 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %19 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %18, null
  %20 = and i64 %1, -262144
  %21 = or i64 %20, 16
  %22 = inttoptr i64 %21 to i64*
  br i1 %19, label %52, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 0, i32 1
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %31, label %27

27:                                               ; preds = %23
  %28 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %18, i64 0, i32 1, i64 10
  %29 = load i64, i64* %28, align 8
  %30 = trunc i64 %29 to i32
  br label %73

31:                                               ; preds = %23
  %32 = load i64, i64* %22, align 16
  %33 = add i64 %32, -41416
  %34 = inttoptr i64 %33 to %"class.v8::internal::Isolate"*
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %34, i64 0, i32 0, i32 7, i32 0, i64 10
  %36 = load i64, i64* %35, align 8
  %37 = trunc i64 %36 to i32
  br label %38

38:                                               ; preds = %44, %31
  %39 = phi i64 [ %49, %44 ], [ %14, %31 ]
  %40 = add i64 %39, -1
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = icmp eq i32 %42, %37
  br i1 %43, label %44, label %87

44:                                               ; preds = %38
  %45 = add i64 %39, 19
  %46 = inttoptr i64 %45 to i32*
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %9, %48
  %50 = and i64 %48, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %87, label %38

52:                                               ; preds = %17
  %53 = load i64, i64* %22, align 16
  %54 = add i64 %53, -41416
  %55 = inttoptr i64 %54 to %"class.v8::internal::Isolate"*
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %55, i64 0, i32 0, i32 7, i32 0, i64 10
  %57 = load i64, i64* %56, align 8
  %58 = trunc i64 %57 to i32
  br label %59

59:                                               ; preds = %65, %52
  %60 = phi i64 [ %70, %65 ], [ %14, %52 ]
  %61 = add i64 %60, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = icmp eq i32 %63, %58
  br i1 %64, label %65, label %87

65:                                               ; preds = %59
  %66 = add i64 %60, 19
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %9, %69
  %71 = and i64 %69, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %87, label %59

73:                                               ; preds = %79, %27
  %74 = phi i64 [ %84, %79 ], [ %14, %27 ]
  %75 = add i64 %74, -1
  %76 = inttoptr i64 %75 to i32*
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = icmp eq i32 %77, %30
  br i1 %78, label %79, label %87

79:                                               ; preds = %73
  %80 = add i64 %74, 19
  %81 = inttoptr i64 %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %9, %83
  %85 = and i64 %83, 1
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %73

87:                                               ; preds = %79, %73, %44, %38, %65, %59, %8, %6
  %88 = phi i64 [ %7, %6 ], [ %14, %8 ], [ %70, %65 ], [ %60, %59 ], [ %39, %38 ], [ %49, %44 ], [ %74, %73 ], [ %84, %79 ]
  %89 = add i64 %88, 15
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = and i64 %88, -4294967296
  %93 = zext i32 %91 to i64
  %94 = or i64 %92, %93
  %95 = add i64 %94, -1
  %96 = inttoptr i64 %95 to i32*
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = zext i32 %97 to i64
  %99 = or i64 %92, %98
  %100 = add i64 %99, 19
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %92, %103
  ret i64 %104
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16CallOptimization30IsCrossContextLazyAccessorPairENS0_7ContextENS0_3MapE(%"class.v8::internal::CallOptimization"* nocapture readonly, i64, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i64*, i64** %4, align 8
  %6 = icmp eq i64* %5, null
  br i1 %6, label %7, label %12

7:                                                ; preds = %3
  %8 = tail call i64 @_ZNK2v88internal16CallOptimization18GetAccessorContextENS0_3MapE(%"class.v8::internal::CallOptimization"* %0, i64 %2)
  %9 = trunc i64 %1 to i32
  %10 = trunc i64 %8 to i32
  %11 = icmp ne i32 %9, %10
  br label %12

12:                                               ; preds = %3, %7
  %13 = phi i1 [ %11, %7 ], [ false, %3 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2v88internal16CallOptimization23IsCompatibleReceiverMapENS0_6HandleINS0_8JSObjectEEES4_NS1_12HolderLookupE(%"class.v8::internal::CallOptimization"* nocapture readnone, i64*, i64*, i32) local_unnamed_addr #0 align 2 {
  switch i32 %3, label %48 [
    i32 0, label %49
    i32 1, label %5
    i32 2, label %6
  ]

5:                                                ; preds = %4
  br label %49

6:                                                ; preds = %4
  %7 = icmp eq i64* %1, %2
  br i1 %7, label %49, label %8

8:                                                ; preds = %6
  %9 = icmp eq i64* %1, null
  %10 = icmp eq i64* %2, null
  %11 = or i1 %9, %10
  %12 = load i64, i64* %1, align 8
  br i1 %11, label %18, label %13

13:                                               ; preds = %8
  %14 = load i64, i64* %2, align 8
  %15 = trunc i64 %12 to i32
  %16 = trunc i64 %14 to i32
  %17 = icmp eq i32 %15, %16
  br i1 %17, label %49, label %18

18:                                               ; preds = %8, %13
  br label %19

19:                                               ; preds = %18, %44
  %20 = phi i64 [ %31, %44 ], [ %12, %18 ]
  %21 = and i64 %20, -4294967296
  %22 = add i64 %20, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 15
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %21, %30
  %32 = and i64 %30, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %49, label %34

34:                                               ; preds = %19
  %35 = add i64 %31, -1
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = zext i32 %37 to i64
  %39 = or i64 %21, %38
  %40 = add i64 %39, 7
  %41 = inttoptr i64 %40 to i16*
  %42 = load atomic i16, i16* %41 monotonic, align 2
  %43 = icmp ugt i16 %42, 188
  br i1 %43, label %44, label %49

44:                                               ; preds = %34
  %45 = load i64, i64* %2, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %29, %46
  br i1 %47, label %49, label %19

48:                                               ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str, i64 0, i64 0)) #5
  unreachable

49:                                               ; preds = %19, %44, %34, %6, %13, %4, %5
  %50 = phi i1 [ true, %5 ], [ false, %4 ], [ true, %13 ], [ true, %6 ], [ false, %19 ], [ false, %34 ], [ true, %44 ]
  ret i1 %50
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_7IsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %2, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i64 %4, -4294967296
  %9 = zext i32 %7 to i64
  %10 = or i64 %8, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %135, label %17

17:                                               ; preds = %3
  %18 = or i64 %8, %14
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %8, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 83
  br i1 %27, label %28, label %135

28:                                               ; preds = %17
  %29 = load i64, i64* %2, align 8
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %33, %39
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %42 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %43 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %28
  %45 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %42, i64 %40) #4
  %46 = load i64, i64* %45, align 8
  br label %60

47:                                               ; preds = %28
  %48 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %49 = load i64*, i64** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %51 = load i64*, i64** %50, align 8
  %52 = icmp eq i64* %49, %51
  br i1 %52, label %53, label %55

53:                                               ; preds = %47
  %54 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i64* [ %54, %53 ], [ %49, %47 ]
  %57 = ptrtoint i64* %56 to i64
  %58 = add i64 %57, 8
  %59 = inttoptr i64 %58 to i64*
  store i64* %59, i64** %48, align 8
  store i64 %40, i64* %56, align 8
  br label %60

60:                                               ; preds = %44, %55
  %61 = phi i64 [ %46, %44 ], [ %40, %55 ]
  %62 = phi i64* [ %45, %44 ], [ %56, %55 ]
  %63 = and i64 %61, -4294967296
  %64 = add i64 %61, 23
  %65 = inttoptr i64 %64 to i32*
  %66 = load atomic i32, i32* %65 acquire, align 4
  %67 = zext i32 %66 to i64
  %68 = or i64 %63, %67
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 7, i32 0, i64 4
  %70 = load i64, i64* %69, align 8
  %71 = trunc i64 %70 to i32
  %72 = icmp eq i32 %66, %71
  br i1 %72, label %135, label %73

73:                                               ; preds = %60
  %74 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %75 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %73
  %77 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %74, i64 %68) #4
  br label %91

78:                                               ; preds = %73
  %79 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %80 = load i64*, i64** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %82 = load i64*, i64** %81, align 8
  %83 = icmp eq i64* %80, %82
  br i1 %83, label %84, label %86

84:                                               ; preds = %78
  %85 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %86

86:                                               ; preds = %84, %78
  %87 = phi i64* [ %85, %84 ], [ %80, %78 ]
  %88 = ptrtoint i64* %87 to i64
  %89 = add i64 %88, 8
  %90 = inttoptr i64 %89 to i64*
  store i64* %90, i64** %79, align 8
  store i64 %68, i64* %87, align 8
  br label %91

91:                                               ; preds = %76, %86
  %92 = phi i64* [ %77, %76 ], [ %87, %86 ]
  %93 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %92, i64** %93, align 8
  %94 = load i64, i64* %62, align 8
  %95 = and i64 %94, -4294967296
  %96 = add i64 %94, 31
  %97 = inttoptr i64 %96 to i32*
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = or i64 %95, %99
  %101 = load i64, i64* %69, align 8
  %102 = trunc i64 %101 to i32
  %103 = icmp eq i32 %98, %102
  br i1 %103, label %125, label %104

104:                                              ; preds = %91
  %105 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %41, align 8
  %106 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %105, null
  br i1 %106, label %109, label %107

107:                                              ; preds = %104
  %108 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %105, i64 %100) #4
  br label %122

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %111 = load i64*, i64** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %113 = load i64*, i64** %112, align 8
  %114 = icmp eq i64* %111, %113
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #4
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i64* [ %116, %115 ], [ %111, %109 ]
  %119 = ptrtoint i64* %118 to i64
  %120 = add i64 %119, 8
  %121 = inttoptr i64 %120 to i64*
  store i64* %121, i64** %110, align 8
  store i64 %100, i64* %118, align 8
  br label %122

122:                                              ; preds = %107, %117
  %123 = phi i64* [ %108, %107 ], [ %118, %117 ]
  %124 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* %123, i64** %124, align 8
  br label %125

125:                                              ; preds = %91, %122
  %126 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = load i64, i64* %62, align 8
  %128 = add i64 %127, 43
  %129 = inttoptr i64 %128 to i32*
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 4
  %132 = lshr i32 %130, 5
  %133 = trunc i32 %132 to i8
  %134 = and i8 %133, 1
  store i8 %134, i8* %131, align 1
  br label %135

135:                                              ; preds = %3, %125, %60, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal16CallOptimization26AnalyzePossibleApiFunctionINS0_12LocalIsolateEEEvPT_NS0_6HandleINS0_10JSFunctionEEE(%"class.v8::internal::CallOptimization"*, %"class.v8::internal::LocalIsolate"*, i64*) local_unnamed_addr #0 comdat align 2 {
  %4 = load i64, i64* %2, align 8
  %5 = add i64 %4, 11
  %6 = inttoptr i64 %5 to i32*
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i64 %4, -4294967296
  %9 = zext i32 %7 to i64
  %10 = or i64 %8, %9
  %11 = add i64 %10, 3
  %12 = inttoptr i64 %11 to i32*
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %148, label %17

17:                                               ; preds = %3
  %18 = or i64 %8, %14
  %19 = add i64 %18, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = zext i32 %21 to i64
  %23 = or i64 %8, %22
  %24 = add i64 %23, 7
  %25 = inttoptr i64 %24 to i16*
  %26 = load atomic i16, i16* %25 monotonic, align 2
  %27 = icmp eq i16 %26, 83
  br i1 %27, label %28, label %148

28:                                               ; preds = %17
  %29 = load i64, i64* %2, align 8
  %30 = add i64 %29, 11
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i64 %29, -4294967296
  %34 = zext i32 %32 to i64
  %35 = or i64 %33, %34
  %36 = add i64 %35, 3
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %33, %39
  %41 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 1
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %48, label %44

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %46 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %45, i64 %40) #4
  %47 = load i64, i64* %46, align 8
  br label %63

48:                                               ; preds = %28
  %49 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %50 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %49, align 8
  %51 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %50, i64 0, i32 0, i32 0
  %52 = load i64*, i64** %51, align 8
  %53 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %50, i64 0, i32 0, i32 1
  %54 = load i64*, i64** %53, align 8
  %55 = icmp eq i64* %52, %54
  br i1 %55, label %56, label %59

56:                                               ; preds = %48
  %57 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %50) #4
  %58 = load i64*, i64** %51, align 8
  br label %59

59:                                               ; preds = %56, %48
  %60 = phi i64* [ %58, %56 ], [ %52, %48 ]
  %61 = phi i64* [ %57, %56 ], [ %52, %48 ]
  %62 = getelementptr inbounds i64, i64* %60, i64 1
  store i64* %62, i64** %51, align 8
  store i64 %40, i64* %61, align 8
  br label %63

63:                                               ; preds = %44, %59
  %64 = phi i64 [ %47, %44 ], [ %40, %59 ]
  %65 = phi i64* [ %46, %44 ], [ %61, %59 ]
  %66 = and i64 %64, -4294967296
  %67 = add i64 %64, 23
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 acquire, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %66, %70
  %72 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds i64, i64* %73, i64 4
  %75 = load i64, i64* %74, align 8
  %76 = trunc i64 %75 to i32
  %77 = icmp eq i32 %69, %76
  br i1 %77, label %148, label %78

78:                                               ; preds = %63
  %79 = load i8, i8* %41, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %84, label %81

81:                                               ; preds = %78
  %82 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %83 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %82, i64 %71) #4
  br label %99

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %86 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %86, i64 0, i32 0, i32 0
  %88 = load i64*, i64** %87, align 8
  %89 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %86, i64 0, i32 0, i32 1
  %90 = load i64*, i64** %89, align 8
  %91 = icmp eq i64* %88, %90
  br i1 %91, label %92, label %95

92:                                               ; preds = %84
  %93 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %86) #4
  %94 = load i64*, i64** %87, align 8
  br label %95

95:                                               ; preds = %92, %84
  %96 = phi i64* [ %94, %92 ], [ %88, %84 ]
  %97 = phi i64* [ %93, %92 ], [ %88, %84 ]
  %98 = getelementptr inbounds i64, i64* %96, i64 1
  store i64* %98, i64** %87, align 8
  store i64 %71, i64* %97, align 8
  br label %99

99:                                               ; preds = %81, %95
  %100 = phi i64* [ %83, %81 ], [ %97, %95 ]
  %101 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %100, i64** %101, align 8
  %102 = load i64, i64* %65, align 8
  %103 = and i64 %102, -4294967296
  %104 = add i64 %102, 31
  %105 = inttoptr i64 %104 to i32*
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i64
  %108 = or i64 %103, %107
  %109 = load i64*, i64** %72, align 8
  %110 = getelementptr inbounds i64, i64* %109, i64 4
  %111 = load i64, i64* %110, align 8
  %112 = trunc i64 %111 to i32
  %113 = icmp eq i32 %106, %112
  br i1 %113, label %138, label %114

114:                                              ; preds = %99
  %115 = load i8, i8* %41, align 8, !range !2
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1
  %119 = tail call i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"* %118, i64 %108) #4
  br label %135

120:                                              ; preds = %114
  %121 = getelementptr inbounds %"class.v8::internal::LocalIsolate", %"class.v8::internal::LocalIsolate"* %1, i64 0, i32 1, i32 7, i32 0, i32 0, i32 0
  %122 = load %"class.v8::internal::LocalHandles"*, %"class.v8::internal::LocalHandles"** %121, align 8
  %123 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %122, i64 0, i32 0, i32 0
  %124 = load i64*, i64** %123, align 8
  %125 = getelementptr inbounds %"class.v8::internal::LocalHandles", %"class.v8::internal::LocalHandles"* %122, i64 0, i32 0, i32 1
  %126 = load i64*, i64** %125, align 8
  %127 = icmp eq i64* %124, %126
  br i1 %127, label %128, label %131

128:                                              ; preds = %120
  %129 = tail call i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"* %122) #4
  %130 = load i64*, i64** %123, align 8
  br label %131

131:                                              ; preds = %128, %120
  %132 = phi i64* [ %130, %128 ], [ %124, %120 ]
  %133 = phi i64* [ %129, %128 ], [ %124, %120 ]
  %134 = getelementptr inbounds i64, i64* %132, i64 1
  store i64* %134, i64** %123, align 8
  store i64 %108, i64* %133, align 8
  br label %135

135:                                              ; preds = %117, %131
  %136 = phi i64* [ %119, %117 ], [ %133, %131 ]
  %137 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 1, i32 0, i32 0
  store i64* %136, i64** %137, align 8
  br label %138

138:                                              ; preds = %99, %135
  %139 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 3
  store i8 1, i8* %139, align 8
  %140 = load i64, i64* %65, align 8
  %141 = add i64 %140, 43
  %142 = inttoptr i64 %141 to i32*
  %143 = load i32, i32* %142, align 4
  %144 = getelementptr inbounds %"class.v8::internal::CallOptimization", %"class.v8::internal::CallOptimization"* %0, i64 0, i32 4
  %145 = lshr i32 %143, 5
  %146 = trunc i32 %145 to i8
  %147 = and i8 %146, 1
  store i8 %147, i8* %144, align 1
  br label %148

148:                                              ; preds = %3, %138, %63, %17
  ret void
}

declare i64* @_ZN2v88internal16LocalHandleScope19GetMainThreadHandleEPNS0_9LocalHeapEm(%"class.v8::internal::LocalHeap"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal12LocalHandles8AddBlockEv(%"class.v8::internal::LocalHandles"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
