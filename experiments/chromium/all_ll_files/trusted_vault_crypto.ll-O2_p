; ModuleID = '../../components/sync/trusted_vault/trusted_vault_crypto.cc'
source_filename = "../../components/sync/trusted_vault/trusted_vault_crypto.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i8* }
%"class.syncer::SecureBoxPrivateKey" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.ec_key_st* }
%struct.ec_key_st = type opaque
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.syncer::SecureBoxPublicKey" = type { %"class.std::__1::unique_ptr" }
%"class.crypto::HMAC" = type { i32, i8, %"class.std::__1::vector" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }

@_ZN6syncer12_GLOBAL__N_117kWrappedKeyHeaderE = internal constant [13 x i8] c"V1 shared_key", align 1
@.str = private unnamed_addr constant [60 x i8] c"../../components/sync/trusted_vault/trusted_vault_crypto.cc\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"hmac.Init(trusted_vault_key)\00", align 1
@.str.2 = private unnamed_addr constant [45 x i8] c"hmac.Sign(key.ExportToBytes(), member_proof)\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer29DecryptTrustedVaultWrappedKeyERKNS_19SecureBoxPrivateKeyEN4base4spanIKhLm18446744073709551615EEE(%"class.absl::optional"* noalias sret, %"class.syncer::SecureBoxPrivateKey"* dereferenceable(8), i64, i8*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::span", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  store i8* %3, i8** %7, align 8
  tail call void @_ZNK6syncer19SecureBoxPrivateKey7DecryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.absl::optional"* sret %0, %"class.syncer::SecureBoxPrivateKey"* %1, i64 0, i8* null, i64 13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN6syncer12_GLOBAL__N_117kWrappedKeyHeaderE, i64 0, i64 0), %"class.base::span"* nonnull byval(%"class.base::span") align 8 %5) #6
  ret void
}

declare void @_ZNK6syncer19SecureBoxPrivateKey7DecryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.absl::optional"* sret, %"class.syncer::SecureBoxPrivateKey"*, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer29ComputeTrustedVaultWrappedKeyERKNS_18SecureBoxPublicKeyEN4base4spanIKhLm18446744073709551615EEE(%"class.std::__1::vector"* noalias sret, %"class.syncer::SecureBoxPublicKey"* dereferenceable(8), i64, i8*) local_unnamed_addr #0 {
  %5 = alloca %"class.base::span", align 8
  %6 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  store i64 %2, i64* %6, align 8
  %7 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  store i8* %3, i8** %7, align 8
  tail call void @_ZNK6syncer18SecureBoxPublicKey7EncryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.std::__1::vector"* sret %0, %"class.syncer::SecureBoxPublicKey"* %1, i64 0, i8* null, i64 13, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @_ZN6syncer12_GLOBAL__N_117kWrappedKeyHeaderE, i64 0, i64 0), %"class.base::span"* nonnull byval(%"class.base::span") align 8 %5) #6
  ret void
}

declare void @_ZNK6syncer18SecureBoxPublicKey7EncryptEN4base4spanIKhLm18446744073709551615EEES4_S4_(%"class.std::__1::vector"* sret, %"class.syncer::SecureBoxPublicKey"*, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer18ComputeMemberProofERKNS_18SecureBoxPublicKeyERKNSt3__16vectorIhNS3_9allocatorIhEEEE(%"class.std::__1::vector"* noalias nocapture sret, %"class.syncer::SecureBoxPublicKey"* dereferenceable(8), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.crypto::HMAC", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = bitcast %"class.crypto::HMAC"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"* nonnull %4, i32 1) #6
  %9 = bitcast %"class.std::__1::vector"* %2 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %12 = bitcast i8** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %13, %10
  %15 = inttoptr i64 %10 to i8*
  %16 = call zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"* nonnull %4, i8* %15, i64 %14) #6
  br i1 %16, label %20, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 40, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #6
  %19 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #6
  br label %20

20:                                               ; preds = %3, %17
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %24 = call i8* @_Znwm(i64 32) #7
  store i8* %24, i8** %21, align 8
  %25 = getelementptr inbounds i8, i8* %24, i64 32
  store i8* %25, i8** %23, align 8
  %26 = bitcast i8** %22 to i64*
  %27 = ptrtoint i8* %24 to i64
  %28 = sub i64 32, %27
  %29 = getelementptr i8, i8* %24, i64 %28
  %30 = ptrtoint i8* %29 to i64
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %24, i8 0, i64 %30, i1 false) #6
  %31 = ptrtoint i8* %25 to i64
  store i64 %31, i64* %26, align 8
  %32 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %32) #6
  call void @_ZNK6syncer18SecureBoxPublicKey13ExportToBytesEv(%"class.std::__1::vector"* nonnull sret %6, %"class.syncer::SecureBoxPublicKey"* %1) #6
  %33 = bitcast %"class.std::__1::vector"* %6 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %36 = bitcast i8** %35 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = sub i64 %37, %34
  %39 = inttoptr i64 %34 to i8*
  %40 = call zeroext i1 @_ZNK6crypto4HMAC4SignEN4base4spanIKhLm18446744073709551615EEENS2_IhLm18446744073709551615EEE(%"class.crypto::HMAC"* nonnull %4, i64 %38, i8* %39, i64 32, i8* nonnull %24) #6
  br i1 %40, label %44, label %41

41:                                               ; preds = %20
  %42 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 43, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i64 0, i64 0)) #6
  %43 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #6
  br label %44

44:                                               ; preds = %20, %41
  %45 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, null
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = ptrtoint i8* %46 to i64
  store i64 %49, i64* %36, align 8
  call void @_ZdlPv(i8* nonnull %46) #7
  br label %50

50:                                               ; preds = %44, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %32) #6
  call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"*, i32) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZNK6crypto4HMAC4SignEN4base4spanIKhLm18446744073709551615EEENS2_IhLm18446744073709551615EEE(%"class.crypto::HMAC"*, i64, i8*, i64, i8*) local_unnamed_addr #1

declare void @_ZNK6syncer18SecureBoxPublicKey13ExportToBytesEv(%"class.std::__1::vector"* sret, %"class.syncer::SecureBoxPublicKey"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6syncer17VerifyMemberProofERKNS_18SecureBoxPublicKeyERKNSt3__16vectorIhNS3_9allocatorIhEEEES9_(%"class.syncer::SecureBoxPublicKey"* dereferenceable(8), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.crypto::HMAC", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.std::__1::vector", align 8
  %7 = bitcast %"class.crypto::HMAC"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 32, i1 false)
  call void @_ZN6crypto4HMACC1ENS0_13HashAlgorithmE(%"class.crypto::HMAC"* nonnull %4, i32 1) #6
  %8 = bitcast %"class.std::__1::vector"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %11 = bitcast i8** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %12, %9
  %14 = inttoptr i64 %9 to i8*
  %15 = call zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"* nonnull %4, i8* %14, i64 %13) #6
  br i1 %15, label %19, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #6
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str, i64 0, i64 0), i32 51, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0)) #6
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #6
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #6
  br label %19

19:                                               ; preds = %3, %16
  %20 = bitcast %"class.std::__1::vector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #6
  call void @_ZNK6syncer18SecureBoxPublicKey13ExportToBytesEv(%"class.std::__1::vector"* nonnull sret %6, %"class.syncer::SecureBoxPublicKey"* %0) #6
  %21 = bitcast %"class.std::__1::vector"* %6 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 1
  %24 = bitcast i8** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %25, %22
  %27 = bitcast %"class.std::__1::vector"* %2 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %30 = bitcast i8** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %31, %28
  %33 = inttoptr i64 %22 to i8*
  %34 = inttoptr i64 %28 to i8*
  %35 = call zeroext i1 @_ZNK6crypto4HMAC6VerifyEN4base4spanIKhLm18446744073709551615EEES4_(%"class.crypto::HMAC"* nonnull %4, i64 %26, i8* %33, i64 %32, i8* %34) #6
  %36 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %6, i64 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %19
  %40 = ptrtoint i8* %37 to i64
  store i64 %40, i64* %24, align 8
  call void @_ZdlPv(i8* nonnull %37) #7
  br label %41

41:                                               ; preds = %19, %39
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #6
  call void @_ZN6crypto4HMACD1Ev(%"class.crypto::HMAC"* nonnull %4) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #6
  ret i1 %35
}

declare zeroext i1 @_ZNK6crypto4HMAC6VerifyEN4base4spanIKhLm18446744073709551615EEES4_(%"class.crypto::HMAC"*, i64, i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6syncer20ComputeRotationProofERKNSt3__16vectorIhNS0_9allocatorIhEEEES6_(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.base::span", align 8
  %5 = bitcast %"class.std::__1::vector"* %2 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %9, %6
  %11 = bitcast %"class.std::__1::vector"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %15, %12
  %17 = inttoptr i64 %6 to i8*
  %18 = inttoptr i64 %12 to i8*
  %19 = bitcast %"class.base::span"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 16, i1 false)
  tail call void @_ZN6syncer25SecureBoxSymmetricEncryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.std::__1::vector"* sret %0, i64 %10, i8* %17, i64 %16, i8* %18, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %4) #6
  ret void
}

declare void @_ZN6syncer25SecureBoxSymmetricEncryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.std::__1::vector"* sret, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6syncer19VerifyRotationProofERKNSt3__16vectorIhNS0_9allocatorIhEEEES6_S6_(%"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24), %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 {
  %4 = alloca %"class.absl::optional", align 8
  %5 = alloca %"class.base::span", align 8
  %6 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #6
  %7 = bitcast %"class.std::__1::vector"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %10 = bitcast i8** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %11, %8
  %13 = bitcast %"class.std::__1::vector"* %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %16 = bitcast i8** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %14
  %19 = bitcast %"class.std::__1::vector"* %2 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %2, i64 0, i32 0, i32 1
  %22 = bitcast i8** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %23, %20
  %25 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 0, i32 0
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.base::span", %"class.base::span"* %5, i64 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %20, i64* %27, align 8
  %28 = inttoptr i64 %8 to i8*
  %29 = inttoptr i64 %14 to i8*
  call void @_ZN6syncer25SecureBoxSymmetricDecryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.absl::optional"* nonnull sret %4, i64 %12, i8* %28, i64 %18, i8* %29, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %5) #6
  %30 = load i8, i8* %6, align 8, !range !2
  %31 = icmp ne i8 %30, 0
  %32 = icmp eq i8 %30, 0
  br i1 %32, label %42, label %33

33:                                               ; preds = %3
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = icmp eq i8* %35, null
  br i1 %36, label %41, label %37

37:                                               ; preds = %33
  %38 = ptrtoint i8* %35 to i64
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %40 = bitcast i8** %39 to i64*
  store i64 %38, i64* %40, align 8
  call void @_ZdlPv(i8* nonnull %35) #7
  br label %41

41:                                               ; preds = %37, %33
  store i8 0, i8* %6, align 8
  br label %42

42:                                               ; preds = %3, %41
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #6
  ret i1 %31
}

declare void @_ZN6syncer25SecureBoxSymmetricDecryptEN4base4spanIKhLm18446744073709551615EEES3_S3_(%"class.absl::optional"* sret, i64, i8*, i64, i8*, %"class.base::span"* byval(%"class.base::span") align 8) local_unnamed_addr #1

declare zeroext i1 @_ZN6crypto4HMAC4InitEPKhm(%"class.crypto::HMAC"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
