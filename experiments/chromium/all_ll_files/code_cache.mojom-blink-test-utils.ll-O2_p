; ModuleID = 'gen/third_party/blink/public/mojom/loader/code_cache.mojom-blink-test-utils.cc'
source_filename = "gen/third_party/blink/public/mojom/loader/code_cache.mojom-blink-test-utils.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter" = type { %"class.blink::mojom::blink::CodeCacheHost"* }
%"class.blink::mojom::blink::CodeCacheHost" = type { i32 (...)** }
%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting" = type { %"class.blink::mojom::blink::CodeCacheHost" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.2", i64, %"class.absl::optional" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase", %"class.std::__1::unique_ptr.8" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { i8* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.12 }
%class.scoped_refptr.12 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.13" }
%"struct.std::__1::atomic.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl.16" }
%"struct.std::__1::__cxx_atomic_impl.16" = type { %"struct.std::__1::__cxx_atomic_base_impl.17" }
%"struct.std::__1::__cxx_atomic_base_impl.17" = type { i32 }
%class.scoped_refptr.18 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.19", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.18 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.38, %"class.base::WeakPtrFactory" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.31", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.33" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.scoped_refptr.38 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.39" }>
%"class.base::RefCountedThreadSafe.39" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.40 }
%class.scoped_refptr.40 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.41", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.41" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.42" }
%"struct.std::__1::atomic.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__atomic_base.44" }
%"struct.std::__1::__atomic_base.44" = type { %"struct.std::__1::__cxx_atomic_impl.45" }
%"struct.std::__1::__cxx_atomic_impl.45" = type { %"struct.std::__1::__cxx_atomic_base_impl.46" }
%"struct.std::__1::__cxx_atomic_base_impl.46" = type { i8 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }

$_ZN5blink5mojom5blink13CodeCacheHostD2Ev = comdat any

$_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTestingD0Ev = comdat any

@.str = private unnamed_addr constant [16 x i8] c"FetchCachedCode\00", align 1
@.str.1 = private unnamed_addr constant [79 x i8] c"gen/third_party/blink/public/mojom/loader/code_cache.mojom-blink-test-utils.cc\00", align 1
@_ZTVN5blink5mojom5blink34CodeCacheHostInterceptorForTestingE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHost"*)* @_ZN5blink5mojom5blink13CodeCacheHostD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)* @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTestingD0Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)* @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting28DidGenerateCacheableMetadataENS0_13CodeCacheTypeERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)* @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting15FetchCachedCodeENS0_13CodeCacheTypeERKNS_4KURLEN4base12OnceCallbackIFvNS7_4TimeEN9mojo_base9BigBufferEEEE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"*)* @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting19ClearCodeCacheEntryENS0_13CodeCacheTypeERKNS_4KURLE to i8*), i8* bitcast (void (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)* @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting42DidGenerateCacheableMetadataInCacheStorageERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferERK13scoped_refptrIKNS_14SecurityOriginEERKN3WTF6StringE to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8

@_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterC1EPNS1_13CodeCacheHostE = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"*, %"class.blink::mojom::blink::CodeCacheHost"*), void (%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"*, %"class.blink::mojom::blink::CodeCacheHost"*)* @_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterC2EPNS1_13CodeCacheHostE
@_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterD1Ev = hidden unnamed_addr alias void (%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"*), void (%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"*)* @_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting28DidGenerateCacheableMetadataENS0_13CodeCacheTypeERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferE(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"* dereferenceable(112), i64, %"class.mojo_base::BigBuffer"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo_base::BigBuffer", align 8
  %7 = bitcast %"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)***
  %8 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %8, i64 6
  %10 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %9, align 8
  %11 = tail call %"class.blink::mojom::blink::CodeCacheHost"* %10(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0) #10
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %6, %"class.mojo_base::BigBuffer"* dereferenceable(56) %4) #10
  %12 = bitcast %"class.blink::mojom::blink::CodeCacheHost"* %11 to void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)***
  %13 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)**, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)** %13, i64 2
  %15 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*)** %14, align 8
  call void %15(%"class.blink::mojom::blink::CodeCacheHost"* %11, i32 %1, %"class.blink::KURL"* dereferenceable(112) %2, i64 %3, %"class.mojo_base::BigBuffer"* nonnull %6) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %6) #10
  ret void
}

declare void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting15FetchCachedCodeENS0_13CodeCacheTypeERKNS_4KURLEN4base12OnceCallbackIFvNS7_4TimeEN9mojo_base9BigBufferEEEE(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"* dereferenceable(112), %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = bitcast %"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)***
  %7 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %7, i64 6
  %9 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %8, align 8
  %10 = tail call %"class.blink::mojom::blink::CodeCacheHost"* %9(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0) #10
  %11 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %13, i64* %14, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %11, align 8
  %15 = bitcast %"class.blink::mojom::blink::CodeCacheHost"* %10 to void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)***
  %16 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %16, i64 3
  %18 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %17, align 8
  call void %18(%"class.blink::mojom::blink::CodeCacheHost"* %10, i32 %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.base::OnceCallback"* nonnull %5) #10
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %19) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting19ClearCodeCacheEntryENS0_13CodeCacheTypeERKNS_4KURLE(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, i32, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)***
  %5 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*** %4, align 8
  %6 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %5, i64 6
  %7 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %6, align 8
  %8 = tail call %"class.blink::mojom::blink::CodeCacheHost"* %7(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0) #10
  %9 = bitcast %"class.blink::mojom::blink::CodeCacheHost"* %8 to void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)***
  %10 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)**, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)** %10, i64 4
  %12 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*)** %11, align 8
  tail call void %12(%"class.blink::mojom::blink::CodeCacheHost"* %8, i32 %1, %"class.blink::KURL"* dereferenceable(112) %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTesting42DidGenerateCacheableMetadataInCacheStorageERKNS_4KURLEN4base4TimeEN9mojo_base9BigBufferERK13scoped_refptrIKNS_14SecurityOriginEERKN3WTF6StringE(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*, %"class.blink::KURL"* dereferenceable(112), i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %7 = alloca %"class.mojo_base::BigBuffer", align 8
  %8 = bitcast %"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0 to %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)***
  %9 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)**, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %9, i64 6
  %11 = load %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)*, %"class.blink::mojom::blink::CodeCacheHost"* (%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*)** %10, align 8
  %12 = tail call %"class.blink::mojom::blink::CodeCacheHost"* %11(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"* %0) #10
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %7, %"class.mojo_base::BigBuffer"* dereferenceable(56) %3) #10
  %13 = bitcast %"class.blink::mojom::blink::CodeCacheHost"* %12 to void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)***
  %14 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)**, void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)** %14, i64 5
  %16 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::KURL"*, i64, %"class.mojo_base::BigBuffer"*, %class.scoped_refptr.18*, %"class.WTF::String"*)** %15, align 8
  call void %16(%"class.blink::mojom::blink::CodeCacheHost"* %12, %"class.blink::KURL"* dereferenceable(112) %1, i64 %2, %"class.mojo_base::BigBuffer"* nonnull %7, %class.scoped_refptr.18* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %7) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterC2EPNS1_13CodeCacheHostE(%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"* nocapture, %"class.blink::mojom::blink::CodeCacheHost"*) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHostAsyncWaiter", %"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"* %0, i64 0, i32 0
  store %"class.blink::mojom::blink::CodeCacheHost"* %1, %"class.blink::mojom::blink::CodeCacheHost"** %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiterD2Ev(%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS0_13CodeCacheTypeERKNS_4KURLEPN4base4TimeEPN9mojo_base9BigBufferE(%"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"* nocapture readonly, i32, %"class.blink::KURL"* dereferenceable(112), %"class.base::Time"*, %"class.mojo_base::BigBuffer"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::RunLoop", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = ptrtoint %"class.base::Time"* %3 to i64
  %10 = ptrtoint %"class.mojo_base::BigBuffer"* %4 to i64
  %11 = bitcast %"class.base::RunLoop"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %11) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 48, i1 false)
  call void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"* nonnull %6, i32 0) #10
  %12 = getelementptr inbounds %"class.blink::mojom::blink::CodeCacheHostAsyncWaiter", %"class.blink::mojom::blink::CodeCacheHostAsyncWaiter"* %0, i64 0, i32 0
  %13 = load %"class.blink::mojom::blink::CodeCacheHost"*, %"class.blink::mojom::blink::CodeCacheHost"** %12, align 8
  %14 = ptrtoint %"class.base::RunLoop"* %6 to i64
  %15 = call i8* @_Znwm(i64 64) #11, !noalias !2
  %16 = bitcast i8* %15 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %16, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, %"class.base::Time"*, %"class.mojo_base::BigBuffer"*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS4_13CodeCacheTypeERKNS3_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopESC_SF_EEEFvSB_SE_EE7RunOnceEPNS0_13BindStateBaseEOSB_OSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS3_13CodeCacheTypeERKNS2_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopESB_SE_EE7DestroyEPKNS0_13BindStateBaseE") #10, !noalias !2
  %17 = getelementptr inbounds i8, i8* %15, i64 40
  %18 = bitcast i8* %17 to i64*
  store i64 %14, i64* %18, align 8, !noalias !2
  %19 = getelementptr inbounds i8, i8* %15, i64 48
  %20 = bitcast i8* %19 to i64*
  store i64 %9, i64* %20, align 8, !noalias !2
  %21 = getelementptr inbounds i8, i8* %15, i64 56
  %22 = bitcast i8* %21 to i64*
  store i64 %10, i64* %22, align 8, !noalias !2
  %23 = bitcast %"class.base::OnceCallback"* %7 to i8**
  store i8* %15, i8** %23, align 8, !alias.scope !2
  %24 = bitcast %"class.blink::mojom::blink::CodeCacheHost"* %13 to void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)***
  %25 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)**, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %25, i64 3
  %27 = load void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)*, void (%"class.blink::mojom::blink::CodeCacheHost"*, i32, %"class.blink::KURL"*, %"class.base::OnceCallback"*)** %26, align 8
  call void %27(%"class.blink::mojom::blink::CodeCacheHost"* %13, i32 %1, %"class.blink::KURL"* dereferenceable(112) %2, %"class.base::OnceCallback"* nonnull %7) #10
  %28 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #10
  %29 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([79 x i8], [79 x i8]* @.str.1, i64 0, i64 0), i32 70) #10
  call void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"* nonnull %6, %"class.base::Location"* nonnull dereferenceable(32) %8) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #10
  call void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %11) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

declare void @_ZN4base7RunLoopC1ENS0_4TypeE(%"class.base::RunLoop"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare void @_ZN4base7RunLoop3RunERKNS_8LocationE(%"class.base::RunLoop"*, %"class.base::Location"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base7RunLoopD1Ev(%"class.base::RunLoop"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink13CodeCacheHostD2Ev(%"class.blink::mojom::blink::CodeCacheHost"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink34CodeCacheHostInterceptorForTestingD0Ev(%"class.blink::mojom::blink::CodeCacheHostInterceptorForTesting"*) unnamed_addr #6 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS4_13CodeCacheTypeERKNS3_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopESC_SF_EEEFvSB_SE_EE7RunOnceEPNS0_13BindStateBaseEOSB_OSE_"(%"class.base::internal::BindStateBase"* nocapture readonly, %"class.base::Time"* nocapture readonly dereferenceable(8), %"class.mojo_base::BigBuffer"* dereferenceable(56)) #0 align 2 {
  %4 = alloca %"class.mojo_base::BigBuffer", align 8
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %6 = bitcast void ()** %5 to %"class.base::RunLoop"**
  %7 = getelementptr inbounds void ()*, void ()** %5, i64 1
  %8 = bitcast void ()** %7 to %"class.base::Time"**
  %9 = getelementptr inbounds void ()*, void ()** %5, i64 2
  %10 = bitcast void ()** %9 to %"class.mojo_base::BigBuffer"**
  %11 = bitcast %"class.mojo_base::BigBuffer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %11) #10
  %12 = load %"class.base::RunLoop"*, %"class.base::RunLoop"** %6, align 8
  %13 = load %"class.base::Time"*, %"class.base::Time"** %8, align 8
  %14 = load %"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"** %10, align 8
  %15 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %1, i64 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  call void @_ZN9mojo_base9BigBufferC1EOS0_(%"class.mojo_base::BigBuffer"* nonnull %4, %"class.mojo_base::BigBuffer"* dereferenceable(56) %2) #10
  %17 = getelementptr inbounds %"class.base::Time", %"class.base::Time"* %13, i64 0, i32 0, i32 0
  store i64 %16, i64* %17, align 8
  %18 = call dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"* %14, %"class.mojo_base::BigBuffer"* nonnull dereferenceable(56) %4) #10
  call void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"* %12) #10
  call void @_ZN9mojo_base9BigBufferD1Ev(%"class.mojo_base::BigBuffer"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %11) #10
  ret void
}

declare dereferenceable(56) %"class.mojo_base::BigBuffer"* @_ZN9mojo_base9BigBufferaSEOS0_(%"class.mojo_base::BigBuffer"*, %"class.mojo_base::BigBuffer"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN4base7RunLoop4QuitEv(%"class.base::RunLoop"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS3_13CodeCacheTypeERKNS2_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopESB_SE_EE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS4_13CodeCacheTypeERKNS3_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopERSC_RSF_EEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS4_13CodeCacheTypeERKNS3_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopERSC_RSF_EEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS2_13CodeCacheTypeERKNS1_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopERSA_RSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIZN5blink5mojom5blink24CodeCacheHostAsyncWaiter15FetchCachedCodeENS2_13CodeCacheTypeERKNS1_4KURLEPNS_4TimeEPN9mojo_base9BigBufferEE3$_0JPNS_7RunLoopERSA_RSD_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSM_DpOSN_"}
