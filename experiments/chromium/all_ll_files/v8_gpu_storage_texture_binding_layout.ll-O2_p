; ModuleID = 'gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_storage_texture_binding_layout.cc'
source_filename = "gen/third_party/blink/renderer/bindings/modules/v8/v8_gpu_storage_texture_binding_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.76", i32, [4 x i8], %"class.std::__1::unique_ptr.212", %"class.std::__1::unique_ptr.212", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.246", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.253", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.76" = type { %"class.std::__1::__compressed_pair.77" }
%"class.std::__1::__compressed_pair.77" = type { %"struct.std::__1::__compressed_pair_elem.78" }
%"struct.std::__1::__compressed_pair_elem.78" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.79", %"class.std::__1::unique_ptr.85", %"class.std::__1::unique_ptr.91", %"class.std::__1::unique_ptr.97", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.109", %"class.std::__1::unique_ptr.120", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.127", %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.141", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.155", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.169", %"class.std::__1::unique_ptr.192", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.79" = type { %"class.std::__1::__compressed_pair.80" }
%"class.std::__1::__compressed_pair.80" = type { %"struct.std::__1::__compressed_pair_elem.81" }
%"struct.std::__1::__compressed_pair_elem.81" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.85" = type { %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.91" = type { %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, {}* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.112" = type { %"struct.std::__1::__atomic_base.113" }
%"struct.std::__1::__atomic_base.113" = type { %"struct.std::__1::__atomic_base.114" }
%"struct.std::__1::__atomic_base.114" = type { %"struct.std::__1::__cxx_atomic_impl.115" }
%"struct.std::__1::__cxx_atomic_impl.115" = type { %"struct.std::__1::__cxx_atomic_base_impl.116" }
%"struct.std::__1::__cxx_atomic_base_impl.116" = type { i64 }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::Worklist.123"* }
%"class.blink::Worklist.123" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.127" = type { %"class.std::__1::__compressed_pair.128" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.129" }
%"struct.std::__1::__compressed_pair_elem.129" = type { %"class.blink::Worklist.130"* }
%"class.blink::Worklist.130" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::Worklist.137"* }
%"class.blink::Worklist.137" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.141" = type { %"class.std::__1::__compressed_pair.142" }
%"class.std::__1::__compressed_pair.142" = type { %"struct.std::__1::__compressed_pair_elem.143" }
%"struct.std::__1::__compressed_pair_elem.143" = type { %"class.blink::Worklist.144"* }
%"class.blink::Worklist.144" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::Worklist.151"* }
%"class.blink::Worklist.151" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"class.blink::Worklist.158"* }
%"class.blink::Worklist.158" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::Worklist.165"* }
%"class.blink::Worklist.165" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.112" }
%"class.std::__1::unique_ptr.169" = type { %"class.std::__1::__compressed_pair.170" }
%"class.std::__1::__compressed_pair.170" = type { %"struct.std::__1::__compressed_pair_elem.171" }
%"struct.std::__1::__compressed_pair_elem.171" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.172", %"class.std::__1::__compressed_pair.179", %"class.std::__1::__compressed_pair.184", %"class.std::__1::__compressed_pair.186", [4 x i8] }>
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174", %"struct.std::__1::__compressed_pair_elem.175" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.175" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.176" }
%"class.std::__1::__compressed_pair.176" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"struct.std::__1::__compressed_pair_elem.177" = type { i64 }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.177" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { float }
%"class.std::__1::unique_ptr.192" = type { %"class.std::__1::__compressed_pair.193" }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.195", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.204" }
%"class.WTF::Vector.204" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.212" = type { %"class.std::__1::__compressed_pair.213" }
%"class.std::__1::__compressed_pair.213" = type { %"struct.std::__1::__compressed_pair_elem.214" }
%"struct.std::__1::__compressed_pair_elem.214" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.220" }
%"class.WTF::VectorBuffer.220" = type { %"class.WTF::VectorBufferBase.221" }
%"class.WTF::VectorBufferBase.221" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.234" }
%"class.std::__1::unique_ptr.234" = type { %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.123"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.130"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.137"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.144"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.151"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.284" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.246" = type { %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.248" }
%"struct.std::__1::__compressed_pair_elem.248" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.252 }
%class.scoped_refptr.252 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.253" = type { %"struct.std::__1::__atomic_base.254" }
%"struct.std::__1::__atomic_base.254" = type { %"struct.std::__1::__cxx_atomic_impl.255" }
%"struct.std::__1::__cxx_atomic_impl.255" = type { %"struct.std::__1::__cxx_atomic_base_impl.256" }
%"struct.std::__1::__cxx_atomic_base_impl.256" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.v8::Value" = type { i8 }
%"class.blink::GPUStorageTextureBindingLayout" = type { %"class.blink::IDLDictionaryBase", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::IDLDictionaryBase" = type { i32 (...)** }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"class.v8::internal::Isolate" = type opaque
%"class.blink::V8StringResource" = type { %"class.v8::Local", i32, %"class.WTF::String", %"class.WTF::StringView::StackBackingStore" }
%"class.v8::Local" = type { %"class.v8::Value"* }
%"class.WTF::StringView::StackBackingStore" = type { [64 x i16], %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i8* }
%"class.v8::Object" = type { i8 }
%"class.blink::V8PerIsolateData" = type { i32, %"class.gin::IsolateHolder", %"class.WTF::HashMap", %"class.WTF::HashMap", %"class.WTF::HashMap.23", %"class.std::__1::unique_ptr.28", %"class.std::__1::unique_ptr.70", %"class.blink::Persistent", i8, i8, i8, %"class.WTF::Vector.257", %"class.std::__1::unique_ptr.262", %"class.blink::Persistent.268", %"class.blink::Persistent.272", %"class.blink::RuntimeCallStats", void (%"class.v8::Isolate"*, i32, i32)*, void (%"class.v8::Isolate"*, i32, i32)*, i64 }
%"class.gin::IsolateHolder" = type { %"class.std::__1::unique_ptr.7", %"class.v8::Isolate"*, %"class.std::__1::unique_ptr.11", %"class.std::__1::unique_ptr.17", i32, i32 }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"class.v8::SnapshotCreator"* }
%"class.v8::SnapshotCreator" = type { i8* }
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { %"class.gin::PerIsolateData"* }
%"class.gin::PerIsolateData" = type opaque
%"class.std::__1::unique_ptr.17" = type { %"class.std::__1::__compressed_pair.18" }
%"class.std::__1::__compressed_pair.18" = type { %"struct.std::__1::__compressed_pair_elem.19" }
%"struct.std::__1::__compressed_pair_elem.19" = type { %"class.gin::V8IsolateMemoryDumpProvider"* }
%"class.gin::V8IsolateMemoryDumpProvider" = type opaque
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::HashMap.23" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair.27"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.27" = type opaque
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.blink::StringCache"* }
%"class.blink::StringCache" = type { %"class.v8::GlobalValueMap", %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference", %"class.v8::GlobalValueMap.36", %class.scoped_refptr }
%"class.v8::GlobalValueMap" = type { %"class.v8::PersistentValueMapBase" }
%"class.v8::PersistentValueMapBase" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.31", i8* }
%"class.WTF::HashMap.31" = type { %"class.WTF::HashTable.32" }
%"class.WTF::HashTable.32" = type <{ %"struct.WTF::KeyValuePair.35"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.35" = type { %"class.WTF::StringImpl"*, i64 }
%"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference" = type { i64 }
%"class.v8::GlobalValueMap.36" = type { %"class.v8::PersistentValueMapBase.37" }
%"class.v8::PersistentValueMapBase.37" = type { %"class.v8::Isolate"*, %"class.WTF::HashMap.38", i8* }
%"class.WTF::HashMap.38" = type { %"class.WTF::HashTable.39" }
%"class.WTF::HashTable.39" = type <{ %"struct.WTF::KeyValuePair.42"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.42" = type { %"class.blink::ParkableStringImpl"*, i64 }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr.43" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.46", %"class.std::__1::unique_ptr.54", %"class.WTF::Vector.60", i8, i32 }
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.60" = type { %"class.WTF::VectorBuffer.61" }
%"class.WTF::VectorBuffer.61" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.std::__1::unique_ptr.70" = type { %"class.std::__1::__compressed_pair.71" }
%"class.std::__1::__compressed_pair.71" = type { %"struct.std::__1::__compressed_pair_elem.72" }
%"struct.std::__1::__compressed_pair_elem.72" = type { %"class.blink::V8PrivateProperty"* }
%"class.blink::V8PrivateProperty" = type opaque
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.291, %"class.blink::Member.310", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.291 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.292", i32, i32, %"class.blink::Persistent.294" }
%"class.WTF::RefCounted.292" = type { %"class.base::RefCounted.293" }
%"class.base::RefCounted.293" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.294" = type { %"class.blink::PersistentBase.295" }
%"class.blink::PersistentBase.295" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.300" }
%"class.WTF::HashMap.300" = type { %"class.WTF::HashTable.301" }
%"class.WTF::HashTable.301" = type <{ %"struct.WTF::KeyValuePair.303"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.303" = type { %"class.blink::WeakMember", %"class.blink::TraceWrapperV8Reference.307" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.304" }
%"class.blink::MemberBase.304" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.307" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.307" = type { %"class.v8::TracedReference.308" }
%"class.v8::TracedReference.308" = type { %"class.v8::BasicTracedReference.309" }
%"class.v8::BasicTracedReference.309" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::Member.310" = type { %"class.blink::MemberBase.311" }
%"class.blink::MemberBase.311" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.WTF::Vector.257" = type { %"class.WTF::VectorBuffer.258" }
%"class.WTF::VectorBuffer.258" = type { %"class.WTF::VectorBufferBase.259" }
%"class.WTF::VectorBufferBase.259" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type opaque
%"class.std::__1::unique_ptr.262" = type { %"class.std::__1::__compressed_pair.263" }
%"class.std::__1::__compressed_pair.263" = type { %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.blink::V8PerIsolateData::Data"* }
%"class.blink::V8PerIsolateData::Data" = type { i32 (...)** }
%"class.blink::Persistent.268" = type { %"class.blink::PersistentBase.269" }
%"class.blink::PersistentBase.269" = type { %"class.blink::V8PerIsolateData::GarbageCollectedData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::V8PerIsolateData::GarbageCollectedData" = type { i32 (...)** }
%"class.blink::Persistent.272" = type { %"class.blink::PersistentBase.273" }
%"class.blink::PersistentBase.273" = type { %"class.blink::ActiveScriptWrappableManager"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ActiveScriptWrappableManager" = type { %"class.blink::HeapVector", i64 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.278" }
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { %"struct.std::__1::pair.281"*, i32, i32 }
%"struct.std::__1::pair.281" = type { %"class.blink::UntracedMember", %"class.blink::Member" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.282" }
%"class.blink::MemberBase.282" = type { %"class.blink::ActiveScriptWrappableBase"* }
%"class.blink::RuntimeCallStats" = type { %"class.blink::RuntimeCallTimer"*, i8, [40 x %"class.blink::RuntimeCallCounter"], %"class.base::TickClock"* }
%"class.blink::RuntimeCallTimer" = type { %"class.blink::RuntimeCallCounter"*, %"class.blink::RuntimeCallTimer"*, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TickClock"* }
%"class.blink::RuntimeCallCounter" = type { i64, %"class.base::TimeDelta", i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type opaque
%"class.v8::Eternal" = type { %"class.v8::Name"* }
%"class.v8::Name" = type { i8 }
%"class.base::span.312" = type { %"struct.base::internal::ExtentStorage", i8** }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.v8::String" = type { i8 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.334" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.335" }
%"struct.std::__1::__compressed_pair_elem.335" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.v8::Int32" = type { i8 }

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE = comdat any

$_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv = comdat any

$_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [44 x i8] c"Missing required member(s): access, format.\00", align 1
@.str.1 = private unnamed_addr constant [30 x i8] c"cannot convert to dictionary.\00", align 1
@.str.2 = private unnamed_addr constant [37 x i8] c"required member access is undefined.\00", align 1
@_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues = internal constant [2 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [10 x i8] c"read-only\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"write-only\00", align 1
@.str.5 = private unnamed_addr constant [24 x i8] c"GPUStorageTextureAccess\00", align 1
@.str.6 = private unnamed_addr constant [37 x i8] c"required member format is undefined.\00", align 1
@_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues_0 = internal constant [53 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.8, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.10, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.11, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.12, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.13, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.15, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.16, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.17, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.18, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.19, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.20, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.22, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.23, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.24, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.25, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.26, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.27, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.28, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.29, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.30, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.31, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.32, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.33, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.34, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.36, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.37, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.38, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.39, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.40, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.41, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.42, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.43, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.44, i32 0, i32 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.45, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.46, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.47, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.48, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.49, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.50, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.51, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.52, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.53, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.54, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.55, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.56, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.57, i32 0, i32 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.58, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.59, i32 0, i32 0)], align 16
@.str.7 = private unnamed_addr constant [8 x i8] c"r8unorm\00", align 1
@.str.8 = private unnamed_addr constant [8 x i8] c"r8snorm\00", align 1
@.str.9 = private unnamed_addr constant [7 x i8] c"r8uint\00", align 1
@.str.10 = private unnamed_addr constant [7 x i8] c"r8sint\00", align 1
@.str.11 = private unnamed_addr constant [8 x i8] c"r16uint\00", align 1
@.str.12 = private unnamed_addr constant [8 x i8] c"r16sint\00", align 1
@.str.13 = private unnamed_addr constant [9 x i8] c"r16float\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"rg8unorm\00", align 1
@.str.15 = private unnamed_addr constant [9 x i8] c"rg8snorm\00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"rg8uint\00", align 1
@.str.17 = private unnamed_addr constant [8 x i8] c"rg8sint\00", align 1
@.str.18 = private unnamed_addr constant [8 x i8] c"r32uint\00", align 1
@.str.19 = private unnamed_addr constant [8 x i8] c"r32sint\00", align 1
@.str.20 = private unnamed_addr constant [9 x i8] c"r32float\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"rg16uint\00", align 1
@.str.22 = private unnamed_addr constant [9 x i8] c"rg16sint\00", align 1
@.str.23 = private unnamed_addr constant [10 x i8] c"rg16float\00", align 1
@.str.24 = private unnamed_addr constant [11 x i8] c"rgba8unorm\00", align 1
@.str.25 = private unnamed_addr constant [16 x i8] c"rgba8unorm-srgb\00", align 1
@.str.26 = private unnamed_addr constant [11 x i8] c"rgba8snorm\00", align 1
@.str.27 = private unnamed_addr constant [10 x i8] c"rgba8uint\00", align 1
@.str.28 = private unnamed_addr constant [10 x i8] c"rgba8sint\00", align 1
@.str.29 = private unnamed_addr constant [11 x i8] c"bgra8unorm\00", align 1
@.str.30 = private unnamed_addr constant [16 x i8] c"bgra8unorm-srgb\00", align 1
@.str.31 = private unnamed_addr constant [13 x i8] c"rgb9e5ufloat\00", align 1
@.str.32 = private unnamed_addr constant [13 x i8] c"rgb10a2unorm\00", align 1
@.str.33 = private unnamed_addr constant [14 x i8] c"rg11b10ufloat\00", align 1
@.str.34 = private unnamed_addr constant [9 x i8] c"rg32uint\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"rg32sint\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"rg32float\00", align 1
@.str.37 = private unnamed_addr constant [11 x i8] c"rgba16uint\00", align 1
@.str.38 = private unnamed_addr constant [11 x i8] c"rgba16sint\00", align 1
@.str.39 = private unnamed_addr constant [12 x i8] c"rgba16float\00", align 1
@.str.40 = private unnamed_addr constant [11 x i8] c"rgba32uint\00", align 1
@.str.41 = private unnamed_addr constant [11 x i8] c"rgba32sint\00", align 1
@.str.42 = private unnamed_addr constant [12 x i8] c"rgba32float\00", align 1
@.str.43 = private unnamed_addr constant [13 x i8] c"depth32float\00", align 1
@.str.44 = private unnamed_addr constant [12 x i8] c"depth24plus\00", align 1
@.str.45 = private unnamed_addr constant [21 x i8] c"depth24plus-stencil8\00", align 1
@.str.46 = private unnamed_addr constant [15 x i8] c"bc1-rgba-unorm\00", align 1
@.str.47 = private unnamed_addr constant [20 x i8] c"bc1-rgba-unorm-srgb\00", align 1
@.str.48 = private unnamed_addr constant [15 x i8] c"bc2-rgba-unorm\00", align 1
@.str.49 = private unnamed_addr constant [20 x i8] c"bc2-rgba-unorm-srgb\00", align 1
@.str.50 = private unnamed_addr constant [15 x i8] c"bc3-rgba-unorm\00", align 1
@.str.51 = private unnamed_addr constant [20 x i8] c"bc3-rgba-unorm-srgb\00", align 1
@.str.52 = private unnamed_addr constant [12 x i8] c"bc4-r-unorm\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"bc4-r-snorm\00", align 1
@.str.54 = private unnamed_addr constant [13 x i8] c"bc5-rg-unorm\00", align 1
@.str.55 = private unnamed_addr constant [13 x i8] c"bc5-rg-snorm\00", align 1
@.str.56 = private unnamed_addr constant [16 x i8] c"bc6h-rgb-ufloat\00", align 1
@.str.57 = private unnamed_addr constant [15 x i8] c"bc6h-rgb-float\00", align 1
@.str.58 = private unnamed_addr constant [15 x i8] c"bc7-rgba-unorm\00", align 1
@.str.59 = private unnamed_addr constant [20 x i8] c"bc7-rgba-unorm-srgb\00", align 1
@.str.60 = private unnamed_addr constant [17 x i8] c"GPUTextureFormat\00", align 1
@_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues_1 = internal constant [6 x i8*] [i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.61, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.63, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.64, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.65, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.66, i32 0, i32 0)], align 16
@.str.61 = private unnamed_addr constant [3 x i8] c"1d\00", align 1
@.str.62 = private unnamed_addr constant [3 x i8] c"2d\00", align 1
@.str.63 = private unnamed_addr constant [9 x i8] c"2d-array\00", align 1
@.str.64 = private unnamed_addr constant [5 x i8] c"cube\00", align 1
@.str.65 = private unnamed_addr constant [11 x i8] c"cube-array\00", align 1
@.str.66 = private unnamed_addr constant [3 x i8] c"3d\00", align 1
@.str.67 = private unnamed_addr constant [24 x i8] c"GPUTextureViewDimension\00", align 1
@_ZZN5blinkL43eternalV8GPUStorageTextureBindingLayoutKeysEPN2v87IsolateEE5kKeys = internal constant [3 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.68, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.70, i32 0, i32 0)], align 16
@.str.68 = private unnamed_addr constant [7 x i8] c"access\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"format\00", align 1
@.str.70 = private unnamed_addr constant [14 x i8] c"viewDimension\00", align 1
@.ref.tmp = private constant { i64, i8** } { i64 3, i8** getelementptr inbounds ([3 x i8*], [3 x i8*]* @_ZZN5blinkL43eternalV8GPUStorageTextureBindingLayoutKeysEPN2v87IsolateEE5kKeys, i32 0, i32 0) }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.71 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.72 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.73 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::GPUStorageTextureBindingLayout"* nocapture, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::TryCatch", align 8
  %6 = alloca %"class.blink::V8StringResource", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.blink::V8StringResource", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::V8StringResource", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = icmp eq %"class.v8::Value"* %1, null
  br i1 %15, label %37, label %16

16:                                               ; preds = %4
  %17 = bitcast %"class.v8::Value"* %1 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 3
  %20 = icmp eq i64 %19, 1
  br i1 %20, label %21, label %38

21:                                               ; preds = %16
  %22 = add i64 %18, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load i32, i32* %23, align 4
  %25 = and i64 %18, -4294967296
  %26 = zext i32 %24 to i64
  %27 = or i64 %25, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load i16, i16* %29, align 2
  %31 = icmp eq i16 %30, 67
  br i1 %31, label %32, label %38

32:                                               ; preds = %21
  %33 = add i64 %18, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = ashr i32 %35, 1
  switch i32 %36, label %38 [
    i32 5, label %37
    i32 3, label %37
  ]

37:                                               ; preds = %32, %32, %4
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #7
  br label %770

38:                                               ; preds = %32, %21, %16
  %39 = tail call zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"* nonnull %1) #7
  br i1 %39, label %41, label %40

40:                                               ; preds = %38
  tail call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.1, i64 0, i64 0)) #7
  br label %770

41:                                               ; preds = %38
  %42 = bitcast %"class.v8::Value"* %1 to %"class.v8::Object"*
  %43 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %44 = add i64 %43, 8
  %45 = inttoptr i64 %44 to %"class.blink::V8PerIsolateData"**
  %46 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %45, align 8
  %47 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %46, i8* bitcast ([3 x i8*]* @_ZZN5blinkL43eternalV8GPUStorageTextureBindingLayoutKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.312"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.312"*)) #7
  %48 = extractvalue { i64, %"class.v8::Eternal"* } %47, 1
  %49 = bitcast %"class.v8::TryCatch"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %49) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 48, i1 false)
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %5, %"class.v8::Isolate"* %0) #7
  %50 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %0) #7
  %51 = bitcast %"class.v8::Eternal"* %48 to %"class.v8::Value"**
  %52 = load %"class.v8::Value"*, %"class.v8::Value"** %51, align 8
  %53 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %52) #7
  %54 = icmp eq %"class.v8::Value"* %53, null
  br i1 %54, label %55, label %61

55:                                               ; preds = %41
  %56 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %57 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %58 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %58, i64 5
  %60 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %59, align 8
  call void %60(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %56) #7
  br label %769

61:                                               ; preds = %41
  %62 = bitcast %"class.v8::Value"* %53 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = and i64 %63, 3
  %65 = icmp eq i64 %64, 1
  br i1 %65, label %66, label %84

66:                                               ; preds = %61
  %67 = add i64 %63, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load i32, i32* %68, align 4
  %70 = and i64 %63, -4294967296
  %71 = zext i32 %69 to i64
  %72 = or i64 %70, %71
  %73 = add i64 %72, 7
  %74 = inttoptr i64 %73 to i16*
  %75 = load i16, i16* %74, align 2
  %76 = icmp eq i16 %75, 67
  br i1 %76, label %77, label %84

77:                                               ; preds = %66
  %78 = add i64 %63, 23
  %79 = inttoptr i64 %78 to i32*
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, -2
  %82 = icmp eq i32 %81, 10
  br i1 %82, label %83, label %84

83:                                               ; preds = %77
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.2, i64 0, i64 0)) #7
  br label %769

84:                                               ; preds = %66, %61, %77
  %85 = bitcast %"class.blink::V8StringResource"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %85) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -86, i64 152, i1 false)
  %86 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %53, %"class.v8::Value"** %86, align 8
  %87 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 1
  store i32 0, i32* %87, align 8
  %88 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1
  %90 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 0, i64* %90, align 8
  %91 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %6, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %91, label %92, label %273

92:                                               ; preds = %84
  %93 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #7
  %94 = load %"class.v8::Value"*, %"class.v8::Value"** %86, align 8
  %95 = icmp eq %"class.v8::Value"* %94, null
  br i1 %95, label %100, label %96, !prof !2

96:                                               ; preds = %92
  %97 = bitcast %"class.v8::Value"* %94 to %"class.v8::String"*
  %98 = load i32, i32* %87, align 8
  %99 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %97, i32 %98) #7
  br label %120

100:                                              ; preds = %92
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %120, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %120

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i33
  %112 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %111, i33 1) #7
  %113 = extractvalue { i33, i1 } %112, 1
  %114 = extractvalue { i33, i1 } %112, 0
  %115 = icmp slt i33 %114, 0
  %116 = or i1 %113, %115
  br i1 %116, label %117, label %118, !prof !2

117:                                              ; preds = %108
  call void @llvm.trap() #7
  unreachable

118:                                              ; preds = %108
  %119 = trunc i33 %114 to i32
  store i32 %119, i32* %109, align 4
  br label %120

120:                                              ; preds = %96, %100, %103, %118
  %121 = phi %"class.WTF::StringImpl"* [ %99, %96 ], [ null, %100 ], [ %101, %103 ], [ %101, %118 ]
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %122, align 8
  %123 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.5, i64 0, i64 0), i64 23) #7
  %124 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %7, i8** getelementptr inbounds ([2 x i8*], [2 x i8*]* @_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues, i64 0, i64 0), i64 2, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %120
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #7
  br label %141

141:                                              ; preds = %120, %137, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #7
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %143 = icmp eq %"class.WTF::StringImpl"* %142, null
  br i1 %143, label %157, label %144

144:                                              ; preds = %141
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %142, i64 0, i32 0
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %144
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %144
  %154 = phi i32 [ %152, %151 ], [ %150, %144 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %142) #7
  br label %157

157:                                              ; preds = %141, %153, %156
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %93) #7
  br i1 %124, label %158, label %273

158:                                              ; preds = %157
  %159 = load %"class.v8::Value"*, %"class.v8::Value"** %86, align 8
  %160 = icmp eq %"class.v8::Value"* %159, null
  br i1 %160, label %161, label %185, !prof !2

161:                                              ; preds = %158
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %164, label %166

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 1
  br label %210

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %183

171:                                              ; preds = %166
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  %174 = zext i32 %173 to i33
  %175 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %174, i33 1) #7
  %176 = extractvalue { i33, i1 } %175, 1
  %177 = extractvalue { i33, i1 } %175, 0
  %178 = icmp slt i33 %177, 0
  %179 = or i1 %176, %178
  br i1 %179, label %180, label %181, !prof !2

180:                                              ; preds = %171
  call void @llvm.trap() #7
  unreachable

181:                                              ; preds = %171
  %182 = trunc i33 %177 to i32
  store i32 %182, i32* %172, align 4
  br label %183

183:                                              ; preds = %166, %181
  %184 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 1
  br label %191

185:                                              ; preds = %158
  %186 = bitcast %"class.v8::Value"* %159 to %"class.v8::String"*
  %187 = load i32, i32* %87, align 8
  %188 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %186, i32 %187) #7
  %189 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 1
  %190 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %190, label %210, label %191

191:                                              ; preds = %183, %185
  %192 = phi %"class.WTF::String"* [ %184, %183 ], [ %189, %185 ]
  %193 = phi %"class.WTF::StringImpl"* [ %162, %183 ], [ %188, %185 ]
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load atomic i32, i32* %194 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %210

198:                                              ; preds = %191
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %193, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  %201 = zext i32 %200 to i33
  %202 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %201, i33 1) #7
  %203 = extractvalue { i33, i1 } %202, 1
  %204 = extractvalue { i33, i1 } %202, 0
  %205 = icmp slt i33 %204, 0
  %206 = or i1 %203, %205
  br i1 %206, label %207, label %208, !prof !2

207:                                              ; preds = %198
  call void @llvm.trap() #7
  unreachable

208:                                              ; preds = %198
  %209 = trunc i33 %204 to i32
  store i32 %209, i32* %199, align 4
  br label %210

210:                                              ; preds = %164, %208, %191, %185
  %211 = phi i1 [ false, %208 ], [ false, %191 ], [ true, %185 ], [ true, %164 ]
  %212 = phi %"class.WTF::String"* [ %192, %208 ], [ %192, %191 ], [ %189, %185 ], [ %165, %164 ]
  %213 = phi %"class.WTF::StringImpl"* [ %193, %208 ], [ %193, %191 ], [ null, %185 ], [ null, %164 ]
  %214 = ptrtoint %"class.WTF::StringImpl"* %213 to i64
  %215 = bitcast %"class.WTF::String"* %212 to i64*
  %216 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %212, i64 0, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  store i64 %214, i64* %215, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #7
  br label %232

232:                                              ; preds = %210, %228, %231
  br i1 %211, label %246, label %233

233:                                              ; preds = %232
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %246

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #7
  br label %246

246:                                              ; preds = %232, %242, %245
  %247 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %248 = load i8*, i8** %247, align 8
  store i8* null, i8** %247, align 8
  %249 = icmp eq i8* %248, null
  br i1 %249, label %251, label %250

250:                                              ; preds = %246
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %248) #7
  br label %251

251:                                              ; preds = %250, %246
  %252 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %267, label %254

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %263

261:                                              ; preds = %254
  %262 = add i32 %260, -1
  store i32 %262, i32* %259, align 4
  br label %263

263:                                              ; preds = %261, %254
  %264 = phi i32 [ %262, %261 ], [ %260, %254 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %267

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #7
  br label %267

267:                                              ; preds = %251, %263, %266
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %85) #7
  %268 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 1, i32 0
  %269 = bitcast %"class.v8::Name"** %268 to %"class.v8::Value"**
  %270 = load %"class.v8::Value"*, %"class.v8::Value"** %269, align 8
  %271 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %270) #7
  %272 = icmp eq %"class.v8::Value"* %271, null
  br i1 %272, label %295, label %301

273:                                              ; preds = %157, %84
  %274 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %6, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %275 = load i8*, i8** %274, align 8
  store i8* null, i8** %274, align 8
  %276 = icmp eq i8* %275, null
  br i1 %276, label %278, label %277

277:                                              ; preds = %273
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %275) #7
  br label %278

278:                                              ; preds = %277, %273
  %279 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %280 = icmp eq %"class.WTF::StringImpl"* %279, null
  br i1 %280, label %294, label %281

281:                                              ; preds = %278
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %283 = load atomic i32, i32* %282 monotonic, align 4
  %284 = and i32 %283, 2
  %285 = icmp eq i32 %284, 0
  %286 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %279, i64 0, i32 0
  %287 = load i32, i32* %286, align 4
  br i1 %285, label %288, label %290

288:                                              ; preds = %281
  %289 = add i32 %287, -1
  store i32 %289, i32* %286, align 4
  br label %290

290:                                              ; preds = %288, %281
  %291 = phi i32 [ %289, %288 ], [ %287, %281 ]
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %293, label %294

293:                                              ; preds = %290
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %279) #7
  br label %294

294:                                              ; preds = %278, %290, %293
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %85) #7
  br label %769

295:                                              ; preds = %267
  %296 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %297 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %298 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %297, align 8
  %299 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %298, i64 5
  %300 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %299, align 8
  call void %300(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %296) #7
  br label %769

301:                                              ; preds = %267
  %302 = bitcast %"class.v8::Value"* %271 to i64*
  %303 = load i64, i64* %302, align 8
  %304 = and i64 %303, 3
  %305 = icmp eq i64 %304, 1
  br i1 %305, label %306, label %324

306:                                              ; preds = %301
  %307 = add i64 %303, -1
  %308 = inttoptr i64 %307 to i32*
  %309 = load i32, i32* %308, align 4
  %310 = and i64 %303, -4294967296
  %311 = zext i32 %309 to i64
  %312 = or i64 %310, %311
  %313 = add i64 %312, 7
  %314 = inttoptr i64 %313 to i16*
  %315 = load i16, i16* %314, align 2
  %316 = icmp eq i16 %315, 67
  br i1 %316, label %317, label %324

317:                                              ; preds = %306
  %318 = add i64 %303, 23
  %319 = inttoptr i64 %318 to i32*
  %320 = load i32, i32* %319, align 4
  %321 = and i32 %320, -2
  %322 = icmp eq i32 %321, 10
  br i1 %322, label %323, label %324

323:                                              ; preds = %317
  call void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"* %3, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.6, i64 0, i64 0)) #7
  br label %769

324:                                              ; preds = %306, %301, %317
  %325 = bitcast %"class.blink::V8StringResource"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %325) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %325, i8 -86, i64 152, i1 false)
  %326 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %271, %"class.v8::Value"** %326, align 8
  %327 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 1
  store i32 0, i32* %327, align 8
  %328 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %328, align 8
  %329 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1
  %330 = bitcast %"class.std::__1::unique_ptr"* %329 to i64*
  store i64 0, i64* %330, align 8
  %331 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %9, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %331, label %332, label %513

332:                                              ; preds = %324
  %333 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %333) #7
  %334 = load %"class.v8::Value"*, %"class.v8::Value"** %326, align 8
  %335 = icmp eq %"class.v8::Value"* %334, null
  br i1 %335, label %340, label %336, !prof !2

336:                                              ; preds = %332
  %337 = bitcast %"class.v8::Value"* %334 to %"class.v8::String"*
  %338 = load i32, i32* %327, align 8
  %339 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %337, i32 %338) #7
  br label %360

340:                                              ; preds = %332
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %360, label %343

343:                                              ; preds = %340
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %360

348:                                              ; preds = %343
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i33
  %352 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %351, i33 1) #7
  %353 = extractvalue { i33, i1 } %352, 1
  %354 = extractvalue { i33, i1 } %352, 0
  %355 = icmp slt i33 %354, 0
  %356 = or i1 %353, %355
  br i1 %356, label %357, label %358, !prof !2

357:                                              ; preds = %348
  call void @llvm.trap() #7
  unreachable

358:                                              ; preds = %348
  %359 = trunc i33 %354 to i32
  store i32 %359, i32* %349, align 4
  br label %360

360:                                              ; preds = %336, %340, %343, %358
  %361 = phi %"class.WTF::StringImpl"* [ %339, %336 ], [ null, %340 ], [ %341, %343 ], [ %341, %358 ]
  %362 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %361, %"class.WTF::StringImpl"** %362, align 8
  %363 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %363) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.60, i64 0, i64 0), i64 16) #7
  %364 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %10, i8** getelementptr inbounds ([53 x i8*], [53 x i8*]* @_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues_0, i64 0, i64 0), i64 53, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %365 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %366 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %365, align 8
  %367 = icmp eq %"class.WTF::StringImpl"* %366, null
  br i1 %367, label %381, label %368

368:                                              ; preds = %360
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %370 = load atomic i32, i32* %369 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %366, i64 0, i32 0
  %374 = load i32, i32* %373, align 4
  br i1 %372, label %375, label %377

375:                                              ; preds = %368
  %376 = add i32 %374, -1
  store i32 %376, i32* %373, align 4
  br label %377

377:                                              ; preds = %375, %368
  %378 = phi i32 [ %376, %375 ], [ %374, %368 ]
  %379 = icmp eq i32 %378, 0
  br i1 %379, label %380, label %381

380:                                              ; preds = %377
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %366) #7
  br label %381

381:                                              ; preds = %360, %377, %380
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %363) #7
  %382 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %362, align 8
  %383 = icmp eq %"class.WTF::StringImpl"* %382, null
  br i1 %383, label %397, label %384

384:                                              ; preds = %381
  %385 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %386 = load atomic i32, i32* %385 monotonic, align 4
  %387 = and i32 %386, 2
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %382, i64 0, i32 0
  %390 = load i32, i32* %389, align 4
  br i1 %388, label %391, label %393

391:                                              ; preds = %384
  %392 = add i32 %390, -1
  store i32 %392, i32* %389, align 4
  br label %393

393:                                              ; preds = %391, %384
  %394 = phi i32 [ %392, %391 ], [ %390, %384 ]
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %397

396:                                              ; preds = %393
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %382) #7
  br label %397

397:                                              ; preds = %381, %393, %396
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %333) #7
  br i1 %364, label %398, label %513

398:                                              ; preds = %397
  %399 = load %"class.v8::Value"*, %"class.v8::Value"** %326, align 8
  %400 = icmp eq %"class.v8::Value"* %399, null
  br i1 %400, label %401, label %425, !prof !2

401:                                              ; preds = %398
  %402 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %403 = icmp eq %"class.WTF::StringImpl"* %402, null
  br i1 %403, label %404, label %406

404:                                              ; preds = %401
  %405 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 2
  br label %450

406:                                              ; preds = %401
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  br i1 %410, label %411, label %423

411:                                              ; preds = %406
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %402, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  %414 = zext i32 %413 to i33
  %415 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %414, i33 1) #7
  %416 = extractvalue { i33, i1 } %415, 1
  %417 = extractvalue { i33, i1 } %415, 0
  %418 = icmp slt i33 %417, 0
  %419 = or i1 %416, %418
  br i1 %419, label %420, label %421, !prof !2

420:                                              ; preds = %411
  call void @llvm.trap() #7
  unreachable

421:                                              ; preds = %411
  %422 = trunc i33 %417 to i32
  store i32 %422, i32* %412, align 4
  br label %423

423:                                              ; preds = %406, %421
  %424 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 2
  br label %431

425:                                              ; preds = %398
  %426 = bitcast %"class.v8::Value"* %399 to %"class.v8::String"*
  %427 = load i32, i32* %327, align 8
  %428 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %426, i32 %427) #7
  %429 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 2
  %430 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %430, label %450, label %431

431:                                              ; preds = %423, %425
  %432 = phi %"class.WTF::String"* [ %424, %423 ], [ %429, %425 ]
  %433 = phi %"class.WTF::StringImpl"* [ %402, %423 ], [ %428, %425 ]
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  br i1 %437, label %438, label %450

438:                                              ; preds = %431
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %433, i64 0, i32 0
  %440 = load i32, i32* %439, align 4
  %441 = zext i32 %440 to i33
  %442 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %441, i33 1) #7
  %443 = extractvalue { i33, i1 } %442, 1
  %444 = extractvalue { i33, i1 } %442, 0
  %445 = icmp slt i33 %444, 0
  %446 = or i1 %443, %445
  br i1 %446, label %447, label %448, !prof !2

447:                                              ; preds = %438
  call void @llvm.trap() #7
  unreachable

448:                                              ; preds = %438
  %449 = trunc i33 %444 to i32
  store i32 %449, i32* %439, align 4
  br label %450

450:                                              ; preds = %404, %448, %431, %425
  %451 = phi i1 [ false, %448 ], [ false, %431 ], [ true, %425 ], [ true, %404 ]
  %452 = phi %"class.WTF::String"* [ %432, %448 ], [ %432, %431 ], [ %429, %425 ], [ %405, %404 ]
  %453 = phi %"class.WTF::StringImpl"* [ %433, %448 ], [ %433, %431 ], [ null, %425 ], [ null, %404 ]
  %454 = ptrtoint %"class.WTF::StringImpl"* %453 to i64
  %455 = bitcast %"class.WTF::String"* %452 to i64*
  %456 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %452, i64 0, i32 0, i32 0
  %457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %456, align 8
  store i64 %454, i64* %455, align 8
  %458 = icmp eq %"class.WTF::StringImpl"* %457, null
  br i1 %458, label %472, label %459

459:                                              ; preds = %450
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  %464 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %457, i64 0, i32 0
  %465 = load i32, i32* %464, align 4
  br i1 %463, label %466, label %468

466:                                              ; preds = %459
  %467 = add i32 %465, -1
  store i32 %467, i32* %464, align 4
  br label %468

468:                                              ; preds = %466, %459
  %469 = phi i32 [ %467, %466 ], [ %465, %459 ]
  %470 = icmp eq i32 %469, 0
  br i1 %470, label %471, label %472

471:                                              ; preds = %468
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %457) #7
  br label %472

472:                                              ; preds = %450, %468, %471
  br i1 %451, label %486, label %473

473:                                              ; preds = %472
  %474 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = load atomic i32, i32* %474 monotonic, align 4
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %453, i64 0, i32 0
  %479 = load i32, i32* %478, align 4
  br i1 %477, label %480, label %482

480:                                              ; preds = %473
  %481 = add i32 %479, -1
  store i32 %481, i32* %478, align 4
  br label %482

482:                                              ; preds = %480, %473
  %483 = phi i32 [ %481, %480 ], [ %479, %473 ]
  %484 = icmp eq i32 %483, 0
  br i1 %484, label %485, label %486

485:                                              ; preds = %482
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %453) #7
  br label %486

486:                                              ; preds = %472, %482, %485
  %487 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %488 = load i8*, i8** %487, align 8
  store i8* null, i8** %487, align 8
  %489 = icmp eq i8* %488, null
  br i1 %489, label %491, label %490

490:                                              ; preds = %486
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %488) #7
  br label %491

491:                                              ; preds = %490, %486
  %492 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %493 = icmp eq %"class.WTF::StringImpl"* %492, null
  br i1 %493, label %507, label %494

494:                                              ; preds = %491
  %495 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = load atomic i32, i32* %495 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %492, i64 0, i32 0
  %500 = load i32, i32* %499, align 4
  br i1 %498, label %501, label %503

501:                                              ; preds = %494
  %502 = add i32 %500, -1
  store i32 %502, i32* %499, align 4
  br label %503

503:                                              ; preds = %501, %494
  %504 = phi i32 [ %502, %501 ], [ %500, %494 ]
  %505 = icmp eq i32 %504, 0
  br i1 %505, label %506, label %507

506:                                              ; preds = %503
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %492) #7
  br label %507

507:                                              ; preds = %491, %503, %506
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %325) #7
  %508 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %48, i64 2, i32 0
  %509 = bitcast %"class.v8::Name"** %508 to %"class.v8::Value"**
  %510 = load %"class.v8::Value"*, %"class.v8::Value"** %509, align 8
  %511 = call %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"* nonnull %42, %"class.v8::Context"* %50, %"class.v8::Value"* %510) #7
  %512 = icmp eq %"class.v8::Value"* %511, null
  br i1 %512, label %535, label %541

513:                                              ; preds = %397, %324
  %514 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %9, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %515 = load i8*, i8** %514, align 8
  store i8* null, i8** %514, align 8
  %516 = icmp eq i8* %515, null
  br i1 %516, label %518, label %517

517:                                              ; preds = %513
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %515) #7
  br label %518

518:                                              ; preds = %517, %513
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %328, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %520, label %534, label %521

521:                                              ; preds = %518
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %523 = load atomic i32, i32* %522 monotonic, align 4
  %524 = and i32 %523, 2
  %525 = icmp eq i32 %524, 0
  %526 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 0
  %527 = load i32, i32* %526, align 4
  br i1 %525, label %528, label %530

528:                                              ; preds = %521
  %529 = add i32 %527, -1
  store i32 %529, i32* %526, align 4
  br label %530

530:                                              ; preds = %528, %521
  %531 = phi i32 [ %529, %528 ], [ %527, %521 ]
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %534

533:                                              ; preds = %530
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %519) #7
  br label %534

534:                                              ; preds = %518, %530, %533
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %325) #7
  br label %769

535:                                              ; preds = %507
  %536 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %5) #7
  %537 = bitcast %"class.blink::ExceptionState"* %3 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %538 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %537, align 8
  %539 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %538, i64 5
  %540 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %539, align 8
  call void %540(%"class.blink::ExceptionState"* %3, %"class.v8::Value"* %536) #7
  br label %769

541:                                              ; preds = %507
  %542 = bitcast %"class.v8::Value"* %511 to i64*
  %543 = load i64, i64* %542, align 8
  %544 = and i64 %543, 3
  %545 = icmp eq i64 %544, 1
  br i1 %545, label %546, label %563

546:                                              ; preds = %541
  %547 = add i64 %543, -1
  %548 = inttoptr i64 %547 to i32*
  %549 = load i32, i32* %548, align 4
  %550 = and i64 %543, -4294967296
  %551 = zext i32 %549 to i64
  %552 = or i64 %550, %551
  %553 = add i64 %552, 7
  %554 = inttoptr i64 %553 to i16*
  %555 = load i16, i16* %554, align 2
  %556 = icmp eq i16 %555, 67
  br i1 %556, label %557, label %563

557:                                              ; preds = %546
  %558 = add i64 %543, 23
  %559 = inttoptr i64 %558 to i32*
  %560 = load i32, i32* %559, align 4
  %561 = and i32 %560, -2
  %562 = icmp eq i32 %561, 10
  br i1 %562, label %769, label %563

563:                                              ; preds = %546, %541, %557
  %564 = bitcast %"class.blink::V8StringResource"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 160, i8* nonnull %564) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %564, i8 -86, i64 152, i1 false)
  %565 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 0, i32 0
  store %"class.v8::Value"* %511, %"class.v8::Value"** %565, align 8
  %566 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 1
  store i32 0, i32* %566, align 8
  %567 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %567, align 8
  %568 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1
  %569 = bitcast %"class.std::__1::unique_ptr"* %568 to i64*
  store i64 0, i64* %569, align 8
  %570 = call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  br i1 %570, label %571, label %747

571:                                              ; preds = %563
  %572 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %572) #7
  %573 = load %"class.v8::Value"*, %"class.v8::Value"** %565, align 8
  %574 = icmp eq %"class.v8::Value"* %573, null
  br i1 %574, label %579, label %575, !prof !2

575:                                              ; preds = %571
  %576 = bitcast %"class.v8::Value"* %573 to %"class.v8::String"*
  %577 = load i32, i32* %566, align 8
  %578 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %576, i32 %577) #7
  br label %599

579:                                              ; preds = %571
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %581 = icmp eq %"class.WTF::StringImpl"* %580, null
  br i1 %581, label %599, label %582

582:                                              ; preds = %579
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  br i1 %586, label %587, label %599

587:                                              ; preds = %582
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %580, i64 0, i32 0
  %589 = load i32, i32* %588, align 4
  %590 = zext i32 %589 to i33
  %591 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %590, i33 1) #7
  %592 = extractvalue { i33, i1 } %591, 1
  %593 = extractvalue { i33, i1 } %591, 0
  %594 = icmp slt i33 %593, 0
  %595 = or i1 %592, %594
  br i1 %595, label %596, label %597, !prof !2

596:                                              ; preds = %587
  call void @llvm.trap() #7
  unreachable

597:                                              ; preds = %587
  %598 = trunc i33 %593 to i32
  store i32 %598, i32* %588, align 4
  br label %599

599:                                              ; preds = %575, %579, %582, %597
  %600 = phi %"class.WTF::StringImpl"* [ %578, %575 ], [ null, %579 ], [ %580, %582 ], [ %580, %597 ]
  %601 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %600, %"class.WTF::StringImpl"** %601, align 8
  %602 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %602) #7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.67, i64 0, i64 0), i64 23) #7
  %603 = call zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* nonnull dereferenceable(8) %13, i8** getelementptr inbounds ([6 x i8*], [6 x i8*]* @_ZZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateEE12kValidValues_1, i64 0, i64 0), i64 6, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.blink::ExceptionState"* dereferenceable(72) %3) #7
  %604 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %605 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %604, align 8
  %606 = icmp eq %"class.WTF::StringImpl"* %605, null
  br i1 %606, label %620, label %607

607:                                              ; preds = %599
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %609 = load atomic i32, i32* %608 monotonic, align 4
  %610 = and i32 %609, 2
  %611 = icmp eq i32 %610, 0
  %612 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %605, i64 0, i32 0
  %613 = load i32, i32* %612, align 4
  br i1 %611, label %614, label %616

614:                                              ; preds = %607
  %615 = add i32 %613, -1
  store i32 %615, i32* %612, align 4
  br label %616

616:                                              ; preds = %614, %607
  %617 = phi i32 [ %615, %614 ], [ %613, %607 ]
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %620

619:                                              ; preds = %616
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %605) #7
  br label %620

620:                                              ; preds = %599, %616, %619
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %602) #7
  %621 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %601, align 8
  %622 = icmp eq %"class.WTF::StringImpl"* %621, null
  br i1 %622, label %636, label %623

623:                                              ; preds = %620
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %625 = load atomic i32, i32* %624 monotonic, align 4
  %626 = and i32 %625, 2
  %627 = icmp eq i32 %626, 0
  %628 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %621, i64 0, i32 0
  %629 = load i32, i32* %628, align 4
  br i1 %627, label %630, label %632

630:                                              ; preds = %623
  %631 = add i32 %629, -1
  store i32 %631, i32* %628, align 4
  br label %632

632:                                              ; preds = %630, %623
  %633 = phi i32 [ %631, %630 ], [ %629, %623 ]
  %634 = icmp eq i32 %633, 0
  br i1 %634, label %635, label %636

635:                                              ; preds = %632
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %621) #7
  br label %636

636:                                              ; preds = %620, %632, %635
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %572) #7
  br i1 %603, label %637, label %747

637:                                              ; preds = %636
  %638 = load %"class.v8::Value"*, %"class.v8::Value"** %565, align 8
  %639 = icmp eq %"class.v8::Value"* %638, null
  br i1 %639, label %640, label %664, !prof !2

640:                                              ; preds = %637
  %641 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %642 = icmp eq %"class.WTF::StringImpl"* %641, null
  br i1 %642, label %643, label %645

643:                                              ; preds = %640
  %644 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 3
  br label %689

645:                                              ; preds = %640
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %647 = load atomic i32, i32* %646 monotonic, align 4
  %648 = and i32 %647, 2
  %649 = icmp eq i32 %648, 0
  br i1 %649, label %650, label %662

650:                                              ; preds = %645
  %651 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 0, i32 0
  %652 = load i32, i32* %651, align 4
  %653 = zext i32 %652 to i33
  %654 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %653, i33 1) #7
  %655 = extractvalue { i33, i1 } %654, 1
  %656 = extractvalue { i33, i1 } %654, 0
  %657 = icmp slt i33 %656, 0
  %658 = or i1 %655, %657
  br i1 %658, label %659, label %660, !prof !2

659:                                              ; preds = %650
  call void @llvm.trap() #7
  unreachable

660:                                              ; preds = %650
  %661 = trunc i33 %656 to i32
  store i32 %661, i32* %651, align 4
  br label %662

662:                                              ; preds = %645, %660
  %663 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 3
  br label %670

664:                                              ; preds = %637
  %665 = bitcast %"class.v8::Value"* %638 to %"class.v8::String"*
  %666 = load i32, i32* %566, align 8
  %667 = call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"* nonnull %665, i32 %666) #7
  %668 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %2, i64 0, i32 3
  %669 = icmp eq %"class.WTF::StringImpl"* %667, null
  br i1 %669, label %689, label %670

670:                                              ; preds = %662, %664
  %671 = phi %"class.WTF::String"* [ %663, %662 ], [ %668, %664 ]
  %672 = phi %"class.WTF::StringImpl"* [ %641, %662 ], [ %667, %664 ]
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %674 = load atomic i32, i32* %673 monotonic, align 4
  %675 = and i32 %674, 2
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %689

677:                                              ; preds = %670
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %679 = load i32, i32* %678, align 4
  %680 = zext i32 %679 to i33
  %681 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %680, i33 1) #7
  %682 = extractvalue { i33, i1 } %681, 1
  %683 = extractvalue { i33, i1 } %681, 0
  %684 = icmp slt i33 %683, 0
  %685 = or i1 %682, %684
  br i1 %685, label %686, label %687, !prof !2

686:                                              ; preds = %677
  call void @llvm.trap() #7
  unreachable

687:                                              ; preds = %677
  %688 = trunc i33 %683 to i32
  store i32 %688, i32* %678, align 4
  br label %689

689:                                              ; preds = %643, %687, %670, %664
  %690 = phi i1 [ false, %687 ], [ false, %670 ], [ true, %664 ], [ true, %643 ]
  %691 = phi %"class.WTF::String"* [ %671, %687 ], [ %671, %670 ], [ %668, %664 ], [ %644, %643 ]
  %692 = phi %"class.WTF::StringImpl"* [ %672, %687 ], [ %672, %670 ], [ null, %664 ], [ null, %643 ]
  %693 = ptrtoint %"class.WTF::StringImpl"* %692 to i64
  %694 = bitcast %"class.WTF::String"* %691 to i64*
  %695 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %691, i64 0, i32 0, i32 0
  %696 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %695, align 8
  store i64 %693, i64* %694, align 8
  %697 = icmp eq %"class.WTF::StringImpl"* %696, null
  br i1 %697, label %711, label %698

698:                                              ; preds = %689
  %699 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %700 = load atomic i32, i32* %699 monotonic, align 4
  %701 = and i32 %700, 2
  %702 = icmp eq i32 %701, 0
  %703 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %696, i64 0, i32 0
  %704 = load i32, i32* %703, align 4
  br i1 %702, label %705, label %707

705:                                              ; preds = %698
  %706 = add i32 %704, -1
  store i32 %706, i32* %703, align 4
  br label %707

707:                                              ; preds = %705, %698
  %708 = phi i32 [ %706, %705 ], [ %704, %698 ]
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %711

710:                                              ; preds = %707
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %696) #7
  br label %711

711:                                              ; preds = %689, %707, %710
  br i1 %690, label %725, label %712

712:                                              ; preds = %711
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %714 = load atomic i32, i32* %713 monotonic, align 4
  %715 = and i32 %714, 2
  %716 = icmp eq i32 %715, 0
  %717 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %692, i64 0, i32 0
  %718 = load i32, i32* %717, align 4
  br i1 %716, label %719, label %721

719:                                              ; preds = %712
  %720 = add i32 %718, -1
  store i32 %720, i32* %717, align 4
  br label %721

721:                                              ; preds = %719, %712
  %722 = phi i32 [ %720, %719 ], [ %718, %712 ]
  %723 = icmp eq i32 %722, 0
  br i1 %723, label %724, label %725

724:                                              ; preds = %721
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %692) #7
  br label %725

725:                                              ; preds = %711, %721, %724
  %726 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %727 = load i8*, i8** %726, align 8
  store i8* null, i8** %726, align 8
  %728 = icmp eq i8* %727, null
  br i1 %728, label %730, label %729

729:                                              ; preds = %725
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %727) #7
  br label %730

730:                                              ; preds = %729, %725
  %731 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %732 = icmp eq %"class.WTF::StringImpl"* %731, null
  br i1 %732, label %746, label %733

733:                                              ; preds = %730
  %734 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %735 = load atomic i32, i32* %734 monotonic, align 4
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  %738 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %731, i64 0, i32 0
  %739 = load i32, i32* %738, align 4
  br i1 %737, label %740, label %742

740:                                              ; preds = %733
  %741 = add i32 %739, -1
  store i32 %741, i32* %738, align 4
  br label %742

742:                                              ; preds = %740, %733
  %743 = phi i32 [ %741, %740 ], [ %739, %733 ]
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %746

745:                                              ; preds = %742
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %731) #7
  br label %746

746:                                              ; preds = %730, %742, %745
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %564) #7
  br label %769

747:                                              ; preds = %636, %563
  %748 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %12, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %749 = load i8*, i8** %748, align 8
  store i8* null, i8** %748, align 8
  %750 = icmp eq i8* %749, null
  br i1 %750, label %752, label %751

751:                                              ; preds = %747
  call void @_ZN3WTF10Partitions10BufferFreeEPv(i8* nonnull %749) #7
  br label %752

752:                                              ; preds = %751, %747
  %753 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %567, align 8
  %754 = icmp eq %"class.WTF::StringImpl"* %753, null
  br i1 %754, label %768, label %755

755:                                              ; preds = %752
  %756 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %757 = load atomic i32, i32* %756 monotonic, align 4
  %758 = and i32 %757, 2
  %759 = icmp eq i32 %758, 0
  %760 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %753, i64 0, i32 0
  %761 = load i32, i32* %760, align 4
  br i1 %759, label %762, label %764

762:                                              ; preds = %755
  %763 = add i32 %761, -1
  store i32 %763, i32* %760, align 4
  br label %764

764:                                              ; preds = %762, %755
  %765 = phi i32 [ %763, %762 ], [ %761, %755 ]
  %766 = icmp eq i32 %765, 0
  br i1 %766, label %767, label %768

767:                                              ; preds = %764
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %753) #7
  br label %768

768:                                              ; preds = %752, %764, %767
  call void @llvm.lifetime.end.p0i8(i64 160, i8* nonnull %564) #7
  br label %769

769:                                              ; preds = %295, %323, %534, %557, %746, %768, %535, %294, %83, %55
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %5) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %49) #7
  br label %770

770:                                              ; preds = %769, %37, %40
  ret void
}

declare void @_ZN5blink14ExceptionState14ThrowTypeErrorEPKc(%"class.blink::ExceptionState"*, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value8IsObjectEv(%"class.v8::Value"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"*, %"class.v8::Isolate"*) unnamed_addr #1

declare %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v86Object3GetENS_5LocalINS_7ContextEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Value"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE7PrepareERNS_14ExceptionStateE(%"class.blink::V8StringResource"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::TryCatch", align 8
  %4 = tail call zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"* %0)
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() #7
  %7 = bitcast %"class.v8::TryCatch"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %7) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 48, i1 false) #7
  call void @_ZN2v88TryCatchC1EPNS_7IsolateE(%"class.v8::TryCatch"* nonnull %3, %"class.v8::Isolate"* %6) #7
  %8 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %9 = load %"class.v8::Value"*, %"class.v8::Value"** %8, align 8
  %10 = call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %6) #7
  %11 = call %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"* %9, %"class.v8::Context"* %10) #7
  %12 = ptrtoint %"class.v8::String"* %11 to i64
  %13 = bitcast %"class.blink::V8StringResource"* %0 to i64*
  store i64 %12, i64* %13, align 8
  %14 = icmp eq %"class.v8::String"* %11, null
  br i1 %14, label %15, label %21

15:                                               ; preds = %5
  %16 = call %"class.v8::Value"* @_ZNK2v88TryCatch9ExceptionEv(%"class.v8::TryCatch"* nonnull %3) #7
  %17 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)***
  %18 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)**, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*** %17, align 8
  %19 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %18, i64 5
  %20 = load void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)*, void (%"class.blink::ExceptionState"*, %"class.v8::Value"*)** %19, align 8
  call void %20(%"class.blink::ExceptionState"* %1, %"class.v8::Value"* %16) #7
  br label %21

21:                                               ; preds = %5, %15
  %22 = phi i1 [ false, %15 ], [ true, %5 ]
  call void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"* nonnull %3) #7
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %7) #7
  br label %23

23:                                               ; preds = %21, %2
  %24 = phi i1 [ true, %2 ], [ %22, %21 ]
  ret i1 %24
}

declare zeroext i1 @_ZN5blink11IsValidEnumERKN3WTF6StringEPKPKcmS3_RNS_14ExceptionStateE(%"class.WTF::String"* dereferenceable(8), i8**, i64, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88TryCatchD1Ev(%"class.v8::TryCatch"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::Value"* @_ZNK5blink30GPUStorageTextureBindingLayout8ToV8ImplEN2v85LocalINS1_6ObjectEEEPNS1_7IsolateE(%"class.blink::GPUStorageTextureBindingLayout"* nocapture readonly, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"* %2) #7
  %5 = tail call zeroext i1 @_ZN5blink34toV8GPUStorageTextureBindingLayoutEPKNS_30GPUStorageTextureBindingLayoutEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUStorageTextureBindingLayout"* %0, %"class.v8::Object"* %4, %"class.v8::Object"* undef, %"class.v8::Isolate"* %2)
  %6 = bitcast %"class.v8::Object"* %4 to %"class.v8::Value"*
  %7 = ptrtoint %"class.v8::Isolate"* %2 to i64
  %8 = add i64 %7, 160
  %9 = inttoptr i64 %8 to %"class.v8::Value"*
  %10 = select i1 %5, %"class.v8::Value"* %6, %"class.v8::Value"* %9
  ret %"class.v8::Value"* %10
}

declare %"class.v8::Object"* @_ZN2v86Object3NewEPNS_7IsolateE(%"class.v8::Isolate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink34toV8GPUStorageTextureBindingLayoutEPKNS_30GPUStorageTextureBindingLayoutEN2v85LocalINS3_6ObjectEEES6_PNS3_7IsolateE(%"class.blink::GPUStorageTextureBindingLayout"* nocapture readonly, %"class.v8::Object"*, %"class.v8::Object"* nocapture readnone, %"class.v8::Isolate"*) local_unnamed_addr #0 {
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = ptrtoint %"class.v8::Isolate"* %3 to i64
  %9 = add i64 %8, 8
  %10 = inttoptr i64 %9 to %"class.blink::V8PerIsolateData"**
  %11 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %10, align 8
  %12 = tail call { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"* %11, i8* bitcast ([3 x i8*]* @_ZZN5blinkL43eternalV8GPUStorageTextureBindingLayoutKeysEPN2v87IsolateEE5kKeys to i8*), %"class.base::span.312"* dereferenceable(16) bitcast ({ i64, i8** }* @.ref.tmp to %"class.base::span.312"*)) #7
  %13 = extractvalue { i64, %"class.v8::Eternal"* } %12, 1
  %14 = tail call %"class.v8::Context"* @_ZN2v87Isolate17GetCurrentContextEv(%"class.v8::Isolate"* %3) #7
  %15 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %0, i64 0, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %36, label %18

18:                                               ; preds = %4
  %19 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #7
  %20 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 1
  %24 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %25 = bitcast i8** %24 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %22, i32* %26, align 8
  %27 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #7
  %28 = bitcast %"class.v8::String"* %27 to %"class.v8::Value"*
  %29 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 0, i32 0
  %30 = load %"class.v8::Name"*, %"class.v8::Name"** %29, align 8
  %31 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %30, %"class.v8::Value"* %28) #7
  %32 = trunc i16 %31 to i8
  %33 = icmp ne i8 %32, 0
  %34 = icmp ugt i16 %31, 255
  %35 = and i1 %34, %33
  br i1 %35, label %36, label %86

36:                                               ; preds = %4, %18
  %37 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %0, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %58, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %41) #7
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %38, %"class.WTF::StringImpl"** %42, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 1
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %47 = bitcast i8** %46 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %45, %"class.WTF::StringImpl"** %47, align 8
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %44, i32* %48, align 8
  %49 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %41) #7
  %50 = bitcast %"class.v8::String"* %49 to %"class.v8::Value"*
  %51 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 1, i32 0
  %52 = load %"class.v8::Name"*, %"class.v8::Name"** %51, align 8
  %53 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %52, %"class.v8::Value"* %50) #7
  %54 = trunc i16 %53 to i8
  %55 = icmp ne i8 %54, 0
  %56 = icmp ugt i16 %53, 255
  %57 = and i1 %56, %55
  br i1 %57, label %58, label %86

58:                                               ; preds = %36, %40
  %59 = getelementptr inbounds %"class.blink::GPUStorageTextureBindingLayout", %"class.blink::GPUStorageTextureBindingLayout"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %61, label %72, label %62

62:                                               ; preds = %58
  %63 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #7
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %60, %"class.WTF::StringImpl"** %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 1
  %66 = load i32, i32* %65, align 4
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 1
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %66, i32* %70, align 8
  %71 = call %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"* %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #7
  br label %76

72:                                               ; preds = %58
  %73 = call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %3, i8* nonnull getelementptr inbounds ([3 x i8], [3 x i8]* @.str.62, i64 0, i64 0), i32 0, i32 2) #7
  %74 = icmp eq %"class.v8::String"* %73, null
  br i1 %74, label %75, label %76, !prof !2

75:                                               ; preds = %72
  call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %76

76:                                               ; preds = %75, %72, %62
  %77 = phi %"class.v8::String"* [ %71, %62 ], [ %73, %72 ], [ null, %75 ]
  %78 = bitcast %"class.v8::String"* %77 to %"class.v8::Value"*
  %79 = getelementptr inbounds %"class.v8::Eternal", %"class.v8::Eternal"* %13, i64 2, i32 0
  %80 = load %"class.v8::Name"*, %"class.v8::Name"** %79, align 8
  %81 = call i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"* %1, %"class.v8::Context"* %14, %"class.v8::Name"* %80, %"class.v8::Value"* %78) #7
  %82 = trunc i16 %81 to i8
  %83 = icmp ne i8 %82, 0
  %84 = icmp ugt i16 %81, 255
  %85 = and i1 %84, %83
  br label %86

86:                                               ; preds = %76, %40, %18
  %87 = phi i1 [ false, %18 ], [ %85, %76 ], [ false, %40 ]
  ret i1 %87
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::String"* @_ZN5blink8V8StringEPN2v87IsolateERKN3WTF10StringViewE(%"class.v8::Isolate"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #4 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  %6 = bitcast i8* %4 to i16*
  br i1 %5, label %7, label %11

7:                                                ; preds = %2
  %8 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %9 = add i64 %8, 200
  %10 = inttoptr i64 %9 to %"class.v8::String"*
  br label %63

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 1
  %15 = bitcast %"class.WTF::StringImpl"* %14 to i8*
  %16 = icmp eq i8* %4, %15
  br i1 %16, label %17, label %48

17:                                               ; preds = %11
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = icmp ne i32 %19, %21
  %23 = icmp eq %"class.WTF::StringImpl"* %13, null
  %24 = or i1 %23, %22
  br i1 %24, label %48, label %25

25:                                               ; preds = %17
  %26 = ptrtoint %"class.v8::Isolate"* %0 to i64
  %27 = add i64 %26, 8
  %28 = inttoptr i64 %27 to %"class.blink::V8PerIsolateData"**
  %29 = load %"class.blink::V8PerIsolateData"*, %"class.blink::V8PerIsolateData"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::V8PerIsolateData", %"class.blink::V8PerIsolateData"* %29, i64 0, i32 5, i32 0, i32 0, i32 0
  %31 = load %"class.blink::StringCache"*, %"class.blink::StringCache"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 3, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, %13
  br i1 %34, label %35, label %46

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::StringCache", %"class.blink::StringCache"* %31, i64 0, i32 1
  %37 = bitcast %"class.v8::PersistentValueMapBase<WTF::StringImpl *, v8::String, blink::StringCacheMapTraits>::PersistentValueReference"* %36 to %"class.v8::String"**
  %38 = load %"class.v8::String"*, %"class.v8::String"** %37, align 8
  %39 = icmp eq %"class.v8::String"* %38, null
  br i1 %39, label %63, label %40

40:                                               ; preds = %35
  %41 = bitcast %"class.v8::String"* %38 to i64*
  %42 = bitcast %"class.v8::Isolate"* %0 to %"class.v8::internal::Isolate"*
  %43 = load i64, i64* %41, align 8
  %44 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %42, i64 %43) #7
  %45 = bitcast i64* %44 to %"class.v8::String"*
  br label %63

46:                                               ; preds = %25
  %47 = tail call %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"* %31, %"class.v8::Isolate"* %0, %"class.WTF::StringImpl"* nonnull %13) #7
  br label %63

48:                                               ; preds = %17, %11
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = load atomic i32, i32* %49 monotonic, align 4
  %51 = and i32 %50, 1
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %54 = load i32, i32* %53, align 8
  br i1 %52, label %59, label %55

55:                                               ; preds = %48
  %56 = tail call %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i8* nonnull %4, i32 0, i32 %54) #7
  %57 = icmp eq %"class.v8::String"* %56, null
  br i1 %57, label %58, label %63, !prof !2

58:                                               ; preds = %55
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

59:                                               ; preds = %48
  %60 = tail call %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"* %0, i16* nonnull %6, i32 0, i32 %54) #7
  %61 = icmp eq %"class.v8::String"* %60, null
  br i1 %61, label %62, label %63, !prof !2

62:                                               ; preds = %59
  tail call void @_ZN2v82V812ToLocalEmptyEv() #7
  br label %63

63:                                               ; preds = %46, %40, %35, %62, %59, %58, %55, %7
  %64 = phi %"class.v8::String"* [ %10, %7 ], [ %56, %55 ], [ null, %58 ], [ %60, %59 ], [ null, %62 ], [ null, %35 ], [ %45, %40 ], [ %47, %46 ]
  ret %"class.v8::String"* %64
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::GPUStorageTextureBindingLayout"* @_ZN5blink17NativeValueTraitsINS_30GPUStorageTextureBindingLayoutEvE11NativeValueEPN2v87IsolateENS3_5LocalINS3_5ValueEEERNS_14ExceptionStateE(%"class.v8::Isolate"*, %"class.v8::Value"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64 32) #7
  %5 = bitcast i8* %4 to %"class.blink::GPUStorageTextureBindingLayout"*
  tail call void @_ZN5blink30GPUStorageTextureBindingLayoutC1Ev(%"class.blink::GPUStorageTextureBindingLayout"* %5) #7
  %6 = getelementptr inbounds i8, i8* %4, i64 -4
  %7 = bitcast i8* %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = or i16 %8, 1
  store atomic i16 %9, i16* %7 release, align 2
  tail call void @_ZN5blink32V8GPUStorageTextureBindingLayout6ToImplEPN2v87IsolateENS1_5LocalINS1_5ValueEEEPNS_30GPUStorageTextureBindingLayoutERNS_14ExceptionStateE(%"class.v8::Isolate"* %0, %"class.v8::Value"* %1, %"class.blink::GPUStorageTextureBindingLayout"* %5, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  ret %"class.blink::GPUStorageTextureBindingLayout"* %5
}

declare { i64, %"class.v8::Eternal"* } @_ZN5blink16V8PerIsolateData28FindOrCreateEternalNameCacheEPKvRKN4base4spanIKPKcLm18446744073709551615EEE(%"class.blink::V8PerIsolateData"*, i8*, %"class.base::span.312"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZN3WTF10Partitions10BufferFreeEPv(i8*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromOneByteEPNS_7IsolateEPKhNS_13NewStringTypeEi(%"class.v8::Isolate"*, i8*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN2v86String14NewFromTwoByteEPNS_7IsolateEPKtNS_13NewStringTypeEi(%"class.v8::Isolate"*, i16*, i32, i32) local_unnamed_addr #1

declare %"class.v8::String"* @_ZN5blink11StringCache20V8ExternalStringSlowEPN2v87IsolateEPN3WTF10StringImplE(%"class.blink::StringCache"*, %"class.v8::Isolate"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare void @_ZN2v82V812ToLocalEmptyEv() local_unnamed_addr #1

declare i16 @_ZN2v86Object18CreateDataPropertyENS_5LocalINS_7ContextEEENS1_INS_4NameEEENS1_INS_5ValueEEE(%"class.v8::Object"*, %"class.v8::Context"*, %"class.v8::Name"*, %"class.v8::Value"*) local_unnamed_addr #1

declare void @_ZN5blink30GPUStorageTextureBindingLayoutC1Ev(%"class.blink::GPUStorageTextureBindingLayout"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17IDLDictionaryBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #7
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #7
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #7
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17IDLDictionaryBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #7
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #7
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #7
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #7
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #7
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.71, i64 0, i64 0), i8* %40, i8* %41) #7
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #7
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #7
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.72, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #7
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #7
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #7
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #7
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !2

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #7
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17IDLDictionaryBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::IDLDictionaryBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::IDLDictionaryBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::IDLDictionaryBase"* %3, %"class.blink::Visitor"* %0) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17IDLDictionaryBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::IDLDictionaryBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::IDLDictionaryBase"*)***
  %4 = load void (%"class.blink::IDLDictionaryBase"*)**, void (%"class.blink::IDLDictionaryBase"*)*** %3, align 8
  %5 = load void (%"class.blink::IDLDictionaryBase"*)*, void (%"class.blink::IDLDictionaryBase"*)** %4, align 8
  tail call void %5(%"class.blink::IDLDictionaryBase"* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17IDLDictionaryBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.73, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16V8StringResourceILNS_20V8StringResourceModeE0EE11PrepareFastEv(%"class.blink::V8StringResource"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.v8::Value"*, %"class.v8::Value"** %2, align 8
  %4 = icmp eq %"class.v8::Value"* %3, null
  br i1 %4, label %82, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::Value"* %3 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 3
  %9 = icmp eq i64 %8, 1
  br i1 %9, label %10, label %21, !prof !3

10:                                               ; preds = %5
  %11 = add i64 %7, -1
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %7, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = add i64 %16, 7
  %18 = inttoptr i64 %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = icmp ult i16 %19, 64
  br i1 %20, label %82, label %21, !prof !4

21:                                               ; preds = %5, %10
  %22 = tail call zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"* nonnull %3) #7
  br i1 %22, label %23, label %80, !prof !4

23:                                               ; preds = %21
  %24 = bitcast %"class.blink::V8StringResource"* %0 to %"class.v8::Int32"**
  %25 = load %"class.v8::Int32"*, %"class.v8::Int32"** %24, align 8
  %26 = tail call i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"* %25) #7
  %27 = tail call %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32 %26) #7
  %28 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 2
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #7
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #7
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %23
  %48 = ptrtoint %"class.WTF::StringImpl"* %27 to i64
  %49 = bitcast %"class.WTF::String"* %28 to i64*
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  store i64 %48, i64* %49, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #7
  br label %66

66:                                               ; preds = %47, %62, %65
  store %"class.v8::Value"* null, %"class.v8::Value"** %2, align 8
  br i1 %29, label %82, label %67

67:                                               ; preds = %66
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #7
  br label %82

80:                                               ; preds = %21
  %81 = getelementptr inbounds %"class.blink::V8StringResource", %"class.blink::V8StringResource"* %0, i64 0, i32 1
  store i32 1, i32* %81, align 8
  br label %82

82:                                               ; preds = %79, %76, %66, %10, %1, %80
  %83 = phi i1 [ false, %80 ], [ true, %1 ], [ true, %10 ], [ true, %66 ], [ true, %76 ], [ true, %79 ]
  ret i1 %83
}

declare %"class.v8::Isolate"* @_ZN2v87Isolate10GetCurrentEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK2v85Value7IsInt32Ev(%"class.v8::Value"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringEi(i32) local_unnamed_addr #1

declare i32 @_ZNK2v85Int325ValueEv(%"class.v8::Int32"*) local_unnamed_addr #1

declare %"class.v8::String"* @_ZNK2v85Value8ToStringENS_5LocalINS_7ContextEEE(%"class.v8::Value"*, %"class.v8::Context"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink13ToBlinkStringIN3WTF6StringEEET_N2v85LocalINS4_6StringEEENS_12ExternalModeE(%"class.v8::String"*, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2146410443, i32 1073205}
!4 = !{!"branch_weights", i32 2000, i32 1}
