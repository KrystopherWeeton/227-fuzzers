; ModuleID = '../../third_party/blink/renderer/platform/graphics/paint/paint_property_node.cc'
source_filename = "../../third_party/blink/renderer/platform/graphics/paint/paint_property_node.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted", i8, i8, %class.scoped_refptr, i32, i32 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%class.scoped_refptr = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.0" }
%"class.blink::PaintPropertyNode.0" = type { %"class.WTF::RefCounted.1", i8, i8, %class.scoped_refptr.3, i32, i32 }
%"class.WTF::RefCounted.1" = type { %"class.base::RefCounted.2" }
%"class.base::RefCounted.2" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.4" }
%"class.blink::PaintPropertyNode.4" = type { %"class.WTF::RefCounted.5", i8, i8, %class.scoped_refptr.7, i32, i32 }
%"class.WTF::RefCounted.5" = type { %"class.base::RefCounted.6" }
%"class.base::RefCounted.6" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.7 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.8", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.8" = type { %"class.WTF::RefCounted.9", i8, i8, %class.scoped_refptr.11, i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::ElementId" = type { i64 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }

@.str = private unnamed_addr constant [10 x i8] c"unchanged\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"composited-values\00", align 1
@.str.2 = private unnamed_addr constant [13 x i8] c"non-reraster\00", align 1
@.str.3 = private unnamed_addr constant [14 x i8] c"simple-values\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"values\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"node-add-remove\00", align 1
@switch.table._ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0)], align 8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.blink::TransformPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_33TransformPaintPropertyNodeOrAliasES2_(%"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::TransformPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %8
  %5 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %11, %8 ], [ %0, %2 ]
  %6 = phi i32 [ %9, %8 ], [ 0, %2 ]
  %7 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %5, %1
  br i1 %7, label %103, label %8

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %6, 1
  %10 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %5, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %8, %2
  %14 = phi i32 [ 0, %2 ], [ %9, %8 ]
  %15 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %1, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13, %20
  %17 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %23, %20 ], [ %1, %13 ]
  %18 = phi i32 [ %21, %20 ], [ 0, %13 ]
  %19 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %17, %0
  br i1 %19, label %103, label %20

20:                                               ; preds = %16
  %21 = add nuw nsw i32 %18, 1
  %22 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 3, i32 0
  %23 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %22, align 8
  %24 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %20, %13
  %26 = phi i32 [ 0, %13 ], [ %21, %20 ]
  %27 = ptrtoint %"class.blink::TransformPaintPropertyNodeOrAlias"* %0 to i64
  %28 = ptrtoint %"class.blink::TransformPaintPropertyNodeOrAlias"* %1 to i64
  %29 = icmp slt i32 %14, %26
  %30 = select i1 %29, i32 %26, i32 %14
  %31 = select i1 %29, i32 %14, i32 %26
  %32 = select i1 %29, i64 %28, i64 %27
  %33 = select i1 %29, i64 %27, i64 %28
  %34 = icmp sgt i32 %30, %31
  br i1 %34, label %35, label %57

35:                                               ; preds = %25
  %36 = sub i32 %30, %31
  %37 = xor i32 %31, -1
  %38 = add i32 %30, %37
  %39 = and i32 %36, 7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %35, %41
  %42 = phi i64 [ %48, %41 ], [ %32, %35 ]
  %43 = phi i32 [ %49, %41 ], [ %30, %35 ]
  %44 = phi i32 [ %50, %41 ], [ %39, %35 ]
  %45 = inttoptr i64 %42 to %"class.blink::PaintPropertyNode"*
  %46 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %45, i64 0, i32 3, i32 0
  %47 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i32 %43, -1
  %50 = add i32 %44, -1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !2

52:                                               ; preds = %41, %35
  %53 = phi i64 [ %32, %35 ], [ %48, %41 ]
  %54 = phi i32 [ %30, %35 ], [ %49, %41 ]
  %55 = phi i64 [ undef, %35 ], [ %48, %41 ]
  %56 = icmp ult i32 %38, 7
  br i1 %56, label %57, label %62

57:                                               ; preds = %52, %62, %25
  %58 = phi i64 [ %32, %25 ], [ %55, %52 ], [ %89, %62 ]
  %59 = inttoptr i64 %58 to %"class.blink::TransformPaintPropertyNodeOrAlias"*
  %60 = inttoptr i64 %33 to %"class.blink::TransformPaintPropertyNodeOrAlias"*
  %61 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %59, %60
  br i1 %61, label %103, label %92

62:                                               ; preds = %52, %62
  %63 = phi i64 [ %89, %62 ], [ %53, %52 ]
  %64 = phi i32 [ %90, %62 ], [ %54, %52 ]
  %65 = inttoptr i64 %63 to %"class.blink::PaintPropertyNode"*
  %66 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %65, i64 0, i32 3, i32 0
  %67 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %66 to %"class.blink::PaintPropertyNode"**
  %68 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %68, i64 0, i32 3, i32 0
  %70 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %69 to %"class.blink::PaintPropertyNode"**
  %71 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %71, i64 0, i32 3, i32 0
  %73 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %72 to %"class.blink::PaintPropertyNode"**
  %74 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %74, i64 0, i32 3, i32 0
  %76 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %75 to %"class.blink::PaintPropertyNode"**
  %77 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %77, i64 0, i32 3, i32 0
  %79 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %78 to %"class.blink::PaintPropertyNode"**
  %80 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %80, i64 0, i32 3, i32 0
  %82 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %81 to %"class.blink::PaintPropertyNode"**
  %83 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %83, i64 0, i32 3, i32 0
  %85 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %84 to %"class.blink::PaintPropertyNode"**
  %86 = load %"class.blink::PaintPropertyNode"*, %"class.blink::PaintPropertyNode"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %86, i64 0, i32 3, i32 0
  %88 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i32 %64, -8
  %91 = icmp sgt i32 %90, %31
  br i1 %91, label %62, label %57

92:                                               ; preds = %57, %92
  %93 = phi i64 [ %100, %92 ], [ %33, %57 ]
  %94 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %96, %92 ], [ %59, %57 ]
  %95 = getelementptr inbounds %"class.blink::TransformPaintPropertyNodeOrAlias", %"class.blink::TransformPaintPropertyNodeOrAlias"* %94, i64 0, i32 0, i32 3, i32 0
  %96 = load %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::TransformPaintPropertyNodeOrAlias"** %95, align 8
  %97 = inttoptr i64 %93 to %"class.blink::PaintPropertyNode"*
  %98 = getelementptr inbounds %"class.blink::PaintPropertyNode", %"class.blink::PaintPropertyNode"* %97, i64 0, i32 3, i32 0
  %99 = bitcast %"class.blink::TransformPaintPropertyNodeOrAlias"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.blink::TransformPaintPropertyNodeOrAlias"*
  %102 = icmp eq %"class.blink::TransformPaintPropertyNodeOrAlias"* %96, %101
  br i1 %102, label %103, label %92

103:                                              ; preds = %4, %16, %92, %57
  %104 = phi %"class.blink::TransformPaintPropertyNodeOrAlias"* [ %59, %57 ], [ %96, %92 ], [ %0, %16 ], [ %1, %4 ]
  ret %"class.blink::TransformPaintPropertyNodeOrAlias"* %104
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.blink::ClipPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_28ClipPaintPropertyNodeOrAliasES2_(%"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::ClipPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %8
  %5 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %11, %8 ], [ %0, %2 ]
  %6 = phi i32 [ %9, %8 ], [ 0, %2 ]
  %7 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %5, %1
  br i1 %7, label %103, label %8

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %6, 1
  %10 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %5, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %8, %2
  %14 = phi i32 [ 0, %2 ], [ %9, %8 ]
  %15 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %1, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13, %20
  %17 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %23, %20 ], [ %1, %13 ]
  %18 = phi i32 [ %21, %20 ], [ 0, %13 ]
  %19 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %17, %0
  br i1 %19, label %103, label %20

20:                                               ; preds = %16
  %21 = add nuw nsw i32 %18, 1
  %22 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 3, i32 0
  %23 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %22, align 8
  %24 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %20, %13
  %26 = phi i32 [ 0, %13 ], [ %21, %20 ]
  %27 = ptrtoint %"class.blink::ClipPaintPropertyNodeOrAlias"* %0 to i64
  %28 = ptrtoint %"class.blink::ClipPaintPropertyNodeOrAlias"* %1 to i64
  %29 = icmp slt i32 %14, %26
  %30 = select i1 %29, i32 %26, i32 %14
  %31 = select i1 %29, i32 %14, i32 %26
  %32 = select i1 %29, i64 %28, i64 %27
  %33 = select i1 %29, i64 %27, i64 %28
  %34 = icmp sgt i32 %30, %31
  br i1 %34, label %35, label %57

35:                                               ; preds = %25
  %36 = sub i32 %30, %31
  %37 = xor i32 %31, -1
  %38 = add i32 %30, %37
  %39 = and i32 %36, 7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %35, %41
  %42 = phi i64 [ %48, %41 ], [ %32, %35 ]
  %43 = phi i32 [ %49, %41 ], [ %30, %35 ]
  %44 = phi i32 [ %50, %41 ], [ %39, %35 ]
  %45 = inttoptr i64 %42 to %"class.blink::PaintPropertyNode.0"*
  %46 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %45, i64 0, i32 3, i32 0
  %47 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i32 %43, -1
  %50 = add i32 %44, -1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !4

52:                                               ; preds = %41, %35
  %53 = phi i64 [ %32, %35 ], [ %48, %41 ]
  %54 = phi i32 [ %30, %35 ], [ %49, %41 ]
  %55 = phi i64 [ undef, %35 ], [ %48, %41 ]
  %56 = icmp ult i32 %38, 7
  br i1 %56, label %57, label %62

57:                                               ; preds = %52, %62, %25
  %58 = phi i64 [ %32, %25 ], [ %55, %52 ], [ %89, %62 ]
  %59 = inttoptr i64 %58 to %"class.blink::ClipPaintPropertyNodeOrAlias"*
  %60 = inttoptr i64 %33 to %"class.blink::ClipPaintPropertyNodeOrAlias"*
  %61 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %59, %60
  br i1 %61, label %103, label %92

62:                                               ; preds = %52, %62
  %63 = phi i64 [ %89, %62 ], [ %53, %52 ]
  %64 = phi i32 [ %90, %62 ], [ %54, %52 ]
  %65 = inttoptr i64 %63 to %"class.blink::PaintPropertyNode.0"*
  %66 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %65, i64 0, i32 3, i32 0
  %67 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %66 to %"class.blink::PaintPropertyNode.0"**
  %68 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %68, i64 0, i32 3, i32 0
  %70 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %69 to %"class.blink::PaintPropertyNode.0"**
  %71 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %71, i64 0, i32 3, i32 0
  %73 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %72 to %"class.blink::PaintPropertyNode.0"**
  %74 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %74, i64 0, i32 3, i32 0
  %76 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %75 to %"class.blink::PaintPropertyNode.0"**
  %77 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %77, i64 0, i32 3, i32 0
  %79 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %78 to %"class.blink::PaintPropertyNode.0"**
  %80 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %80, i64 0, i32 3, i32 0
  %82 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %81 to %"class.blink::PaintPropertyNode.0"**
  %83 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %83, i64 0, i32 3, i32 0
  %85 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %84 to %"class.blink::PaintPropertyNode.0"**
  %86 = load %"class.blink::PaintPropertyNode.0"*, %"class.blink::PaintPropertyNode.0"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %86, i64 0, i32 3, i32 0
  %88 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i32 %64, -8
  %91 = icmp sgt i32 %90, %31
  br i1 %91, label %62, label %57

92:                                               ; preds = %57, %92
  %93 = phi i64 [ %100, %92 ], [ %33, %57 ]
  %94 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %96, %92 ], [ %59, %57 ]
  %95 = getelementptr inbounds %"class.blink::ClipPaintPropertyNodeOrAlias", %"class.blink::ClipPaintPropertyNodeOrAlias"* %94, i64 0, i32 0, i32 3, i32 0
  %96 = load %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"** %95, align 8
  %97 = inttoptr i64 %93 to %"class.blink::PaintPropertyNode.0"*
  %98 = getelementptr inbounds %"class.blink::PaintPropertyNode.0", %"class.blink::PaintPropertyNode.0"* %97, i64 0, i32 3, i32 0
  %99 = bitcast %"class.blink::ClipPaintPropertyNodeOrAlias"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.blink::ClipPaintPropertyNodeOrAlias"*
  %102 = icmp eq %"class.blink::ClipPaintPropertyNodeOrAlias"* %96, %101
  br i1 %102, label %103, label %92

103:                                              ; preds = %4, %16, %92, %57
  %104 = phi %"class.blink::ClipPaintPropertyNodeOrAlias"* [ %59, %57 ], [ %96, %92 ], [ %0, %16 ], [ %1, %4 ]
  ret %"class.blink::ClipPaintPropertyNodeOrAlias"* %104
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(24) %"class.blink::EffectPaintPropertyNodeOrAlias"* @_ZN5blink28LowestCommonAncestorInternalERKNS_30EffectPaintPropertyNodeOrAliasES2_(%"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24), %"class.blink::EffectPaintPropertyNodeOrAlias"* dereferenceable(24)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %8
  %5 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %11, %8 ], [ %0, %2 ]
  %6 = phi i32 [ %9, %8 ], [ 0, %2 ]
  %7 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %5, %1
  br i1 %7, label %103, label %8

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %6, 1
  %10 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %5, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %10, align 8
  %12 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %8, %2
  %14 = phi i32 [ 0, %2 ], [ %9, %8 ]
  %15 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %1, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13, %20
  %17 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %23, %20 ], [ %1, %13 ]
  %18 = phi i32 [ %21, %20 ], [ 0, %13 ]
  %19 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, %0
  br i1 %19, label %103, label %20

20:                                               ; preds = %16
  %21 = add nuw nsw i32 %18, 1
  %22 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %17, i64 0, i32 0, i32 3, i32 0
  %23 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %22, align 8
  %24 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %20, %13
  %26 = phi i32 [ 0, %13 ], [ %21, %20 ]
  %27 = ptrtoint %"class.blink::EffectPaintPropertyNodeOrAlias"* %0 to i64
  %28 = ptrtoint %"class.blink::EffectPaintPropertyNodeOrAlias"* %1 to i64
  %29 = icmp slt i32 %14, %26
  %30 = select i1 %29, i32 %26, i32 %14
  %31 = select i1 %29, i32 %14, i32 %26
  %32 = select i1 %29, i64 %28, i64 %27
  %33 = select i1 %29, i64 %27, i64 %28
  %34 = icmp sgt i32 %30, %31
  br i1 %34, label %35, label %57

35:                                               ; preds = %25
  %36 = sub i32 %30, %31
  %37 = xor i32 %31, -1
  %38 = add i32 %30, %37
  %39 = and i32 %36, 7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %35, %41
  %42 = phi i64 [ %48, %41 ], [ %32, %35 ]
  %43 = phi i32 [ %49, %41 ], [ %30, %35 ]
  %44 = phi i32 [ %50, %41 ], [ %39, %35 ]
  %45 = inttoptr i64 %42 to %"class.blink::PaintPropertyNode.4"*
  %46 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %45, i64 0, i32 3, i32 0
  %47 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i32 %43, -1
  %50 = add i32 %44, -1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !5

52:                                               ; preds = %41, %35
  %53 = phi i64 [ %32, %35 ], [ %48, %41 ]
  %54 = phi i32 [ %30, %35 ], [ %49, %41 ]
  %55 = phi i64 [ undef, %35 ], [ %48, %41 ]
  %56 = icmp ult i32 %38, 7
  br i1 %56, label %57, label %62

57:                                               ; preds = %52, %62, %25
  %58 = phi i64 [ %32, %25 ], [ %55, %52 ], [ %89, %62 ]
  %59 = inttoptr i64 %58 to %"class.blink::EffectPaintPropertyNodeOrAlias"*
  %60 = inttoptr i64 %33 to %"class.blink::EffectPaintPropertyNodeOrAlias"*
  %61 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %59, %60
  br i1 %61, label %103, label %92

62:                                               ; preds = %52, %62
  %63 = phi i64 [ %89, %62 ], [ %53, %52 ]
  %64 = phi i32 [ %90, %62 ], [ %54, %52 ]
  %65 = inttoptr i64 %63 to %"class.blink::PaintPropertyNode.4"*
  %66 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %65, i64 0, i32 3, i32 0
  %67 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %66 to %"class.blink::PaintPropertyNode.4"**
  %68 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %68, i64 0, i32 3, i32 0
  %70 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %69 to %"class.blink::PaintPropertyNode.4"**
  %71 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %71, i64 0, i32 3, i32 0
  %73 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %72 to %"class.blink::PaintPropertyNode.4"**
  %74 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %74, i64 0, i32 3, i32 0
  %76 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %75 to %"class.blink::PaintPropertyNode.4"**
  %77 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %77, i64 0, i32 3, i32 0
  %79 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %78 to %"class.blink::PaintPropertyNode.4"**
  %80 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %80, i64 0, i32 3, i32 0
  %82 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %81 to %"class.blink::PaintPropertyNode.4"**
  %83 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %83, i64 0, i32 3, i32 0
  %85 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %84 to %"class.blink::PaintPropertyNode.4"**
  %86 = load %"class.blink::PaintPropertyNode.4"*, %"class.blink::PaintPropertyNode.4"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %86, i64 0, i32 3, i32 0
  %88 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i32 %64, -8
  %91 = icmp sgt i32 %90, %31
  br i1 %91, label %62, label %57

92:                                               ; preds = %57, %92
  %93 = phi i64 [ %100, %92 ], [ %33, %57 ]
  %94 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %96, %92 ], [ %59, %57 ]
  %95 = getelementptr inbounds %"class.blink::EffectPaintPropertyNodeOrAlias", %"class.blink::EffectPaintPropertyNodeOrAlias"* %94, i64 0, i32 0, i32 3, i32 0
  %96 = load %"class.blink::EffectPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"** %95, align 8
  %97 = inttoptr i64 %93 to %"class.blink::PaintPropertyNode.4"*
  %98 = getelementptr inbounds %"class.blink::PaintPropertyNode.4", %"class.blink::PaintPropertyNode.4"* %97, i64 0, i32 3, i32 0
  %99 = bitcast %"class.blink::EffectPaintPropertyNodeOrAlias"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.blink::EffectPaintPropertyNodeOrAlias"*
  %102 = icmp eq %"class.blink::EffectPaintPropertyNodeOrAlias"* %96, %101
  br i1 %102, label %103, label %92

103:                                              ; preds = %4, %16, %92, %57
  %104 = phi %"class.blink::EffectPaintPropertyNodeOrAlias"* [ %59, %57 ], [ %96, %92 ], [ %0, %16 ], [ %1, %4 ]
  ret %"class.blink::EffectPaintPropertyNodeOrAlias"* %104
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(168) %"class.blink::ScrollPaintPropertyNode"* @_ZN5blink28LowestCommonAncestorInternalERKNS_23ScrollPaintPropertyNodeES2_(%"class.blink::ScrollPaintPropertyNode"* dereferenceable(168), %"class.blink::ScrollPaintPropertyNode"* dereferenceable(168)) local_unnamed_addr #0 {
  %3 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2, %8
  %5 = phi %"class.blink::ScrollPaintPropertyNode"* [ %11, %8 ], [ %0, %2 ]
  %6 = phi i32 [ %9, %8 ], [ 0, %2 ]
  %7 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %5, %1
  br i1 %7, label %103, label %8

8:                                                ; preds = %4
  %9 = add nuw nsw i32 %6, 1
  %10 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %5, i64 0, i32 0, i32 3, i32 0
  %11 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %10, align 8
  %12 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %11, null
  br i1 %12, label %13, label %4

13:                                               ; preds = %8, %2
  %14 = phi i32 [ 0, %2 ], [ %9, %8 ]
  %15 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %1, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %13, %20
  %17 = phi %"class.blink::ScrollPaintPropertyNode"* [ %23, %20 ], [ %1, %13 ]
  %18 = phi i32 [ %21, %20 ], [ 0, %13 ]
  %19 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %17, %0
  br i1 %19, label %103, label %20

20:                                               ; preds = %16
  %21 = add nuw nsw i32 %18, 1
  %22 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %17, i64 0, i32 0, i32 3, i32 0
  %23 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %22, align 8
  %24 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %23, null
  br i1 %24, label %25, label %16

25:                                               ; preds = %20, %13
  %26 = phi i32 [ 0, %13 ], [ %21, %20 ]
  %27 = ptrtoint %"class.blink::ScrollPaintPropertyNode"* %0 to i64
  %28 = ptrtoint %"class.blink::ScrollPaintPropertyNode"* %1 to i64
  %29 = icmp slt i32 %14, %26
  %30 = select i1 %29, i32 %26, i32 %14
  %31 = select i1 %29, i32 %14, i32 %26
  %32 = select i1 %29, i64 %28, i64 %27
  %33 = select i1 %29, i64 %27, i64 %28
  %34 = icmp sgt i32 %30, %31
  br i1 %34, label %35, label %57

35:                                               ; preds = %25
  %36 = sub i32 %30, %31
  %37 = xor i32 %31, -1
  %38 = add i32 %30, %37
  %39 = and i32 %36, 7
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %52, label %41

41:                                               ; preds = %35, %41
  %42 = phi i64 [ %48, %41 ], [ %32, %35 ]
  %43 = phi i32 [ %49, %41 ], [ %30, %35 ]
  %44 = phi i32 [ %50, %41 ], [ %39, %35 ]
  %45 = inttoptr i64 %42 to %"class.blink::PaintPropertyNode.8"*
  %46 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %45, i64 0, i32 3, i32 0
  %47 = bitcast %"class.blink::ScrollPaintPropertyNode"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add nsw i32 %43, -1
  %50 = add i32 %44, -1
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !6

52:                                               ; preds = %41, %35
  %53 = phi i64 [ %32, %35 ], [ %48, %41 ]
  %54 = phi i32 [ %30, %35 ], [ %49, %41 ]
  %55 = phi i64 [ undef, %35 ], [ %48, %41 ]
  %56 = icmp ult i32 %38, 7
  br i1 %56, label %57, label %62

57:                                               ; preds = %52, %62, %25
  %58 = phi i64 [ %32, %25 ], [ %55, %52 ], [ %89, %62 ]
  %59 = inttoptr i64 %58 to %"class.blink::ScrollPaintPropertyNode"*
  %60 = inttoptr i64 %33 to %"class.blink::ScrollPaintPropertyNode"*
  %61 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %59, %60
  br i1 %61, label %103, label %92

62:                                               ; preds = %52, %62
  %63 = phi i64 [ %89, %62 ], [ %53, %52 ]
  %64 = phi i32 [ %90, %62 ], [ %54, %52 ]
  %65 = inttoptr i64 %63 to %"class.blink::PaintPropertyNode.8"*
  %66 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %65, i64 0, i32 3, i32 0
  %67 = bitcast %"class.blink::ScrollPaintPropertyNode"** %66 to %"class.blink::PaintPropertyNode.8"**
  %68 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %68, i64 0, i32 3, i32 0
  %70 = bitcast %"class.blink::ScrollPaintPropertyNode"** %69 to %"class.blink::PaintPropertyNode.8"**
  %71 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %71, i64 0, i32 3, i32 0
  %73 = bitcast %"class.blink::ScrollPaintPropertyNode"** %72 to %"class.blink::PaintPropertyNode.8"**
  %74 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %74, i64 0, i32 3, i32 0
  %76 = bitcast %"class.blink::ScrollPaintPropertyNode"** %75 to %"class.blink::PaintPropertyNode.8"**
  %77 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %77, i64 0, i32 3, i32 0
  %79 = bitcast %"class.blink::ScrollPaintPropertyNode"** %78 to %"class.blink::PaintPropertyNode.8"**
  %80 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %80, i64 0, i32 3, i32 0
  %82 = bitcast %"class.blink::ScrollPaintPropertyNode"** %81 to %"class.blink::PaintPropertyNode.8"**
  %83 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %83, i64 0, i32 3, i32 0
  %85 = bitcast %"class.blink::ScrollPaintPropertyNode"** %84 to %"class.blink::PaintPropertyNode.8"**
  %86 = load %"class.blink::PaintPropertyNode.8"*, %"class.blink::PaintPropertyNode.8"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %86, i64 0, i32 3, i32 0
  %88 = bitcast %"class.blink::ScrollPaintPropertyNode"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = add nsw i32 %64, -8
  %91 = icmp sgt i32 %90, %31
  br i1 %91, label %62, label %57

92:                                               ; preds = %57, %92
  %93 = phi i64 [ %100, %92 ], [ %33, %57 ]
  %94 = phi %"class.blink::ScrollPaintPropertyNode"* [ %96, %92 ], [ %59, %57 ]
  %95 = getelementptr inbounds %"class.blink::ScrollPaintPropertyNode", %"class.blink::ScrollPaintPropertyNode"* %94, i64 0, i32 0, i32 3, i32 0
  %96 = load %"class.blink::ScrollPaintPropertyNode"*, %"class.blink::ScrollPaintPropertyNode"** %95, align 8
  %97 = inttoptr i64 %93 to %"class.blink::PaintPropertyNode.8"*
  %98 = getelementptr inbounds %"class.blink::PaintPropertyNode.8", %"class.blink::PaintPropertyNode.8"* %97, i64 0, i32 3, i32 0
  %99 = bitcast %"class.blink::ScrollPaintPropertyNode"** %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = inttoptr i64 %100 to %"class.blink::ScrollPaintPropertyNode"*
  %102 = icmp eq %"class.blink::ScrollPaintPropertyNode"* %96, %101
  br i1 %102, label %103, label %92

103:                                              ; preds = %4, %16, %92, %57
  %104 = phi %"class.blink::ScrollPaintPropertyNode"* [ %59, %57 ], [ %96, %92 ], [ %0, %16 ], [ %1, %4 ]
  ret %"class.blink::ScrollPaintPropertyNode"* %104
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE(i8 zeroext) local_unnamed_addr #1 {
  %2 = sext i8 %0 to i64
  %3 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN5blink31PaintPropertyChangeTypeToStringENS_23PaintPropertyChangeTypeE, i64 0, i64 %2
  %4 = load i8*, i8** %3, align 8
  ret i8* %4
}

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = distinct !{!5, !3}
!6 = distinct !{!6, !3}
