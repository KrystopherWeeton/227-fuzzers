; ModuleID = '../../third_party/blink/renderer/core/css/css_paint_value.cc'
source_filename = "../../third_party/blink/renderer/core/css/css_paint_value.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.179" }
%"struct.std::__1::atomic.179" = type { %"struct.std::__1::__atomic_base.180" }
%"struct.std::__1::__atomic_base.180" = type { %"struct.std::__1::__atomic_base.181" }
%"struct.std::__1::__atomic_base.181" = type { %"struct.std::__1::__cxx_atomic_impl.182" }
%"struct.std::__1::__cxx_atomic_impl.182" = type { %"struct.std::__1::__cxx_atomic_base_impl.183" }
%"struct.std::__1::__cxx_atomic_base_impl.183" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.134", %"class.std::__1::unique_ptr.134", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.144", %"class.std::__1::unique_ptr.150", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.162", %"class.std::__1::unique_ptr.168", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.174", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.10", %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.45", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.52", %"class.std::__1::unique_ptr.59", %"class.std::__1::unique_ptr.66", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.73", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.87", %"class.std::__1::unique_ptr.94", %"class.std::__1::unique_ptr.117", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.10" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i64 }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.blink::Worklist.48"* }
%"class.blink::Worklist.48" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.52" = type { %"class.std::__1::__compressed_pair.53" }
%"class.std::__1::__compressed_pair.53" = type { %"struct.std::__1::__compressed_pair_elem.54" }
%"struct.std::__1::__compressed_pair_elem.54" = type { %"class.blink::Worklist.55"* }
%"class.blink::Worklist.55" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::Worklist.62"* }
%"class.blink::Worklist.62" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.66" = type { %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.68" }
%"struct.std::__1::__compressed_pair_elem.68" = type { %"class.blink::Worklist.69"* }
%"class.blink::Worklist.69" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.73" = type { %"class.std::__1::__compressed_pair.74" }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"class.blink::Worklist.76"* }
%"class.blink::Worklist.76" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::Worklist.83"* }
%"class.blink::Worklist.83" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.87" = type { %"class.std::__1::__compressed_pair.88" }
%"class.std::__1::__compressed_pair.88" = type { %"struct.std::__1::__compressed_pair_elem.89" }
%"struct.std::__1::__compressed_pair_elem.89" = type { %"class.blink::Worklist.90"* }
%"class.blink::Worklist.90" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic" }
%"class.std::__1::unique_ptr.94" = type { %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.97", %"class.std::__1::__compressed_pair.104", %"class.std::__1::__compressed_pair.109", %"class.std::__1::__compressed_pair.111", [4 x i8] }>
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99", %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { i64 }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { float }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.120", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.134" = type { %"class.std::__1::__compressed_pair.135" }
%"class.std::__1::__compressed_pair.135" = type { %"struct.std::__1::__compressed_pair_elem.136" }
%"struct.std::__1::__compressed_pair_elem.136" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.142" }
%"class.WTF::VectorBuffer.142" = type { %"class.WTF::VectorBufferBase.143" }
%"class.WTF::VectorBufferBase.143" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.150" = type { %"class.std::__1::__compressed_pair.151" }
%"class.std::__1::__compressed_pair.151" = type { %"struct.std::__1::__compressed_pair_elem.152" }
%"struct.std::__1::__compressed_pair_elem.152" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.48"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.55"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.62"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.69"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.76"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.825" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.825" = type { %"struct.std::__1::__compressed_pair_elem.826" }
%"struct.std::__1::__compressed_pair_elem.826" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.162" = type { %"class.std::__1::__compressed_pair.163" }
%"class.std::__1::__compressed_pair.163" = type { %"struct.std::__1::__compressed_pair_elem.164" }
%"struct.std::__1::__compressed_pair_elem.164" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.168" = type { %"class.std::__1::__compressed_pair.169" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.170" }
%"struct.std::__1::__compressed_pair_elem.170" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.174" = type { %"struct.std::__1::__atomic_base.175" }
%"struct.std::__1::__atomic_base.175" = type { %"struct.std::__1::__cxx_atomic_impl.176" }
%"struct.std::__1::__cxx_atomic_impl.176" = type { %"struct.std::__1::__cxx_atomic_base_impl.177" }
%"struct.std::__1::__cxx_atomic_base_impl.177" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.276" }
%"struct.std::__1::atomic.276" = type { %"struct.std::__1::__atomic_base.277" }
%"struct.std::__1::__atomic_base.277" = type { %"struct.std::__1::__atomic_base.278" }
%"struct.std::__1::__atomic_base.278" = type { %"struct.std::__1::__cxx_atomic_impl.279" }
%"struct.std::__1::__cxx_atomic_impl.279" = type { %"struct.std::__1::__cxx_atomic_base_impl.280" }
%"struct.std::__1::__cxx_atomic_base_impl.280" = type { i32 }
%"class.blink::CSSPaintValue" = type <{ %"class.blink::CSSImageGeneratorValue", i8, [7 x i8], %"class.blink::Member", %"class.blink::HeapHashMap", %"class.blink::Member.560", %"class.blink::Member.566", %"class.WTF::Vector.577", i32, [4 x i8] }>
%"class.blink::CSSImageGeneratorValue" = type { %"class.blink::CSSValue", [5 x i8], %"class.WTF::HashMap", %"class.blink::GeneratedImageCache", %"class.blink::SelfKeepAlive" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type <{ %"class.blink::ImageResourceObserver"*, %"struct.blink::SizeAndCount", [4 x i8] }>
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"struct.blink::SizeAndCount" = type { %"class.blink::FloatSize", i32 }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::GeneratedImageCache" = type { %"class.WTF::HashCountedSet", %"class.WTF::HashMap.5" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.0" }
%"class.WTF::HashMap.0" = type { %"class.WTF::HashTable.1" }
%"class.WTF::HashTable.1" = type <{ %"struct.WTF::KeyValuePair.4"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4" = type opaque
%"class.WTF::HashMap.5" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair.9"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.9" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::CSSImageGeneratorValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::CSSCustomIdentValue"* }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.186" }
%"class.WTF::HashMap.186" = type { %"class.WTF::HashTable.187" }
%"class.WTF::HashTable.187" = type <{ %"struct.WTF::KeyValuePair.189"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.189" = type { %"class.blink::WeakMember", %"class.blink::Member.556" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.272", %"class.WTF::Vector.272", i8, i32, %"class.blink::Member.283", %"class.blink::Member.285", %"class.blink::Member.287", %"class.blink::Member.289", %"class.blink::Member.291", %"class.blink::Member.293", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.301", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.307", %"class.blink::Member.309", %"class.blink::Member.262", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.312", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.220", %"class.blink::Member.343", %"class.blink::Member.220", %"class.blink::Member.220", %"class.blink::Member.220", %"class.blink::UserActionElementSet", %"class.blink::Member.352", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.359", i16, i8, %"class.blink::Member.366", %"class.blink::Member.368", %"class.blink::Member.370", %"class.blink::Member.372", %"class.blink::TextLinkColors", %"class.blink::Member.374", i8, [7 x i8], %"class.blink::HeapHashMap.376", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.220", %"class.WTF::Vector.383", %"class.blink::Member.388", %"class.blink::Member.390", i8, %"class.blink::Member.220", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.392", %"class.blink::HeapVector.394", %"class.std::__1::unique_ptr.402", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.408", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.421", %"class.WTF::Vector.423", i8, i8, %"class.std::__1::unique_ptr.428", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.434", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.442", i8, i32, %"class.blink::Member.444", %"class.blink::Member.446", %"class.blink::Member.448", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.450", %"class.WTF::HashMap.452", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::Member.461", %"class.blink::Member.463", %"class.blink::Member.203", %"class.blink::Member.203", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.465", i8, i32, %"class.blink::Member.472", %"class.blink::Member.474", i32, %"class.blink::Member.476", %"class.blink::Member.478", %"class.blink::Member.480", %"class.std::__1::unique_ptr.482", i64, %"class.std::__1::unique_ptr.488", i32, i32, %"class.blink::Member.503", %"class.blink::Member.505", %"class.blink::Member.507", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.509", %"class.WTF::Vector.511", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.516", %"class.blink::Member.523", %"class.std::__1::unique_ptr.525", %"class.blink::Member.531", i8, i8, %"class.WTF::String", %"class.blink::Member.533", i8, [7 x i8], %"class.blink::HeapHashMap.535", %"class.blink::HeapObserverSet", %"class.blink::Member.549", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.551", i32, i8, i8, %"class.blink::WeakMember.553", %"class.blink::Member.554" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.193", %"class.blink::Member.193" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.193", %"class.blink::Member.195", %"class.blink::Member.193", %"class.blink::Member.193", %"class.blink::Member.197" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.195" = type { %"class.blink::MemberBase.196" }
%"class.blink::MemberBase.196" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.193" = type { %"class.blink::MemberBase.194" }
%"class.blink::MemberBase.194" = type { %"class.blink::Node"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.201", %"class.blink::Member.203", %"class.blink::Member.195", %"class.blink::Member.205", %"class.blink::Member.205", %"class.blink::Member.245", %"class.blink::Member.247", %"class.blink::Member.249", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.254", %"class.blink::HeapVector.256" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.201" = type { %"class.blink::MemberBase.202" }
%"class.blink::MemberBase.202" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.205" = type { %"class.blink::MemberBase.206" }
%"class.blink::MemberBase.206" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.209" }
%"class.blink::HeapHashMap.209" = type { %"class.WTF::HashMap.212" }
%"class.WTF::HashMap.212" = type { %"class.WTF::HashTable.213" }
%"class.WTF::HashTable.213" = type <{ %"struct.WTF::KeyValuePair.215"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.215" = type { %"class.WTF::AtomicString", %"class.blink::Member.216" }
%"class.blink::Member.216" = type { %"class.blink::MemberBase.217" }
%"class.blink::MemberBase.217" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.220", i32, %"class.blink::HeapVector" }
%"class.blink::Member.245" = type { %"class.blink::MemberBase.246" }
%"class.blink::MemberBase.246" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.247" = type { %"class.blink::MemberBase.248" }
%"class.blink::MemberBase.248" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.249" = type { %"class.blink::MemberBase.250" }
%"class.blink::MemberBase.250" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.251" }
%"class.blink::Member.251" = type { %"class.blink::MemberBase.252" }
%"class.blink::MemberBase.252" = type { %"class.blink::HeapHashMap.253"* }
%"class.blink::HeapHashMap.253" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.256" = type { %"class.WTF::Vector.259" }
%"class.WTF::Vector.259" = type { %"class.WTF::VectorBuffer.260" }
%"class.WTF::VectorBuffer.260" = type { %"class.WTF::VectorBufferBase.261" }
%"class.WTF::VectorBufferBase.261" = type { %"class.blink::Member.262"*, i32, i32 }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.265" }
%"class.blink::HeapHashMap.265" = type { %"class.WTF::HashMap.268" }
%"class.WTF::HashMap.268" = type { %"class.WTF::HashTable.269" }
%"class.WTF::HashTable.269" = type <{ %"struct.WTF::KeyValuePair.271"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.271" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.272" = type { %"class.WTF::VectorBuffer.273" }
%"class.WTF::VectorBuffer.273" = type { %"class.WTF::VectorBufferBase.274" }
%"class.WTF::VectorBufferBase.274" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.276" }
%"class.blink::Member.283" = type { %"class.blink::MemberBase.284" }
%"class.blink::MemberBase.284" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.285" = type { %"class.blink::MemberBase.286" }
%"class.blink::MemberBase.286" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.606", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.676", i32, i8, [3 x i8], %"class.blink::HeapVector.678", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.686", %"class.blink::Member.688", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.697", %"class.blink::Member.820", %"class.blink::Member.822", i8, [7 x i8] }>
%"class.blink::Supplementable.606" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.607" }
%"class.blink::HeapHashMap.607" = type { %"class.WTF::HashMap.610" }
%"class.WTF::HashMap.610" = type { %"class.WTF::HashTable.611" }
%"class.WTF::HashTable.611" = type <{ %"struct.WTF::KeyValuePair.613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.613" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.622" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.614" }
%"class.blink::HeapObserverSet.614" = type { i32, [4 x i8], %"class.blink::HeapHashSet.615" }
%"class.blink::HeapHashSet.615" = type { %"class.WTF::HashSet.618" }
%"class.WTF::HashSet.618" = type { %"class.WTF::HashTable.619" }
%"class.WTF::HashTable.619" = type <{ %"class.blink::WeakMember.621"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.621" = type opaque
%"class.blink::Supplementable.622" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.623" }
%"class.blink::HeapHashMap.623" = type { %"class.WTF::HashMap.626" }
%"class.WTF::HashMap.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"struct.WTF::KeyValuePair.629"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.629" = type { i8*, %"class.blink::Member.2327" }
%"class.blink::Member.2327" = type { %"class.blink::MemberBase.2328" }
%"class.blink::MemberBase.2328" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2329" }
%"class.blink::Member.2329" = type { %"class.blink::MemberBase.2330" }
%"class.blink::MemberBase.2330" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.630, %"class.std::__1::unique_ptr.635", %"class.std::__1::unique_ptr.635", %"class.std::__1::unique_ptr.666", %"class.std::__1::unique_ptr.666", %"class.blink::Member.285", i32, [4 x i8], %"class.WTF::HashSet.672", i32, i32 }
%class.scoped_refptr.630 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.631", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.634 }
%"class.WTF::RefCounted.631" = type { %"class.base::RefCounted.632" }
%"class.base::RefCounted.632" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.633 }
%union.anon.633 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.634 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.635" = type { %"class.std::__1::__compressed_pair.636" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.637" }
%"struct.std::__1::__compressed_pair_elem.637" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.653", %"class.std::__1::map.662"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.638" }
%"class.std::__1::__compressed_pair.638" = type { %"struct.std::__1::__compressed_pair_elem.639" }
%"struct.std::__1::__compressed_pair_elem.639" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.640 }
%union.anon.640 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.645", %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.645" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"struct.std::__1::__compressed_pair_elem.646" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.653" = type { %"class.std::__1::__tree.654" }
%"class.std::__1::__tree.654" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.655", %"class.std::__1::__compressed_pair.659" }
%"class.std::__1::__compressed_pair.655" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.659" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.662" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.672" = type { %"class.WTF::HashTable.673" }
%"class.WTF::HashTable.673" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.676" = type { %"class.blink::MemberBase.677" }
%"class.blink::MemberBase.677" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.678" = type { %"class.WTF::Vector.681" }
%"class.WTF::Vector.681" = type { %"class.WTF::VectorBuffer.682" }
%"class.WTF::VectorBuffer.682" = type { %"class.WTF::VectorBufferBase.683" }
%"class.WTF::VectorBufferBase.683" = type { %"class.blink::Member.684"*, i32, i32 }
%"class.blink::Member.684" = type opaque
%"class.blink::Member.686" = type { %"class.blink::MemberBase.687" }
%"class.blink::MemberBase.687" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.688" = type { %"class.blink::MemberBase.689" }
%"class.blink::MemberBase.689" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.690", i32, i32 }
%"class.blink::HeapHashMap.690" = type { %"class.WTF::HashMap.693" }
%"class.WTF::HashMap.693" = type { %"class.WTF::HashTable.694" }
%"class.WTF::HashTable.694" = type <{ %"struct.WTF::KeyValuePair.696"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.696" = type opaque
%"class.std::__1::unique_ptr.697" = type { %"class.std::__1::__compressed_pair.698" }
%"class.std::__1::__compressed_pair.698" = type { %"struct.std::__1::__compressed_pair_elem.699" }
%"struct.std::__1::__compressed_pair_elem.699" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.700" }
%"class.std::__1::unique_ptr.700" = type { %"class.std::__1::__compressed_pair.701" }
%"class.std::__1::__compressed_pair.701" = type { %"struct.std::__1::__compressed_pair_elem.702" }
%"struct.std::__1::__compressed_pair_elem.702" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.703" }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.mojo::StructPtr.706"*, i32, i32 }
%"class.mojo::StructPtr.706" = type { %"class.std::__1::unique_ptr.707" }
%"class.std::__1::unique_ptr.707" = type { %"class.std::__1::__compressed_pair.708" }
%"class.std::__1::__compressed_pair.708" = type { %"struct.std::__1::__compressed_pair_elem.709" }
%"struct.std::__1::__compressed_pair_elem.709" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.710", %"class.WTF::HashMap.717", %"class.WTF::HashMap.722", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.583", i32, %"class.mojo::StructPtr.727", %"class.WTF::Vector.583" }
%"class.mojo::StructPtr.710" = type { %"class.std::__1::unique_ptr.711" }
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ %"struct.WTF::KeyValuePair.721"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.721" = type opaque
%"class.WTF::HashMap.722" = type { %"class.WTF::HashTable.723" }
%"class.WTF::HashTable.723" = type <{ %"struct.WTF::KeyValuePair.726"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.726" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.727" = type { %"class.std::__1::unique_ptr.728" }
%"class.std::__1::unique_ptr.728" = type { %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.730" }
%"struct.std::__1::__compressed_pair_elem.730" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.583", i8, i8, [6 x i8] }>
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.811" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.742", i32 }>
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.745", %"class.absl::optional.746", %"class.absl::optional.751", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.764", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.786", %"class.std::__1::map.797", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.806", i8, %class.scoped_refptr.756, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.807" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.745" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.746" = type { %"class.absl::optional_internal::optional_data.747" }
%"class.absl::optional_internal::optional_data.747" = type { %"class.absl::optional_internal::optional_data_base.748" }
%"class.absl::optional_internal::optional_data_base.748" = type { %"class.absl::optional_internal::optional_data_dtor_base.749" }
%"class.absl::optional_internal::optional_data_dtor_base.749" = type { i8, %union.anon.750 }
%union.anon.750 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.751" = type { %"class.absl::optional_internal::optional_data.752" }
%"class.absl::optional_internal::optional_data.752" = type { %"class.absl::optional_internal::optional_data_base.753" }
%"class.absl::optional_internal::optional_data_base.753" = type { %"class.absl::optional_internal::optional_data_dtor_base.754" }
%"class.absl::optional_internal::optional_data_dtor_base.754" = type { i8, %union.anon.755 }
%union.anon.755 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.756, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.757" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.757" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.335 }
%class.scoped_refptr.335 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.336", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.336" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.337" }
%"struct.std::__1::atomic.337" = type { %"struct.std::__1::__atomic_base.338" }
%"struct.std::__1::__atomic_base.338" = type { %"struct.std::__1::__atomic_base.339" }
%"struct.std::__1::__atomic_base.339" = type { %"struct.std::__1::__cxx_atomic_impl.340" }
%"struct.std::__1::__cxx_atomic_impl.340" = type { %"struct.std::__1::__cxx_atomic_base_impl.341" }
%"struct.std::__1::__cxx_atomic_base_impl.341" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.762 }
%class.scoped_refptr.762 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.824", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.756, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.179", [4 x i8] }>
%"class.base::RefCountedThreadSafe.824" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.763 }
%class.scoped_refptr.763 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.764" = type { %"class.std::__1::__compressed_pair.765" }
%"class.std::__1::__compressed_pair.765" = type { %"struct.std::__1::__compressed_pair_elem.766" }
%"struct.std::__1::__compressed_pair_elem.766" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.767", %class.scoped_refptr.768 }
%"class.base::RepeatingCallback.767" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.768 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.769", [4 x i8] }>
%"class.base::RefCountedThreadSafe.769" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.773", %"class.std::__1::unique_ptr.779", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.785" }
%"class.std::__1::unique_ptr.773" = type { %"class.std::__1::__compressed_pair.774" }
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.785" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.786" = type { %"class.std::__1::__tree.787" }
%"class.std::__1::__tree.787" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.788", %"class.std::__1::__compressed_pair.792" }
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.792" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.797" = type { %"class.std::__1::__tree.798" }
%"class.std::__1::__tree.798" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.799", %"class.std::__1::__compressed_pair.803" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::OnceCallback.806" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.756 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.334" }>
%"class.base::RefCountedThreadSafe.334" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.807" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.811" = type { %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.820" = type { %"class.blink::MemberBase.821" }
%"class.blink::MemberBase.821" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.822" = type { %"class.blink::MemberBase.823" }
%"class.blink::MemberBase.823" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.287" = type { %"class.blink::MemberBase.288" }
%"class.blink::MemberBase.288" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.291" = type { %"class.blink::MemberBase.292" }
%"class.blink::MemberBase.292" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.293" = type { %"class.blink::MemberBase.294" }
%"class.blink::MemberBase.294" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.295" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.blink::KURL"* }
%"class.blink::Member.307" = type { %"class.blink::MemberBase.308" }
%"class.blink::MemberBase.308" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.309" = type { %"class.blink::MemberBase.310" }
%"class.blink::MemberBase.310" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.262" = type { %"class.blink::MemberBase.263" }
%"class.blink::MemberBase.263" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.311 }
%class.scoped_refptr.311 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.315 }
%class.scoped_refptr.315 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.316", i32, i32, %"class.blink::Persistent.318" }
%"class.WTF::RefCounted.316" = type { %"class.base::RefCounted.317" }
%"class.base::RefCounted.317" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.318" = type { %"class.blink::PersistentBase.319" }
%"class.blink::PersistentBase.319" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.322" }
%"class.blink::HeapHashMap.322" = type { %"class.WTF::HashMap.325" }
%"class.WTF::HashMap.325" = type { %"class.WTF::HashTable.326" }
%"class.WTF::HashTable.326" = type <{ %"struct.WTF::KeyValuePair.328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.328" = type { %"class.blink::WeakMember.329", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.345" }
%"class.blink::HeapHashMap.345" = type { %"class.WTF::HashMap.348" }
%"class.WTF::HashMap.348" = type { %"class.WTF::HashTable.349" }
%"class.WTF::HashTable.349" = type <{ %"struct.WTF::KeyValuePair.351"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.351" = type opaque
%"class.blink::Member.352" = type { %"class.blink::MemberBase.353" }
%"class.blink::MemberBase.353" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.356" }
%"class.WTF::HashTable.356" = type <{ %"class.blink::WeakMember.358"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.358" = type opaque
%"class.blink::HeapHashSet.359" = type { %"class.WTF::HashSet.362" }
%"class.WTF::HashSet.362" = type { %"class.WTF::HashTable.363" }
%"class.WTF::HashTable.363" = type <{ %"class.blink::WeakMember.365"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.365" = type opaque
%"class.blink::Member.366" = type { %"class.blink::MemberBase.367" }
%"class.blink::MemberBase.367" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.368" = type { %"class.blink::MemberBase.369" }
%"class.blink::MemberBase.369" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.370" = type { %"class.blink::MemberBase.371" }
%"class.blink::MemberBase.371" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.376" = type { %"class.WTF::HashMap.379" }
%"class.WTF::HashMap.379" = type { %"class.WTF::HashTable.380" }
%"class.WTF::HashTable.380" = type <{ %"struct.WTF::KeyValuePair.382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.382" = type opaque
%"class.WTF::Vector.383" = type { %"class.WTF::VectorBuffer.384" }
%"class.WTF::VectorBuffer.384" = type { %"class.WTF::VectorBufferBase.385" }
%"class.WTF::VectorBufferBase.385" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.388" = type { %"class.blink::MemberBase.389" }
%"class.blink::MemberBase.389" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.223" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.222 }
%class.scoped_refptr.222 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.223" = type { %"class.blink::MemberBase.224" }
%"class.blink::MemberBase.224" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.227", %"class.blink::Member.229", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.227" = type { %"class.WTF::SingleThreadedBitField.228" }
%"class.WTF::SingleThreadedBitField.228" = type { i32 }
%"class.blink::Member.229" = type { %"class.blink::MemberBase.230" }
%"class.blink::MemberBase.230" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.231 }
%class.scoped_refptr.231 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.232", %"class.WTF::AtomicString", %"class.WTF::Vector.234" }
%"class.WTF::RefCounted.232" = type { %"class.base::RefCounted.233" }
%"class.base::RefCounted.233" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.234" = type { %"class.WTF::VectorBuffer.235" }
%"class.WTF::VectorBuffer.235" = type { %"class.WTF::VectorBufferBase.236", [32 x i8] }
%"class.WTF::VectorBufferBase.236" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.394" = type { %"class.WTF::Vector.397" }
%"class.WTF::Vector.397" = type { %"class.WTF::VectorBuffer.398" }
%"class.WTF::VectorBuffer.398" = type { %"class.WTF::VectorBufferBase.399" }
%"class.WTF::VectorBufferBase.399" = type { %"class.blink::Member.400"*, i32, i32 }
%"class.blink::Member.400" = type opaque
%"class.std::__1::unique_ptr.402" = type { %"class.std::__1::__compressed_pair.403" }
%"class.std::__1::__compressed_pair.403" = type { %"struct.std::__1::__compressed_pair_elem.404" }
%"struct.std::__1::__compressed_pair_elem.404" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.408" = type { %"class.WTF::HashSet.411" }
%"class.WTF::HashSet.411" = type { %"class.WTF::HashTable.412" }
%"class.WTF::HashTable.412" = type <{ %"class.blink::WeakMember.414"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.414" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.415", i32, [4 x i8] }>
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"struct.std::__1::pair.418"*, i32, i32 }
%"struct.std::__1::pair.418" = type opaque
%"class.blink::Member.421" = type { %"class.blink::MemberBase.422" }
%"class.blink::MemberBase.422" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.423" = type { %"class.WTF::VectorBuffer.424" }
%"class.WTF::VectorBuffer.424" = type { %"class.WTF::VectorBufferBase.425" }
%"class.WTF::VectorBufferBase.425" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.241" }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"class.blink::Member.220"*, i32, i32 }
%"class.blink::HeapVector.434" = type { %"class.WTF::Vector.437" }
%"class.WTF::Vector.437" = type { %"class.WTF::VectorBuffer.438" }
%"class.WTF::VectorBuffer.438" = type { %"class.WTF::VectorBufferBase.439" }
%"class.WTF::VectorBufferBase.439" = type { %"class.blink::Member.440"*, i32, i32 }
%"class.blink::Member.440" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.203" }
%"class.blink::Member.442" = type { %"class.blink::MemberBase.443" }
%"class.blink::MemberBase.443" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.444" = type { %"class.blink::MemberBase.445" }
%"class.blink::MemberBase.445" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.446" = type { %"class.blink::MemberBase.447" }
%"class.blink::MemberBase.447" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.448" = type { %"class.blink::MemberBase.449" }
%"class.blink::MemberBase.449" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"struct.WTF::KeyValuePair.456"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.456" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.463" = type { %"class.blink::MemberBase.464" }
%"class.blink::MemberBase.464" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::Member.203" = type { %"class.blink::MemberBase.204" }
%"class.blink::MemberBase.204" = type { %"class.blink::Document"* }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.342", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.333, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.333 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.342" = type { %"class.blink::MemberBase.204" }
%"class.blink::HeapHashSet.465" = type { %"class.WTF::HashSet.468" }
%"class.WTF::HashSet.468" = type { %"class.WTF::HashTable.469" }
%"class.WTF::HashTable.469" = type <{ %"class.blink::Member.471"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.471" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.482" = type { %"class.std::__1::__compressed_pair.483" }
%"class.std::__1::__compressed_pair.483" = type { %"struct.std::__1::__compressed_pair_elem.484" }
%"struct.std::__1::__compressed_pair_elem.484" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.488" = type { %"class.std::__1::__compressed_pair.489" }
%"class.std::__1::__compressed_pair.489" = type { %"struct.std::__1::__compressed_pair_elem.490" }
%"struct.std::__1::__compressed_pair_elem.490" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.491", %"class.WTF::HashSet.491", %"class.WTF::HashSet.491", %"class.WTF::HashSet.491", %"class.WTF::HashSet.491", %"class.WTF::HashSet.491", i32, [4 x i8], %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", %"class.WTF::HashMap.495", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.491" = type { %"class.WTF::HashTable.492" }
%"class.WTF::HashTable.492" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"struct.WTF::KeyValuePair.499"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.499" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.505" = type { %"class.blink::MemberBase.506" }
%"class.blink::MemberBase.506" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.511" = type { %"class.WTF::VectorBuffer.512" }
%"class.WTF::VectorBuffer.512" = type { %"class.WTF::VectorBufferBase.513" }
%"class.WTF::VectorBufferBase.513" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.516" = type { %"class.WTF::HashMap.519" }
%"class.WTF::HashMap.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"struct.WTF::KeyValuePair.522"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.522" = type opaque
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.525" = type { %"class.std::__1::__compressed_pair.526" }
%"class.std::__1::__compressed_pair.526" = type { %"struct.std::__1::__compressed_pair_elem.527" }
%"struct.std::__1::__compressed_pair_elem.527" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr.178 }
%class.scoped_refptr.178 = type { %"class.WTF::StringImpl"* }
%"class.blink::Member.533" = type { %"class.blink::MemberBase.534" }
%"class.blink::MemberBase.534" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.535" = type { %"class.WTF::HashMap.538" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.541"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.541" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.542" }
%"class.blink::HeapHashSet.542" = type { %"class.WTF::HashSet.545" }
%"class.WTF::HashSet.545" = type { %"class.WTF::HashTable.546" }
%"class.WTF::HashTable.546" = type <{ %"class.blink::WeakMember.548"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.548" = type opaque
%"class.blink::Member.549" = type { %"class.blink::MemberBase.550" }
%"class.blink::MemberBase.550" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.551" = type { %"class.blink::MemberBase.552" }
%"class.blink::MemberBase.552" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.203", %"class.blink::HeapHashSet.597", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.604", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.597" = type { %"class.WTF::HashSet.600" }
%"class.WTF::HashSet.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"class.blink::Member.603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.603" = type opaque
%"class.blink::HeapTaskRunnerTimer.604" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.605", { i64, i64 } }
%"class.blink::WeakMember.605" = type { %"class.blink::MemberBase.552" }
%"class.blink::WeakMember.553" = type { %"class.blink::MemberBase.194" }
%"class.blink::Member.554" = type { %"class.blink::MemberBase.555" }
%"class.blink::MemberBase.555" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.556" = type { %"class.blink::MemberBase.557" }
%"class.blink::MemberBase.557" = type { %"class.blink::CSSPaintImageGenerator"* }
%"class.blink::CSSPaintImageGenerator" = type { i32 (...)** }
%"class.blink::Member.560" = type { %"class.blink::MemberBase.561" }
%"class.blink::MemberBase.561" = type { %"class.blink::CSSPaintValue::Observer"* }
%"class.blink::CSSPaintValue::Observer" = type { %"class.blink::CSSPaintImageGenerator::Observer", %"class.blink::Member.564" }
%"class.blink::CSSPaintImageGenerator::Observer" = type { i32 (...)** }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::CSSPaintValue"* }
%"class.blink::Member.566" = type { %"class.blink::MemberBase.567" }
%"class.blink::MemberBase.567" = type { %"class.blink::HeapVector.568"* }
%"class.blink::HeapVector.568" = type { %"class.WTF::Vector.571" }
%"class.WTF::Vector.571" = type { %"class.WTF::VectorBuffer.572" }
%"class.WTF::VectorBuffer.572" = type { %"class.WTF::VectorBufferBase.573" }
%"class.WTF::VectorBufferBase.573" = type { %"class.blink::Member.574"*, i32, i32 }
%"class.blink::Member.574" = type { %"class.blink::MemberBase.575" }
%"class.blink::MemberBase.575" = type { %"class.blink::CSSStyleValue"* }
%"class.blink::CSSStyleValue" = type { %"class.blink::ScriptWrappable", %"class.WTF::String" }
%"class.WTF::Vector.577" = type { %"class.WTF::VectorBuffer.578" }
%"class.WTF::VectorBuffer.578" = type { %"class.WTF::VectorBufferBase.579" }
%"class.WTF::VectorBufferBase.579" = type { %class.scoped_refptr.580*, i32, i32 }
%class.scoped_refptr.580 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.581", %"class.WTF::Vector.583", %"class.WTF::Vector.588", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.581" = type { %"class.base::RefCounted.582" }
%"class.base::RefCounted.582" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.588" = type { %"class.WTF::VectorBuffer.589" }
%"class.WTF::VectorBuffer.589" = type { %"class.WTF::VectorBufferBase.590" }
%"class.WTF::VectorBufferBase.590" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon }
%union.anon = type { double }
%"class.blink::CSSCustomIdentValue" = type <{ %"class.blink::CSSValue", [5 x i8], %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::Thread" = type { i32 (...)** }
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.830, i32, i8, i8, [2 x i8] }>
%union.anon.830 = type { %"class.WTF::Vector.831" }
%"class.WTF::Vector.831" = type { %"class.WTF::VectorBuffer.832" }
%"class.WTF::VectorBuffer.832" = type { %"class.WTF::VectorBufferBase.833", [16 x i8] }
%"class.WTF::VectorBufferBase.833" = type { i8*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::CSSParserTokenRange" = type { %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"* }
%"class.WTF::Vector.841" = type { %"class.WTF::VectorBuffer.842" }
%"class.WTF::VectorBuffer.842" = type { %"class.WTF::VectorBufferBase.843" }
%"class.WTF::VectorBufferBase.843" = type { i32*, i32, i32 }
%"class.WTF::Vector.846" = type { %"class.WTF::VectorBuffer.847" }
%"class.WTF::VectorBuffer.847" = type { %"class.WTF::VectorBufferBase.236" }
%"class.blink::Image" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i8, %class.scoped_refptr.852, %"class.blink::WeakPersistent", i32, i8, %"class.std::__1::unique_ptr.868" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.851" }
%"class.base::RefCountedThreadSafe.851" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.852 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.853", i64, %"class.WTF::Vector.855", %"class.WTF::Vector.860" }
%"class.WTF::RefCounted.853" = type { %"class.base::RefCounted.854" }
%"class.base::RefCounted.854" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.855" = type { %"class.WTF::VectorBuffer.856" }
%"class.WTF::VectorBuffer.856" = type { %"class.WTF::VectorBufferBase.857" }
%"class.WTF::VectorBufferBase.857" = type { i8*, i32, i32 }
%"class.WTF::Vector.860" = type { %"class.WTF::VectorBuffer.861" }
%"class.WTF::VectorBuffer.861" = type { %"class.WTF::VectorBufferBase.862" }
%"class.WTF::VectorBufferBase.862" = type { %"class.std::__1::unique_ptr.863"*, i32, i32 }
%"class.std::__1::unique_ptr.863" = type opaque
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.866" }
%"class.blink::PersistentBase.866" = type { %"class.blink::ImageObserver"*, %"class.blink::PersistentNodePtr.867" }
%"class.blink::ImageObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::PersistentNodePtr.867" = type { %"class.blink::PersistentNode"* }
%"class.std::__1::unique_ptr.868" = type { %"class.std::__1::__compressed_pair.869" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.870" }
%"struct.std::__1::__compressed_pair_elem.870" = type { %"class.blink::DarkModeImageCache"* }
%"class.blink::DarkModeImageCache" = type opaque
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1293", %"class.std::__1::unique_ptr.1295" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.938", %"class.blink::DataRef.1014", %"class.blink::DataRef.1018", %"class.blink::DataRef.1209", %"class.blink::DataRef.1276", %"class.blink::DataRef.1280", %"class.blink::DataRef.1284", %"class.blink::DataRef.1288", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.874 }
%class.scoped_refptr.874 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.875", %"class.blink::DataRef.877", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.875" = type { %"class.base::RefCounted.876" }
%"class.base::RefCounted.876" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.877" = type { %class.scoped_refptr.878 }
%class.scoped_refptr.878 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.879", %"class.blink::Font" }
%"class.WTF::RefCounted.879" = type { %"class.base::RefCounted.880" }
%"class.base::RefCounted.880" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.907 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.882, %class.scoped_refptr.890, %class.scoped_refptr.900, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.906 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.881 }
%class.scoped_refptr.881 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1310", [4 x i8] }>
%"class.WTF::RefCounted.1310" = type { %"class.base::RefCounted.1311" }
%"class.base::RefCounted.1311" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.882 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.888", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.883" }
%"class.WTF::Vector.883" = type { %"class.WTF::VectorBuffer.884" }
%"class.WTF::VectorBuffer.884" = type { %"class.WTF::VectorBufferBase.885" }
%"class.WTF::VectorBufferBase.885" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.888" = type { %"class.base::RefCounted.889" }
%"class.base::RefCounted.889" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.890 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.891", %"class.WTF::RefCounted.898", [4 x i8] }>
%"class.blink::FontSettings.891" = type { %"class.WTF::Vector.892" }
%"class.WTF::Vector.892" = type { %"class.WTF::VectorBuffer.893" }
%"class.WTF::VectorBuffer.893" = type { %"class.WTF::VectorBufferBase.894" }
%"class.WTF::VectorBufferBase.894" = type { %"class.blink::FontTagValuePair.895"*, i32, i32 }
%"class.blink::FontTagValuePair.895" = type { i32, float }
%"class.WTF::RefCounted.898" = type { %"class.base::RefCounted.899" }
%"class.base::RefCounted.899" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.900 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.901", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.903, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.903 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.904", [4 x i8] }>
%"class.WTF::RefCounted.904" = type { %"class.base::RefCounted.905" }
%"class.base::RefCounted.905" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.906 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.907 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.908", %"class.WTF::Vector.910", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent.934", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.908" = type { %"class.base::RefCounted.909" }
%"class.base::RefCounted.909" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.910" = type { %"class.WTF::VectorBuffer.911" }
%"class.WTF::VectorBuffer.911" = type { %"class.WTF::VectorBufferBase.912", [8 x i8] }
%"class.WTF::VectorBufferBase.912" = type { %class.scoped_refptr.913*, i32, i32 }
%class.scoped_refptr.913 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.914", [4 x i8] }>
%"class.WTF::RefCounted.914" = type { %"class.base::RefCounted.915" }
%"class.base::RefCounted.915" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.924", %class.scoped_refptr.931, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.914" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.918", %"class.absl::optional.918", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.918" = type { %"class.absl::optional_internal::optional_data.919" }
%"class.absl::optional_internal::optional_data.919" = type { %"class.absl::optional_internal::optional_data_base.920" }
%"class.absl::optional_internal::optional_data_base.920" = type { %"class.absl::optional_internal::optional_data_dtor_base.921" }
%"class.absl::optional_internal::optional_data_dtor_base.921" = type { i8, %union.anon.922 }
%union.anon.922 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.923, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.276" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.276" }>
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.337" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.923 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.927, %class.scoped_refptr.927 }
%class.scoped_refptr.927 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.931 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.932", [4 x i8] }>
%"class.WTF::RefCounted.932" = type { %"class.base::RefCounted.933" }
%"class.base::RefCounted.933" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent.934" = type { %"class.blink::PersistentBase.935" }
%"class.blink::PersistentBase.935" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.867" }
%"class.blink::FontFallbackMap" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.936 }
%class.scoped_refptr.936 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.937, i8, i8, i8, i8 }>
%union.anon.937 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.938" = type { %class.scoped_refptr.939 }
%class.scoped_refptr.939 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.940", [4 x i8], %"class.blink::DataRef.942", %"class.blink::DataRef.983", %"class.WTF::Vector.846", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.987, %class.scoped_refptr.996, %"class.blink::Persistent.1004", %"class.blink::Persistent.1006", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.940" = type { %"class.base::RefCounted.941" }
%"class.base::RefCounted.941" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.942" = type { %class.scoped_refptr.943 }
%class.scoped_refptr.943 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.944", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.946, %class.scoped_refptr.953, %"class.blink::Persistent.970", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.944" = type { %"class.base::RefCounted.945" }
%"class.base::RefCounted.945" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.946 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.947", %"class.WTF::Vector.948" }
%"class.base::RefCountedThreadSafe.947" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.948" = type { %"class.WTF::VectorBuffer.949" }
%"class.WTF::VectorBuffer.949" = type { %"class.WTF::VectorBufferBase.950" }
%"class.WTF::VectorBufferBase.950" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.953 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.954", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.956", %"class.blink::Persistent.961" }
%"class.WTF::HashMap.956" = type { %"class.WTF::HashTable.957" }
%"class.WTF::HashTable.957" = type <{ %"struct.WTF::KeyValuePair.960"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.960" = type { %"class.WTF::AtomicString", %class.scoped_refptr.580 }
%"class.blink::Persistent.961" = type { %"class.blink::PersistentBase.962" }
%"class.blink::PersistentBase.962" = type { %"class.blink::HeapHashMap.963"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.963" = type { %"class.WTF::HashMap.966" }
%"class.WTF::HashMap.966" = type { %"class.WTF::HashTable.967" }
%"class.WTF::HashTable.967" = type <{ %"struct.WTF::KeyValuePair.969"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.969" = type opaque
%"class.blink::Persistent.970" = type { %"class.blink::PersistentBase.971" }
%"class.blink::PersistentBase.971" = type { %"class.blink::HeapVector.972"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.972" = type { %"class.WTF::Vector.975" }
%"class.WTF::Vector.975" = type { %"class.WTF::VectorBuffer.976" }
%"class.WTF::VectorBuffer.976" = type { %"class.WTF::VectorBufferBase.977" }
%"class.WTF::VectorBufferBase.977" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.978", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.978" = type { %"class.blink::MemberBase.979" }
%"class.blink::MemberBase.979" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.983" = type { %class.scoped_refptr.984 }
%class.scoped_refptr.984 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.985", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.985" = type { %"class.base::RefCounted.986" }
%"class.base::RefCounted.986" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.987 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.988", %"class.WTF::Vector.990" }
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.990" = type { %"class.WTF::VectorBuffer.991" }
%"class.WTF::VectorBuffer.991" = type { %"class.WTF::VectorBufferBase.992" }
%"class.WTF::VectorBufferBase.992" = type { %"struct.std::__1::pair.993"*, i32, i32 }
%"struct.std::__1::pair.993" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.996 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.997", [4 x i8], %"class.WTF::Vector.999" }
%"class.WTF::RefCounted.997" = type { %"class.base::RefCounted.998" }
%"class.base::RefCounted.998" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.999" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1001", [28 x i8] }>
%"class.WTF::VectorBufferBase.1001" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.1004" = type { %"class.blink::PersistentBase.1005" }
%"class.blink::PersistentBase.1005" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1006" = type { %"class.blink::PersistentBase.1007" }
%"class.blink::PersistentBase.1007" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1010", %"class.blink::Member.1012" }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1014" = type { %class.scoped_refptr.1015 }
%class.scoped_refptr.1015 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1016", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1016" = type { %"class.base::RefCounted.1017" }
%"class.base::RefCounted.1017" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1018" = type { %class.scoped_refptr.1019 }
%class.scoped_refptr.1019 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1020", [4 x i8], %"class.blink::DataRef.1022", %"class.blink::DataRef.1088", %"class.blink::TransformOperations", %class.scoped_refptr.996, %"class.blink::Persistent.1203", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1020" = type { %"class.base::RefCounted.1021" }
%"class.base::RefCounted.1021" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1022" = type { %class.scoped_refptr.1023 }
%class.scoped_refptr.1023 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1024", [4 x i8], %"class.blink::DataRef.1026", %"class.blink::Persistent.1064", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1024" = type { %"class.base::RefCounted.1025" }
%"class.base::RefCounted.1025" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1026" = type { %class.scoped_refptr.1027 }
%class.scoped_refptr.1027 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1028", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1046, %class.scoped_refptr.1049, %class.scoped_refptr.1052, %class.scoped_refptr.1055, %class.scoped_refptr.1056, %class.scoped_refptr.1057, %"class.blink::Persistent.1064", %"class.blink::Persistent.1079", %"class.absl::optional.1083", %"class.absl::optional.1083", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1028" = type { %"class.base::RefCounted.1029" }
%"class.base::RefCounted.1029" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1030", %"class.std::__1::unique_ptr.1035" }
%"class.WTF::Vector.1030" = type { %"class.WTF::VectorBuffer.1031" }
%"class.WTF::VectorBuffer.1031" = type { %"class.WTF::VectorBufferBase.1032" }
%"class.WTF::VectorBufferBase.1032" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1035" = type { %"class.std::__1::__compressed_pair.1036" }
%"class.std::__1::__compressed_pair.1036" = type { %"struct.std::__1::__compressed_pair_elem.1037" }
%"struct.std::__1::__compressed_pair_elem.1037" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1038", %"class.WTF::Vector.1030", i32, i32 }
%"class.WTF::Vector.1038" = type { %"class.WTF::VectorBuffer.1039" }
%"class.WTF::VectorBuffer.1039" = type { %"class.WTF::VectorBufferBase.1040" }
%"class.WTF::VectorBufferBase.1040" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1046 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1047", [4 x i8] }>
%"class.WTF::RefCounted.1047" = type { %"class.base::RefCounted.1048" }
%"class.base::RefCounted.1048" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1049 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1050", [4 x i8] }>
%"class.WTF::RefCounted.1050" = type { %"class.base::RefCounted.1051" }
%"class.base::RefCounted.1051" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1052 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1053" }>
%"class.WTF::RefCounted.1053" = type { %"class.base::RefCounted.1054" }
%"class.base::RefCounted.1054" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1055 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1056 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1057 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1058", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1058" = type { %"class.base::RefCounted.1059" }
%"class.base::RefCounted.1059" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1060" }
%"class.blink::DataRef.1060" = type { %class.scoped_refptr.1061 }
%class.scoped_refptr.1061 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1004", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1062" }
%"class.WTF::RefCounted.1062" = type { %"class.base::RefCounted.1063" }
%"class.base::RefCounted.1063" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1079" = type { %"class.blink::PersistentBase.1080" }
%"class.blink::PersistentBase.1080" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1049, %"class.blink::Member.978", i32, [4 x i8] }>
%"class.absl::optional.1083" = type { %"class.absl::optional_internal::optional_data.1084" }
%"class.absl::optional_internal::optional_data.1084" = type { %"class.absl::optional_internal::optional_data_base.1085" }
%"class.absl::optional_internal::optional_data_base.1085" = type { %"class.absl::optional_internal::optional_data_dtor_base.1086" }
%"class.absl::optional_internal::optional_data_dtor_base.1086" = type { i8, [3 x i8], %union.anon.1087 }
%union.anon.1087 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.1064" = type { %"class.blink::PersistentBase.1065" }
%"class.blink::PersistentBase.1065" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1068" }
%"class.blink::HeapVector.1068" = type { %"class.WTF::Vector.1071" }
%"class.WTF::Vector.1071" = type { %"class.WTF::VectorBuffer.1072" }
%"class.WTF::VectorBuffer.1072" = type { %"class.WTF::VectorBufferBase.1073" }
%"class.WTF::VectorBufferBase.1073" = type { %"class.blink::Member.1074"*, i32, i32 }
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1088" = type { %class.scoped_refptr.1089 }
%class.scoped_refptr.1089 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1090", %"class.blink::DataRef.1092", %"class.blink::DataRef.1096", %"class.blink::DataRef.1100", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1119", %"class.std::__1::unique_ptr.1130", %"class.std::__1::unique_ptr.1169", %"class.std::__1::unique_ptr.1180", %"class.std::__1::unique_ptr.1191", %"class.WTF::Vector.583", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1090" = type { %"class.base::RefCounted.1091" }
%"class.base::RefCounted.1091" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1092" = type { %class.scoped_refptr.1093 }
%class.scoped_refptr.1093 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1094", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1094" = type { %"class.base::RefCounted.1095" }
%"class.base::RefCounted.1095" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1096" = type { %class.scoped_refptr.1097 }
%class.scoped_refptr.1097 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1098", [4 x i8], %"class.WTF::Vector.841", i8, [7 x i8] }>
%"class.WTF::RefCounted.1098" = type { %"class.base::RefCounted.1099" }
%"class.base::RefCounted.1099" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1100" = type { %class.scoped_refptr.1101 }
%class.scoped_refptr.1101 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1102", [4 x i8], %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1104", %"class.WTF::HashMap.1109", %"class.WTF::HashMap.1109", %"class.WTF::HashMap.1109", %"class.WTF::HashMap.1109", %"class.WTF::HashMap.1114", %"class.WTF::Vector.1030", %"class.WTF::Vector.1030", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1102" = type { %"class.base::RefCounted.1103" }
%"class.base::RefCounted.1103" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1104" = type { %"class.WTF::HashTable.1105" }
%"class.WTF::HashTable.1105" = type <{ %"struct.WTF::KeyValuePair.1108"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1108" = type { %"class.WTF::String", %"class.WTF::Vector.2331" }
%"class.WTF::Vector.2331" = type { %"class.WTF::VectorBuffer.2332" }
%"class.WTF::VectorBuffer.2332" = type { %"class.WTF::VectorBufferBase.2333" }
%"class.WTF::VectorBufferBase.2333" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1109" = type { %"class.WTF::HashTable.1110" }
%"class.WTF::HashTable.1110" = type <{ %"struct.WTF::KeyValuePair.1113"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1113" = type { i64, %"class.WTF::Vector.583" }
%"class.WTF::HashMap.1114" = type { %"class.WTF::HashTable.1115" }
%"class.WTF::HashTable.1115" = type <{ %"struct.WTF::KeyValuePair.1118"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1118" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1119" = type { %"class.std::__1::__compressed_pair.1120" }
%"class.std::__1::__compressed_pair.1120" = type { %"struct.std::__1::__compressed_pair_elem.1121" }
%"struct.std::__1::__compressed_pair_elem.1121" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1122" }
%"class.WTF::HashMap.1122" = type { %"class.WTF::HashTable.1123" }
%"class.WTF::HashTable.1123" = type <{ %"struct.WTF::KeyValuePair.1126"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1126" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2336", %"class.absl::optional.2336", %"class.absl::optional.2336" }
%"class.absl::optional.2336" = type { %"class.absl::optional_internal::optional_data.2337" }
%"class.absl::optional_internal::optional_data.2337" = type { %"class.absl::optional_internal::optional_data_base.2338" }
%"class.absl::optional_internal::optional_data_base.2338" = type { %"class.absl::optional_internal::optional_data_dtor_base.2339" }
%"class.absl::optional_internal::optional_data_dtor_base.2339" = type { i8, %union.anon.2340 }
%union.anon.2340 = type { i32 }
%"class.std::__1::unique_ptr.1130" = type { %"class.std::__1::__compressed_pair.1131" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.1132" }
%"struct.std::__1::__compressed_pair_elem.1132" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.846", %"class.WTF::Vector.1146", %"class.WTF::Vector.1133", %"class.WTF::Vector.1151", %"class.WTF::Vector.1156", %"class.WTF::Vector.1161" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1133", %"class.WTF::Vector.1133", %"class.WTF::Vector.1138" }
%"class.WTF::Vector.1138" = type { %"class.WTF::VectorBuffer.1139" }
%"class.WTF::VectorBuffer.1139" = type { %"class.WTF::VectorBufferBase.1140" }
%"class.WTF::VectorBufferBase.1140" = type { %class.scoped_refptr.1141*, i32, i32 }
%class.scoped_refptr.1141 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted.1142", i32 }
%"class.WTF::ThreadSafeRefCounted.1142" = type { %"class.base::RefCountedThreadSafe.1143" }
%"class.base::RefCountedThreadSafe.1143" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1146" = type { %"class.WTF::VectorBuffer.1147" }
%"class.WTF::VectorBuffer.1147" = type { %"class.WTF::VectorBufferBase.1148" }
%"class.WTF::VectorBufferBase.1148" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1133" = type { %"class.WTF::VectorBuffer.1134" }
%"class.WTF::VectorBuffer.1134" = type { %"class.WTF::VectorBufferBase.1135" }
%"class.WTF::VectorBufferBase.1135" = type { double*, i32, i32 }
%"class.WTF::Vector.1151" = type { %"class.WTF::VectorBuffer.1152" }
%"class.WTF::VectorBuffer.1152" = type { %"class.WTF::VectorBufferBase.1153" }
%"class.WTF::VectorBufferBase.1153" = type { i32*, i32, i32 }
%"class.WTF::Vector.1156" = type { %"class.WTF::VectorBuffer.1157" }
%"class.WTF::VectorBuffer.1157" = type { %"class.WTF::VectorBufferBase.1158" }
%"class.WTF::VectorBufferBase.1158" = type { i32*, i32, i32 }
%"class.WTF::Vector.1161" = type { %"class.WTF::VectorBuffer.1162" }
%"class.WTF::VectorBuffer.1162" = type { %"class.WTF::VectorBufferBase.1163" }
%"class.WTF::VectorBufferBase.1163" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1169" = type { %"class.std::__1::__compressed_pair.1170" }
%"class.std::__1::__compressed_pair.1170" = type { %"struct.std::__1::__compressed_pair_elem.1171" }
%"struct.std::__1::__compressed_pair_elem.1171" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1172" }
%"class.WTF::Vector.1172" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174" }
%"class.WTF::VectorBufferBase.1174" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1183" }
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"class.blink::Persistent.1004"*, i32, i32 }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1004", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1197" }
%"class.WTF::Vector.1197" = type { %"class.WTF::VectorBuffer.1198" }
%"class.WTF::VectorBuffer.1198" = type { %"class.WTF::VectorBufferBase.1199" }
%"class.WTF::VectorBufferBase.1199" = type { %class.scoped_refptr.1200*, i32, i32 }
%class.scoped_refptr.1200 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1053", [4 x i8] }>
%"class.blink::Persistent.1203" = type { %"class.blink::PersistentBase.1204" }
%"class.blink::PersistentBase.1204" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1207" }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1209" = type { %class.scoped_refptr.1210 }
%class.scoped_refptr.1210 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1211", [4 x i8], %"class.blink::DataRef.1213", %"class.blink::DataRef.1217", %"class.blink::DataRef.1238", %"class.blink::DataRef.1256", %"class.blink::DataRef.1268", %"class.blink::DataRef.1272", %class.scoped_refptr.1242, i32, [4 x i8] }>
%"class.WTF::RefCounted.1211" = type { %"class.base::RefCounted.1212" }
%"class.base::RefCounted.1212" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1213" = type { %class.scoped_refptr.1214 }
%class.scoped_refptr.1214 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1215", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1215" = type { %"class.base::RefCounted.1216" }
%"class.base::RefCounted.1216" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1217" = type { %class.scoped_refptr.1218 }
%class.scoped_refptr.1218 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1219", %class.scoped_refptr.1221, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1219" = type { %"class.base::RefCounted.1220" }
%"class.base::RefCounted.1220" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1221 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1222", %"class.std::__1::unique_ptr.1228", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1050" }>
%"class.std::__1::unique_ptr.1222" = type { %"class.std::__1::__compressed_pair.1223" }
%"class.std::__1::__compressed_pair.1223" = type { %"struct.std::__1::__compressed_pair_elem.1224" }
%"struct.std::__1::__compressed_pair_elem.1224" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1228" = type { %"class.std::__1::__compressed_pair.1229" }
%"class.std::__1::__compressed_pair.1229" = type { %"struct.std::__1::__compressed_pair_elem.1230" }
%"struct.std::__1::__compressed_pair_elem.1230" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1231, i32, %"struct.std::__1::atomic.337", %"struct.std::__1::atomic.337", i8, i8 }>
%class.sk_sp.1231 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1232, %class.SkTDArray.1233, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.276" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1232 = type { i8*, i32, i32 }
%class.SkTDArray.1233 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1234 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.276", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1234 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.174", [3 x i8] }
%"class.blink::DataRef.1238" = type { %class.scoped_refptr.1239 }
%class.scoped_refptr.1239 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1240", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1240" = type { %"class.base::RefCounted.1241" }
%"class.base::RefCounted.1241" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1242, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1256" = type { %class.scoped_refptr.1257 }
%class.scoped_refptr.1257 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1258", [4 x i8], %class.scoped_refptr.1260, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1258" = type { %"class.base::RefCounted.1259" }
%"class.base::RefCounted.1259" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1260 = type { %"class.base::RefCountedData.1261"* }
%"class.base::RefCountedData.1261" = type { %"class.base::RefCountedThreadSafe.1262", %"class.WTF::Vector.1263" }
%"class.base::RefCountedThreadSafe.1262" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1263" = type { %"class.WTF::VectorBuffer.1264" }
%"class.WTF::VectorBuffer.1264" = type { %"class.WTF::VectorBufferBase.1265" }
%"class.WTF::VectorBufferBase.1265" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1268" = type { %class.scoped_refptr.1269 }
%class.scoped_refptr.1269 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1270", %class.scoped_refptr.1242, %class.scoped_refptr.1242, %class.scoped_refptr.1242 }
%"class.WTF::RefCounted.1270" = type { %"class.base::RefCounted.1271" }
%"class.base::RefCounted.1271" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1272" = type { %class.scoped_refptr.1273 }
%class.scoped_refptr.1273 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1274", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1274" = type { %"class.base::RefCounted.1275" }
%"class.base::RefCounted.1275" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1242 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1243", %"class.blink::Persistent.1245", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1243" = type { %"class.base::RefCounted.1244" }
%"class.base::RefCounted.1244" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1245" = type { %"class.blink::PersistentBase.1246" }
%"class.blink::PersistentBase.1246" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.220", %"class.blink::HeapHashMap.1249" }
%"class.blink::HeapHashMap.1249" = type { %"class.WTF::HashMap.1252" }
%"class.WTF::HashMap.1252" = type { %"class.WTF::HashTable.1253" }
%"class.WTF::HashTable.1253" = type <{ %"struct.WTF::KeyValuePair.1255"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1255" = type opaque
%"class.blink::DataRef.1276" = type { %class.scoped_refptr.1277 }
%class.scoped_refptr.1277 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1278", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1278" = type { %"class.base::RefCounted.1279" }
%"class.base::RefCounted.1279" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1280" = type { %class.scoped_refptr.1281 }
%class.scoped_refptr.1281 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1282", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1282" = type { %"class.base::RefCounted.1283" }
%"class.base::RefCounted.1283" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1284" = type { %class.scoped_refptr.1285 }
%class.scoped_refptr.1285 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1286", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1286" = type { %"class.base::RefCounted.1287" }
%"class.base::RefCounted.1287" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1288" = type { %class.scoped_refptr.1289 }
%class.scoped_refptr.1289 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1290", %class.scoped_refptr.1292 }
%"class.WTF::RefCounted.1290" = type { %"class.base::RefCounted.1291" }
%"class.base::RefCounted.1291" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1292 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1308", %"class.blink::StyleVariables", %class.scoped_refptr.1292 }
%"class.WTF::RefCounted.1308" = type { %"class.base::RefCounted.1309" }
%"class.base::RefCounted.1309" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1295" = type { %"class.std::__1::__compressed_pair.1296" }
%"class.std::__1::__compressed_pair.1296" = type { %"struct.std::__1::__compressed_pair_elem.1297" }
%"struct.std::__1::__compressed_pair_elem.1297" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1298" }
%"class.std::__1::unique_ptr.1298" = type { %"class.std::__1::__compressed_pair.1299" }
%"class.std::__1::__compressed_pair.1299" = type { %"struct.std::__1::__compressed_pair_elem.1300" }
%"struct.std::__1::__compressed_pair_elem.1300" = type { %"class.WTF::Vector.1301"* }
%"class.WTF::Vector.1301" = type { %"class.WTF::VectorBuffer.2341" }
%"class.WTF::VectorBuffer.2341" = type { %"class.WTF::VectorBufferBase.2342", [32 x i8] }
%"class.WTF::VectorBufferBase.2342" = type { %class.scoped_refptr.1312*, i32, i32 }
%class.scoped_refptr.1312 = type { %"class.blink::ComputedStyle"* }
%"class.std::__1::unique_ptr.2287" = type { %"class.std::__1::__compressed_pair.2288" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.2289" }
%"struct.std::__1::__compressed_pair_elem.2289" = type { %"class.blink::CrossThreadStyleValue"* }
%"class.blink::CrossThreadStyleValue" = type { i32 (...)** }
%"class.std::__1::vector.2262" = type { %"class.std::__1::__vector_base.2263" }
%"class.std::__1::__vector_base.2263" = type { %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"*, %"class.std::__1::__compressed_pair.2269" }
%"struct.cc::PaintWorkletInput::PropertyKey" = type { %"class.absl::optional.1493", %"class.absl::optional.2264", %"struct.cc::ElementId" }
%"class.absl::optional.1493" = type { %"class.absl::optional_internal::optional_data.1494" }
%"class.absl::optional_internal::optional_data.1494" = type { %"class.absl::optional_internal::optional_data_base.1495" }
%"class.absl::optional_internal::optional_data_base.1495" = type { %"class.absl::optional_internal::optional_data_dtor_base.1496" }
%"class.absl::optional_internal::optional_data_dtor_base.1496" = type { i8, %union.anon.1497 }
%union.anon.1497 = type { %"class.std::__1::basic_string" }
%"class.absl::optional.2264" = type { %"class.absl::optional_internal::optional_data.2265" }
%"class.absl::optional_internal::optional_data.2265" = type { %"class.absl::optional_internal::optional_data_base.2266" }
%"class.absl::optional_internal::optional_data_base.2266" = type { %"class.absl::optional_internal::optional_data_dtor_base.2267" }
%"class.absl::optional_internal::optional_data_dtor_base.2267" = type { i8, %union.anon.2268 }
%union.anon.2268 = type { i32 }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.2270" }
%"struct.std::__1::__compressed_pair_elem.2270" = type { %"struct.cc::PaintWorkletInput::PropertyKey"* }
%"class.absl::optional.2274" = type { %"class.absl::optional_internal::optional_data.2275" }
%"class.absl::optional_internal::optional_data.2275" = type { %"class.absl::optional_internal::optional_data_base.2276" }
%"class.absl::optional_internal::optional_data_base.2276" = type { %"class.absl::optional_internal::optional_data_dtor_base.2277" }
%"class.absl::optional_internal::optional_data_dtor_base.2277" = type { i8, [7 x i8], %union.anon.2278 }
%union.anon.2278 = type { %"class.WTF::HashMap.2279" }
%"class.WTF::HashMap.2279" = type { %"class.WTF::HashTable.2280" }
%"class.WTF::HashTable.2280" = type <{ %"struct.WTF::KeyValuePair.2283"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2283" = type { %"class.WTF::String", %"class.std::__1::unique_ptr.2287" }
%"class.WTF::Vector.2284" = type { %"class.WTF::VectorBuffer.2285" }
%"class.WTF::VectorBuffer.2285" = type { %"class.WTF::VectorBufferBase.2286" }
%"class.WTF::VectorBufferBase.2286" = type { %"class.std::__1::unique_ptr.2287"*, i32, i32 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.1312, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.1313" }
%"class.blink::MemberBase.1313" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1314" }
%"class.std::__1::unique_ptr.1314" = type { %"class.std::__1::__compressed_pair.1315" }
%"class.std::__1::__compressed_pair.1315" = type { %"struct.std::__1::__compressed_pair_elem.1316" }
%"struct.std::__1::__compressed_pair_elem.1316" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1317", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1323", %"class.std::__1::unique_ptr.1446", i8, %"class.absl::optional.1452", %class.scoped_refptr.1428, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1457" }
%"class.std::__1::unique_ptr.1317" = type { %"class.std::__1::__compressed_pair.1318" }
%"class.std::__1::__compressed_pair.1318" = type { %"struct.std::__1::__compressed_pair_elem.1319" }
%"struct.std::__1::__compressed_pair_elem.1319" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1323" = type { %"class.std::__1::__compressed_pair.1324" }
%"class.std::__1::__compressed_pair.1324" = type { %"struct.std::__1::__compressed_pair_elem.1325" }
%"struct.std::__1::__compressed_pair_elem.1325" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1326, %class.scoped_refptr.1326, %class.scoped_refptr.1326, %class.scoped_refptr.1326, %class.scoped_refptr.1326, %class.scoped_refptr.1326, %class.scoped_refptr.1361, %class.scoped_refptr.1377, %class.scoped_refptr.1378, %class.scoped_refptr.1378, %class.scoped_refptr.1378, %class.scoped_refptr.1378, %class.scoped_refptr.1378, %class.scoped_refptr.1378, %class.scoped_refptr.1418, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1419, %class.scoped_refptr.1442 }
%class.scoped_refptr.1326 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1343" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1327", i8, i8, %class.scoped_refptr.1329, i32, i32 }
%"class.WTF::RefCounted.1327" = type { %"class.base::RefCounted.1328" }
%"class.base::RefCounted.1328" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1329 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1336, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1337", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1330" }
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%class.scoped_refptr.1336 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1362", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1362" = type { %"class.WTF::RefCounted.1363", i8, i8, %class.scoped_refptr.1336, i32, i32 }
%"class.WTF::RefCounted.1363" = type { %"class.base::RefCounted.1364" }
%"class.base::RefCounted.1364" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1365" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1365" = type { %"class.absl::optional_internal::optional_data.1366" }
%"class.absl::optional_internal::optional_data.1366" = type { %"class.absl::optional_internal::optional_data_base.1367" }
%"class.absl::optional_internal::optional_data_base.1367" = type { %"class.absl::optional_internal::optional_data_dtor_base.1368" }
%"class.absl::optional_internal::optional_data_dtor_base.1368" = type { i8, %union.anon.1369 }
%union.anon.1369 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1370", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1370" = type { %"class.std::__1::__vector_base.1371" }
%"class.std::__1::__vector_base.1371" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1372" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.1343" = type { %"class.std::__1::__compressed_pair.1344" }
%"class.std::__1::__compressed_pair.1344" = type { %"struct.std::__1::__compressed_pair_elem.1345" }
%"struct.std::__1::__compressed_pair_elem.1345" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1346", %"class.std::__1::unique_ptr.1352", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1346" = type { %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1361 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1377 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1378 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1379" }
%"class.blink::PaintPropertyNode.1379" = type { %"class.WTF::RefCounted.1380", i8, i8, %class.scoped_refptr.1382, i32, i32 }
%"class.WTF::RefCounted.1380" = type { %"class.base::RefCounted.1381" }
%"class.base::RefCounted.1381" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1382 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1329, %class.scoped_refptr.1383, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1405", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1383 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1420" }
%"class.blink::PaintPropertyNode.1420" = type { %"class.WTF::RefCounted.1421", i8, i8, %class.scoped_refptr.1383, i32, i32 }
%"class.WTF::RefCounted.1421" = type { %"class.base::RefCounted.1422" }
%"class.base::RefCounted.1422" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1384" }
%"class.std::__1::vector.1384" = type { %"class.std::__1::__vector_base.1385" }
%"class.std::__1::__vector_base.1385" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1400" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1386, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1393", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1386 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1387, i32, %"class.absl::optional.1388", i8, i32 }
%class.sk_sp.1387 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1388" = type { %"class.absl::optional_internal::optional_data.1389" }
%"class.absl::optional_internal::optional_data.1389" = type { %"class.absl::optional_internal::optional_data_base.1390" }
%"class.absl::optional_internal::optional_data_base.1390" = type { %"class.absl::optional_internal::optional_data_dtor_base.1391" }
%"class.absl::optional_internal::optional_data_dtor_base.1391" = type { i8, %union.anon.1392 }
%union.anon.1392 = type { %struct.SkRect }
%"class.std::__1::vector.1393" = type { %"class.std::__1::__vector_base.1394" }
%"class.std::__1::__vector_base.1394" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1395" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1395" = type { %"struct.std::__1::__compressed_pair_elem.1396" }
%"struct.std::__1::__compressed_pair_elem.1396" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1400" = type { %"struct.std::__1::__compressed_pair_elem.1401" }
%"struct.std::__1::__compressed_pair_elem.1401" = type { %"class.cc::FilterOperation"* }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1405" = type { %"class.std::__1::__compressed_pair.1406" }
%"class.std::__1::__compressed_pair.1406" = type { %"struct.std::__1::__compressed_pair_elem.1407" }
%"struct.std::__1::__compressed_pair_elem.1407" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1411" }
%"class.std::__1::vector.1411" = type { %"class.std::__1::__vector_base.1412" }
%"class.std::__1::__vector_base.1412" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { i32* }
%class.scoped_refptr.1418 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1419 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1431" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1329, %"class.absl::optional.1423", %class.scoped_refptr.1428, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1423" = type { %"class.absl::optional_internal::optional_data.1424" }
%"class.absl::optional_internal::optional_data.1424" = type { %"class.absl::optional_internal::optional_data_base.1425" }
%"class.absl::optional_internal::optional_data_base.1425" = type { %"class.absl::optional_internal::optional_data_dtor_base.1426" }
%"class.absl::optional_internal::optional_data_dtor_base.1426" = type { i8, [3 x i8], %union.anon.1427 }
%union.anon.1427 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1431" = type { %"class.std::__1::__compressed_pair.1432" }
%"class.std::__1::__compressed_pair.1432" = type { %"struct.std::__1::__compressed_pair_elem.1433" }
%"struct.std::__1::__compressed_pair_elem.1433" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1434", i32, [4 x i8] }>
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1442 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1446" = type { %"class.std::__1::__compressed_pair.1447" }
%"class.std::__1::__compressed_pair.1447" = type { %"struct.std::__1::__compressed_pair_elem.1448" }
%"struct.std::__1::__compressed_pair_elem.1448" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1329, %class.scoped_refptr.1383, %class.scoped_refptr.1382 }
%"class.absl::optional.1452" = type { %"class.absl::optional_internal::optional_data.1453" }
%"class.absl::optional_internal::optional_data.1453" = type { %"class.absl::optional_internal::optional_data_base.1454" }
%"class.absl::optional_internal::optional_data_base.1454" = type { %"class.absl::optional_internal::optional_data_dtor_base.1455" }
%"class.absl::optional_internal::optional_data_dtor_base.1455" = type { i8, %union.anon.1456 }
%union.anon.1456 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1428 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1429", [4 x i8] }
%"class.WTF::RefCounted.1429" = type { %"class.base::RefCounted.1430" }
%"class.base::RefCounted.1430" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1457" = type { %"class.std::__1::__compressed_pair.1458" }
%"class.std::__1::__compressed_pair.1458" = type { %"struct.std::__1::__compressed_pair_elem.1459" }
%"struct.std::__1::__compressed_pair_elem.1459" = type { %"class.blink::FragmentData"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1510", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1518", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1532", %"class.blink::FrameLoader", %"class.blink::Member.1553", %"class.blink::Member.220", %"class.blink::Member.1555", %"class.blink::Member.1557", %"class.blink::Member.1559", %"class.blink::Member.1561", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1563", %class.scoped_refptr.1783, %"class.blink::Member.1784", %"class.blink::Member.1786", %"class.blink::Member.1788", %"class.blink::Member.1790", %"class.blink::Member.1792", %"class.blink::Member.1796", %"class.blink::Member.1798", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1802", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1808", %"class.std::__1::unique_ptr.1809", %"class.absl::optional.1498", i32, [4 x i8], %"class.std::__1::unique_ptr.1815", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1823", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1828", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1833", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1836", %"class.blink::Member.1838", %"class.blink::Member.1840", %"class.blink::Member.1842", %"class.mojo::StructPtr.1845", %"class.blink::Member.1854", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1856", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1470", %"class.blink::Member.1472", %"class.blink::Member.1474", i8, i32, i8, i32, %"class.blink::Member.1476", %"class.blink::Member.1478", %"class.blink::FrameLifecycle", %"class.blink::Member.1468", %"class.blink::Member.1468", %"class.blink::Member.1468", %"class.blink::Member.1468", %"class.blink::Member.1468", %"class.blink::Member.1468", %"class.blink::Member.1480", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1491", i8, %"class.base::UnguessableToken", %"class.absl::optional.1493", %"class.absl::optional.1498", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1468", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1470" = type { %"class.blink::MemberBase.1471" }
%"class.blink::MemberBase.1471" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.2150", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.1468", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.2164", %"class.blink::Member.2168", %"class.blink::Member.2170", %"class.blink::Member.2172", %"class.blink::Member.2174", %"class.blink::Member.2176", %"class.blink::Member.2178", %"class.blink::Member.2180", %"class.blink::HeapObserverSet.2182", %"class.blink::Member.2190", %"class.blink::Member.2192", %"class.blink::Member.2194", %"class.blink::Member.2196", %"class.blink::Member.2198", %"class.blink::Member.2200", %"class.blink::Member.2202", %"class.blink::Member.2204", %"class.blink::Member.2206", %"class.blink::Member.2208", %"class.blink::Member.2210", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.2235", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.2242", %"class.blink::Member.1470", %"class.blink::Member.1470", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.2250", %"class.std::__1::unique_ptr.2256", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.2150" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2151" }
%"class.blink::HeapHashMap.2151" = type { %"class.WTF::HashMap.2154" }
%"class.WTF::HashMap.2154" = type { %"class.WTF::HashTable.2155" }
%"class.WTF::HashTable.2155" = type <{ %"struct.WTF::KeyValuePair.2157"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2157" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.2158" }
%"class.std::__1::unique_ptr.2158" = type { %"class.std::__1::__compressed_pair.2159" }
%"class.std::__1::__compressed_pair.2159" = type { %"struct.std::__1::__compressed_pair_elem.2160" }
%"struct.std::__1::__compressed_pair_elem.2160" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.2164" = type { %"class.blink::MemberBase.2165" }
%"class.blink::MemberBase.2165" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.1470", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.2168" = type { %"class.blink::MemberBase.2169" }
%"class.blink::MemberBase.2169" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.2170" = type { %"class.blink::MemberBase.2171" }
%"class.blink::MemberBase.2171" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.2172" = type { %"class.blink::MemberBase.2173" }
%"class.blink::MemberBase.2173" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.2174" = type { %"class.blink::MemberBase.2175" }
%"class.blink::MemberBase.2175" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.2176" = type { %"class.blink::MemberBase.2177" }
%"class.blink::MemberBase.2177" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.2178" = type { %"class.blink::MemberBase.2179" }
%"class.blink::MemberBase.2179" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.2180" = type { %"class.blink::MemberBase.2181" }
%"class.blink::MemberBase.2181" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.2182" = type { i32, [4 x i8], %"class.blink::HeapHashSet.2183" }
%"class.blink::HeapHashSet.2183" = type { %"class.WTF::HashSet.2186" }
%"class.WTF::HashSet.2186" = type { %"class.WTF::HashTable.2187" }
%"class.WTF::HashTable.2187" = type <{ %"class.blink::WeakMember.2189"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2189" = type opaque
%"class.blink::Member.2190" = type { %"class.blink::MemberBase.2191" }
%"class.blink::MemberBase.2191" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.2192" = type { %"class.blink::MemberBase.2193" }
%"class.blink::MemberBase.2193" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.2194" = type { %"class.blink::MemberBase.2195" }
%"class.blink::MemberBase.2195" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.2196" = type { %"class.blink::MemberBase.2197" }
%"class.blink::MemberBase.2197" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.2198" = type { %"class.blink::MemberBase.2199" }
%"class.blink::MemberBase.2199" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.2200" = type { %"class.blink::MemberBase.2201" }
%"class.blink::MemberBase.2201" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.2202" = type { %"class.blink::MemberBase.2203" }
%"class.blink::MemberBase.2203" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.2204" = type { %"class.blink::MemberBase.2205" }
%"class.blink::MemberBase.2205" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.2212" }
%"class.WTF::Deque.2212" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.2215" }
%"class.WTF::VectorBuffer.2215" = type { %"class.WTF::VectorBufferBase.2216" }
%"class.WTF::VectorBufferBase.2216" = type { %"class.std::__1::unique_ptr.2217"*, i32, i32 }
%"class.std::__1::unique_ptr.2217" = type { %"class.std::__1::__compressed_pair.2218" }
%"class.std::__1::__compressed_pair.2218" = type { %"struct.std::__1::__compressed_pair_elem.2219" }
%"struct.std::__1::__compressed_pair_elem.2219" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.2223", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.2223" = type { %"class.std::__1::__bitset.2224" }
%"class.std::__1::__bitset.2224" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2225" }
%"class.absl::optional.2225" = type { %"class.absl::optional_internal::optional_data.2226" }
%"class.absl::optional_internal::optional_data.2226" = type { %"class.absl::optional_internal::optional_data_base.2227" }
%"class.absl::optional_internal::optional_data_base.2227" = type { %"class.absl::optional_internal::optional_data_dtor_base.2228" }
%"class.absl::optional_internal::optional_data_dtor_base.2228" = type { i8, %union.anon.2229 }
%union.anon.2229 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.2230", i64, %"class.absl::optional.746", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.2230" = type { %"class.absl::optional_internal::optional_data.2231" }
%"class.absl::optional_internal::optional_data.2231" = type { %"class.absl::optional_internal::optional_data_base.2232" }
%"class.absl::optional_internal::optional_data_base.2232" = type { %"class.absl::optional_internal::optional_data_dtor_base.2233" }
%"class.absl::optional_internal::optional_data_dtor_base.2233" = type { i8, %union.anon.2234 }
%union.anon.2234 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.2235" = type { %"class.std::__1::unique_ptr.2236" }
%"class.std::__1::unique_ptr.2236" = type { %"class.std::__1::__compressed_pair.2237" }
%"class.std::__1::__compressed_pair.2237" = type { %"struct.std::__1::__compressed_pair_elem.2238" }
%"struct.std::__1::__compressed_pair_elem.2238" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.2242" = type { %"class.WTF::HashSet.2245" }
%"class.WTF::HashSet.2245" = type { %"class.WTF::HashTable.2246" }
%"class.WTF::HashTable.2246" = type <{ %"class.blink::WeakMember.2248"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2248" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.2249" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.2249" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.2250" = type { %"class.std::__1::__compressed_pair.2251" }
%"class.std::__1::__compressed_pair.2251" = type { %"struct.std::__1::__compressed_pair_elem.2252" }
%"struct.std::__1::__compressed_pair_elem.2252" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2256" = type { %"class.std::__1::__compressed_pair.2257" }
%"class.std::__1::__compressed_pair.2257" = type { %"struct.std::__1::__compressed_pair_elem.2258" }
%"struct.std::__1::__compressed_pair_elem.2258" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.178 }
%"class.blink::Member.1472" = type { %"class.blink::MemberBase.1473" }
%"class.blink::MemberBase.1473" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1474" = type { %"class.blink::MemberBase.1475" }
%"class.blink::MemberBase.1475" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1476" = type { %"class.blink::MemberBase.1477" }
%"class.blink::MemberBase.1477" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1478" = type { %"class.blink::MemberBase.1479" }
%"class.blink::MemberBase.1479" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1468" = type { %"class.blink::MemberBase.1469" }
%"class.blink::MemberBase.1469" = type { %"class.blink::Frame"* }
%"class.blink::Member.1480" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1468", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1482" }
%"class.base::internal::flat_tree.1482" = type { %"class.std::__1::vector.1483" }
%"class.std::__1::vector.1483" = type { %"class.std::__1::__vector_base.1484" }
%"class.std::__1::__vector_base.1484" = type { %"struct.std::__1::pair.1485"*, %"struct.std::__1::pair.1485"*, %"class.std::__1::__compressed_pair.1486" }
%"struct.std::__1::pair.1485" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1486" = type { %"struct.std::__1::__compressed_pair_elem.1487" }
%"struct.std::__1::__compressed_pair_elem.1487" = type { %"struct.std::__1::pair.1485"* }
%"class.blink::Member.1491" = type { %"class.blink::MemberBase.1492" }
%"class.blink::MemberBase.1492" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1503" }
%"class.blink::HeapHashSet.1503" = type { %"class.WTF::HashSet.1506" }
%"class.WTF::HashSet.1506" = type { %"class.WTF::HashTable.1507" }
%"class.WTF::HashTable.1507" = type <{ %"class.blink::WeakMember.1509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1509" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1510" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1511" }
%"class.blink::HeapHashMap.1511" = type { %"class.WTF::HashMap.1514" }
%"class.WTF::HashMap.1514" = type { %"class.WTF::HashTable.1515" }
%"class.WTF::HashTable.1515" = type <{ %"struct.WTF::KeyValuePair.1517"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1517" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1518" = type { %"class.std::__1::__compressed_pair.1519" }
%"class.std::__1::__compressed_pair.1519" = type { %"struct.std::__1::__compressed_pair_elem.1520" }
%"struct.std::__1::__compressed_pair_elem.1520" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1521", %"class.base::WeakPtrFactory.1526" }
%"class.WTF::HashMap.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"struct.WTF::KeyValuePair.1525"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1525" = type opaque
%"class.base::WeakPtrFactory.1526" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1530" }
%"class.blink::Member.1530" = type { %"class.blink::MemberBase.1531" }
%"class.blink::MemberBase.1531" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2347" }
%"class.blink::WeakMember.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2349", i64, %"class.std::__1::map.2350", i8*, i64, %"class.base::WeakPtrFactory.2359" }
%"class.base::RepeatingCallback.2349" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2350" = type { %"class.std::__1::__tree.2351" }
%"class.std::__1::__tree.2351" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2352", %"class.std::__1::__compressed_pair.2356" }
%"class.std::__1::__compressed_pair.2352" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.2356" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::WeakPtrFactory.2359" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1532" = type { %"class.WTF::HashSet.1535" }
%"class.WTF::HashSet.1535" = type { %"class.WTF::HashTable.1536" }
%"class.WTF::HashTable.1536" = type <{ %"class.blink::WeakMember.1538"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1538" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1480", %"class.blink::Member.1539", %"class.blink::Member.1541", %"class.std::__1::unique_ptr.1543", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1549" }
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1541" = type { %"class.blink::MemberBase.1542" }
%"class.blink::MemberBase.1542" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1543" = type { %"class.std::__1::__compressed_pair.1544" }
%"class.std::__1::__compressed_pair.1544" = type { %"struct.std::__1::__compressed_pair_elem.1545" }
%"struct.std::__1::__compressed_pair_elem.1545" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.1549" = type { %"class.WTF::HashTable.1550" }
%"class.WTF::HashTable.1550" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1553" = type { %"class.blink::MemberBase.1554" }
%"class.blink::MemberBase.1554" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1935", %"class.blink::Member.1480", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1940", i8, i32, %"class.blink::Color", %"class.absl::optional.1942", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1947", %"class.blink::Member.1949", %"class.blink::Member.1949", %"class.std::__1::unique_ptr.1952", i32, [4 x i8], %"class.WTF::HashSet.1955", %"class.blink::Member.1962", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1964", %"class.blink::HeapHashSet.1971", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1979", i8, %"class.blink::Member.1985", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.1997", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2011", i8, %"class.std::__1::unique_ptr.2017", %"class.std::__1::unique_ptr.2098", %"class.WTF::Vector.2104", i32, %class.scoped_refptr.2109, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2110", %"class.blink::Member.2112", %"class.blink::Member.2114", %"class.blink::HeapHashSet.2116", %"class.blink::HeapHashSet.2123", %"class.std::__1::unique_ptr.2130", %"class.std::__1::unique_ptr.2137", %"class.WTF::Vector.272" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashSet.1935" = type { %"class.WTF::HashTable.1936" }
%"class.WTF::HashTable.1936" = type <{ %class.scoped_refptr.1939*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1939 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1940" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1941", { i64, i64 } }
%"class.blink::WeakMember.1941" = type { %"class.blink::MemberBase.1554" }
%"class.absl::optional.1942" = type { %"class.absl::optional_internal::optional_data.1943" }
%"class.absl::optional_internal::optional_data.1943" = type { %"class.absl::optional_internal::optional_data_base.1944" }
%"class.absl::optional_internal::optional_data_base.1944" = type { %"class.absl::optional_internal::optional_data_dtor_base.1945" }
%"class.absl::optional_internal::optional_data_dtor_base.1945" = type { i8, %union.anon.1946 }
%union.anon.1946 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1947" = type { %"class.blink::MemberBase.1948" }
%"class.blink::MemberBase.1948" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1949" = type { %"class.blink::MemberBase.1950" }
%"class.blink::MemberBase.1950" = type { %"class.blink::HeapHashSet.1951"* }
%"class.blink::HeapHashSet.1951" = type opaque
%"class.std::__1::unique_ptr.1952" = type { %"class.std::__1::__compressed_pair.1953" }
%"class.std::__1::__compressed_pair.1953" = type { %"struct.std::__1::__compressed_pair_elem.1954" }
%"struct.std::__1::__compressed_pair_elem.1954" = type { %"class.WTF::HashSet.1955"* }
%"class.WTF::HashSet.1955" = type { %"class.WTF::HashTable.1956" }
%"class.WTF::HashTable.1956" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1962" = type { %"class.blink::MemberBase.1963" }
%"class.blink::MemberBase.1963" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1964" = type { %"class.WTF::HashSet.1967" }
%"class.WTF::HashSet.1967" = type { %"class.WTF::HashTable.1968" }
%"class.WTF::HashTable.1968" = type <{ %"class.blink::Member.1970"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1970" = type opaque
%"class.blink::HeapHashSet.1971" = type { %"class.WTF::HashSet.1974" }
%"class.WTF::HashSet.1974" = type { %"class.WTF::HashTable.1975" }
%"class.WTF::HashTable.1975" = type <{ %"class.blink::Member.1977"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1977" = type { %"class.blink::MemberBase.1978" }
%"class.blink::MemberBase.1978" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type opaque
%"class.std::__1::unique_ptr.1979" = type { %"class.std::__1::__compressed_pair.1980" }
%"class.std::__1::__compressed_pair.1980" = type { %"struct.std::__1::__compressed_pair_elem.1981" }
%"struct.std::__1::__compressed_pair_elem.1981" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.1985" = type { %"class.blink::MemberBase.1986" }
%"class.blink::MemberBase.1986" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1989", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1989" = type { %"class.WTF::HashTable.1990" }
%"class.WTF::HashTable.1990" = type <{ %"struct.WTF::KeyValuePair.1992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1992" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1993", i32, i32 }
%"class.WTF::Vector.1993" = type { %"class.WTF::VectorBuffer.1994" }
%"class.WTF::VectorBuffer.1994" = type { %"class.WTF::VectorBufferBase.1995" }
%"class.WTF::VectorBufferBase.1995" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.1997" = type { %"class.WTF::LinkedHashSet.2000" }
%"class.WTF::LinkedHashSet.2000" = type { %"class.WTF::HashMap.2001", %"class.WTF::VectorBackedLinkedList.2005" }
%"class.WTF::HashMap.2001" = type { %"class.WTF::HashTable.2002" }
%"class.WTF::HashTable.2002" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"class.WTF::VectorBackedLinkedList.2005" = type { %"class.WTF::Vector.2006", i32, i32 }
%"class.WTF::Vector.2006" = type { %"class.WTF::VectorBuffer.2007" }
%"class.WTF::VectorBuffer.2007" = type { %"class.WTF::VectorBufferBase.2008" }
%"class.WTF::VectorBufferBase.2008" = type { %"class.WTF::VectorBackedLinkedListNode.2009"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2009" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2011" = type { %"class.std::__1::__compressed_pair.2012" }
%"class.std::__1::__compressed_pair.2012" = type { %"struct.std::__1::__compressed_pair_elem.2013" }
%"struct.std::__1::__compressed_pair_elem.2013" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2017" = type { %"class.std::__1::__compressed_pair.2018" }
%"class.std::__1::__compressed_pair.2018" = type { %"struct.std::__1::__compressed_pair_elem.2019" }
%"struct.std::__1::__compressed_pair_elem.2019" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2020, %class.scoped_refptr.2020, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2075", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2080", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2020 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2021", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2028" }
%"class.WTF::RefCounted.2021" = type { %"class.base::RefCounted.2022" }
%"class.base::RefCounted.2022" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2023", i32, [4 x i8] }>
%"class.WTF::Vector.2023" = type { %"class.WTF::VectorBuffer.2024" }
%"class.WTF::VectorBuffer.2024" = type { %"class.WTF::VectorBufferBase.2025" }
%"class.WTF::VectorBufferBase.2025" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2028" = type { %"class.WTF::VectorBuffer.2029" }
%"class.WTF::VectorBuffer.2029" = type { %"class.WTF::VectorBufferBase.2030" }
%"class.WTF::VectorBufferBase.2030" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2031", %"class.std::__1::unique_ptr.2047", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2031" = type { %"class.std::__1::__compressed_pair.2032" }
%"class.std::__1::__compressed_pair.2032" = type { %"struct.std::__1::__compressed_pair_elem.2033" }
%"struct.std::__1::__compressed_pair_elem.2033" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2034", %"class.WTF::Vector.2039", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2034" = type { %"class.WTF::VectorBuffer.2035" }
%"class.WTF::VectorBuffer.2035" = type { %"class.WTF::VectorBufferBase.2036" }
%"class.WTF::VectorBufferBase.2036" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2039" = type { %"class.WTF::VectorBuffer.2040" }
%"class.WTF::VectorBuffer.2040" = type { %"class.WTF::VectorBufferBase.2041" }
%"class.WTF::VectorBufferBase.2041" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2047" = type { %"class.std::__1::__compressed_pair.2048" }
%"class.std::__1::__compressed_pair.2048" = type { %"struct.std::__1::__compressed_pair_elem.2049" }
%"struct.std::__1::__compressed_pair_elem.2049" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2050", %"class.absl::optional.2050" }
%"class.absl::optional.2050" = type { %"class.absl::optional_internal::optional_data.2051" }
%"class.absl::optional_internal::optional_data.2051" = type { %"class.absl::optional_internal::optional_data_base.2052" }
%"class.absl::optional_internal::optional_data_base.2052" = type { %"class.absl::optional_internal::optional_data_dtor_base.2053" }
%"class.absl::optional_internal::optional_data_dtor_base.2053" = type { i8, [3 x i8], %union.anon.2054 }
%union.anon.2054 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2028"*, %"class.absl::optional.2060", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2060" = type { %"class.absl::optional_internal::optional_data.2061" }
%"class.absl::optional_internal::optional_data.2061" = type { %"class.absl::optional_internal::optional_data_base.2062" }
%"class.absl::optional_internal::optional_data_base.2062" = type { %"class.absl::optional_internal::optional_data_dtor_base.2063" }
%"class.absl::optional_internal::optional_data_dtor_base.2063" = type { i8, %union.anon.2064 }
%union.anon.2064 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2065", %"class.WTF::Vector.2070" }
%"class.WTF::Vector.2065" = type { %"class.WTF::VectorBuffer.2066" }
%"class.WTF::VectorBuffer.2066" = type { %"class.WTF::VectorBufferBase.2067", [128 x i8] }
%"class.WTF::VectorBufferBase.2067" = type { i32*, i32, i32 }
%"class.WTF::Vector.2070" = type { %"class.WTF::VectorBuffer.2071" }
%"class.WTF::VectorBuffer.2071" = type { %"class.WTF::VectorBufferBase.2072", [128 x i8] }
%"class.WTF::VectorBufferBase.2072" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2075" = type { %"class.WTF::VectorBuffer.2076" }
%"class.WTF::VectorBuffer.2076" = type { %"class.WTF::VectorBufferBase.2077" }
%"class.WTF::VectorBufferBase.2077" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2080" = type { %"class.WTF::HashTable.2081" }
%"class.WTF::HashTable.2081" = type <{ %"struct.WTF::KeyValuePair.2084"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2084" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2085", %"class.WTF::Vector.2090" }
%"class.WTF::HashMap.2085" = type { %"class.WTF::HashTable.2086" }
%"class.WTF::HashTable.2086" = type <{ %"struct.WTF::KeyValuePair.2089"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2089" = type opaque
%"class.WTF::Vector.2090" = type { %"class.WTF::VectorBuffer.2091" }
%"class.WTF::VectorBuffer.2091" = type { %"class.WTF::VectorBufferBase.2092" }
%"class.WTF::VectorBufferBase.2092" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2098" = type { %"class.std::__1::__compressed_pair.2099" }
%"class.std::__1::__compressed_pair.2099" = type { %"struct.std::__1::__compressed_pair_elem.2100" }
%"struct.std::__1::__compressed_pair_elem.2100" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2104" = type { %"class.WTF::VectorBuffer.2105" }
%"class.WTF::VectorBuffer.2105" = type { %"class.WTF::VectorBufferBase.2106" }
%"class.WTF::VectorBufferBase.2106" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2109 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2110" = type { %"class.blink::MemberBase.2111" }
%"class.blink::MemberBase.2111" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2112" = type { %"class.blink::MemberBase.2113" }
%"class.blink::MemberBase.2113" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2114" = type { %"class.blink::MemberBase.2115" }
%"class.blink::MemberBase.2115" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2116" = type { %"class.WTF::HashSet.2119" }
%"class.WTF::HashSet.2119" = type { %"class.WTF::HashTable.2120" }
%"class.WTF::HashTable.2120" = type <{ %"class.blink::WeakMember.2122"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2122" = type opaque
%"class.blink::HeapHashSet.2123" = type { %"class.WTF::HashSet.2126" }
%"class.WTF::HashSet.2126" = type { %"class.WTF::HashTable.2127" }
%"class.WTF::HashTable.2127" = type <{ %"class.blink::WeakMember.2129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2129" = type opaque
%"class.std::__1::unique_ptr.2130" = type { %"class.std::__1::__compressed_pair.2131" }
%"class.std::__1::__compressed_pair.2131" = type { %"struct.std::__1::__compressed_pair_elem.2132" }
%"struct.std::__1::__compressed_pair_elem.2132" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2133" }
%"class.base::time_internal::TimeBase.2133" = type { i64 }
%"class.std::__1::unique_ptr.2137" = type { %"class.std::__1::__compressed_pair.2138" }
%"class.std::__1::__compressed_pair.2138" = type { %"struct.std::__1::__compressed_pair_elem.2139" }
%"struct.std::__1::__compressed_pair_elem.2139" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2140", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2140" = type { %"class.absl::optional_internal::optional_data.2141" }
%"class.absl::optional_internal::optional_data.2141" = type { %"class.absl::optional_internal::optional_data_base.2142" }
%"class.absl::optional_internal::optional_data_base.2142" = type { %"class.absl::optional_internal::optional_data_dtor_base.2143" }
%"class.absl::optional_internal::optional_data_dtor_base.2143" = type { i8, %union.anon.2144 }
%union.anon.2144 = type { %"class.base::Time" }
%"class.blink::Member.1555" = type { %"class.blink::MemberBase.1556" }
%"class.blink::MemberBase.1556" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1557" = type { %"class.blink::MemberBase.1558" }
%"class.blink::MemberBase.1558" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type opaque
%"class.blink::Member.1559" = type { %"class.blink::MemberBase.1560" }
%"class.blink::MemberBase.1560" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1561" = type { %"class.blink::MemberBase.1562" }
%"class.blink::MemberBase.1562" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1563" = type { %"class.blink::MemberBase.1564" }
%"class.blink::MemberBase.1564" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1574", %"class.blink::HeapListHashSet.1585", %"class.blink::HeapListHashSet.1596", %"class.blink::HeapListHashSet.1607", %"class.blink::HeapListHashSet.1618", %"class.blink::HeapListHashSet.1629", %"class.blink::HeapListHashSet.1640", %"class.blink::HeapListHashSet.1651", %"class.blink::HeapListHashSet.1662", %"class.blink::HeapListHashSet.1673", %"class.blink::HeapListHashSet.1684", %"class.blink::HeapListHashSet.1695", %"class.blink::HeapListHashSet.1706", %"class.blink::HeapListHashSet.1717", %"class.blink::HeapListHashSet.1728", %"class.blink::HeapListHashSet.1739", %"class.blink::HeapListHashSet.1750", %"class.blink::HeapListHashSet.1761", %"class.blink::HeapListHashSet.1772" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1570", %"class.blink::Member.1572", %"class.blink::Member.1572", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1570" = type <{ %"class.blink::Member.1572"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1572" = type { %"class.blink::MemberBase.1573" }
%"class.blink::MemberBase.1573" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1786", %"class.blink::Member.1572", %"class.blink::Member.1572" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1574" = type { %"class.WTF::ListHashSet.base.1584", [7 x i8] }
%"class.WTF::ListHashSet.base.1584" = type <{ %"class.WTF::HashTable.1579", %"class.blink::Member.1581", %"class.blink::Member.1581", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1579" = type <{ %"class.blink::Member.1581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1581" = type { %"class.blink::MemberBase.1582" }
%"class.blink::MemberBase.1582" = type { %"class.blink::HeapListHashSetNode.1583"* }
%"class.blink::HeapListHashSetNode.1583" = type { %"class.blink::Member.1929", %"class.blink::Member.1581", %"class.blink::Member.1581" }
%"class.blink::Member.1929" = type { %"class.blink::MemberBase.1930" }
%"class.blink::MemberBase.1930" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1585" = type { %"class.WTF::ListHashSet.base.1595", [7 x i8] }
%"class.WTF::ListHashSet.base.1595" = type <{ %"class.WTF::HashTable.1590", %"class.blink::Member.1592", %"class.blink::Member.1592", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1590" = type <{ %"class.blink::Member.1592"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1592" = type { %"class.blink::MemberBase.1593" }
%"class.blink::MemberBase.1593" = type { %"class.blink::HeapListHashSetNode.1594"* }
%"class.blink::HeapListHashSetNode.1594" = type { %"class.blink::Member.1925", %"class.blink::Member.1592", %"class.blink::Member.1592" }
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1596" = type { %"class.WTF::ListHashSet.base.1606", [7 x i8] }
%"class.WTF::ListHashSet.base.1606" = type <{ %"class.WTF::HashTable.1601", %"class.blink::Member.1603", %"class.blink::Member.1603", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1601" = type <{ %"class.blink::Member.1603"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::HeapListHashSetNode.1605"* }
%"class.blink::HeapListHashSetNode.1605" = type { %"class.blink::Member.1921", %"class.blink::Member.1603", %"class.blink::Member.1603" }
%"class.blink::Member.1921" = type { %"class.blink::MemberBase.1922" }
%"class.blink::MemberBase.1922" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1607" = type { %"class.WTF::ListHashSet.base.1617", [7 x i8] }
%"class.WTF::ListHashSet.base.1617" = type <{ %"class.WTF::HashTable.1612", %"class.blink::Member.1614", %"class.blink::Member.1614", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1612" = type <{ %"class.blink::Member.1614"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::HeapListHashSetNode.1616"* }
%"class.blink::HeapListHashSetNode.1616" = type { %"class.blink::Member.1917", %"class.blink::Member.1614", %"class.blink::Member.1614" }
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1618" = type { %"class.WTF::ListHashSet.base.1628", [7 x i8] }
%"class.WTF::ListHashSet.base.1628" = type <{ %"class.WTF::HashTable.1623", %"class.blink::Member.1625", %"class.blink::Member.1625", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1623" = type <{ %"class.blink::Member.1625"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1625" = type { %"class.blink::MemberBase.1626" }
%"class.blink::MemberBase.1626" = type { %"class.blink::HeapListHashSetNode.1627"* }
%"class.blink::HeapListHashSetNode.1627" = type { %"class.blink::Member.1913", %"class.blink::Member.1625", %"class.blink::Member.1625" }
%"class.blink::Member.1913" = type { %"class.blink::MemberBase.1914" }
%"class.blink::MemberBase.1914" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1629" = type { %"class.WTF::ListHashSet.base.1639", [7 x i8] }
%"class.WTF::ListHashSet.base.1639" = type <{ %"class.WTF::HashTable.1634", %"class.blink::Member.1636", %"class.blink::Member.1636", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1634" = type <{ %"class.blink::Member.1636"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1636" = type { %"class.blink::MemberBase.1637" }
%"class.blink::MemberBase.1637" = type { %"class.blink::HeapListHashSetNode.1638"* }
%"class.blink::HeapListHashSetNode.1638" = type { %"class.blink::Member.1909", %"class.blink::Member.1636", %"class.blink::Member.1636" }
%"class.blink::Member.1909" = type { %"class.blink::MemberBase.1910" }
%"class.blink::MemberBase.1910" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1640" = type { %"class.WTF::ListHashSet.base.1650", [7 x i8] }
%"class.WTF::ListHashSet.base.1650" = type <{ %"class.WTF::HashTable.1645", %"class.blink::Member.1647", %"class.blink::Member.1647", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1645" = type <{ %"class.blink::Member.1647"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1647" = type { %"class.blink::MemberBase.1648" }
%"class.blink::MemberBase.1648" = type { %"class.blink::HeapListHashSetNode.1649"* }
%"class.blink::HeapListHashSetNode.1649" = type { %"class.blink::Member.1905", %"class.blink::Member.1647", %"class.blink::Member.1647" }
%"class.blink::Member.1905" = type { %"class.blink::MemberBase.1906" }
%"class.blink::MemberBase.1906" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1651" = type { %"class.WTF::ListHashSet.base.1661", [7 x i8] }
%"class.WTF::ListHashSet.base.1661" = type <{ %"class.WTF::HashTable.1656", %"class.blink::Member.1658", %"class.blink::Member.1658", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1656" = type <{ %"class.blink::Member.1658"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::HeapListHashSetNode.1660"* }
%"class.blink::HeapListHashSetNode.1660" = type { %"class.blink::Member.1901", %"class.blink::Member.1658", %"class.blink::Member.1658" }
%"class.blink::Member.1901" = type { %"class.blink::MemberBase.1902" }
%"class.blink::MemberBase.1902" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1662" = type { %"class.WTF::ListHashSet.base.1672", [7 x i8] }
%"class.WTF::ListHashSet.base.1672" = type <{ %"class.WTF::HashTable.1667", %"class.blink::Member.1669", %"class.blink::Member.1669", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1667" = type <{ %"class.blink::Member.1669"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1669" = type { %"class.blink::MemberBase.1670" }
%"class.blink::MemberBase.1670" = type { %"class.blink::HeapListHashSetNode.1671"* }
%"class.blink::HeapListHashSetNode.1671" = type { %"class.blink::Member.1897", %"class.blink::Member.1669", %"class.blink::Member.1669" }
%"class.blink::Member.1897" = type { %"class.blink::MemberBase.1898" }
%"class.blink::MemberBase.1898" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1673" = type { %"class.WTF::ListHashSet.base.1683", [7 x i8] }
%"class.WTF::ListHashSet.base.1683" = type <{ %"class.WTF::HashTable.1678", %"class.blink::Member.1680", %"class.blink::Member.1680", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1678" = type <{ %"class.blink::Member.1680"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1680" = type { %"class.blink::MemberBase.1681" }
%"class.blink::MemberBase.1681" = type { %"class.blink::HeapListHashSetNode.1682"* }
%"class.blink::HeapListHashSetNode.1682" = type { %"class.blink::Member.1790", %"class.blink::Member.1680", %"class.blink::Member.1680" }
%"class.blink::HeapListHashSet.1684" = type { %"class.WTF::ListHashSet.base.1694", [7 x i8] }
%"class.WTF::ListHashSet.base.1694" = type <{ %"class.WTF::HashTable.1689", %"class.blink::Member.1691", %"class.blink::Member.1691", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1689" = type <{ %"class.blink::Member.1691"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1691" = type { %"class.blink::MemberBase.1692" }
%"class.blink::MemberBase.1692" = type { %"class.blink::HeapListHashSetNode.1693"* }
%"class.blink::HeapListHashSetNode.1693" = type { %"class.blink::Member.1891", %"class.blink::Member.1691", %"class.blink::Member.1691" }
%"class.blink::Member.1891" = type { %"class.blink::MemberBase.1892" }
%"class.blink::MemberBase.1892" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1695" = type { %"class.WTF::ListHashSet.base.1705", [7 x i8] }
%"class.WTF::ListHashSet.base.1705" = type <{ %"class.WTF::HashTable.1700", %"class.blink::Member.1702", %"class.blink::Member.1702", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1700" = type <{ %"class.blink::Member.1702"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::HeapListHashSetNode.1704"* }
%"class.blink::HeapListHashSetNode.1704" = type { %"class.blink::Member.1887", %"class.blink::Member.1702", %"class.blink::Member.1702" }
%"class.blink::Member.1887" = type { %"class.blink::MemberBase.1888" }
%"class.blink::MemberBase.1888" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1706" = type { %"class.WTF::ListHashSet.base.1716", [7 x i8] }
%"class.WTF::ListHashSet.base.1716" = type <{ %"class.WTF::HashTable.1711", %"class.blink::Member.1713", %"class.blink::Member.1713", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1711" = type <{ %"class.blink::Member.1713"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1713" = type { %"class.blink::MemberBase.1714" }
%"class.blink::MemberBase.1714" = type { %"class.blink::HeapListHashSetNode.1715"* }
%"class.blink::HeapListHashSetNode.1715" = type { %"class.blink::Member.1883", %"class.blink::Member.1713", %"class.blink::Member.1713" }
%"class.blink::Member.1883" = type { %"class.blink::MemberBase.1884" }
%"class.blink::MemberBase.1884" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1717" = type { %"class.WTF::ListHashSet.base.1727", [7 x i8] }
%"class.WTF::ListHashSet.base.1727" = type <{ %"class.WTF::HashTable.1722", %"class.blink::Member.1724", %"class.blink::Member.1724", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1722" = type <{ %"class.blink::Member.1724"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1724" = type { %"class.blink::MemberBase.1725" }
%"class.blink::MemberBase.1725" = type { %"class.blink::HeapListHashSetNode.1726"* }
%"class.blink::HeapListHashSetNode.1726" = type { %"class.blink::Member.1879", %"class.blink::Member.1724", %"class.blink::Member.1724" }
%"class.blink::Member.1879" = type { %"class.blink::MemberBase.1880" }
%"class.blink::MemberBase.1880" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1728" = type { %"class.WTF::ListHashSet.base.1738", [7 x i8] }
%"class.WTF::ListHashSet.base.1738" = type <{ %"class.WTF::HashTable.1733", %"class.blink::Member.1735", %"class.blink::Member.1735", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1733" = type <{ %"class.blink::Member.1735"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1735" = type { %"class.blink::MemberBase.1736" }
%"class.blink::MemberBase.1736" = type { %"class.blink::HeapListHashSetNode.1737"* }
%"class.blink::HeapListHashSetNode.1737" = type { %"class.blink::Member.1875", %"class.blink::Member.1735", %"class.blink::Member.1735" }
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1739" = type { %"class.WTF::ListHashSet.base.1749", [7 x i8] }
%"class.WTF::ListHashSet.base.1749" = type <{ %"class.WTF::HashTable.1744", %"class.blink::Member.1746", %"class.blink::Member.1746", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1744" = type <{ %"class.blink::Member.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1746" = type { %"class.blink::MemberBase.1747" }
%"class.blink::MemberBase.1747" = type { %"class.blink::HeapListHashSetNode.1748"* }
%"class.blink::HeapListHashSetNode.1748" = type { %"class.blink::Member.1871", %"class.blink::Member.1746", %"class.blink::Member.1746" }
%"class.blink::Member.1871" = type { %"class.blink::MemberBase.1872" }
%"class.blink::MemberBase.1872" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1750" = type { %"class.WTF::ListHashSet.base.1760", [7 x i8] }
%"class.WTF::ListHashSet.base.1760" = type <{ %"class.WTF::HashTable.1755", %"class.blink::Member.1757", %"class.blink::Member.1757", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1755" = type <{ %"class.blink::Member.1757"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1757" = type { %"class.blink::MemberBase.1758" }
%"class.blink::MemberBase.1758" = type { %"class.blink::HeapListHashSetNode.1759"* }
%"class.blink::HeapListHashSetNode.1759" = type { %"class.blink::Member.1867", %"class.blink::Member.1757", %"class.blink::Member.1757" }
%"class.blink::Member.1867" = type { %"class.blink::MemberBase.1868" }
%"class.blink::MemberBase.1868" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1761" = type { %"class.WTF::ListHashSet.base.1771", [7 x i8] }
%"class.WTF::ListHashSet.base.1771" = type <{ %"class.WTF::HashTable.1766", %"class.blink::Member.1768", %"class.blink::Member.1768", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1766" = type <{ %"class.blink::Member.1768"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1768" = type { %"class.blink::MemberBase.1769" }
%"class.blink::MemberBase.1769" = type { %"class.blink::HeapListHashSetNode.1770"* }
%"class.blink::HeapListHashSetNode.1770" = type { %"class.blink::Member.1792", %"class.blink::Member.1768", %"class.blink::Member.1768" }
%"class.blink::HeapListHashSet.1772" = type { %"class.WTF::ListHashSet.base.1782", [7 x i8] }
%"class.WTF::ListHashSet.base.1782" = type <{ %"class.WTF::HashTable.1777", %"class.blink::Member.1779", %"class.blink::Member.1779", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1777" = type <{ %"class.blink::Member.1779"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1779" = type { %"class.blink::MemberBase.1780" }
%"class.blink::MemberBase.1780" = type { %"class.blink::HeapListHashSetNode.1781"* }
%"class.blink::HeapListHashSetNode.1781" = type { %"class.blink::Member.1784", %"class.blink::Member.1779", %"class.blink::Member.1779" }
%class.scoped_refptr.1783 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1784" = type { %"class.blink::MemberBase.1785" }
%"class.blink::MemberBase.1785" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1786" = type { %"class.blink::MemberBase.1787" }
%"class.blink::MemberBase.1787" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1788" = type { %"class.blink::MemberBase.1789" }
%"class.blink::MemberBase.1789" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1790" = type { %"class.blink::MemberBase.1791" }
%"class.blink::MemberBase.1791" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1792" = type { %"class.blink::MemberBase.1793" }
%"class.blink::MemberBase.1793" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1796" = type { %"class.blink::MemberBase.1797" }
%"class.blink::MemberBase.1797" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1800" }
%"class.blink::Member.1800" = type { %"class.blink::MemberBase.1801" }
%"class.blink::MemberBase.1801" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2455" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2362, %"class.std::__1::unique_ptr.742", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.756, i32 }>
%class.scoped_refptr.2362 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.756, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2421", %"class.absl::optional.2426", %"class.absl::optional.2379", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2446", i8, [7 x i8], %class.scoped_refptr.756, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.769" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.756, %"class.std::__1::unique_ptr.2363", %"class.absl::optional.2373", %"struct.std::__1::atomic.174", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2379", %"class.std::__1::unique_ptr.2384", i8, i64, %class.scoped_refptr.2418, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2419", %"class.base::WeakPtrFactory.2420" }
%"class.std::__1::unique_ptr.2363" = type { %"class.std::__1::__compressed_pair.2364" }
%"class.std::__1::__compressed_pair.2364" = type { %"struct.std::__1::__compressed_pair_elem.2365" }
%"struct.std::__1::__compressed_pair_elem.2365" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.756, i8, %"class.mojo::ScopedHandleBase.2366", %class.scoped_refptr.2367, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2368", i8*, %"class.base::WeakPtrFactory.2369" }
%"class.mojo::ScopedHandleBase.2366" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2367 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2368" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2369" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2373" = type { %"class.absl::optional_internal::optional_data.2374" }
%"class.absl::optional_internal::optional_data.2374" = type { %"class.absl::optional_internal::optional_data_base.2375" }
%"class.absl::optional_internal::optional_data_base.2375" = type { %"class.absl::optional_internal::optional_data_dtor_base.2376" }
%"class.absl::optional_internal::optional_data_dtor_base.2376" = type { i8, %union.anon.2377 }
%union.anon.2377 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2378", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2378" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2384" = type { %"class.std::__1::__compressed_pair.2385" }
%"class.std::__1::__compressed_pair.2385" = type { %"struct.std::__1::__compressed_pair_elem.2386" }
%"struct.std::__1::__compressed_pair_elem.2386" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2387", i8, i64, %class.scoped_refptr.2388, %class.scoped_refptr.2413 }
%"class.base::RepeatingCallback.2387" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2388 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2389", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2391", %"class.std::__1::map.2402", i8, [7 x i8] }>
%"class.base::RefCounted.2389" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2390 }
%class.scoped_refptr.2390 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2391" = type { %"class.std::__1::__tree.2392" }
%"class.std::__1::__tree.2392" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2393", %"class.std::__1::__compressed_pair.2397" }
%"class.std::__1::__compressed_pair.2393" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.2397" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.std::__1::map.2402" = type { %"class.std::__1::__tree.2403" }
%"class.std::__1::__tree.2403" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2404", %"class.std::__1::__compressed_pair.2408" }
%"class.std::__1::__compressed_pair.2404" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.2408" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%class.scoped_refptr.2413 = type { %"class.base::RefCountedData.2414"* }
%"class.base::RefCountedData.2414" = type opaque
%class.scoped_refptr.2418 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2419" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2420" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2421" = type { %"class.absl::optional_internal::optional_data.2422" }
%"class.absl::optional_internal::optional_data.2422" = type { %"class.absl::optional_internal::optional_data_base.2423" }
%"class.absl::optional_internal::optional_data_base.2423" = type { %"class.absl::optional_internal::optional_data_dtor_base.2424" }
%"class.absl::optional_internal::optional_data_dtor_base.2424" = type { i8, %union.anon.2425 }
%union.anon.2425 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2426" = type { %"class.absl::optional_internal::optional_data.2427" }
%"class.absl::optional_internal::optional_data.2427" = type { %"class.absl::optional_internal::optional_data_base.2428" }
%"class.absl::optional_internal::optional_data_base.2428" = type { %"class.absl::optional_internal::optional_data_dtor_base.2429" }
%"class.absl::optional_internal::optional_data_dtor_base.2429" = type { i8, [7 x i8], %union.anon.2430 }
%union.anon.2430 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2379" = type { %"class.absl::optional_internal::optional_data.2380" }
%"class.absl::optional_internal::optional_data.2380" = type { %"class.absl::optional_internal::optional_data_base.2381" }
%"class.absl::optional_internal::optional_data_base.2381" = type { %"class.absl::optional_internal::optional_data_dtor_base.2382" }
%"class.absl::optional_internal::optional_data_dtor_base.2382" = type { i8, %union.anon.2383 }
%union.anon.2383 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2431 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2431 = type { %"class.std::__1::map.2434" }
%"class.std::__1::map.2434" = type { %"class.std::__1::__tree.2435" }
%"class.std::__1::__tree.2435" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2436", %"class.std::__1::__compressed_pair.2440" }
%"class.std::__1::__compressed_pair.2436" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.2440" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2445"*, i64 }
%"class.std::__1::unique_ptr.2445" = type opaque
%"class.std::__1::map.2446" = type { %"class.std::__1::__tree.2447" }
%"class.std::__1::__tree.2447" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2448", %"class.std::__1::__compressed_pair.2452" }
%"class.std::__1::__compressed_pair.2448" = type { %"struct.std::__1::__compressed_pair_elem.646" }
%"class.std::__1::__compressed_pair.2452" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2455" = type { %"class.std::__1::__compressed_pair.2456" }
%"class.std::__1::__compressed_pair.2456" = type { %"struct.std::__1::__compressed_pair_elem.2457" }
%"struct.std::__1::__compressed_pair_elem.2457" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1802" = type { %"class.std::__1::__compressed_pair.1803" }
%"class.std::__1::__compressed_pair.1803" = type { %"struct.std::__1::__compressed_pair_elem.1804" }
%"struct.std::__1::__compressed_pair_elem.1804" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1808" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1809" = type { %"class.std::__1::__compressed_pair.1810" }
%"class.std::__1::__compressed_pair.1810" = type { %"struct.std::__1::__compressed_pair_elem.1811" }
%"struct.std::__1::__compressed_pair_elem.1811" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1498" = type { %"class.absl::optional_internal::optional_data.1499" }
%"class.absl::optional_internal::optional_data.1499" = type { %"class.absl::optional_internal::optional_data_base.1500" }
%"class.absl::optional_internal::optional_data_base.1500" = type { %"class.absl::optional_internal::optional_data_dtor_base.1501" }
%"class.absl::optional_internal::optional_data_dtor_base.1501" = type { i8, %union.anon.1502 }
%union.anon.1502 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1815" = type { %"class.std::__1::__compressed_pair.1816" }
%"class.std::__1::__compressed_pair.1816" = type { %"struct.std::__1::__compressed_pair_elem.1817" }
%"struct.std::__1::__compressed_pair_elem.1817" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1821" }
%"class.blink::Member.1821" = type { %"class.blink::MemberBase.1822" }
%"class.blink::MemberBase.1822" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2463" }
%"class.mojo::AssociatedRemote.2463" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2464" }
%"class.mojo::internal::AssociatedInterfacePtrState.2464" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2465" }
%"class.std::__1::unique_ptr.2465" = type { %"class.std::__1::__compressed_pair.2466" }
%"class.std::__1::__compressed_pair.2466" = type { %"struct.std::__1::__compressed_pair_elem.2467" }
%"struct.std::__1::__compressed_pair_elem.2467" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1823" = type { %"class.blink::Member.1824" }
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2473" }
%"class.mojo::AssociatedRemote.2473" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2474" }
%"class.mojo::internal::AssociatedInterfacePtrState.2474" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2475" }
%"class.std::__1::unique_ptr.2475" = type { %"class.std::__1::__compressed_pair.2476" }
%"class.std::__1::__compressed_pair.2476" = type { %"struct.std::__1::__compressed_pair_elem.2477" }
%"struct.std::__1::__compressed_pair_elem.2477" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1826" }
%"class.blink::Member.1826" = type { %"class.blink::MemberBase.1827" }
%"class.blink::MemberBase.1827" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.1480", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2483" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.742" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2483" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1828" = type { %"class.blink::Member.1829" }
%"class.blink::Member.1829" = type { %"class.blink::MemberBase.1830" }
%"class.blink::MemberBase.1830" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2486", %"class.blink::Member.1480", %"class.mojo::AssociatedReceiver.2487" }
%"class.blink::ThreadState::PrefinalizerRegistration.2486" = type { i8 }
%"class.mojo::AssociatedReceiver.2487" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2488" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2488" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1831" }
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2491", %"class.blink::Member.1480", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2491" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2362, %"class.std::__1::unique_ptr.742", %"class.base::WeakPtrFactory.2492" }
%"class.base::WeakPtrFactory.2492" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1833" = type { %"class.blink::Member.1834" }
%"class.blink::Member.1834" = type { %"class.blink::MemberBase.1835" }
%"class.blink::MemberBase.1835" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2495", %"class.blink::Member.1480", %"class.mojo::AssociatedReceiver.2496" }
%"class.blink::ThreadState::PrefinalizerRegistration.2495" = type { i8 }
%"class.mojo::AssociatedReceiver.2496" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2497" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2497" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1836" = type { %"class.blink::MemberBase.1837" }
%"class.blink::MemberBase.1837" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1838" = type { %"class.blink::MemberBase.1839" }
%"class.blink::MemberBase.1839" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1840" = type { %"class.blink::MemberBase.1841" }
%"class.blink::MemberBase.1841" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::HeapHashMap.1844"* }
%"class.blink::HeapHashMap.1844" = type opaque
%"class.mojo::StructPtr.1845" = type { %"class.std::__1::unique_ptr.1846" }
%"class.std::__1::unique_ptr.1846" = type { %"class.std::__1::__compressed_pair.1847" }
%"class.std::__1::__compressed_pair.1847" = type { %"struct.std::__1::__compressed_pair_elem.1848" }
%"struct.std::__1::__compressed_pair_elem.1848" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1849", %"class.mojo::InlinedStructPtr.1850" }
%"class.mojo::InlinedStructPtr.1849" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1850" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1854" = type { %"class.blink::MemberBase.1855" }
%"class.blink::MemberBase.1855" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.1856" = type { %"class.absl::optional_internal::optional_data.1857" }
%"class.absl::optional_internal::optional_data.1857" = type { %"class.absl::optional_internal::optional_data_base.1858" }
%"class.absl::optional_internal::optional_data_base.1858" = type { %"class.absl::optional_internal::optional_data_dtor_base.1859" }
%"class.absl::optional_internal::optional_data_dtor_base.1859" = type { i8, %union.anon.1860 }
%union.anon.1860 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.938", %"class.blink::DataRef.1014", %"class.blink::DataRef.1018", %"class.blink::DataRef.1209", %"class.blink::DataRef.1276", %"class.blink::DataRef.1280", %"class.blink::DataRef.1284", %"class.blink::DataRef.1288", [20 x i8], [4 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.179", [4 x i8] }>
%"class.blink::CSSPaintWorkletInput" = type { %"class.blink::PaintWorkletInput", %"class.WTF::String", float, float, %"class.WTF::HashMap.2279", %"class.WTF::Vector.2284" }
%"class.blink::PaintWorkletInput" = type { %"class.cc::PaintWorkletInput.base", %"class.blink::FloatSize", i32, %"class.std::__1::vector.2262" }
%"class.cc::PaintWorkletInput.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2296" }>
%"class.base::RefCountedThreadSafe.2296" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::PaintWorkletDeferredImage" = type { %"class.blink::GeneratedImage", %"class.cc::PaintImage" }
%"class.blink::GeneratedImage" = type { %"class.blink::Image", %"class.blink::FloatSize" }
%"class.cc::PaintImage" = type { %class.sk_sp.2298, %class.sk_sp.2301, %"class.gfx::Rect", i32, %class.sk_sp.2306, %class.sk_sp.2314, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.2298, %class.scoped_refptr.2315 }
%class.sk_sp.2301 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.2302", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2302" = type { %"class.std::__1::__compressed_pair.2303" }
%"class.std::__1::__compressed_pair.2303" = type { %"struct.std::__1::__compressed_pair_elem.2304" }
%"struct.std::__1::__compressed_pair_elem.2304" = type { i8* }
%class.sk_sp.2306 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type { %class.SkRefCnt.base, %struct.SkImageInfo, i32, %"class.std::__1::vector.2307" }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.2299, i32, i32 }
%class.sk_sp.2299 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt.2300, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt.2300 = type { %"struct.std::__1::atomic.276" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%struct.SkISize = type { i32, i32 }
%"class.std::__1::vector.2307" = type { %"class.std::__1::__vector_base.2308" }
%"class.std::__1::__vector_base.2308" = type { %"struct.cc::FrameMetadata"*, %"struct.cc::FrameMetadata"*, %"class.std::__1::__compressed_pair.2309" }
%"struct.cc::FrameMetadata" = type { i8, %"class.base::TimeDelta" }
%"class.std::__1::__compressed_pair.2309" = type { %"struct.std::__1::__compressed_pair_elem.2310" }
%"struct.std::__1::__compressed_pair_elem.2310" = type { %"struct.cc::FrameMetadata"* }
%class.sk_sp.2314 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type { %class.SkRefCnt.base, [4 x i8] }
%class.sk_sp.2298 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.scoped_refptr.2315 = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.2296", [4 x i8] }>
%"class.WTF::Vector.2317" = type { %"class.WTF::VectorBuffer.2318" }
%"class.WTF::VectorBuffer.2318" = type { %"class.WTF::VectorBufferBase.2319" }
%"class.WTF::VectorBufferBase.2319" = type { %"class.blink::CSSSyntaxDefinition"*, i32, i32 }
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.2320" }
%"class.WTF::Vector.2320" = type { %"class.WTF::VectorBuffer.2321" }
%"class.WTF::VectorBuffer.2321" = type { %"class.WTF::VectorBufferBase.2322" }
%"class.WTF::VectorBufferBase.2322" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.836" = type { %"class.WTF::VectorBuffer.837" }
%"class.WTF::VectorBuffer.837" = type { %"class.WTF::VectorBufferBase.838", [16 x i8] }
%"class.WTF::VectorBufferBase.838" = type { i16*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.cc::PaintImageBuilder" = type { %"class.cc::PaintImage" }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_ = comdat any

$_ZN4base14MakeRefCountedIN5blink20CSSPaintWorkletInputEJN3WTF6StringERKNS1_9FloatSizeERfS8_iNS3_7HashMapIS4_NSt3__110unique_ptrINS1_21CrossThreadStyleValueENSA_14default_deleteISC_EEEENS3_10StringHashENS3_10HashTraitsIS4_EENSH_ISF_EENS3_18PartitionAllocatorEEENS3_6VectorISF_Lj0ESK_EENSA_6vectorIN2cc17PaintWorkletInput11PropertyKeyENSA_9allocatorISR_EEEEEEE13scoped_refptrIT_EDpOT0_ = comdat any

$_ZN5blink13CSSPaintValue8ObserverD0Ev = comdat any

$_ZNK5blink13CSSPaintValue8Observer5TraceEPNS_7VisitorE = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN3WTF13StringBuilder6AppendEh = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_ = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm = comdat any

$_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_ = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh = comdat any

$_ZN5blink25PaintWorkletDeferredImageC2E13scoped_refptrINS_17PaintWorkletInputEERKNS_9FloatSizeE = comdat any

$_ZN5blink10TraceTraitINS_13CSSPaintValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_22CSSPaintImageGenerator8ObserverEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_22CSSPaintImageGenerator8ObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_22CSSPaintImageGenerator8ObserverEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_22CSSPaintImageGenerator8ObserverEE7GetNameEPKv = comdat any

$_ZN5blink22CSSPaintImageGenerator8ObserverD2Ev = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EEPS4_DnEENS_18HashTableAddResultISK_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_8DocumentEEENS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSD_ISA_EEEEEEvPT_ = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_22CSSPaintImageGeneratorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS1_12KeyValuePairIS6_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_8DocumentEEENS_12KeyValuePairIS7_NS3_6MemberINS3_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS2_14default_deleteIS5_EEEEEEmm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorI13scoped_refptrIN5blink15CSSVariableDataEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink19CSSSyntaxDefinitionELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19CSSCustomIdentValueEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberIKNS2_8DocumentEEENS_12KeyValuePairIS6_NS2_6MemberINS2_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSPaintValue8ObserverEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@.str = private unnamed_addr constant [7 x i8] c"paint(\00", align 1
@.str.1 = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.2 = private unnamed_addr constant [35 x i8] c"Blink.CSSPaintValue.PaintOffThread\00", align 1
@_ZTVN5blink13CSSPaintValue8ObserverE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CSSPaintImageGenerator::Observer"*)* @_ZN5blink22CSSPaintImageGenerator8ObserverD2Ev to i8*), i8* bitcast (void (%"class.blink::CSSPaintValue::Observer"*)* @_ZN5blink13CSSPaintValue8ObserverD0Ev to i8*), i8* bitcast (void (%"class.blink::CSSPaintValue::Observer"*)* @_ZN5blink13CSSPaintValue8Observer24PaintImageGeneratorReadyEv to i8*), i8* bitcast (void (%"class.blink::CSSPaintValue::Observer"*, %"class.blink::Visitor"*)* @_ZNK5blink13CSSPaintValue8Observer5TraceEPNS_7VisitorE to i8*)] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase37is_off_main_thread_css_paint_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.3 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.4 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.5 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.6 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.7 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv = private unnamed_addr constant [56 x i8] c"const char *WTF::GetStringWithTypeName() [T = char16_t]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZTVN5blink25PaintWorkletDeferredImageE = external unnamed_addr constant { [44 x i8*] }, align 8
@_ZTVN5blink14GeneratedImageE = external unnamed_addr constant { [44 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase35is_css_paint_api_arguments_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22CSSPaintImageGenerator8ObserverEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSPaintImageGenerator::Observer]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_22CSSPaintImageGenerator8ObserverEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_22CSSPaintImageGenerator8ObserverEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_22CSSPaintImageGenerator8ObserverEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.10 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.11 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.12 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.13 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.14 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS7_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSH_ISB_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [545 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<const blink::Document>, WTF::KeyValuePair<blink::WeakMember<const blink::Document>, blink::Member<blink::CSSPaintImageGenerator> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<const blink::Document>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<const blink::Document> >, WTF::HashTraits<blink::Member<blink::CSSPaintImageGenerator> > >, WTF::HashTraits<blink::WeakMember<const blink::Document> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEEEEPKcv = private unnamed_addr constant [155 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CrossThreadStyleValue, std::__1::default_delete<blink::CrossThreadStyleValue> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVector<blink::Member<blink::CSSStyleValue>, 0>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.15 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.16 = private unnamed_addr constant [18 x i8] c"new_size >= size_\00", align 1
@.str.17 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.18 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleValueEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleValue>, WTF::VectorTraits<blink::Member<blink::CSSStyleValue> > >]\00", align 1
@_ZZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink13CSSPaintValueC1EPNS_19CSSCustomIdentValueEb = hidden unnamed_addr alias void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, i1), void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, i1)* @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueEb
@_ZN5blink13CSSPaintValueC1EPNS_19CSSCustomIdentValueE = hidden unnamed_addr alias void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*), void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*)* @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueE
@_ZN5blink13CSSPaintValueC1EPNS_19CSSCustomIdentValueERN3WTF6VectorI13scoped_refptrINS_15CSSVariableDataEELj0ENS3_18PartitionAllocatorEEE = hidden unnamed_addr alias void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, %"class.WTF::Vector.577"*), void (%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, %"class.WTF::Vector.577"*)* @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueERN3WTF6VectorI13scoped_refptrINS_15CSSVariableDataEELj0ENS3_18PartitionAllocatorEEE
@_ZN5blink13CSSPaintValueD1Ev = hidden unnamed_addr alias void (%"class.blink::CSSPaintValue"*), void (%"class.blink::CSSPaintValue"*)* @_ZN5blink13CSSPaintValueD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueEb(%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0
  tail call void @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSImageGeneratorValue"* %4, i32 20) #12
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSCustomIdentValue"* %1, %"class.blink::CSSCustomIdentValue"** %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4
  %8 = bitcast %"class.blink::HeapHashMap"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #12
  %9 = ptrtoint %"class.blink::CSSPaintValue"* %0 to i64
  %10 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_22CSSPaintImageGenerator8ObserverEEEPhm(i64 16) #12
  %11 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink13CSSPaintValue8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %10, i64 8
  %13 = bitcast i8* %12 to i64*
  store i64 %9, i64* %13, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 -4
  %15 = bitcast i8* %14 to i16*
  %16 = load atomic i16, i16* %15 monotonic, align 2
  %17 = or i16 %16, 1
  store atomic i16 %17, i16* %15 release, align 2
  %18 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 5, i32 0, i32 0
  %19 = bitcast %"class.blink::CSSPaintValue::Observer"** %18 to i8**
  store i8* %10, i8** %19, align 8
  %20 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %21 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 8
  %22 = bitcast %"class.blink::HeapVector.568"** %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false)
  br i1 %2, label %23, label %27

23:                                               ; preds = %3
  %24 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_off_main_thread_css_paint_enabled_E, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  %26 = select i1 %25, i32 2, i32 0
  br label %27

27:                                               ; preds = %23, %3
  %28 = phi i32 [ 2, %3 ], [ %26, %23 ]
  store i32 %28, i32* %21, align 8
  ret void
}

declare void @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSImageGeneratorValue"*, i32) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueE(%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::Thread"* @_ZN5blink6Thread16CompositorThreadEv() #12
  %4 = icmp eq %"class.blink::Thread"* %3, null
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0
  tail call void @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSImageGeneratorValue"* %5, i32 20) #12
  %6 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 1
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSCustomIdentValue"* %1, %"class.blink::CSSCustomIdentValue"** %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::HeapHashMap"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 20, i1 false) #12
  %10 = ptrtoint %"class.blink::CSSPaintValue"* %0 to i64
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_22CSSPaintImageGenerator8ObserverEEEPhm(i64 16) #12
  %12 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink13CSSPaintValue8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %11, i64 8
  %14 = bitcast i8* %13 to i64*
  store i64 %10, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 -4
  %16 = bitcast i8* %15 to i16*
  %17 = load atomic i16, i16* %16 monotonic, align 2
  %18 = or i16 %17, 1
  store atomic i16 %18, i16* %16 release, align 2
  %19 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 5, i32 0, i32 0
  %20 = bitcast %"class.blink::CSSPaintValue::Observer"** %19 to i8**
  store i8* %11, i8** %20, align 8
  %21 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 8
  %23 = bitcast %"class.blink::HeapVector.568"** %21 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #12
  br i1 %4, label %28, label %24

24:                                               ; preds = %2
  %25 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_off_main_thread_css_paint_enabled_E, align 1, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = select i1 %26, i32 2, i32 0
  br label %28

28:                                               ; preds = %2, %24
  %29 = phi i32 [ 2, %2 ], [ %27, %24 ]
  store i32 %29, i32* %22, align 8
  ret void
}

declare %"class.blink::Thread"* @_ZN5blink6Thread16CompositorThreadEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValueC2EPNS_19CSSCustomIdentValueERN3WTF6VectorI13scoped_refptrINS_15CSSVariableDataEELj0ENS3_18PartitionAllocatorEEE(%"class.blink::CSSPaintValue"*, %"class.blink::CSSCustomIdentValue"*, %"class.WTF::Vector.577"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = tail call %"class.blink::Thread"* @_ZN5blink6Thread16CompositorThreadEv() #12
  %5 = icmp eq %"class.blink::Thread"* %4, null
  %6 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0
  tail call void @_ZN5blink22CSSImageGeneratorValueC2ENS_8CSSValue9ClassTypeE(%"class.blink::CSSImageGeneratorValue"* %6, i32 20) #12
  %7 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 1
  store i8 0, i8* %7, align 8
  %8 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::CSSCustomIdentValue"* %1, %"class.blink::CSSCustomIdentValue"** %8, align 8
  %9 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4
  %10 = bitcast %"class.blink::HeapHashMap"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 20, i1 false) #12
  %11 = ptrtoint %"class.blink::CSSPaintValue"* %0 to i64
  %12 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_22CSSPaintImageGenerator8ObserverEEEPhm(i64 16) #12
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink13CSSPaintValue8ObserverE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %12, i64 8
  %15 = bitcast i8* %14 to i64*
  store i64 %11, i64* %15, align 8
  %16 = getelementptr inbounds i8, i8* %12, i64 -4
  %17 = bitcast i8* %16 to i16*
  %18 = load atomic i16, i16* %17 monotonic, align 2
  %19 = or i16 %18, 1
  store atomic i16 %19, i16* %17 release, align 2
  %20 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 5, i32 0, i32 0
  %21 = bitcast %"class.blink::CSSPaintValue::Observer"** %20 to i8**
  store i8* %12, i8** %21, align 8
  %22 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 8
  %24 = bitcast %"class.blink::HeapVector.568"** %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #12
  br i1 %5, label %29, label %25

25:                                               ; preds = %3
  %26 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase37is_off_main_thread_css_paint_enabled_E, align 1, !range !2
  %27 = icmp eq i8 %26, 0
  %28 = select i1 %27, i32 2, i32 0
  br label %29

29:                                               ; preds = %3, %25
  %30 = phi i32 [ 2, %3 ], [ %28, %25 ]
  store i32 %30, i32* %23, align 8
  %31 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7
  %32 = bitcast %"class.WTF::Vector.577"* %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::Vector.577"* %31 to i64*
  store atomic i64 0, i64* %32 monotonic, align 8
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.577", %"class.WTF::Vector.577"* %2, i64 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %35, align 4
  %38 = load i32, i32* %36, align 4
  store i32 %38, i32* %35, align 4
  store i32 %37, i32* %36, align 4
  %39 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %40 = getelementptr inbounds %"class.WTF::Vector.577", %"class.WTF::Vector.577"* %2, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %39, align 4
  %42 = load i32, i32* %40, align 4
  store i32 %42, i32* %39, align 4
  store i32 %41, i32* %40, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValueD2Ev(%"class.blink::CSSPaintValue"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7
  %3 = getelementptr inbounds %"class.WTF::Vector.577", %"class.WTF::Vector.577"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.580*, %class.scoped_refptr.580** %3, align 8
  %5 = icmp eq %class.scoped_refptr.580* %4, null
  br i1 %5, label %34, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.580* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %32, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %4, i64 %12
  br label %14

14:                                               ; preds = %26, %11
  %15 = phi %class.scoped_refptr.580* [ %27, %26 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %15, i64 0, i32 0
  %17 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %16, align 8
  %18 = icmp eq %"class.blink::CSSVariableData"* %17, null
  br i1 %18, label %26, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %17, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %20) #12
  %21 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %19
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %17) #12
  %25 = bitcast %"class.blink::CSSVariableData"* %17 to i8*
  tail call void @free(i8* %25) #12
  br label %26

26:                                               ; preds = %24, %19, %14
  %27 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %15, i64 1
  %28 = icmp eq %class.scoped_refptr.580* %27, %13
  br i1 %28, label %29, label %14

29:                                               ; preds = %26
  store i32 0, i32* %8, align 4
  %30 = bitcast %"class.WTF::Vector.577"* %2 to i8**
  %31 = load i8*, i8** %30, align 8
  br label %32

32:                                               ; preds = %29, %6
  %33 = phi i8* [ %31, %29 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %33) #12
  store %class.scoped_refptr.580* null, %class.scoped_refptr.580** %3, align 8
  br label %34

34:                                               ; preds = %1, %32
  %35 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0
  tail call void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"* %35) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink22CSSImageGeneratorValueD2Ev(%"class.blink::CSSImageGeneratorValue"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue13CustomCSSTextEv(%"class.blink::CSSPaintValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::StringBuilder", align 8
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.blink::CSSParserTokenRange", align 8
  %8 = bitcast %"class.WTF::StringBuilder"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 48, i1 false)
  %9 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 1
  %11 = bitcast %union.anon.830* %10 to i8*
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 2
  store i32 0, i32* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 3
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %2, i64 0, i32 4
  store i8 0, i8* %14, align 1
  %15 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #12
  %16 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %17 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %16, i64* %17, align 8
  %18 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0), i8** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 6, i32* %19, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %3)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #12
  %20 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %21 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %21, align 8
  %23 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSCustomIdentValue13CustomCSSTextEv(%"class.blink::CSSCustomIdentValue"* %22) #12
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %26, align 8
  %27 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %28 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 0, i32* %29, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  br label %50

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %31, align 8
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 1
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %36 = bitcast i8** %35 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %34, %"class.WTF::StringImpl"** %36, align 8
  %37 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %33, i32* %37, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %4)
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %30
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %30
  %47 = phi i32 [ %45, %44 ], [ %43, %30 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %50

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #12
  br label %50

50:                                               ; preds = %25, %46, %49
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  %51 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %52 = load %class.scoped_refptr.580*, %class.scoped_refptr.580** %51, align 8
  %53 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %52, i64 %55
  %57 = icmp eq i32 %54, 0
  br i1 %57, label %72, label %58

58:                                               ; preds = %50
  %59 = bitcast %"class.WTF::StringView"* %5 to i8*
  %60 = bitcast %"class.WTF::StringView"* %5 to i64*
  %61 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %62 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  %63 = bitcast %"class.WTF::StringView"* %6 to i8*
  %64 = bitcast %"class.blink::CSSParserTokenRange"* %7 to i8*
  %65 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %7, i64 0, i32 0
  %66 = getelementptr inbounds %"class.blink::CSSParserTokenRange", %"class.blink::CSSParserTokenRange"* %7, i64 0, i32 1
  %67 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  %68 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %69 = bitcast i8** %68 to %"class.WTF::StringImpl"**
  %70 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  %71 = bitcast %"class.WTF::StringView"* %6 to i64*
  br label %90

72:                                               ; preds = %121, %50
  call void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"* nonnull %2, i8 zeroext 41) #12
  %73 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %2) #12
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #12
  br label %89

89:                                               ; preds = %72, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #12
  ret %"class.WTF::StringImpl"* %73

90:                                               ; preds = %58, %121
  %91 = phi %class.scoped_refptr.580* [ %52, %58 ], [ %122, %121 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  %92 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %92, i64* %60, align 8
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.1, i64 0, i64 0), i8** %61, align 8
  store i32 2, i32* %62, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %5)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #12
  %93 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %91, i64 0, i32 0
  %94 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %93, align 8
  %95 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %94, i64 0, i32 2, i32 0, i32 0, i32 0
  %96 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %94, i64 0, i32 2, i32 0, i32 0, i32 2
  %98 = load i32, i32* %97, align 4
  %99 = zext i32 %98 to i64
  %100 = getelementptr inbounds %"class.blink::CSSParserToken", %"class.blink::CSSParserToken"* %96, i64 %99
  store %"class.blink::CSSParserToken"* %96, %"class.blink::CSSParserToken"** %65, align 8
  store %"class.blink::CSSParserToken"* %100, %"class.blink::CSSParserToken"** %66, align 8
  %101 = call %"class.WTF::StringImpl"* @_ZNK5blink19CSSParserTokenRange9SerializeEv(%"class.blink::CSSParserTokenRange"* nonnull %7) #12
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %90
  store i8* null, i8** %68, align 8
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %104, i64* %71, align 8
  store i32 0, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  br label %121

105:                                              ; preds = %90
  store %"class.WTF::StringImpl"* %101, %"class.WTF::StringImpl"** %67, align 8
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %69, align 8
  store i32 %107, i32* %70, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %2, %"class.WTF::StringView"* nonnull dereferenceable(24) %6)
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %105
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %105
  %118 = phi i32 [ %116, %115 ], [ %114, %105 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #12
  br label %121

121:                                              ; preds = %103, %117, %120
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  %122 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %91, i64 1
  %123 = icmp eq %class.scoped_refptr.580* %122, %56
  br i1 %123, label %72, label %90
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !2
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #12
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !4

46:                                               ; preds = %37
  tail call void @llvm.trap() #12
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #12
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #12
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #12
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSCustomIdentValue13CustomCSSTextEv(%"class.blink::CSSCustomIdentValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink19CSSParserTokenRange9SerializeEv(%"class.blink::CSSParserTokenRange"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue7GetNameEv(%"class.blink::CSSPaintValue"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #12
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !4

21:                                               ; preds = %12
  tail call void @llvm.trap() #12
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %7, %22
  %25 = load atomic i32, i32* %8 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %40

30:                                               ; preds = %24
  %31 = zext i32 %29 to i33
  %32 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %31, i33 1) #12
  %33 = extractvalue { i33, i1 } %32, 1
  %34 = extractvalue { i33, i1 } %32, 0
  %35 = icmp slt i33 %34, 0
  %36 = or i1 %33, %35
  br i1 %36, label %37, label %38, !prof !4

37:                                               ; preds = %30
  tail call void @llvm.trap() #12
  unreachable

38:                                               ; preds = %30
  %39 = trunc i33 %34 to i32
  store i32 %39, i32* %28, align 4
  br label %40

40:                                               ; preds = %24, %38
  %41 = phi i32 [ %39, %38 ], [ %29, %24 ]
  %42 = load atomic i32, i32* %8 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %47 = add i32 %41, -1
  store i32 %47, i32* %46, align 4
  br label %48

48:                                               ; preds = %45, %40
  %49 = phi i32 [ %47, %45 ], [ %41, %40 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #12
  br label %52

52:                                               ; preds = %1, %48, %51
  ret %"class.WTF::StringImpl"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.841"* @_ZNK5blink13CSSPaintValue28NativeInvalidationPropertiesERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Document"*, align 8
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0
  %5 = bitcast %"class.blink::Document"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %6 = call %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"* %4, %"class.blink::Document"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %7 = icmp eq %"class.blink::CSSPaintImageGenerator"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSPaintImageGenerator"* %6 to %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)***
  %10 = load %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)** %10, i64 3
  %12 = load %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)** %11, align 8
  %13 = call dereferenceable(16) %"class.WTF::Vector.841"* %12(%"class.blink::CSSPaintImageGenerator"* nonnull %6) #12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.WTF::Vector.841"* [ %13, %8 ], [ null, %2 ]
  ret %"class.WTF::Vector.841"* %15
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"*, %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  %4 = ptrtoint %"class.blink::Document"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.186", %"class.WTF::HashMap.186"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.189"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.186", %"class.WTF::HashMap.186"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = icmp eq %"class.blink::Document"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = icmp eq %"class.blink::Document"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = icmp eq %"class.blink::Document"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.189"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.189"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::CSSPaintImageGenerator"*, %"class.blink::CSSPaintImageGenerator"** %71, align 8
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi %"class.blink::CSSPaintImageGenerator"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %52 ]
  ret %"class.blink::CSSPaintImageGenerator"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::Vector.846"* @_ZNK5blink13CSSPaintValue28CustomInvalidationPropertiesERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Document"*, align 8
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0
  %5 = bitcast %"class.blink::Document"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %6 = call %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"* %4, %"class.blink::Document"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %7 = icmp eq %"class.blink::CSSPaintImageGenerator"* %6, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::CSSPaintImageGenerator"* %6 to %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)***
  %10 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %10, i64 4
  %12 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %11, align 8
  %13 = call dereferenceable(16) %"class.WTF::Vector.846"* %12(%"class.blink::CSSPaintImageGenerator"* nonnull %6) #12
  br label %14

14:                                               ; preds = %2, %8
  %15 = phi %"class.WTF::Vector.846"* [ %13, %8 ], [ null, %2 ]
  ret %"class.WTF::Vector.846"* %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSPaintValue21IsUsingCustomPropertyERKN3WTF12AtomicStringERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.WTF::AtomicString"* nocapture readonly dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Document"*, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0
  %6 = bitcast %"class.blink::Document"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store %"class.blink::Document"* %2, %"class.blink::Document"** %4, align 8
  %7 = call %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"* %5, %"class.blink::Document"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %8 = icmp eq %"class.blink::CSSPaintImageGenerator"* %7, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::CSSPaintImageGenerator"* %7 to i1 (%"class.blink::CSSPaintImageGenerator"*)***
  %11 = load i1 (%"class.blink::CSSPaintImageGenerator"*)**, i1 (%"class.blink::CSSPaintImageGenerator"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %11, i64 7
  %13 = load i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.blink::CSSPaintImageGenerator"* nonnull %7) #12
  br i1 %14, label %15, label %46

15:                                               ; preds = %9
  %16 = bitcast %"class.blink::CSSPaintImageGenerator"* %7 to %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)***
  %17 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %17, i64 4
  %19 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %18, align 8
  %20 = call dereferenceable(16) %"class.WTF::Vector.846"* %19(%"class.blink::CSSPaintImageGenerator"* nonnull %7) #12
  %21 = getelementptr inbounds %"class.WTF::Vector.846", %"class.WTF::Vector.846"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %21, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.846", %"class.WTF::Vector.846"* %20, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %22, i64 %25
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %46, label %28

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %1, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  br label %31

31:                                               ; preds = %36, %28
  %32 = phi %"class.WTF::AtomicString"* [ %22, %28 ], [ %37, %36 ]
  %33 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, %30
  br i1 %35, label %39, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %32, i64 1
  %38 = icmp ult %"class.WTF::AtomicString"* %37, %26
  br i1 %38, label %31, label %46

39:                                               ; preds = %31
  %40 = ptrtoint %"class.WTF::AtomicString"* %32 to i64
  %41 = ptrtoint %"class.WTF::AtomicString"* %22 to i64
  %42 = sub i64 %40, %41
  %43 = lshr exact i64 %42, 3
  %44 = trunc i64 %43 to i32
  %45 = icmp ne i32 %44, -1
  br label %46

46:                                               ; preds = %36, %39, %15, %9, %3
  %47 = phi i1 [ false, %3 ], [ false, %9 ], [ %45, %39 ], [ false, %15 ], [ false, %36 ]
  ret i1 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::CSSPaintImageGenerator"* @_ZN5blink13CSSPaintValue15EnsureGeneratorERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Document"*, align 8
  %4 = alloca i8*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.blink::Document"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %7 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #12
  store i8* null, i8** %4, align 8
  %8 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0, i32 0
  %9 = call { %"struct.WTF::KeyValuePair.189"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EEPS4_DnEENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.187"* %8, %"class.blink::Document"** nonnull dereferenceable(8) %3, i8** nonnull dereferenceable(8) %4) #12
  %10 = extractvalue { %"struct.WTF::KeyValuePair.189"*, i8 } %9, 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %10, i64 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %12 = getelementptr inbounds %"class.blink::Member.556", %"class.blink::Member.556"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.blink::CSSPaintImageGenerator"*, %"class.blink::CSSPaintImageGenerator"** %12, align 8
  %14 = icmp eq %"class.blink::CSSPaintImageGenerator"* %13, null
  br i1 %14, label %15, label %97

15:                                               ; preds = %2
  %16 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %18, i64 0, i32 2, i32 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %66, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %39

29:                                               ; preds = %22
  %30 = zext i32 %28 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #12
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !4

36:                                               ; preds = %29
  call void @llvm.trap() #12
  unreachable

37:                                               ; preds = %29
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %27, align 4
  br label %39

39:                                               ; preds = %22, %37
  %40 = phi i32 [ %38, %37 ], [ %28, %22 ]
  %41 = load atomic i32, i32* %23 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  br i1 %43, label %45, label %55

45:                                               ; preds = %39
  %46 = zext i32 %40 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #12
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !4

52:                                               ; preds = %45
  call void @llvm.trap() #12
  unreachable

53:                                               ; preds = %45
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %39
  %56 = phi i32 [ %54, %53 ], [ %40, %39 ]
  %57 = load atomic i32, i32* %23 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %62

60:                                               ; preds = %55
  %61 = add i32 %56, -1
  store i32 %61, i32* %44, align 4
  br label %62

62:                                               ; preds = %60, %55
  %63 = phi i32 [ %61, %60 ], [ %56, %55 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %66

66:                                               ; preds = %15, %62, %65
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %67, align 8
  %68 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 5, i32 0, i32 0
  %69 = load %"class.blink::CSSPaintValue::Observer"*, %"class.blink::CSSPaintValue::Observer"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::CSSPaintValue::Observer", %"class.blink::CSSPaintValue::Observer"* %69, i64 0, i32 0
  %71 = call %"class.blink::CSSPaintImageGenerator"* @_ZN5blink22CSSPaintImageGenerator6CreateERKN3WTF6StringERKNS_8DocumentEPNS0_8ObserverE(%"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::Document"* dereferenceable(2848) %1, %"class.blink::CSSPaintImageGenerator::Observer"* %70) #12
  %72 = ptrtoint %"class.blink::CSSPaintImageGenerator"* %71 to i64
  %73 = bitcast %"class.blink::Member.556"* %11 to i64*
  store atomic i64 %72, i64* %73 monotonic, align 8
  %74 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %79, label %76

76:                                               ; preds = %66
  %77 = bitcast %"class.blink::CSSPaintImageGenerator"* %71 to i8*
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %77) #12
  br label %79

79:                                               ; preds = %66, %76
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #12
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %96 = load %"class.blink::CSSPaintImageGenerator"*, %"class.blink::CSSPaintImageGenerator"** %12, align 8
  br label %97

97:                                               ; preds = %2, %95
  %98 = phi %"class.blink::CSSPaintImageGenerator"* [ %13, %2 ], [ %96, %95 ]
  ret %"class.blink::CSSPaintImageGenerator"* %98
}

declare %"class.blink::CSSPaintImageGenerator"* @_ZN5blink22CSSPaintImageGenerator6CreateERKN3WTF6StringERKNS_8DocumentEPNS0_8ObserverE(%"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::CSSPaintImageGenerator::Observer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Image"* @_ZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeE(%"class.blink::CSSPaintValue"*, %"class.blink::ImageResourceObserver"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.2287", align 8
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca %"class.std::__1::vector.2262", align 8
  %10 = alloca %"class.absl::optional.2274", align 8
  %11 = alloca %"class.WTF::Vector.2284", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca i32, align 4
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 7427640235712281649394745344
  %18 = icmp eq i160 %17, 0
  br i1 %18, label %19, label %429

19:                                               ; preds = %5
  %20 = tail call dereferenceable(8) %"class.blink::CSSPaintImageGenerator"* @_ZN5blink13CSSPaintValue15EnsureGeneratorERKNS_8DocumentE(%"class.blink::CSSPaintValue"* %0, %"class.blink::Document"* dereferenceable(2848) %2)
  %21 = bitcast %"class.blink::CSSPaintImageGenerator"* %20 to i1 (%"class.blink::CSSPaintImageGenerator"*)***
  %22 = load i1 (%"class.blink::CSSPaintImageGenerator"*)**, i1 (%"class.blink::CSSPaintImageGenerator"*)*** %21, align 8
  %23 = getelementptr inbounds i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %22, i64 7
  %24 = load i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %23, align 8
  %25 = tail call zeroext i1 %24(%"class.blink::CSSPaintImageGenerator"* %20) #12
  br i1 %25, label %26, label %429

26:                                               ; preds = %19
  %27 = tail call zeroext i1 @_ZN5blink13CSSPaintValue19ParseInputArgumentsERKNS_8DocumentE(%"class.blink::CSSPaintValue"* %0, %"class.blink::Document"* dereferenceable(2848) %2)
  br i1 %27, label %28, label %429

28:                                               ; preds = %26
  %29 = bitcast %"class.blink::ImageResourceObserver"* %1 to %"class.blink::LayoutObject"*
  %30 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %30) #12
  store float 1.000000e+00, float* %7, align 4
  %31 = getelementptr inbounds %"class.blink::ImageResourceObserver", %"class.blink::ImageResourceObserver"* %1, i64 5
  %32 = bitcast %"class.blink::ImageResourceObserver"* %31 to %"class.blink::Node"**
  %33 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %28, %35
  %36 = phi %"class.blink::LayoutObject"* [ %38, %35 ], [ %29, %28 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %35, label %42

42:                                               ; preds = %35, %28
  %43 = phi %"class.blink::Node"* [ %33, %28 ], [ %40, %35 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %47) #12
  %49 = icmp eq %"class.blink::LocalFrame"* %48, null
  br i1 %49, label %94, label %50

50:                                               ; preds = %42
  %51 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %52 = icmp eq %"class.blink::Node"* %51, null
  br i1 %52, label %53, label %60

53:                                               ; preds = %50, %53
  %54 = phi %"class.blink::LayoutObject"* [ %56, %53 ], [ %29, %50 ]
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %54, i64 0, i32 7
  %56 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %56, i64 0, i32 6, i32 0, i32 0
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %57, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %53, label %60

60:                                               ; preds = %53, %50
  %61 = phi %"class.blink::Node"* [ %51, %50 ], [ %58, %53 ]
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %61, i64 0, i32 3, i32 0, i32 0
  %63 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %63, i64 0, i32 2, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %65) #12
  %67 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %66, i64 0, i32 0
  %68 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %67) #12
  %69 = icmp eq %"class.blink::Page"* %68, null
  br i1 %69, label %94, label %70

70:                                               ; preds = %60
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %32, align 8
  %72 = icmp eq %"class.blink::Node"* %71, null
  br i1 %72, label %73, label %80

73:                                               ; preds = %70, %73
  %74 = phi %"class.blink::LayoutObject"* [ %76, %73 ], [ %29, %70 ]
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 7
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 6, i32 0, i32 0
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %77, align 8
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %73, label %80

80:                                               ; preds = %73, %70
  %81 = phi %"class.blink::Node"* [ %71, %70 ], [ %78, %73 ]
  %82 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %81, i64 0, i32 3, i32 0, i32 0
  %83 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %82, align 8
  %84 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %83, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::Document"*, %"class.blink::Document"** %84, align 8
  %86 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %85) #12
  %87 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %86, i64 0, i32 0
  %88 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %87) #12
  %89 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %88, i64 0, i32 31
  %90 = bitcast float* %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = bitcast float* %7 to i32*
  store i32 %91, i32* %92, align 4
  %93 = bitcast i32 %91 to float
  br label %94

94:                                               ; preds = %60, %42, %80
  %95 = phi float [ 1.000000e+00, %60 ], [ 1.000000e+00, %42 ], [ %93, %80 ]
  %96 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 8
  %97 = load i32, i32* %96, align 8
  %98 = icmp eq i32 %97, 2
  br i1 %98, label %417, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 31
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %101, 2
  br i1 %102, label %417, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.blink::ImageResourceObserver", %"class.blink::ImageResourceObserver"* %1, i64 9
  %105 = bitcast %"class.blink::ImageResourceObserver"* %104 to %"class.blink::FragmentData"*
  %106 = tail call dereferenceable(120) %"struct.blink::FragmentData::RareData"* @_ZN5blink12FragmentData14EnsureRareDataEv(%"class.blink::FragmentData"* %105) #12
  %107 = bitcast %"class.blink::CSSPaintImageGenerator"* %20 to %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)***
  %108 = load %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*** %107, align 8
  %109 = getelementptr inbounds %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)** %108, i64 3
  %110 = load %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.841"* (%"class.blink::CSSPaintImageGenerator"*)** %109, align 8
  %111 = tail call dereferenceable(16) %"class.WTF::Vector.841"* %110(%"class.blink::CSSPaintImageGenerator"* %20) #12
  %112 = bitcast %"class.blink::CSSPaintImageGenerator"* %20 to %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)***
  %113 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*** %112, align 8
  %114 = getelementptr inbounds %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %113, i64 4
  %115 = load %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.846"* (%"class.blink::CSSPaintImageGenerator"*)** %114, align 8
  %116 = tail call dereferenceable(16) %"class.WTF::Vector.846"* %115(%"class.blink::CSSPaintImageGenerator"* %20) #12
  %117 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %117) #12
  %118 = getelementptr inbounds %"class.blink::ImageResourceObserver", %"class.blink::ImageResourceObserver"* %1, i64 4
  %119 = bitcast %"class.blink::ImageResourceObserver"* %118 to %"class.blink::ComputedStyleBase"**
  %120 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %119, align 8
  %121 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %120, i64 0, i32 1, i32 0, i32 0
  %122 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %122, i64 0, i32 2, i32 0, i32 0
  %124 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %124, i64 0, i32 6
  %126 = bitcast float* %125 to i32*
  %127 = load i32, i32* %126, align 8
  %128 = bitcast float* %8 to i32*
  store i32 %127, i32* %128, align 4
  %129 = bitcast %"class.std::__1::vector.2262"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %129) #12
  %130 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %9, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %9, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %129, i8 0, i64 24, i1 false) #12
  %132 = getelementptr inbounds %"class.absl::optional.2274", %"class.absl::optional.2274"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %132) #12
  %133 = getelementptr inbounds %"class.absl::optional.2274", %"class.absl::optional.2274"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %134 = getelementptr inbounds %"class.absl::optional.2274", %"class.absl::optional.2274"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.blink::ImageResourceObserver", %"class.blink::ImageResourceObserver"* %1, i64 10
  %136 = bitcast %"class.blink::ImageResourceObserver"* %135 to %"struct.blink::FragmentData::RareData"**
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %132, i8 -86, i64 32, i1 false)
  %137 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %136, align 8
  %138 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %137, i64 0, i32 1
  %139 = load i64, i64* %138, align 8
  call void @_ZN5blink28PaintWorkletStylePropertyMap20BuildCrossThreadDataERKNS_8DocumentEmRKNS_13ComputedStyleERKN3WTF6VectorINS_13CSSPropertyIDELj0ENS7_18PartitionAllocatorEEERKNS8_INS7_12AtomicStringELj0ESA_EERNSt3__16vectorIN2cc17PaintWorkletInput11PropertyKeyENSI_9allocatorISM_EEEE(%"class.absl::optional.2274"* nonnull sret %10, %"class.blink::Document"* dereferenceable(2848) %2, i64 %139, %"class.blink::ComputedStyle"* dereferenceable(104) %3, %"class.WTF::Vector.841"* dereferenceable(16) %111, %"class.WTF::Vector.846"* dereferenceable(16) %116, %"class.std::__1::vector.2262"* nonnull dereferenceable(24) %9) #12
  %140 = load i32, i32* %96, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %153

142:                                              ; preds = %103
  %143 = load atomic i64, i64* @_ZZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %144 = inttoptr i64 %143 to %"class.base::HistogramBase"*
  %145 = icmp eq i64 %143, 0
  br i1 %145, label %146, label %149

146:                                              ; preds = %142
  %147 = call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.2, i64 0, i64 0), i32 1) #12
  %148 = ptrtoint %"class.base::HistogramBase"* %147 to i64
  store atomic i64 %148, i64* @_ZZN5blink13CSSPaintValue8GetImageERKNS_21ImageResourceObserverERKNS_8DocumentERKNS_13ComputedStyleERKNS_9FloatSizeEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %149

149:                                              ; preds = %142, %146
  %150 = phi %"class.base::HistogramBase"* [ %144, %142 ], [ %147, %146 ]
  %151 = load i8, i8* %132, align 8, !range !2
  %152 = icmp ne i8 %151, 0
  call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %150, i1 zeroext %152) #12
  br label %153

153:                                              ; preds = %149, %103
  %154 = load i8, i8* %132, align 8, !range !2
  %155 = icmp ne i8 %154, 0
  %156 = select i1 %155, i32 1, i32 2
  store i32 %156, i32* %96, align 8
  br i1 %155, label %157, label %400

157:                                              ; preds = %153
  %158 = bitcast %"class.WTF::Vector.2284"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #12
  %159 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %11, i64 0, i32 0, i32 0, i32 0
  %160 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %11, i64 0, i32 0, i32 0, i32 1
  %161 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %11, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 0, i64 16, i1 false) #12
  %162 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %163 = load %"class.blink::HeapVector.568"*, %"class.blink::HeapVector.568"** %162, align 8
  %164 = icmp eq %"class.blink::HeapVector.568"* %163, null
  br i1 %164, label %204, label %165

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %163, i64 0, i32 0, i32 0, i32 0, i32 0
  %167 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %163, i64 0, i32 0, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = zext i32 %169 to i64
  %171 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %167, i64 %170
  %172 = icmp eq i32 %169, 0
  br i1 %172, label %204, label %173

173:                                              ; preds = %165
  %174 = bitcast %"class.std::__1::unique_ptr.2287"* %6 to i8*
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %6, i64 0, i32 0, i32 0, i32 0
  br label %176

176:                                              ; preds = %201, %173
  %177 = phi %"class.blink::Member.574"* [ %167, %173 ], [ %202, %201 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #12
  store %"class.blink::CrossThreadStyleValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CrossThreadStyleValue"*), %"class.blink::CrossThreadStyleValue"** %175, align 8
  %178 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %177, i64 0, i32 0, i32 0
  %179 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %178, align 8
  %180 = call %"class.blink::CrossThreadStyleValue"* @_ZN5blink18ComputedStyleUtils38CrossThreadStyleValueFromCSSStyleValueEPNS_13CSSStyleValueE(%"class.blink::CSSStyleValue"* %179) #12
  store %"class.blink::CrossThreadStyleValue"* %180, %"class.blink::CrossThreadStyleValue"** %175, align 8
  %181 = load i32, i32* %161, align 4
  %182 = load i32, i32* %160, align 8
  %183 = icmp eq i32 %181, %182
  br i1 %183, label %192, label %184, !prof !4

184:                                              ; preds = %176
  %185 = ptrtoint %"class.blink::CrossThreadStyleValue"* %180 to i64
  %186 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %159, align 8
  %187 = zext i32 %181 to i64
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %186, i64 %187
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %175, align 8
  %189 = bitcast %"class.std::__1::unique_ptr.2287"* %188 to i64*
  store i64 %185, i64* %189, align 8
  %190 = load i32, i32* %161, align 4
  %191 = add i32 %190, 1
  store i32 %191, i32* %161, align 4
  br label %193

192:                                              ; preds = %176
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2284"* nonnull %11, %"class.std::__1::unique_ptr.2287"* nonnull dereferenceable(8) %6) #12
  br label %193

193:                                              ; preds = %192, %184
  %194 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %175, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %175, align 8
  %195 = icmp eq %"class.blink::CrossThreadStyleValue"* %194, null
  br i1 %195, label %201, label %196

196:                                              ; preds = %193
  %197 = bitcast %"class.blink::CrossThreadStyleValue"* %194 to void (%"class.blink::CrossThreadStyleValue"*)***
  %198 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %198, i64 1
  %200 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %199, align 8
  call void %200(%"class.blink::CrossThreadStyleValue"* nonnull %194) #12
  br label %201

201:                                              ; preds = %196, %193
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #12
  %202 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %177, i64 1
  %203 = icmp eq %"class.blink::Member.574"* %202, %171
  br i1 %203, label %204, label %176

204:                                              ; preds = %201, %157, %165
  %205 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %205) #12
  %206 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  %207 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %207, i64 0, i32 2, i32 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %255, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %228

218:                                              ; preds = %211
  %219 = zext i32 %217 to i33
  %220 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %219, i33 1) #12
  %221 = extractvalue { i33, i1 } %220, 1
  %222 = extractvalue { i33, i1 } %220, 0
  %223 = icmp slt i33 %222, 0
  %224 = or i1 %221, %223
  br i1 %224, label %225, label %226, !prof !4

225:                                              ; preds = %218
  call void @llvm.trap() #12
  unreachable

226:                                              ; preds = %218
  %227 = trunc i33 %222 to i32
  store i32 %227, i32* %216, align 4
  br label %228

228:                                              ; preds = %211, %226
  %229 = phi i32 [ %227, %226 ], [ %217, %211 ]
  %230 = load atomic i32, i32* %212 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %209, i64 0, i32 0
  br i1 %232, label %234, label %244

234:                                              ; preds = %228
  %235 = zext i32 %229 to i33
  %236 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %235, i33 1) #12
  %237 = extractvalue { i33, i1 } %236, 1
  %238 = extractvalue { i33, i1 } %236, 0
  %239 = icmp slt i33 %238, 0
  %240 = or i1 %237, %239
  br i1 %240, label %241, label %242, !prof !4

241:                                              ; preds = %234
  call void @llvm.trap() #12
  unreachable

242:                                              ; preds = %234
  %243 = trunc i33 %238 to i32
  store i32 %243, i32* %233, align 4
  br label %244

244:                                              ; preds = %242, %228
  %245 = phi i32 [ %243, %242 ], [ %229, %228 ]
  %246 = load atomic i32, i32* %212 monotonic, align 4
  %247 = and i32 %246, 2
  %248 = icmp eq i32 %247, 0
  br i1 %248, label %249, label %251

249:                                              ; preds = %244
  %250 = add i32 %245, -1
  store i32 %250, i32* %233, align 4
  br label %251

251:                                              ; preds = %249, %244
  %252 = phi i32 [ %250, %249 ], [ %245, %244 ]
  %253 = icmp eq i32 %252, 0
  br i1 %253, label %254, label %255

254:                                              ; preds = %251
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %209) #12
  br label %255

255:                                              ; preds = %204, %251, %254
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %209, %"class.WTF::StringImpl"** %256, align 8
  %257 = bitcast i32* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %257) #12
  %258 = bitcast %"class.blink::CSSPaintImageGenerator"* %20 to i32 (%"class.blink::CSSPaintImageGenerator"*)***
  %259 = load i32 (%"class.blink::CSSPaintImageGenerator"*)**, i32 (%"class.blink::CSSPaintImageGenerator"*)*** %258, align 8
  %260 = getelementptr inbounds i32 (%"class.blink::CSSPaintImageGenerator"*)*, i32 (%"class.blink::CSSPaintImageGenerator"*)** %259, i64 8
  %261 = load i32 (%"class.blink::CSSPaintImageGenerator"*)*, i32 (%"class.blink::CSSPaintImageGenerator"*)** %260, align 8
  %262 = call i32 %261(%"class.blink::CSSPaintImageGenerator"* %20) #12
  store i32 %262, i32* %13, align 4
  %263 = load i8, i8* %132, align 8, !range !2
  %264 = icmp eq i8 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %255
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #13
  unreachable

266:                                              ; preds = %255
  %267 = getelementptr inbounds %"class.absl::optional.2274", %"class.absl::optional.2274"* %10, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %268 = call %"class.blink::CSSPaintWorkletInput"* @_ZN4base14MakeRefCountedIN5blink20CSSPaintWorkletInputEJN3WTF6StringERKNS1_9FloatSizeERfS8_iNS3_7HashMapIS4_NSt3__110unique_ptrINS1_21CrossThreadStyleValueENSA_14default_deleteISC_EEEENS3_10StringHashENS3_10HashTraitsIS4_EENSH_ISF_EENS3_18PartitionAllocatorEEENS3_6VectorISF_Lj0ESK_EENSA_6vectorIN2cc17PaintWorkletInput11PropertyKeyENSA_9allocatorISR_EEEEEEE13scoped_refptrIT_EDpOT0_(%"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::FloatSize"* dereferenceable(8) %4, float* nonnull dereferenceable(4) %8, float* nonnull dereferenceable(4) %7, i32* nonnull dereferenceable(4) %13, %"class.WTF::HashMap.2279"* dereferenceable(24) %267, %"class.WTF::Vector.2284"* nonnull dereferenceable(16) %11, %"class.std::__1::vector.2262"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %257) #12
  %269 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %270 = icmp eq %"class.WTF::StringImpl"* %269, null
  br i1 %270, label %284, label %271

271:                                              ; preds = %266
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %273 = load atomic i32, i32* %272 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %269, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  br i1 %275, label %278, label %280

278:                                              ; preds = %271
  %279 = add i32 %277, -1
  store i32 %279, i32* %276, align 4
  br label %280

280:                                              ; preds = %278, %271
  %281 = phi i32 [ %279, %278 ], [ %277, %271 ]
  %282 = icmp eq i32 %281, 0
  br i1 %282, label %283, label %284

283:                                              ; preds = %280
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %269) #12
  br label %284

284:                                              ; preds = %266, %280, %283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %205) #12
  %285 = call noalias i8* @malloc(i64 168) #12
  %286 = bitcast i8* %285 to %"class.blink::PaintWorkletDeferredImage"*
  %287 = icmp eq %"class.blink::CSSPaintWorkletInput"* %268, null
  br i1 %287, label %288, label %289

288:                                              ; preds = %284
  call void @_ZN5blink25PaintWorkletDeferredImageC2E13scoped_refptrINS_17PaintWorkletInputEERKNS_9FloatSizeE(%"class.blink::PaintWorkletDeferredImage"* %286, %"class.blink::PaintWorkletInput"* null, %"class.blink::FloatSize"* dereferenceable(8) %4) #12
  br label %304

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.blink::CSSPaintWorkletInput", %"class.blink::CSSPaintWorkletInput"* %268, i64 0, i32 0
  %291 = getelementptr inbounds %"class.blink::CSSPaintWorkletInput", %"class.blink::CSSPaintWorkletInput"* %268, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = atomicrmw add i32* %291, i32 1 monotonic
  call void @_ZN5blink25PaintWorkletDeferredImageC2E13scoped_refptrINS_17PaintWorkletInputEERKNS_9FloatSizeE(%"class.blink::PaintWorkletDeferredImage"* %286, %"class.blink::PaintWorkletInput"* nonnull %290, %"class.blink::FloatSize"* dereferenceable(8) %4) #12
  %293 = getelementptr inbounds %"class.blink::CSSPaintWorkletInput", %"class.blink::CSSPaintWorkletInput"* %268, i64 0, i32 0, i32 0, i32 1
  %294 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2296", %"class.base::RefCountedThreadSafe.2296"* %293, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = atomicrmw sub i32* %294, i32 1 acq_rel
  %296 = icmp eq i32 %295, 1
  br i1 %296, label %297, label %304

297:                                              ; preds = %289
  %298 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2296", %"class.base::RefCountedThreadSafe.2296"* %293, i64 -2
  %299 = bitcast %"class.base::RefCountedThreadSafe.2296"* %298 to %"class.cc::PaintWorkletInput"*
  %300 = bitcast %"class.base::RefCountedThreadSafe.2296"* %298 to void (%"class.cc::PaintWorkletInput"*)***
  %301 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %300, align 8
  %302 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %301, i64 4
  %303 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %302, align 8
  call void %303(%"class.cc::PaintWorkletInput"* nonnull %299) #12
  br label %304

304:                                              ; preds = %288, %289, %297
  %305 = ptrtoint i8* %285 to i64
  %306 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %159, align 8
  %307 = icmp eq %"class.std::__1::unique_ptr.2287"* %306, null
  br i1 %307, label %333, label %308, !prof !3

308:                                              ; preds = %304
  %309 = bitcast %"class.std::__1::unique_ptr.2287"* %306 to i8*
  %310 = load i32, i32* %161, align 4
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %331, label %312, !prof !4

312:                                              ; preds = %308
  %313 = zext i32 %310 to i64
  %314 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %306, i64 %313
  br label %315

315:                                              ; preds = %325, %312
  %316 = phi %"class.std::__1::unique_ptr.2287"* [ %326, %325 ], [ %306, %312 ]
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %316, i64 0, i32 0, i32 0, i32 0
  %318 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %317, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %317, align 8
  %319 = icmp eq %"class.blink::CrossThreadStyleValue"* %318, null
  br i1 %319, label %325, label %320

320:                                              ; preds = %315
  %321 = bitcast %"class.blink::CrossThreadStyleValue"* %318 to void (%"class.blink::CrossThreadStyleValue"*)***
  %322 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %321, align 8
  %323 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %322, i64 1
  %324 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %323, align 8
  call void %324(%"class.blink::CrossThreadStyleValue"* nonnull %318) #12
  br label %325

325:                                              ; preds = %320, %315
  %326 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %316, i64 1
  %327 = icmp eq %"class.std::__1::unique_ptr.2287"* %326, %314
  br i1 %327, label %328, label %315

328:                                              ; preds = %325
  store i32 0, i32* %161, align 4
  %329 = bitcast %"class.WTF::Vector.2284"* %11 to i8**
  %330 = load i8*, i8** %329, align 8
  br label %331

331:                                              ; preds = %328, %308
  %332 = phi i8* [ %330, %328 ], [ %309, %308 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %332) #12
  store %"class.std::__1::unique_ptr.2287"* null, %"class.std::__1::unique_ptr.2287"** %159, align 8
  br label %333

333:                                              ; preds = %304, %331
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #12
  %334 = load i8, i8* %132, align 8, !range !2
  %335 = icmp eq i8 %334, 0
  br i1 %335, label %384, label %336

336:                                              ; preds = %333
  %337 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %133, align 8
  %338 = icmp eq %"struct.WTF::KeyValuePair.2283"* %337, null
  br i1 %338, label %383, label %339, !prof !3

339:                                              ; preds = %336
  %340 = load i32, i32* %134, align 8
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %381, label %342

342:                                              ; preds = %339
  %343 = zext i32 %340 to i64
  br label %344

344:                                              ; preds = %378, %342
  %345 = phi i64 [ 0, %342 ], [ %379, %378 ]
  %346 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %337, i64 %345
  %347 = bitcast %"struct.WTF::KeyValuePair.2283"* %346 to i8**
  %348 = load i8*, i8** %347, align 8
  %349 = icmp eq i8* %348, inttoptr (i64 -1 to i8*)
  br i1 %349, label %378, label %350

350:                                              ; preds = %344
  %351 = bitcast i8* %348 to %"class.WTF::StringImpl"*
  %352 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %337, i64 %345, i32 1, i32 0, i32 0, i32 0
  %353 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %352, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %352, align 8
  %354 = icmp eq %"class.blink::CrossThreadStyleValue"* %353, null
  br i1 %354, label %362, label %355

355:                                              ; preds = %350
  %356 = bitcast %"class.blink::CrossThreadStyleValue"* %353 to void (%"class.blink::CrossThreadStyleValue"*)***
  %357 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %356, align 8
  %358 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %357, i64 1
  %359 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %358, align 8
  call void %359(%"class.blink::CrossThreadStyleValue"* nonnull %353) #12
  %360 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %346, i64 0, i32 0, i32 0, i32 0
  %361 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %360, align 8
  br label %362

362:                                              ; preds = %355, %350
  %363 = phi %"class.WTF::StringImpl"* [ %361, %355 ], [ %351, %350 ]
  %364 = icmp eq %"class.WTF::StringImpl"* %363, null
  br i1 %364, label %378, label %365

365:                                              ; preds = %362
  %366 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %367 = load atomic i32, i32* %366 monotonic, align 4
  %368 = and i32 %367, 2
  %369 = icmp eq i32 %368, 0
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %363, i64 0, i32 0
  %371 = load i32, i32* %370, align 4
  br i1 %369, label %372, label %374

372:                                              ; preds = %365
  %373 = add i32 %371, -1
  store i32 %373, i32* %370, align 4
  br label %374

374:                                              ; preds = %372, %365
  %375 = phi i32 [ %373, %372 ], [ %371, %365 ]
  %376 = icmp eq i32 %375, 0
  br i1 %376, label %377, label %378

377:                                              ; preds = %374
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %363) #12
  br label %378

378:                                              ; preds = %377, %374, %362, %344
  %379 = add nuw nsw i64 %345, 1
  %380 = icmp eq i64 %379, %343
  br i1 %380, label %381, label %344

381:                                              ; preds = %378, %339
  %382 = bitcast %"struct.WTF::KeyValuePair.2283"* %337 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %382) #12
  store %"struct.WTF::KeyValuePair.2283"* null, %"struct.WTF::KeyValuePair.2283"** %133, align 8
  br label %383

383:                                              ; preds = %336, %381
  store i8 0, i8* %132, align 8
  br label %384

384:                                              ; preds = %333, %383
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #12
  %385 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %130, align 8
  %386 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %385, null
  br i1 %386, label %399, label %387

387:                                              ; preds = %384
  %388 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %131, align 8
  %389 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %388, %385
  br i1 %389, label %396, label %390

390:                                              ; preds = %387, %390
  %391 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %392, %390 ], [ %388, %387 ]
  %392 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %391, i64 -1
  call void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"* %392) #12
  %393 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %392, %385
  br i1 %393, label %394, label %390

394:                                              ; preds = %390
  %395 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %130, align 8
  br label %396

396:                                              ; preds = %394, %387
  %397 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %395, %394 ], [ %385, %387 ]
  store %"struct.cc::PaintWorkletInput::PropertyKey"* %385, %"struct.cc::PaintWorkletInput::PropertyKey"** %131, align 8
  %398 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %397, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %398) #14
  br label %399

399:                                              ; preds = %384, %396
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #12
  br label %427

400:                                              ; preds = %153
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %132) #12
  %401 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %130, align 8
  %402 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %401, null
  br i1 %402, label %415, label %403

403:                                              ; preds = %400
  %404 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %131, align 8
  %405 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %404, %401
  br i1 %405, label %412, label %406

406:                                              ; preds = %403, %406
  %407 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %408, %406 ], [ %404, %403 ]
  %408 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %407, i64 -1
  call void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"* %408) #12
  %409 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %408, %401
  br i1 %409, label %410, label %406

410:                                              ; preds = %406
  %411 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %130, align 8
  br label %412

412:                                              ; preds = %410, %403
  %413 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %411, %410 ], [ %401, %403 ]
  store %"struct.cc::PaintWorkletInput::PropertyKey"* %401, %"struct.cc::PaintWorkletInput::PropertyKey"** %131, align 8
  %414 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %413, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %414) #14
  br label %415

415:                                              ; preds = %400, %412
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %129) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %117) #12
  %416 = load float, float* %7, align 4
  br label %417

417:                                              ; preds = %415, %94, %99
  %418 = phi float [ %416, %415 ], [ %95, %94 ], [ %95, %99 ]
  %419 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %420 = load %"class.blink::HeapVector.568"*, %"class.blink::HeapVector.568"** %419, align 8
  %421 = bitcast %"class.blink::CSSPaintImageGenerator"* %20 to %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)***
  %422 = load %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)**, %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)*** %421, align 8
  %423 = getelementptr inbounds %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)*, %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)** %422, i64 2
  %424 = load %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)*, %"class.blink::Image"* (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::ImageResourceObserver"*, %"class.blink::FloatSize"*, %"class.blink::HeapVector.568"*, float)** %423, align 8
  %425 = call %"class.blink::Image"* %424(%"class.blink::CSSPaintImageGenerator"* %20, %"class.blink::ImageResourceObserver"* dereferenceable(8) %1, %"class.blink::FloatSize"* dereferenceable(8) %4, %"class.blink::HeapVector.568"* %420, float %418) #12
  %426 = ptrtoint %"class.blink::Image"* %425 to i64
  br label %427

427:                                              ; preds = %399, %417
  %428 = phi i64 [ %426, %417 ], [ %305, %399 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %30) #12
  br label %429

429:                                              ; preds = %26, %19, %5, %427
  %430 = phi i64 [ %428, %427 ], [ 0, %5 ], [ 0, %19 ], [ 0, %26 ]
  %431 = inttoptr i64 %430 to %"class.blink::Image"*
  ret %"class.blink::Image"* %431
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink13CSSPaintValue19ParseInputArgumentsERKNS_8DocumentE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"* dereferenceable(2848)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Document"*, align 8
  %4 = alloca %"class.blink::HeapVector.568", align 8
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 1
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %68

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6
  %10 = getelementptr inbounds %"class.blink::Member.566", %"class.blink::Member.566"* %9, i64 0, i32 0, i32 0
  %11 = load %"class.blink::HeapVector.568"*, %"class.blink::HeapVector.568"** %10, align 8
  %12 = icmp eq %"class.blink::HeapVector.568"* %11, null
  %13 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase35is_css_paint_api_arguments_enabled_E, align 1
  %14 = icmp ne i8 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %68

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0
  %18 = bitcast %"class.blink::Document"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %19 = call %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"* %17, %"class.blink::Document"** nonnull dereferenceable(8) %3)
  %20 = bitcast %"class.blink::CSSPaintImageGenerator"* %19 to %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)***
  %21 = load %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)**, %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)*** %20, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)** %21, i64 6
  %23 = load %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)*, %"class.WTF::Vector.2317"* (%"class.blink::CSSPaintImageGenerator"*)** %22, align 8
  %24 = call dereferenceable(16) %"class.WTF::Vector.2317"* %23(%"class.blink::CSSPaintImageGenerator"* %19) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #12
  %25 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7
  %26 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 7, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::Vector.2317", %"class.WTF::Vector.2317"* %24, i64 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %27, %29
  br i1 %30, label %32, label %31

31:                                               ; preds = %16
  store i8 1, i8* %5, align 8
  br label %68

32:                                               ; preds = %16
  %33 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEPhm(i64 16) #12
  %34 = getelementptr inbounds i8, i8* %33, i64 -4
  %35 = bitcast i8* %34 to i16*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #12
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = ptrtoint i8* %33 to i64
  %39 = bitcast %"class.blink::Member.566"* %9 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %33) #12
  br label %44

44:                                               ; preds = %32, %42
  %45 = load i32, i32* %26, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %68, label %47

47:                                               ; preds = %44
  %48 = bitcast %"class.blink::HeapVector.568"* %4 to i8*
  %49 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %51

51:                                               ; preds = %47, %59
  %52 = phi i32 [ 0, %47 ], [ %64, %59 ]
  %53 = call dereferenceable(8) %class.scoped_refptr.580* @_ZN3WTF6VectorI13scoped_refptrIN5blink15CSSVariableDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.577"* %25, i32 %52) #12
  %54 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %53, i64 0, i32 0
  %55 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %54, align 8
  %56 = call dereferenceable(16) %"class.blink::CSSSyntaxDefinition"* @_ZNK3WTF6VectorIN5blink19CSSSyntaxDefinitionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2317"* %24, i32 %52) #12
  %57 = call %"class.blink::CSSValue"* @_ZNK5blink15CSSVariableData14ParseForSyntaxERKNS_19CSSSyntaxDefinitionENS_17SecureContextModeE(%"class.blink::CSSVariableData"* %55, %"class.blink::CSSSyntaxDefinition"* dereferenceable(16) %56, i32 1) #12
  %58 = icmp eq %"class.blink::CSSValue"* %57, null
  br i1 %58, label %67, label %59

59:                                               ; preds = %51
  %60 = load %"class.blink::HeapVector.568"*, %"class.blink::HeapVector.568"** %10, align 8
  %61 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %60, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #12
  call void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_8CSSValueE(%"class.blink::HeapVector.568"* nonnull sret %4, %"class.blink::CSSValue"* nonnull dereferenceable(3) %57) #12
  %62 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %49, align 8
  %63 = load i32, i32* %50, align 4
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.571"* %61, %"class.blink::Member.574"* %62, i32 %63) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #12
  %64 = add nuw i32 %52, 1
  %65 = load i32, i32* %26, align 4
  %66 = icmp ult i32 %64, %65
  br i1 %66, label %51, label %68

67:                                               ; preds = %51
  store i8 1, i8* %5, align 8
  store atomic i64 0, i64* %39 monotonic, align 8
  br label %68

68:                                               ; preds = %59, %44, %2, %31, %8, %67
  %69 = phi i1 [ false, %67 ], [ false, %2 ], [ true, %8 ], [ false, %31 ], [ true, %44 ], [ true, %59 ]
  ret i1 %69
}

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #1

declare void @_ZN5blink28PaintWorkletStylePropertyMap20BuildCrossThreadDataERKNS_8DocumentEmRKNS_13ComputedStyleERKN3WTF6VectorINS_13CSSPropertyIDELj0ENS7_18PartitionAllocatorEEERKNS8_INS7_12AtomicStringELj0ESA_EERNSt3__16vectorIN2cc17PaintWorkletInput11PropertyKeyENSI_9allocatorISM_EEEE(%"class.absl::optional.2274"* sret, %"class.blink::Document"* dereferenceable(2848), i64, %"class.blink::ComputedStyle"* dereferenceable(104), %"class.WTF::Vector.841"* dereferenceable(16), %"class.WTF::Vector.846"* dereferenceable(16), %"class.std::__1::vector.2262"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValue24BuildInputArgumentValuesERN3WTF6VectorINSt3__110unique_ptrINS_21CrossThreadStyleValueENS3_14default_deleteIS5_EEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::CSSPaintValue"* nocapture readonly, %"class.WTF::Vector.2284"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.2287", align 8
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::HeapVector.568"*, %"class.blink::HeapVector.568"** %4, align 8
  %6 = icmp eq %"class.blink::HeapVector.568"* %5, null
  br i1 %6, label %49, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.568", %"class.blink::HeapVector.568"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %49, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.std::__1::unique_ptr.2287"* %3 to i8*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %3, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %1, i64 0, i32 0, i32 0, i32 0
  br label %21

21:                                               ; preds = %15, %46
  %22 = phi %"class.blink::Member.574"* [ %9, %15 ], [ %47, %46 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  store %"class.blink::CrossThreadStyleValue"* inttoptr (i64 -6148914691236517206 to %"class.blink::CrossThreadStyleValue"*), %"class.blink::CrossThreadStyleValue"** %17, align 8
  %23 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %22, i64 0, i32 0, i32 0
  %24 = load %"class.blink::CSSStyleValue"*, %"class.blink::CSSStyleValue"** %23, align 8
  %25 = call %"class.blink::CrossThreadStyleValue"* @_ZN5blink18ComputedStyleUtils38CrossThreadStyleValueFromCSSStyleValueEPNS_13CSSStyleValueE(%"class.blink::CSSStyleValue"* %24) #12
  store %"class.blink::CrossThreadStyleValue"* %25, %"class.blink::CrossThreadStyleValue"** %17, align 8
  %26 = load i32, i32* %18, align 4
  %27 = load i32, i32* %19, align 8
  %28 = icmp eq i32 %26, %27
  br i1 %28, label %37, label %29, !prof !4

29:                                               ; preds = %21
  %30 = ptrtoint %"class.blink::CrossThreadStyleValue"* %25 to i64
  %31 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %20, align 8
  %32 = zext i32 %26 to i64
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %31, i64 %32
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %17, align 8
  %34 = bitcast %"class.std::__1::unique_ptr.2287"* %33 to i64*
  store i64 %30, i64* %34, align 8
  %35 = load i32, i32* %18, align 4
  %36 = add i32 %35, 1
  store i32 %36, i32* %18, align 4
  br label %38

37:                                               ; preds = %21
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2284"* %1, %"class.std::__1::unique_ptr.2287"* nonnull dereferenceable(8) %3) #12
  br label %38

38:                                               ; preds = %29, %37
  %39 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %17, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %17, align 8
  %40 = icmp eq %"class.blink::CrossThreadStyleValue"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %38
  %42 = bitcast %"class.blink::CrossThreadStyleValue"* %39 to void (%"class.blink::CrossThreadStyleValue"*)***
  %43 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %43, i64 1
  %45 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %44, align 8
  call void %45(%"class.blink::CrossThreadStyleValue"* nonnull %39) #12
  br label %46

46:                                               ; preds = %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  %47 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %22, i64 1
  %48 = icmp eq %"class.blink::Member.574"* %47, %13
  br i1 %48, label %49, label %21

49:                                               ; preds = %46, %7, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPaintWorkletInput"* @_ZN4base14MakeRefCountedIN5blink20CSSPaintWorkletInputEJN3WTF6StringERKNS1_9FloatSizeERfS8_iNS3_7HashMapIS4_NSt3__110unique_ptrINS1_21CrossThreadStyleValueENSA_14default_deleteISC_EEEENS3_10StringHashENS3_10HashTraitsIS4_EENSH_ISF_EENS3_18PartitionAllocatorEEENS3_6VectorISF_Lj0ESK_EENSA_6vectorIN2cc17PaintWorkletInput11PropertyKeyENSA_9allocatorISR_EEEEEEE13scoped_refptrIT_EDpOT0_(%"class.WTF::String"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), float* dereferenceable(4), float* dereferenceable(4), i32* dereferenceable(4), %"class.WTF::HashMap.2279"* dereferenceable(24), %"class.WTF::Vector.2284"* dereferenceable(16), %"class.std::__1::vector.2262"* dereferenceable(24)) local_unnamed_addr #0 comdat {
  %9 = alloca %"class.WTF::HashMap.2279", align 8
  %10 = alloca %"class.WTF::Vector.2284", align 8
  %11 = alloca %"class.std::__1::vector.2262", align 16
  %12 = tail call i8* @_Znwm(i64 104) #14
  %13 = bitcast i8* %12 to %"class.blink::CSSPaintWorkletInput"*
  %14 = load float, float* %2, align 4
  %15 = load float, float* %3, align 4
  %16 = load i32, i32* %4, align 4
  %17 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %9, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %9, i64 0, i32 0, i32 2
  %19 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %9, i64 0, i32 0, i32 3
  %20 = bitcast %"class.WTF::HashMap.2279"* %5 to i64*
  %21 = bitcast %"class.WTF::HashMap.2279"* %9 to i64*
  store i64 0, i64* %21, align 8
  %22 = load i64, i64* %20, align 8
  %23 = bitcast %"class.WTF::HashMap.2279"* %9 to i64*
  store atomic i64 0, i64* %20 monotonic, align 8
  store atomic i64 %22, i64* %23 monotonic, align 8
  %24 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %5, i64 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %17, align 8
  store i32 0, i32* %24, align 4
  %26 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %5, i64 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %18, align 4
  store i32 0, i32* %26, align 4
  %28 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %5, i64 0, i32 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, 2147483647
  store i32 %30, i32* %19, align 8
  %31 = and i32 %29, -2147483648
  store i32 %31, i32* %28, align 8
  %32 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %10, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %10, i64 0, i32 0, i32 0, i32 2
  %34 = bitcast %"class.WTF::Vector.2284"* %6 to i64*
  %35 = bitcast %"class.WTF::Vector.2284"* %10 to i64*
  store i64 0, i64* %35, align 8
  %36 = load i64, i64* %34, align 8
  %37 = bitcast %"class.WTF::Vector.2284"* %10 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  store atomic i64 %36, i64* %37 monotonic, align 8
  %38 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %6, i64 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 4
  store i32 %39, i32* %32, align 8
  store i32 0, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %6, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  store i32 %41, i32* %33, align 4
  store i32 0, i32* %40, align 4
  %42 = bitcast %"class.std::__1::vector.2262"* %7 to <2 x i64>*
  %43 = load <2 x i64>, <2 x i64>* %42, align 8
  %44 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %11, i64 0, i32 0, i32 1
  %45 = bitcast %"class.std::__1::vector.2262"* %11 to <2 x i64>*
  store <2 x i64> %43, <2 x i64>* %45, align 16
  %46 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %7, i64 0, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast %"struct.cc::PaintWorkletInput::PropertyKey"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %11, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"struct.cc::PaintWorkletInput::PropertyKey"** %49 to i64*
  store i64 %48, i64* %50, align 16
  %51 = bitcast %"class.std::__1::vector.2262"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #12
  call void @_ZN5blink20CSSPaintWorkletInputC1ERKN3WTF6StringERKNS_9FloatSizeEffiNS1_7HashMapIS2_NSt3__110unique_ptrINS_21CrossThreadStyleValueENS9_14default_deleteISB_EEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEENS1_6VectorISE_Lj0ESJ_EENS9_6vectorIN2cc17PaintWorkletInput11PropertyKeyENS9_9allocatorISQ_EEEE(%"class.blink::CSSPaintWorkletInput"* nonnull %13, %"class.WTF::String"* dereferenceable(8) %0, %"class.blink::FloatSize"* dereferenceable(8) %1, float %14, float %15, i32 %16, %"class.WTF::HashMap.2279"* nonnull %9, %"class.WTF::Vector.2284"* nonnull %10, %"class.std::__1::vector.2262"* nonnull %11) #12
  %52 = getelementptr inbounds %"class.std::__1::vector.2262", %"class.std::__1::vector.2262"* %11, i64 0, i32 0, i32 0
  %53 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %52, align 16
  %54 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %53, null
  br i1 %54, label %67, label %55

55:                                               ; preds = %8
  %56 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %44, align 8
  %57 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %56, %53
  br i1 %57, label %64, label %58

58:                                               ; preds = %55, %58
  %59 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %60, %58 ], [ %56, %55 ]
  %60 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %59, i64 -1
  call void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"* %60) #12
  %61 = icmp eq %"struct.cc::PaintWorkletInput::PropertyKey"* %60, %53
  br i1 %61, label %62, label %58

62:                                               ; preds = %58
  %63 = load %"struct.cc::PaintWorkletInput::PropertyKey"*, %"struct.cc::PaintWorkletInput::PropertyKey"** %52, align 16
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi %"struct.cc::PaintWorkletInput::PropertyKey"* [ %63, %62 ], [ %53, %55 ]
  store %"struct.cc::PaintWorkletInput::PropertyKey"* %53, %"struct.cc::PaintWorkletInput::PropertyKey"** %44, align 8
  %66 = getelementptr inbounds %"struct.cc::PaintWorkletInput::PropertyKey", %"struct.cc::PaintWorkletInput::PropertyKey"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @_ZdlPv(i8* %66) #14
  br label %67

67:                                               ; preds = %8, %64
  %68 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %10, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %68, align 8
  %70 = icmp eq %"class.std::__1::unique_ptr.2287"* %69, null
  br i1 %70, label %96, label %71, !prof !3

71:                                               ; preds = %67
  %72 = bitcast %"class.std::__1::unique_ptr.2287"* %69 to i8*
  %73 = load i32, i32* %33, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %94, label %75, !prof !4

75:                                               ; preds = %71
  %76 = zext i32 %73 to i64
  %77 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %69, i64 %76
  br label %78

78:                                               ; preds = %88, %75
  %79 = phi %"class.std::__1::unique_ptr.2287"* [ %89, %88 ], [ %69, %75 ]
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %80, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %80, align 8
  %82 = icmp eq %"class.blink::CrossThreadStyleValue"* %81, null
  br i1 %82, label %88, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::CrossThreadStyleValue"* %81 to void (%"class.blink::CrossThreadStyleValue"*)***
  %85 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %85, i64 1
  %87 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %86, align 8
  call void %87(%"class.blink::CrossThreadStyleValue"* nonnull %81) #12
  br label %88

88:                                               ; preds = %83, %78
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %79, i64 1
  %90 = icmp eq %"class.std::__1::unique_ptr.2287"* %89, %77
  br i1 %90, label %91, label %78

91:                                               ; preds = %88
  store i32 0, i32* %33, align 4
  %92 = bitcast %"class.WTF::Vector.2284"* %10 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %71
  %95 = phi i8* [ %93, %91 ], [ %72, %71 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %95) #12
  store %"class.std::__1::unique_ptr.2287"* null, %"class.std::__1::unique_ptr.2287"** %68, align 8
  br label %96

96:                                               ; preds = %67, %94
  %97 = getelementptr inbounds %"class.WTF::HashMap.2279", %"class.WTF::HashMap.2279"* %9, i64 0, i32 0, i32 0
  %98 = load %"struct.WTF::KeyValuePair.2283"*, %"struct.WTF::KeyValuePair.2283"** %97, align 8
  %99 = icmp eq %"struct.WTF::KeyValuePair.2283"* %98, null
  br i1 %99, label %144, label %100, !prof !3

100:                                              ; preds = %96
  %101 = load i32, i32* %17, align 8
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %142, label %103

103:                                              ; preds = %100
  %104 = zext i32 %101 to i64
  br label %105

105:                                              ; preds = %139, %103
  %106 = phi i64 [ 0, %103 ], [ %140, %139 ]
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %98, i64 %106
  %108 = bitcast %"struct.WTF::KeyValuePair.2283"* %107 to i8**
  %109 = load i8*, i8** %108, align 8
  %110 = icmp eq i8* %109, inttoptr (i64 -1 to i8*)
  br i1 %110, label %139, label %111

111:                                              ; preds = %105
  %112 = bitcast i8* %109 to %"class.WTF::StringImpl"*
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %98, i64 %106, i32 1, i32 0, i32 0, i32 0
  %114 = load %"class.blink::CrossThreadStyleValue"*, %"class.blink::CrossThreadStyleValue"** %113, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %113, align 8
  %115 = icmp eq %"class.blink::CrossThreadStyleValue"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %111
  %117 = bitcast %"class.blink::CrossThreadStyleValue"* %114 to void (%"class.blink::CrossThreadStyleValue"*)***
  %118 = load void (%"class.blink::CrossThreadStyleValue"*)**, void (%"class.blink::CrossThreadStyleValue"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %118, i64 1
  %120 = load void (%"class.blink::CrossThreadStyleValue"*)*, void (%"class.blink::CrossThreadStyleValue"*)** %119, align 8
  call void %120(%"class.blink::CrossThreadStyleValue"* nonnull %114) #12
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.2283", %"struct.WTF::KeyValuePair.2283"* %107, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %121, align 8
  br label %123

123:                                              ; preds = %116, %111
  %124 = phi %"class.WTF::StringImpl"* [ %122, %116 ], [ %112, %111 ]
  %125 = icmp eq %"class.WTF::StringImpl"* %124, null
  br i1 %125, label %139, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %124, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %126
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %126
  %136 = phi i32 [ %134, %133 ], [ %132, %126 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %124) #12
  br label %139

139:                                              ; preds = %138, %135, %123, %105
  %140 = add nuw nsw i64 %106, 1
  %141 = icmp eq i64 %140, %104
  br i1 %141, label %142, label %105

142:                                              ; preds = %139, %100
  %143 = bitcast %"struct.WTF::KeyValuePair.2283"* %98 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %143) #12
  store %"struct.WTF::KeyValuePair.2283"* null, %"struct.WTF::KeyValuePair.2283"** %97, align 8
  br label %144

144:                                              ; preds = %96, %142
  %145 = getelementptr inbounds i8, i8* %12, i64 8
  %146 = bitcast i8* %145 to i32*
  %147 = atomicrmw add i32* %146, i32 1 monotonic
  ret %"class.blink::CSSPaintWorkletInput"* %13
}

declare %"class.blink::CrossThreadStyleValue"* @_ZN5blink18ComputedStyleUtils38CrossThreadStyleValueFromCSSStyleValueEPNS_13CSSStyleValueE(%"class.blink::CSSStyleValue"*) local_unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZNK5blink15CSSVariableData14ParseForSyntaxERKNS_19CSSSyntaxDefinitionENS_17SecureContextModeE(%"class.blink::CSSVariableData"*, %"class.blink::CSSSyntaxDefinition"* dereferenceable(16), i32) local_unnamed_addr #1

declare void @_ZN5blink17StyleValueFactory26CssValueToStyleValueVectorERKNS_8CSSValueE(%"class.blink::HeapVector.568"* sret, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValue8Observer24PaintImageGeneratorReadyEv(%"class.blink::CSSPaintValue::Observer"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPaintValue::Observer", %"class.blink::CSSPaintValue::Observer"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::CSSPaintValue"*, %"class.blink::CSSPaintValue"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %3, i64 0, i32 0, i32 2, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %3, i64 0, i32 0, i32 2, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %8, i64 %11
  br i1 %6, label %46, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %13, %19
  %16 = phi %"struct.WTF::KeyValuePair"* [ %20, %19 ], [ %8, %13 ]
  %17 = bitcast %"struct.WTF::KeyValuePair"* %16 to i64*
  %18 = load i64, i64* %17, align 8
  switch i64 %18, label %22 [
    i64 -1, label %19
    i64 0, label %19
  ]

19:                                               ; preds = %15, %15
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %16, i64 1
  %21 = icmp eq %"struct.WTF::KeyValuePair"* %20, %12
  br i1 %21, label %46, label %15

22:                                               ; preds = %15, %13
  %23 = phi %"struct.WTF::KeyValuePair"* [ %8, %13 ], [ %16, %15 ]
  %24 = icmp eq %"struct.WTF::KeyValuePair"* %23, %12
  br i1 %24, label %46, label %25

25:                                               ; preds = %22
  %26 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %3, i64 0, i32 0, i32 0, i32 0
  br label %27

27:                                               ; preds = %44, %25
  %28 = phi %"struct.WTF::KeyValuePair"* [ %23, %25 ], [ %38, %44 ]
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0
  %30 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %29, align 8
  %31 = bitcast %"class.blink::ImageResourceObserver"* %30 to void (%"class.blink::ImageResourceObserver"*, i8*, i32)***
  %32 = load void (%"class.blink::ImageResourceObserver"*, i8*, i32)**, void (%"class.blink::ImageResourceObserver"*, i8*, i32)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, i8*, i32)*, void (%"class.blink::ImageResourceObserver"*, i8*, i32)** %32, i64 3
  %34 = load void (%"class.blink::ImageResourceObserver"*, i8*, i32)*, void (%"class.blink::ImageResourceObserver"*, i8*, i32)** %33, align 8
  tail call void %34(%"class.blink::ImageResourceObserver"* %30, i8* %26, i32 1) #12
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 1
  %36 = icmp eq %"struct.WTF::KeyValuePair"* %35, %12
  br i1 %36, label %46, label %37

37:                                               ; preds = %27, %41
  %38 = phi %"struct.WTF::KeyValuePair"* [ %42, %41 ], [ %35, %27 ]
  %39 = bitcast %"struct.WTF::KeyValuePair"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %44 [
    i64 -1, label %41
    i64 0, label %41
  ]

41:                                               ; preds = %37, %37
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %38, i64 1
  %43 = icmp eq %"struct.WTF::KeyValuePair"* %42, %12
  br i1 %43, label %46, label %37

44:                                               ; preds = %37
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %38, %12
  br i1 %45, label %46, label %27

46:                                               ; preds = %19, %27, %44, %41, %1, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13CSSPaintValue24PaintImageGeneratorReadyEv(%"class.blink::CSSPaintValue"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0, i32 2, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0, i32 2, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %6, i64 %9
  br i1 %4, label %25, label %11

11:                                               ; preds = %1
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %20, label %13

13:                                               ; preds = %11, %17
  %14 = phi %"struct.WTF::KeyValuePair"* [ %18, %17 ], [ %6, %11 ]
  %15 = bitcast %"struct.WTF::KeyValuePair"* %14 to i64*
  %16 = load i64, i64* %15, align 8
  switch i64 %16, label %20 [
    i64 -1, label %17
    i64 0, label %17
  ]

17:                                               ; preds = %13, %13
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %14, i64 1
  %19 = icmp eq %"struct.WTF::KeyValuePair"* %18, %10
  br i1 %19, label %25, label %13

20:                                               ; preds = %13, %11
  %21 = phi %"struct.WTF::KeyValuePair"* [ %6, %11 ], [ %14, %13 ]
  %22 = icmp eq %"struct.WTF::KeyValuePair"* %21, %10
  br i1 %22, label %25, label %23

23:                                               ; preds = %20
  %24 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 0, i32 0, i32 0
  br label %26

25:                                               ; preds = %17, %26, %43, %40, %1, %20
  ret void

26:                                               ; preds = %23, %43
  %27 = phi %"struct.WTF::KeyValuePair"* [ %21, %23 ], [ %37, %43 ]
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 0, i32 0
  %29 = load %"class.blink::ImageResourceObserver"*, %"class.blink::ImageResourceObserver"** %28, align 8
  %30 = bitcast %"class.blink::ImageResourceObserver"* %29 to void (%"class.blink::ImageResourceObserver"*, i8*, i32)***
  %31 = load void (%"class.blink::ImageResourceObserver"*, i8*, i32)**, void (%"class.blink::ImageResourceObserver"*, i8*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::ImageResourceObserver"*, i8*, i32)*, void (%"class.blink::ImageResourceObserver"*, i8*, i32)** %31, i64 3
  %33 = load void (%"class.blink::ImageResourceObserver"*, i8*, i32)*, void (%"class.blink::ImageResourceObserver"*, i8*, i32)** %32, align 8
  tail call void %33(%"class.blink::ImageResourceObserver"* %29, i8* %24, i32 1) #12
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %27, i64 1
  %35 = icmp eq %"struct.WTF::KeyValuePair"* %34, %10
  br i1 %35, label %25, label %36

36:                                               ; preds = %26, %40
  %37 = phi %"struct.WTF::KeyValuePair"* [ %41, %40 ], [ %34, %26 ]
  %38 = bitcast %"struct.WTF::KeyValuePair"* %37 to i64*
  %39 = load i64, i64* %38, align 8
  switch i64 %39, label %43 [
    i64 -1, label %40
    i64 0, label %40
  ]

40:                                               ; preds = %36, %36
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %37, i64 1
  %42 = icmp eq %"struct.WTF::KeyValuePair"* %41, %10
  br i1 %42, label %25, label %36

43:                                               ; preds = %36
  %44 = icmp eq %"struct.WTF::KeyValuePair"* %37, %10
  br i1 %44, label %25, label %26
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSPaintValue15KnownToBeOpaqueERKNS_8DocumentERKNS_13ComputedStyleE(%"class.blink::CSSPaintValue"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Document"*, align 8
  %5 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4, i32 0
  %6 = bitcast %"class.blink::Document"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  store %"class.blink::Document"* %1, %"class.blink::Document"** %4, align 8
  %7 = call %"class.blink::CSSPaintImageGenerator"* @_ZNK3WTF7HashMapIN5blink10WeakMemberIKNS1_8DocumentEEENS1_6MemberINS1_22CSSPaintImageGeneratorEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENSB_IS8_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.186"* %5, %"class.blink::Document"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %8 = icmp eq %"class.blink::CSSPaintImageGenerator"* %7, null
  br i1 %8, label %16, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.blink::CSSPaintImageGenerator"* %7 to i1 (%"class.blink::CSSPaintImageGenerator"*)***
  %11 = load i1 (%"class.blink::CSSPaintImageGenerator"*)**, i1 (%"class.blink::CSSPaintImageGenerator"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %11, i64 5
  %13 = load i1 (%"class.blink::CSSPaintImageGenerator"*)*, i1 (%"class.blink::CSSPaintImageGenerator"*)** %12, align 8
  %14 = call zeroext i1 %13(%"class.blink::CSSPaintImageGenerator"* nonnull %7) #12
  %15 = xor i1 %14, true
  br label %16

16:                                               ; preds = %3, %9
  %17 = phi i1 [ false, %3 ], [ %15, %9 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13CSSPaintValue6EqualsERKS0_(%"class.blink::CSSPaintValue"* nocapture readonly, %"class.blink::CSSPaintValue"* nocapture readonly dereferenceable(176)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %4, i64 0, i32 2, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %52, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %25

15:                                               ; preds = %8
  %16 = zext i32 %14 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #12
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !4

22:                                               ; preds = %15
  tail call void @llvm.trap() #12
  unreachable

23:                                               ; preds = %15
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %13, align 4
  br label %25

25:                                               ; preds = %8, %23
  %26 = phi i32 [ %24, %23 ], [ %14, %8 ]
  %27 = load atomic i32, i32* %9 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  br i1 %29, label %31, label %41

31:                                               ; preds = %25
  %32 = zext i32 %26 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #12
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !4

38:                                               ; preds = %31
  tail call void @llvm.trap() #12
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %39, %25
  %42 = phi i32 [ %40, %39 ], [ %26, %25 ]
  %43 = load atomic i32, i32* %9 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %48

46:                                               ; preds = %41
  %47 = add i32 %42, -1
  store i32 %47, i32* %30, align 4
  br label %48

48:                                               ; preds = %46, %41
  %49 = phi i32 [ %47, %46 ], [ %42, %41 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #12
  br label %52

52:                                               ; preds = %2, %48, %51
  %53 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %1, i64 0, i32 3, i32 0, i32 0
  %54 = load %"class.blink::CSSCustomIdentValue"*, %"class.blink::CSSCustomIdentValue"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %54, i64 0, i32 2, i32 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %102, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %75

65:                                               ; preds = %58
  %66 = zext i32 %64 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #12
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !4

72:                                               ; preds = %65
  tail call void @llvm.trap() #12
  unreachable

73:                                               ; preds = %65
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %63, align 4
  br label %75

75:                                               ; preds = %58, %73
  %76 = phi i32 [ %74, %73 ], [ %64, %58 ]
  %77 = load atomic i32, i32* %59 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  br i1 %79, label %81, label %91

81:                                               ; preds = %75
  %82 = zext i32 %76 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #12
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !4

88:                                               ; preds = %81
  tail call void @llvm.trap() #12
  unreachable

89:                                               ; preds = %81
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %89, %75
  %92 = phi i32 [ %90, %89 ], [ %76, %75 ]
  %93 = load atomic i32, i32* %59 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = add i32 %92, -1
  store i32 %97, i32* %80, align 4
  br label %98

98:                                               ; preds = %96, %91
  %99 = phi i32 [ %97, %96 ], [ %92, %91 ]
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %102

101:                                              ; preds = %98
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #12
  br label %102

102:                                              ; preds = %52, %98, %101
  %103 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"* %56) #12
  br i1 %103, label %104, label %137

104:                                              ; preds = %102
  %105 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue13CustomCSSTextEv(%"class.blink::CSSPaintValue"* %0)
  %106 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13CSSPaintValue13CustomCSSTextEv(%"class.blink::CSSPaintValue"* %1)
  %107 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"* %106) #12
  %108 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #12
  br label %122

122:                                              ; preds = %104, %118, %121
  %123 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %122
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %105) #12
  br label %137

137:                                              ; preds = %136, %133, %122, %102
  %138 = phi i1 [ false, %102 ], [ %107, %122 ], [ %107, %133 ], [ %107, %136 ]
  br i1 %57, label %152, label %139

139:                                              ; preds = %137
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = load atomic i32, i32* %140 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %145 = load i32, i32* %144, align 4
  br i1 %143, label %146, label %148

146:                                              ; preds = %139
  %147 = add i32 %145, -1
  store i32 %147, i32* %144, align 4
  br label %148

148:                                              ; preds = %146, %139
  %149 = phi i32 [ %147, %146 ], [ %145, %139 ]
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %151, label %152

151:                                              ; preds = %148
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #12
  br label %152

152:                                              ; preds = %137, %148, %151
  br i1 %7, label %166, label %153

153:                                              ; preds = %152
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 2
  %157 = icmp eq i32 %156, 0
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %159 = load i32, i32* %158, align 4
  br i1 %157, label %160, label %162

160:                                              ; preds = %153
  %161 = add i32 %159, -1
  store i32 %161, i32* %158, align 4
  br label %162

162:                                              ; preds = %160, %153
  %163 = phi i32 [ %161, %160 ], [ %159, %153 ]
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %165, label %166

165:                                              ; preds = %162
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #12
  br label %166

166:                                              ; preds = %152, %162, %165
  ret i1 %138
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13CSSPaintValue18TraceAfterDispatchEPNS_7VisitorE(%"class.blink::CSSPaintValue"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 3
  %5 = bitcast %"class.blink::Member"* %4 to i64*
  %6 = load atomic i64, i64* %5 monotonic, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %2
  %9 = inttoptr i64 %6 to %"class.blink::CSSCustomIdentValue"*
  %10 = getelementptr inbounds %"class.blink::CSSCustomIdentValue", %"class.blink::CSSCustomIdentValue"* %9, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, i64 5
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %13, align 8
  tail call void %14(%"class.blink::Visitor"* %1, i8* %10, i8* %10, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSCustomIdentValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %15

15:                                               ; preds = %2, %8
  %16 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 4
  %17 = bitcast %"class.blink::HeapHashMap"* %16 to i8*
  %18 = bitcast %"class.blink::HeapHashMap"* %16 to i64*
  %19 = load atomic i64, i64* %18 monotonic, align 8
  %20 = inttoptr i64 %19 to %"struct.WTF::KeyValuePair.189"*
  %21 = bitcast %"class.blink::HeapHashMap"* %16 to i8**
  %22 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %23 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %23, i64 11
  %25 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %24, align 8
  tail call void %25(%"class.blink::Visitor"* %1, i8** %21) #12
  %26 = inttoptr i64 %19 to i8*
  %27 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.189"**
  store %"struct.WTF::KeyValuePair.189"* %20, %"struct.WTF::KeyValuePair.189"** %28, align 8
  %29 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  %30 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %31 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %31, i64 10
  %33 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %32, align 8
  tail call void %33(%"class.blink::Visitor"* %1, i8* %26, i8** %21, i8* %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberIKNS2_8DocumentEEENS_12KeyValuePairIS6_NS2_6MemberINS2_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %17) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  %34 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 5
  %35 = bitcast %"class.blink::Member.560"* %34 to i64*
  %36 = load atomic i64, i64* %35 monotonic, align 8
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %15
  %39 = inttoptr i64 %36 to i8*
  %40 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %41 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, i64 5
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, align 8
  tail call void %43(%"class.blink::Visitor"* %1, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSPaintValue8ObserverEE5TraceEPNS_7VisitorEPKv) #12
  br label %44

44:                                               ; preds = %15, %38
  %45 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %0, i64 0, i32 6
  %46 = bitcast %"class.blink::Member.566"* %45 to i64*
  %47 = load atomic i64, i64* %46 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %55, label %49

49:                                               ; preds = %44
  %50 = inttoptr i64 %47 to i8*
  %51 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, i64 5
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %53, align 8
  tail call void %54(%"class.blink::Visitor"* %1, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5TraceEPNS_7VisitorEPKv) #12
  br label %55

55:                                               ; preds = %44, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSPaintValue8ObserverD0Ev(%"class.blink::CSSPaintValue::Observer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink13CSSPaintValue8Observer5TraceEPNS_7VisitorE(%"class.blink::CSSPaintValue::Observer"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::CSSPaintValue::Observer", %"class.blink::CSSPaintValue::Observer"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.564"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSPaintValue"*
  %9 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %1, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSPaintValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #12
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #12
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #12
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.583", %"class.WTF::Vector.583"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !4

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #12
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.583"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #12
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #1

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #5

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendEh(%"class.WTF::StringBuilder"*, i8 zeroext) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i16, align 2
  %4 = alloca i8, align 1
  store i8 %1, i8* %4, align 1
  %5 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %6 = load i8, i8* %5, align 4, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %35

8:                                                ; preds = %2
  %9 = zext i8 %1 to i16
  %10 = bitcast i16* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %10)
  store i16 %9, i16* %3, align 2
  %11 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  tail call void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %15

15:                                               ; preds = %14, %8
  %16 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %18, %20
  br i1 %21, label %29, label %22, !prof !4

22:                                               ; preds = %15
  %23 = bitcast %union.anon.830* %16 to i16**
  %24 = load i16*, i16** %23, align 8
  %25 = zext i32 %18 to i64
  %26 = getelementptr inbounds i16, i16* %24, i64 %25
  store i16 %9, i16* %26, align 2
  %27 = load i32, i32* %17, align 4
  %28 = add i32 %27, 1
  store i32 %28, i32* %17, align 4
  br label %31

29:                                               ; preds = %15
  %30 = bitcast %union.anon.830* %16 to %"class.WTF::Vector.836"*
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.836"* %30, i16* nonnull dereferenceable(2) %3) #12
  br label %31

31:                                               ; preds = %22, %29
  %32 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %33 = load i32, i32* %32, align 8
  %34 = add i32 %33, 1
  store i32 %34, i32* %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %10)
  br label %59

35:                                               ; preds = %2
  %36 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %35
  tail call void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"* %0, i32 1) #12
  br label %40

40:                                               ; preds = %35, %39
  %41 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %43, %45
  br i1 %46, label %54, label %47, !prof !4

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %41, i64 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  %50 = zext i32 %43 to i64
  %51 = getelementptr inbounds i8, i8* %49, i64 %50
  store i8 %1, i8* %51, align 1
  %52 = load i32, i32* %42, align 4
  %53 = add i32 %52, 1
  store i32 %53, i32* %42, align 4
  br label %55

54:                                               ; preds = %40
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.831"* %41, i8* nonnull dereferenceable(1) %4) #12
  br label %55

55:                                               ; preds = %47, %54
  %56 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 8
  %58 = add i32 %57, 1
  store i32 %58, i32* %56, align 8
  br label %59

59:                                               ; preds = %55, %31
  ret void
}

declare void @_ZN3WTF13StringBuilder14CreateBuffer16Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14AppendSlowCaseIRDsEEvOT_(%"class.WTF::Vector.836"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i16*, i16** %6, align 8
  %8 = icmp ugt i16* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i16, i16* %7, i64 %10
  %12 = icmp ugt i16* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.836"* %0, i32 %5) #12
  %14 = load i16*, i16** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint i16* %1 to i64
  %17 = ptrtoint i16* %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 1
  tail call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.836"* %0, i32 %5) #12
  %20 = load i16*, i16** %6, align 8
  %21 = getelementptr inbounds i16, i16* %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi i16* [ %14, %13 ], [ %20, %15 ]
  %24 = phi i16* [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %23, i64 %26
  %28 = load i16, i16* %24, align 2
  store i16 %28, i16* %27, align 2
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.836"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i16*, i16** %31, align 8
  %33 = icmp eq i16* %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 8
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.836"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 1
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.836"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 8, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.836"* %0, i32 %27) #12
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIDsLj8ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.836"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 9
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i16*, i16** %5, align 8
  %7 = icmp eq i16* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to i16*
  %10 = icmp eq i16* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.836"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.836"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 8, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast i16* %6 to i8*
  %27 = shl nuw nsw i64 %25, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %8, i8* nonnull align 2 %26, i64 %27, i1 false) #12
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.837"* %19, i16* nonnull %6) #12
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64 %30) #12
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIDsEEPKcv, i64 0, i64 0)) #12
  %33 = lshr i64 %31, 1
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load i16*, i16** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne i16* %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast i16* %36 to i8*
  %45 = shl nuw nsw i64 %43, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %32, i8* nonnull align 2 %44, i64 %45, i1 false) #12
  %46 = load i16*, i16** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi i16* [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to i16*
  %51 = icmp eq i16* %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.837"* %53, i16* %48) #12
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.836"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.836", %"class.WTF::Vector.836"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIDsEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIDsLj8ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPDs(%"class.WTF::VectorBuffer.837"*, i16*) local_unnamed_addr #7 comdat align 2 {
  %3 = bitcast i16* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder13CreateBuffer8Ej(%"class.WTF::StringBuilder"*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRhEEvOT_(%"class.WTF::Vector.831"*, i8* dereferenceable(1)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i8*, i8** %6, align 8
  %8 = icmp ugt i8* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i8, i8* %7, i64 %10
  %12 = icmp ugt i8* %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.831"* %0, i32 %5) #12
  %14 = load i8*, i8** %6, align 8
  br label %21

15:                                               ; preds = %9
  %16 = ptrtoint i8* %1 to i64
  %17 = ptrtoint i8* %7 to i64
  %18 = sub i64 %16, %17
  tail call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.831"* %0, i32 %5) #12
  %19 = load i8*, i8** %6, align 8
  %20 = getelementptr inbounds i8, i8* %19, i64 %18
  br label %21

21:                                               ; preds = %13, %15
  %22 = phi i8* [ %14, %13 ], [ %19, %15 ]
  %23 = phi i8* [ %1, %13 ], [ %20, %15 ]
  %24 = load i32, i32* %3, align 4
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %22, i64 %25
  %27 = load i8, i8* %23, align 1
  store i8 %27, i8* %26, align 1
  %28 = load i32, i32* %3, align 4
  %29 = add i32 %28, 1
  store i32 %29, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.831"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #12
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %15, i8* %16) #12
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #12
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #12
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #12
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %50, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %34, label %49

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %43

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %37) #12
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.831"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = trunc i64 %38 to i32
  br label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 1, i64 0
  %45 = ptrtoint i8* %44 to i64
  %46 = bitcast %"class.WTF::Vector.831"* %0 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  br label %47

47:                                               ; preds = %43, %36
  %48 = phi i32 [ 16, %43 ], [ %42, %36 ]
  store i32 %48, i32* %6, align 8
  br label %50

49:                                               ; preds = %30
  call void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.831"* %0, i32 %27) #12
  br label %50

50:                                               ; preds = %23, %47, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIhLj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.831"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %26

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = icmp eq i8* %8, %6
  %10 = or i1 %7, %9
  br i1 %10, label %11, label %15

11:                                               ; preds = %4
  %12 = ptrtoint i8* %8 to i64
  %13 = bitcast %"class.WTF::Vector.831"* %0 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %14, align 8
  br label %51

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0
  %19 = ptrtoint i8* %8 to i64
  %20 = bitcast %"class.WTF::Vector.831"* %0 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %21, align 8
  %22 = icmp eq i8* %8, null
  br i1 %22, label %25, label %23, !prof !4

23:                                               ; preds = %15
  %24 = zext i32 %17 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %8, i8* nonnull align 1 %6, i64 %24, i1 false) #12
  br label %25

25:                                               ; preds = %23, %15
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.832"* %18, i8* nonnull %6) #12
  br label %51

26:                                               ; preds = %2
  %27 = zext i32 %1 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %27) #12
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #12
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = icmp ne i8* %29, null
  %34 = icmp ne i8* %32, null
  %35 = and i1 %33, %34
  br i1 %35, label %36, label %41, !prof !3

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = zext i32 %38 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* nonnull align 1 %32, i64 %39, i1 false) #12
  %40 = load i8*, i8** %31, align 8
  br label %41

41:                                               ; preds = %26, %36
  %42 = phi i8* [ %32, %26 ], [ %40, %36 ]
  %43 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 1, i64 0
  %44 = icmp eq i8* %43, %42
  br i1 %44, label %47, label %45, !prof !3

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.832"* %46, i8* %42) #12
  br label %47

47:                                               ; preds = %41, %45
  %48 = bitcast %"class.WTF::Vector.831"* %0 to i64*
  store atomic i64 %30, i64* %48 monotonic, align 8
  %49 = trunc i64 %28 to i32
  %50 = getelementptr inbounds %"class.WTF::Vector.831", %"class.WTF::Vector.831"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %49, i32* %50, align 8
  br label %51

51:                                               ; preds = %25, %47, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #12
  ret i64 %20
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIhLj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPh(%"class.WTF::VectorBuffer.832"*, i8*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %1) #12
  ret void
}

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #1

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(120) %"struct.blink::FragmentData::RareData"* @_ZN5blink12FragmentData14EnsureRareDataEv(%"class.blink::FragmentData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink25PaintWorkletDeferredImageC2E13scoped_refptrINS_17PaintWorkletInputEERKNS_9FloatSizeE(%"class.blink::PaintWorkletDeferredImage"*, %"class.blink::PaintWorkletInput"*, %"class.blink::FloatSize"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.cc::PaintImage", align 8
  %5 = alloca %"class.cc::PaintImageBuilder", align 8
  %6 = ptrtoint %"class.blink::PaintWorkletInput"* %1 to i64
  %7 = getelementptr inbounds %"class.blink::PaintWorkletDeferredImage", %"class.blink::PaintWorkletDeferredImage"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"* %7, %"class.blink::ImageObserver"* null, i1 zeroext false) #12
  %8 = getelementptr inbounds %"class.blink::PaintWorkletDeferredImage", %"class.blink::PaintWorkletDeferredImage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTVN5blink14GeneratedImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.blink::PaintWorkletDeferredImage", %"class.blink::PaintWorkletDeferredImage"* %0, i64 0, i32 0, i32 1
  %10 = bitcast %"class.blink::FloatSize"* %2 to i64*
  %11 = bitcast %"class.blink::FloatSize"* %9 to i64*
  %12 = load i64, i64* %10, align 4
  store i64 %12, i64* %11, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [44 x i8*] }, { [44 x i8*] }* @_ZTVN5blink25PaintWorkletDeferredImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %13 = getelementptr inbounds %"class.blink::PaintWorkletDeferredImage", %"class.blink::PaintWorkletDeferredImage"* %0, i64 0, i32 1
  tail call void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"* %13) #12
  %14 = bitcast %"class.cc::PaintImage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %14) #12
  %15 = bitcast %"class.cc::PaintImageBuilder"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %15) #12
  call void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* nonnull sret %5) #12
  %16 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %5, i64 0, i32 0, i32 15
  %17 = bitcast %class.scoped_refptr.2315* %16 to i64*
  %18 = getelementptr inbounds %class.scoped_refptr.2315, %class.scoped_refptr.2315* %16, i64 0, i32 0
  %19 = load %"class.cc::PaintWorkletInput"*, %"class.cc::PaintWorkletInput"** %18, align 8
  store i64 %6, i64* %17, align 8
  %20 = icmp eq %"class.cc::PaintWorkletInput"* %19, null
  br i1 %20, label %33, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.cc::PaintWorkletInput", %"class.cc::PaintWorkletInput"* %19, i64 0, i32 1
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2296", %"class.base::RefCountedThreadSafe.2296"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw sub i32* %23, i32 1 acq_rel
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %26, label %33

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe.2296", %"class.base::RefCountedThreadSafe.2296"* %22, i64 -2
  %28 = bitcast %"class.base::RefCountedThreadSafe.2296"* %27 to %"class.cc::PaintWorkletInput"*
  %29 = bitcast %"class.base::RefCountedThreadSafe.2296"* %27 to void (%"class.cc::PaintWorkletInput"*)***
  %30 = load void (%"class.cc::PaintWorkletInput"*)**, void (%"class.cc::PaintWorkletInput"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %30, i64 4
  %32 = load void (%"class.cc::PaintWorkletInput"*)*, void (%"class.cc::PaintWorkletInput"*)** %31, align 8
  call void %32(%"class.cc::PaintWorkletInput"* nonnull %28) #12
  br label %33

33:                                               ; preds = %26, %21, %3
  %34 = call i32 @_ZN2cc10PaintImage9GetNextIdEv() #12
  %35 = getelementptr inbounds %"class.cc::PaintImageBuilder", %"class.cc::PaintImageBuilder"* %5, i64 0, i32 0, i32 6
  store i32 %34, i32* %35, align 8
  call void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* nonnull sret %4, %"class.cc::PaintImageBuilder"* nonnull %5) #12
  %36 = call dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"* %13, %"class.cc::PaintImage"* nonnull dereferenceable(104) %4) #12
  call void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"* nonnull %4) #12
  call void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %15) #12
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %14) #12
  ret void
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

declare void @_ZN2cc10PaintImageC1Ev(%"class.cc::PaintImage"*) unnamed_addr #1

declare void @_ZN2cc17PaintImageBuilder11WithDefaultEv(%"class.cc::PaintImageBuilder"* sret) local_unnamed_addr #1

declare i32 @_ZN2cc10PaintImage9GetNextIdEv() local_unnamed_addr #1

declare void @_ZN2cc17PaintImageBuilder14TakePaintImageEv(%"class.cc::PaintImage"* sret, %"class.cc::PaintImageBuilder"*) local_unnamed_addr #1

declare dereferenceable(104) %"class.cc::PaintImage"* @_ZN2cc10PaintImageaSEOS0_(%"class.cc::PaintImage"*, %"class.cc::PaintImage"* dereferenceable(104)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc10PaintImageD1Ev(%"class.cc::PaintImage"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2cc17PaintImageBuilderD1Ev(%"class.cc::PaintImageBuilder"*) unnamed_addr #3

declare void @_ZN5blink5ImageC2EPNS_13ImageObserverEb(%"class.blink::Image"*, %"class.blink::ImageObserver"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSPaintValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2cc17PaintWorkletInput11PropertyKeyD1Ev(%"struct.cc::PaintWorkletInput::PropertyKey"*) unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_22CSSPaintImageGenerator8ObserverEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.179"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_22CSSPaintImageGenerator8ObserverEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.179"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink22CSSPaintImageGenerator8ObserverEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !4

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22CSSPaintImageGenerator8ObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPaintImageGenerator::Observer"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)** %5, i64 3
  %7 = load void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSPaintImageGenerator::Observer"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSPaintImageGenerator::Observer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_22CSSPaintImageGenerator8ObserverEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::CSSPaintImageGenerator::Observer"*
  %3 = bitcast i8* %0 to void (%"class.blink::CSSPaintImageGenerator::Observer"*)***
  %4 = load void (%"class.blink::CSSPaintImageGenerator::Observer"*)**, void (%"class.blink::CSSPaintImageGenerator::Observer"*)*** %3, align 8
  %5 = load void (%"class.blink::CSSPaintImageGenerator::Observer"*)*, void (%"class.blink::CSSPaintImageGenerator::Observer"*)** %4, align 8
  tail call void %5(%"class.blink::CSSPaintImageGenerator::Observer"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_22CSSPaintImageGenerator8ObserverEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.179"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink22CSSPaintImageGenerator8ObserverD2Ev(%"class.blink::CSSPaintImageGenerator::Observer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.189"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISI_SD_SJ_EEPS4_DnEENS_18HashTableAddResultISK_SA_EEOT0_OT1_(%"class.WTF::HashTable.187"*, %"class.blink::Document"** dereferenceable(8), i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.189"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.187"* %0, %"struct.WTF::KeyValuePair.189"* null)
  %9 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.189"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Document"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = icmp eq %"class.blink::Document"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Document"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Document"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.189"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.189"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Document"* %59, %43
  br i1 %64, label %145, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Document"* %59, inttoptr (i64 -1 to %"class.blink::Document"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.189"* %60, %"struct.WTF::KeyValuePair.189"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = icmp eq %"class.blink::Document"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.189"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.189"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #12
  %80 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Document"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.189"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Document"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.189"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Document"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #12
  br label %97

97:                                               ; preds = %87, %94
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %89, i64 0, i32 1
  %99 = bitcast %"class.blink::Member.556"* %98 to i64*
  store atomic i64 0, i64* %99 monotonic, align 8
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_8DocumentEEENS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSD_ISA_EEEEEEvPT_(%"struct.WTF::KeyValuePair.189"* %89) #12
  %100 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 2
  %101 = load i32, i32* %100, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %100, align 4
  %103 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 3
  %104 = load i32, i32* %103, align 8
  %105 = add i32 %104, %102
  %106 = shl i32 %105, 1
  %107 = load i32, i32* %12, align 8
  %108 = icmp ult i32 %106, %107
  br i1 %108, label %111, label %109

109:                                              ; preds = %97
  %110 = tail call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.187"* %0, %"struct.WTF::KeyValuePair.189"* %89)
  br label %145

111:                                              ; preds = %97
  %112 = mul i32 %102, 6
  %113 = icmp ult i32 %112, %107
  %114 = icmp ugt i32 %107, 8
  %115 = and i1 %113, %114
  br i1 %115, label %116, label %145

116:                                              ; preds = %111
  %117 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %118 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %117, i64 0, i32 1
  %119 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %118) #12
  %120 = icmp eq i8* %119, null
  br i1 %120, label %121, label %123, !prof !4

121:                                              ; preds = %116
  %122 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %118, i8* %122) #12
  br label %123

123:                                              ; preds = %121, %116
  %124 = phi i8* [ %122, %121 ], [ %119, %116 ]
  %125 = bitcast i8* %124 to %"class.blink::ThreadState"**
  %126 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %125, align 8
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 6
  %128 = load i8, i8* %127, align 8, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 16
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 1
  br i1 %133, label %145, label %134

134:                                              ; preds = %123, %130
  %135 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %126, i64 0, i32 13
  %136 = load i64, i64* %135, align 8
  %137 = icmp eq i64 %136, 0
  br i1 %137, label %138, label %145

138:                                              ; preds = %134
  %139 = load i32, i32* %12, align 8
  %140 = lshr i32 %139, 1
  %141 = zext i32 %140 to i64
  %142 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %141) #12
  %143 = bitcast %"class.blink::HeapHashTableBacking"* %142 to %"struct.WTF::KeyValuePair.189"*
  %144 = tail call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.187"* %0, %"struct.WTF::KeyValuePair.189"* %143, i32 %140, %"struct.WTF::KeyValuePair.189"* %89) #12
  br label %145

145:                                              ; preds = %58, %130, %111, %109, %138, %134
  %146 = phi i8 [ 1, %134 ], [ 1, %138 ], [ 1, %109 ], [ 1, %111 ], [ 1, %130 ], [ 0, %58 ]
  %147 = phi %"struct.WTF::KeyValuePair.189"* [ %89, %134 ], [ %144, %138 ], [ %110, %109 ], [ %89, %111 ], [ %89, %130 ], [ %60, %58 ]
  %148 = insertvalue { %"struct.WTF::KeyValuePair.189"*, i8 } undef, %"struct.WTF::KeyValuePair.189"* %147, 0
  %149 = insertvalue { %"struct.WTF::KeyValuePair.189"*, i8 } %148, i8 %146, 1
  ret { %"struct.WTF::KeyValuePair.189"*, i8 } %149
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE6ExpandEPSA_(%"class.WTF::HashTable.187"*, %"struct.WTF::KeyValuePair.189"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #12
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.11, i64 0, i64 0), i8* %23, i8* %24) #12
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #12
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #12
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #12
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.187"* %0, i32 %35, %"struct.WTF::KeyValuePair.189"* %1, i8* nonnull dereferenceable(1) %4) #12
  %37 = load i8, i8* %4, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #12
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #12
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.189"*
  %44 = call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.187"* %0, %"struct.WTF::KeyValuePair.189"* %43, i32 %40, %"struct.WTF::KeyValuePair.189"* %1) #12
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.189"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.189"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberIKNS_8DocumentEEENS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSD_ISA_EEEEEEvPT_(%"struct.WTF::KeyValuePair.189"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #12
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !4

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #12
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %0, i64 0, i32 1
  %26 = bitcast %"class.blink::Member.556"* %25 to i8*
  %27 = bitcast %"struct.WTF::KeyValuePair.189"* %0 to i64*
  %28 = load atomic i64, i64* %27 monotonic, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %18
  %31 = inttoptr i64 %28 to i8*
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* nonnull %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #12
  br label %36

36:                                               ; preds = %18, %30
  %37 = load atomic i64, i64* %27 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* %40, i8* %26, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %45

45:                                               ; preds = %36, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %9, i64 5
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* nonnull %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_22CSSPaintImageGeneratorEE5TraceEPNS_7VisitorEPKv) #12
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_22CSSPaintImageGeneratorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSPaintImageGenerator"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)** %5, i64 9
  %7 = load void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSPaintImageGenerator"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSPaintImageGenerator"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE12ExpandBufferEjPSA_Rb(%"class.WTF::HashTable.187"*, i32, %"struct.WTF::KeyValuePair.189"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.12, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #12
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.189"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.189"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #12
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #12
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.189"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.189"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.187"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #12
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.189"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.187"* %0, %"struct.WTF::KeyValuePair.189"* %42, i32 %1, %"struct.WTF::KeyValuePair.189"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.189"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.189"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.189"* %64, %"struct.WTF::KeyValuePair.189"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.189"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.189"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.189"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.556"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.556"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.189"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.189"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.189"* @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE8RehashToEPSA_jSL_(%"class.WTF::HashTable.187"*, %"struct.WTF::KeyValuePair.189"*, i32, %"struct.WTF::KeyValuePair.189"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.187", align 8
  %6 = bitcast %"class.WTF::HashTable.187"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.187"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.189"* %1, %"struct.WTF::KeyValuePair.189"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.189"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.189"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.187"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.189"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.187"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #12
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.187"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.187"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #12
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.189"*
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.189"* nonnull %52, i32 %41) #12
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret %"struct.WTF::KeyValuePair.189"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.189"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.189"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.189"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.189"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.187"* nonnull %5, %"class.blink::WeakMember"* dereferenceable(8) %67) #12
  %69 = extractvalue { %"struct.WTF::KeyValuePair.189"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.189"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.556"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.556"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.189"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.189"* %69, %"struct.WTF::KeyValuePair.189"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.189"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.189"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.14, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS1_12KeyValuePairIS6_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS1_12KeyValuePairIS6_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEE14AllocateObjectISM_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.179"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.179"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([545 x i8], [545 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS7_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSH_ISB_EEEESI_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_8DocumentEEENS_12KeyValuePairIS7_NS3_6MemberINS3_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberIKNS3_8DocumentEEENS_12KeyValuePairIS7_NS3_6MemberINS3_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSH_ISB_EEEESI_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.189"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %69, %20
  ret void

33:                                               ; preds = %69, %30
  %34 = phi i64 [ 0, %30 ], [ %70, %69 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.189"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %69
    i64 0, label %69
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.556"* %40 to i8*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #12
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 9
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* %42, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %69

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %69
    i64 0, label %69
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.556"* %52 to i8*
  %54 = load atomic i64, i64* %36 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #12
  br label %61

61:                                               ; preds = %56, %51
  %62 = load atomic i64, i64* %36 monotonic, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %61
  %65 = inttoptr i64 %62 to i8*
  %66 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %67 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, i64 9
  %68 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %67, align 8
  tail call void %68(%"class.blink::Visitor"* %0, i8* %65, i8* %53, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %69

69:                                               ; preds = %49, %49, %37, %37, %64, %61, %39
  %70 = add nuw nsw i64 %34, 1
  %71 = icmp eq i64 %70, %23
  br i1 %71, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.189"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.187"*, %"class.blink::WeakMember"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.187", %"class.WTF::HashTable.187"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.189"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = icmp eq %"class.blink::Document"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Document"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.189"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.189"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.189"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.189"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.189"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Document"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = icmp eq %"class.blink::Document"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Document"* %63, inttoptr (i64 -1 to %"class.blink::Document"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.189"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = icmp eq %"class.blink::Document"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.189"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.189"*, i8 } undef, %"struct.WTF::KeyValuePair.189"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.189"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.189"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberIKNS1_8DocumentEEENS_12KeyValuePairIS5_NS1_6MemberINS1_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEE29DeleteAllBucketsAndDeallocateEPSA_j(%"struct.WTF::KeyValuePair.189"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %39, label %5

5:                                                ; preds = %2
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #12
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #12
  br label %12

12:                                               ; preds = %5, %10
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 9
  %17 = load i8, i8* %16, align 1, !range !2
  %18 = icmp ne i8 %17, 0
  %19 = icmp ne i32 %1, 0
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %39

21:                                               ; preds = %12
  %22 = zext i32 %1 to i64
  br label %23

23:                                               ; preds = %36, %21
  %24 = phi i64 [ 0, %21 ], [ %37, %36 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %0, i64 %24
  %26 = bitcast %"struct.WTF::KeyValuePair.189"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %28 [
    i64 -1, label %36
    i64 0, label %36
  ]

28:                                               ; preds = %23
  store atomic i64 -1, i64* %26 monotonic, align 8
  %29 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  %32 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #12
  br label %33

33:                                               ; preds = %28, %31
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %0, i64 %24, i32 1
  %35 = bitcast %"class.blink::Member.556"* %34 to i64*
  store atomic i64 0, i64* %35 monotonic, align 8
  br label %36

36:                                               ; preds = %23, %23, %33
  %37 = add nuw nsw i64 %24, 1
  %38 = icmp eq i64 %37, %22
  br i1 %38, label %39, label %23

39:                                               ; preds = %36, %12, %2
  %40 = bitcast %"struct.WTF::KeyValuePair.189"* %0 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %40) #12
  ret void
}

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #10

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN5blink20CSSPaintWorkletInputC1ERKN3WTF6StringERKNS_9FloatSizeEffiNS1_7HashMapIS2_NSt3__110unique_ptrINS_21CrossThreadStyleValueENS9_14default_deleteISB_EEEENS1_10StringHashENS1_10HashTraitsIS2_EENSG_ISE_EENS1_18PartitionAllocatorEEENS1_6VectorISE_Lj0ESJ_EENS9_6vectorIN2cc17PaintWorkletInput11PropertyKeyENS9_9allocatorISQ_EEEE(%"class.blink::CSSPaintWorkletInput"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::FloatSize"* dereferenceable(8), float, float, i32, %"class.WTF::HashMap.2279"*, %"class.WTF::Vector.2284"*, %"class.std::__1::vector.2262"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.2284"*, %"class.std::__1::unique_ptr.2287"* dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %6, align 8
  %8 = icmp ugt %"class.std::__1::unique_ptr.2287"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %7, i64 %10
  %12 = icmp ugt %"class.std::__1::unique_ptr.2287"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.std::__1::unique_ptr.2287"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS2_14default_deleteIS5_EEEEEEmm(i64 %26) #12
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2284"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.std::__1::unique_ptr.2287"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.std::__1::unique_ptr.2287"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.std::__1::unique_ptr.2287"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #12
  %47 = bitcast %"class.WTF::Vector.2284"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #12
  %51 = bitcast %"class.WTF::Vector.2284"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.std::__1::unique_ptr.2287"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.std::__1::unique_ptr.2287"* %1 to i64
  %56 = ptrtoint %"class.std::__1::unique_ptr.2287"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.2284", %"class.WTF::Vector.2284"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.std::__1::unique_ptr.2287"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS2_14default_deleteIS5_EEEEEEmm(i64 %71) #12
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([155 x i8], [155 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS1_14default_deleteIS4_EEEEEEPKcv, i64 0, i64 0)) #12
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.2284"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.std::__1::unique_ptr.2287"*, %"class.std::__1::unique_ptr.2287"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.std::__1::unique_ptr.2287"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.std::__1::unique_ptr.2287"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #12
  %87 = bitcast %"class.WTF::Vector.2284"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #12
  %91 = bitcast %"class.WTF::Vector.2284"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.std::__1::unique_ptr.2287"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.std::__1::unique_ptr.2287"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.std::__1::unique_ptr.2287"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.std::__1::unique_ptr.2287"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %100, i64 %103
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.2287", %"class.std::__1::unique_ptr.2287"* %101, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.2287"* %101 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::CrossThreadStyleValue"* null, %"class.blink::CrossThreadStyleValue"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.2287"* %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = load i32, i32* %3, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink21CrossThreadStyleValueENS2_14default_deleteIS5_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.7, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #12
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.179"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.179"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink10HeapVectorINS1_6MemberINS1_13CSSStyleValueEEELj0EEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  %6 = bitcast i8* %1 to i8**
  %7 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %8 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, i64 11
  %10 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, align 8
  tail call void %10(%"class.blink::Visitor"* %0, i8** %6) #12
  br i1 %5, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_10HeapVectorINS_6MemberINS_13CSSStyleValueEEELj0EEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.574"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.574"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %class.scoped_refptr.580* @_ZN3WTF6VectorI13scoped_refptrIN5blink15CSSVariableDataEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.577"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.577", %"class.WTF::Vector.577"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.577", %"class.WTF::Vector.577"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr.580*, %class.scoped_refptr.580** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %class.scoped_refptr.580, %class.scoped_refptr.580* %24, i64 %25
  ret %class.scoped_refptr.580* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::CSSSyntaxDefinition"* @_ZNK3WTF6VectorIN5blink19CSSSyntaxDefinitionELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.2317"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.2317", %"class.WTF::Vector.2317"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.15, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.2317", %"class.WTF::Vector.2317"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSSyntaxDefinition"*, %"class.blink::CSSSyntaxDefinition"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSSyntaxDefinition", %"class.blink::CSSSyntaxDefinition"* %24, i64 %25
  ret %"class.blink::CSSSyntaxDefinition"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE6AppendIS4_EEvPKT_j(%"class.WTF::Vector.571"*, %"class.blink::Member.574"*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, %2
  %10 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = icmp ugt i32 %9, %11
  br i1 %12, label %13, label %43

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %14, align 8
  %16 = icmp ugt %"class.blink::Member.574"* %15, %1
  br i1 %16, label %21, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %15, i64 %18
  %20 = icmp ugt %"class.blink::Member.574"* %19, %1
  br i1 %20, label %29, label %21

21:                                               ; preds = %17, %13
  %22 = lshr i32 %11, 2
  %23 = add nuw i32 %11, 1
  %24 = add i32 %23, %22
  %25 = icmp ugt i32 %24, 4
  %26 = select i1 %25, i32 %24, i32 4
  %27 = icmp ugt i32 %26, %9
  %28 = select i1 %27, i32 %26, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.571"* %0, i32 %28) #12
  br label %43

29:                                               ; preds = %17
  %30 = ptrtoint %"class.blink::Member.574"* %1 to i64
  %31 = ptrtoint %"class.blink::Member.574"* %15 to i64
  %32 = sub i64 %30, %31
  %33 = ashr exact i64 %32, 3
  %34 = lshr i32 %11, 2
  %35 = add nuw i32 %11, 1
  %36 = add i32 %35, %34
  %37 = icmp ugt i32 %36, 4
  %38 = select i1 %37, i32 %36, i32 4
  %39 = icmp ugt i32 %38, %9
  %40 = select i1 %39, i32 %38, i32 %9
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.571"* %0, i32 %40) #12
  %41 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %14, align 8
  %42 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %41, i64 %33
  br label %43

43:                                               ; preds = %29, %21, %3
  %44 = phi %"class.blink::Member.574"* [ %1, %3 ], [ %1, %21 ], [ %42, %29 ]
  %45 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  %46 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %46, align 8
  %47 = load i32, i32* %7, align 4
  %48 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)
  %49 = icmp ult i32 %9, %47
  br i1 %49, label %51, label %50

50:                                               ; preds = %43
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* null, i8** %46, align 8
  br label %60

51:                                               ; preds = %43
  %52 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  %53 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %47) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.16, i64 0, i64 0), i8* %52, i8* %53) #12
  %54 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %55 = load i8*, i8** %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)
  store i8* %55, i8** %46, align 8
  %56 = icmp eq i8* %55, null
  br i1 %56, label %60, label %57

57:                                               ; preds = %51
  %58 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1907, %"class.logging::CheckOpResult"* nonnull %5) #12
  %59 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #12
  br label %60

60:                                               ; preds = %50, %51, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %61 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %61, align 8
  %63 = load i32, i32* %7, align 4
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %62, i64 %64
  %66 = icmp ne %"class.blink::Member.574"* %65, null
  %67 = icmp ne %"class.blink::Member.574"* %44, null
  %68 = and i1 %67, %66
  br i1 %68, label %69, label %88, !prof !3

69:                                               ; preds = %60
  %70 = zext i32 %2 to i64
  %71 = bitcast %"class.blink::Member.574"* %65 to i8*
  %72 = bitcast %"class.blink::Member.574"* %44 to i8*
  %73 = shl nuw nsw i64 %70, 3
  call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %71, i8* nonnull %72, i64 %73) #12
  %74 = icmp eq i32 %2, 0
  br i1 %74, label %88, label %75

75:                                               ; preds = %69, %85
  %76 = phi i64 [ %78, %85 ], [ %70, %69 ]
  %77 = phi %"class.blink::Member.574"* [ %86, %85 ], [ %65, %69 ]
  %78 = add nsw i64 %76, -1
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::Member.574"* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %83) #12
  br label %85

85:                                               ; preds = %81, %75
  %86 = getelementptr inbounds %"class.blink::Member.574", %"class.blink::Member.574"* %77, i64 1
  %87 = icmp eq i64 %78, 0
  br i1 %87, label %88, label %75

88:                                               ; preds = %85, %60, %69
  store i32 %9, i32* %7, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !3

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %8, align 8
  %10 = icmp eq %"class.blink::Member.574"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %8, align 8
  %26 = icmp eq %"class.blink::Member.574"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.574"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !4

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.4, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.5, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.571"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleValueEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.571"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.574"*, %"class.blink::Member.574"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.574"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.574"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !3

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.571"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.571"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.571", %"class.WTF::Vector.571"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleValueEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.6, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.17, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.18, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !4

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.179"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.179"*)) #12
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleValueEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleValueEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSCustomIdentValueEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSValue"*
  tail call void @_ZNK5blink8CSSValue5TraceEPNS_7VisitorE(%"class.blink::CSSValue"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberIKNS2_8DocumentEEENS_12KeyValuePairIS6_NS2_6MemberINS2_22CSSPaintImageGeneratorEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSG_ISA_EEEESH_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.189"**
  %4 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.189"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.189"* %12, %4
  br i1 %13, label %64, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %60
  %20 = phi %"struct.WTF::KeyValuePair.189"* [ %12, %14 ], [ %61, %60 ]
  %21 = phi %"struct.WTF::KeyValuePair.189"* [ %11, %14 ], [ %20, %60 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = ptrtoint %"class.blink::Document"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %60
    i64 0, label %60
  ]

25:                                               ; preds = %19
  %26 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %27 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %26, i64 0, i32 1
  %28 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %27) #12
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %32, !prof !4

30:                                               ; preds = %25
  %31 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %27, i8* %31) #12
  br label %32

32:                                               ; preds = %30, %25
  %33 = phi i8* [ %31, %30 ], [ %28, %25 ]
  %34 = bitcast i8* %33 to %"class.blink::ThreadState"**
  %35 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %34, align 8
  %36 = icmp eq %"class.blink::ThreadState"* %35, null
  br i1 %36, label %60, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 -1, i32 192
  %39 = bitcast %"class.blink::Member.554"* %38 to %"class.blink::HeapObjectHeader"*
  %40 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %39, i64 0, i32 2
  %41 = load i16, i16* %40, align 2
  %42 = and i16 %41, 1
  %43 = icmp eq i16 %42, 0
  br i1 %43, label %44, label %60

44:                                               ; preds = %37
  %45 = bitcast %"struct.WTF::KeyValuePair.189"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #12
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %21, i64 -1, i32 1
  %52 = bitcast %"class.blink::Member.556"* %51 to i64*
  store atomic i64 0, i64* %52 monotonic, align 8
  %53 = load i32, i32* %16, align 8
  %54 = add i32 %53, 1
  %55 = and i32 %54, 2147483647
  %56 = and i32 %53, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %16, align 8
  %58 = load i32, i32* %18, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %18, align 4
  br label %60

60:                                               ; preds = %19, %19, %32, %37, %50
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %20, i64 -1
  %62 = load %"struct.WTF::KeyValuePair.189"*, %"struct.WTF::KeyValuePair.189"** %3, align 8
  %63 = icmp ult %"struct.WTF::KeyValuePair.189"* %61, %62
  br i1 %63, label %64, label %19

64:                                               ; preds = %60, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberIKNS_8DocumentEEENS2_12KeyValuePairIS7_NS_6MemberINS_22CSSPaintImageGeneratorEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSH_ISB_EEEESI_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE1EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.189"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !4

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #12
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %60, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %57, %30
  %33 = phi i64 [ 0, %30 ], [ %58, %57 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.189"* %34 to i64*
  br i1 %28, label %36, label %45

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %57
    i64 0, label %57
  ]

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %33, i32 1
  %40 = bitcast %"class.blink::Member.556"* %39 to i8*
  %41 = inttoptr i64 %37 to i8*
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 9
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %0, i8* %41, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %57

45:                                               ; preds = %32
  %46 = load i64, i64* %35, align 8
  switch i64 %46, label %47 [
    i64 -1, label %57
    i64 0, label %57
  ]

47:                                               ; preds = %45
  %48 = load atomic i64, i64* %35 monotonic, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.189", %"struct.WTF::KeyValuePair.189"* %3, i64 %33, i32 1
  %52 = bitcast %"class.blink::Member.556"* %51 to i8*
  %53 = inttoptr i64 %48 to i8*
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 9
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %0, i8* %53, i8* %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink17MemberTraceTraitsINS_6MemberINS_22CSSPaintImageGeneratorEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %57

57:                                               ; preds = %50, %47, %45, %45, %38, %36, %36
  %58 = add nuw nsw i64 %33, 1
  %59 = icmp eq i64 %58, %23
  br i1 %59, label %60, label %32

60:                                               ; preds = %57, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSPaintValue8ObserverEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 8
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to %"class.blink::CSSPaintValue"*
  %9 = getelementptr inbounds %"class.blink::CSSPaintValue", %"class.blink::CSSPaintValue"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, i64 5
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %12, align 8
  tail call void %13(%"class.blink::Visitor"* %0, i8* %9, i8* %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSPaintValueEE5TraceEPNS_7VisitorEPKv) #12
  br label %14

14:                                               ; preds = %2, %7
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn nounwind }
attributes #14 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
