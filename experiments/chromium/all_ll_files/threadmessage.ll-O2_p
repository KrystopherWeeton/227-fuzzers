; ModuleID = '../../third_party/ffmpeg/libavutil/threadmessage.c'
source_filename = "../../third_party/ffmpeg/libavutil/threadmessage.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"
module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.AVThreadMessageQueue = type { %struct.AVFifoBuffer*, %union.pthread_mutex_t, %union.pthread_cond_t, %union.pthread_cond_t, i32, i32, i32, void (i8*)* }
%struct.AVFifoBuffer = type { i8*, i8*, i8*, i8*, i32, i32 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.0, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.0 = type { i64 }
%union.pthread_mutexattr_t = type { i32 }
%union.pthread_condattr_t = type { i32 }

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_thread_message_queue_alloc(%struct.AVThreadMessageQueue** nocapture, i32, i32) local_unnamed_addr #0 {
  %4 = udiv i32 2147483647, %2
  %5 = icmp ult i32 %4, %1
  br i1 %5, label %46, label %6

6:                                                ; preds = %3
  %7 = tail call noalias i8* @av_mallocz(i64 168) #4
  %8 = icmp eq i8* %7, null
  br i1 %8, label %46, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds i8, i8* %7, i64 8
  %11 = bitcast i8* %10 to %union.pthread_mutex_t*
  %12 = tail call i32 @pthread_mutex_init(%union.pthread_mutex_t* %11, %union.pthread_mutexattr_t* null) #4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %16, label %14

14:                                               ; preds = %9
  tail call void @av_free(i8* nonnull %7) #4
  %15 = sub nsw i32 0, %12
  br label %46

16:                                               ; preds = %9
  %17 = getelementptr inbounds i8, i8* %7, i64 48
  %18 = bitcast i8* %17 to %union.pthread_cond_t*
  %19 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %18, %union.pthread_condattr_t* null) #4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %24, label %21

21:                                               ; preds = %16
  %22 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %11) #4
  tail call void @av_free(i8* nonnull %7) #4
  %23 = sub nsw i32 0, %19
  br label %46

24:                                               ; preds = %16
  %25 = getelementptr inbounds i8, i8* %7, i64 96
  %26 = bitcast i8* %25 to %union.pthread_cond_t*
  %27 = tail call i32 @pthread_cond_init(%union.pthread_cond_t* %26, %union.pthread_condattr_t* null) #4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %33, label %29

29:                                               ; preds = %24
  %30 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %18) #4
  %31 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %11) #4
  tail call void @av_free(i8* nonnull %7) #4
  %32 = sub nsw i32 0, %27
  br label %46

33:                                               ; preds = %24
  %34 = mul i32 %2, %1
  %35 = tail call %struct.AVFifoBuffer* @av_fifo_alloc(i32 %34) #4
  %36 = bitcast i8* %7 to %struct.AVFifoBuffer**
  store %struct.AVFifoBuffer* %35, %struct.AVFifoBuffer** %36, align 8
  %37 = icmp eq %struct.AVFifoBuffer* %35, null
  br i1 %37, label %38, label %42

38:                                               ; preds = %33
  %39 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %26) #4
  %40 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %18) #4
  %41 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %11) #4
  tail call void @av_free(i8* nonnull %7) #4
  br label %46

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %7, i64 152
  %44 = bitcast i8* %43 to i32*
  store i32 %2, i32* %44, align 8
  %45 = bitcast %struct.AVThreadMessageQueue** %0 to i8**
  store i8* %7, i8** %45, align 8
  br label %46

46:                                               ; preds = %6, %3, %42, %38, %29, %21, %14
  %47 = phi i32 [ %15, %14 ], [ %23, %21 ], [ %32, %29 ], [ 0, %42 ], [ -12, %38 ], [ -22, %3 ], [ -12, %6 ]
  ret i32 %47
}

declare noalias i8* @av_mallocz(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #2

declare void @av_free(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_cond_init(%union.pthread_cond_t*, %union.pthread_condattr_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_cond_destroy(%union.pthread_cond_t*) local_unnamed_addr #2

declare %struct.AVFifoBuffer* @av_fifo_alloc(i32) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @av_thread_message_queue_set_free_func(%struct.AVThreadMessageQueue* nocapture, void (i8*)*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 7
  store void (i8*)* %1, void (i8*)** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_thread_message_queue_free(%struct.AVThreadMessageQueue**) local_unnamed_addr #0 {
  %2 = load %struct.AVThreadMessageQueue*, %struct.AVThreadMessageQueue** %0, align 8
  %3 = icmp eq %struct.AVThreadMessageQueue* %2, null
  br i1 %3, label %17, label %4

4:                                                ; preds = %1
  tail call void @av_thread_message_flush(%struct.AVThreadMessageQueue* nonnull %2)
  %5 = load %struct.AVThreadMessageQueue*, %struct.AVThreadMessageQueue** %0, align 8
  %6 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %5, i64 0, i32 0
  tail call void @av_fifo_freep(%struct.AVFifoBuffer** %6) #4
  %7 = load %struct.AVThreadMessageQueue*, %struct.AVThreadMessageQueue** %0, align 8
  %8 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %7, i64 0, i32 3
  %9 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %8) #4
  %10 = load %struct.AVThreadMessageQueue*, %struct.AVThreadMessageQueue** %0, align 8
  %11 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %10, i64 0, i32 2
  %12 = tail call i32 @pthread_cond_destroy(%union.pthread_cond_t* %11) #4
  %13 = load %struct.AVThreadMessageQueue*, %struct.AVThreadMessageQueue** %0, align 8
  %14 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %13, i64 0, i32 1
  %15 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %14) #4
  %16 = bitcast %struct.AVThreadMessageQueue** %0 to i8*
  tail call void @av_freep(i8* %16) #4
  br label %17

17:                                               ; preds = %1, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_thread_message_flush(%struct.AVThreadMessageQueue*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 7
  %3 = bitcast void (i8*)** %2 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #4
  %7 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 0
  %8 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %7, align 8
  %9 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %8) #4
  %10 = icmp ne i8* %4, null
  %11 = icmp sgt i32 %9, 0
  %12 = and i1 %10, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %1
  %14 = bitcast %struct.AVThreadMessageQueue* %0 to i8*
  %15 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 6
  %16 = load i32, i32* %15, align 8
  br label %17

17:                                               ; preds = %13, %17
  %18 = phi i32 [ %16, %13 ], [ %22, %17 ]
  %19 = phi i32 [ 0, %13 ], [ %23, %17 ]
  %20 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %7, align 8
  %21 = tail call i32 @av_fifo_generic_peek_at(%struct.AVFifoBuffer* %20, i8* %14, i32 %19, i32 %18, void (i8*, i8*, i32)* nonnull @free_func_wrap) #4
  %22 = load i32, i32* %15, align 8
  %23 = add i32 %22, %19
  %24 = icmp slt i32 %23, %9
  br i1 %24, label %17, label %25

25:                                               ; preds = %17, %1
  %26 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %7, align 8
  tail call void @av_fifo_drain(%struct.AVFifoBuffer* %26, i32 %9) #4
  %27 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 3
  %28 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %27) #4
  %29 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #4
  ret void
}

declare void @av_fifo_freep(%struct.AVFifoBuffer**) local_unnamed_addr #1

declare void @av_freep(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_thread_message_queue_nb_elems(%struct.AVThreadMessageQueue*) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #4
  %4 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 0
  %5 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %4, align 8
  %6 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %5) #4
  %7 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #4
  %8 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 6
  %9 = load i32, i32* %8, align 8
  %10 = udiv i32 %6, %9
  ret i32 %10
}

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #2

declare i32 @av_fifo_size(%struct.AVFifoBuffer*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_thread_message_queue_send(%struct.AVThreadMessageQueue*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #4
  %6 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 4
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %33

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 6
  %12 = and i32 %2, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 3
  br label %15

15:                                               ; preds = %21, %9
  %16 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %10, align 8
  %17 = tail call i32 @av_fifo_space(%struct.AVFifoBuffer* %16) #4
  %18 = load i32, i32* %11, align 8
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  br i1 %13, label %21, label %33

21:                                               ; preds = %20
  %22 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %14, %union.pthread_mutex_t* %4) #4
  %23 = load i32, i32* %6, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %15, label %33

25:                                               ; preds = %15
  %26 = load i32, i32* %6, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %33

28:                                               ; preds = %25
  %29 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %10, align 8
  %30 = tail call i32 @av_fifo_generic_write(%struct.AVFifoBuffer* %29, i8* %1, i32 %18, i32 (i8*, i8*, i32)* null) #4
  %31 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 2
  %32 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %31) #4
  br label %33

33:                                               ; preds = %20, %21, %3, %25, %28
  %34 = phi i32 [ 0, %28 ], [ %26, %25 ], [ %7, %3 ], [ %23, %21 ], [ -11, %20 ]
  %35 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #4
  ret i32 %34
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @av_thread_message_queue_recv(%struct.AVThreadMessageQueue*, i8*, i32) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #4
  %6 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 5
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %25

9:                                                ; preds = %3
  %10 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 0
  %11 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 6
  %12 = and i32 %2, 1
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 2
  br label %15

15:                                               ; preds = %21, %9
  %16 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %10, align 8
  %17 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %16) #4
  %18 = load i32, i32* %11, align 8
  %19 = icmp ult i32 %17, %18
  br i1 %19, label %20, label %25

20:                                               ; preds = %15
  br i1 %13, label %21, label %39

21:                                               ; preds = %20
  %22 = tail call i32 @pthread_cond_wait(%union.pthread_cond_t* %14, %union.pthread_mutex_t* %4) #4
  %23 = load i32, i32* %6, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %15, label %25

25:                                               ; preds = %21, %15, %3
  %26 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 0
  %27 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %26, align 8
  %28 = tail call i32 @av_fifo_size(%struct.AVFifoBuffer* %27) #4
  %29 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 6
  %30 = load i32, i32* %29, align 8
  %31 = icmp ult i32 %28, %30
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = load i32, i32* %6, align 4
  br label %39

34:                                               ; preds = %25
  %35 = load %struct.AVFifoBuffer*, %struct.AVFifoBuffer** %26, align 8
  %36 = tail call i32 @av_fifo_generic_read(%struct.AVFifoBuffer* %35, i8* %1, i32 %30, void (i8*, i8*, i32)* null) #4
  %37 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 3
  %38 = tail call i32 @pthread_cond_signal(%union.pthread_cond_t* %37) #4
  br label %39

39:                                               ; preds = %20, %32, %34
  %40 = phi i32 [ %33, %32 ], [ 0, %34 ], [ -11, %20 ]
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #4
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @av_thread_message_queue_set_err_send(%struct.AVThreadMessageQueue*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #4
  %5 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 4
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 3
  %7 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %6) #4
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #4
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_cond_broadcast(%union.pthread_cond_t*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @av_thread_message_queue_set_err_recv(%struct.AVThreadMessageQueue*, i32) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 1
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #4
  %5 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 5
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %struct.AVThreadMessageQueue, %struct.AVThreadMessageQueue* %0, i64 0, i32 2
  %7 = tail call i32 @pthread_cond_broadcast(%union.pthread_cond_t* %6) #4
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #4
  ret void
}

declare i32 @av_fifo_generic_peek_at(%struct.AVFifoBuffer*, i8*, i32, i32, void (i8*, i8*, i32)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal void @free_func_wrap(i8* nocapture readonly, i8*, i32) #0 {
  %4 = getelementptr inbounds i8, i8* %0, i64 160
  %5 = bitcast i8* %4 to void (i8*)**
  %6 = load void (i8*)*, void (i8*)** %5, align 8
  tail call void %6(i8* %1) #4
  ret void
}

declare void @av_fifo_drain(%struct.AVFifoBuffer*, i32) local_unnamed_addr #1

declare i32 @av_fifo_space(%struct.AVFifoBuffer*) local_unnamed_addr #1

declare i32 @pthread_cond_wait(%union.pthread_cond_t*, %union.pthread_mutex_t*) local_unnamed_addr #1

declare i32 @av_fifo_generic_write(%struct.AVFifoBuffer*, i8*, i32, i32 (i8*, i8*, i32)*) local_unnamed_addr #1

; Function Attrs: nounwind
declare i32 @pthread_cond_signal(%union.pthread_cond_t*) local_unnamed_addr #2

declare i32 @av_fifo_generic_read(%struct.AVFifoBuffer*, i8*, i32, void (i8*, i8*, i32)*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="true" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
