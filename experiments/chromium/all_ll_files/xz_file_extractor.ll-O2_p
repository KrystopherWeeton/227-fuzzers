; ModuleID = '../../chrome/services/file_util/xz_file_extractor.cc'
source_filename = "../../chrome/services/file_util/xz_file_extractor.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.XzFileExtractor = type { %"class.chrome::mojom::XzFileExtractor" }
%"class.chrome::mojom::XzFileExtractor" = type { i32 (...)** }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::ScopedHandleBase.0" = type { %"class.mojo::DataPipeProducerHandle" }
%"class.mojo::DataPipeProducerHandle" = type { %"class.mojo::Handle" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::RepeatingCallback.17" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.2, i8, %"class.mojo::ScopedHandleBase.4", %class.scoped_refptr.5, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.2 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3" }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedHandleBase.4" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.5 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.7", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.8" }
%"struct.std::__1::atomic.8" = type { %"struct.std::__1::__atomic_base.9" }
%"struct.std::__1::__atomic_base.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%struct.ISzAlloc = type { i8* (i8*, i64)*, void (i8*, i8*)* }
%struct.CXzUnpacker = type { i32, i32, i32, i32, i16, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i32, %struct.CMixCoder, %struct.CXzBlock, %struct.CXzCheck, %struct.CSha256, [32 x i8], [1024 x i8] }
%struct.CMixCoder = type { %struct.ISzAlloc*, i8*, i32, [3 x i32], [3 x i64], [3 x i64], [4 x i64], [4 x %struct._IStateCoder] }
%struct._IStateCoder = type { i8*, void (i8*, %struct.ISzAlloc*)*, i32 (i8*, i8*, i64, %struct.ISzAlloc*)*, void (i8*)*, i32 (i8*, i8*, i64*, i8*, i64*, i32, i32, i32*)* }
%struct.CXzBlock = type { i64, i64, i8, [4 x %struct.CXzFilter] }
%struct.CXzFilter = type { i64, i32, [20 x i8] }
%struct.CXzCheck = type { i32, i32, i64, %struct.CSha256 }
%struct.CSha256 = type { [8 x i32], i64, [64 x i8] }
%"class.(anonymous namespace)::XzState" = type <{ %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase.0", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher", %"class.base::OnceCallback", %struct.CXzUnpacker, %struct.ISzAlloc, i64, i8, %"struct.std::__1::array", [7 x i8] }>
%"struct.std::__1::array" = type { [8192 x i8] }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%struct.MojoBeginWriteDataOptions = type { i32, i32 }
%struct.MojoReadDataOptions = type { i32, i32 }
%struct.MojoEndWriteDataOptions = type { i32, i32 }

$_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ = comdat any

$_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

@_ZTV15XzFileExtractor = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.XzFileExtractor*)* @_ZN15XzFileExtractorD2Ev to i8*), i8* bitcast (void (%class.XzFileExtractor*)* @_ZN15XzFileExtractorD0Ev to i8*), i8* bitcast (void (%class.XzFileExtractor*, %"class.mojo::ScopedHandleBase"*, %"class.mojo::ScopedHandleBase.0"*, %"class.base::OnceCallback"*)* @_ZN15XzFileExtractor7ExtractEN4mojo16ScopedHandleBaseINS0_22DataPipeConsumerHandleEEENS1_INS0_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEE to i8*)] }, align 8
@_ZZN15XzFileExtractorC1EvE11initialized = internal global i8 0, align 1
@_ZGVZN15XzFileExtractorC1EvE11initialized = internal global i64 0, align 8
@.str = private unnamed_addr constant [8 x i8] c"XzState\00", align 1
@.str.1 = private unnamed_addr constant [53 x i8] c"../../chrome/services/file_util/xz_file_extractor.cc\00", align 1

@_ZN15XzFileExtractorC1Ev = hidden unnamed_addr alias void (%class.XzFileExtractor*), void (%class.XzFileExtractor*)* @_ZN15XzFileExtractorC2Ev
@_ZN15XzFileExtractorD1Ev = hidden unnamed_addr alias void (%class.XzFileExtractor*), void (%class.XzFileExtractor*)* @_ZN15XzFileExtractorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15XzFileExtractorC2Ev(%class.XzFileExtractor* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.XzFileExtractor, %class.XzFileExtractor* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV15XzFileExtractor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN15XzFileExtractorC1EvE11initialized to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %10, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN15XzFileExtractorC1EvE11initialized) #11
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %5
  tail call void @CrcGenerateTable() #11
  tail call void @Crc64GenerateTable() #11
  store i8 1, i8* @_ZZN15XzFileExtractorC1EvE11initialized, align 1
  %9 = tail call {}* @llvm.invariant.start.p0i8(i64 1, i8* nonnull @_ZZN15XzFileExtractorC1EvE11initialized)
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN15XzFileExtractorC1EvE11initialized) #11
  br label %10

10:                                               ; preds = %5, %8, %1
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare {}* @llvm.invariant.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN15XzFileExtractorD2Ev(%class.XzFileExtractor* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15XzFileExtractorD0Ev(%class.XzFileExtractor*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.XzFileExtractor* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15XzFileExtractor7ExtractEN4mojo16ScopedHandleBaseINS0_22DataPipeConsumerHandleEEENS1_INS0_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEE(%class.XzFileExtractor* nocapture readnone, %"class.mojo::ScopedHandleBase"* nocapture, %"class.mojo::ScopedHandleBase.0"* nocapture, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.mojo::Handle", align 4
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.mojo::Handle", align 4
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::Location", align 8
  %11 = alloca %"class.base::RepeatingCallback.17", align 8
  %12 = alloca %"class.base::RepeatingCallback.17", align 8
  %13 = alloca %"class.base::OnceCallback", align 8
  %14 = tail call i8* @_Znwm(i64 10192) #12
  %15 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !3
  store i32 0, i32* %15, align 4, !noalias !3
  %17 = getelementptr inbounds %"class.mojo::ScopedHandleBase.0", %"class.mojo::ScopedHandleBase.0"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = load i32, i32* %17, align 4, !noalias !6
  store i32 0, i32* %17, align 4, !noalias !6
  %19 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.base::OnceCallback"* %13 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %19, align 8
  %23 = bitcast %"class.base::RepeatingCallback.17"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23)
  %24 = bitcast %"class.base::RepeatingCallback.17"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = bitcast i8* %14 to i32*
  store i32 %16, i32* %25, align 4, !alias.scope !9
  %26 = getelementptr inbounds i8, i8* %14, i64 4
  %27 = bitcast i8* %26 to i32*
  store i32 %18, i32* %27, align 4, !alias.scope !12
  %28 = getelementptr inbounds i8, i8* %14, i64 8
  %29 = bitcast i8* %28 to %"class.mojo::SimpleWatcher"*
  %30 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 29) #11
  %31 = call dereferenceable(8) %class.scoped_refptr.2* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #11
  %32 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %31, i64 0, i32 0
  %33 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %32, align 8
  %34 = icmp eq %"class.base::SequencedTaskRunner"* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %4
  %36 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %33, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = atomicrmw add i32* %36, i32 1 monotonic
  br label %38

38:                                               ; preds = %35, %4
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %29, %"class.base::Location"* nonnull dereferenceable(32) %9, i32 0, %"class.base::SequencedTaskRunner"* %33, i8* null) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #11
  %39 = getelementptr inbounds i8, i8* %14, i64 80
  %40 = bitcast i8* %39 to %"class.mojo::SimpleWatcher"*
  %41 = bitcast %"class.base::Location"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #11
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.1, i64 0, i64 0), i32 29) #11
  %42 = call dereferenceable(8) %class.scoped_refptr.2* @_ZN4base25SequencedTaskRunnerHandle3GetEv() #11
  %43 = getelementptr inbounds %class.scoped_refptr.2, %class.scoped_refptr.2* %42, i64 0, i32 0
  %44 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %43, align 8
  %45 = icmp eq %"class.base::SequencedTaskRunner"* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %44, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = atomicrmw add i32* %47, i32 1 monotonic
  br label %49

49:                                               ; preds = %38, %46
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %40, %"class.base::Location"* nonnull dereferenceable(32) %10, i32 0, %"class.base::SequencedTaskRunner"* %44, i8* null) #11
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #11
  %50 = getelementptr inbounds i8, i8* %14, i64 152
  %51 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast i8* %50 to i64*
  store i64 %21, i64* %52, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %51, align 8
  %53 = getelementptr inbounds i8, i8* %14, i64 1984
  %54 = bitcast i8* %53 to i64*
  store i64 0, i64* %54, align 8
  %55 = getelementptr inbounds i8, i8* %14, i64 1992
  store i8 0, i8* %55, align 8
  %56 = getelementptr inbounds i8, i8* %14, i64 1968
  %57 = bitcast i8* %56 to %struct.ISzAlloc*
  %58 = bitcast i8* %56 to i8* (i8*, i64)**
  store i8* (i8*, i64)* @_ZZN12_GLOBAL__N_17XzStateC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEEENUlPvmE_8__invokeESB_m, i8* (i8*, i64)** %58, align 8
  %59 = getelementptr inbounds i8, i8* %14, i64 1976
  %60 = bitcast i8* %59 to void (i8*, i8*)**
  store void (i8*, i8*)* @_ZZN12_GLOBAL__N_17XzStateC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEEENUlPvSB_E_8__invokeESB_SB_, void (i8*, i8*)** %60, align 8
  %61 = getelementptr inbounds i8, i8* %14, i64 160
  %62 = bitcast i8* %61 to %struct.CXzUnpacker*
  call void @XzUnpacker_Construct(%struct.CXzUnpacker* %62, %struct.ISzAlloc* %57) #11
  %63 = load i32, i32* %25, align 4
  %64 = ptrtoint i8* %14 to i64
  %65 = call i8* @_Znwm(i64 56) #12, !noalias !15
  %66 = bitcast i8* %65 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %66, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !15
  %67 = getelementptr inbounds i8, i8* %65, i64 32
  %68 = bitcast i8* %67 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::XzState"*, i32)* @_ZN12_GLOBAL__N_17XzState10OnReadableEj to i64), i64 0>, <2 x i64>* %68, align 8, !noalias !15
  %69 = getelementptr inbounds i8, i8* %65, i64 48
  %70 = bitcast i8* %69 to i64*
  store i64 %64, i64* %70, align 8, !noalias !15
  %71 = bitcast %"class.mojo::Handle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %71) #11
  %72 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #11
  %73 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %5, i64 0, i32 0
  store i32 %63, i32* %73, align 4
  %74 = call i8* @_Znwm(i64 48) #12, !noalias !20
  %75 = bitcast i8* %74 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %75, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !20
  %76 = getelementptr inbounds i8, i8* %74, i64 32
  %77 = bitcast i8* %76 to i64*
  store i64 ptrtoint (void (%"class.base::RepeatingCallback.17"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE to i64), i64* %77, align 8, !noalias !20
  %78 = getelementptr inbounds i8, i8* %74, i64 40
  %79 = getelementptr inbounds %"class.base::RepeatingCallback.17", %"class.base::RepeatingCallback.17"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %80 = ptrtoint i8* %65 to i64
  %81 = bitcast i8* %78 to i64*
  store i64 %80, i64* %81, align 8, !noalias !20
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %79, align 8, !noalias !20
  %82 = bitcast %"class.base::RepeatingCallback"* %6 to i8**
  store i8* %74, i8** %82, align 8, !alias.scope !20
  %83 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %29, %"class.mojo::Handle"* nonnull %5, i32 5, i32 1, %"class.base::RepeatingCallback"* nonnull %6) #11
  %84 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %84) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %71) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #11
  %85 = getelementptr inbounds %"class.base::RepeatingCallback.17", %"class.base::RepeatingCallback.17"* %11, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %85) #11
  %86 = load i32, i32* %27, align 4
  %87 = call i8* @_Znwm(i64 56) #12, !noalias !25
  %88 = bitcast i8* %87 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %88, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !25
  %89 = getelementptr inbounds i8, i8* %87, i64 32
  %90 = bitcast i8* %89 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.(anonymous namespace)::XzState"*, i32)* @_ZN12_GLOBAL__N_17XzState10OnWritableEj to i64), i64 0>, <2 x i64>* %90, align 8, !noalias !25
  %91 = getelementptr inbounds i8, i8* %87, i64 48
  %92 = bitcast i8* %91 to i64*
  store i64 %64, i64* %92, align 8, !noalias !25
  %93 = bitcast %"class.mojo::Handle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93) #11
  %94 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #11
  %95 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %7, i64 0, i32 0
  store i32 %86, i32* %95, align 4
  %96 = call i8* @_Znwm(i64 48) #12, !noalias !30
  %97 = bitcast i8* %96 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %97, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #11, !noalias !30
  %98 = getelementptr inbounds i8, i8* %96, i64 32
  %99 = bitcast i8* %98 to i64*
  store i64 ptrtoint (void (%"class.base::RepeatingCallback.17"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE to i64), i64* %99, align 8, !noalias !30
  %100 = getelementptr inbounds i8, i8* %96, i64 40
  %101 = getelementptr inbounds %"class.base::RepeatingCallback.17", %"class.base::RepeatingCallback.17"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %102 = ptrtoint i8* %87 to i64
  %103 = bitcast i8* %100 to i64*
  store i64 %102, i64* %103, align 8, !noalias !30
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %101, align 8, !noalias !30
  %104 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %96, i8** %104, align 8, !alias.scope !30
  %105 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %40, %"class.mojo::Handle"* nonnull %7, i32 6, i32 1, %"class.base::RepeatingCallback"* nonnull %8) #11
  %106 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %106) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #11
  %107 = getelementptr inbounds %"class.base::RepeatingCallback.17", %"class.base::RepeatingCallback.17"* %12, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %107) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  %108 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %108) #11
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @CrcGenerateTable() local_unnamed_addr #6

declare void @Crc64GenerateTable() local_unnamed_addr #6

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #6

declare dereferenceable(8) %class.scoped_refptr.2* @_ZN4base25SequencedTaskRunnerHandle3GetEv() local_unnamed_addr #6

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #6

declare void @XzUnpacker_Construct(%struct.CXzUnpacker*, %struct.ISzAlloc*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17XzState10OnReadableEj(%"class.(anonymous namespace)::XzState"*, i32) #0 align 2 {
  tail call fastcc void @_ZN12_GLOBAL__N_17XzState12ExtractChunkEv(%"class.(anonymous namespace)::XzState"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN12_GLOBAL__N_17XzState10OnWritableEj(%"class.(anonymous namespace)::XzState"*, i32) #0 align 2 {
  tail call fastcc void @_ZN12_GLOBAL__N_17XzState12ExtractChunkEv(%"class.(anonymous namespace)::XzState"* %0)
  ret void
}

; Function Attrs: inlinehint nofree nounwind ssp uwtable
define internal noalias i8* @_ZZN12_GLOBAL__N_17XzStateC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEEENUlPvmE_8__invokeESB_m(i8* nocapture readnone, i64) #7 align 2 {
  %3 = tail call noalias i8* @malloc(i64 %1) #11
  ret i8* %3
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZZN12_GLOBAL__N_17XzStateC1EN4mojo16ScopedHandleBaseINS1_22DataPipeConsumerHandleEEENS2_INS1_22DataPipeProducerHandleEEEN4base12OnceCallbackIFvbEEEENUlPvSB_E_8__invokeESB_SB_(i8* nocapture readnone, i8* nocapture) #9 align 2 {
  tail call void @free(i8* %1) #11
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #10

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE(%"class.base::RepeatingCallback.17"* dereferenceable(8), i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.17", %"class.base::RepeatingCallback.17"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to void (%"class.base::internal::BindStateBase"*, i32)**
  %8 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %7, align 8
  tail call void %8(%"class.base::internal::BindStateBase"* %5, i32 %1) #11
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #10

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_(%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::RepeatingCallback.17"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback.17"*
  %8 = load void (%"class.base::RepeatingCallback.17"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.base::RepeatingCallback.17"*, i32, %"struct.mojo::HandleSignalsState"*)** %5, align 8
  tail call void %8(%"class.base::RepeatingCallback.17"* dereferenceable(8) %7, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #11
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #12
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal7InvokerINS0_9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj(%"class.base::internal::BindStateBase"* nocapture readonly, i32) #0 align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %10 = bitcast void ()** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 %11
  %13 = bitcast i8* %12 to %"class.(anonymous namespace)::XzState"*
  %14 = and i64 %8, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %8, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.(anonymous namespace)::XzState"*, i32)**
  %22 = load void (%"class.(anonymous namespace)::XzState"*, i32)*, void (%"class.(anonymous namespace)::XzState"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %8 to void (%"class.(anonymous namespace)::XzState"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.(anonymous namespace)::XzState"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.(anonymous namespace)::XzState"* %13, i32 %1) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base8internal9BindStateIMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #12
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_17XzState12ExtractChunkEv(%"class.(anonymous namespace)::XzState"*) unnamed_addr #0 align 2 {
  %2 = alloca %struct.MojoBeginWriteDataOptions, align 8
  %3 = alloca %struct.MojoReadDataOptions, align 8
  %4 = alloca i32, align 4
  %5 = alloca i8*, align 8
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca i64, align 8
  %9 = alloca i64, align 8
  %10 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 7
  %11 = load i64, i64* %10, align 8
  %12 = icmp ult i64 %11, 8192
  br i1 %12, label %13, label %38

13:                                               ; preds = %1
  %14 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #11
  %15 = trunc i64 %11 to i32
  %16 = sub nuw nsw i32 8192, %15
  store i32 %16, i32* %4, align 4
  %17 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 9, i32 0, i64 %11
  %18 = bitcast %struct.MojoReadDataOptions* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #11
  %19 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %3, i64 0, i32 0
  %20 = getelementptr inbounds %struct.MojoReadDataOptions, %struct.MojoReadDataOptions* %3, i64 0, i32 1
  store i32 8, i32* %19, align 8
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = call i32 @MojoReadData(i32 %22, %struct.MojoReadDataOptions* nonnull %3, i8* %17, i32* nonnull %4) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #11
  switch i32 %23, label %36 [
    i32 17, label %93
    i32 0, label %24
    i32 9, label %29
  ]

24:                                               ; preds = %13
  %25 = load i32, i32* %4, align 4
  %26 = zext i32 %25 to i64
  %27 = load i64, i64* %10, align 8
  %28 = add i64 %27, %26
  store i64 %28, i64* %10, align 8
  br label %37

29:                                               ; preds = %13
  %30 = load i64, i64* %10, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %37

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 8
  %34 = load i8, i8* %33, align 8, !range !35
  %35 = icmp ne i8 %34, 0
  call fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"* %0, i1 zeroext %35)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %94

36:                                               ; preds = %13
  call fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"* %0, i1 zeroext false)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %94

37:                                               ; preds = %24, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %38

38:                                               ; preds = %37, %1
  %39 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #11
  store i8* null, i8** %5, align 8
  %40 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40) #11
  store i32 0, i32* %6, align 4
  %41 = bitcast %struct.MojoBeginWriteDataOptions* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #11
  %42 = getelementptr inbounds %struct.MojoBeginWriteDataOptions, %struct.MojoBeginWriteDataOptions* %2, i64 0, i32 0
  %43 = getelementptr inbounds %struct.MojoBeginWriteDataOptions, %struct.MojoBeginWriteDataOptions* %2, i64 0, i32 1
  store i32 8, i32* %42, align 8
  store i32 0, i32* %43, align 4
  %44 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = call i32 @MojoBeginWriteData(i32 %45, %struct.MojoBeginWriteDataOptions* nonnull %2, i8** nonnull %5, i32* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #11
  switch i32 %46, label %47 [
    i32 17, label %92
    i32 0, label %48
  ]

47:                                               ; preds = %38
  call fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"* %0, i1 zeroext false)
  br label %92

48:                                               ; preds = %38
  %49 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49) #11
  store i32 -1431655766, i32* %7, align 4
  %50 = bitcast i64* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #11
  %51 = load i64, i64* %10, align 8
  store i64 %51, i64* %8, align 8
  %52 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #11
  %53 = load i32, i32* %6, align 4
  %54 = zext i32 %53 to i64
  store i64 %54, i64* %9, align 8
  %55 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 5
  %56 = load i8*, i8** %5, align 8
  %57 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 9, i32 0, i64 0
  %58 = call i32 @XzUnpacker_Code(%struct.CXzUnpacker* %55, i8* %56, i64* nonnull %9, i8* %57, i64* nonnull %8, i32 0, i32* nonnull %7) #11
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %48
  %61 = load i32, i32* %44, align 4
  %62 = call i32 @MojoEndWriteData(i32 %61, i32 0, %struct.MojoEndWriteDataOptions* null) #11
  call fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"* %0, i1 zeroext false)
  br label %91

63:                                               ; preds = %48
  %64 = load i64, i64* %8, align 8
  %65 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 9, i32 0, i64 %64
  %66 = load i64, i64* %10, align 8
  %67 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 9, i32 0, i64 %66
  %68 = ptrtoint i8* %67 to i64
  %69 = ptrtoint i8* %65 to i64
  %70 = sub i64 %68, %69
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %73, label %72

72:                                               ; preds = %63
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %57, i8* align 1 %65, i64 %70, i1 false) #11
  br label %73

73:                                               ; preds = %63, %72
  %74 = sub i64 %66, %64
  store i64 %74, i64* %10, align 8
  %75 = load i64, i64* %9, align 8
  %76 = trunc i64 %75 to i32
  %77 = load i32, i32* %44, align 4
  %78 = call i32 @MojoEndWriteData(i32 %77, i32 %76, %struct.MojoEndWriteDataOptions* null) #11
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80

80:                                               ; preds = %73
  call fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"* %0, i1 zeroext false)
  br label %91

81:                                               ; preds = %73
  %82 = load i32, i32* %7, align 4
  %83 = icmp eq i32 %82, 1
  br i1 %83, label %88, label %84

84:                                               ; preds = %81
  %85 = call i32 @XzUnpacker_IsStreamWasFinished(%struct.CXzUnpacker* %55) #11
  %86 = icmp ne i32 %85, 0
  %87 = zext i1 %86 to i8
  br label %88

88:                                               ; preds = %84, %81
  %89 = phi i8 [ 1, %81 ], [ %87, %84 ]
  %90 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 8
  store i8 %89, i8* %90, align 8
  br label %91

91:                                               ; preds = %88, %80, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #11
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49) #11
  br label %92

92:                                               ; preds = %38, %91, %47
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #11
  br label %94

93:                                               ; preds = %13
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #11
  br label %94

94:                                               ; preds = %93, %36, %32, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN12_GLOBAL__N_17XzState24RunCallbackAndDeleteThisEb(%"class.(anonymous namespace)::XzState"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::OnceCallback", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #11
  %6 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %7 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = icmp eq %"class.(anonymous namespace)::XzState"* %0, null
  br i1 %12, label %31, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 5
  tail call void @XzUnpacker_Free(%struct.CXzUnpacker* %14) #11
  %15 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %15) #11
  %16 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 3
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %16) #11
  %17 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 2
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %17) #11
  %18 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %13
  %22 = tail call i32 @MojoClose(i32 %19) #11
  br label %23

23:                                               ; preds = %21, %13
  %24 = getelementptr inbounds %"class.(anonymous namespace)::XzState", %"class.(anonymous namespace)::XzState"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call i32 @MojoClose(i32 %25) #11
  br label %29

29:                                               ; preds = %23, %27
  %30 = bitcast %"class.(anonymous namespace)::XzState"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %29, %2
  %32 = bitcast %"class.base::OnceCallback"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #11
  %33 = bitcast %"class.base::OnceCallback"* %3 to i64*
  store i64 %10, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %6, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0
  %35 = inttoptr i64 %10 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*, i1)**
  %38 = load void (%"class.base::internal::BindStateBase"*, i1)*, void (%"class.base::internal::BindStateBase"*, i1)** %37, align 8
  tail call void %38(%"class.base::internal::BindStateBase"* %35, i1 zeroext %1) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #11
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #11
  ret void
}

declare i32 @XzUnpacker_Code(%struct.CXzUnpacker*, i8*, i64*, i8*, i64*, i32, i32*) local_unnamed_addr #6

declare i32 @XzUnpacker_IsStreamWasFinished(%struct.CXzUnpacker*) local_unnamed_addr #6

declare i32 @MojoReadData(i32, %struct.MojoReadDataOptions*, i8*, i32*) local_unnamed_addr #6

declare void @XzUnpacker_Free(%struct.CXzUnpacker*) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #10

declare i32 @MojoBeginWriteData(i32, %struct.MojoBeginWriteDataOptions*, i8**, i32*) local_unnamed_addr #6

declare i32 @MojoEndWriteData(i32, i32, %struct.MojoEndWriteDataOptions*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

declare i32 @MojoClose(i32) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!8 = distinct !{!8, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!11 = distinct !{!11, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv: argument 0"}
!14 = distinct !{!14, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeProducerHandleEE7releaseEv"}
!15 = !{!16, !18}
!16 = distinct !{!16, !17, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!17 = distinct !{!17, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!18 = distinct !{!18, !19, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_17XzStateEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!19 = distinct !{!19, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_17XzStateEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!20 = !{!21, !23}
!21 = distinct !{!21, !22, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!22 = distinct !{!22, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_"}
!23 = distinct !{!23, !24, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!24 = distinct !{!24, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!25 = !{!26, !28}
!26 = distinct !{!26, !27, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!27 = distinct !{!27, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEMN12_GLOBAL__N_17XzStateEFvjEJNS0_17UnretainedWrapperIS4_EEEEEDcOT0_DpOT1_"}
!28 = distinct !{!28, !29, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_17XzStateEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_: argument 0"}
!29 = distinct !{!29, !"_ZN4base13BindRepeatingIMN12_GLOBAL__N_17XzStateEFvjEJNS_8internal17UnretainedWrapperIS2_EEEEENS_17RepeatingCallbackINS5_14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSA_DpOSB_"}
!30 = !{!31, !33}
!31 = distinct !{!31, !32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_"}
!33 = distinct !{!33, !34, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!34 = distinct !{!34, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!35 = !{i8 0, i8 2}
