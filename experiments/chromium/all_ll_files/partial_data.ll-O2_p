; ModuleID = '../../net/http/partial_data.cc'
source_filename = "../../net/http/partial_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::PartialData" = type { i64, i64, i64, i32, i64, %"class.net::HttpByteRange", %"class.net::HttpRequestHeaders", i8, i8, i8, i8, i8, i8, %"class.base::OnceCallback", %"class.base::WeakPtrFactory" }
%"class.net::HttpByteRange" = type <{ i64, i64, i64, i8, [7 x i8] }>
%"class.net::HttpRequestHeaders" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.net::HttpRequestHeaders::HeaderKeyValuePair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.net::HttpRequestHeaders::HeaderKeyValuePair"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.8", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.8" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.9" }
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl.12" }
%"struct.std::__1::__cxx_atomic_impl.12" = type { %"struct.std::__1::__cxx_atomic_base_impl.13" }
%"struct.std::__1::__cxx_atomic_base_impl.13" = type { i8 }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.net::HttpByteRange"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.disk_cache::Entry" = type { i32 (...)** }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.21 }
%class.scoped_refptr.21 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.net::HttpResponseHeaders" = type { %"class.base::RefCountedThreadSafe.22", %"class.std::__1::vector.23", %"class.std::__1::basic_string", i32, %"class.net::HttpVersion" }
%"class.base::RefCountedThreadSafe.22" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"struct.net::HttpResponseHeaders::ParsedHeader"*, %"class.std::__1::__compressed_pair.25" }
%"struct.net::HttpResponseHeaders::ParsedHeader" = type opaque
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.net::HttpResponseHeaders::ParsedHeader"* }
%"class.net::HttpVersion" = type { i32 }
%"class.net::IOBuffer" = type opaque
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN4base8internal7InvokerINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi = comdat any

$_ZN4base8internal9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE = comdat any

@_ZN3net18HttpRequestHeaders6kRangeE = external constant [0 x i8], align 1
@.str = private unnamed_addr constant [45 x i8] c"HTTP/1.1 416 Requested Range Not Satisfiable\00", align 1
@_ZN3net12_GLOBAL__N_112kRangeHeaderE = internal constant [14 x i8] c"Content-Range\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"bytes 0-0/%ld\00", align 1
@_ZN3net12_GLOBAL__N_113kLengthHeaderE = internal constant [15 x i8] c"Content-Length\00", align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"0\00", align 1
@.str.3 = private unnamed_addr constant [16 x i8] c"HTTP/1.1 200 OK\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.str.7 = private unnamed_addr constant [29 x i8] c"../../base/memory/weak_ptr.h\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"ref_.IsValid()\00", align 1

@_ZN3net11PartialDataC1Ev = hidden unnamed_addr alias void (%"class.net::PartialData"*), void (%"class.net::PartialData"*)* @_ZN3net11PartialDataC2Ev
@_ZN3net11PartialDataD1Ev = hidden unnamed_addr alias void (%"class.net::PartialData"*), void (%"class.net::PartialData"*)* @_ZN3net11PartialDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialDataC2Ev(%"class.net::PartialData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %4 = bitcast %"class.net::PartialData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 28, i1 false)
  tail call void @_ZN3net13HttpByteRangeC1Ev(%"class.net::HttpByteRange"* %3) #10
  %5 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 6
  tail call void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"* %5) #10
  %6 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 7
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 8
  store i8 0, i8* %7, align 1
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 9
  store i8 0, i8* %8, align 2
  %9 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  store i8 1, i8* %9, align 1
  %10 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 12
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 13, i32 0, i32 0, i32 0
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %12, align 8
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 14, i32 0
  %14 = ptrtoint %"class.net::PartialData"* %0 to i64
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"* %13, i64 %14) #10
  ret void
}

declare void @_ZN3net13HttpByteRangeC1Ev(%"class.net::HttpByteRange"*) unnamed_addr #1

declare void @_ZN3net18HttpRequestHeadersC1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialDataD2Ev(%"class.net::PartialData"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 14, i32 0
  tail call void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"* %2) #10
  %3 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 13, i32 0
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %3) #10
  %4 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 6
  tail call void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"* %4) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal18WeakPtrFactoryBaseD2Ev(%"class.base::internal::WeakPtrFactoryBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net18HttpRequestHeadersD1Ev(%"class.net::HttpRequestHeaders"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11PartialData4InitERKNS_18HttpRequestHeadersE(%"class.net::PartialData"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::vector.14", align 8
  %6 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #10
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 24, i1 false) #10
  %8 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0), i8** %9, align 8
  %10 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %11 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0)) #10
  store i64 %11, i64* %10, align 8
  %12 = call zeroext i1 @_ZNK3net18HttpRequestHeaders9GetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpRequestHeaders"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.std::__1::basic_string"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 7
  br i1 %12, label %15, label %14

14:                                               ; preds = %2
  store i8 0, i8* %13, align 8
  br label %49

15:                                               ; preds = %2
  store i8 1, i8* %13, align 8
  %16 = bitcast %"class.std::__1::vector.14"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::vector.14", %"class.std::__1::vector.14"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #10
  %19 = call zeroext i1 @_ZN3net8HttpUtil16ParseRangeHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS_13HttpByteRangeENS5_ISB_EEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %3, %"class.std::__1::vector.14"* nonnull %5) #10
  br i1 %19, label %20, label %37

20:                                               ; preds = %15
  %21 = bitcast %"class.net::HttpByteRange"** %18 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.14"* %5 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = icmp eq i64 %25, 32
  %27 = inttoptr i64 %24 to %"class.net::HttpByteRange"*
  br i1 %26, label %28, label %40

28:                                               ; preds = %20
  %29 = inttoptr i64 %24 to i8*
  %30 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %31 = bitcast %"class.net::HttpByteRange"* %30 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %29, i64 25, i1 false)
  %32 = call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %30) #10
  br i1 %32, label %33, label %37

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %30, i64 0, i32 0
  %35 = load i64, i64* %34, align 8
  %36 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 %35, i64* %36, align 8
  br label %37

37:                                               ; preds = %33, %15, %28
  %38 = phi i1 [ false, %28 ], [ false, %15 ], [ true, %33 ]
  %39 = load %"class.net::HttpByteRange"*, %"class.net::HttpByteRange"** %17, align 8
  br label %40

40:                                               ; preds = %37, %20
  %41 = phi %"class.net::HttpByteRange"* [ %39, %37 ], [ %27, %20 ]
  %42 = phi i1 [ %38, %37 ], [ false, %20 ]
  %43 = icmp eq %"class.net::HttpByteRange"* %41, null
  br i1 %43, label %48, label %44

44:                                               ; preds = %40
  %45 = ptrtoint %"class.net::HttpByteRange"* %41 to i64
  %46 = bitcast %"class.net::HttpByteRange"** %18 to i64*
  store i64 %45, i64* %46, align 8
  %47 = bitcast %"class.net::HttpByteRange"* %41 to i8*
  call void @_ZdlPv(i8* %47) #11
  br label %48

48:                                               ; preds = %40, %44
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #10
  br label %49

49:                                               ; preds = %48, %14
  %50 = phi i1 [ false, %14 ], [ %42, %48 ]
  %51 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %57

55:                                               ; preds = %49
  %56 = load i8*, i8** %7, align 8
  call void @_ZdlPv(i8* %56) #11
  br label %57

57:                                               ; preds = %49, %55
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #10
  ret i1 %50
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZNK3net18HttpRequestHeaders9GetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS3_12basic_stringIcS5_NS3_9allocatorIcEEEE(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare zeroext i1 @_ZN3net8HttpUtil16ParseRangeHeaderERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPNS1_6vectorINS_13HttpByteRangeENS5_ISB_EEEE(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::vector.14"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialData10SetHeadersERKNS_18HttpRequestHeadersE(%"class.net::PartialData"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 6
  %4 = tail call dereferenceable(24) %"class.net::HttpRequestHeaders"* @_ZN3net18HttpRequestHeadersaSERKS0_(%"class.net::HttpRequestHeaders"* %3, %"class.net::HttpRequestHeaders"* dereferenceable(24) %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net11PartialData14RestoreHeadersEPNS_18HttpRequestHeadersE(%"class.net::PartialData"*, %"class.net::HttpRequestHeaders"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::BasicStringPiece", align 8
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.net::HttpByteRange", align 8
  %7 = alloca %"class.base::BasicStringPiece", align 8
  %8 = alloca %"class.base::BasicStringPiece", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.net::HttpByteRange", align 8
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %12 = tail call zeroext i1 @_ZNK3net13HttpByteRange17IsSuffixByteRangeEv(%"class.net::HttpByteRange"* %11) #10
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 2
  %14 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  %15 = select i1 %12, i64* %13, i64* %14
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 6
  %18 = tail call dereferenceable(24) %"class.net::HttpRequestHeaders"* @_ZN3net18HttpRequestHeadersaSERKS0_(%"class.net::HttpRequestHeaders"* %1, %"class.net::HttpRequestHeaders"* dereferenceable(24) %17) #10
  %19 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %20 = load i8, i8* %19, align 4, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %80

22:                                               ; preds = %2
  %23 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %11) #10
  br i1 %23, label %24, label %80

24:                                               ; preds = %22
  %25 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp slt i64 %26, 0
  br i1 %27, label %28, label %54

28:                                               ; preds = %24
  %29 = bitcast %"class.base::BasicStringPiece"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0), i8** %30, align 8
  %31 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %3, i64 0, i32 1
  %32 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0)) #10
  store i64 %32, i64* %31, align 8
  %33 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #10
  %34 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #10
  %35 = bitcast %"class.net::HttpByteRange"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %35) #10
  call void @_ZN3net13HttpByteRange6SuffixEl(%"class.net::HttpByteRange"* nonnull sret %6, i64 %16) #10
  call void @_ZNK3net13HttpByteRange14GetHeaderValueEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.net::HttpByteRange"* nonnull %6) #10
  %36 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %40, i8* %42, i8* %34
  store i8* %43, i8** %36, align 8
  %44 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %39 to i64
  %48 = select i1 %40, i64 %46, i64 %47
  store i64 %48, i64* %44, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %3, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4) #10
  %49 = load i8, i8* %38, align 1
  %50 = icmp slt i8 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %28
  %52 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %52) #11
  br label %53

53:                                               ; preds = %28, %51
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %35) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #10
  br label %80

54:                                               ; preds = %24
  %55 = bitcast %"class.base::BasicStringPiece"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #10
  %56 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %7, i64 0, i32 1
  %58 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0)) #10
  store i64 %58, i64* %57, align 8
  %59 = bitcast %"class.base::BasicStringPiece"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #10
  %60 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %60) #10
  %61 = bitcast %"class.net::HttpByteRange"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %61) #10
  call void @_ZN3net13HttpByteRange7BoundedEll(%"class.net::HttpByteRange"* nonnull sret %10, i64 %26, i64 %16) #10
  call void @_ZNK3net13HttpByteRange14GetHeaderValueEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.net::HttpByteRange"* nonnull %10) #10
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 0
  %63 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = select i1 %66, i8* %68, i8* %60
  store i8* %69, i8** %62, align 8
  %70 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %8, i64 0, i32 1
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = zext i8 %65 to i64
  %74 = select i1 %66, i64 %72, i64 %73
  store i64 %74, i64* %70, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %1, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %7, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %8) #10
  %75 = load i8, i8* %64, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %54
  %78 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %78) #11
  br label %79

79:                                               ; preds = %54, %77
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %61) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %60) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #10
  br label %80

80:                                               ; preds = %53, %79, %22, %2
  ret void
}

declare zeroext i1 @_ZNK3net13HttpByteRange17IsSuffixByteRangeEv(%"class.net::HttpByteRange"*) local_unnamed_addr #1

declare void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"*, %"class.base::BasicStringPiece"* dereferenceable(16), %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net13HttpByteRange6SuffixEl(%"class.net::HttpByteRange"* sret, i64) local_unnamed_addr #1

declare void @_ZNK3net13HttpByteRange14GetHeaderValueEv(%"class.std::__1::basic_string"* sret, %"class.net::HttpByteRange"*) local_unnamed_addr #1

declare void @_ZN3net13HttpByteRange7BoundedEll(%"class.net::HttpByteRange"* sret, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11PartialData19ShouldValidateCacheEPN10disk_cache5EntryEN4base12OnceCallbackIFviEEE(%"class.net::PartialData"*, %"class.disk_cache::Entry"*, %"class.base::OnceCallback"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::internal::WeakReference", align 8
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::WeakPtr", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %9 = tail call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %8) #10
  br i1 %9, label %10, label %21

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  %16 = icmp slt i64 %15, 2147483646
  %17 = select i1 %16, i64 %15, i64 2147483646
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %97, label %21

21:                                               ; preds = %3, %10
  %22 = phi i32 [ %19, %10 ], [ 2147483647, %3 ]
  %23 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  %24 = load i8, i8* %23, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %73, label %26

26:                                               ; preds = %21
  %27 = tail call i8* @_Znwm(i64 8) #11
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #10
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::WeakPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #10
  %32 = bitcast %"class.base::internal::WeakReference"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #10, !noalias !3
  %33 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 14, i32 0, i32 0
  call void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* nonnull sret %4, %"class.base::internal::WeakReferenceOwner"* %33) #10, !noalias !3
  %34 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 14, i32 0, i32 1
  %35 = load i64, i64* %34, align 8, !noalias !3
  %36 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0
  call void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"* nonnull %36, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %4, i64 %35) #10
  call void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #10, !noalias !3
  %37 = call i8* @_Znwm(i64 72) #11, !noalias !6
  %38 = bitcast i8* %37 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"* nonnull %38, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE, i1 (%"class.base::internal::BindStateBase"*, i32)* nonnull @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE) #10, !noalias !6
  %39 = getelementptr inbounds i8, i8* %37, i64 32
  %40 = bitcast i8* %39 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.net::PartialData"*, i64*, i32)* @_ZN3net11PartialData26GetAvailableRangeCompletedEPli to i64), i64 0>, <2 x i64>* %40, align 8, !noalias !6
  %41 = getelementptr inbounds i8, i8* %37, i64 48
  %42 = bitcast i8* %41 to %"class.base::internal::WeakReference"*
  %43 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"* %42, %"class.base::internal::WeakReference"* nonnull dereferenceable(8) %43) #10, !noalias !6
  %44 = getelementptr inbounds i8, i8* %37, i64 56
  %45 = bitcast i8* %44 to i64*
  %46 = getelementptr inbounds %"class.base::WeakPtr", %"class.base::WeakPtr"* %6, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8, !noalias !6
  store i64 %47, i64* %45, align 8, !noalias !6
  %48 = getelementptr inbounds i8, i8* %37, i64 64
  %49 = bitcast i8* %48 to i64*
  store i64 %28, i64* %49, align 8, !noalias !6
  call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* nonnull %36) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #10
  %50 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %51 = load i64, i64* %50, align 8
  %52 = bitcast i8* %27 to i64*
  %53 = ptrtoint i8* %37 to i64
  %54 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %55 = bitcast %"class.disk_cache::Entry"* %1 to i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)***
  %56 = load i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)*** %55, align 8
  %57 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)** %56, i64 10
  %58 = load i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, i32, i64*, %"class.base::OnceCallback"*)** %57, align 8
  %59 = call i32 %58(%"class.disk_cache::Entry"* %1, i64 %51, i32 %22, i64* nonnull %52, %"class.base::OnceCallback"* nonnull %7) #10
  %60 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #10
  %62 = load i32, i32* %60, align 8
  %63 = icmp eq i32 %62, -1
  br i1 %63, label %64, label %69

64:                                               ; preds = %26
  %65 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 13, i32 0
  %66 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %2, i64 0, i32 0
  %67 = call dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"* %65, %"class.base::internal::CallbackBase"* dereferenceable(8) %66) #10
  %68 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %68) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %97

69:                                               ; preds = %26
  %70 = load i64, i64* %52, align 8
  %71 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 %70, i64* %71, align 8
  call void @_ZdlPv(i8* nonnull %27) #11
  %72 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %72) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #10
  br label %92

73:                                               ; preds = %21
  %74 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %92

77:                                               ; preds = %73
  %78 = tail call zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"* %8) #10
  br i1 %78, label %79, label %86

79:                                               ; preds = %77
  %80 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %8, i64 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %83 = load i64, i64* %82, align 8
  %84 = icmp slt i64 %81, %83
  %85 = select i1 %84, i32 %22, i32 0
  br label %86

86:                                               ; preds = %79, %77
  %87 = phi i32 [ %22, %77 ], [ %85, %79 ]
  %88 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  store i32 %87, i32* %88, align 8
  %89 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %90 = load i64, i64* %89, align 8
  %91 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 %90, i64* %91, align 8
  br label %92

92:                                               ; preds = %69, %73, %86
  %93 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  %94 = load i32, i32* %93, align 8
  %95 = icmp slt i32 %94, 0
  %96 = select i1 %95, i32 %94, i32 1
  br label %97

97:                                               ; preds = %92, %64, %10
  %98 = phi i32 [ 0, %10 ], [ -1, %64 ], [ %96, %92 ]
  ret i32 %98
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11PartialData15GetNextRangeLenEv(%"class.net::PartialData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %3 = tail call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %2) #10
  br i1 %3, label %4, label %14

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub nsw i64 %6, %8
  %10 = icmp slt i64 %9, 2147483646
  %11 = select i1 %10, i64 %9, i64 2147483646
  %12 = trunc i64 %11 to i32
  %13 = add i32 %12, 1
  br label %14

14:                                               ; preds = %4, %1
  %15 = phi i32 [ 2147483647, %1 ], [ %13, %4 ]
  ret i32 %15
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialData26GetAvailableRangeCompletedEPli(%"class.net::PartialData"* nocapture, i64*, i32) #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = load i64, i64* %1, align 8
  %6 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 %5, i64* %6, align 8
  %7 = icmp eq i64* %1, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %3
  %9 = bitcast i64* %1 to i8*
  tail call void @_ZdlPv(i8* %9) #11
  br label %10

10:                                               ; preds = %8, %3
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  store i32 %2, i32* %11, align 8
  %12 = icmp sgt i32 %2, -1
  %13 = select i1 %12, i32 1, i32 %2
  %14 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 13
  %15 = bitcast %"class.base::OnceCallback"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #10
  %16 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %14, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.base::OnceCallback"* %14 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %18, i64* %19, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  %21 = inttoptr i64 %18 to %"class.base::internal::BindStateBase"*
  %22 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %21, i64 0, i32 1
  %23 = bitcast void ()** %22 to void (%"class.base::internal::BindStateBase"*, i32)**
  %24 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %23, align 8
  tail call void %24(%"class.base::internal::BindStateBase"* %21, i32 %13) #10
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %20) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

declare zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialData22PrepareCacheValidationEPN10disk_cache5EntryEPNS_18HttpRequestHeadersE(%"class.net::PartialData"*, %"class.disk_cache::Entry"* nocapture readnone, %"class.net::HttpRequestHeaders"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::BasicStringPiece", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.net::HttpByteRange", align 8
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %9 = tail call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %8) #10
  br i1 %9, label %10, label %20

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = sub nsw i64 %12, %14
  %16 = icmp slt i64 %15, 2147483646
  %17 = select i1 %16, i64 %15, i64 2147483646
  %18 = trunc i64 %17 to i32
  %19 = add i32 %18, 1
  br label %20

20:                                               ; preds = %3, %10
  %21 = phi i32 [ 2147483647, %3 ], [ %19, %10 ]
  %22 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 8
  store i8 0, i8* %22, align 1
  %23 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 6
  %24 = tail call dereferenceable(24) %"class.net::HttpRequestHeaders"* @_ZN3net18HttpRequestHeadersaSERKS0_(%"class.net::HttpRequestHeaders"* %2, %"class.net::HttpRequestHeaders"* dereferenceable(24) %23) #10
  %25 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  %30 = load i64, i64* %29, align 8
  br label %42

31:                                               ; preds = %20
  %32 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 9
  store i8 1, i8* %32, align 2
  %33 = tail call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %8) #10
  br i1 %33, label %34, label %39

34:                                               ; preds = %31
  %35 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %36 = load i64, i64* %35, align 8
  %37 = sext i32 %21 to i64
  %38 = add nsw i64 %36, %37
  br label %39

39:                                               ; preds = %31, %34
  %40 = phi i64 [ %38, %34 ], [ 0, %31 ]
  %41 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 %40, i64* %41, align 8
  br label %42

42:                                               ; preds = %28, %39
  %43 = phi i64 [ %30, %28 ], [ %40, %39 ]
  %44 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %45 = load i64, i64* %44, align 8
  %46 = icmp eq i64 %45, %43
  br i1 %46, label %47, label %56

47:                                               ; preds = %42
  store i8 1, i8* %22, align 1
  %48 = load i32, i32* %25, align 8
  %49 = sext i32 %48 to i64
  %50 = add i64 %43, -1
  %51 = add i64 %50, %49
  %52 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 1
  store i64 %51, i64* %52, align 8
  %53 = icmp eq i32 %21, %48
  br i1 %53, label %54, label %59

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 9
  store i8 1, i8* %55, align 2
  br label %59

56:                                               ; preds = %42
  %57 = add nsw i64 %43, -1
  %58 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 1
  store i64 %57, i64* %58, align 8
  br label %59

59:                                               ; preds = %47, %54, %56
  %60 = phi i64 [ %51, %47 ], [ %51, %54 ], [ %57, %56 ]
  %61 = bitcast %"class.base::BasicStringPiece"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #10
  %62 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0), i8** %62, align 8
  %63 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %4, i64 0, i32 1
  %64 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3net18HttpRequestHeaders6kRangeE, i64 0, i64 0)) #10
  store i64 %64, i64* %63, align 8
  %65 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #10
  %66 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #10
  %67 = bitcast %"class.net::HttpByteRange"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %67) #10
  call void @_ZN3net13HttpByteRange7BoundedEll(%"class.net::HttpByteRange"* nonnull sret %7, i64 %45, i64 %60) #10
  call void @_ZNK3net13HttpByteRange14GetHeaderValueEv(%"class.std::__1::basic_string"* nonnull sret %6, %"class.net::HttpByteRange"* nonnull %7) #10
  %68 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %69 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = select i1 %72, i8* %74, i8* %66
  store i8* %75, i8** %68, align 8
  %76 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %71 to i64
  %80 = select i1 %72, i64 %78, i64 %79
  store i64 %80, i64* %76, align 8
  call void @_ZN3net18HttpRequestHeaders9SetHeaderERKN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES8_(%"class.net::HttpRequestHeaders"* %2, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %4, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5) #10
  %81 = load i8, i8* %70, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %59
  %84 = load i8*, i8** %73, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %59, %83
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %67) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #10
  ret void
}

declare zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net11PartialData20IsCurrentRangeCachedEv(%"class.net::PartialData"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net11PartialData11IsLastRangeEv(%"class.net::PartialData"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11PartialData23UpdateFromStoredHeadersEPKNS_19HttpResponseHeadersEPN10disk_cache5EntryEbb(%"class.net::PartialData"*, %"class.net::HttpResponseHeaders"*, %"class.disk_cache::Entry"*, i1 zeroext, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  store i64 0, i64* %6, align 8
  br i1 %3, label %7, label %31

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %9 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %8) #10
  br i1 %9, label %59, label %10

10:                                               ; preds = %7
  %11 = tail call zeroext i1 @_ZNK3net19HttpResponseHeaders19HasStrongValidatorsEv(%"class.net::HttpResponseHeaders"* %1) #10
  br i1 %11, label %12, label %59

12:                                               ; preds = %10
  %13 = tail call i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"* %1) #10
  %14 = icmp slt i64 %13, 1
  br i1 %14, label %59, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  store i8 1, i8* %16, align 4
  %17 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 12
  store i8 1, i8* %17, align 1
  %18 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  store i8 0, i8* %18, align 1
  %19 = bitcast %"class.disk_cache::Entry"* %2 to i32 (%"class.disk_cache::Entry"*, i32)***
  %20 = load i32 (%"class.disk_cache::Entry"*, i32)**, i32 (%"class.disk_cache::Entry"*, i32)*** %19, align 8
  %21 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i32)*, i32 (%"class.disk_cache::Entry"*, i32)** %20, i64 5
  %22 = load i32 (%"class.disk_cache::Entry"*, i32)*, i32 (%"class.disk_cache::Entry"*, i32)** %21, align 8
  %23 = tail call i32 %22(%"class.disk_cache::Entry"* %2, i32 1) #10
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %8, i64 0, i32 0
  store i64 %24, i64* %25, align 8
  store i64 %13, i64* %6, align 8
  %26 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 %24, i64* %26, align 8
  %27 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  store i32 %23, i32* %27, align 8
  %28 = add nsw i32 %23, 1
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 %29, i64* %30, align 8
  br label %59

31:                                               ; preds = %5
  %32 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %1, i64 0, i32 3
  %33 = load i32, i32* %32, align 8
  %34 = icmp eq i32 %33, 206
  %35 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  %36 = zext i1 %34 to i8
  store i8 %36, i8* %35, align 1
  %37 = or i1 %34, %4
  br i1 %37, label %38, label %41

38:                                               ; preds = %31
  %39 = tail call i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"* %1) #10
  store i64 %39, i64* %6, align 8
  %40 = icmp slt i64 %39, 1
  br i1 %40, label %59, label %48

41:                                               ; preds = %31
  %42 = bitcast %"class.disk_cache::Entry"* %2 to i32 (%"class.disk_cache::Entry"*, i32)***
  %43 = load i32 (%"class.disk_cache::Entry"*, i32)**, i32 (%"class.disk_cache::Entry"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i32)*, i32 (%"class.disk_cache::Entry"*, i32)** %43, i64 5
  %45 = load i32 (%"class.disk_cache::Entry"*, i32)*, i32 (%"class.disk_cache::Entry"*, i32)** %44, align 8
  %46 = tail call i32 %45(%"class.disk_cache::Entry"* %2, i32 1) #10
  %47 = sext i32 %46 to i64
  store i64 %47, i64* %6, align 8
  br label %48

48:                                               ; preds = %38, %41
  %49 = load i8, i8* %35, align 1, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %59, label %51

51:                                               ; preds = %48
  %52 = tail call zeroext i1 @_ZNK3net19HttpResponseHeaders19HasStrongValidatorsEv(%"class.net::HttpResponseHeaders"* %1) #10
  br i1 %52, label %53, label %59

53:                                               ; preds = %51
  %54 = bitcast %"class.disk_cache::Entry"* %2 to i1 (%"class.disk_cache::Entry"*)***
  %55 = load i1 (%"class.disk_cache::Entry"*)**, i1 (%"class.disk_cache::Entry"*)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.disk_cache::Entry"*)*, i1 (%"class.disk_cache::Entry"*)** %55, i64 11
  %57 = load i1 (%"class.disk_cache::Entry"*)*, i1 (%"class.disk_cache::Entry"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.disk_cache::Entry"* %2) #10
  br label %59

59:                                               ; preds = %48, %51, %38, %15, %12, %10, %7, %53
  %60 = phi i1 [ %58, %53 ], [ false, %7 ], [ false, %10 ], [ true, %15 ], [ false, %12 ], [ false, %38 ], [ false, %51 ], [ true, %48 ]
  ret i1 %60
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders19HasStrongValidatorsEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #1

declare i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net11PartialData23SetRangeToStartDownloadEv(%"class.net::PartialData"* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 0, i64* %2, align 8
  %3 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 2
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 12
  store i8 0, i8* %4, align 1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11PartialData18IsRequestedRangeOKEv(%"class.net::PartialData"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %3 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %2) #10
  br i1 %3, label %4, label %16

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  %7 = tail call zeroext i1 @_ZN3net13HttpByteRange13ComputeBoundsEl(%"class.net::HttpByteRange"* %2, i64 %6) #10
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %10 = load i8, i8* %9, align 4, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %28

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %14 = load i64, i64* %13, align 8
  %15 = icmp slt i64 %14, 0
  br i1 %15, label %22, label %28

16:                                               ; preds = %1
  %17 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 0, i64* %17, align 8
  %18 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %19 = load i64, i64* %18, align 8
  %20 = add nsw i64 %19, -1
  %21 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  store i64 %20, i64* %21, align 8
  br label %28

22:                                               ; preds = %12
  %23 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %2, i64 0, i32 0
  %24 = load i64, i64* %23, align 8
  store i64 %24, i64* %13, align 8
  %25 = icmp sgt i64 %24, -1
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 0, i64* %27, align 8
  br label %28

28:                                               ; preds = %16, %12, %22, %26, %8, %4
  %29 = phi i1 [ false, %4 ], [ true, %8 ], [ false, %26 ], [ true, %22 ], [ true, %12 ], [ true, %16 ]
  ret i1 %29
}

declare zeroext i1 @_ZN3net13HttpByteRange13ComputeBoundsEl(%"class.net::HttpByteRange"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net11PartialData17ResponseHeadersOKEPKNS_19HttpResponseHeadersE(%"class.net::PartialData"*, %"class.net::HttpResponseHeaders"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.net::HttpResponseHeaders", %"class.net::HttpResponseHeaders"* %1, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 304
  br i1 %8, label %9, label %20

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %11 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %10) #10
  br i1 %11, label %12, label %89

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %89

16:                                               ; preds = %12
  %17 = tail call zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"* %10) #10
  br i1 %17, label %18, label %89

18:                                               ; preds = %16
  %19 = tail call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %10) #10
  br label %89

20:                                               ; preds = %2
  %21 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  store i64 -6148914691236517206, i64* %3, align 8
  %22 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #10
  store i64 -6148914691236517206, i64* %4, align 8
  %23 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  store i64 -6148914691236517206, i64* %5, align 8
  %24 = call zeroext i1 @_ZNK3net19HttpResponseHeaders21GetContentRangeFor206EPlS1_S1_(%"class.net::HttpResponseHeaders"* %1, i64* nonnull %3, i64* nonnull %4, i64* nonnull %5) #10
  %25 = xor i1 %24, true
  %26 = load i64, i64* %5, align 8
  %27 = icmp slt i64 %26, 1
  %28 = or i1 %27, %25
  br i1 %28, label %87, label %29

29:                                               ; preds = %20
  %30 = call i64 @_ZNK3net19HttpResponseHeaders16GetContentLengthEv(%"class.net::HttpResponseHeaders"* %1) #10
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %38

32:                                               ; preds = %29
  %33 = load i64, i64* %4, align 8
  %34 = load i64, i64* %3, align 8
  %35 = add i64 %33, 1
  %36 = sub i64 %35, %34
  %37 = icmp eq i64 %30, %36
  br i1 %37, label %38, label %87

38:                                               ; preds = %32, %29
  %39 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  %42 = load i64, i64* %5, align 8
  br i1 %41, label %43, label %55

43:                                               ; preds = %38
  store i64 %42, i64* %39, align 8
  %44 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %45 = call zeroext i1 @_ZNK3net13HttpByteRange20HasFirstBytePositionEv(%"class.net::HttpByteRange"* %44) #10
  br i1 %45, label %50, label %46

46:                                               ; preds = %43
  %47 = load i64, i64* %3, align 8
  %48 = getelementptr inbounds %"class.net::HttpByteRange", %"class.net::HttpByteRange"* %44, i64 0, i32 0
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  store i64 %47, i64* %49, align 8
  br label %50

50:                                               ; preds = %46, %43
  %51 = call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %44) #10
  br i1 %51, label %57, label %52

52:                                               ; preds = %50
  %53 = load i64, i64* %4, align 8
  %54 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  store i64 %53, i64* %54, align 8
  br label %57

55:                                               ; preds = %38
  %56 = icmp eq i64 %40, %42
  br i1 %56, label %57, label %87

57:                                               ; preds = %55, %50, %52
  %58 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %59 = load i8, i8* %58, align 4, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %67, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %63 = call zeroext i1 @_ZNK3net13HttpByteRange19HasLastBytePositionEv(%"class.net::HttpByteRange"* %62) #10
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  %65 = load i64, i64* %4, align 8
  %66 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %57, %61, %64
  %68 = load i64, i64* %3, align 8
  %69 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %68, %70
  br i1 %71, label %72, label %87

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %83

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5, i32 1
  %78 = load i64, i64* %77, align 8
  store i64 %78, i64* %73, align 8
  %79 = load i64, i64* %39, align 8
  %80 = icmp slt i64 %78, %79
  br i1 %80, label %83, label %81

81:                                               ; preds = %76
  %82 = load i64, i64* %4, align 8
  store i64 %82, i64* %73, align 8
  store i64 %82, i64* %77, align 8
  br label %83

83:                                               ; preds = %76, %72, %81
  %84 = phi i64 [ %78, %76 ], [ %74, %72 ], [ %82, %81 ]
  %85 = load i64, i64* %4, align 8
  %86 = icmp eq i64 %85, %84
  br label %87

87:                                               ; preds = %20, %32, %55, %67, %83
  %88 = phi i1 [ false, %20 ], [ false, %32 ], [ false, %55 ], [ false, %67 ], [ %86, %83 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  br label %89

89:                                               ; preds = %16, %18, %9, %12, %87
  %90 = phi i1 [ %88, %87 ], [ true, %12 ], [ true, %9 ], [ false, %16 ], [ %19, %18 ]
  ret i1 %90
}

declare zeroext i1 @_ZNK3net19HttpResponseHeaders21GetContentRangeFor206EPlS1_S1_(%"class.net::HttpResponseHeaders"*, i64*, i64*, i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialData18FixResponseHeadersEPNS_19HttpResponseHeadersEb(%"class.net::PartialData"*, %"class.net::HttpResponseHeaders"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 11
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %86

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 5
  %13 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %12) #10
  %14 = and i1 %13, %2
  br i1 %14, label %15, label %21

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  %19 = load i8, i8* %18, align 1, !range !2
  %20 = icmp eq i8 %19, 0
  tail call void @_ZN3net19HttpResponseHeaders18UpdateWithNewRangeERKNS_13HttpByteRangeElb(%"class.net::HttpResponseHeaders"* %1, %"class.net::HttpByteRange"* dereferenceable(32) %12, i64 %17, i1 zeroext %20) #10
  br label %86

21:                                               ; preds = %11
  %22 = tail call zeroext i1 @_ZNK3net13HttpByteRange7IsValidEv(%"class.net::HttpByteRange"* %12) #10
  br i1 %22, label %23, label %56

23:                                               ; preds = %21
  %24 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #10
  %25 = tail call i8* @_Znwm(i64 48) #11
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %25, i8** %26, align 8
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast i64* %27 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %28, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %25, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str, i64 0, i64 0), i64 44, i1 false) #10
  %29 = getelementptr inbounds i8, i8* %25, i64 44
  store i8 0, i8* %29, align 1
  call void @_ZN3net19HttpResponseHeaders17ReplaceStatusLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #10
  %30 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %23
  %35 = load i8*, i8** %26, align 8
  call void @_ZdlPv(i8* %35) #11
  br label %36

36:                                               ; preds = %23, %34
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #10
  %37 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #10
  %38 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %39 = load i64, i64* %38, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), i64 %39) #10
  %40 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = select i1 %43, i8* %45, i8* %37
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %42 to i64
  %50 = select i1 %43, i64 %48, i64 %49
  call void @_ZN3net19HttpResponseHeaders9SetHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN3net12_GLOBAL__N_112kRangeHeaderE, i64 0, i64 0), i64 13, i8* %46, i64 %50) #10
  %51 = load i8, i8* %41, align 1
  %52 = icmp slt i8 %51, 0
  br i1 %52, label %53, label %55

53:                                               ; preds = %36
  %54 = load i8*, i8** %44, align 8
  call void @_ZdlPv(i8* %54) #11
  br label %55

55:                                               ; preds = %36, %53
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #10
  call void @_ZN3net19HttpResponseHeaders9SetHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_113kLengthHeaderE, i64 0, i64 0), i64 14, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #10
  br label %86

56:                                               ; preds = %21
  %57 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #10
  %58 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  store i8 15, i8* %59, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %57, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.3, i64 0, i64 0), i64 15, i1 false) #10
  %60 = getelementptr inbounds i8, i8* %57, i64 15
  store i8 0, i8* %60, align 1
  call void @_ZN3net19HttpResponseHeaders17ReplaceStatusLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #10
  %61 = load i8, i8* %59, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #11
  br label %66

66:                                               ; preds = %56, %63
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #10
  call void @_ZN3net19HttpResponseHeaders12RemoveHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @_ZN3net12_GLOBAL__N_112kRangeHeaderE, i64 0, i64 0), i64 13) #10
  %67 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %67) #10
  %68 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %69 = load i64, i64* %68, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 %69) #10
  %70 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  %76 = select i1 %73, i8* %75, i8* %67
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %72 to i64
  %80 = select i1 %73, i64 %78, i64 %79
  call void @_ZN3net19HttpResponseHeaders9SetHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_113kLengthHeaderE, i64 0, i64 0), i64 14, i8* %76, i64 %80) #10
  %81 = load i8, i8* %71, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %66
  %84 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %84) #11
  br label %85

85:                                               ; preds = %66, %83
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %67) #10
  br label %86

86:                                               ; preds = %3, %15, %85, %55
  ret void
}

declare void @_ZN3net19HttpResponseHeaders18UpdateWithNewRangeERKNS_13HttpByteRangeElb(%"class.net::HttpResponseHeaders"*, %"class.net::HttpByteRange"* dereferenceable(32), i64, i1 zeroext) local_unnamed_addr #1

declare void @_ZN3net19HttpResponseHeaders17ReplaceStatusLineERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.net::HttpResponseHeaders"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN3net19HttpResponseHeaders9SetHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"*, i8*, i64, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

declare void @_ZN3net19HttpResponseHeaders12RemoveHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.net::HttpResponseHeaders"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net11PartialData16FixContentLengthEPNS_19HttpResponseHeadersE(%"class.net::PartialData"* nocapture readonly, %"class.net::HttpResponseHeaders"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 4
  %6 = load i64, i64* %5, align 8
  call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* nonnull sret %3, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.4, i64 0, i64 0), i64 %6) #10
  %7 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load i8*, i8** %11, align 8
  %13 = select i1 %10, i8* %12, i8* %4
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = zext i8 %9 to i64
  %17 = select i1 %10, i64 %15, i64 %16
  call void @_ZN3net19HttpResponseHeaders9SetHeaderEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_(%"class.net::HttpResponseHeaders"* %1, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @_ZN3net12_GLOBAL__N_113kLengthHeaderE, i64 0, i64 0), i64 14, i8* %13, i64 %17) #10
  %18 = load i8, i8* %8, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %2
  %21 = load i8*, i8** %11, align 8
  call void @_ZdlPv(i8* %21) #11
  br label %22

22:                                               ; preds = %2, %20
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11PartialData9CacheReadEPN10disk_cache5EntryEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::PartialData"* nocapture readonly, %"class.disk_cache::Entry"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %3
  %11 = select i1 %10, i32 %9, i32 %3
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %44, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  %17 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %18 = load i64, i64* %17, align 8
  br i1 %16, label %30, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %22, i64* %23, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %20, align 8
  %24 = bitcast %"class.disk_cache::Entry"* %1 to i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %25 = load i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %24, align 8
  %26 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %25, i64 8
  %27 = load i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %26, align 8
  %28 = call i32 %27(%"class.disk_cache::Entry"* %1, i64 %18, %"class.net::IOBuffer"* %2, i32 %11, %"class.base::OnceCallback"* nonnull %6) #10
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #10
  br label %44

30:                                               ; preds = %13
  %31 = icmp sgt i64 %18, 2147483647
  br i1 %31, label %44, label %32

32:                                               ; preds = %30
  %33 = trunc i64 %18 to i32
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %36, i64* %37, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %34, align 8
  %38 = bitcast %"class.disk_cache::Entry"* %1 to i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %39 = load i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %38, align 8
  %40 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %39, i64 6
  %41 = load i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %40, align 8
  %42 = call i32 %41(%"class.disk_cache::Entry"* %1, i32 1, i32 %33, %"class.net::IOBuffer"* %2, i32 %11, %"class.base::OnceCallback"* nonnull %7) #10
  %43 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %43) #10
  br label %44

44:                                               ; preds = %30, %32, %19, %5
  %45 = phi i32 [ 0, %5 ], [ -4, %30 ], [ %28, %19 ], [ %42, %32 ]
  ret i32 %45
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net11PartialData10CacheWriteEPN10disk_cache5EntryEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::PartialData"* nocapture readonly, %"class.disk_cache::Entry"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 10
  %9 = load i8, i8* %8, align 1, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %12 = load i64, i64* %11, align 8
  br i1 %10, label %23, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %15 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %16, i64* %17, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %14, align 8
  %18 = bitcast %"class.disk_cache::Entry"* %1 to i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)***
  %19 = load i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)**, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*** %18, align 8
  %20 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %19, i64 9
  %21 = load i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)*, i32 (%"class.disk_cache::Entry"*, i64, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)** %20, align 8
  %22 = call i32 %21(%"class.disk_cache::Entry"* %1, i64 %12, %"class.net::IOBuffer"* %2, i32 %3, %"class.base::OnceCallback"* nonnull %6) #10
  br label %36

23:                                               ; preds = %5
  %24 = icmp sgt i64 %12, 2147483647
  br i1 %24, label %40, label %25

25:                                               ; preds = %23
  %26 = trunc i64 %12 to i32
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %29, i64* %30, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %27, align 8
  %31 = bitcast %"class.disk_cache::Entry"* %1 to i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)***
  %32 = load i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)**, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*** %31, align 8
  %33 = getelementptr inbounds i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %32, i64 7
  %34 = load i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)*, i32 (%"class.disk_cache::Entry"*, i32, i32, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, i1)** %33, align 8
  %35 = call i32 %34(%"class.disk_cache::Entry"* %1, i32 1, i32 %26, %"class.net::IOBuffer"* %2, i32 %3, %"class.base::OnceCallback"* nonnull %7, i1 zeroext true) #10
  br label %36

36:                                               ; preds = %13, %25
  %37 = phi %"class.base::OnceCallback"* [ %7, %25 ], [ %6, %13 ]
  %38 = phi i32 [ %35, %25 ], [ %22, %13 ]
  %39 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %37, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %39) #10
  br label %40

40:                                               ; preds = %36, %23
  %41 = phi i32 [ -4, %23 ], [ %38, %36 ]
  ret i32 %41
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net11PartialData20OnCacheReadCompletedEi(%"class.net::PartialData"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %12

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = sub nsw i32 %10, %1
  store i32 %11, i32* %9, align 8
  br label %12

12:                                               ; preds = %4, %2
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN3net11PartialData22OnNetworkReadCompletedEi(%"class.net::PartialData"* nocapture, i32) local_unnamed_addr #8 align 2 {
  %3 = icmp sgt i32 %1, 0
  br i1 %3, label %4, label %9

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %"class.net::PartialData", %"class.net::PartialData"* %0, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = add nsw i64 %7, %5
  store i64 %8, i64* %6, align 8
  br label %9

9:                                                ; preds = %4, %2
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #9

declare dereferenceable(24) %"class.net::HttpRequestHeaders"* @_ZN3net18HttpRequestHeadersaSERKS0_(%"class.net::HttpRequestHeaders"*, %"class.net::HttpRequestHeaders"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"class.base::internal::CallbackBase"* @_ZN4base8internal12CallbackBaseaSEOS1_(%"class.base::internal::CallbackBase"*, %"class.base::internal::CallbackBase"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4base8internal18WeakPtrFactoryBaseC2Em(%"class.base::internal::WeakPtrFactoryBase"*, i64) unnamed_addr #1

declare void @_ZNK4base8internal18WeakReferenceOwner6GetRefEv(%"class.base::internal::WeakReference"* sret, %"class.base::internal::WeakReferenceOwner"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceD1Ev(%"class.base::internal::WeakReference"*) unnamed_addr #2

declare void @_ZN4base8internal11WeakPtrBaseC2ERKNS0_13WeakReferenceEm(%"class.base::internal::WeakPtrBase"*, %"class.base::internal::WeakReference"* dereferenceable(8), i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEFviEE7RunOnceEPNS0_13BindStateBaseEi(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %6 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 2
  %7 = bitcast void (%"class.base::internal::BindStateBase"*)** %6 to i64**
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %5 to %"class.base::internal::WeakReference"*
  %9 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  br i1 %9, label %10, label %46

10:                                               ; preds = %2
  %11 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %5, i64 1
  %12 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to %"class.net::PartialData"**
  %13 = load %"class.net::PartialData"*, %"class.net::PartialData"** %12, align 8
  %14 = icmp eq %"class.net::PartialData"* %13, null
  br i1 %14, label %46, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.base::internal::BindStateBase"* %4 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %19 = bitcast void ()** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.7, i64 0, i64 0), i32 251, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i64 0, i64 0)) #10
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #10
  br label %25

25:                                               ; preds = %22, %15
  %26 = call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %8) #10
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %11 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = select i1 %26, i8* %28, i8* null
  %30 = getelementptr inbounds i8, i8* %29, i64 %20
  %31 = bitcast i8* %30 to %"class.net::PartialData"*
  %32 = and i64 %17, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %25
  %35 = bitcast i8* %30 to i8**
  %36 = load i8*, i8** %35, align 8
  %37 = add i64 %17, -1
  %38 = getelementptr i8, i8* %36, i64 %37
  %39 = bitcast i8* %38 to void (%"class.net::PartialData"*, i64*, i32)**
  %40 = load void (%"class.net::PartialData"*, i64*, i32)*, void (%"class.net::PartialData"*, i64*, i32)** %39, align 8
  br label %43

41:                                               ; preds = %25
  %42 = inttoptr i64 %17 to void (%"class.net::PartialData"*, i64*, i32)*
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi void (%"class.net::PartialData"*, i64*, i32)* [ %40, %34 ], [ %42, %41 ]
  %45 = load i64*, i64** %7, align 8
  call void %44(%"class.net::PartialData"* %31, i64* %45, i32 %1) #10
  br label %46

46:                                               ; preds = %2, %10, %43
  ret void
}

declare zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS3_EES4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to %"class.base::internal::WeakPtrBase"*
  tail call void @_ZN4base8internal11WeakPtrBaseD2Ev(%"class.base::internal::WeakPtrBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4base8internal23QueryCancellationTraitsINS0_9BindStateIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EES5_EEEEEbPKNS0_13BindStateBaseENSB_21CancellationQueryModeE(%"class.base::internal::BindStateBase"*, i32) #0 comdat {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  switch i32 %1, label %16 [
    i32 0, label %4
    i32 1, label %13
  ]

4:                                                ; preds = %2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %6 = tail call zeroext i1 @_ZNK4base8internal13WeakReference7IsValidEv(%"class.base::internal::WeakReference"* %5) #10
  %7 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 1
  %8 = bitcast void (%"class.base::internal::BindStateBase"*)** %7 to %"class.net::PartialData"**
  %9 = load %"class.net::PartialData"*, %"class.net::PartialData"** %8, align 8
  %10 = icmp ne %"class.net::PartialData"* %9, null
  %11 = and i1 %6, %10
  %12 = xor i1 %11, true
  br label %16

13:                                               ; preds = %2
  %14 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to %"class.base::internal::WeakReference"*
  %15 = tail call zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"* %14) #10
  br label %16

16:                                               ; preds = %2, %4, %13
  %17 = phi i1 [ %15, %13 ], [ %12, %4 ], [ false, %2 ]
  ret i1 %17
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_EPFbS5_NS1_21CancellationQueryModeEE(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)*) unnamed_addr #1

declare zeroext i1 @_ZNK4base8internal13WeakReference10MaybeValidEv(%"class.base::internal::WeakReference"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal13WeakReferenceC1EOS1_(%"class.base::internal::WeakReference"*, %"class.base::internal::WeakReference"* dereferenceable(8)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base14WeakPtrFactoryIN3net11PartialDataEE10GetWeakPtrEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base14WeakPtrFactoryIN3net11PartialDataEE10GetWeakPtrEv"}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EERS5_EEEDcOT0_DpOT1_: argument 0"}
!8 = distinct !{!8, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN3net11PartialDataEFvPliEJNS_7WeakPtrIS4_EERS5_EEEDcOT0_DpOT1_"}
!9 = distinct !{!9, !10, !"_ZN4base8BindOnceIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS2_EERS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8BindOnceIMN3net11PartialDataEFvPliEJNS_7WeakPtrIS2_EERS3_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
