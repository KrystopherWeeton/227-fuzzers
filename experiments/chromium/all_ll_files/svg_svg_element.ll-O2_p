; ModuleID = '../../third_party/blink/renderer/core/svg/svg_svg_element.cc'
source_filename = "../../third_party/blink/renderer/core/svg/svg_svg_element.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::SVGQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Isolate" = type { i8 }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.209", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.209" = type { %"class.base::RefCounted.210" }
%"class.base::RefCounted.210" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.213" }
%"class.blink::HeapHashMap.213" = type { %"class.WTF::HashMap.216" }
%"class.WTF::HashMap.216" = type { %"class.WTF::HashTable.217" }
%"class.WTF::HashTable.217" = type <{ %"struct.WTF::KeyValuePair.219"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.219" = type { %"class.blink::WeakMember.220", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.222", i32, [4 x i8], %"class.std::__1::unique_ptr.358", %"class.std::__1::unique_ptr.358", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.375", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.387", %"class.std::__1::unique_ptr.393", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.400", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.237", %"class.std::__1::unique_ptr.243", %"class.std::__1::unique_ptr.249", %"class.std::__1::unique_ptr.255", %"class.std::__1::unique_ptr.266", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.273", %"class.std::__1::unique_ptr.280", %"class.std::__1::unique_ptr.287", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.294", %"class.std::__1::unique_ptr.301", %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.315", %"class.std::__1::unique_ptr.338", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.237" = type { %"class.std::__1::__compressed_pair.238" }
%"class.std::__1::__compressed_pair.238" = type { %"struct.std::__1::__compressed_pair_elem.239" }
%"struct.std::__1::__compressed_pair_elem.239" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.243" = type { %"class.std::__1::__compressed_pair.244" }
%"class.std::__1::__compressed_pair.244" = type { %"struct.std::__1::__compressed_pair_elem.245" }
%"struct.std::__1::__compressed_pair_elem.245" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.249" = type { %"class.std::__1::__compressed_pair.250" }
%"class.std::__1::__compressed_pair.250" = type { %"struct.std::__1::__compressed_pair_elem.251" }
%"struct.std::__1::__compressed_pair_elem.251" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.255" = type { %"class.std::__1::__compressed_pair.256" }
%"class.std::__1::__compressed_pair.256" = type { %"struct.std::__1::__compressed_pair_elem.257" }
%"struct.std::__1::__compressed_pair_elem.257" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.258" = type { %"struct.std::__1::__atomic_base.259" }
%"struct.std::__1::__atomic_base.259" = type { %"struct.std::__1::__atomic_base.260" }
%"struct.std::__1::__atomic_base.260" = type { %"struct.std::__1::__cxx_atomic_impl.261" }
%"struct.std::__1::__cxx_atomic_impl.261" = type { %"struct.std::__1::__cxx_atomic_base_impl.262" }
%"struct.std::__1::__cxx_atomic_base_impl.262" = type { i64 }
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::Worklist.269"* }
%"class.blink::Worklist.269" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.273" = type { %"class.std::__1::__compressed_pair.274" }
%"class.std::__1::__compressed_pair.274" = type { %"struct.std::__1::__compressed_pair_elem.275" }
%"struct.std::__1::__compressed_pair_elem.275" = type { %"class.blink::Worklist.276"* }
%"class.blink::Worklist.276" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.280" = type { %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.282" }
%"struct.std::__1::__compressed_pair_elem.282" = type { %"class.blink::Worklist.283"* }
%"class.blink::Worklist.283" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.287" = type { %"class.std::__1::__compressed_pair.288" }
%"class.std::__1::__compressed_pair.288" = type { %"struct.std::__1::__compressed_pair_elem.289" }
%"struct.std::__1::__compressed_pair_elem.289" = type { %"class.blink::Worklist.290"* }
%"class.blink::Worklist.290" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.294" = type { %"class.std::__1::__compressed_pair.295" }
%"class.std::__1::__compressed_pair.295" = type { %"struct.std::__1::__compressed_pair_elem.296" }
%"struct.std::__1::__compressed_pair_elem.296" = type { %"class.blink::Worklist.297"* }
%"class.blink::Worklist.297" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.301" = type { %"class.std::__1::__compressed_pair.302" }
%"class.std::__1::__compressed_pair.302" = type { %"struct.std::__1::__compressed_pair_elem.303" }
%"struct.std::__1::__compressed_pair_elem.303" = type { %"class.blink::Worklist.304"* }
%"class.blink::Worklist.304" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.blink::Worklist.311"* }
%"class.blink::Worklist.311" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.258" }
%"class.std::__1::unique_ptr.315" = type { %"class.std::__1::__compressed_pair.316" }
%"class.std::__1::__compressed_pair.316" = type { %"struct.std::__1::__compressed_pair_elem.317" }
%"struct.std::__1::__compressed_pair_elem.317" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.318", %"class.std::__1::__compressed_pair.325", %"class.std::__1::__compressed_pair.330", %"class.std::__1::__compressed_pair.332", [4 x i8] }>
%"class.std::__1::unique_ptr.318" = type { %"class.std::__1::__compressed_pair.319" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem.320", %"struct.std::__1::__compressed_pair_elem.321" }
%"struct.std::__1::__compressed_pair_elem.320" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.321" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.322" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"struct.std::__1::__compressed_pair_elem.323" = type { i64 }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.330" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { float }
%"class.std::__1::unique_ptr.338" = type { %"class.std::__1::__compressed_pair.339" }
%"class.std::__1::__compressed_pair.339" = type { %"struct.std::__1::__compressed_pair_elem.340" }
%"struct.std::__1::__compressed_pair_elem.340" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.341", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.350" }
%"class.WTF::Vector.350" = type { %"class.WTF::VectorBuffer.351" }
%"class.WTF::VectorBuffer.351" = type { %"class.WTF::VectorBufferBase.352" }
%"class.WTF::VectorBufferBase.352" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.366" }
%"class.WTF::VectorBuffer.366" = type { %"class.WTF::VectorBufferBase.367" }
%"class.WTF::VectorBufferBase.367" = type { %"struct.std::__1::pair.368"*, i32, i32 }
%"struct.std::__1::pair.368" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.375" = type { %"class.std::__1::__compressed_pair.376" }
%"class.std::__1::__compressed_pair.376" = type { %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.381" }
%"class.std::__1::unique_ptr.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.383" }
%"struct.std::__1::__compressed_pair_elem.383" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.269"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.276"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.283"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.290"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.297"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.648" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.387" = type { %"class.std::__1::__compressed_pair.388" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.389" }
%"struct.std::__1::__compressed_pair_elem.389" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.393" = type { %"class.std::__1::__compressed_pair.394" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.395" }
%"struct.std::__1::__compressed_pair_elem.395" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.399 }
%class.scoped_refptr.399 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.400" = type { %"struct.std::__1::__atomic_base.401" }
%"struct.std::__1::__atomic_base.401" = type { %"struct.std::__1::__cxx_atomic_impl.402" }
%"struct.std::__1::__cxx_atomic_impl.402" = type { %"struct.std::__1::__cxx_atomic_base_impl.403" }
%"struct.std::__1::__cxx_atomic_base_impl.403" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.91" }
%"struct.std::__1::atomic.91" = type { %"struct.std::__1::__atomic_base.92" }
%"struct.std::__1::__atomic_base.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i32 }
%"class.blink::SVGSVGElement" = type <{ %"class.blink::SVGGraphicsElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8], %"class.blink::Member.56", %"class.blink::Member.56", %"class.blink::Member.56", %"class.blink::Member.56", %"class.blink::Member.78", %"class.blink::Member.80", %"class.blink::Member.82", float, [4 x i8] }>
%"class.blink::SVGGraphicsElement" = type { %"class.blink::SVGElement", %"class.blink::SVGTests", %"class.blink::Member.32" }
%"class.blink::SVGElement" = type { %"class.blink::Element", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap", %"class.blink::Member.26", %"class.blink::Member.28" }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.8" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.119", %"class.blink::Member.121", %"class.blink::Member.0", %"class.blink::Member.123", %"class.blink::Member.123", %"class.blink::Member.147", %"class.blink::Member.149", %"class.blink::Member.151", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.156", %"class.blink::HeapVector.158" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.119" = type { %"class.blink::MemberBase.120" }
%"class.blink::MemberBase.120" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.121" = type { %"class.blink::MemberBase.122" }
%"class.blink::MemberBase.122" = type { %"class.blink::Document"* }
%"class.blink::Member.123" = type { %"class.blink::MemberBase.124" }
%"class.blink::MemberBase.124" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.127" }
%"class.blink::HeapHashMap.127" = type { %"class.WTF::HashMap.130" }
%"class.WTF::HashMap.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"struct.WTF::KeyValuePair.133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.133" = type { %"class.WTF::AtomicString", %"class.blink::Member.134" }
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.138", i32, %"class.blink::HeapVector.140" }
%"class.blink::Member.138" = type { %"class.blink::MemberBase.139" }
%"class.blink::MemberBase.139" = type { %"class.blink::Element"* }
%"class.blink::HeapVector.140" = type { %"class.WTF::Vector.143" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.blink::Member.138"*, i32, i32 }
%"class.blink::Member.147" = type { %"class.blink::MemberBase.148" }
%"class.blink::MemberBase.148" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.149" = type { %"class.blink::MemberBase.150" }
%"class.blink::MemberBase.150" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.151" = type { %"class.blink::MemberBase.152" }
%"class.blink::MemberBase.152" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.153" }
%"class.blink::Member.153" = type { %"class.blink::MemberBase.154" }
%"class.blink::MemberBase.154" = type { %"class.blink::HeapHashMap.155"* }
%"class.blink::HeapHashMap.155" = type opaque
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.158" = type { %"class.WTF::Vector.161" }
%"class.WTF::Vector.161" = type { %"class.WTF::VectorBuffer.162" }
%"class.WTF::VectorBuffer.162" = type { %"class.WTF::VectorBufferBase.163" }
%"class.WTF::VectorBufferBase.163" = type { %"class.blink::Member.164"*, i32, i32 }
%"class.blink::Member.164" = type { %"class.blink::MemberBase.165" }
%"class.blink::MemberBase.165" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.8" = type { %"class.blink::MemberBase.9" }
%"class.blink::MemberBase.9" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.12", %"class.blink::Member.14", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.12" = type { %"class.WTF::SingleThreadedBitField.13" }
%"class.WTF::SingleThreadedBitField.13" = type { i32 }
%"class.blink::Member.14" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.17", %"class.WTF::AtomicString", %"class.WTF::Vector" }
%"class.WTF::RefCounted.17" = type { %"class.base::RefCounted.18" }
%"class.base::RefCounted.18" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.WTF::VectorBufferBase" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.24" }
%"class.WTF::HashTable.24" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::SVGElementRareData"* }
%"class.blink::SVGElementRareData" = type opaque
%"class.blink::Member.28" = type { %"class.blink::MemberBase.29" }
%"class.blink::MemberBase.29" = type { %"class.blink::SVGAnimatedString"* }
%"class.blink::SVGAnimatedString" = type opaque
%"class.blink::SVGTests" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.30", %"class.blink::Member.30" }
%"class.blink::Member.30" = type { %"class.blink::MemberBase.31" }
%"class.blink::MemberBase.31" = type { %"class.blink::SVGStaticStringList"* }
%"class.blink::SVGStaticStringList" = type opaque
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::SVGAnimatedTransformList"* }
%"class.blink::SVGAnimatedTransformList" = type opaque
%"class.blink::SVGFitToViewBox" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.34", %"class.blink::Member.46" }
%"class.blink::Member.34" = type { %"class.blink::MemberBase.35" }
%"class.blink::MemberBase.35" = type { %"class.blink::SVGAnimatedRect"* }
%"class.blink::SVGAnimatedRect" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty" }
%"class.blink::SVGAnimatedProperty" = type { %"class.blink::SVGAnimatedPropertyCommon", %"class.blink::Member.42", %"class.blink::Member.42" }
%"class.blink::SVGAnimatedPropertyCommon" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.38", %"class.blink::Member.38" }
%"class.blink::SVGAnimatedPropertyBase" = type { %"class.blink::GarbageCollectedMixin", i24, %"class.blink::Member.36", %"class.blink::QualifiedName"* }
%"class.blink::Member.36" = type { %"class.blink::MemberBase.37" }
%"class.blink::MemberBase.37" = type { %"class.blink::SVGElement"* }
%"class.blink::Member.38" = type { %"class.blink::MemberBase.39" }
%"class.blink::MemberBase.39" = type { %"class.blink::SVGRect"* }
%"class.blink::SVGRect" = type <{ %"class.blink::SVGPropertyHelper", i8, [3 x i8], %"class.blink::FloatRect", [4 x i8] }>
%"class.blink::SVGPropertyHelper" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::SVGPropertyBase" = type { i32 (...)** }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.42" = type { %"class.blink::MemberBase.43" }
%"class.blink::MemberBase.43" = type { %"class.blink::SVGRectTearOff"* }
%"class.blink::SVGRectTearOff" = type { %"class.blink::SVGPropertyTearOff" }
%"class.blink::SVGPropertyTearOff" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.38" }
%"class.blink::SVGPropertyTearOffBase.base" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.36", %"class.blink::Member.44", i32 }>
%"class.blink::Member.44" = type { %"class.blink::MemberBase.45" }
%"class.blink::MemberBase.45" = type { %"class.blink::SVGAnimatedPropertyBase"* }
%"class.blink::Member.46" = type { %"class.blink::MemberBase.47" }
%"class.blink::MemberBase.47" = type { %"class.blink::SVGAnimatedPreserveAspectRatio"* }
%"class.blink::SVGAnimatedPreserveAspectRatio" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.48" }
%"class.blink::SVGAnimatedProperty.48" = type { %"class.blink::SVGAnimatedPropertyCommon.49", %"class.blink::Member.53", %"class.blink::Member.53" }
%"class.blink::SVGAnimatedPropertyCommon.49" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.50", %"class.blink::Member.50" }
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::SVGPreserveAspectRatio"* }
%"class.blink::SVGPreserveAspectRatio" = type { %"class.blink::SVGPropertyHelper.52", i32, i32 }
%"class.blink::SVGPropertyHelper.52" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::Member.53" = type { %"class.blink::MemberBase.54" }
%"class.blink::MemberBase.54" = type { %"class.blink::SVGPreserveAspectRatioTearOff"* }
%"class.blink::SVGPreserveAspectRatioTearOff" = type { %"class.blink::SVGPropertyTearOff.55" }
%"class.blink::SVGPropertyTearOff.55" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.50" }
%"class.blink::SVGZoomAndPan.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::SVGAnimatedLength"* }
%"class.blink::SVGAnimatedLength" = type { %"class.blink::ScriptWrappable", %"class.blink::SVGAnimatedProperty.58" }
%"class.blink::SVGAnimatedProperty.58" = type { %"class.blink::SVGAnimatedPropertyCommon.59", %"class.blink::Member.75", %"class.blink::Member.75" }
%"class.blink::SVGAnimatedPropertyCommon.59" = type { %"class.blink::SVGAnimatedPropertyBase", %"class.blink::Member.60", %"class.blink::Member.60" }
%"class.blink::Member.60" = type { %"class.blink::MemberBase.61" }
%"class.blink::MemberBase.61" = type { %"class.blink::SVGLength"* }
%"class.blink::SVGLength" = type <{ %"class.blink::SVGListablePropertyBase", %"class.blink::Member.71", i8, [7 x i8] }>
%"class.blink::SVGListablePropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::UntracedMember" }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.62" }
%"class.blink::MemberBase.62" = type { %"class.blink::SVGListPropertyBase"* }
%"class.blink::SVGListPropertyBase" = type { %"class.blink::SVGPropertyBase", %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.65" }
%"class.WTF::Vector.65" = type { %"class.WTF::VectorBuffer.66" }
%"class.WTF::VectorBuffer.66" = type { %"class.WTF::VectorBufferBase.67" }
%"class.WTF::VectorBufferBase.67" = type { %"class.blink::Member.68"*, i32, i32 }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::SVGListablePropertyBase"* }
%"class.blink::Member.71" = type { %"class.blink::MemberBase.72" }
%"class.blink::MemberBase.72" = type { %"class.blink::CSSPrimitiveValue"* }
%"class.blink::CSSPrimitiveValue" = type { %"class.blink::CSSValue" }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Member.75" = type { %"class.blink::MemberBase.76" }
%"class.blink::MemberBase.76" = type { %"class.blink::SVGLengthTearOff"* }
%"class.blink::SVGLengthTearOff" = type { %"class.blink::SVGPropertyTearOff.77" }
%"class.blink::SVGPropertyTearOff.77" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.60" }
%"class.blink::Member.78" = type { %"class.blink::MemberBase.79" }
%"class.blink::MemberBase.79" = type { %"class.blink::SMILTimeContainer"* }
%"class.blink::SMILTimeContainer" = type { %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.blink::SMILTime", %"class.base::TimeDelta", i32, i8, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashCountedSet", %"class.blink::PriorityQueue", %"class.blink::Member.117" }
%"class.blink::SMILTime" = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.103", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.90, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.90 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.91" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.96 }
%class.scoped_refptr.96 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.97", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.97" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.98" }
%"struct.std::__1::atomic.98" = type { %"struct.std::__1::__atomic_base.99" }
%"struct.std::__1::__atomic_base.99" = type { %"struct.std::__1::__atomic_base.100" }
%"struct.std::__1::__atomic_base.100" = type { %"struct.std::__1::__cxx_atomic_impl.101" }
%"struct.std::__1::__cxx_atomic_impl.101" = type { %"struct.std::__1::__cxx_atomic_base_impl.102" }
%"struct.std::__1::__cxx_atomic_base_impl.102" = type { i8 }
%"class.blink::WeakMember.103" = type { %"class.blink::MemberBase.79" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.106" }
%"class.WTF::HashMap.106" = type { %"class.WTF::HashTable.107" }
%"class.WTF::HashTable.107" = type <{ %"struct.WTF::KeyValuePair.109"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.109" = type opaque
%"class.blink::PriorityQueue" = type { %"class.blink::HeapVector.110" }
%"class.blink::HeapVector.110" = type { %"class.WTF::Vector.113" }
%"class.WTF::Vector.113" = type { %"class.WTF::VectorBuffer.114" }
%"class.WTF::VectorBuffer.114" = type { %"class.WTF::VectorBufferBase.115" }
%"class.WTF::VectorBufferBase.115" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type opaque
%"class.blink::Member.117" = type { %"class.blink::MemberBase.118" }
%"class.blink::MemberBase.118" = type { %"class.blink::SVGSVGElement"* }
%"class.blink::Member.80" = type { %"class.blink::MemberBase.81" }
%"class.blink::MemberBase.81" = type { %"class.blink::SVGPoint"* }
%"class.blink::SVGPoint" = type { %"class.blink::SVGListablePropertyBase", %"class.blink::FloatPoint" }
%"class.blink::Member.82" = type { %"class.blink::MemberBase.83" }
%"class.blink::MemberBase.83" = type { %"class.blink::SVGViewSpec"* }
%"class.blink::SVGViewSpec" = type <{ %"class.blink::Member.38", %"class.blink::Member.50", %"class.blink::Member.86", i32, [4 x i8] }>
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::SVGTransformList"* }
%"class.blink::SVGTransformList" = type { %"class.blink::SVGListPropertyHelper" }
%"class.blink::SVGListPropertyHelper" = type { %"class.blink::SVGListPropertyBase" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.174", %"class.WTF::Vector.174", i8, i32, %"class.blink::Member.181", %"class.blink::Member.183", %"class.blink::Member.185", %"class.blink::Member.187", %"class.blink::Member.189", %"class.blink::Member.191", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.194", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.200", %"class.blink::Member.202", %"class.blink::Member.164", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.205", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.406", %"class.blink::HeapVector.140", %"class.blink::Member.138", %"class.blink::Member.408", %"class.blink::Member.138", %"class.blink::Member.138", %"class.blink::Member.138", %"class.blink::UserActionElementSet", %"class.blink::Member.417", double, double, i64, i64, %"class.blink::HeapHashSet.419", %"class.blink::HeapHashSet.426", i16, i8, %"class.blink::Member.433", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::TextLinkColors", %"class.blink::Member.441", i8, [7 x i8], %"class.blink::HeapHashMap.443", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.138", %"class.WTF::Vector.450", %"class.blink::Member.455", %"class.blink::Member.457", i8, %"class.blink::Member.138", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.459", %"class.blink::HeapVector.461", %"class.std::__1::unique_ptr.469", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.475", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.488", %"class.WTF::Vector.504", i8, i8, %"class.std::__1::unique_ptr.509", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.140", %"class.blink::HeapVector.515", i32, i8, %"class.blink::HeapTaskRunnerTimer.406", %"class.blink::HeapTaskRunnerTimer.406", %"class.blink::DocumentTiming", %"class.blink::Member.523", i8, i32, %"class.blink::Member.525", %"class.blink::Member.527", %"class.blink::Member.529", %"class.blink::HeapTaskRunnerTimer.406", %"class.blink::Member.531", %"class.WTF::HashMap.533", %"class.blink::Member.538", %"class.blink::Member.540", %"class.blink::Member.542", %"class.blink::Member.544", %"class.blink::Member.121", %"class.blink::Member.121", %"class.blink::HeapTaskRunnerTimer.406", %"class.blink::HeapHashSet.546", i8, i32, %"class.blink::Member.553", %"class.blink::Member.555", i32, %"class.blink::Member.557", %"class.blink::Member.559", %"class.blink::Member.561", %"class.std::__1::unique_ptr.563", i64, %"class.std::__1::unique_ptr.569", i32, i32, %"class.blink::Member.584", %"class.blink::Member.586", %"class.blink::Member.588", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.590", %"class.WTF::Vector.592", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.597", %"class.blink::Member.604", %"class.std::__1::unique_ptr.606", %"class.blink::Member.612", i8, i8, %"class.WTF::String", %"class.blink::Member.614", i8, [7 x i8], %"class.blink::HeapHashMap.616", %"class.blink::HeapObserverSet", %"class.blink::Member.630", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.632", i32, i8, i8, %"class.blink::WeakMember.634", %"class.blink::Member.635" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.167" }
%"class.blink::HeapHashMap.167" = type { %"class.WTF::HashMap.170" }
%"class.WTF::HashMap.170" = type { %"class.WTF::HashTable.171" }
%"class.WTF::HashTable.171" = type <{ %"struct.WTF::KeyValuePair.173"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.173" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.174" = type { %"class.WTF::VectorBuffer.175" }
%"class.WTF::VectorBuffer.175" = type { %"class.WTF::VectorBufferBase.176" }
%"class.WTF::VectorBufferBase.176" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.177 }
%class.scoped_refptr.177 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.178", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.178" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.181" = type { %"class.blink::MemberBase.182" }
%"class.blink::MemberBase.182" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.183" = type { %"class.blink::MemberBase.184" }
%"class.blink::MemberBase.184" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.653", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.721", i32, i8, [3 x i8], %"class.blink::HeapVector.723", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.731", %"class.blink::Member.733", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.742", %"class.blink::Member.870", %"class.blink::Member.872", i8, [7 x i8] }>
%"class.blink::Supplementable.653" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.654" }
%"class.blink::HeapHashMap.654" = type { %"class.WTF::HashMap.657" }
%"class.WTF::HashMap.657" = type { %"class.WTF::HashTable.658" }
%"class.WTF::HashTable.658" = type <{ %"struct.WTF::KeyValuePair.660"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.660" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.669" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.661" }
%"class.blink::HeapObserverSet.661" = type { i32, [4 x i8], %"class.blink::HeapHashSet.662" }
%"class.blink::HeapHashSet.662" = type { %"class.WTF::HashSet.665" }
%"class.WTF::HashSet.665" = type { %"class.WTF::HashTable.666" }
%"class.WTF::HashTable.666" = type <{ %"class.blink::WeakMember.668"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.668" = type opaque
%"class.blink::Supplementable.669" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.670" }
%"class.blink::HeapHashMap.670" = type { %"class.WTF::HashMap.673" }
%"class.WTF::HashMap.673" = type { %"class.WTF::HashTable.674" }
%"class.WTF::HashTable.674" = type <{ %"struct.WTF::KeyValuePair.676"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.676" = type { i8*, %"class.blink::Member.2303" }
%"class.blink::Member.2303" = type { %"class.blink::MemberBase.2304" }
%"class.blink::MemberBase.2304" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.2305" }
%"class.blink::Member.2305" = type { %"class.blink::MemberBase.2306" }
%"class.blink::MemberBase.2306" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.677, %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.711", %"class.blink::Member.183", i32, [4 x i8], %"class.WTF::HashSet.717", i32, i32 }
%class.scoped_refptr.677 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.678", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.680 }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.680 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.698", %"class.std::__1::map.707"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.684" }
%"class.std::__1::__compressed_pair.684" = type { %"struct.std::__1::__compressed_pair_elem.685" }
%"struct.std::__1::__compressed_pair_elem.685" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.686 }
%union.anon.686 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.690", %"class.std::__1::__compressed_pair.695" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.690" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"struct.std::__1::__compressed_pair_elem.691" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.695" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.std::__1::map.698" = type { %"class.std::__1::__tree.699" }
%"class.std::__1::__tree.699" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.700", %"class.std::__1::__compressed_pair.704" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.704" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.std::__1::map.707" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.717" = type { %"class.WTF::HashTable.718" }
%"class.WTF::HashTable.718" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.723" = type { %"class.WTF::Vector.726" }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { %"class.blink::Member.729"*, i32, i32 }
%"class.blink::Member.729" = type opaque
%"class.blink::Member.731" = type { %"class.blink::MemberBase.732" }
%"class.blink::MemberBase.732" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.733" = type { %"class.blink::MemberBase.734" }
%"class.blink::MemberBase.734" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.735", i32, i32 }
%"class.blink::HeapHashMap.735" = type { %"class.WTF::HashMap.738" }
%"class.WTF::HashMap.738" = type { %"class.WTF::HashTable.739" }
%"class.WTF::HashTable.739" = type <{ %"struct.WTF::KeyValuePair.741"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.741" = type opaque
%"class.std::__1::unique_ptr.742" = type { %"class.std::__1::__compressed_pair.743" }
%"class.std::__1::__compressed_pair.743" = type { %"struct.std::__1::__compressed_pair_elem.744" }
%"struct.std::__1::__compressed_pair_elem.744" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.745" }
%"class.std::__1::unique_ptr.745" = type { %"class.std::__1::__compressed_pair.746" }
%"class.std::__1::__compressed_pair.746" = type { %"struct.std::__1::__compressed_pair_elem.747" }
%"struct.std::__1::__compressed_pair_elem.747" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.748" }
%"class.WTF::Vector.748" = type { %"class.WTF::VectorBuffer.749" }
%"class.WTF::VectorBuffer.749" = type { %"class.WTF::VectorBufferBase.750" }
%"class.WTF::VectorBufferBase.750" = type { %"class.mojo::StructPtr.751"*, i32, i32 }
%"class.mojo::StructPtr.751" = type { %"class.std::__1::unique_ptr.752" }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.755", %"class.WTF::HashMap.762", %"class.WTF::HashMap.767", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.772", i32, %"class.mojo::StructPtr.777", %"class.WTF::Vector.772" }
%"class.mojo::StructPtr.755" = type { %"class.std::__1::unique_ptr.756" }
%"class.std::__1::unique_ptr.756" = type { %"class.std::__1::__compressed_pair.757" }
%"class.std::__1::__compressed_pair.757" = type { %"struct.std::__1::__compressed_pair_elem.758" }
%"struct.std::__1::__compressed_pair_elem.758" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.762" = type { %"class.WTF::HashTable.763" }
%"class.WTF::HashTable.763" = type <{ %"struct.WTF::KeyValuePair.766"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.766" = type opaque
%"class.WTF::HashMap.767" = type { %"class.WTF::HashTable.768" }
%"class.WTF::HashTable.768" = type <{ %"struct.WTF::KeyValuePair.771"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.771" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.777" = type { %"class.std::__1::unique_ptr.778" }
%"class.std::__1::unique_ptr.778" = type { %"class.std::__1::__compressed_pair.779" }
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.772", i8, i8, [6 x i8] }>
%"class.WTF::Vector.772" = type { %"class.WTF::VectorBuffer.773" }
%"class.WTF::VectorBuffer.773" = type { %"class.WTF::VectorBufferBase.774" }
%"class.WTF::VectorBufferBase.774" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.861" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.792", i32 }>
%"class.std::__1::unique_ptr.792" = type { %"class.std::__1::__compressed_pair.793" }
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.795", %"class.absl::optional.796", %"class.absl::optional.801", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.814", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.836", %"class.std::__1::map.847", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.856", i8, %class.scoped_refptr.806, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.857" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.795" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.796" = type { %"class.absl::optional_internal::optional_data.797" }
%"class.absl::optional_internal::optional_data.797" = type { %"class.absl::optional_internal::optional_data_base.798" }
%"class.absl::optional_internal::optional_data_base.798" = type { %"class.absl::optional_internal::optional_data_dtor_base.799" }
%"class.absl::optional_internal::optional_data_dtor_base.799" = type { i8, %union.anon.800 }
%union.anon.800 = type { %"class.base::TimeDelta" }
%"class.absl::optional.801" = type { %"class.absl::optional_internal::optional_data.802" }
%"class.absl::optional_internal::optional_data.802" = type { %"class.absl::optional_internal::optional_data_base.803" }
%"class.absl::optional_internal::optional_data_base.803" = type { %"class.absl::optional_internal::optional_data_dtor_base.804" }
%"class.absl::optional_internal::optional_data_dtor_base.804" = type { i8, %union.anon.805 }
%union.anon.805 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.806, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.807" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.807" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.812 }
%class.scoped_refptr.812 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.874", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.806, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.874" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.813 }
%class.scoped_refptr.813 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.814" = type { %"class.std::__1::__compressed_pair.815" }
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.817", %class.scoped_refptr.818 }
%"class.base::RepeatingCallback.817" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.818 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.819", [4 x i8] }>
%"class.base::RefCountedThreadSafe.819" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.823", %"class.std::__1::unique_ptr.829", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.835" }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.829" = type { %"class.std::__1::__compressed_pair.830" }
%"class.std::__1::__compressed_pair.830" = type { %"struct.std::__1::__compressed_pair_elem.831" }
%"struct.std::__1::__compressed_pair_elem.831" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.835" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.836" = type { %"class.std::__1::__tree.837" }
%"class.std::__1::__tree.837" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.838", %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.std::__1::map.847" = type { %"class.std::__1::__tree.848" }
%"class.std::__1::__tree.848" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.849", %"class.std::__1::__compressed_pair.853" }
%"class.std::__1::__compressed_pair.849" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.853" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.base::OnceCallback.856" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.806 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.861" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.872" = type { %"class.blink::MemberBase.873" }
%"class.blink::MemberBase.873" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.185" = type { %"class.blink::MemberBase.186" }
%"class.blink::MemberBase.186" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.187" = type { %"class.blink::MemberBase.188" }
%"class.blink::MemberBase.188" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.189" = type { %"class.blink::MemberBase.190" }
%"class.blink::MemberBase.190" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.191" = type { %"class.blink::MemberBase.192" }
%"class.blink::MemberBase.192" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.200" = type { %"class.blink::MemberBase.201" }
%"class.blink::MemberBase.201" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.202" = type { %"class.blink::MemberBase.203" }
%"class.blink::MemberBase.203" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.204 }
%class.scoped_refptr.204 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.205" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.208 }
%class.scoped_refptr.208 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.410" }
%"class.blink::HeapHashMap.410" = type { %"class.WTF::HashMap.413" }
%"class.WTF::HashMap.413" = type { %"class.WTF::HashTable.414" }
%"class.WTF::HashTable.414" = type <{ %"struct.WTF::KeyValuePair.416"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.416" = type opaque
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.419" = type { %"class.WTF::HashSet.422" }
%"class.WTF::HashSet.422" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember.425"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.425" = type opaque
%"class.blink::HeapHashSet.426" = type { %"class.WTF::HashSet.429" }
%"class.WTF::HashSet.429" = type { %"class.WTF::HashTable.430" }
%"class.WTF::HashTable.430" = type <{ %"class.blink::WeakMember.432"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.432" = type opaque
%"class.blink::Member.433" = type { %"class.blink::MemberBase.434" }
%"class.blink::MemberBase.434" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.443" = type { %"class.WTF::HashMap.446" }
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type opaque
%"class.WTF::Vector.450" = type { %"class.WTF::VectorBuffer.451" }
%"class.WTF::VectorBuffer.451" = type { %"class.WTF::VectorBufferBase.452" }
%"class.WTF::VectorBufferBase.452" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.461" = type { %"class.WTF::Vector.464" }
%"class.WTF::Vector.464" = type { %"class.WTF::VectorBuffer.465" }
%"class.WTF::VectorBuffer.465" = type { %"class.WTF::VectorBufferBase.466" }
%"class.WTF::VectorBufferBase.466" = type { %"class.blink::Member.467"*, i32, i32 }
%"class.blink::Member.467" = type opaque
%"class.std::__1::unique_ptr.469" = type { %"class.std::__1::__compressed_pair.470" }
%"class.std::__1::__compressed_pair.470" = type { %"struct.std::__1::__compressed_pair_elem.471" }
%"struct.std::__1::__compressed_pair_elem.471" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.475" = type { %"class.WTF::HashSet.478" }
%"class.WTF::HashSet.478" = type { %"class.WTF::HashTable.479" }
%"class.WTF::HashTable.479" = type <{ %"class.blink::WeakMember.481"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.481" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.482", i32, [4 x i8] }>
%"class.WTF::Vector.482" = type { %"class.WTF::VectorBuffer.483" }
%"class.WTF::VectorBuffer.483" = type { %"class.WTF::VectorBufferBase.484" }
%"class.WTF::VectorBufferBase.484" = type { %"struct.std::__1::pair.485"*, i32, i32 }
%"struct.std::__1::pair.485" = type opaque
%"class.blink::Member.488" = type { %"class.blink::MemberBase.489" }
%"class.blink::MemberBase.489" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type { %"class.blink::Member.121", %"class.blink::HeapHashSet.492", %"class.blink::HeapHashSet.498", %"class.blink::HeapHashSet.492", %"class.blink::FloatPoint" }
%"class.blink::HeapHashSet.498" = type { %"class.WTF::HashSet.501" }
%"class.WTF::HashSet.501" = type { %"class.WTF::HashTable.502" }
%"class.WTF::HashTable.502" = type <{ %"class.blink::Member.36"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.492" = type { %"class.WTF::HashSet.495" }
%"class.WTF::HashSet.495" = type { %"class.WTF::HashTable.496" }
%"class.WTF::HashTable.496" = type <{ %"class.blink::Member.117"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.504" = type { %"class.WTF::VectorBuffer.505" }
%"class.WTF::VectorBuffer.505" = type { %"class.WTF::VectorBufferBase.506" }
%"class.WTF::VectorBufferBase.506" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.509" = type { %"class.std::__1::__compressed_pair.510" }
%"class.std::__1::__compressed_pair.510" = type { %"struct.std::__1::__compressed_pair_elem.511" }
%"struct.std::__1::__compressed_pair_elem.511" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.515" = type { %"class.WTF::Vector.518" }
%"class.WTF::Vector.518" = type { %"class.WTF::VectorBuffer.519" }
%"class.WTF::VectorBuffer.519" = type { %"class.WTF::VectorBufferBase.520" }
%"class.WTF::VectorBufferBase.520" = type { %"class.blink::Member.521"*, i32, i32 }
%"class.blink::Member.521" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.121" }
%"class.blink::Member.523" = type { %"class.blink::MemberBase.524" }
%"class.blink::MemberBase.524" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.525" = type { %"class.blink::MemberBase.526" }
%"class.blink::MemberBase.526" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.527" = type { %"class.blink::MemberBase.528" }
%"class.blink::MemberBase.528" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.529" = type { %"class.blink::MemberBase.530" }
%"class.blink::MemberBase.530" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.531" = type { %"class.blink::MemberBase.532" }
%"class.blink::MemberBase.532" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.533" = type { %"class.WTF::HashTable.534" }
%"class.WTF::HashTable.534" = type <{ %"struct.WTF::KeyValuePair.537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.537" = type opaque
%"class.blink::Member.538" = type { %"class.blink::MemberBase.539" }
%"class.blink::MemberBase.539" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.540" = type { %"class.blink::MemberBase.541" }
%"class.blink::MemberBase.541" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.542" = type { %"class.blink::MemberBase.543" }
%"class.blink::MemberBase.543" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.544" = type { %"class.blink::MemberBase.545" }
%"class.blink::MemberBase.545" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.406" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.407", { i64, i64 } }
%"class.blink::WeakMember.407" = type { %"class.blink::MemberBase.122" }
%"class.blink::HeapHashSet.546" = type { %"class.WTF::HashSet.549" }
%"class.WTF::HashSet.549" = type { %"class.WTF::HashTable.550" }
%"class.WTF::HashTable.550" = type <{ %"class.blink::Member.552"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.552" = type opaque
%"class.blink::Member.553" = type { %"class.blink::MemberBase.554" }
%"class.blink::MemberBase.554" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.557" = type { %"class.blink::MemberBase.558" }
%"class.blink::MemberBase.558" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.559" = type { %"class.blink::MemberBase.560" }
%"class.blink::MemberBase.560" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.561" = type { %"class.blink::MemberBase.562" }
%"class.blink::MemberBase.562" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.563" = type { %"class.std::__1::__compressed_pair.564" }
%"class.std::__1::__compressed_pair.564" = type { %"struct.std::__1::__compressed_pair_elem.565" }
%"struct.std::__1::__compressed_pair_elem.565" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", %"class.WTF::HashSet.572", i32, [4 x i8], %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", %"class.WTF::HashMap.576", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashSet.572" = type { %"class.WTF::HashTable.573" }
%"class.WTF::HashTable.573" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.576" = type { %"class.WTF::HashTable.577" }
%"class.WTF::HashTable.577" = type <{ %"struct.WTF::KeyValuePair.580"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.580" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.584" = type { %"class.blink::MemberBase.585" }
%"class.blink::MemberBase.585" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.586" = type { %"class.blink::MemberBase.587" }
%"class.blink::MemberBase.587" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.588" = type { %"class.blink::MemberBase.589" }
%"class.blink::MemberBase.589" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.590" = type { %"class.blink::MemberBase.591" }
%"class.blink::MemberBase.591" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.592" = type { %"class.WTF::VectorBuffer.593" }
%"class.WTF::VectorBuffer.593" = type { %"class.WTF::VectorBufferBase.594" }
%"class.WTF::VectorBufferBase.594" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.597" = type { %"class.WTF::HashMap.600" }
%"class.WTF::HashMap.600" = type { %"class.WTF::HashTable.601" }
%"class.WTF::HashTable.601" = type <{ %"struct.WTF::KeyValuePair.603"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.603" = type opaque
%"class.blink::Member.604" = type { %"class.blink::MemberBase.605" }
%"class.blink::MemberBase.605" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.612" = type { %"class.blink::MemberBase.613" }
%"class.blink::MemberBase.613" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.614" = type { %"class.blink::MemberBase.615" }
%"class.blink::MemberBase.615" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.616" = type { %"class.WTF::HashMap.619" }
%"class.WTF::HashMap.619" = type { %"class.WTF::HashTable.620" }
%"class.WTF::HashTable.620" = type <{ %"struct.WTF::KeyValuePair.622"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.622" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.623" }
%"class.blink::HeapHashSet.623" = type { %"class.WTF::HashSet.626" }
%"class.WTF::HashSet.626" = type { %"class.WTF::HashTable.627" }
%"class.WTF::HashTable.627" = type <{ %"class.blink::WeakMember.629"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.629" = type opaque
%"class.blink::Member.630" = type { %"class.blink::MemberBase.631" }
%"class.blink::MemberBase.631" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.121", %"class.blink::HeapHashSet.639", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.646", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.639" = type { %"class.WTF::HashSet.642" }
%"class.WTF::HashSet.642" = type { %"class.WTF::HashTable.643" }
%"class.WTF::HashTable.643" = type <{ %"class.blink::Member.645"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.645" = type opaque
%"class.blink::HeapTaskRunnerTimer.646" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.647", { i64, i64 } }
%"class.blink::WeakMember.647" = type { %"class.blink::MemberBase.633" }
%"class.blink::WeakMember.634" = type { %"class.blink::MemberBase" }
%"class.blink::Member.635" = type { %"class.blink::MemberBase.636" }
%"class.blink::MemberBase.636" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::SVGZoomAndPan" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.2485", %"class.blink::Member.2487", %"class.blink::Member.2489", %"class.blink::Member.2508", %"class.blink::Member.2510" }
%"class.blink::Member.2485" = type { %"class.blink::MemberBase.2486" }
%"class.blink::MemberBase.2486" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr.876 }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr.876, %"class.blink::UntracedMember.1319", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember.1319" = type { %"class.blink::MemberBase.1320" }
%"class.blink::MemberBase.1320" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1321" }
%"class.std::__1::unique_ptr.1321" = type { %"class.std::__1::__compressed_pair.1322" }
%"class.std::__1::__compressed_pair.1322" = type { %"struct.std::__1::__compressed_pair_elem.1323" }
%"struct.std::__1::__compressed_pair_elem.1323" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.1324", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1330", %"class.std::__1::unique_ptr.1453", i8, %"class.absl::optional.1459", %class.scoped_refptr.1435, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1464" }
%"class.std::__1::unique_ptr.1324" = type { %"class.std::__1::__compressed_pair.1325" }
%"class.std::__1::__compressed_pair.1325" = type { %"struct.std::__1::__compressed_pair_elem.1326" }
%"struct.std::__1::__compressed_pair_elem.1326" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type opaque
%"class.std::__1::unique_ptr.1330" = type { %"class.std::__1::__compressed_pair.1331" }
%"class.std::__1::__compressed_pair.1331" = type { %"struct.std::__1::__compressed_pair_elem.1332" }
%"struct.std::__1::__compressed_pair_elem.1332" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1333, %class.scoped_refptr.1333, %class.scoped_refptr.1333, %class.scoped_refptr.1333, %class.scoped_refptr.1333, %class.scoped_refptr.1333, %class.scoped_refptr.1368, %class.scoped_refptr.1384, %class.scoped_refptr.1385, %class.scoped_refptr.1385, %class.scoped_refptr.1385, %class.scoped_refptr.1385, %class.scoped_refptr.1385, %class.scoped_refptr.1385, %class.scoped_refptr.1425, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1426, %class.scoped_refptr.1449 }
%class.scoped_refptr.1333 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1350" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1334", i8, i8, %class.scoped_refptr.1336, i32, i32 }
%"class.WTF::RefCounted.1334" = type { %"class.base::RefCounted.1335" }
%"class.base::RefCounted.1335" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1336 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1343, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1344", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1337" }
%"class.std::__1::unique_ptr.1337" = type { %"class.std::__1::__compressed_pair.1338" }
%"class.std::__1::__compressed_pair.1338" = type { %"struct.std::__1::__compressed_pair_elem.1339" }
%"struct.std::__1::__compressed_pair_elem.1339" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.1343 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1369", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1369" = type { %"class.WTF::RefCounted.1370", i8, i8, %class.scoped_refptr.1343, i32, i32 }
%"class.WTF::RefCounted.1370" = type { %"class.base::RefCounted.1371" }
%"class.base::RefCounted.1371" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1372" }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::IntSize" = type { i32, i32 }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.1372" = type { %"class.absl::optional_internal::optional_data.1373" }
%"class.absl::optional_internal::optional_data.1373" = type { %"class.absl::optional_internal::optional_data_base.1374" }
%"class.absl::optional_internal::optional_data_base.1374" = type { %"class.absl::optional_internal::optional_data_dtor_base.1375" }
%"class.absl::optional_internal::optional_data_dtor_base.1375" = type { i8, %union.anon.1376 }
%union.anon.1376 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector.1377", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector.1377" = type { %"class.std::__1::__vector_base.1378" }
%"class.std::__1::__vector_base.1378" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1379" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1379" = type { %"struct.std::__1::__compressed_pair_elem.1380" }
%"struct.std::__1::__compressed_pair_elem.1380" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1344" = type { %"class.std::__1::__compressed_pair.1345" }
%"class.std::__1::__compressed_pair.1345" = type { %"struct.std::__1::__compressed_pair_elem.1346" }
%"struct.std::__1::__compressed_pair_elem.1346" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.1350" = type { %"class.std::__1::__compressed_pair.1351" }
%"class.std::__1::__compressed_pair.1351" = type { %"struct.std::__1::__compressed_pair_elem.1352" }
%"struct.std::__1::__compressed_pair_elem.1352" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1353", %"class.std::__1::unique_ptr.1359", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1353" = type { %"class.std::__1::__compressed_pair.1354" }
%"class.std::__1::__compressed_pair.1354" = type { %"struct.std::__1::__compressed_pair_elem.1355" }
%"struct.std::__1::__compressed_pair_elem.1355" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1359" = type { %"class.std::__1::__compressed_pair.1360" }
%"class.std::__1::__compressed_pair.1360" = type { %"struct.std::__1::__compressed_pair_elem.1361" }
%"struct.std::__1::__compressed_pair_elem.1361" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1368 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1384 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1385 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1386" }
%"class.blink::PaintPropertyNode.1386" = type { %"class.WTF::RefCounted.1387", i8, i8, %class.scoped_refptr.1389, i32, i32 }
%"class.WTF::RefCounted.1387" = type { %"class.base::RefCounted.1388" }
%"class.base::RefCounted.1388" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1389 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1336, %class.scoped_refptr.1390, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1412", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1390 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1427" }
%"class.blink::PaintPropertyNode.1427" = type { %"class.WTF::RefCounted.1428", i8, i8, %class.scoped_refptr.1390, i32, i32 }
%"class.WTF::RefCounted.1428" = type { %"class.base::RefCounted.1429" }
%"class.base::RefCounted.1429" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1391" }
%"class.std::__1::vector.1391" = type { %"class.std::__1::__vector_base.1392" }
%"class.std::__1::__vector_base.1392" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1407" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1393, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1400", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%class.sk_sp.1393 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1394, i32, %"class.absl::optional.1395", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.91" }>
%class.sk_sp.1394 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1395" = type { %"class.absl::optional_internal::optional_data.1396" }
%"class.absl::optional_internal::optional_data.1396" = type { %"class.absl::optional_internal::optional_data_base.1397" }
%"class.absl::optional_internal::optional_data_base.1397" = type { %"class.absl::optional_internal::optional_data_dtor_base.1398" }
%"class.absl::optional_internal::optional_data_dtor_base.1398" = type { i8, %union.anon.1399 }
%union.anon.1399 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::vector.1400" = type { %"class.std::__1::__vector_base.1401" }
%"class.std::__1::__vector_base.1401" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1402" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.std::__1::__compressed_pair.1402" = type { %"struct.std::__1::__compressed_pair_elem.1403" }
%"struct.std::__1::__compressed_pair_elem.1403" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1407" = type { %"struct.std::__1::__compressed_pair_elem.1408" }
%"struct.std::__1::__compressed_pair_elem.1408" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1412" = type { %"class.std::__1::__compressed_pair.1413" }
%"class.std::__1::__compressed_pair.1413" = type { %"struct.std::__1::__compressed_pair_elem.1414" }
%"struct.std::__1::__compressed_pair_elem.1414" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1418" }
%"class.std::__1::vector.1418" = type { %"class.std::__1::__vector_base.1419" }
%"class.std::__1::__vector_base.1419" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1420" }
%"class.std::__1::__compressed_pair.1420" = type { %"struct.std::__1::__compressed_pair_elem.1421" }
%"struct.std::__1::__compressed_pair_elem.1421" = type { i32* }
%class.scoped_refptr.1425 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1426 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1438" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1336, %"class.absl::optional.1430", %class.scoped_refptr.1435, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1430" = type { %"class.absl::optional_internal::optional_data.1431" }
%"class.absl::optional_internal::optional_data.1431" = type { %"class.absl::optional_internal::optional_data_base.1432" }
%"class.absl::optional_internal::optional_data_base.1432" = type { %"class.absl::optional_internal::optional_data_dtor_base.1433" }
%"class.absl::optional_internal::optional_data_dtor_base.1433" = type { i8, [3 x i8], %union.anon.1434 }
%union.anon.1434 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1438" = type { %"class.std::__1::__compressed_pair.1439" }
%"class.std::__1::__compressed_pair.1439" = type { %"struct.std::__1::__compressed_pair_elem.1440" }
%"struct.std::__1::__compressed_pair_elem.1440" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1441", i32, [4 x i8] }>
%"class.WTF::Vector.1441" = type { %"class.WTF::VectorBuffer.1442" }
%"class.WTF::VectorBuffer.1442" = type { %"class.WTF::VectorBufferBase.1443" }
%"class.WTF::VectorBufferBase.1443" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1449 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1453" = type { %"class.std::__1::__compressed_pair.1454" }
%"class.std::__1::__compressed_pair.1454" = type { %"struct.std::__1::__compressed_pair_elem.1455" }
%"struct.std::__1::__compressed_pair_elem.1455" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1336, %class.scoped_refptr.1390, %class.scoped_refptr.1389 }
%"class.absl::optional.1459" = type { %"class.absl::optional_internal::optional_data.1460" }
%"class.absl::optional_internal::optional_data.1460" = type { %"class.absl::optional_internal::optional_data_base.1461" }
%"class.absl::optional_internal::optional_data_base.1461" = type { %"class.absl::optional_internal::optional_data_dtor_base.1462" }
%"class.absl::optional_internal::optional_data_dtor_base.1462" = type { i8, %union.anon.1463 }
%union.anon.1463 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1435 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1436", [4 x i8] }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.1242, i32, %"struct.std::__1::atomic.98", %"struct.std::__1::atomic.98", i8, i8 }>
%class.sk_sp.1242 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1243, %class.SkTDArray.1244, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.91" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%class.SkTDArray.1243 = type { i8*, i32, i32 }
%class.SkTDArray.1244 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.1245 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.91", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.98" }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.1245 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.400", [3 x i8] }
%"class.WTF::RefCounted.1436" = type { %"class.base::RefCounted.1437" }
%"class.base::RefCounted.1437" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1464" = type { %"class.std::__1::__compressed_pair.1465" }
%"class.std::__1::__compressed_pair.1465" = type { %"struct.std::__1::__compressed_pair_elem.1466" }
%"struct.std::__1::__compressed_pair_elem.1466" = type { %"class.blink::FragmentData"* }
%class.scoped_refptr.876 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.1304", %"class.std::__1::unique_ptr.1306" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.941", %"class.blink::DataRef.1021", %"class.blink::DataRef.1025", %"class.blink::DataRef.1220", %"class.blink::DataRef.1287", %"class.blink::DataRef.1291", %"class.blink::DataRef.1295", %"class.blink::DataRef.1299", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.877 }
%class.scoped_refptr.877 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted.878", %"class.blink::DataRef.880", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted.878" = type { %"class.base::RefCounted.879" }
%"class.base::RefCounted.879" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.880" = type { %class.scoped_refptr.881 }
%class.scoped_refptr.881 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.882", %"class.blink::Font" }
%"class.WTF::RefCounted.882" = type { %"class.base::RefCounted.883" }
%"class.base::RefCounted.883" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.910 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.885, %class.scoped_refptr.893, %class.scoped_refptr.903, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.909 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.884 }
%class.scoped_refptr.884 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1475", [4 x i8] }>
%"class.WTF::RefCounted.1475" = type { %"class.base::RefCounted.1476" }
%"class.base::RefCounted.1476" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.885 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.891", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector.886" }
%"class.WTF::Vector.886" = type { %"class.WTF::VectorBuffer.887" }
%"class.WTF::VectorBuffer.887" = type { %"class.WTF::VectorBufferBase.888" }
%"class.WTF::VectorBufferBase.888" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.891" = type { %"class.base::RefCounted.892" }
%"class.base::RefCounted.892" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.893 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.894", %"class.WTF::RefCounted.901", [4 x i8] }>
%"class.blink::FontSettings.894" = type { %"class.WTF::Vector.895" }
%"class.WTF::Vector.895" = type { %"class.WTF::VectorBuffer.896" }
%"class.WTF::VectorBuffer.896" = type { %"class.WTF::VectorBufferBase.897" }
%"class.WTF::VectorBufferBase.897" = type { %"class.blink::FontTagValuePair.898"*, i32, i32 }
%"class.blink::FontTagValuePair.898" = type { i32, float }
%"class.WTF::RefCounted.901" = type { %"class.base::RefCounted.902" }
%"class.base::RefCounted.902" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.903 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.904", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.906, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.904" = type { %"class.base::RefCounted.905" }
%"class.base::RefCounted.905" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.906 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.907", [4 x i8] }>
%"class.WTF::RefCounted.907" = type { %"class.base::RefCounted.908" }
%"class.base::RefCounted.908" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.909 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.910 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.911", %"class.WTF::Vector.913", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.911" = type { %"class.base::RefCounted.912" }
%"class.base::RefCounted.912" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.913" = type { %"class.WTF::VectorBuffer.914" }
%"class.WTF::VectorBuffer.914" = type { %"class.WTF::VectorBufferBase.915", [8 x i8] }
%"class.WTF::VectorBufferBase.915" = type { %class.scoped_refptr.916*, i32, i32 }
%class.scoped_refptr.916 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.917", [4 x i8] }>
%"class.WTF::RefCounted.917" = type { %"class.base::RefCounted.918" }
%"class.base::RefCounted.918" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr.927", %class.scoped_refptr.934, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.917" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional.921", %"class.absl::optional.921", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional.921" = type { %"class.absl::optional_internal::optional_data.922" }
%"class.absl::optional_internal::optional_data.922" = type { %"class.absl::optional_internal::optional_data_base.923" }
%"class.absl::optional_internal::optional_data_base.923" = type { %"class.absl::optional_internal::optional_data_dtor_base.924" }
%"class.absl::optional_internal::optional_data_dtor_base.924" = type { i8, %union.anon.925 }
%union.anon.925 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.926, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.91" }
%class.SkFontStyle = type { i32 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.926 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr.927" = type { %"class.std::__1::__compressed_pair.928" }
%"class.std::__1::__compressed_pair.928" = type { %"struct.std::__1::__compressed_pair_elem.929" }
%"struct.std::__1::__compressed_pair_elem.929" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.930, %class.scoped_refptr.930 }
%class.scoped_refptr.930 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.934 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.935", [4 x i8] }>
%"class.WTF::RefCounted.935" = type { %"class.base::RefCounted.936" }
%"class.base::RefCounted.936" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.937" }
%"class.blink::PersistentBase.937" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.938" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr.938" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.939 }
%class.scoped_refptr.939 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.940, i8, i8, i8, i8 }>
%union.anon.940 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.941" = type { %class.scoped_refptr.942 }
%class.scoped_refptr.942 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.943", [4 x i8], %"class.blink::DataRef.945", %"class.blink::DataRef.986", %"class.WTF::Vector.990", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.994, %class.scoped_refptr.1003, %"class.blink::Persistent.1011", %"class.blink::Persistent.1013", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.943" = type { %"class.base::RefCounted.944" }
%"class.base::RefCounted.944" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.945" = type { %class.scoped_refptr.946 }
%class.scoped_refptr.946 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.947", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.949, %class.scoped_refptr.956, %"class.blink::Persistent.973", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.947" = type { %"class.base::RefCounted.948" }
%"class.base::RefCounted.948" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.949 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.950", %"class.WTF::Vector.951" }
%"class.base::RefCountedThreadSafe.950" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.951" = type { %"class.WTF::VectorBuffer.952" }
%"class.WTF::VectorBuffer.952" = type { %"class.WTF::VectorBufferBase.953" }
%"class.WTF::VectorBufferBase.953" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.956 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.957", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.957" = type { %"class.base::RefCounted.958" }
%"class.base::RefCounted.958" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap.959", %"class.blink::Persistent.964" }
%"class.WTF::HashMap.959" = type { %"class.WTF::HashTable.960" }
%"class.WTF::HashTable.960" = type <{ %"struct.WTF::KeyValuePair.963"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.963" = type { %"class.WTF::AtomicString", %class.scoped_refptr.2471 }
%class.scoped_refptr.2471 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.2472", %"class.WTF::Vector.772", %"class.WTF::Vector.2474", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.2472" = type { %"class.base::RefCounted.2473" }
%"class.base::RefCounted.2473" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2474" = type { %"class.WTF::VectorBuffer.2475" }
%"class.WTF::VectorBuffer.2475" = type { %"class.WTF::VectorBufferBase.2476" }
%"class.WTF::VectorBufferBase.2476" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.2477 }
%union.anon.2477 = type { double }
%"class.blink::Persistent.964" = type { %"class.blink::PersistentBase.965" }
%"class.blink::PersistentBase.965" = type { %"class.blink::HeapHashMap.966"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapHashMap.966" = type { %"class.WTF::HashMap.969" }
%"class.WTF::HashMap.969" = type { %"class.WTF::HashTable.970" }
%"class.WTF::HashTable.970" = type <{ %"struct.WTF::KeyValuePair.972"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.972" = type opaque
%"class.blink::Persistent.973" = type { %"class.blink::PersistentBase.974" }
%"class.blink::PersistentBase.974" = type { %"class.blink::HeapVector.975"*, %"class.blink::PersistentNodePtr" }
%"class.blink::HeapVector.975" = type { %"class.WTF::Vector.978" }
%"class.WTF::Vector.978" = type { %"class.WTF::VectorBuffer.979" }
%"class.WTF::VectorBuffer.979" = type { %"class.WTF::VectorBufferBase.980" }
%"class.WTF::VectorBufferBase.980" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member.981", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member.981" = type { %"class.blink::MemberBase.982" }
%"class.blink::MemberBase.982" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::DataRef.986" = type { %class.scoped_refptr.987 }
%class.scoped_refptr.987 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.988", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.988" = type { %"class.base::RefCounted.989" }
%"class.base::RefCounted.989" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.990" = type { %"class.WTF::VectorBuffer.991" }
%"class.WTF::VectorBuffer.991" = type { %"class.WTF::VectorBufferBase" }
%class.scoped_refptr.994 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.995", %"class.WTF::Vector.997" }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.997" = type { %"class.WTF::VectorBuffer.998" }
%"class.WTF::VectorBuffer.998" = type { %"class.WTF::VectorBufferBase.999" }
%"class.WTF::VectorBufferBase.999" = type { %"struct.std::__1::pair.1000"*, i32, i32 }
%"struct.std::__1::pair.1000" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.1003 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.1004", [4 x i8], %"class.WTF::Vector.1006" }
%"class.WTF::RefCounted.1004" = type { %"class.base::RefCounted.1005" }
%"class.base::RefCounted.1005" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1006" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.1008", [28 x i8] }>
%"class.WTF::VectorBufferBase.1008" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.1011" = type { %"class.blink::PersistentBase.1012" }
%"class.blink::PersistentBase.1012" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr" }
%"class.blink::Persistent.1013" = type { %"class.blink::PersistentBase.1014" }
%"class.blink::PersistentBase.1014" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.1017", %"class.blink::Member.1019" }
%"class.blink::Member.1017" = type { %"class.blink::MemberBase.1018" }
%"class.blink::MemberBase.1018" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.1019" = type { %"class.blink::MemberBase.1020" }
%"class.blink::MemberBase.1020" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.1021" = type { %class.scoped_refptr.1022 }
%class.scoped_refptr.1022 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.1023", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.1023" = type { %"class.base::RefCounted.1024" }
%"class.base::RefCounted.1024" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.1025" = type { %class.scoped_refptr.1026 }
%class.scoped_refptr.1026 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.1027", [4 x i8], %"class.blink::DataRef.1029", %"class.blink::DataRef.1095", %"class.blink::TransformOperations", %class.scoped_refptr.1003, %"class.blink::Persistent.1214", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.1027" = type { %"class.base::RefCounted.1028" }
%"class.base::RefCounted.1028" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1029" = type { %class.scoped_refptr.1030 }
%class.scoped_refptr.1030 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.1031", [4 x i8], %"class.blink::DataRef.1033", %"class.blink::Persistent.1071", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.1031" = type { %"class.base::RefCounted.1032" }
%"class.base::RefCounted.1032" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1033" = type { %class.scoped_refptr.1034 }
%class.scoped_refptr.1034 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.1035", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.1053, %class.scoped_refptr.1056, %class.scoped_refptr.1059, %class.scoped_refptr.1062, %class.scoped_refptr.1063, %class.scoped_refptr.1064, %"class.blink::Persistent.1071", %"class.blink::Persistent.1086", %"class.absl::optional.1090", %"class.absl::optional.1090", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.1035" = type { %"class.base::RefCounted.1036" }
%"class.base::RefCounted.1036" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.1037", %"class.std::__1::unique_ptr.1042" }
%"class.WTF::Vector.1037" = type { %"class.WTF::VectorBuffer.1038" }
%"class.WTF::VectorBuffer.1038" = type { %"class.WTF::VectorBufferBase.1039" }
%"class.WTF::VectorBufferBase.1039" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1042" = type { %"class.std::__1::__compressed_pair.1043" }
%"class.std::__1::__compressed_pair.1043" = type { %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.1045", %"class.WTF::Vector.1037", i32, i32 }
%"class.WTF::Vector.1045" = type { %"class.WTF::VectorBuffer.1046" }
%"class.WTF::VectorBuffer.1046" = type { %"class.WTF::VectorBufferBase.1047" }
%"class.WTF::VectorBufferBase.1047" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.1053 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1054", [4 x i8] }>
%"class.WTF::RefCounted.1054" = type { %"class.base::RefCounted.1055" }
%"class.base::RefCounted.1055" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1056 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.1057", [4 x i8] }>
%"class.WTF::RefCounted.1057" = type { %"class.base::RefCounted.1058" }
%"class.base::RefCounted.1058" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1059 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1060" }>
%"class.WTF::RefCounted.1060" = type { %"class.base::RefCounted.1061" }
%"class.base::RefCounted.1061" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.1062 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.1063 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.1064 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.1065", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.1065" = type { %"class.base::RefCounted.1066" }
%"class.base::RefCounted.1066" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.1067" }
%"class.blink::DataRef.1067" = type { %class.scoped_refptr.1068 }
%class.scoped_refptr.1068 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.1011", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.1069" }
%"class.WTF::RefCounted.1069" = type { %"class.base::RefCounted.1070" }
%"class.base::RefCounted.1070" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.1086" = type { %"class.blink::PersistentBase.1087" }
%"class.blink::PersistentBase.1087" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.1056, %"class.blink::Member.981", i32, [4 x i8] }>
%"class.absl::optional.1090" = type { %"class.absl::optional_internal::optional_data.1091" }
%"class.absl::optional_internal::optional_data.1091" = type { %"class.absl::optional_internal::optional_data_base.1092" }
%"class.absl::optional_internal::optional_data_base.1092" = type { %"class.absl::optional_internal::optional_data_dtor_base.1093" }
%"class.absl::optional_internal::optional_data_dtor_base.1093" = type { i8, [3 x i8], %union.anon.1094 }
%union.anon.1094 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.1071" = type { %"class.blink::PersistentBase.1072" }
%"class.blink::PersistentBase.1072" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.1075" }
%"class.blink::HeapVector.1075" = type { %"class.WTF::Vector.1078" }
%"class.WTF::Vector.1078" = type { %"class.WTF::VectorBuffer.1079" }
%"class.WTF::VectorBuffer.1079" = type { %"class.WTF::VectorBufferBase.1080" }
%"class.WTF::VectorBufferBase.1080" = type { %"class.blink::Member.1081"*, i32, i32 }
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.1095" = type { %class.scoped_refptr.1096 }
%class.scoped_refptr.1096 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.1097", %"class.blink::DataRef.1099", %"class.blink::DataRef.1103", %"class.blink::DataRef.1112", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.1131", %"class.std::__1::unique_ptr.1142", %"class.std::__1::unique_ptr.1180", %"class.std::__1::unique_ptr.1191", %"class.std::__1::unique_ptr.1202", %"class.WTF::Vector.772", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.1097" = type { %"class.base::RefCounted.1098" }
%"class.base::RefCounted.1098" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1099" = type { %class.scoped_refptr.1100 }
%class.scoped_refptr.1100 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.1101", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1101" = type { %"class.base::RefCounted.1102" }
%"class.base::RefCounted.1102" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1103" = type { %class.scoped_refptr.1104 }
%class.scoped_refptr.1104 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.1105", [4 x i8], %"class.WTF::Vector.1107", i8, [7 x i8] }>
%"class.WTF::RefCounted.1105" = type { %"class.base::RefCounted.1106" }
%"class.base::RefCounted.1106" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.1107" = type { %"class.WTF::VectorBuffer.1108" }
%"class.WTF::VectorBuffer.1108" = type { %"class.WTF::VectorBufferBase.1109" }
%"class.WTF::VectorBufferBase.1109" = type { i32*, i32, i32 }
%"class.blink::DataRef.1112" = type { %class.scoped_refptr.1113 }
%class.scoped_refptr.1113 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.1114", [4 x i8], %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1116", %"class.WTF::HashMap.1121", %"class.WTF::HashMap.1121", %"class.WTF::HashMap.1121", %"class.WTF::HashMap.1121", %"class.WTF::HashMap.1126", %"class.WTF::Vector.1037", %"class.WTF::Vector.1037", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.1114" = type { %"class.base::RefCounted.1115" }
%"class.base::RefCounted.1115" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.1116" = type { %"class.WTF::HashTable.1117" }
%"class.WTF::HashTable.1117" = type <{ %"struct.WTF::KeyValuePair.1120"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1120" = type { %"class.WTF::String", %"class.WTF::Vector.2461" }
%"class.WTF::Vector.2461" = type { %"class.WTF::VectorBuffer.2462" }
%"class.WTF::VectorBuffer.2462" = type { %"class.WTF::VectorBufferBase.2463" }
%"class.WTF::VectorBufferBase.2463" = type { i64*, i32, i32 }
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1125"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1125" = type { i64, %"class.WTF::Vector.772" }
%"class.WTF::HashMap.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"struct.WTF::KeyValuePair.1130"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1130" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.1131" = type { %"class.std::__1::__compressed_pair.1132" }
%"class.std::__1::__compressed_pair.1132" = type { %"struct.std::__1::__compressed_pair_elem.1133" }
%"struct.std::__1::__compressed_pair_elem.1133" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.1134" }
%"class.WTF::HashMap.1134" = type { %"class.WTF::HashTable.1135" }
%"class.WTF::HashTable.1135" = type <{ %"struct.WTF::KeyValuePair.1138"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1138" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2466", %"class.absl::optional.2466", %"class.absl::optional.2466" }
%"class.absl::optional.2466" = type { %"class.absl::optional_internal::optional_data.2467" }
%"class.absl::optional_internal::optional_data.2467" = type { %"class.absl::optional_internal::optional_data_base.2468" }
%"class.absl::optional_internal::optional_data_base.2468" = type { %"class.absl::optional_internal::optional_data_dtor_base.2469" }
%"class.absl::optional_internal::optional_data_dtor_base.2469" = type { i8, %union.anon.2470 }
%union.anon.2470 = type { i32 }
%"class.std::__1::unique_ptr.1142" = type { %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.990", %"class.WTF::Vector.1157", %"class.WTF::Vector.1145", %"class.WTF::Vector.1162", %"class.WTF::Vector.1167", %"class.WTF::Vector.1172" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.1145", %"class.WTF::Vector.1145", %"class.WTF::Vector.1150" }
%"class.WTF::Vector.1150" = type { %"class.WTF::VectorBuffer.1151" }
%"class.WTF::VectorBuffer.1151" = type { %"class.WTF::VectorBufferBase.1152" }
%"class.WTF::VectorBufferBase.1152" = type { %class.scoped_refptr.1153*, i32, i32 }
%class.scoped_refptr.1153 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.1154" }
%"class.base::RefCountedThreadSafe.1154" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1157" = type { %"class.WTF::VectorBuffer.1158" }
%"class.WTF::VectorBuffer.1158" = type { %"class.WTF::VectorBufferBase.1159" }
%"class.WTF::VectorBufferBase.1159" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.1145" = type { %"class.WTF::VectorBuffer.1146" }
%"class.WTF::VectorBuffer.1146" = type { %"class.WTF::VectorBufferBase.1147" }
%"class.WTF::VectorBufferBase.1147" = type { double*, i32, i32 }
%"class.WTF::Vector.1162" = type { %"class.WTF::VectorBuffer.1163" }
%"class.WTF::VectorBuffer.1163" = type { %"class.WTF::VectorBufferBase.1164" }
%"class.WTF::VectorBufferBase.1164" = type { i32*, i32, i32 }
%"class.WTF::Vector.1167" = type { %"class.WTF::VectorBuffer.1168" }
%"class.WTF::VectorBuffer.1168" = type { %"class.WTF::VectorBufferBase.1169" }
%"class.WTF::VectorBufferBase.1169" = type { i32*, i32, i32 }
%"class.WTF::Vector.1172" = type { %"class.WTF::VectorBuffer.1173" }
%"class.WTF::VectorBuffer.1173" = type { %"class.WTF::VectorBufferBase.1174" }
%"class.WTF::VectorBufferBase.1174" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1180" = type { %"class.std::__1::__compressed_pair.1181" }
%"class.std::__1::__compressed_pair.1181" = type { %"struct.std::__1::__compressed_pair_elem.1182" }
%"struct.std::__1::__compressed_pair_elem.1182" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.1183" }
%"class.WTF::Vector.1183" = type { %"class.WTF::VectorBuffer.1184" }
%"class.WTF::VectorBuffer.1184" = type { %"class.WTF::VectorBufferBase.1185" }
%"class.WTF::VectorBufferBase.1185" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.1191" = type { %"class.std::__1::__compressed_pair.1192" }
%"class.std::__1::__compressed_pair.1192" = type { %"struct.std::__1::__compressed_pair_elem.1193" }
%"struct.std::__1::__compressed_pair_elem.1193" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.1194" }
%"class.WTF::Vector.1194" = type { %"class.WTF::VectorBuffer.1195" }
%"class.WTF::VectorBuffer.1195" = type { %"class.WTF::VectorBufferBase.1196" }
%"class.WTF::VectorBufferBase.1196" = type { %"class.blink::Persistent.1011"*, i32, i32 }
%"class.std::__1::unique_ptr.1202" = type { %"class.std::__1::__compressed_pair.1203" }
%"class.std::__1::__compressed_pair.1203" = type { %"struct.std::__1::__compressed_pair_elem.1204" }
%"struct.std::__1::__compressed_pair_elem.1204" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.1011", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.1208" }
%"class.WTF::Vector.1208" = type { %"class.WTF::VectorBuffer.1209" }
%"class.WTF::VectorBuffer.1209" = type { %"class.WTF::VectorBufferBase.1210" }
%"class.WTF::VectorBufferBase.1210" = type { %class.scoped_refptr.1211*, i32, i32 }
%class.scoped_refptr.1211 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.1060", [4 x i8] }>
%"class.blink::Persistent.1214" = type { %"class.blink::PersistentBase.1215" }
%"class.blink::PersistentBase.1215" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.1218" }
%"class.blink::Member.1218" = type { %"class.blink::MemberBase.1219" }
%"class.blink::MemberBase.1219" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.1220" = type { %class.scoped_refptr.1221 }
%class.scoped_refptr.1221 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.1222", [4 x i8], %"class.blink::DataRef.1224", %"class.blink::DataRef.1228", %"class.blink::DataRef.1249", %"class.blink::DataRef.1267", %"class.blink::DataRef.1279", %"class.blink::DataRef.1283", %class.scoped_refptr.1253, i32, [4 x i8] }>
%"class.WTF::RefCounted.1222" = type { %"class.base::RefCounted.1223" }
%"class.base::RefCounted.1223" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1224" = type { %class.scoped_refptr.1225 }
%class.scoped_refptr.1225 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.1226", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.1226" = type { %"class.base::RefCounted.1227" }
%"class.base::RefCounted.1227" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1228" = type { %class.scoped_refptr.1229 }
%class.scoped_refptr.1229 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.1230", %class.scoped_refptr.1232, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.1230" = type { %"class.base::RefCounted.1231" }
%"class.base::RefCounted.1231" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1232 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.1233", %"class.std::__1::unique_ptr.1239", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.1057" }>
%"class.std::__1::unique_ptr.1233" = type { %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.1235" }
%"struct.std::__1::__compressed_pair_elem.1235" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.1239" = type { %"class.std::__1::__compressed_pair.1240" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.1241" }
%"struct.std::__1::__compressed_pair_elem.1241" = type { %"class.blink::Path"* }
%"class.blink::DataRef.1249" = type { %class.scoped_refptr.1250 }
%class.scoped_refptr.1250 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.1251", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.1251" = type { %"class.base::RefCounted.1252" }
%"class.base::RefCounted.1252" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.1253, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.1267" = type { %class.scoped_refptr.1268 }
%class.scoped_refptr.1268 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.1269", [4 x i8], %class.scoped_refptr.1271, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.1269" = type { %"class.base::RefCounted.1270" }
%"class.base::RefCounted.1270" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1271 = type { %"class.base::RefCountedData.1272"* }
%"class.base::RefCountedData.1272" = type { %"class.base::RefCountedThreadSafe.1273", %"class.WTF::Vector.1274" }
%"class.base::RefCountedThreadSafe.1273" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.1279" = type { %class.scoped_refptr.1280 }
%class.scoped_refptr.1280 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.1281", %class.scoped_refptr.1253, %class.scoped_refptr.1253, %class.scoped_refptr.1253 }
%"class.WTF::RefCounted.1281" = type { %"class.base::RefCounted.1282" }
%"class.base::RefCounted.1282" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1283" = type { %class.scoped_refptr.1284 }
%class.scoped_refptr.1284 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.1285", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1285" = type { %"class.base::RefCounted.1286" }
%"class.base::RefCounted.1286" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1253 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.1254", %"class.blink::Persistent.1256", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.1254" = type { %"class.base::RefCounted.1255" }
%"class.base::RefCounted.1255" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1256" = type { %"class.blink::PersistentBase.1257" }
%"class.blink::PersistentBase.1257" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr" }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.138", %"class.blink::HeapHashMap.1260" }
%"class.blink::HeapHashMap.1260" = type { %"class.WTF::HashMap.1263" }
%"class.WTF::HashMap.1263" = type { %"class.WTF::HashTable.1264" }
%"class.WTF::HashTable.1264" = type <{ %"struct.WTF::KeyValuePair.1266"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1266" = type opaque
%"class.blink::DataRef.1287" = type { %class.scoped_refptr.1288 }
%class.scoped_refptr.1288 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.1289", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.1289" = type { %"class.base::RefCounted.1290" }
%"class.base::RefCounted.1290" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.1291" = type { %class.scoped_refptr.1292 }
%class.scoped_refptr.1292 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.1293", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.1293" = type { %"class.base::RefCounted.1294" }
%"class.base::RefCounted.1294" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1295" = type { %class.scoped_refptr.1296 }
%class.scoped_refptr.1296 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.1297", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.1297" = type { %"class.base::RefCounted.1298" }
%"class.base::RefCounted.1298" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1299" = type { %class.scoped_refptr.1300 }
%class.scoped_refptr.1300 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.1301", %class.scoped_refptr.1303 }
%"class.WTF::RefCounted.1301" = type { %"class.base::RefCounted.1302" }
%"class.base::RefCounted.1302" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1303 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1473", %"class.blink::StyleVariables", %class.scoped_refptr.1303 }
%"class.WTF::RefCounted.1473" = type { %"class.base::RefCounted.1474" }
%"class.base::RefCounted.1474" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.1304" = type { %"class.base::RefCounted.1305" }
%"class.base::RefCounted.1305" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.1306" = type { %"class.std::__1::__compressed_pair.1307" }
%"class.std::__1::__compressed_pair.1307" = type { %"struct.std::__1::__compressed_pair_elem.1308" }
%"struct.std::__1::__compressed_pair_elem.1308" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.1309" }
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.WTF::Vector.1312"* }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.2481" }
%"class.WTF::VectorBuffer.2481" = type { %"class.WTF::VectorBufferBase.2482", [32 x i8] }
%"class.WTF::VectorBufferBase.2482" = type { %class.scoped_refptr.876*, i32, i32 }
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.2489" = type { %"class.blink::MemberBase.2490" }
%"class.blink::MemberBase.2490" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.2493", %"class.blink::HeapHashSet.2502" }
%"class.blink::HeapVector.2493" = type { %"class.WTF::Vector.2496" }
%"class.WTF::Vector.2496" = type { %"class.WTF::VectorBuffer.2497" }
%"class.WTF::VectorBuffer.2497" = type { %"class.WTF::VectorBufferBase.2498" }
%"class.WTF::VectorBufferBase.2498" = type { %"class.blink::Member.2499"*, i32, i32 }
%"class.blink::Member.2499" = type { %"class.blink::MemberBase.2500" }
%"class.blink::MemberBase.2500" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.2502" = type { %"class.WTF::HashSet.2505" }
%"class.WTF::HashSet.2505" = type { %"class.WTF::HashTable.2506" }
%"class.WTF::HashTable.2506" = type <{ %"class.blink::Member.2499"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.2510" = type { %"class.blink::MemberBase.2511" }
%"class.blink::MemberBase.2511" = type { %"class.blink::HeapHashSet.2512"* }
%"class.blink::HeapHashSet.2512" = type opaque
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.blink::SVGPointTearOff" = type { %"class.blink::SVGPropertyTearOff.875" }
%"class.blink::SVGPropertyTearOff.875" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.80" }
%"struct.blink::Element::AttributeModificationParams" = type <{ %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"*, i32, [4 x i8] }>
%"class.blink::JSEventHandlerForContentAttribute" = type { %"class.blink::JSEventHandler.base", i8, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %"class.WTF::TextPosition", %"class.v8::Isolate"* }
%"class.blink::JSEventHandler.base" = type <{ %"class.blink::JSBasedEventListener", %"class.blink::Member.1484", i32 }>
%"class.blink::JSBasedEventListener" = type { %"class.blink::EventListener" }
%"class.blink::EventListener" = type { %"class.blink::NameClient", %"class.blink::probe::AsyncTaskId" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.1479" }
%"class.absl::optional.1479" = type { %"class.absl::optional_internal::optional_data.1480" }
%"class.absl::optional_internal::optional_data.1480" = type { %"class.absl::optional_internal::optional_data_base.1481" }
%"class.absl::optional_internal::optional_data_base.1481" = type { %"class.absl::optional_internal::optional_data_dtor_base.1482" }
%"class.absl::optional_internal::optional_data_dtor_base.1482" = type { i8, %union.anon.1483 }
%union.anon.1483 = type { i64 }
%"class.blink::Member.1484" = type { %"class.blink::MemberBase.1485" }
%"class.blink::MemberBase.1485" = type { %"class.blink::V8EventHandlerNonNull"* }
%"class.blink::V8EventHandlerNonNull" = type { %"class.blink::CallbackFunctionBase" }
%"class.blink::CallbackFunctionBase" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference", %"class.blink::Member.1488", %"class.blink::Member.1488" }
%"class.blink::Member.1488" = type { %"class.blink::MemberBase.1489" }
%"class.blink::MemberBase.1489" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1492, %"class.blink::Member.1493", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1492 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1493" = type { %"class.blink::MemberBase.1494" }
%"class.blink::MemberBase.1494" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1495" }
%"class.blink::Persistent.1495" = type { %"class.blink::PersistentBase.1496" }
%"class.blink::PersistentBase.1496" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::MutableCSSPropertyValueSet" = type opaque
%"struct.blink::SVGElement::SvgAttributeChangedParams" = type <{ %"class.blink::QualifiedName"*, i32, [4 x i8] }>
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::UniqueElementData" = type { %"class.blink::ElementData", %"class.blink::Member.14", %"class.WTF::Vector.2538" }
%"class.WTF::Vector.2538" = type { %"class.WTF::VectorBuffer.2539" }
%"class.WTF::VectorBuffer.2539" = type { %"class.WTF::VectorBufferBase.2540", [64 x i8] }
%"class.WTF::VectorBufferBase.2540" = type { %"class.blink::Attribute"*, i32, i32 }
%"class.blink::Attribute" = type { %"class.blink::QualifiedName", %"class.WTF::AtomicString" }
%"class.blink::LayoutSVGRoot" = type <{ %"class.blink::LayoutReplaced", %"class.blink::SVGContentContainer", %"class.blink::LayoutSize", %"class.blink::AffineTransform", i8, [7 x i8] }>
%"class.blink::LayoutReplaced" = type { %"class.blink::LayoutBox", %"class.blink::LayoutSize" }
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1497, %"class.WTF::Vector.1498", %"class.std::__1::unique_ptr.1503", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1524, %"class.blink::Persistent.1525" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1497 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type opaque
%"class.WTF::Vector.1498" = type { %"class.WTF::VectorBuffer.1499" }
%"class.WTF::VectorBuffer.1499" = type { %"class.WTF::VectorBufferBase.1500", [8 x i8] }
%"class.WTF::VectorBufferBase.1500" = type { %class.scoped_refptr.1497*, i32, i32 }
%"class.std::__1::unique_ptr.1503" = type { %"class.std::__1::__compressed_pair.1504" }
%"class.std::__1::__compressed_pair.1504" = type { %"struct.std::__1::__compressed_pair_elem.1505" }
%"struct.std::__1::__compressed_pair_elem.1505" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1506", %"class.absl::optional.1511", %"class.absl::optional.1516" }
%"class.absl::optional.1506" = type { %"class.absl::optional_internal::optional_data.1507" }
%"class.absl::optional_internal::optional_data.1507" = type { %"class.absl::optional_internal::optional_data_base.1508" }
%"class.absl::optional_internal::optional_data_base.1508" = type { %"class.absl::optional_internal::optional_data_dtor_base.1509" }
%"class.absl::optional_internal::optional_data_dtor_base.1509" = type { i8, %union.anon.1510 }
%union.anon.1510 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1511" = type { %"class.absl::optional_internal::optional_data.1512" }
%"class.absl::optional_internal::optional_data.1512" = type { %"class.absl::optional_internal::optional_data_base.1513" }
%"class.absl::optional_internal::optional_data_base.1513" = type { %"class.absl::optional_internal::optional_data_dtor_base.1514" }
%"class.absl::optional_internal::optional_data_dtor_base.1514" = type { i8, [3 x i8], %union.anon.1515 }
%union.anon.1515 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1516" = type { %"class.absl::optional_internal::optional_data.1517" }
%"class.absl::optional_internal::optional_data.1517" = type { %"class.absl::optional_internal::optional_data_base.1518" }
%"class.absl::optional_internal::optional_data_base.1518" = type { %"class.absl::optional_internal::optional_data_dtor_base.1519" }
%"class.absl::optional_internal::optional_data_dtor_base.1519" = type { i8, %union.anon.1520 }
%union.anon.1520 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.1524 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type opaque
%"class.blink::Persistent.1525" = type { %"class.blink::PersistentBase.1526" }
%"class.blink::PersistentBase.1526" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1529", %"struct.blink::PhysicalRect", %"class.blink::Member.1539" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type opaque
%"class.std::__1::unique_ptr.1529" = type { %"class.std::__1::__compressed_pair.1530" }
%"class.std::__1::__compressed_pair.1530" = type { %"struct.std::__1::__compressed_pair_elem.1531" }
%"struct.std::__1::__compressed_pair_elem.1531" = type { %"class.WTF::HashSet.1532"* }
%"class.WTF::HashSet.1532" = type { %"class.WTF::HashTable.1533" }
%"class.WTF::HashTable.1533" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1539" = type { %"class.blink::MemberBase.1540" }
%"class.blink::MemberBase.1540" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::SVGContentContainer" = type { %"class.blink::LayoutObjectChildList", %"class.blink::FloatRect", %"class.blink::FloatRect" }
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.941", %"class.blink::DataRef.1021", %"class.blink::DataRef.1025", %"class.blink::DataRef.1220", %"class.blink::DataRef.1287", %"class.blink::DataRef.1291", %"class.blink::DataRef.1295", %"class.blink::DataRef.1299", [20 x i8], [4 x i8] }>
%"class.blink::StaticNodeTypeList" = type { %"class.blink::NodeList", %"class.blink::HeapVector.1541" }
%"class.blink::NodeList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapVector.1541" = type { %"class.WTF::Vector.1544" }
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546" }
%"class.WTF::VectorBufferBase.1546" = type { %"class.blink::Member"*, i32, i32 }
%"class.blink::SVGPropertyTearOffBase" = type <{ %"class.blink::ScriptWrappable", %"class.blink::Member.36", %"class.blink::Member.44", i32, [4 x i8] }>
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.1592", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.1600", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.1614", %"class.blink::FrameLoader", %"class.blink::Member.1635", %"class.blink::Member.138", %"class.blink::Member.1637", %"class.blink::Member.1639", %"class.blink::Member.1655", %"class.blink::Member.1657", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.1659", %class.scoped_refptr.1879, %"class.blink::Member.1880", %"class.blink::Member.1882", %"class.blink::Member.1884", %"class.blink::Member.1886", %"class.blink::Member.1888", %"class.blink::Member.1892", %"class.blink::Member.1894", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.1898", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.1904", %"class.std::__1::unique_ptr.1905", %"class.absl::optional.1580", i32, [4 x i8], %"class.std::__1::unique_ptr.1911", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.1919", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.1924", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.1929", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.1932", %"class.blink::Member.1934", %"class.blink::Member.1936", %"class.blink::Member.1938", %"class.mojo::StructPtr.1941", %"class.blink::Member.1950", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.1952", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.1552", %"class.blink::Member.1554", %"class.blink::Member.1556", i8, i32, i8, i32, %"class.blink::Member.1558", %"class.blink::Member.1560", %"class.blink::FrameLifecycle", %"class.blink::Member.1550", %"class.blink::Member.1550", %"class.blink::Member.1550", %"class.blink::Member.1550", %"class.blink::Member.1550", %"class.blink::Member.1550", %"class.blink::Member.1562", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.1573", i8, %"class.base::UnguessableToken", %"class.absl::optional.1575", %"class.absl::optional.1580", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.1550", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.1552" = type { %"class.blink::MemberBase.1553" }
%"class.blink::MemberBase.1553" = type { %"class.blink::Page"* }
%"class.blink::Page" = type opaque
%"class.blink::Member.1554" = type { %"class.blink::MemberBase.1555" }
%"class.blink::MemberBase.1555" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type opaque
%"class.blink::Member.1558" = type { %"class.blink::MemberBase.1559" }
%"class.blink::MemberBase.1559" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.1560" = type { %"class.blink::MemberBase.1561" }
%"class.blink::MemberBase.1561" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.1550" = type { %"class.blink::MemberBase.1551" }
%"class.blink::MemberBase.1551" = type { %"class.blink::Frame"* }
%"class.blink::Member.1562" = type { %"class.blink::MemberBase.1563" }
%"class.blink::MemberBase.1563" = type { %"class.blink::LocalFrame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.1550", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.1564" }
%"class.base::internal::flat_tree.1564" = type { %"class.std::__1::vector.1565" }
%"class.std::__1::vector.1565" = type { %"class.std::__1::__vector_base.1566" }
%"class.std::__1::__vector_base.1566" = type { %"struct.std::__1::pair.1567"*, %"struct.std::__1::pair.1567"*, %"class.std::__1::__compressed_pair.1568" }
%"struct.std::__1::pair.1567" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.1568" = type { %"struct.std::__1::__compressed_pair_elem.1569" }
%"struct.std::__1::__compressed_pair_elem.1569" = type { %"struct.std::__1::pair.1567"* }
%"class.blink::Member.1573" = type { %"class.blink::MemberBase.1574" }
%"class.blink::MemberBase.1574" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.1575" = type { %"class.absl::optional_internal::optional_data.1576" }
%"class.absl::optional_internal::optional_data.1576" = type { %"class.absl::optional_internal::optional_data_base.1577" }
%"class.absl::optional_internal::optional_data_base.1577" = type { %"class.absl::optional_internal::optional_data_dtor_base.1578" }
%"class.absl::optional_internal::optional_data_dtor_base.1578" = type { i8, %union.anon.1579 }
%union.anon.1579 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.1585" }
%"class.blink::HeapHashSet.1585" = type { %"class.WTF::HashSet.1588" }
%"class.WTF::HashSet.1588" = type { %"class.WTF::HashTable.1589" }
%"class.WTF::HashTable.1589" = type <{ %"class.blink::WeakMember.1591"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1591" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.1592" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1593" }
%"class.blink::HeapHashMap.1593" = type { %"class.WTF::HashMap.1596" }
%"class.WTF::HashMap.1596" = type { %"class.WTF::HashTable.1597" }
%"class.WTF::HashTable.1597" = type <{ %"struct.WTF::KeyValuePair.1599"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1599" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1600" = type { %"class.std::__1::__compressed_pair.1601" }
%"class.std::__1::__compressed_pair.1601" = type { %"struct.std::__1::__compressed_pair_elem.1602" }
%"struct.std::__1::__compressed_pair_elem.1602" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.1603", %"class.base::WeakPtrFactory.1608" }
%"class.WTF::HashMap.1603" = type { %"class.WTF::HashTable.1604" }
%"class.WTF::HashTable.1604" = type <{ %"struct.WTF::KeyValuePair.1607"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1607" = type opaque
%"class.base::WeakPtrFactory.1608" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.1612" }
%"class.blink::Member.1612" = type { %"class.blink::MemberBase.1613" }
%"class.blink::MemberBase.1613" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.2309" }
%"class.blink::WeakMember.2309" = type { %"class.blink::MemberBase.2310" }
%"class.blink::MemberBase.2310" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.2311", i64, %"class.std::__1::map.2312", i8*, i64, %"class.base::WeakPtrFactory.2321" }
%"class.base::RepeatingCallback.2311" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.2312" = type { %"class.std::__1::__tree.2313" }
%"class.std::__1::__tree.2313" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2314", %"class.std::__1::__compressed_pair.2318" }
%"class.std::__1::__compressed_pair.2314" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.2318" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.base::WeakPtrFactory.2321" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.1614" = type { %"class.WTF::HashSet.1617" }
%"class.WTF::HashSet.1617" = type { %"class.WTF::HashTable.1618" }
%"class.WTF::HashTable.1618" = type <{ %"class.blink::WeakMember.1620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1620" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1562", %"class.blink::Member.1621", %"class.blink::Member.1623", %"class.std::__1::unique_ptr.1625", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.1631" }
%"class.blink::Member.1621" = type { %"class.blink::MemberBase.1622" }
%"class.blink::MemberBase.1622" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.1623" = type { %"class.blink::MemberBase.1624" }
%"class.blink::MemberBase.1624" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.1625" = type { %"class.std::__1::__compressed_pair.1626" }
%"class.std::__1::__compressed_pair.1626" = type { %"struct.std::__1::__compressed_pair_elem.1627" }
%"struct.std::__1::__compressed_pair_elem.1627" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.WTF::HashSet.1631" = type { %"class.WTF::HashTable.1632" }
%"class.WTF::HashTable.1632" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2031", %"class.blink::Member.1562", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2036", i8, i32, %"class.blink::Color", %"class.absl::optional.2038", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2043", %"class.blink::Member.2045", %"class.blink::Member.2045", %"class.std::__1::unique_ptr.2048", i32, [4 x i8], %"class.WTF::HashSet.2051", %"class.blink::Member.2058", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2060", %"class.blink::HeapHashSet.2067", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2075", i8, %"class.blink::Member.2081", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2093", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2107", i8, %"class.std::__1::unique_ptr.2113", %"class.std::__1::unique_ptr.2194", %"class.WTF::Vector.2200", i32, %class.scoped_refptr.2205, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2206", %"class.blink::Member.2208", %"class.blink::Member.2210", %"class.blink::HeapHashSet.2212", %"class.blink::HeapHashSet.2219", %"class.std::__1::unique_ptr.2226", %"class.std::__1::unique_ptr.2233", %"class.WTF::Vector.174" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.2031" = type { %"class.WTF::HashTable.2032" }
%"class.WTF::HashTable.2032" = type <{ %class.scoped_refptr.2035*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2035 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2036" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2037", { i64, i64 } }
%"class.blink::WeakMember.2037" = type { %"class.blink::MemberBase.1636" }
%"class.absl::optional.2038" = type { %"class.absl::optional_internal::optional_data.2039" }
%"class.absl::optional_internal::optional_data.2039" = type { %"class.absl::optional_internal::optional_data_base.2040" }
%"class.absl::optional_internal::optional_data_base.2040" = type { %"class.absl::optional_internal::optional_data_dtor_base.2041" }
%"class.absl::optional_internal::optional_data_dtor_base.2041" = type { i8, %union.anon.2042 }
%union.anon.2042 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2043" = type { %"class.blink::MemberBase.2044" }
%"class.blink::MemberBase.2044" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2045" = type { %"class.blink::MemberBase.2046" }
%"class.blink::MemberBase.2046" = type { %"class.blink::HeapHashSet.2047"* }
%"class.blink::HeapHashSet.2047" = type opaque
%"class.std::__1::unique_ptr.2048" = type { %"class.std::__1::__compressed_pair.2049" }
%"class.std::__1::__compressed_pair.2049" = type { %"struct.std::__1::__compressed_pair_elem.2050" }
%"struct.std::__1::__compressed_pair_elem.2050" = type { %"class.WTF::HashSet.2051"* }
%"class.WTF::HashSet.2051" = type { %"class.WTF::HashTable.2052" }
%"class.WTF::HashTable.2052" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2058" = type { %"class.blink::MemberBase.2059" }
%"class.blink::MemberBase.2059" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2060" = type { %"class.WTF::HashSet.2063" }
%"class.WTF::HashSet.2063" = type { %"class.WTF::HashTable.2064" }
%"class.WTF::HashTable.2064" = type <{ %"class.blink::Member.2066"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2066" = type opaque
%"class.blink::HeapHashSet.2067" = type { %"class.WTF::HashSet.2070" }
%"class.WTF::HashSet.2070" = type { %"class.WTF::HashTable.2071" }
%"class.WTF::HashTable.2071" = type <{ %"class.blink::Member.2073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2073" = type { %"class.blink::MemberBase.2074" }
%"class.blink::MemberBase.2074" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.2246", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.2256", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.138" }
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.2248", %"class.blink::Member.2250", %"class.blink::Member.2252", %"class.blink::Member.2254", %"class.WTF::Vector.174", i16, %class.scoped_refptr.90 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.2248" = type { %"class.blink::MemberBase.2249" }
%"class.blink::MemberBase.2249" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.2252" = type { %"class.blink::MemberBase.2253" }
%"class.blink::MemberBase.2253" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.2254" = type { %"class.blink::MemberBase.2255" }
%"class.blink::MemberBase.2255" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer.2256" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2257", { i64, i64 } }
%"class.blink::WeakMember.2257" = type { %"class.blink::MemberBase.2074" }
%"class.std::__1::unique_ptr.2075" = type { %"class.std::__1::__compressed_pair.2076" }
%"class.std::__1::__compressed_pair.2076" = type { %"struct.std::__1::__compressed_pair_elem.2077" }
%"struct.std::__1::__compressed_pair_elem.2077" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2081" = type { %"class.blink::MemberBase.2082" }
%"class.blink::MemberBase.2082" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2085", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2085" = type { %"class.WTF::HashTable.2086" }
%"class.WTF::HashTable.2086" = type <{ %"struct.WTF::KeyValuePair.2088"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2088" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2089", i32, i32 }
%"class.WTF::Vector.2089" = type { %"class.WTF::VectorBuffer.2090" }
%"class.WTF::VectorBuffer.2090" = type { %"class.WTF::VectorBufferBase.2091" }
%"class.WTF::VectorBufferBase.2091" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2093" = type { %"class.WTF::LinkedHashSet.2096" }
%"class.WTF::LinkedHashSet.2096" = type { %"class.WTF::HashMap.2097", %"class.WTF::VectorBackedLinkedList.2101" }
%"class.WTF::HashMap.2097" = type { %"class.WTF::HashTable.2098" }
%"class.WTF::HashTable.2098" = type <{ %"struct.WTF::KeyValuePair.2100"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2100" = type opaque
%"class.WTF::VectorBackedLinkedList.2101" = type { %"class.WTF::Vector.2102", i32, i32 }
%"class.WTF::Vector.2102" = type { %"class.WTF::VectorBuffer.2103" }
%"class.WTF::VectorBuffer.2103" = type { %"class.WTF::VectorBufferBase.2104" }
%"class.WTF::VectorBufferBase.2104" = type { %"class.WTF::VectorBackedLinkedListNode.2105"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2105" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2107" = type { %"class.std::__1::__compressed_pair.2108" }
%"class.std::__1::__compressed_pair.2108" = type { %"struct.std::__1::__compressed_pair_elem.2109" }
%"struct.std::__1::__compressed_pair_elem.2109" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2113" = type { %"class.std::__1::__compressed_pair.2114" }
%"class.std::__1::__compressed_pair.2114" = type { %"struct.std::__1::__compressed_pair_elem.2115" }
%"struct.std::__1::__compressed_pair_elem.2115" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2116, %class.scoped_refptr.2116, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2171", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2176", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2116 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2117", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2124" }
%"class.WTF::RefCounted.2117" = type { %"class.base::RefCounted.2118" }
%"class.base::RefCounted.2118" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2119", i32, [4 x i8] }>
%"class.WTF::Vector.2119" = type { %"class.WTF::VectorBuffer.2120" }
%"class.WTF::VectorBuffer.2120" = type { %"class.WTF::VectorBufferBase.2121" }
%"class.WTF::VectorBufferBase.2121" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2124" = type { %"class.WTF::VectorBuffer.2125" }
%"class.WTF::VectorBuffer.2125" = type { %"class.WTF::VectorBufferBase.2126" }
%"class.WTF::VectorBufferBase.2126" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2127", %"class.std::__1::unique_ptr.2143", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2127" = type { %"class.std::__1::__compressed_pair.2128" }
%"class.std::__1::__compressed_pair.2128" = type { %"struct.std::__1::__compressed_pair_elem.2129" }
%"struct.std::__1::__compressed_pair_elem.2129" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2130", %"class.WTF::Vector.2135", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2130" = type { %"class.WTF::VectorBuffer.2131" }
%"class.WTF::VectorBuffer.2131" = type { %"class.WTF::VectorBufferBase.2132" }
%"class.WTF::VectorBufferBase.2132" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.2135" = type { %"class.WTF::VectorBuffer.2136" }
%"class.WTF::VectorBuffer.2136" = type { %"class.WTF::VectorBufferBase.2137" }
%"class.WTF::VectorBufferBase.2137" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.std::__1::unique_ptr.2143" = type { %"class.std::__1::__compressed_pair.2144" }
%"class.std::__1::__compressed_pair.2144" = type { %"struct.std::__1::__compressed_pair_elem.2145" }
%"struct.std::__1::__compressed_pair_elem.2145" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2146", %"class.absl::optional.2146" }
%"class.absl::optional.2146" = type { %"class.absl::optional_internal::optional_data.2147" }
%"class.absl::optional_internal::optional_data.2147" = type { %"class.absl::optional_internal::optional_data_base.2148" }
%"class.absl::optional_internal::optional_data_base.2148" = type { %"class.absl::optional_internal::optional_data_dtor_base.2149" }
%"class.absl::optional_internal::optional_data_dtor_base.2149" = type { i8, [3 x i8], %union.anon.2150 }
%union.anon.2150 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2124"*, %"class.absl::optional.2156", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2156" = type { %"class.absl::optional_internal::optional_data.2157" }
%"class.absl::optional_internal::optional_data.2157" = type { %"class.absl::optional_internal::optional_data_base.2158" }
%"class.absl::optional_internal::optional_data_base.2158" = type { %"class.absl::optional_internal::optional_data_dtor_base.2159" }
%"class.absl::optional_internal::optional_data_dtor_base.2159" = type { i8, %union.anon.2160 }
%union.anon.2160 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2161", %"class.WTF::Vector.2166" }
%"class.WTF::Vector.2161" = type { %"class.WTF::VectorBuffer.2162" }
%"class.WTF::VectorBuffer.2162" = type { %"class.WTF::VectorBufferBase.2163", [128 x i8] }
%"class.WTF::VectorBufferBase.2163" = type { i32*, i32, i32 }
%"class.WTF::Vector.2166" = type { %"class.WTF::VectorBuffer.2167" }
%"class.WTF::VectorBuffer.2167" = type { %"class.WTF::VectorBufferBase.2168", [128 x i8] }
%"class.WTF::VectorBufferBase.2168" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2171" = type { %"class.WTF::VectorBuffer.2172" }
%"class.WTF::VectorBuffer.2172" = type { %"class.WTF::VectorBufferBase.2173" }
%"class.WTF::VectorBufferBase.2173" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2176" = type { %"class.WTF::HashTable.2177" }
%"class.WTF::HashTable.2177" = type <{ %"struct.WTF::KeyValuePair.2180"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2180" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2181", %"class.WTF::Vector.2186" }
%"class.WTF::HashMap.2181" = type { %"class.WTF::HashTable.2182" }
%"class.WTF::HashTable.2182" = type <{ %"struct.WTF::KeyValuePair.2185"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2185" = type opaque
%"class.WTF::Vector.2186" = type { %"class.WTF::VectorBuffer.2187" }
%"class.WTF::VectorBuffer.2187" = type { %"class.WTF::VectorBufferBase.2188" }
%"class.WTF::VectorBufferBase.2188" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2194" = type { %"class.std::__1::__compressed_pair.2195" }
%"class.std::__1::__compressed_pair.2195" = type { %"struct.std::__1::__compressed_pair_elem.2196" }
%"struct.std::__1::__compressed_pair_elem.2196" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2200" = type { %"class.WTF::VectorBuffer.2201" }
%"class.WTF::VectorBuffer.2201" = type { %"class.WTF::VectorBufferBase.2202" }
%"class.WTF::VectorBufferBase.2202" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2205 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2206" = type { %"class.blink::MemberBase.2207" }
%"class.blink::MemberBase.2207" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2212" = type { %"class.WTF::HashSet.2215" }
%"class.WTF::HashSet.2215" = type { %"class.WTF::HashTable.2216" }
%"class.WTF::HashTable.2216" = type <{ %"class.blink::WeakMember.2218"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2218" = type opaque
%"class.blink::HeapHashSet.2219" = type { %"class.WTF::HashSet.2222" }
%"class.WTF::HashSet.2222" = type { %"class.WTF::HashTable.2223" }
%"class.WTF::HashTable.2223" = type <{ %"class.blink::WeakMember.2225"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2225" = type opaque
%"class.std::__1::unique_ptr.2226" = type { %"class.std::__1::__compressed_pair.2227" }
%"class.std::__1::__compressed_pair.2227" = type { %"struct.std::__1::__compressed_pair_elem.2228" }
%"struct.std::__1::__compressed_pair_elem.2228" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2229" }
%"class.base::time_internal::TimeBase.2229" = type { i64 }
%"class.std::__1::unique_ptr.2233" = type { %"class.std::__1::__compressed_pair.2234" }
%"class.std::__1::__compressed_pair.2234" = type { %"struct.std::__1::__compressed_pair_elem.2235" }
%"struct.std::__1::__compressed_pair_elem.2235" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2236", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2236" = type { %"class.absl::optional_internal::optional_data.2237" }
%"class.absl::optional_internal::optional_data.2237" = type { %"class.absl::optional_internal::optional_data_base.2238" }
%"class.absl::optional_internal::optional_data_base.2238" = type { %"class.absl::optional_internal::optional_data_dtor_base.2239" }
%"class.absl::optional_internal::optional_data_dtor_base.2239" = type { i8, %union.anon.2240 }
%union.anon.2240 = type { %"class.base::Time" }
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.1639" = type { %"class.blink::MemberBase.1640" }
%"class.blink::MemberBase.1640" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1562", %"class.blink::Member.1643", %"class.blink::Member.1645", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1647", %"class.blink::Member.1653" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.407" }
%"class.blink::Member.1643" = type { %"class.blink::MemberBase.1644" }
%"class.blink::MemberBase.1644" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.1645" = type { %"class.blink::MemberBase.1646" }
%"class.blink::MemberBase.1646" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.1647" = type { %"class.std::__1::__compressed_pair.1648" }
%"class.std::__1::__compressed_pair.1648" = type { %"struct.std::__1::__compressed_pair_elem.1649" }
%"struct.std::__1::__compressed_pair_elem.1649" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.1653" = type { %"class.blink::MemberBase.1654" }
%"class.blink::MemberBase.1654" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.1655" = type { %"class.blink::MemberBase.1656" }
%"class.blink::MemberBase.1656" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.1657" = type { %"class.blink::MemberBase.1658" }
%"class.blink::MemberBase.1658" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.1659" = type { %"class.blink::MemberBase.1660" }
%"class.blink::MemberBase.1660" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet", %"class.blink::HeapListHashSet.1670", %"class.blink::HeapListHashSet.1681", %"class.blink::HeapListHashSet.1692", %"class.blink::HeapListHashSet.1703", %"class.blink::HeapListHashSet.1714", %"class.blink::HeapListHashSet.1725", %"class.blink::HeapListHashSet.1736", %"class.blink::HeapListHashSet.1747", %"class.blink::HeapListHashSet.1758", %"class.blink::HeapListHashSet.1769", %"class.blink::HeapListHashSet.1780", %"class.blink::HeapListHashSet.1791", %"class.blink::HeapListHashSet.1802", %"class.blink::HeapListHashSet.1813", %"class.blink::HeapListHashSet.1824", %"class.blink::HeapListHashSet.1835", %"class.blink::HeapListHashSet.1846", %"class.blink::HeapListHashSet.1857", %"class.blink::HeapListHashSet.1868" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1666", %"class.blink::Member.1668", %"class.blink::Member.1668", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1666" = type <{ %"class.blink::Member.1668"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1668" = type { %"class.blink::MemberBase.1669" }
%"class.blink::MemberBase.1669" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.1882", %"class.blink::Member.1668", %"class.blink::Member.1668" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.1670" = type { %"class.WTF::ListHashSet.base.1680", [7 x i8] }
%"class.WTF::ListHashSet.base.1680" = type <{ %"class.WTF::HashTable.1675", %"class.blink::Member.1677", %"class.blink::Member.1677", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1675" = type <{ %"class.blink::Member.1677"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1677" = type { %"class.blink::MemberBase.1678" }
%"class.blink::MemberBase.1678" = type { %"class.blink::HeapListHashSetNode.1679"* }
%"class.blink::HeapListHashSetNode.1679" = type { %"class.blink::Member.2025", %"class.blink::Member.1677", %"class.blink::Member.1677" }
%"class.blink::Member.2025" = type { %"class.blink::MemberBase.2026" }
%"class.blink::MemberBase.2026" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.1681" = type { %"class.WTF::ListHashSet.base.1691", [7 x i8] }
%"class.WTF::ListHashSet.base.1691" = type <{ %"class.WTF::HashTable.1686", %"class.blink::Member.1688", %"class.blink::Member.1688", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1686" = type <{ %"class.blink::Member.1688"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::HeapListHashSetNode.1690"* }
%"class.blink::HeapListHashSetNode.1690" = type { %"class.blink::Member.2021", %"class.blink::Member.1688", %"class.blink::Member.1688" }
%"class.blink::Member.2021" = type { %"class.blink::MemberBase.2022" }
%"class.blink::MemberBase.2022" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.1692" = type { %"class.WTF::ListHashSet.base.1702", [7 x i8] }
%"class.WTF::ListHashSet.base.1702" = type <{ %"class.WTF::HashTable.1697", %"class.blink::Member.1699", %"class.blink::Member.1699", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1697" = type <{ %"class.blink::Member.1699"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1699" = type { %"class.blink::MemberBase.1700" }
%"class.blink::MemberBase.1700" = type { %"class.blink::HeapListHashSetNode.1701"* }
%"class.blink::HeapListHashSetNode.1701" = type { %"class.blink::Member.2017", %"class.blink::Member.1699", %"class.blink::Member.1699" }
%"class.blink::Member.2017" = type { %"class.blink::MemberBase.2018" }
%"class.blink::MemberBase.2018" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.1703" = type { %"class.WTF::ListHashSet.base.1713", [7 x i8] }
%"class.WTF::ListHashSet.base.1713" = type <{ %"class.WTF::HashTable.1708", %"class.blink::Member.1710", %"class.blink::Member.1710", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1708" = type <{ %"class.blink::Member.1710"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1710" = type { %"class.blink::MemberBase.1711" }
%"class.blink::MemberBase.1711" = type { %"class.blink::HeapListHashSetNode.1712"* }
%"class.blink::HeapListHashSetNode.1712" = type { %"class.blink::Member.2013", %"class.blink::Member.1710", %"class.blink::Member.1710" }
%"class.blink::Member.2013" = type { %"class.blink::MemberBase.2014" }
%"class.blink::MemberBase.2014" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.1714" = type { %"class.WTF::ListHashSet.base.1724", [7 x i8] }
%"class.WTF::ListHashSet.base.1724" = type <{ %"class.WTF::HashTable.1719", %"class.blink::Member.1721", %"class.blink::Member.1721", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1719" = type <{ %"class.blink::Member.1721"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1721" = type { %"class.blink::MemberBase.1722" }
%"class.blink::MemberBase.1722" = type { %"class.blink::HeapListHashSetNode.1723"* }
%"class.blink::HeapListHashSetNode.1723" = type { %"class.blink::Member.2009", %"class.blink::Member.1721", %"class.blink::Member.1721" }
%"class.blink::Member.2009" = type { %"class.blink::MemberBase.2010" }
%"class.blink::MemberBase.2010" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.1725" = type { %"class.WTF::ListHashSet.base.1735", [7 x i8] }
%"class.WTF::ListHashSet.base.1735" = type <{ %"class.WTF::HashTable.1730", %"class.blink::Member.1732", %"class.blink::Member.1732", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1730" = type <{ %"class.blink::Member.1732"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1732" = type { %"class.blink::MemberBase.1733" }
%"class.blink::MemberBase.1733" = type { %"class.blink::HeapListHashSetNode.1734"* }
%"class.blink::HeapListHashSetNode.1734" = type { %"class.blink::Member.2005", %"class.blink::Member.1732", %"class.blink::Member.1732" }
%"class.blink::Member.2005" = type { %"class.blink::MemberBase.2006" }
%"class.blink::MemberBase.2006" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.1736" = type { %"class.WTF::ListHashSet.base.1746", [7 x i8] }
%"class.WTF::ListHashSet.base.1746" = type <{ %"class.WTF::HashTable.1741", %"class.blink::Member.1743", %"class.blink::Member.1743", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1741" = type <{ %"class.blink::Member.1743"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1743" = type { %"class.blink::MemberBase.1744" }
%"class.blink::MemberBase.1744" = type { %"class.blink::HeapListHashSetNode.1745"* }
%"class.blink::HeapListHashSetNode.1745" = type { %"class.blink::Member.2001", %"class.blink::Member.1743", %"class.blink::Member.1743" }
%"class.blink::Member.2001" = type { %"class.blink::MemberBase.2002" }
%"class.blink::MemberBase.2002" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.1747" = type { %"class.WTF::ListHashSet.base.1757", [7 x i8] }
%"class.WTF::ListHashSet.base.1757" = type <{ %"class.WTF::HashTable.1752", %"class.blink::Member.1754", %"class.blink::Member.1754", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1752" = type <{ %"class.blink::Member.1754"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1754" = type { %"class.blink::MemberBase.1755" }
%"class.blink::MemberBase.1755" = type { %"class.blink::HeapListHashSetNode.1756"* }
%"class.blink::HeapListHashSetNode.1756" = type { %"class.blink::Member.1997", %"class.blink::Member.1754", %"class.blink::Member.1754" }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.1758" = type { %"class.WTF::ListHashSet.base.1768", [7 x i8] }
%"class.WTF::ListHashSet.base.1768" = type <{ %"class.WTF::HashTable.1763", %"class.blink::Member.1765", %"class.blink::Member.1765", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1763" = type <{ %"class.blink::Member.1765"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1765" = type { %"class.blink::MemberBase.1766" }
%"class.blink::MemberBase.1766" = type { %"class.blink::HeapListHashSetNode.1767"* }
%"class.blink::HeapListHashSetNode.1767" = type { %"class.blink::Member.1993", %"class.blink::Member.1765", %"class.blink::Member.1765" }
%"class.blink::Member.1993" = type { %"class.blink::MemberBase.1994" }
%"class.blink::MemberBase.1994" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.1769" = type { %"class.WTF::ListHashSet.base.1779", [7 x i8] }
%"class.WTF::ListHashSet.base.1779" = type <{ %"class.WTF::HashTable.1774", %"class.blink::Member.1776", %"class.blink::Member.1776", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1774" = type <{ %"class.blink::Member.1776"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1776" = type { %"class.blink::MemberBase.1777" }
%"class.blink::MemberBase.1777" = type { %"class.blink::HeapListHashSetNode.1778"* }
%"class.blink::HeapListHashSetNode.1778" = type { %"class.blink::Member.1886", %"class.blink::Member.1776", %"class.blink::Member.1776" }
%"class.blink::HeapListHashSet.1780" = type { %"class.WTF::ListHashSet.base.1790", [7 x i8] }
%"class.WTF::ListHashSet.base.1790" = type <{ %"class.WTF::HashTable.1785", %"class.blink::Member.1787", %"class.blink::Member.1787", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1785" = type <{ %"class.blink::Member.1787"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1787" = type { %"class.blink::MemberBase.1788" }
%"class.blink::MemberBase.1788" = type { %"class.blink::HeapListHashSetNode.1789"* }
%"class.blink::HeapListHashSetNode.1789" = type { %"class.blink::Member.1987", %"class.blink::Member.1787", %"class.blink::Member.1787" }
%"class.blink::Member.1987" = type { %"class.blink::MemberBase.1988" }
%"class.blink::MemberBase.1988" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.1791" = type { %"class.WTF::ListHashSet.base.1801", [7 x i8] }
%"class.WTF::ListHashSet.base.1801" = type <{ %"class.WTF::HashTable.1796", %"class.blink::Member.1798", %"class.blink::Member.1798", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1796" = type <{ %"class.blink::Member.1798"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::HeapListHashSetNode.1800"* }
%"class.blink::HeapListHashSetNode.1800" = type { %"class.blink::Member.1983", %"class.blink::Member.1798", %"class.blink::Member.1798" }
%"class.blink::Member.1983" = type { %"class.blink::MemberBase.1984" }
%"class.blink::MemberBase.1984" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.1802" = type { %"class.WTF::ListHashSet.base.1812", [7 x i8] }
%"class.WTF::ListHashSet.base.1812" = type <{ %"class.WTF::HashTable.1807", %"class.blink::Member.1809", %"class.blink::Member.1809", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1807" = type <{ %"class.blink::Member.1809"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1809" = type { %"class.blink::MemberBase.1810" }
%"class.blink::MemberBase.1810" = type { %"class.blink::HeapListHashSetNode.1811"* }
%"class.blink::HeapListHashSetNode.1811" = type { %"class.blink::Member.1979", %"class.blink::Member.1809", %"class.blink::Member.1809" }
%"class.blink::Member.1979" = type { %"class.blink::MemberBase.1980" }
%"class.blink::MemberBase.1980" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.1813" = type { %"class.WTF::ListHashSet.base.1823", [7 x i8] }
%"class.WTF::ListHashSet.base.1823" = type <{ %"class.WTF::HashTable.1818", %"class.blink::Member.1820", %"class.blink::Member.1820", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1818" = type <{ %"class.blink::Member.1820"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1820" = type { %"class.blink::MemberBase.1821" }
%"class.blink::MemberBase.1821" = type { %"class.blink::HeapListHashSetNode.1822"* }
%"class.blink::HeapListHashSetNode.1822" = type { %"class.blink::Member.1975", %"class.blink::Member.1820", %"class.blink::Member.1820" }
%"class.blink::Member.1975" = type { %"class.blink::MemberBase.1976" }
%"class.blink::MemberBase.1976" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.1824" = type { %"class.WTF::ListHashSet.base.1834", [7 x i8] }
%"class.WTF::ListHashSet.base.1834" = type <{ %"class.WTF::HashTable.1829", %"class.blink::Member.1831", %"class.blink::Member.1831", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1829" = type <{ %"class.blink::Member.1831"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1831" = type { %"class.blink::MemberBase.1832" }
%"class.blink::MemberBase.1832" = type { %"class.blink::HeapListHashSetNode.1833"* }
%"class.blink::HeapListHashSetNode.1833" = type { %"class.blink::Member.1971", %"class.blink::Member.1831", %"class.blink::Member.1831" }
%"class.blink::Member.1971" = type { %"class.blink::MemberBase.1972" }
%"class.blink::MemberBase.1972" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.1835" = type { %"class.WTF::ListHashSet.base.1845", [7 x i8] }
%"class.WTF::ListHashSet.base.1845" = type <{ %"class.WTF::HashTable.1840", %"class.blink::Member.1842", %"class.blink::Member.1842", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1840" = type <{ %"class.blink::Member.1842"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1842" = type { %"class.blink::MemberBase.1843" }
%"class.blink::MemberBase.1843" = type { %"class.blink::HeapListHashSetNode.1844"* }
%"class.blink::HeapListHashSetNode.1844" = type { %"class.blink::Member.1967", %"class.blink::Member.1842", %"class.blink::Member.1842" }
%"class.blink::Member.1967" = type { %"class.blink::MemberBase.1968" }
%"class.blink::MemberBase.1968" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.1846" = type { %"class.WTF::ListHashSet.base.1856", [7 x i8] }
%"class.WTF::ListHashSet.base.1856" = type <{ %"class.WTF::HashTable.1851", %"class.blink::Member.1853", %"class.blink::Member.1853", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1851" = type <{ %"class.blink::Member.1853"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1853" = type { %"class.blink::MemberBase.1854" }
%"class.blink::MemberBase.1854" = type { %"class.blink::HeapListHashSetNode.1855"* }
%"class.blink::HeapListHashSetNode.1855" = type { %"class.blink::Member.1963", %"class.blink::Member.1853", %"class.blink::Member.1853" }
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.1857" = type { %"class.WTF::ListHashSet.base.1867", [7 x i8] }
%"class.WTF::ListHashSet.base.1867" = type <{ %"class.WTF::HashTable.1862", %"class.blink::Member.1864", %"class.blink::Member.1864", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1862" = type <{ %"class.blink::Member.1864"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1864" = type { %"class.blink::MemberBase.1865" }
%"class.blink::MemberBase.1865" = type { %"class.blink::HeapListHashSetNode.1866"* }
%"class.blink::HeapListHashSetNode.1866" = type { %"class.blink::Member.1888", %"class.blink::Member.1864", %"class.blink::Member.1864" }
%"class.blink::HeapListHashSet.1868" = type { %"class.WTF::ListHashSet.base.1878", [7 x i8] }
%"class.WTF::ListHashSet.base.1878" = type <{ %"class.WTF::HashTable.1873", %"class.blink::Member.1875", %"class.blink::Member.1875", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1873" = type <{ %"class.blink::Member.1875"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1875" = type { %"class.blink::MemberBase.1876" }
%"class.blink::MemberBase.1876" = type { %"class.blink::HeapListHashSetNode.1877"* }
%"class.blink::HeapListHashSetNode.1877" = type { %"class.blink::Member.1880", %"class.blink::Member.1875", %"class.blink::Member.1875" }
%class.scoped_refptr.1879 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.1880" = type { %"class.blink::MemberBase.1881" }
%"class.blink::MemberBase.1881" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.1882" = type { %"class.blink::MemberBase.1883" }
%"class.blink::MemberBase.1883" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.1884" = type { %"class.blink::MemberBase.1885" }
%"class.blink::MemberBase.1885" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.1886" = type { %"class.blink::MemberBase.1887" }
%"class.blink::MemberBase.1887" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.1888" = type { %"class.blink::MemberBase.1889" }
%"class.blink::MemberBase.1889" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.1892" = type { %"class.blink::MemberBase.1893" }
%"class.blink::MemberBase.1893" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.1894" = type { %"class.blink::MemberBase.1895" }
%"class.blink::MemberBase.1895" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1896" }
%"class.blink::Member.1896" = type { %"class.blink::MemberBase.1897" }
%"class.blink::MemberBase.1897" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2417" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2324, %"class.std::__1::unique_ptr.792", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.806, i32 }>
%class.scoped_refptr.2324 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.806, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2383", %"class.absl::optional.2388", %"class.absl::optional.2341", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2408", i8, [7 x i8], %class.scoped_refptr.806, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.819" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.806, %"class.std::__1::unique_ptr.2325", %"class.absl::optional.2335", %"struct.std::__1::atomic.400", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2341", %"class.std::__1::unique_ptr.2346", i8, i64, %class.scoped_refptr.2380, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2381", %"class.base::WeakPtrFactory.2382" }
%"class.std::__1::unique_ptr.2325" = type { %"class.std::__1::__compressed_pair.2326" }
%"class.std::__1::__compressed_pair.2326" = type { %"struct.std::__1::__compressed_pair_elem.2327" }
%"struct.std::__1::__compressed_pair_elem.2327" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.806, i8, %"class.mojo::ScopedHandleBase.2328", %class.scoped_refptr.2329, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2330", i8*, %"class.base::WeakPtrFactory.2331" }
%"class.mojo::ScopedHandleBase.2328" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2329 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2330" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2331" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2335" = type { %"class.absl::optional_internal::optional_data.2336" }
%"class.absl::optional_internal::optional_data.2336" = type { %"class.absl::optional_internal::optional_data_base.2337" }
%"class.absl::optional_internal::optional_data_base.2337" = type { %"class.absl::optional_internal::optional_data_dtor_base.2338" }
%"class.absl::optional_internal::optional_data_dtor_base.2338" = type { i8, %union.anon.2339 }
%union.anon.2339 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2340", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2340" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2346" = type { %"class.std::__1::__compressed_pair.2347" }
%"class.std::__1::__compressed_pair.2347" = type { %"struct.std::__1::__compressed_pair_elem.2348" }
%"struct.std::__1::__compressed_pair_elem.2348" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2349", i8, i64, %class.scoped_refptr.2350, %class.scoped_refptr.2375 }
%"class.base::RepeatingCallback.2349" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2350 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2351", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2353", %"class.std::__1::map.2364", i8, [7 x i8] }>
%"class.base::RefCounted.2351" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2352 }
%class.scoped_refptr.2352 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2353" = type { %"class.std::__1::__tree.2354" }
%"class.std::__1::__tree.2354" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2355", %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2355" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.std::__1::map.2364" = type { %"class.std::__1::__tree.2365" }
%"class.std::__1::__tree.2365" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2366", %"class.std::__1::__compressed_pair.2370" }
%"class.std::__1::__compressed_pair.2366" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.2370" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%class.scoped_refptr.2375 = type { %"class.base::RefCountedData.2376"* }
%"class.base::RefCountedData.2376" = type opaque
%class.scoped_refptr.2380 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2381" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2382" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2383" = type { %"class.absl::optional_internal::optional_data.2384" }
%"class.absl::optional_internal::optional_data.2384" = type { %"class.absl::optional_internal::optional_data_base.2385" }
%"class.absl::optional_internal::optional_data_base.2385" = type { %"class.absl::optional_internal::optional_data_dtor_base.2386" }
%"class.absl::optional_internal::optional_data_dtor_base.2386" = type { i8, %union.anon.2387 }
%union.anon.2387 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2388" = type { %"class.absl::optional_internal::optional_data.2389" }
%"class.absl::optional_internal::optional_data.2389" = type { %"class.absl::optional_internal::optional_data_base.2390" }
%"class.absl::optional_internal::optional_data_base.2390" = type { %"class.absl::optional_internal::optional_data_dtor_base.2391" }
%"class.absl::optional_internal::optional_data_dtor_base.2391" = type { i8, [7 x i8], %union.anon.2392 }
%union.anon.2392 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2341" = type { %"class.absl::optional_internal::optional_data.2342" }
%"class.absl::optional_internal::optional_data.2342" = type { %"class.absl::optional_internal::optional_data_base.2343" }
%"class.absl::optional_internal::optional_data_base.2343" = type { %"class.absl::optional_internal::optional_data_dtor_base.2344" }
%"class.absl::optional_internal::optional_data_dtor_base.2344" = type { i8, %union.anon.2345 }
%union.anon.2345 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2393 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2393 = type { %"class.std::__1::map.2396" }
%"class.std::__1::map.2396" = type { %"class.std::__1::__tree.2397" }
%"class.std::__1::__tree.2397" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2398", %"class.std::__1::__compressed_pair.2402" }
%"class.std::__1::__compressed_pair.2398" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.2402" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2407"*, i64 }
%"class.std::__1::unique_ptr.2407" = type opaque
%"class.std::__1::map.2408" = type { %"class.std::__1::__tree.2409" }
%"class.std::__1::__tree.2409" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2410", %"class.std::__1::__compressed_pair.2414" }
%"class.std::__1::__compressed_pair.2410" = type { %"struct.std::__1::__compressed_pair_elem.691" }
%"class.std::__1::__compressed_pair.2414" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2417" = type { %"class.std::__1::__compressed_pair.2418" }
%"class.std::__1::__compressed_pair.2418" = type { %"struct.std::__1::__compressed_pair_elem.2419" }
%"struct.std::__1::__compressed_pair_elem.2419" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.1898" = type { %"class.std::__1::__compressed_pair.1899" }
%"class.std::__1::__compressed_pair.1899" = type { %"struct.std::__1::__compressed_pair_elem.1900" }
%"struct.std::__1::__compressed_pair_elem.1900" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.1904" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.1905" = type { %"class.std::__1::__compressed_pair.1906" }
%"class.std::__1::__compressed_pair.1906" = type { %"struct.std::__1::__compressed_pair_elem.1907" }
%"struct.std::__1::__compressed_pair_elem.1907" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.1580" = type { %"class.absl::optional_internal::optional_data.1581" }
%"class.absl::optional_internal::optional_data.1581" = type { %"class.absl::optional_internal::optional_data_base.1582" }
%"class.absl::optional_internal::optional_data_base.1582" = type { %"class.absl::optional_internal::optional_data_dtor_base.1583" }
%"class.absl::optional_internal::optional_data_dtor_base.1583" = type { i8, %union.anon.1584 }
%union.anon.1584 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.1911" = type { %"class.std::__1::__compressed_pair.1912" }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1913" }
%"struct.std::__1::__compressed_pair_elem.1913" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.1917" }
%"class.blink::Member.1917" = type { %"class.blink::MemberBase.1918" }
%"class.blink::MemberBase.1918" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2425" }
%"class.mojo::AssociatedRemote.2425" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2426" }
%"class.mojo::internal::AssociatedInterfacePtrState.2426" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2427" }
%"class.std::__1::unique_ptr.2427" = type { %"class.std::__1::__compressed_pair.2428" }
%"class.std::__1::__compressed_pair.2428" = type { %"struct.std::__1::__compressed_pair_elem.2429" }
%"struct.std::__1::__compressed_pair_elem.2429" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.1919" = type { %"class.blink::Member.1920" }
%"class.blink::Member.1920" = type { %"class.blink::MemberBase.1921" }
%"class.blink::MemberBase.1921" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.2435" }
%"class.mojo::AssociatedRemote.2435" = type { %"class.mojo::internal::AssociatedInterfacePtrState.2436" }
%"class.mojo::internal::AssociatedInterfacePtrState.2436" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2437" }
%"class.std::__1::unique_ptr.2437" = type { %"class.std::__1::__compressed_pair.2438" }
%"class.std::__1::__compressed_pair.2438" = type { %"struct.std::__1::__compressed_pair_elem.2439" }
%"struct.std::__1::__compressed_pair_elem.2439" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.1922" }
%"class.blink::Member.1922" = type { %"class.blink::MemberBase.1923" }
%"class.blink::MemberBase.1923" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2445", %"class.blink::Member.1562", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2445" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.2446" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.792" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.2446" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.1924" = type { %"class.blink::Member.1925" }
%"class.blink::Member.1925" = type { %"class.blink::MemberBase.1926" }
%"class.blink::MemberBase.1926" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2449", %"class.blink::Member.1562", %"class.mojo::AssociatedReceiver.2450" }
%"class.blink::ThreadState::PrefinalizerRegistration.2449" = type { i8 }
%"class.mojo::AssociatedReceiver.2450" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.2451" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.2451" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.1927" }
%"class.blink::Member.1927" = type { %"class.blink::MemberBase.1928" }
%"class.blink::MemberBase.1928" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2454", %"class.blink::Member.1562", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.2454" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2324, %"class.std::__1::unique_ptr.792", %"class.base::WeakPtrFactory.2455" }
%"class.base::WeakPtrFactory.2455" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.1929" = type { %"class.blink::Member.1930" }
%"class.blink::Member.1930" = type { %"class.blink::MemberBase.1931" }
%"class.blink::MemberBase.1931" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.2458", %"class.blink::Member.1562", %"class.mojo::AssociatedReceiver.2459" }
%"class.blink::ThreadState::PrefinalizerRegistration.2458" = type { i8 }
%"class.mojo::AssociatedReceiver.2459" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.2460" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.2460" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.1932" = type { %"class.blink::MemberBase.1933" }
%"class.blink::MemberBase.1933" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.1934" = type { %"class.blink::MemberBase.1935" }
%"class.blink::MemberBase.1935" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.1936" = type { %"class.blink::MemberBase.1937" }
%"class.blink::MemberBase.1937" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.1938" = type { %"class.blink::MemberBase.1939" }
%"class.blink::MemberBase.1939" = type { %"class.blink::HeapHashMap.1940"* }
%"class.blink::HeapHashMap.1940" = type opaque
%"class.mojo::StructPtr.1941" = type { %"class.std::__1::unique_ptr.1942" }
%"class.std::__1::unique_ptr.1942" = type { %"class.std::__1::__compressed_pair.1943" }
%"class.std::__1::__compressed_pair.1943" = type { %"struct.std::__1::__compressed_pair_elem.1944" }
%"struct.std::__1::__compressed_pair_elem.1944" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.1945", %"class.mojo::InlinedStructPtr.1946" }
%"class.mojo::InlinedStructPtr.1945" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.1946" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1950" = type { %"class.blink::MemberBase.1951" }
%"class.blink::MemberBase.1951" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.absl::optional.1952" = type { %"class.absl::optional_internal::optional_data.1953" }
%"class.absl::optional_internal::optional_data.1953" = type { %"class.absl::optional_internal::optional_data_base.1954" }
%"class.absl::optional_internal::optional_data_base.1954" = type { %"class.absl::optional_internal::optional_data_dtor_base.1955" }
%"class.absl::optional_internal::optional_data_dtor_base.1955" = type { i8, %union.anon.1956 }
%union.anon.1956 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::SVGNumberTearOff" = type { %"class.blink::SVGPropertyTearOff.2258" }
%"class.blink::SVGPropertyTearOff.2258" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.2259" }
%"class.blink::Member.2259" = type { %"class.blink::MemberBase.2260" }
%"class.blink::MemberBase.2260" = type { %"class.blink::SVGNumber"* }
%"class.blink::SVGNumber" = type <{ %"class.blink::SVGListablePropertyBase", float, [4 x i8] }>
%"class.blink::SVGAngleTearOff" = type { %"class.blink::SVGPropertyTearOff.2261" }
%"class.blink::SVGPropertyTearOff.2261" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.2262" }
%"class.blink::Member.2262" = type { %"class.blink::MemberBase.2263" }
%"class.blink::MemberBase.2263" = type { %"class.blink::SVGAngle"* }
%"class.blink::SVGAngle" = type { %"class.blink::SVGPropertyHelper.2264", i32, float, %"class.blink::Member.2265" }
%"class.blink::SVGPropertyHelper.2264" = type { %"class.blink::SVGPropertyBase" }
%"class.blink::Member.2265" = type { %"class.blink::MemberBase.2266" }
%"class.blink::MemberBase.2266" = type { %"class.blink::SVGEnumeration"* }
%"class.blink::SVGEnumeration" = type { %"class.blink::SVGPropertyBase", i16, %"class.blink::SVGEnumerationMap"* }
%"class.blink::SVGEnumerationMap" = type opaque
%"class.blink::SVGMatrixTearOff" = type { %"class.blink::ScriptWrappable", %"class.blink::AffineTransform", %"class.blink::Member.2267" }
%"class.blink::Member.2267" = type { %"class.blink::MemberBase.2268" }
%"class.blink::MemberBase.2268" = type { %"class.blink::SVGTransformTearOff"* }
%"class.blink::SVGTransformTearOff" = type { %"class.blink::SVGPropertyTearOff.2269", %"class.blink::Member.2272" }
%"class.blink::SVGPropertyTearOff.2269" = type { %"class.blink::SVGPropertyTearOffBase.base", %"class.blink::Member.2270" }
%"class.blink::Member.2270" = type { %"class.blink::MemberBase.2271" }
%"class.blink::MemberBase.2271" = type { %"class.blink::SVGTransform"* }
%"class.blink::SVGTransform" = type { %"class.blink::SVGListablePropertyBase", i32, float, %"class.blink::FloatPoint", %"class.blink::AffineTransform" }
%"class.blink::Member.2272" = type { %"class.blink::MemberBase.2273" }
%"class.blink::MemberBase.2273" = type { %"class.blink::SVGMatrixTearOff"* }
%"class.blink::SVGLengthContext" = type { %"class.blink::SVGElement"* }
%"class.blink::LayoutSVGViewportContainer" = type <{ %"class.blink::LayoutSVGContainer.base", [2 x i8], %"class.blink::FloatRect", [4 x i8], %"class.blink::AffineTransform", i8, [7 x i8] }>
%"class.blink::LayoutSVGContainer.base" = type <{ %"class.blink::LayoutSVGModelObject", %"class.blink::SVGContentContainer", i8, i8 }>
%"class.blink::LayoutSVGModelObject" = type { %"class.blink::LayoutObject" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::SVGViewElement" = type <{ %"class.blink::SVGElement", %"class.blink::SVGFitToViewBox", %"class.blink::SVGZoomAndPan.base", [4 x i8] }>
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2292" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2280" }
%"class.blink::HeapVector.2280" = type { %"class.WTF::Vector.2283" }
%"class.WTF::Vector.2283" = type { %"class.WTF::VectorBuffer.2284" }
%"class.WTF::VectorBuffer.2284" = type { %"class.WTF::VectorBufferBase.2285", [32 x i8] }
%"class.WTF::VectorBufferBase.2285" = type { %"struct.std::__1::pair.2286"*, i32, i32 }
%"struct.std::__1::pair.2286" = type { %"class.WTF::AtomicString", %"class.blink::Member.2287" }
%"class.blink::Member.2287" = type { %"class.blink::MemberBase.2288" }
%"class.blink::MemberBase.2288" = type { %"class.blink::HeapVector.2289"* }
%"class.blink::HeapVector.2289" = type opaque
%"class.std::__1::unique_ptr.2292" = type { %"class.std::__1::__compressed_pair.2293" }
%"class.std::__1::__compressed_pair.2293" = type { %"struct.std::__1::__compressed_pair_elem.2294" }
%"struct.std::__1::__compressed_pair_elem.2294" = type { %"class.WTF::Vector.2295"* }
%"class.WTF::Vector.2295" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.2276", i8, [7 x i8] }>
%"class.blink::Member.2276" = type { %"class.blink::MemberBase.2277" }
%"class.blink::MemberBase.2277" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.2299" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.2299" = type { %"class.v8::TracedReference.2300" }
%"class.v8::TracedReference.2300" = type { %"class.v8::BasicTracedReference.2301" }
%"class.v8::BasicTracedReference.2301" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::EventDispatchHandlingState" = type opaque
%"struct.blink::ContainerNode::ChildrenChange" = type { i8, i8, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::Node"*, %"class.blink::HeapVector.1541", %"class.WTF::String"* }
%"class.WTF::HashMap.2302" = type opaque
%"class.blink::Image" = type opaque
%"struct.blink::FocusParams" = type opaque
%"class.blink::FocusOptions" = type opaque
%"class.blink::InputDeviceCapabilities" = type opaque
%"class.blink::ShadowRoot" = type opaque
%class.anon = type { %"class.blink::LayoutObject"*, i8** }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2526" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2526" = type { %"struct.std::__1::__compressed_pair_elem.323" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.2513", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.2513" = type { %"class.std::__1::__vector_base.2514" }
%"class.std::__1::__vector_base.2514" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.2521" }
%"class.std::__1::__compressed_pair.2521" = type { %"struct.std::__1::__compressed_pair_elem.2522" }
%"struct.std::__1::__compressed_pair_elem.2522" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.2515", i64, i64 }
%"class.std::__1::unique_ptr.2515" = type { %"class.std::__1::__compressed_pair.2516" }
%"class.std::__1::__compressed_pair.2516" = type { %"struct.std::__1::__compressed_pair_elem.2517" }
%"struct.std::__1::__compressed_pair_elem.2517" = type { i8* }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::SVGCurrentTranslateTearOff" = type { %"class.blink::SVGPointTearOff" }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK5blink18SVGGraphicsElement7IsValidEv = comdat any

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink13SVGSVGElement18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink4Node19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink7Element23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node11SheetLoadedEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE = comdat any

$_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv = comdat any

$_ZN5blink7Element36AdditionalPresentationAttributeStyleEv = comdat any

$_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv = comdat any

$_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE = comdat any

$_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE = comdat any

$_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE = comdat any

$_ZNK5blink7Element10IsLiveLinkEv = comdat any

$_ZN5blink7Element13ImageContentsEv = comdat any

$_ZNK5blink18SVGGraphicsElement13SupportsFocusEv = comdat any

$_ZNK5blink7Element14DefaultToolTipEv = comdat any

$_ZN5blink7Element20BeginParsingChildrenEv = comdat any

$_ZNK5blink7Element25MatchesDefaultPseudoClassEv = comdat any

$_ZNK5blink7Element25MatchesEnabledPseudoClassEv = comdat any

$_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv = comdat any

$_ZNK5blink7Element27MatchesReadWritePseudoClassEv = comdat any

$_ZNK5blink7Element28MatchesValidityPseudoClassesEv = comdat any

$_ZNK5blink7Element25ShouldAppearIndeterminateEv = comdat any

$_ZNK5blink7Element21IsDateTimeEditElementEv = comdat any

$_ZNK5blink7Element22IsDateTimeFieldElementEv = comdat any

$_ZNK5blink7Element24IsPickerIndicatorElementEv = comdat any

$_ZNK5blink7Element20IsFormControlElementEv = comdat any

$_ZNK5blink7Element19IsSpinButtonElementEv = comdat any

$_ZNK5blink7Element13IsTextControlEv = comdat any

$_ZNK5blink7Element21IsOptionalFormControlEv = comdat any

$_ZNK5blink7Element21IsRequiredFormControlEv = comdat any

$_ZNK5blink7Element12willValidateEv = comdat any

$_ZN5blink7Element14IsValidElementEv = comdat any

$_ZNK5blink7Element9IsInRangeEv = comdat any

$_ZNK5blink7Element12IsOutOfRangeEv = comdat any

$_ZNK5blink7Element20IsClearButtonElementEv = comdat any

$_ZNK5blink7Element15IsScriptElementEv = comdat any

$_ZNK5blink7Element21IsVTTCueBackgroundBoxEv = comdat any

$_ZNK5blink7Element20IsSliderThumbElementEv = comdat any

$_ZNK5blink7Element25HasNonInBodyInsertionModeEv = comdat any

$_ZNK5blink7Element21IsDisabledFormControlEv = comdat any

$_ZN5blink7Element20BuildPendingResourceEv = comdat any

$_ZNK5blink7Element11IsAdRelatedEv = comdat any

$_ZNK5blink7Element16GetNamedItemTypeEv = comdat any

$_ZN5blink7Element22ParserDidSetAttributesEv = comdat any

$_ZNK5blink7Element23AreAuthorShadowsAllowedEv = comdat any

$_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE = comdat any

$_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv = comdat any

$_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv = comdat any

$_ZNK5blink10SVGElement20IsSVGGeometryElementEv = comdat any

$_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv = comdat any

$_ZNK5blink10SVGElement14IsFilterEffectEv = comdat any

$_ZNK5blink10SVGElement13IsTextContentEv = comdat any

$_ZNK5blink10SVGElement17IsTextPositioningEv = comdat any

$_ZNK5blink10SVGElement22IsStructurallyExternalEv = comdat any

$_ZN5blink13SVGZoomAndPan13setZoomAndPanEt = comdat any

$_ZN5blink13SVGZoomAndPan13setZoomAndPanEtRNS_14ExceptionStateE = comdat any

$_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_17SMILTimeContainerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_17SMILTimeContainerEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_17SMILTimeContainerEE7GetNameEPKv = comdat any

$_ZN5blink15ScriptWrappableD2Ev = comdat any

$_ZN5blink26SVGCurrentTranslateTearOffD0Ev = comdat any

$_ZNK5blink15ScriptWrappable17HasEventListenersEv = comdat any

$_ZNK5blink18SVGPropertyTearOffINS_8SVGPointEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink15SVGPointTearOff18GetWrapperTypeInfoEv = comdat any

$_ZN5blink26SVGCurrentTranslateTearOff12CommitChangeEv = comdat any

$_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_ = comdat any

$_ZN5blink18StaticNodeTypeListINS_4NodeEED0Ev = comdat any

$_ZNK5blink18StaticNodeTypeListINS_4NodeEE5TraceEPNS_7VisitorE = comdat any

$_ZNK5blink8NodeList18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink18StaticNodeTypeListINS_4NodeEE6lengthEv = comdat any

$_ZNK5blink18StaticNodeTypeListINS_4NodeEE4itemEj = comdat any

$_ZNK5blink8NodeList15IsEmptyNodeListEv = comdat any

$_ZNK5blink8NodeList15IsChildNodeListEv = comdat any

$_ZNK5blink8NodeList16VirtualOwnerNodeEv = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_18SVGGraphicsElementEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_8SVGPointEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink26SVGCurrentTranslateTearOffE = comdat any

$_ZTVN5blink18StaticNodeTypeListINS_4NodeEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZN5blink9svg_names7kSVGTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZTVN5blink13SVGSVGElementE = hidden unnamed_addr constant { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] } { [170 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*)* @_ZN5blink13SVGSVGElementD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*)* @_ZN5blink13SVGSVGElementD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*)* @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGSVGElement"*)* @_ZNK5blink13SVGSVGElement18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Element"*, %"class.blink::Document"*, i32)* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1, i32)* @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::ContainerNode"*, i1)* @_ZN5blink13ContainerNode10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i32)* @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink13SVGSVGElement16AttachLayoutTreeERNS_4Node13AttachContextE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i1)* @_ZN5blink10SVGElement16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::SVGSVGElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink13SVGSVGElement12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::ContainerNode"*)* @_ZN5blink13SVGSVGElement11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::Document"*)* @_ZN5blink13SVGSVGElement20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Element"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"*)* @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv to i8*), i8* bitcast (i1 (%"class.blink::ContainerNode"*)* @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZN5blink7Element18GetAnimationTargetEv to i8*), i8* bitcast (%"class.WTF::HashMap.2302"* (%"class.blink::Element"*)* @_ZNK5blink7Element24GetCheckedAttributeTypesEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element11scrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZN5blink7Element12scrollHeightEv to i8*), i8* bitcast (%"class.blink::CSSPropertyValueSet"* (%"class.blink::Element"*)* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv to i8*), i8* bitcast (i1 (%"class.blink::SVGSVGElement"*, %"class.blink::QualifiedName"*)* @_ZNK5blink13SVGSVGElement23IsPresentationAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::QualifiedName"*, %"class.WTF::AtomicString"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink13SVGSVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*)* @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"struct.blink::Element::AttributeModificationParams"*)* @_ZN5blink13SVGSVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::QualifiedName"*)* @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE to i8*), i8* bitcast (%"class.blink::QualifiedName"* (%"class.blink::Element"*)* @_ZNK5blink7Element24SubResourceAttributeNameEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32)* @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::SVGSVGElement"*, %"class.blink::ComputedStyle"*, i32)* @_ZN5blink13SVGSVGElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE to i8*), i8* bitcast (i1 (%"class.blink::SVGSVGElement"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink13SVGSVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i32)* @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*, %"class.blink::Attribute"*)* @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element10IsLiveLinkEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ImageSourceURLEv to i8*), i8* bitcast (%"class.blink::Image"* (%"class.blink::Element"*)* @_ZN5blink7Element13ImageContentsEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"struct.blink::FocusParams"*)* @_ZN5blink7Element5focusERKNS_11FocusParamsE to i8*), i8* bitcast (void (%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*)* @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element4blurEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement13SupportsFocusEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsKeyboardFocusableEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsMouseFocusableEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.WTF::AtomicString"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*)* @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement5titleEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Element"*)* @_ZNK5blink7Element14DefaultToolTipEv to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Element"*)* @_ZNK5blink7Element14ShadowPseudoIdEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*)* @_ZN5blink13SVGSVGElement21FinishParsingChildrenEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BeginParsingChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*, i8)* @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesDefaultPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MatchesEnabledPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27MatchesReadWritePseudoClassEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element28MatchesValidityPseudoClassesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25ShouldAppearIndeterminateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDateTimeEditElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element22IsDateTimeFieldElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element24IsPickerIndicatorElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsFormControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element19IsSpinButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element13IsTextControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsOptionalFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsRequiredFormControlEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12willValidateEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZN5blink7Element14IsValidElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element9IsInRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element12IsOutOfRangeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsClearButtonElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element15IsScriptElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element20IsSliderThumbElementEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element25HasNonInBodyInsertionModeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element21IsDisabledFormControlEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element20BuildPendingResourceEv to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element9SetActiveEb to i8*), i8* bitcast (void (%"class.blink::Element"*, i1)* @_ZN5blink7Element10SetHoveredEb to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element11IsAdRelatedEv to i8*), i8* bitcast (void (%"class.blink::SVGElement"*, i64)* @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void (%"class.blink::Element"*, i64)* @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE to i8*), i8* bitcast (void ()* @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element16GetNamedItemTypeEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element16IsFocusableStyleEv to i8*), i8* bitcast (void (%"class.blink::Element"*)* @_ZN5blink7Element22ParserDidSetAttributesEv to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element23AreAuthorShadowsAllowedEv to i8*), i8* bitcast (void (%"class.blink::Element"*, %"class.blink::ShadowRoot"*)* @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv to i8*), i8* bitcast (i32 (%"class.blink::Element"*)* @_ZNK5blink7Element15DefaultTabIndexEv to i8*), i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*, %"class.blink::Document"*)* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE to i8*), i8* bitcast (i1 (%"class.blink::Element"*)* @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::SVGSVGElement"*, i32)* @_ZNK5blink13SVGSVGElement29LocalCoordinateSpaceTransformENS_10SVGElement8CTMScopeE to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement20IsSVGGeometryElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement14IsFilterEffectEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement13IsTextContentEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement17IsTextPositioningEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZNK5blink10SVGElement22IsStructurallyExternalEv to i8*), i8* bitcast (i1 (%"class.blink::SVGGraphicsElement"*)* @_ZNK5blink18SVGGraphicsElement7IsValidEv to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"*)* @_ZN5blink13SVGSVGElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE to i8*), i8* bitcast (%"class.blink::AffineTransform"* (%"class.blink::SVGGraphicsElement"*)* @_ZN5blink18SVGGraphicsElement22AnimateMotionTransformEv to i8*), i8* bitcast (i1 (%"class.blink::SVGElement"*)* @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv to i8*), i8* bitcast (i1 (%"class.blink::SVGSVGElement"*)* @_ZNK5blink13SVGSVGElement22SelfHasRelativeLengthsEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::SVGGraphicsElement"*)* @_ZN5blink18SVGGraphicsElement7GetBBoxEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (%"class.blink::Element"* (%"class.blink::Element"*)* @_ZThn80_N5blink7Element18GetAnimationTargetEv to i8*)], [3 x i8*] [i8* inttoptr (i64 -168 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*)* @_ZThn168_NK5blink13SVGSVGElement5TraceEPNS_7VisitorE to i8*)], [3 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*)* @_ZThn200_NK5blink13SVGSVGElement5TraceEPNS_7VisitorE to i8*)], [6 x i8*] [i8* inttoptr (i64 -224 to i8*), i8* null, i8* bitcast (void (%"class.blink::SVGSVGElement"*)* @_ZThn224_N5blink13SVGSVGElementD1Ev to i8*), i8* bitcast (void (%"class.blink::SVGSVGElement"*)* @_ZThn224_N5blink13SVGSVGElementD0Ev to i8*), i8* bitcast (void (%"class.blink::SVGZoomAndPan"*, i16)* @_ZN5blink13SVGZoomAndPan13setZoomAndPanEt to i8*), i8* bitcast (void (%"class.blink::SVGZoomAndPan"*, i16, %"class.blink::ExceptionState"*)* @_ZN5blink13SVGZoomAndPan13setZoomAndPanEtRNS_14ExceptionStateE to i8*)] }, align 8
@_ZN5blink9svg_names6kXAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names6kYAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names10kWidthAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink9svg_names11kHeightAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink26layout_invalidation_reason8kUnknownE = external constant [0 x i8], align 1
@_ZN5blink10html_names13kOnunloadAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kUnloadE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnresizeAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kResizeE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names13kOnscrollAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names7kScrollE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnabortAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kAbortE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink10html_names12kOnerrorAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@_ZN5blink16event_type_names6kErrorE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink19style_change_reason23kSVGContainerSizeChangeE = external constant [0 x i8], align 1
@_ZN5blink9svg_names12kViewBoxAttrE = external local_unnamed_addr constant %"class.blink::QualifiedName"*, align 8
@.str = private unnamed_addr constant [9 x i8] c"svgView(\00", align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.1 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.2 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@_ZN5blink19style_change_reason10kAttributeE = external constant [0 x i8], align 1
@_ZN5blink9svg_names7kUseTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink13SVGSVGElement18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SVGPropertyBase]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink17SVGAnimatedLengthE = external unnamed_addr constant { [12 x i8*], [14 x i8*] }, align 8
@_ZTVN5blink15ScriptWrappableE = external unnamed_addr constant { [11 x i8*] }, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SMILTimeContainerEEEPKcv = private unnamed_addr constant [72 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::SMILTimeContainer]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_17SMILTimeContainerEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17SMILTimeContainerEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink26SVGCurrentTranslateTearOffE = linkonce_odr hidden unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::SVGCurrentTranslateTearOff"*)* @_ZN5blink26SVGCurrentTranslateTearOffD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::SVGPropertyTearOff.875"*, %"class.blink::Visitor"*)* @_ZNK5blink18SVGPropertyTearOffINS_8SVGPointEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::SVGPointTearOff"*)* @_ZNK5blink15SVGPointTearOff18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (void (%"class.blink::SVGCurrentTranslateTearOff"*)* @_ZN5blink26SVGCurrentTranslateTearOff12CommitChangeEv to i8*)] }, comdat, align 8
@_ZN5blink15SVGPointTearOff18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@_ZTVN5blink18StaticNodeTypeListINS_4NodeEEE = linkonce_odr hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ScriptWrappable"*)* @_ZN5blink15ScriptWrappableD2Ev to i8*), i8* bitcast (void (%"class.blink::StaticNodeTypeList"*)* @_ZN5blink18StaticNodeTypeListINS_4NodeEED0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::StaticNodeTypeList"*, %"class.blink::Visitor"*)* @_ZNK5blink18StaticNodeTypeListINS_4NodeEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (i32 (%"class.blink::StaticNodeTypeList"*)* @_ZNK5blink18StaticNodeTypeListINS_4NodeEE6lengthEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::StaticNodeTypeList"*, i32)* @_ZNK5blink18StaticNodeTypeListINS_4NodeEE4itemEj to i8*), i8* bitcast (i1 (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList15IsEmptyNodeListEv to i8*), i8* bitcast (i1 (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList15IsChildNodeListEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::NodeList"*)* @_ZNK5blink8NodeList16VirtualOwnerNodeEv to i8*)] }, comdat, align 8
@_ZN5blink8NodeList18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.9 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.10 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.11 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.12 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.13 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.14 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.15 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [149 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::Node>, WTF::VectorTraits<blink::Member<blink::Node> > >]\00", align 1
@_ZN5blink9svg_names8kViewTagE = external local_unnamed_addr constant %"class.blink::SVGQualifiedName"*, align 8

@_ZN5blink13SVGSVGElementC1ERNS_8DocumentE = hidden unnamed_addr alias void (%"class.blink::SVGSVGElement"*, %"class.blink::Document"*), void (%"class.blink::SVGSVGElement"*, %"class.blink::Document"*)* @_ZN5blink13SVGSVGElementC2ERNS_8DocumentE
@_ZN5blink13SVGSVGElementD1Ev = hidden unnamed_addr alias void (%"class.blink::SVGSVGElement"*), void (%"class.blink::SVGSVGElement"*)* @_ZN5blink13SVGSVGElementD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElementC2ERNS_8DocumentE(%"class.blink::SVGSVGElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** bitcast (%"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kSVGTagE to %"class.blink::QualifiedName"**), align 8
  tail call void @_ZN5blink18SVGGraphicsElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGGraphicsElement"* %3, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.blink::Document"* dereferenceable(2848) %1, i32 1058) #12
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.blink::SVGFitToViewBox", %"class.blink::SVGFitToViewBox"* %8, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.blink::SVGZoomAndPan.base", %"class.blink::SVGZoomAndPan.base"* %10, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15SVGFitToViewBoxC2EPNS_10SVGElementE(%"class.blink::SVGFitToViewBox"* %8, %"class.blink::SVGElement"* %12) #12
  %13 = bitcast %"class.blink::SVGZoomAndPan.base"* %10 to %"class.blink::SVGZoomAndPan"*
  tail call void @_ZN5blink13SVGZoomAndPanC2Ev(%"class.blink::SVGZoomAndPan"* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 3, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }, { [170 x i8*], [3 x i8*], [3 x i8*], [3 x i8*], [6 x i8*] }* @_ZTVN5blink13SVGSVGElementE, i64 0, inrange i32 4, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 4
  %15 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %16 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #12
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i64**
  store i64* null, i64** %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  %21 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #12
  %22 = bitcast i8* %21 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %22, i32 0, i32 0) #12
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  %27 = bitcast i8* %20 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %27, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %15, i32 442, i32 0) #12
  %28 = bitcast i8* %20 to i32 (...)***
  %29 = getelementptr inbounds i8, i8* %16, i64 48
  %30 = bitcast i8* %29 to i8**
  store i8* %21, i8** %30, align 8
  %31 = getelementptr inbounds i8, i8* %16, i64 56
  %32 = bitcast i8* %31 to i8**
  store i8* %21, i8** %32, align 8
  %33 = getelementptr inbounds i8, i8* %16, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %34 = getelementptr inbounds i8, i8* %16, i64 -4
  %35 = bitcast i8* %34 to i16*
  %36 = load atomic i16, i16* %35 monotonic, align 2
  %37 = or i16 %36, 1
  store atomic i16 %37, i16* %35 release, align 2
  %38 = bitcast %"class.blink::Member.56"* %14 to i8**
  store i8* %16, i8** %38, align 8
  %39 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 5
  %40 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %41 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #12
  %42 = bitcast i8* %41 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %43 = getelementptr inbounds i8, i8* %41, i64 8
  %44 = bitcast i8* %43 to i64**
  store i64* null, i64** %44, align 8
  %45 = getelementptr inbounds i8, i8* %41, i64 16
  %46 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #12
  %47 = bitcast i8* %46 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %47, i32 0, i32 1) #12
  %48 = getelementptr inbounds i8, i8* %46, i64 -4
  %49 = bitcast i8* %48 to i16*
  %50 = load atomic i16, i16* %49 monotonic, align 2
  %51 = or i16 %50, 1
  store atomic i16 %51, i16* %49 release, align 2
  %52 = bitcast i8* %45 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %52, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %40, i32 443, i32 0) #12
  %53 = bitcast i8* %45 to i32 (...)***
  %54 = getelementptr inbounds i8, i8* %41, i64 48
  %55 = bitcast i8* %54 to i8**
  store i8* %46, i8** %55, align 8
  %56 = getelementptr inbounds i8, i8* %41, i64 56
  %57 = bitcast i8* %56 to i8**
  store i8* %46, i8** %57, align 8
  %58 = getelementptr inbounds i8, i8* %41, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %53, align 8
  %59 = getelementptr inbounds i8, i8* %41, i64 -4
  %60 = bitcast i8* %59 to i16*
  %61 = load atomic i16, i16* %60 monotonic, align 2
  %62 = or i16 %61, 1
  store atomic i16 %62, i16* %60 release, align 2
  %63 = bitcast %"class.blink::Member.56"* %39 to i8**
  store i8* %41, i8** %63, align 8
  %64 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6
  %65 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %66 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #12
  %67 = bitcast i8* %66 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  %68 = getelementptr inbounds i8, i8* %66, i64 8
  %69 = bitcast i8* %68 to i64**
  store i64* null, i64** %69, align 8
  %70 = getelementptr inbounds i8, i8* %66, i64 16
  %71 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #12
  %72 = bitcast i8* %71 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %72, i32 4, i32 0) #12
  %73 = getelementptr inbounds i8, i8* %71, i64 -4
  %74 = bitcast i8* %73 to i16*
  %75 = load atomic i16, i16* %74 monotonic, align 2
  %76 = or i16 %75, 1
  store atomic i16 %76, i16* %74 release, align 2
  %77 = bitcast i8* %70 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %77, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %65, i32 438, i32 4) #12
  %78 = bitcast i8* %70 to i32 (...)***
  %79 = getelementptr inbounds i8, i8* %66, i64 48
  %80 = bitcast i8* %79 to i8**
  store i8* %71, i8** %80, align 8
  %81 = getelementptr inbounds i8, i8* %66, i64 56
  %82 = bitcast i8* %81 to i8**
  store i8* %71, i8** %82, align 8
  %83 = getelementptr inbounds i8, i8* %66, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %67, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %78, align 8
  %84 = getelementptr inbounds i8, i8* %66, i64 -4
  %85 = bitcast i8* %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = or i16 %86, 1
  store atomic i16 %87, i16* %85 release, align 2
  %88 = bitcast %"class.blink::Member.56"* %64 to i8**
  store i8* %66, i8** %88, align 8
  %89 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7
  %90 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %91 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 80) #12
  %92 = bitcast i8* %91 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTVN5blink15ScriptWrappableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  %93 = getelementptr inbounds i8, i8* %91, i64 8
  %94 = bitcast i8* %93 to i64**
  store i64* null, i64** %94, align 8
  %95 = getelementptr inbounds i8, i8* %91, i64 16
  %96 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 32) #12
  %97 = bitcast i8* %96 to %"class.blink::SVGLength"*
  tail call void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"* %97, i32 4, i32 1) #12
  %98 = getelementptr inbounds i8, i8* %96, i64 -4
  %99 = bitcast i8* %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = or i16 %100, 1
  store atomic i16 %101, i16* %99 release, align 2
  %102 = bitcast i8* %95 to %"class.blink::SVGAnimatedPropertyBase"*
  tail call void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"* %102, i32 7, %"class.blink::SVGElement"* %12, %"class.blink::QualifiedName"* dereferenceable(8) %90, i32 165, i32 4) #12
  %103 = bitcast i8* %95 to i32 (...)***
  %104 = getelementptr inbounds i8, i8* %91, i64 48
  %105 = bitcast i8* %104 to i8**
  store i8* %96, i8** %105, align 8
  %106 = getelementptr inbounds i8, i8* %91, i64 56
  %107 = bitcast i8* %106 to i8**
  store i8* %96, i8** %107, align 8
  %108 = getelementptr inbounds i8, i8* %91, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %108, i8 0, i64 16, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %92, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*], [14 x i8*] }, { [12 x i8*], [14 x i8*] }* @_ZTVN5blink17SVGAnimatedLengthE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %103, align 8
  %109 = getelementptr inbounds i8, i8* %91, i64 -4
  %110 = bitcast i8* %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = or i16 %111, 1
  store atomic i16 %112, i16* %110 release, align 2
  %113 = bitcast %"class.blink::Member.56"* %89 to i8**
  store i8* %91, i8** %113, align 8
  %114 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_17SMILTimeContainerEEEPhm(i64 192) #12
  %115 = bitcast i8* %114 to %"class.blink::SMILTimeContainer"*
  tail call void @_ZN5blink17SMILTimeContainerC1ERNS_13SVGSVGElementE(%"class.blink::SMILTimeContainer"* %115, %"class.blink::SVGSVGElement"* dereferenceable(304) %0) #12
  %116 = getelementptr inbounds i8, i8* %114, i64 -4
  %117 = bitcast i8* %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = or i16 %118, 1
  store atomic i16 %119, i16* %117 release, align 2
  %120 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %121 = bitcast %"class.blink::SMILTimeContainer"** %120 to i8**
  store i8* %114, i8** %121, align 8
  %122 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 24) #12
  %123 = bitcast i8* %122 to %"class.blink::SVGPoint"*
  tail call void @_ZN5blink8SVGPointC1Ev(%"class.blink::SVGPoint"* %123) #12
  %124 = getelementptr inbounds i8, i8* %122, i64 -4
  %125 = bitcast i8* %124 to i16*
  %126 = load atomic i16, i16* %125 monotonic, align 2
  %127 = or i16 %126, 1
  store atomic i16 %127, i16* %125 release, align 2
  %128 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 9, i32 0, i32 0
  %129 = bitcast %"class.blink::SVGPoint"** %128 to i8**
  store i8* %122, i8** %129, align 8
  %130 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10, i32 0, i32 0
  store %"class.blink::SVGViewSpec"* null, %"class.blink::SVGViewSpec"** %130, align 8
  %131 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 11
  store float 1.000000e+00, float* %131, align 8
  %132 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %14, i64 0, i32 0, i32 0
  %133 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %132, align 8
  %134 = icmp eq %"class.blink::SVGAnimatedLength"* %133, null
  %135 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %133, i64 0, i32 1, i32 0, i32 0
  %136 = select i1 %134, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %135
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %136) #12
  %137 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %39, i64 0, i32 0, i32 0
  %138 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %137, align 8
  %139 = icmp eq %"class.blink::SVGAnimatedLength"* %138, null
  %140 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %138, i64 0, i32 1, i32 0, i32 0
  %141 = select i1 %139, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %140
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %141) #12
  %142 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %64, i64 0, i32 0, i32 0
  %143 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %142, align 8
  %144 = icmp eq %"class.blink::SVGAnimatedLength"* %143, null
  %145 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %143, i64 0, i32 1, i32 0, i32 0
  %146 = select i1 %144, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %145
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %146) #12
  %147 = getelementptr inbounds %"class.blink::Member.56", %"class.blink::Member.56"* %89, i64 0, i32 0, i32 0
  %148 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %147, align 8
  %149 = icmp eq %"class.blink::SVGAnimatedLength"* %148, null
  %150 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %148, i64 0, i32 1, i32 0, i32 0
  %151 = select i1 %149, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %150
  tail call void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"* %12, %"class.blink::SVGAnimatedPropertyBase"* %151) #12
  %152 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 2
  %153 = bitcast %"class.blink::UseCounter"* %152 to void (%"class.blink::UseCounter"*, i32)***
  %154 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %153, align 8
  %155 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %154, i64 3
  %156 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %155, align 8
  tail call void %156(%"class.blink::UseCounter"* %152, i32 138) #12
  ret void
}

declare void @_ZN5blink18SVGGraphicsElementC2ERKNS_13QualifiedNameERNS_8DocumentENS_4Node16ConstructionTypeE(%"class.blink::SVGGraphicsElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink15SVGFitToViewBoxC2EPNS_10SVGElementE(%"class.blink::SVGFitToViewBox"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare void @_ZN5blink13SVGZoomAndPanC2Ev(%"class.blink::SVGZoomAndPan"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5blink10SVGElement16AddToPropertyMapEPNS_23SVGAnimatedPropertyBaseE(%"class.blink::SVGElement"*, %"class.blink::SVGAnimatedPropertyBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElementD2Ev(%"class.blink::SVGSVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %2) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn224_N5blink13SVGSVGElementD1Ev(%"class.blink::SVGSVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Animatable"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElementD0Ev(%"class.blink::SVGSVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn224_N5blink13SVGSVGElementD0Ev(%"class.blink::SVGSVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 -1, i32 0, i32 0, i32 0, i32 1
  %3 = bitcast %"class.blink::Animatable"* %2 to %"class.blink::SVGGraphicsElement"*
  tail call void @_ZN5blink18SVGGraphicsElementD2Ev(%"class.blink::SVGGraphicsElement"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink13SVGSVGElement12currentScaleEv(%"class.blink::SVGSVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 256
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %8 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %7) #12
  br i1 %8, label %9, label %12

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 11
  %11 = load float, float* %10, align 8
  br label %12

12:                                               ; preds = %1, %6, %9
  %13 = phi float [ %11, %9 ], [ 1.000000e+00, %6 ], [ 1.000000e+00, %1 ]
  ret float %13
}

declare zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement15setCurrentScaleEf(%"class.blink::SVGSVGElement"*, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %9 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %8) #12
  br i1 %9, label %10, label %29

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 11
  store float %1, float* %11, align 8
  %12 = load i32, i32* %3, align 8
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %14, label %20, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  br label %22

20:                                               ; preds = %10
  %21 = bitcast %"class.blink::NodeData"** %15 to %"class.blink::NodeRenderingData"**
  br label %22

22:                                               ; preds = %20, %16
  %23 = phi %"class.blink::NodeRenderingData"** [ %19, %16 ], [ %21, %20 ]
  %24 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %24, i64 0, i32 1
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %22
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %26, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %26, i8 zeroext 3) #12
  br label %29

29:                                               ; preds = %2, %28, %22, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement19UpdateUserTransformEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %20, label %19

19:                                               ; preds = %13
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %17, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %17, i8 zeroext 3) #12
  br label %20

20:                                               ; preds = %13, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPointTearOff"* @_ZN5blink13SVGSVGElement30currentTranslateFromJavascriptEv(%"class.blink::SVGSVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 48) #12
  %3 = bitcast i8* %2 to %"class.blink::SVGPointTearOff"*
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink15SVGPointTearOffC2EPNS_8SVGPointEPNS_10SVGElementE(%"class.blink::SVGPointTearOff"* %3, %"class.blink::SVGPoint"* %5, %"class.blink::SVGElement"* %6) #12
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN5blink26SVGCurrentTranslateTearOffE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 -4
  %9 = bitcast i8* %8 to i16*
  %10 = load atomic i16, i16* %9 monotonic, align 2
  %11 = or i16 %10, 1
  store atomic i16 %11, i16* %9 release, align 2
  ret %"class.blink::SVGPointTearOff"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement19SetCurrentTranslateERKNS_10FloatPointE(%"class.blink::SVGSVGElement"* nocapture readonly, %"class.blink::FloatPoint"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = load %"class.blink::SVGPoint"*, %"class.blink::SVGPoint"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGPoint", %"class.blink::SVGPoint"* %4, i64 0, i32 1
  %6 = bitcast %"class.blink::FloatPoint"* %1 to i64*
  %7 = bitcast %"class.blink::FloatPoint"* %5 to i64*
  %8 = load i64, i64* %6, align 4
  store i64 %8, i64* %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %12, label %18, label %14

14:                                               ; preds = %2
  %15 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRareData"**
  %16 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %16, i64 0, i32 1, i32 0, i32 0
  br label %20

18:                                               ; preds = %2
  %19 = bitcast %"class.blink::NodeData"** %13 to %"class.blink::NodeRenderingData"**
  br label %20

20:                                               ; preds = %18, %14
  %21 = phi %"class.blink::NodeRenderingData"** [ %17, %14 ], [ %19, %18 ]
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 1
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %27, label %26

26:                                               ; preds = %20
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %24, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %24, i8 zeroext 3) #12
  br label %27

27:                                               ; preds = %20, %26
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement17ZoomAndPanEnabledEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 2, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10, i32 0, i32 0
  %5 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %4, align 8
  %6 = icmp eq %"class.blink::SVGViewSpec"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %5, i64 0, i32 3
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = select i1 %10, i32 %3, i32 %9
  br label %12

12:                                               ; preds = %1, %7
  %13 = phi i32 [ %3, %1 ], [ %11, %7 ]
  %14 = icmp eq i32 %13, 2
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGSVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 0
  %4 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %3, align 8
  %5 = getelementptr inbounds %"struct.blink::Element::AttributeModificationParams", %"struct.blink::Element::AttributeModificationParams"* %1, i64 0, i32 2
  %6 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  %8 = tail call %"class.blink::SVGElement"* @_ZNK5blink18SVGGraphicsElement22nearestViewportElementEv(%"class.blink::SVGGraphicsElement"* %7) #12
  %9 = icmp eq %"class.blink::SVGElement"* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  br label %60

13:                                               ; preds = %2
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnunloadAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %4, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %18 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %17, align 8
  %19 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %18
  br i1 %19, label %20, label %30

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kUnloadE, align 8
  %27 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %21) #12
  %28 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %27, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 0) #12
  %29 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %28, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"* %25, %"class.WTF::AtomicString"* dereferenceable(8) %26, %"class.blink::EventListener"* %29) #12
  br label %97

30:                                               ; preds = %13
  %31 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnresizeAttrE, align 8
  %32 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %32, align 8
  %34 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %33
  br i1 %34, label %35, label %45

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %38 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %38, i64 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kResizeE, align 8
  %42 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %36) #12
  %43 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %42, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 0) #12
  %44 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %43, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"* %40, %"class.WTF::AtomicString"* dereferenceable(8) %41, %"class.blink::EventListener"* %44) #12
  br label %97

45:                                               ; preds = %30
  %46 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names13kOnscrollAttrE, align 8
  %47 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %46, i64 0, i32 0, i32 0
  %48 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %47, align 8
  %49 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %16, %48
  br i1 %49, label %50, label %60

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %53, i64 0, i32 2, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names7kScrollE, align 8
  %57 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %51) #12
  %58 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %57, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 0) #12
  %59 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %58, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"* %55, %"class.WTF::AtomicString"* dereferenceable(8) %56, %"class.blink::EventListener"* %59) #12
  br label %97

60:                                               ; preds = %10, %45
  %61 = phi %"class.blink::QualifiedName::QualifiedNameImpl"* [ %12, %10 ], [ %16, %45 ]
  %62 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnabortAttrE, align 8
  %63 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %63, align 8
  %65 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %64
  br i1 %65, label %66, label %76

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %69 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %69, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kAbortE, align 8
  %73 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %67) #12
  %74 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %73, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 0) #12
  %75 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"* %71, %"class.WTF::AtomicString"* dereferenceable(8) %72, %"class.blink::EventListener"* %75) #12
  br label %97

76:                                               ; preds = %60
  %77 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink10html_names12kOnerrorAttrE, align 8
  %78 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %77, i64 0, i32 0, i32 0
  %79 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %78, align 8
  %80 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %61, %79
  br i1 %80, label %81, label %91

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %84, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %85, align 8
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink16event_type_names6kErrorE, align 8
  %88 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %82) #12
  %89 = tail call %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"* %88, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6, i32 1) #12
  %90 = getelementptr inbounds %"class.blink::JSEventHandlerForContentAttribute", %"class.blink::JSEventHandlerForContentAttribute"* %89, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"* %86, %"class.WTF::AtomicString"* dereferenceable(8) %87, %"class.blink::EventListener"* %90) #12
  br label %97

91:                                               ; preds = %76
  %92 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 2
  %93 = bitcast %"class.blink::SVGZoomAndPan.base"* %92 to %"class.blink::SVGZoomAndPan"*
  %94 = tail call zeroext i1 @_ZN5blink13SVGZoomAndPan14ParseAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::SVGZoomAndPan"* %93, %"class.blink::QualifiedName"* dereferenceable(8) %4, %"class.WTF::AtomicString"* dereferenceable(8) %6) #12
  br i1 %94, label %97, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"* %96, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32) %1) #12
  br label %97

97:                                               ; preds = %50, %35, %20, %66, %95, %91, %81
  ret void
}

declare %"class.blink::SVGElement"* @_ZNK5blink18SVGGraphicsElement22nearestViewportElementEv(%"class.blink::SVGGraphicsElement"*) local_unnamed_addr #1

declare void @_ZN5blink8Document31SetWindowAttributeEventListenerERKN3WTF12AtomicStringEPNS_13EventListenerE(%"class.blink::Document"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*) local_unnamed_addr #1

declare %"class.blink::JSEventHandlerForContentAttribute"* @_ZN5blink33JSEventHandlerForContentAttribute6CreateEPNS_16ExecutionContextERKNS_13QualifiedNameERKN3WTF12AtomicStringENS_14JSEventHandler11HandlerTypeE(%"class.blink::ExecutionContext"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), i32) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink13SVGZoomAndPan14ParseAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringE(%"class.blink::SVGZoomAndPan"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement14ParseAttributeERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGSVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %4 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %6, align 8
  %8 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %7
  br i1 %8, label %14, label %9

9:                                                ; preds = %2
  %10 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %11 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %10, i64 0, i32 0, i32 0
  %12 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %11, align 8
  %13 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %5, %12
  br i1 %13, label %14, label %17

14:                                               ; preds = %9, %2
  %15 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %15) #12
  br i1 %16, label %17, label %20

17:                                               ; preds = %14, %9
  %18 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %19 = tail call zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %18, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  br label %20

20:                                               ; preds = %14, %17
  %21 = phi i1 [ %19, %17 ], [ false, %14 ]
  ret i1 %21
}

declare zeroext i1 @_ZNK5blink10SVGElement23IsPresentationAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGSVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"* %5, %"class.blink::QualifiedName"* dereferenceable(8) %1) #12
  %7 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %7, align 8
  %9 = icmp eq %"class.blink::SVGAnimatedLength"* %8, null
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %8, i64 0, i32 1, i32 0, i32 0
  %11 = select i1 %9, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %10
  %12 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %11
  br i1 %12, label %13, label %25

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %16 = bitcast i24* %15 to i32*
  %17 = load i32, i32* %16, align 8
  %18 = lshr i32 %17, 5
  %19 = and i32 %18, 2047
  %20 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %8, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %23, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %14, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %19, %"class.blink::CSSValue"* dereferenceable(3) %24) #12
  br label %86

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 5, i32 0, i32 0
  %27 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %26, align 8
  %28 = icmp eq %"class.blink::SVGAnimatedLength"* %27, null
  %29 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %27, i64 0, i32 1, i32 0, i32 0
  %30 = select i1 %28, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %29
  %31 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %30
  br i1 %31, label %32, label %44

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %35 = bitcast i24* %34 to i32*
  %36 = load i32, i32* %35, align 8
  %37 = lshr i32 %36, 5
  %38 = and i32 %37, 2047
  %39 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %27, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %40 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %40, i64 0, i32 1, i32 0, i32 0
  %42 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %42, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %33, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %38, %"class.blink::CSSValue"* dereferenceable(3) %43) #12
  br label %86

44:                                               ; preds = %25
  %45 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %5) #12
  br i1 %45, label %46, label %84

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6, i32 0, i32 0
  %48 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %47, align 8
  %49 = icmp eq %"class.blink::SVGAnimatedLength"* %48, null
  %50 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %48, i64 0, i32 1, i32 0, i32 0
  %51 = select i1 %49, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %50
  %52 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %51
  br i1 %52, label %60, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7, i32 0, i32 0
  %55 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %54, align 8
  %56 = icmp eq %"class.blink::SVGAnimatedLength"* %55, null
  %57 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %55, i64 0, i32 1, i32 0, i32 0
  %58 = select i1 %56, %"class.blink::SVGAnimatedPropertyBase"* null, %"class.blink::SVGAnimatedPropertyBase"* %57
  %59 = icmp eq %"class.blink::SVGAnimatedPropertyBase"* %6, %58
  br i1 %59, label %72, label %84

60:                                               ; preds = %46
  %61 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %62 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %63 = bitcast i24* %62 to i32*
  %64 = load i32, i32* %63, align 8
  %65 = lshr i32 %64, 5
  %66 = and i32 %65, 2047
  %67 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %48, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %68, i64 0, i32 1, i32 0, i32 0
  %70 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %70, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %61, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %66, %"class.blink::CSSValue"* dereferenceable(3) %71) #12
  br label %86

72:                                               ; preds = %53
  %73 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.blink::SVGAnimatedPropertyBase", %"class.blink::SVGAnimatedPropertyBase"* %6, i64 0, i32 1
  %75 = bitcast i24* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = lshr i32 %76, 5
  %78 = and i32 %77, 2047
  %79 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %55, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %80 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %80, i64 0, i32 1, i32 0, i32 0
  %82 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::CSSPrimitiveValue", %"class.blink::CSSPrimitiveValue"* %82, i64 0, i32 0
  tail call void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"* %73, %"class.blink::MutableCSSPropertyValueSet"* %3, i32 %78, %"class.blink::CSSValue"* dereferenceable(3) %83) #12
  br label %86

84:                                               ; preds = %53, %44
  %85 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  tail call void @_ZN5blink18SVGGraphicsElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGGraphicsElement"* %85, %"class.blink::QualifiedName"* dereferenceable(8) %1, %"class.WTF::AtomicString"* dereferenceable(8) %2, %"class.blink::MutableCSSPropertyValueSet"* %3) #12
  br label %86

86:                                               ; preds = %32, %60, %72, %84, %13
  ret void
}

declare %"class.blink::SVGAnimatedPropertyBase"* @_ZNK5blink10SVGElement21PropertyFromAttributeERKNS_13QualifiedNameE(%"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink7Element39AddPropertyToPresentationAttributeStyleEPNS_26MutableCSSPropertyValueSetENS_13CSSPropertyIDERKNS_8CSSValueE(%"class.blink::Element"*, %"class.blink::MutableCSSPropertyValueSet"*, i32, %"class.blink::CSSValue"* dereferenceable(3)) local_unnamed_addr #1

declare void @_ZN5blink18SVGGraphicsElement36CollectStyleForPresentationAttributeERKNS_13QualifiedNameERKN3WTF12AtomicStringEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGGraphicsElement"*, %"class.blink::QualifiedName"* dereferenceable(8), %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGSVGElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %5 = getelementptr inbounds %"struct.blink::SVGElement::SvgAttributeChangedParams", %"struct.blink::SVGElement::SvgAttributeChangedParams"* %1, i64 0, i32 0
  %6 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** %5, align 8
  %7 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names10kWidthAttrE, align 8
  %8 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %7, i64 0, i32 0, i32 0
  %11 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %10, align 8
  %12 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %11
  br i1 %12, label %28, label %13

13:                                               ; preds = %2
  %14 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names11kHeightAttrE, align 8
  %15 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %15, align 8
  %17 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %16
  br i1 %17, label %28, label %18

18:                                               ; preds = %13
  %19 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kXAttrE, align 8
  %20 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %19, i64 0, i32 0, i32 0
  %21 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %20, align 8
  %22 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %21
  br i1 %22, label %128, label %23

23:                                               ; preds = %18
  %24 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names6kYAttrE, align 8
  %25 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %25, align 8
  %27 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %9, %26
  br i1 %27, label %121, label %197

28:                                               ; preds = %2, %13
  %29 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %30 = bitcast %"class.blink::SVGSVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %31 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %31, i64 166
  %33 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::SVGElement"* %29) #12
  tail call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* %29, i1 zeroext %34, %"class.blink::SVGElement"* %29) #12
  tail call void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"* %29, %"class.blink::SubtreeLayoutScope"* null) #12
  %35 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %39, label %45, label %41

41:                                               ; preds = %28
  %42 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRareData"**
  %43 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %43, i64 0, i32 1, i32 0, i32 0
  br label %47

45:                                               ; preds = %28
  %46 = bitcast %"class.blink::NodeData"** %40 to %"class.blink::NodeRenderingData"**
  br label %47

47:                                               ; preds = %41, %45
  %48 = phi %"class.blink::NodeRenderingData"** [ %44, %41 ], [ %46, %45 ]
  %49 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %49, i64 0, i32 1
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp ne %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %53, label %59

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::LayoutObject"* %51 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %51, i32 67) #12
  br i1 %58, label %59, label %197

59:                                               ; preds = %53, %47
  %60 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %62 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %61, align 8
  %63 = icmp eq %"class.blink::ElementData"* %62, null
  br i1 %63, label %70, label %64

64:                                               ; preds = %59
  %65 = bitcast %"class.blink::ElementData"* %62 to %"class.blink::UniqueElementData"*
  %66 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = and i32 %67, 1
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %73

70:                                               ; preds = %64, %59
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %60) #12
  %71 = bitcast %"class.blink::ElementData"** %61 to %"class.blink::UniqueElementData"**
  %72 = load %"class.blink::UniqueElementData"*, %"class.blink::UniqueElementData"** %71, align 8
  br label %73

73:                                               ; preds = %64, %70
  %74 = phi %"class.blink::UniqueElementData"* [ %72, %70 ], [ %65, %64 ]
  %75 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = or i32 %76, 536870912
  store atomic i32 %77, i32* %75 monotonic, align 4
  %78 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #12
  %79 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %80 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %73
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #12
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !2

97:                                               ; preds = %88
  tail call void @llvm.trap() #12
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %73, %83, %98
  %101 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason23kSVGContainerSizeChangeE, i64 0, i64 0), i8** %101, align 8
  %102 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %102, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %35, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #12
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #12
  br label %118

118:                                              ; preds = %100, %114, %117
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #12
  br i1 %52, label %119, label %197

119:                                              ; preds = %118
  %120 = bitcast %"class.blink::LayoutObject"* %51 to %"class.blink::LayoutSVGRoot"*
  call void @_ZN5blink13LayoutSVGRoot26IntrinsicSizingInfoChangedEv(%"class.blink::LayoutSVGRoot"* nonnull %120) #12
  br label %197

121:                                              ; preds = %23
  %122 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %123 = bitcast %"class.blink::SVGSVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %124 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %123, align 8
  %125 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %124, i64 166
  %126 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %125, align 8
  %127 = tail call zeroext i1 %126(%"class.blink::SVGElement"* %122) #12
  tail call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* %122, i1 zeroext %127, %"class.blink::SVGElement"* %122) #12
  br label %135

128:                                              ; preds = %18
  %129 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %130 = bitcast %"class.blink::SVGSVGElement"* %0 to i1 (%"class.blink::SVGElement"*)***
  %131 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %130, align 8
  %132 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %131, i64 166
  %133 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %132, align 8
  %134 = tail call zeroext i1 %133(%"class.blink::SVGElement"* %129) #12
  tail call void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"* %129, i1 zeroext %134, %"class.blink::SVGElement"* %129) #12
  br label %135

135:                                              ; preds = %128, %121
  %136 = phi %"class.blink::SVGElement"* [ %129, %128 ], [ %122, %121 ]
  tail call void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"* %136, %"class.blink::SubtreeLayoutScope"* null) #12
  %137 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %138 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %139 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %138, align 8
  %140 = icmp eq %"class.blink::ElementData"* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %135
  %142 = bitcast %"class.blink::ElementData"* %139 to %"class.blink::UniqueElementData"*
  %143 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %139, i64 0, i32 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = and i32 %144, 1
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %141, %135
  tail call void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"* %137) #12
  %148 = bitcast %"class.blink::ElementData"** %138 to %"class.blink::UniqueElementData"**
  %149 = load %"class.blink::UniqueElementData"*, %"class.blink::UniqueElementData"** %148, align 8
  br label %150

150:                                              ; preds = %141, %147
  %151 = phi %"class.blink::UniqueElementData"* [ %149, %147 ], [ %142, %141 ]
  %152 = getelementptr inbounds %"class.blink::UniqueElementData", %"class.blink::UniqueElementData"* %151, i64 0, i32 0, i32 0, i32 0, i32 0
  %153 = load i32, i32* %152, align 4
  %154 = or i32 %153, 536870912
  store atomic i32 %154, i32* %152 monotonic, align 4
  %155 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = bitcast %"class.blink::StyleChangeReasonForTracing"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %156) #12
  %157 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %158 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %157, i64 0, i32 3, i32 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %178, label %161

161:                                              ; preds = %150
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %178

166:                                              ; preds = %161
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  %169 = zext i32 %168 to i33
  %170 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %169, i33 1) #12
  %171 = extractvalue { i33, i1 } %170, 1
  %172 = extractvalue { i33, i1 } %170, 0
  %173 = icmp slt i33 %172, 0
  %174 = or i1 %171, %173
  br i1 %174, label %175, label %176, !prof !2

175:                                              ; preds = %166
  tail call void @llvm.trap() #12
  unreachable

176:                                              ; preds = %166
  %177 = trunc i33 %172 to i32
  store i32 %177, i32* %167, align 4
  br label %178

178:                                              ; preds = %150, %161, %176
  %179 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kAttributeE, i64 0, i64 0), i8** %179, align 8
  %180 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"** %180, align 8
  call void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"* %155, i32 32768, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %4) #12
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #12
  br label %196

196:                                              ; preds = %178, %192, %195
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %156) #12
  br label %197

197:                                              ; preds = %53, %119, %118, %196, %23
  %198 = phi i1 [ true, %196 ], [ false, %23 ], [ true, %118 ], [ true, %119 ], [ true, %53 ]
  %199 = call zeroext i1 @_ZN5blink15SVGFitToViewBox16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %6) #12
  br i1 %199, label %200, label %237

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"* %201, %"class.blink::SubtreeLayoutScope"* null) #12
  %202 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %203 = load i32, i32* %202, align 8
  %204 = and i32 %203, 1
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %205, label %211, label %207

207:                                              ; preds = %200
  %208 = bitcast %"class.blink::NodeData"** %206 to %"class.blink::NodeRareData"**
  %209 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %208, align 8
  %210 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %209, i64 0, i32 1, i32 0, i32 0
  br label %213

211:                                              ; preds = %200
  %212 = bitcast %"class.blink::NodeData"** %206 to %"class.blink::NodeRenderingData"**
  br label %213

213:                                              ; preds = %207, %211
  %214 = phi %"class.blink::NodeRenderingData"** [ %210, %207 ], [ %212, %211 ]
  %215 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %214, align 8
  %216 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %215, i64 0, i32 1
  %217 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %216, align 8
  %218 = icmp eq %"class.blink::LayoutObject"* %217, null
  br i1 %218, label %240, label %219

219:                                              ; preds = %213
  %220 = bitcast %"class.blink::LayoutObject"* %217 to void (%"class.blink::LayoutObject"*)***
  %221 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %220, align 8
  %222 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %221, i64 34
  %223 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %222, align 8
  call void %223(%"class.blink::LayoutObject"* nonnull %217) #12
  %224 = load %"class.blink::QualifiedName"*, %"class.blink::QualifiedName"** @_ZN5blink9svg_names12kViewBoxAttrE, align 8
  %225 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %8, align 8
  %226 = getelementptr inbounds %"class.blink::QualifiedName", %"class.blink::QualifiedName"* %224, i64 0, i32 0, i32 0
  %227 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %226, align 8
  %228 = icmp eq %"class.blink::QualifiedName::QualifiedNameImpl"* %225, %227
  br i1 %228, label %229, label %240

229:                                              ; preds = %219
  %230 = bitcast %"class.blink::LayoutObject"* %217 to i1 (%"class.blink::LayoutObject"*, i32)***
  %231 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %230, align 8
  %232 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %231, i64 92
  %233 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %232, align 8
  %234 = call zeroext i1 %233(%"class.blink::LayoutObject"* nonnull %217, i32 67) #12
  br i1 %234, label %235, label %240

235:                                              ; preds = %229
  %236 = bitcast %"class.blink::LayoutObject"* %217 to %"class.blink::LayoutSVGRoot"*
  call void @_ZN5blink13LayoutSVGRoot26IntrinsicSizingInfoChangedEv(%"class.blink::LayoutSVGRoot"* nonnull %236) #12
  br label %240

237:                                              ; preds = %197
  br i1 %198, label %240, label %238

238:                                              ; preds = %237
  %239 = call zeroext i1 @_ZN5blink13SVGZoomAndPan16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8) %6) #12
  br i1 %239, label %240, label %261

240:                                              ; preds = %229, %219, %213, %235, %238, %237
  %241 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %242 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %243 = load i32, i32* %242, align 8
  %244 = and i32 %243, 1
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %245, label %251, label %247

247:                                              ; preds = %240
  %248 = bitcast %"class.blink::NodeData"** %246 to %"class.blink::NodeRareData"**
  %249 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %248, align 8
  %250 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %249, i64 0, i32 1, i32 0, i32 0
  br label %253

251:                                              ; preds = %240
  %252 = bitcast %"class.blink::NodeData"** %246 to %"class.blink::NodeRenderingData"**
  br label %253

253:                                              ; preds = %247, %251
  %254 = phi %"class.blink::NodeRenderingData"** [ %250, %247 ], [ %252, %251 ]
  %255 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %254, align 8
  %256 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %255, i64 0, i32 1
  %257 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %256, align 8
  %258 = icmp eq %"class.blink::LayoutObject"* %257, null
  br i1 %258, label %260, label %259

259:                                              ; preds = %253
  call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %257) #12
  br label %260

260:                                              ; preds = %253, %259
  call void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"* %241) #12
  br label %263

261:                                              ; preds = %238
  %262 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  call void @_ZN5blink18SVGGraphicsElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGGraphicsElement"* %262, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16) %1) #12
  br label %263

263:                                              ; preds = %261, %260
  ret void
}

declare void @_ZN5blink10SVGElement31InvalidateRelativeLengthClientsEPNS_18SubtreeLayoutScopeE(%"class.blink::SVGElement"*, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare void @_ZN5blink4Node19SetNeedsStyleRecalcENS_15StyleChangeTypeERKNS_27StyleChangeReasonForTracingE(%"class.blink::Node"*, i32, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink13LayoutSVGRoot26IntrinsicSizingInfoChangedEv(%"class.blink::LayoutSVGRoot"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink15SVGFitToViewBox16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13SVGZoomAndPan16IsKnownAttributeERKNS_13QualifiedNameE(%"class.blink::QualifiedName"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink18SVGGraphicsElement19SvgAttributeChangedERKNS_10SVGElement25SvgAttributeChangedParamsE(%"class.blink::SVGGraphicsElement"*, %"struct.blink::SVGElement::SvgAttributeChangedParams"* dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement28CheckIntersectionOrEnclosureERKNS_10SVGElementERKNS_9FloatRectENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"*, %"class.blink::SVGElement"* dereferenceable(168), %"class.blink::FloatRect"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::AffineTransform", align 8
  %6 = alloca { <2 x float>, <2 x float> }, align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %6 to %"class.blink::FloatRect"*
  %8 = alloca { <2 x float>, <2 x float> }, align 8
  %9 = bitcast { <2 x float>, <2 x float> }* %8 to %"class.blink::FloatRect"*
  %10 = alloca { <2 x float>, <2 x float> }, align 8
  %11 = bitcast { <2 x float>, <2 x float> }* %10 to %"class.blink::FloatRect"*
  %12 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = and i32 %13, 1
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRareData"**
  %18 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %18, i64 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.blink::NodeData"** %16 to %"class.blink::NodeRenderingData"**
  %21 = select i1 %15, %"class.blink::NodeRenderingData"** %20, %"class.blink::NodeRenderingData"** %19
  %22 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %22, i64 0, i32 1
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %145, label %26

26:                                               ; preds = %4
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 5, i32 0
  %28 = bitcast %"class.blink::ComputedStyle"** %27 to %"class.blink::ComputedStyleBase"**
  %29 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %29, i64 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 16888498602639360
  %34 = icmp eq i160 %33, 0
  br i1 %34, label %145, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.blink::LayoutObject"* %24 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* nonnull %24, i32 68) #12
  br i1 %40, label %78, label %41

41:                                               ; preds = %35
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* nonnull %24, i32 69) #12
  br i1 %45, label %78, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* nonnull %24, i32 63) #12
  br i1 %50, label %78, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 4
  %53 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %52 to i96*
  %54 = load i96, i96* %53, align 4
  %55 = and i96 %54, 16777216
  %56 = icmp eq i96 %55, 0
  br i1 %56, label %57, label %145

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = and i32 %61, 48
  %63 = icmp ne i32 %62, 32
  %64 = icmp eq %"class.blink::Node"* %59, null
  %65 = or i1 %64, %63
  br i1 %65, label %145, label %66

66:                                               ; preds = %57
  %67 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names7kUseTagE, align 8
  %68 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %59, i64 1, i32 2
  %71 = bitcast %"class.blink::Member"* %70 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %72 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %72, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %69, i64 0, i32 3, i32 0, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, %76
  br i1 %77, label %78, label %145

78:                                               ; preds = %35, %41, %46, %66
  %79 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %79) #12
  %80 = bitcast %"class.blink::SVGElement"* %1 to %"class.blink::SVGGraphicsElement"*
  %81 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  %82 = bitcast %"class.blink::AffineTransform"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %82, i8 -1, i64 48, i1 false)
  call void @_ZNK5blink18SVGGraphicsElement10ComputeCTMENS_10SVGElement8CTMScopeEPKS0_(%"class.blink::AffineTransform"* nonnull sret %5, %"class.blink::SVGGraphicsElement"* %80, i32 2, %"class.blink::SVGGraphicsElement"* %81) #12
  %83 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #12
  %84 = bitcast %"class.blink::LayoutObject"* %24 to { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)***
  %85 = bitcast { <2 x float>, <2 x float> }* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 -1, i64 16, i1 false)
  %86 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %84, align 8
  %87 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %86, i64 39
  %88 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %87, align 8
  %89 = call { <2 x float>, <2 x float> } %88(%"class.blink::LayoutObject"* nonnull %24) #12
  %90 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 0
  %91 = extractvalue { <2 x float>, <2 x float> } %89, 0
  store <2 x float> %91, <2 x float>* %90, align 8
  %92 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %6, i64 0, i32 1
  %93 = extractvalue { <2 x float>, <2 x float> } %89, 1
  store <2 x float> %93, <2 x float>* %92, align 8
  %94 = bitcast { <2 x float>, <2 x float> }* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %94) #12
  %95 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)**, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*** %84, align 8
  %96 = getelementptr inbounds { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %95, i64 38
  %97 = load { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)*, { <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = call { <2 x float>, <2 x float> } %97(%"class.blink::LayoutObject"* nonnull %24) #12
  %99 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 0
  %100 = extractvalue { <2 x float>, <2 x float> } %98, 0
  store <2 x float> %100, <2 x float>* %99, align 8
  %101 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %8, i64 0, i32 1
  %102 = extractvalue { <2 x float>, <2 x float> } %98, 1
  store <2 x float> %102, <2 x float>* %101, align 8
  call void @_ZN5blink16SVGLayoutSupport25AdjustWithClipPathAndMaskERKNS_12LayoutObjectERKNS_9FloatRectERS4_(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %24, %"class.blink::FloatRect"* nonnull dereferenceable(16) %9, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %94) #12
  %103 = bitcast { <2 x float>, <2 x float> }* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %103) #12
  %104 = call { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"* nonnull %5, %"class.blink::FloatRect"* nonnull dereferenceable(16) %7) #12
  %105 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 0
  %106 = extractvalue { <2 x float>, <2 x float> } %104, 0
  store <2 x float> %106, <2 x float>* %105, align 8
  %107 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %10, i64 0, i32 1
  %108 = extractvalue { <2 x float>, <2 x float> } %104, 1
  store <2 x float> %108, <2 x float>* %107, align 8
  %109 = extractelement <2 x float> %108, i32 0
  %110 = extractelement <2 x float> %108, i32 1
  %111 = extractelement <2 x float> %106, i32 0
  %112 = extractelement <2 x float> %106, i32 1
  switch i32 %3, label %143 [
    i32 0, label %113
    i32 1, label %141
  ]

113:                                              ; preds = %78
  %114 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 0
  %115 = load float, float* %114, align 4
  %116 = fcmp olt float %115, 0.000000e+00
  br i1 %116, label %143, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 1, i32 1
  %119 = load float, float* %118, align 4
  %120 = fcmp olt float %119, 0.000000e+00
  %121 = fcmp olt float %109, 0.000000e+00
  %122 = or i1 %120, %121
  %123 = fcmp olt float %110, 0.000000e+00
  %124 = or i1 %122, %123
  br i1 %124, label %143, label %125

125:                                              ; preds = %117
  %126 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 0
  %127 = load float, float* %126, align 4
  %128 = fadd float %109, %111
  %129 = fcmp olt float %127, %128
  %130 = fadd float %115, %127
  %131 = fcmp ogt float %130, %111
  %132 = and i1 %131, %129
  br i1 %132, label %133, label %143

133:                                              ; preds = %125
  %134 = getelementptr inbounds %"class.blink::FloatRect", %"class.blink::FloatRect"* %2, i64 0, i32 0, i32 1
  %135 = load float, float* %134, align 4
  %136 = fadd float %110, %112
  %137 = fcmp olt float %135, %136
  br i1 %137, label %138, label %143

138:                                              ; preds = %133
  %139 = fadd float %119, %135
  %140 = fcmp olt float %112, %139
  br label %143

141:                                              ; preds = %78
  %142 = call zeroext i1 @_ZNK5blink9FloatRect8ContainsERKS0_(%"class.blink::FloatRect"* %2, %"class.blink::FloatRect"* nonnull dereferenceable(16) %11) #12
  br label %143

143:                                              ; preds = %138, %133, %125, %117, %113, %78, %141
  %144 = phi i1 [ false, %78 ], [ %142, %141 ], [ false, %117 ], [ false, %113 ], [ false, %133 ], [ false, %125 ], [ %140, %138 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %103) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %79) #12
  br label %145

145:                                              ; preds = %51, %57, %66, %26, %4, %143
  %146 = phi i1 [ %144, %143 ], [ false, %4 ], [ false, %26 ], [ false, %66 ], [ false, %57 ], [ false, %51 ]
  ret i1 %146
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK5blink18SVGGraphicsElement10ComputeCTMENS_10SVGElement8CTMScopeEPKS0_(%"class.blink::AffineTransform"* sret, %"class.blink::SVGGraphicsElement"*, i32, %"class.blink::SVGGraphicsElement"*) local_unnamed_addr #1

declare void @_ZN5blink16SVGLayoutSupport25AdjustWithClipPathAndMaskERKNS_12LayoutObjectERKNS_9FloatRectERS4_(%"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK5blink15AffineTransform7MapRectERKNS_9FloatRectE(%"class.blink::AffineTransform"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink9FloatRect8ContainsERKS0_(%"class.blink::FloatRect"*, %"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::SVGSVGElement"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"* %3, %"class.blink::Document"* dereferenceable(2848) %1) #12
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %5 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink17SMILTimeContainer9IsStartedEv(%"class.blink::SMILTimeContainer"* %5) #12
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %4, align 8
  tail call void @_ZN5blink17SMILTimeContainer17ResetDocumentTimeEv(%"class.blink::SMILTimeContainer"* %8) #12
  br label %9

9:                                                ; preds = %7, %2
  ret void
}

declare void @_ZN5blink7Element20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink17SMILTimeContainer9IsStartedEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

declare void @_ZN5blink17SMILTimeContainer17ResetDocumentTimeEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SVGSVGElement34CollectIntersectionOrEnclosureListERKNS_9FloatRectEPNS_10SVGElementENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"*, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::SVGElement"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.1541", align 8
  %6 = alloca %"class.blink::SVGGraphicsElement"*, align 8
  %7 = bitcast %"class.blink::HeapVector.1541"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %8 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #12
  %11 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %12 = icmp eq %"class.blink::SVGElement"* %2, null
  br i1 %12, label %27, label %13

13:                                               ; preds = %4
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0
  %16 = tail call zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"* %14, %"class.blink::Node"* %15) #12
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %2, i64 0, i32 0, i32 0, i32 0
  br label %30

19:                                               ; preds = %13
  %20 = tail call zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"* %14, %"class.blink::Node"* %15) #12
  br i1 %20, label %27, label %21

21:                                               ; preds = %19
  %22 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #12
  %23 = bitcast i8* %22 to i32 (...)***
  %24 = getelementptr inbounds i8, i8* %22, i64 8
  %25 = bitcast i8* %24 to i64*
  store i64 0, i64* %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18StaticNodeTypeListINS_4NodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %23, align 8
  %26 = getelementptr inbounds i8, i8* %22, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 16, i1 false) #12
  br label %165

27:                                               ; preds = %4, %19
  %28 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = icmp eq %"class.blink::SVGSVGElement"* %0, null
  br i1 %29, label %84, label %30

30:                                               ; preds = %17, %27
  %31 = phi %"class.blink::Node"* [ %18, %17 ], [ %28, %27 ]
  %32 = phi %"class.blink::SVGElement"* [ %2, %17 ], [ %11, %27 ]
  %33 = getelementptr inbounds %"class.blink::SVGElement", %"class.blink::SVGElement"* %32, i64 0, i32 0, i32 0, i32 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %30
  %38 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 1
  %39 = bitcast %"class.blink::Node"* %38 to %"class.blink::Node"**
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %77, label %42

42:                                               ; preds = %37, %74
  %43 = phi %"class.blink::Node"* [ %75, %74 ], [ %40, %37 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 48
  %47 = icmp eq i32 %46, 32
  br i1 %47, label %48, label %57

48:                                               ; preds = %42
  %49 = bitcast %"class.blink::Node"* %43 to %"class.blink::SVGElement"*
  %50 = bitcast %"class.blink::Node"* %43 to i1 (%"class.blink::SVGElement"*)***
  %51 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %50, align 8
  %52 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %51, i64 157
  %53 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %52, align 8
  %54 = tail call zeroext i1 %53(%"class.blink::SVGElement"* nonnull %49) #12
  br i1 %54, label %77, label %55

55:                                               ; preds = %48
  %56 = load i32, i32* %44, align 8
  br label %57

57:                                               ; preds = %55, %42
  %58 = phi i32 [ %56, %55 ], [ %45, %42 ]
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 1
  %63 = bitcast %"class.blink::Node"* %62 to %"class.blink::Node"**
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, null
  br i1 %65, label %66, label %74

66:                                               ; preds = %61, %57
  %67 = icmp eq %"class.blink::Node"* %43, %31
  br i1 %67, label %77, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 5, i32 0, i32 0
  %70 = load %"class.blink::Node"*, %"class.blink::Node"** %69, align 8
  %71 = icmp eq %"class.blink::Node"* %70, null
  br i1 %71, label %72, label %74

72:                                               ; preds = %68
  %73 = tail call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %43, %"class.blink::Node"* nonnull %31) #12
  br label %74

74:                                               ; preds = %72, %68, %61
  %75 = phi %"class.blink::Node"* [ %73, %72 ], [ %70, %68 ], [ %64, %61 ]
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %42

77:                                               ; preds = %48, %66, %74, %30, %37
  %78 = phi %"class.blink::Node"* [ null, %37 ], [ null, %30 ], [ null, %66 ], [ %43, %48 ], [ null, %74 ]
  %79 = icmp eq %"class.blink::Node"* %78, null
  br i1 %79, label %84, label %80

80:                                               ; preds = %77
  %81 = bitcast %"class.blink::SVGGraphicsElement"** %6 to i8*
  %82 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %5, i64 0, i32 0
  %83 = bitcast %"class.blink::SVGGraphicsElement"** %6 to %"class.blink::Node"**
  br label %90

84:                                               ; preds = %119, %125, %162, %154, %27, %77
  %85 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 32) #12
  %86 = bitcast i8* %85 to i32 (...)***
  %87 = getelementptr inbounds i8, i8* %85, i64 8
  %88 = bitcast i8* %87 to i64*
  store i64 0, i64* %88, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink18StaticNodeTypeListINS_4NodeEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %86, align 8
  %89 = getelementptr inbounds i8, i8* %85, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #12
  br label %165

90:                                               ; preds = %136, %80
  %91 = phi %"class.blink::Node"* [ %78, %80 ], [ %131, %136 ]
  %92 = bitcast %"class.blink::Node"* %91 to %"class.blink::SVGElement"*
  %93 = call zeroext i1 @_ZNK5blink13SVGSVGElement28CheckIntersectionOrEnclosureERKNS_10SVGElementERKNS_9FloatRectENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"* %0, %"class.blink::SVGElement"* dereferenceable(168) %92, %"class.blink::FloatRect"* dereferenceable(16) %1, i32 %3)
  br i1 %93, label %94, label %114

94:                                               ; preds = %90
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #12
  store %"class.blink::Node"* %91, %"class.blink::Node"** %83, align 8
  %95 = load i32, i32* %10, align 4
  %96 = load i32, i32* %9, align 8
  %97 = icmp eq i32 %95, %96
  br i1 %97, label %112, label %98, !prof !2

98:                                               ; preds = %94
  %99 = ptrtoint %"class.blink::Node"* %91 to i64
  %100 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %101 = zext i32 %95 to i64
  %102 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %100, i64 %101
  %103 = bitcast %"class.blink::Member"* %102 to i64*
  store atomic i64 %99, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %98
  %107 = bitcast %"class.blink::Node"* %91 to i8*
  %108 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #12
  br label %109

109:                                              ; preds = %106, %98
  %110 = load i32, i32* %10, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %10, align 4
  br label %113

112:                                              ; preds = %94
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_18SVGGraphicsElementEEEvOT_(%"class.WTF::Vector.1544"* nonnull %82, %"class.blink::SVGGraphicsElement"** nonnull dereferenceable(8) %6) #12
  br label %113

113:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #12
  br label %114

114:                                              ; preds = %113, %90
  %115 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 1
  %116 = bitcast %"class.blink::Node"* %115 to %"class.blink::Node"**
  %117 = load %"class.blink::Node"*, %"class.blink::Node"** %116, align 8
  %118 = icmp eq %"class.blink::Node"* %117, null
  br i1 %118, label %119, label %128

119:                                              ; preds = %114
  %120 = icmp eq %"class.blink::Node"* %91, %31
  br i1 %120, label %84, label %121

121:                                              ; preds = %119
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %91, i64 0, i32 5, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %125, label %128

125:                                              ; preds = %121
  %126 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64) %91, %"class.blink::Node"* %31) #12
  %127 = icmp eq %"class.blink::Node"* %126, null
  br i1 %127, label %84, label %128

128:                                              ; preds = %125, %121, %114
  %129 = phi %"class.blink::Node"* [ %117, %114 ], [ %123, %121 ], [ %126, %125 ]
  br label %130

130:                                              ; preds = %128, %162
  %131 = phi %"class.blink::Node"* [ %163, %162 ], [ %129, %128 ]
  %132 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 1
  %133 = load i32, i32* %132, align 8
  %134 = and i32 %133, 48
  %135 = icmp eq i32 %134, 32
  br i1 %135, label %136, label %145

136:                                              ; preds = %130
  %137 = bitcast %"class.blink::Node"* %131 to %"class.blink::SVGElement"*
  %138 = bitcast %"class.blink::Node"* %131 to i1 (%"class.blink::SVGElement"*)***
  %139 = load i1 (%"class.blink::SVGElement"*)**, i1 (%"class.blink::SVGElement"*)*** %138, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %139, i64 157
  %141 = load i1 (%"class.blink::SVGElement"*)*, i1 (%"class.blink::SVGElement"*)** %140, align 8
  %142 = call zeroext i1 %141(%"class.blink::SVGElement"* nonnull %137) #12
  br i1 %142, label %90, label %143

143:                                              ; preds = %136
  %144 = load i32, i32* %132, align 8
  br label %145

145:                                              ; preds = %143, %130
  %146 = phi i32 [ %144, %143 ], [ %133, %130 ]
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %154, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 1
  %151 = bitcast %"class.blink::Node"* %150 to %"class.blink::Node"**
  %152 = load %"class.blink::Node"*, %"class.blink::Node"** %151, align 8
  %153 = icmp eq %"class.blink::Node"* %152, null
  br i1 %153, label %154, label %162

154:                                              ; preds = %149, %145
  %155 = icmp eq %"class.blink::Node"* %131, %31
  br i1 %155, label %84, label %156

156:                                              ; preds = %154
  %157 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %131, i64 0, i32 5, i32 0, i32 0
  %158 = load %"class.blink::Node"*, %"class.blink::Node"** %157, align 8
  %159 = icmp eq %"class.blink::Node"* %158, null
  br i1 %159, label %160, label %162

160:                                              ; preds = %156
  %161 = call %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* nonnull dereferenceable(64) %131, %"class.blink::Node"* %31) #12
  br label %162

162:                                              ; preds = %160, %156, %149
  %163 = phi %"class.blink::Node"* [ %161, %160 ], [ %158, %156 ], [ %152, %149 ]
  %164 = icmp eq %"class.blink::Node"* %163, null
  br i1 %164, label %84, label %130

165:                                              ; preds = %84, %21
  %166 = phi i8* [ %85, %84 ], [ %22, %21 ]
  %167 = phi i8* [ %89, %84 ], [ %26, %21 ]
  %168 = getelementptr inbounds i8, i8* %166, i64 -4
  %169 = bitcast i8* %168 to i16*
  %170 = load atomic i16, i16* %169 monotonic, align 2
  %171 = or i16 %170, 1
  store atomic i16 %171, i16* %169 release, align 2
  %172 = bitcast i8* %167 to %"class.blink::HeapVector.1541"*
  call void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector.1541"* dereferenceable(16) %172, %"class.blink::HeapVector.1541"* nonnull dereferenceable(16) %5) #12
  %173 = bitcast i8* %166 to %"class.blink::StaticNodeTypeList"*
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  ret %"class.blink::StaticNodeTypeList"* %173
}

declare zeroext i1 @_ZNK5blink4Node8containsEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node14IsDescendantOfEPKS0_(%"class.blink::Node"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SVGSVGElement19getIntersectionListEPNS_14SVGRectTearOffEPNS_10SVGElementE(%"class.blink::SVGSVGElement"*, %"class.blink::SVGRectTearOff"*, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, %"class.blink::Node"* %4, i32 15) #12
  %9 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %1, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::SVGRectTearOff"* %1 to %"class.blink::SVGPropertyTearOffBase"*
  tail call void @_ZN5blink22SVGPropertyTearOffBase20EnsureAnimValUpdatedEv(%"class.blink::SVGPropertyTearOffBase"* %13) #12
  br label %14

14:                                               ; preds = %3, %12
  %15 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %16, i64 0, i32 3
  %18 = tail call %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SVGSVGElement34CollectIntersectionOrEnclosureListERKNS_9FloatRectEPNS_10SVGElementENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"* %0, %"class.blink::FloatRect"* dereferenceable(16) %17, %"class.blink::SVGElement"* %2, i32 0)
  ret %"class.blink::StaticNodeTypeList"* %18
}

declare void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"*, %"class.blink::Node"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SVGSVGElement16getEnclosureListEPNS_14SVGRectTearOffEPNS_10SVGElementE(%"class.blink::SVGSVGElement"*, %"class.blink::SVGRectTearOff"*, %"class.blink::SVGElement"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, %"class.blink::Node"* %4, i32 15) #12
  %9 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %1, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::SVGRectTearOff"* %1 to %"class.blink::SVGPropertyTearOffBase"*
  tail call void @_ZN5blink22SVGPropertyTearOffBase20EnsureAnimValUpdatedEv(%"class.blink::SVGPropertyTearOffBase"* %13) #12
  br label %14

14:                                               ; preds = %3, %12
  %15 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %16, i64 0, i32 3
  %18 = tail call %"class.blink::StaticNodeTypeList"* @_ZNK5blink13SVGSVGElement34CollectIntersectionOrEnclosureListERKNS_9FloatRectEPNS_10SVGElementENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"* %0, %"class.blink::FloatRect"* dereferenceable(16) %17, %"class.blink::SVGElement"* %2, i32 1)
  ret %"class.blink::StaticNodeTypeList"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement17checkIntersectionEPNS_10SVGElementEPNS_14SVGRectTearOffE(%"class.blink::SVGSVGElement"*, %"class.blink::SVGElement"*, %"class.blink::SVGRectTearOff"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, %"class.blink::Node"* %4, i32 15) #12
  %9 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %2, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::SVGRectTearOff"* %2 to %"class.blink::SVGPropertyTearOffBase"*
  tail call void @_ZN5blink22SVGPropertyTearOffBase20EnsureAnimValUpdatedEv(%"class.blink::SVGPropertyTearOffBase"* %13) #12
  br label %14

14:                                               ; preds = %3, %12
  %15 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %16, i64 0, i32 3
  %18 = tail call zeroext i1 @_ZNK5blink13SVGSVGElement28CheckIntersectionOrEnclosureERKNS_10SVGElementERKNS_9FloatRectENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"* %0, %"class.blink::SVGElement"* dereferenceable(168) %1, %"class.blink::FloatRect"* dereferenceable(16) %17, i32 0)
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement14checkEnclosureEPNS_10SVGElementEPNS_14SVGRectTearOffE(%"class.blink::SVGSVGElement"*, %"class.blink::SVGElement"*, %"class.blink::SVGRectTearOff"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::Document"*, %"class.blink::Document"** %7, align 8
  tail call void @_ZN5blink8Document27UpdateStyleAndLayoutForNodeEPKNS_4NodeENS_20DocumentUpdateReasonE(%"class.blink::Document"* %8, %"class.blink::Node"* %4, i32 15) #12
  %9 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %2, i64 0, i32 0, i32 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %14

12:                                               ; preds = %3
  %13 = bitcast %"class.blink::SVGRectTearOff"* %2 to %"class.blink::SVGPropertyTearOffBase"*
  tail call void @_ZN5blink22SVGPropertyTearOffBase20EnsureAnimValUpdatedEv(%"class.blink::SVGPropertyTearOffBase"* %13) #12
  br label %14

14:                                               ; preds = %3, %12
  %15 = getelementptr inbounds %"class.blink::SVGRectTearOff", %"class.blink::SVGRectTearOff"* %2, i64 0, i32 0, i32 1, i32 0, i32 0
  %16 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %16, i64 0, i32 3
  %18 = tail call zeroext i1 @_ZNK5blink13SVGSVGElement28CheckIntersectionOrEnclosureERKNS_10SVGElementERKNS_9FloatRectENS0_20GeometryMatchingModeE(%"class.blink::SVGSVGElement"* %0, %"class.blink::SVGElement"* dereferenceable(168) %1, %"class.blink::FloatRect"* dereferenceable(16) %17, i32 1)
  ret i1 %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement11deselectAllEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %3 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %3, i64 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %6 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %5) #12
  %7 = icmp eq %"class.blink::LocalFrame"* %6, null
  br i1 %7, label %11, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %6, i64 0, i32 14, i32 0, i32 0
  %10 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %9, align 8
  tail call void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"* %10) #12
  br label %11

11:                                               ; preds = %1, %8
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink14FrameSelection5ClearEv(%"class.blink::FrameSelection"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGNumberTearOff"* @_ZN5blink13SVGSVGElement15createSVGNumberEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::SVGNumberTearOff"* @_ZN5blink16SVGNumberTearOff14CreateDetachedEv() #12
  ret %"class.blink::SVGNumberTearOff"* %1
}

declare %"class.blink::SVGNumberTearOff"* @_ZN5blink16SVGNumberTearOff14CreateDetachedEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGLengthTearOff"* @_ZN5blink13SVGSVGElement15createSVGLengthEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::SVGLengthTearOff"* @_ZN5blink16SVGLengthTearOff14CreateDetachedEv() #12
  ret %"class.blink::SVGLengthTearOff"* %1
}

declare %"class.blink::SVGLengthTearOff"* @_ZN5blink16SVGLengthTearOff14CreateDetachedEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGAngleTearOff"* @_ZN5blink13SVGSVGElement14createSVGAngleEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::SVGAngleTearOff"* @_ZN5blink15SVGAngleTearOff14CreateDetachedEv() #12
  ret %"class.blink::SVGAngleTearOff"* %1
}

declare %"class.blink::SVGAngleTearOff"* @_ZN5blink15SVGAngleTearOff14CreateDetachedEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPointTearOff"* @_ZN5blink13SVGSVGElement14createSVGPointEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.blink::FloatPoint", align 4
  %2 = bitcast %"class.blink::FloatPoint"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2) #12
  %3 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 0
  store float 0.000000e+00, float* %3, align 4
  %4 = getelementptr inbounds %"class.blink::FloatPoint", %"class.blink::FloatPoint"* %1, i64 0, i32 1
  store float 0.000000e+00, float* %4, align 4
  %5 = call %"class.blink::SVGPointTearOff"* @_ZN5blink15SVGPointTearOff14CreateDetachedERKNS_10FloatPointE(%"class.blink::FloatPoint"* nonnull dereferenceable(8) %1) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2) #12
  ret %"class.blink::SVGPointTearOff"* %5
}

declare %"class.blink::SVGPointTearOff"* @_ZN5blink15SVGPointTearOff14CreateDetachedERKNS_10FloatPointE(%"class.blink::FloatPoint"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGMatrixTearOff"* @_ZN5blink13SVGSVGElement15createSVGMatrixEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.blink::AffineTransform", align 8
  %2 = bitcast %"class.blink::AffineTransform"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %2) #12
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %1) #12
  %3 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 72) #12
  %4 = bitcast i8* %3 to %"class.blink::SVGMatrixTearOff"*
  call void @_ZN5blink16SVGMatrixTearOffC1ERKNS_15AffineTransformE(%"class.blink::SVGMatrixTearOff"* %4, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %1) #12
  %5 = getelementptr inbounds i8, i8* %3, i64 -4
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = or i16 %7, 1
  store atomic i16 %8, i16* %6 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %2) #12
  ret %"class.blink::SVGMatrixTearOff"* %4
}

declare void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGRectTearOff"* @_ZN5blink13SVGSVGElement13createSVGRectEv() local_unnamed_addr #0 align 2 {
  %1 = alloca %"class.blink::FloatRect", align 4
  %2 = bitcast %"class.blink::FloatRect"* %1 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %2) #12
  %3 = bitcast %"class.blink::FloatRect"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %3, i8 0, i64 16, i1 false)
  %4 = call %"class.blink::SVGRectTearOff"* @_ZN5blink14SVGRectTearOff14CreateDetachedERKNS_9FloatRectE(%"class.blink::FloatRect"* nonnull dereferenceable(16) %1) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %2) #12
  ret %"class.blink::SVGRectTearOff"* %4
}

declare %"class.blink::SVGRectTearOff"* @_ZN5blink14SVGRectTearOff14CreateDetachedERKNS_9FloatRectE(%"class.blink::FloatRect"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGTransformTearOff"* @_ZN5blink13SVGSVGElement18createSVGTransformEv() local_unnamed_addr #0 align 2 {
  %1 = tail call %"class.blink::SVGTransformTearOff"* @_ZN5blink19SVGTransformTearOff14CreateDetachedEv() #12
  ret %"class.blink::SVGTransformTearOff"* %1
}

declare %"class.blink::SVGTransformTearOff"* @_ZN5blink19SVGTransformTearOff14CreateDetachedEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGTransformTearOff"* @_ZN5blink13SVGSVGElement28createSVGTransformFromMatrixEPNS_16SVGMatrixTearOffE(%"class.blink::SVGMatrixTearOff"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 56) #12
  %3 = bitcast i8* %2 to %"class.blink::SVGTransformTearOff"*
  tail call void @_ZN5blink19SVGTransformTearOffC1EPNS_16SVGMatrixTearOffE(%"class.blink::SVGTransformTearOff"* %3, %"class.blink::SVGMatrixTearOff"* %0) #12
  %4 = getelementptr inbounds i8, i8* %2, i64 -4
  %5 = bitcast i8* %4 to i16*
  %6 = load atomic i16, i16* %5 monotonic, align 2
  %7 = or i16 %6, 1
  store atomic i16 %7, i16* %5 release, align 2
  ret %"class.blink::SVGTransformTearOff"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13SVGSVGElement29LocalCoordinateSpaceTransformENS_10SVGElement8CTMScopeE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::SVGSVGElement"*, i32) unnamed_addr #5 align 2 {
  %4 = alloca %"class.blink::AffineTransform", align 8
  %5 = alloca %"class.blink::SVGLengthContext", align 8
  %6 = alloca %"class.blink::TransformationMatrix", align 8
  %7 = alloca %"class.blink::TransformationMatrix", align 8
  %8 = alloca %"class.blink::TransformationMatrix", align 8
  %9 = alloca %"class.blink::AffineTransform", align 8
  %10 = alloca <2 x float>, align 8
  %11 = bitcast <2 x float>* %10 to %"class.blink::FloatSize"*
  %12 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %12) #12
  %13 = bitcast %"class.blink::AffineTransform"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -1, i64 48, i1 false)
  call void @_ZN5blink15AffineTransformC1Ev(%"class.blink::AffineTransform"* nonnull %4) #12
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 0, i32 0
  %15 = call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %14) #12
  br i1 %15, label %32, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::SVGLengthContext"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %5, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %18, align 8
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %5, %"class.blink::SVGElement"* %14) #12
  %19 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 4, i32 0, i32 0
  %20 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %20, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %22 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %21, align 8
  %23 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %22, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %5) #12
  %24 = fpext float %23 to double
  %25 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 5, i32 0, i32 0
  %26 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %26, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %27, align 8
  %29 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %28, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %5) #12
  %30 = fpext float %29 to double
  %31 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"* nonnull %4, double %24, double %30) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %82

32:                                               ; preds = %3
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %82

34:                                               ; preds = %32
  %35 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %38, label %44, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %34
  %45 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi %"class.blink::NodeRenderingData"** [ %43, %40 ], [ %45, %44 ]
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 1
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %82, label %52

52:                                               ; preds = %46
  %53 = bitcast %"class.blink::TransformationMatrix"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %53) #12
  %54 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 0
  store double 1.000000e+00, double* %54, align 8
  %55 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 0, i64 1
  %56 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 1
  %57 = bitcast double* %55 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #12
  store double 1.000000e+00, double* %56, align 8
  %58 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 1, i64 2
  %59 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 2
  %60 = bitcast double* %58 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 32, i1 false) #12
  store double 1.000000e+00, double* %59, align 8
  %61 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 2, i64 3
  %62 = getelementptr inbounds %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix"* %6, i64 0, i32 0, i32 0, i64 3, i64 3
  %63 = bitcast double* %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 32, i1 false) #12
  store double 1.000000e+00, double* %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 0, i32 5, i32 0
  %65 = bitcast %"class.blink::ComputedStyle"** %64 to %"class.blink::ComputedStyleBase"**
  %66 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %66, i64 0, i32 1, i32 0, i32 0
  %68 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %68, i64 0, i32 2, i32 0, i32 0
  %70 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %70, i64 0, i32 6
  %72 = load float, float* %71, align 8
  %73 = fpext float %72 to double
  %74 = fdiv double 1.000000e+00, %73
  %75 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix5ScaleEd(%"class.blink::TransformationMatrix"* nonnull %6, double %74) #12
  %76 = bitcast %"class.blink::TransformationMatrix"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %76) #12
  call void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* nonnull sret %7, %"class.blink::LayoutObject"* nonnull %50, %"class.blink::LayoutBoxModelObject"* null, i32 0) #12
  %77 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %6, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %76) #12
  %78 = bitcast %"class.blink::TransformationMatrix"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %78) #12
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %50, i64 3, i32 1, i32 1
  %80 = bitcast i8* %79 to %"class.blink::AffineTransform"*
  call void @_ZN5blink20TransformationMatrixC1ERKNS_15AffineTransformE(%"class.blink::TransformationMatrix"* nonnull %8, %"class.blink::AffineTransform"* dereferenceable(48) %80) #12
  %81 = call dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"* nonnull %6, %"class.blink::TransformationMatrix"* nonnull dereferenceable(128) %8) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %78) #12
  call void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* sret %0, %"class.blink::TransformationMatrix"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %53) #12
  br label %105

82:                                               ; preds = %46, %32, %16
  %83 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 1, i32 1, i32 0, i32 0
  %84 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %84, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %86, i64 0, i32 1
  %88 = load i8, i8* %87, align 8, !range !3
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %82
  %91 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %86, i64 0, i32 3, i32 1, i32 0
  %92 = load float, float* %91, align 4
  %93 = fcmp ugt float %92, 0.000000e+00
  br i1 %93, label %94, label %103

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %86, i64 0, i32 3, i32 1, i32 1
  %96 = load float, float* %95, align 4
  %97 = fcmp ugt float %96, 0.000000e+00
  br i1 %97, label %98, label %103

98:                                               ; preds = %94, %82
  %99 = bitcast %"class.blink::AffineTransform"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %99) #12
  %100 = bitcast <2 x float>* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12
  %101 = call <2 x float> @_ZNK5blink13SVGSVGElement19CurrentViewportSizeEv(%"class.blink::SVGSVGElement"* %1)
  store <2 x float> %101, <2 x float>* %10, align 8
  call void @_ZNK5blink13SVGSVGElement22ViewBoxToViewTransformERKNS_9FloatSizeE(%"class.blink::AffineTransform"* nonnull sret %9, %"class.blink::SVGSVGElement"* %1, %"class.blink::FloatSize"* nonnull dereferenceable(8) %11)
  %102 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* nonnull %4, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %99) #12
  br label %103

103:                                              ; preds = %94, %90, %98
  %104 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %104, i8* nonnull align 8 %12, i64 48, i1 false)
  br label %105

105:                                              ; preds = %52, %103
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %12) #12
  ret void
}

declare void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform9TranslateEdd(%"class.blink::AffineTransform"*, double, double) local_unnamed_addr #1

declare float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"*, %"class.blink::SVGLengthContext"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix5ScaleEd(%"class.blink::TransformationMatrix"*, double) local_unnamed_addr #1

declare dereferenceable(128) %"class.blink::TransformationMatrix"* @_ZN5blink20TransformationMatrix8MultiplyERKS0_(%"class.blink::TransformationMatrix"*, %"class.blink::TransformationMatrix"* dereferenceable(128)) local_unnamed_addr #1

declare void @_ZN5blink20TransformationMatrixC1ERKNS_15AffineTransformE(%"class.blink::TransformationMatrix"*, %"class.blink::AffineTransform"* dereferenceable(48)) unnamed_addr #1

declare void @_ZNK5blink20TransformationMatrix17ToAffineTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::TransformationMatrix"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement15HasEmptyViewBoxEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %5, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %17, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %5, i64 0, i32 3, i32 1, i32 0
  %11 = load float, float* %10, align 4
  %12 = fcmp ugt float %11, 0.000000e+00
  br i1 %12, label %13, label %17

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %5, i64 0, i32 3, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = fcmp ole float %15, 0.000000e+00
  br label %17

17:                                               ; preds = %1, %13, %9
  %18 = phi i1 [ false, %1 ], [ true, %9 ], [ %16, %13 ]
  ret i1 %18
}

declare dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"*, %"class.blink::AffineTransform"* dereferenceable(48)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13SVGSVGElement22ViewBoxToViewTransformERKNS_9FloatSizeE(%"class.blink::AffineTransform"* noalias sret, %"class.blink::SVGSVGElement"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.blink::FloatRect"*
  %6 = alloca %"class.blink::AffineTransform", align 8
  %7 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  %8 = bitcast %"class.blink::AffineTransform"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 -1, i64 48, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #12
  %9 = tail call { <2 x float>, <2 x float> } @_ZNK5blink13SVGSVGElement18CurrentViewBoxRectEv(%"class.blink::SVGSVGElement"* %1)
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  %11 = extractvalue { <2 x float>, <2 x float> } %9, 0
  store <2 x float> %11, <2 x float>* %10, align 8
  %12 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  %13 = extractvalue { <2 x float>, <2 x float> } %9, 1
  store <2 x float> %13, <2 x float>* %12, align 8
  %14 = tail call %"class.blink::SVGPreserveAspectRatio"* @_ZNK5blink13SVGSVGElement26CurrentPreserveAspectRatioEv(%"class.blink::SVGSVGElement"* %1)
  call void @_ZN5blink15SVGFitToViewBox22ViewBoxToViewTransformERKNS_9FloatRectEPKNS_22SVGPreserveAspectRatioERKNS_9FloatSizeE(%"class.blink::AffineTransform"* sret %0, %"class.blink::FloatRect"* nonnull dereferenceable(16) %5, %"class.blink::SVGPreserveAspectRatio"* %14, %"class.blink::FloatSize"* dereferenceable(8) %2) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #12
  %15 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %1, i64 0, i32 10, i32 0, i32 0
  %16 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %15, align 8
  %17 = icmp eq %"class.blink::SVGViewSpec"* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %16, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::SVGTransformList"*, %"class.blink::SVGTransformList"** %19, align 8
  %21 = icmp eq %"class.blink::SVGTransformList"* %20, null
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::SVGTransformList", %"class.blink::SVGTransformList"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::AffineTransform"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %27) #12
  call void @_ZNK5blink16SVGTransformList11ConcatenateEv(%"class.blink::AffineTransform"* nonnull sret %6, %"class.blink::SVGTransformList"* nonnull %20) #12
  %28 = call dereferenceable(48) %"class.blink::AffineTransform"* @_ZN5blink15AffineTransform8MultiplyERKS0_(%"class.blink::AffineTransform"* %0, %"class.blink::AffineTransform"* nonnull dereferenceable(48) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %3, %22, %26, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden <2 x float> @_ZNK5blink13SVGSVGElement19CurrentViewportSizeEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %111, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::LayoutObject"* %17 to i1 (%"class.blink::LayoutObject"*, i32)***
  %21 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %21, i64 92
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %22, align 8
  %24 = tail call zeroext i1 %23(%"class.blink::LayoutObject"* nonnull %17, i32 67) #12
  br i1 %24, label %25, label %92

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBox"*
  %27 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* nonnull %26) #12
  %28 = bitcast %"class.blink::LayoutObject"* %17 to %"class.blink::LayoutBoxModelObject"*
  %29 = bitcast %"class.blink::LayoutObject"* %17 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %29, align 8
  %31 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %30, i64 120
  %32 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %31, align 8
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* nonnull %28) #12
  %34 = icmp sgt i32 %33, -1
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %33) #12
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !2
  %40 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %29, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %40, i64 121
  %42 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutBoxModelObject"* nonnull %28) #12
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %39, i32 %43) #12
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !2
  %50 = icmp sgt i32 %49, 0
  %51 = select i1 %50, i32 %49, i32 0
  %52 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* nonnull %26) #12
  %53 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %29, align 8
  %54 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %53, i64 118
  %55 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %54, align 8
  %56 = tail call i32 %55(%"class.blink::LayoutBoxModelObject"* nonnull %28) #12
  %57 = icmp sgt i32 %56, -1
  %58 = select i1 %57, i32 -2147483648, i32 2147483647
  %59 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %52, i32 %56) #12
  %60 = extractvalue { i32, i1 } %59, 1
  %61 = extractvalue { i32, i1 } %59, 0
  %62 = select i1 %60, i32 %58, i32 %61, !prof !2
  %63 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %29, align 8
  %64 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %63, i64 119
  %65 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %64, align 8
  %66 = tail call i32 %65(%"class.blink::LayoutBoxModelObject"* nonnull %28) #12
  %67 = icmp sgt i32 %66, -1
  %68 = select i1 %67, i32 -2147483648, i32 2147483647
  %69 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %62, i32 %66) #12
  %70 = extractvalue { i32, i1 } %69, 1
  %71 = extractvalue { i32, i1 } %69, 0
  %72 = select i1 %70, i32 %68, i32 %71, !prof !2
  %73 = icmp sgt i32 %72, 0
  %74 = select i1 %73, i32 %72, i32 0
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 5, i32 0
  %76 = bitcast %"class.blink::ComputedStyle"** %75 to %"class.blink::ComputedStyleBase"**
  %77 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %77, i64 0, i32 1, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %81, i64 0, i32 6
  %83 = load float, float* %82, align 8
  %84 = sitofp i32 %51 to float
  %85 = fmul float %84, 1.562500e-02
  %86 = fdiv float %85, %83
  %87 = sitofp i32 %74 to float
  %88 = fmul float %87, 1.562500e-02
  %89 = fdiv float %88, %83
  %90 = insertelement <2 x float> undef, float %86, i32 0
  %91 = insertelement <2 x float> %90, float %89, i32 1
  br label %111

92:                                               ; preds = %19
  %93 = load i32, i32* %2, align 8
  %94 = and i32 %93, 1
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %100, label %96

96:                                               ; preds = %92
  %97 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %98 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %98, i64 0, i32 1, i32 0, i32 0
  br label %102

100:                                              ; preds = %92
  %101 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %102

102:                                              ; preds = %96, %100
  %103 = phi %"class.blink::NodeRenderingData"** [ %99, %96 ], [ %101, %100 ]
  %104 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %104, i64 0, i32 1
  %106 = bitcast %"class.blink::LayoutObject"** %105 to %"class.blink::LayoutSVGViewportContainer"**
  %107 = load %"class.blink::LayoutSVGViewportContainer"*, %"class.blink::LayoutSVGViewportContainer"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::LayoutSVGViewportContainer", %"class.blink::LayoutSVGViewportContainer"* %107, i64 0, i32 2, i32 1
  %109 = bitcast %"class.blink::FloatSize"* %108 to <2 x float>*
  %110 = load <2 x float>, <2 x float>* %109, align 4
  br label %111

111:                                              ; preds = %13, %102, %25
  %112 = phi <2 x float> [ %91, %25 ], [ %110, %102 ], [ zeroinitializer, %13 ]
  ret <2 x float> %112
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::SVGSVGElement"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %4 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %4, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::Document"*, %"class.blink::Document"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %6, i64 0, i32 47, i32 0, i32 0
  %8 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = icmp eq %"class.blink::Element"* %8, %9
  br i1 %10, label %16, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 1
  %13 = tail call zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"* %12) #12
  br i1 %13, label %14, label %16

14:                                               ; preds = %11
  %15 = tail call zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"* %9, %"class.blink::ComputedStyle"* dereferenceable(104) %1) #12
  br label %16

16:                                               ; preds = %11, %14, %2
  %17 = phi i1 [ true, %2 ], [ false, %11 ], [ %15, %14 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement7IsValidEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 1
  %3 = tail call zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"* %2) #12
  ret i1 %3
}

declare zeroext i1 @_ZNK5blink7Element20LayoutObjectIsNeededERKNS_13ComputedStyleE(%"class.blink::Element"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::SVGSVGElement"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"* %3, %"struct.blink::Node::AttachContext"* dereferenceable(32) %1) #12
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 1
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %7, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %11 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %11, i64 0, i32 1, i32 0, i32 0
  br label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %15

15:                                               ; preds = %9, %13
  %16 = phi %"class.blink::NodeRenderingData"** [ %12, %9 ], [ %14, %13 ]
  %17 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %17, i64 0, i32 1
  %19 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutObject"* %19, null
  br i1 %20, label %54, label %21

21:                                               ; preds = %15
  br i1 %7, label %26, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %24 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %24, i64 0, i32 1, i32 0, i32 0
  br label %28

26:                                               ; preds = %21
  %27 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %28

28:                                               ; preds = %22, %26
  %29 = phi %"class.blink::NodeRenderingData"** [ %25, %22 ], [ %27, %26 ]
  %30 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %30, i64 0, i32 1
  %32 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %31, align 8
  %33 = bitcast %"class.blink::LayoutObject"* %32 to i1 (%"class.blink::LayoutObject"*, i32)***
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, i64 92
  %36 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, align 8
  %37 = tail call zeroext i1 %36(%"class.blink::LayoutObject"* %32, i32 67) #12
  br i1 %37, label %38, label %54

38:                                               ; preds = %28
  %39 = load i32, i32* %4, align 8
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %46, label %42

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRareData"**
  %44 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %44, i64 0, i32 1, i32 0, i32 0
  br label %48

46:                                               ; preds = %38
  %47 = bitcast %"class.blink::NodeData"** %8 to %"class.blink::NodeRenderingData"**
  br label %48

48:                                               ; preds = %42, %46
  %49 = phi %"class.blink::NodeRenderingData"** [ %45, %42 ], [ %47, %46 ]
  %50 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %50, i64 0, i32 1
  %52 = bitcast %"class.blink::LayoutObject"** %51 to %"class.blink::LayoutSVGRoot"**
  %53 = load %"class.blink::LayoutSVGRoot"*, %"class.blink::LayoutSVGRoot"** %52, align 8
  tail call void @_ZN5blink13LayoutSVGRoot26IntrinsicSizingInfoChangedEv(%"class.blink::LayoutSVGRoot"* %53) #12
  br label %54

54:                                               ; preds = %15, %48, %28
  ret void
}

declare void @_ZN5blink7Element16AttachLayoutTreeERNS_4Node13AttachContextE(%"class.blink::Element"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutObject"* @_ZN5blink13SVGSVGElement18CreateLayoutObjectERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::SVGSVGElement"*, %"class.blink::ComputedStyle"* nocapture readnone dereferenceable(104), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %5 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %5, i64 0, i32 2, i32 0, i32 0
  %7 = load %"class.blink::Document"*, %"class.blink::Document"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %7, i64 0, i32 2
  %9 = bitcast %"class.blink::UseCounter"* %8 to void (%"class.blink::UseCounter"*, i32)***
  %10 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %10, i64 3
  %12 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %11, align 8
  tail call void %12(%"class.blink::UseCounter"* %8, i32 3217) #12
  %13 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %14 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %13) #12
  br i1 %14, label %15, label %18

15:                                               ; preds = %3
  %16 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 336) #12
  %17 = bitcast i8* %16 to %"class.blink::LayoutSVGRoot"*
  tail call void @_ZN5blink13LayoutSVGRootC1EPNS_10SVGElementE(%"class.blink::LayoutSVGRoot"* %17, %"class.blink::SVGElement"* %13) #12
  br label %21

18:                                               ; preds = %3
  %19 = tail call i8* @_ZN5blink12LayoutObjectnwEm(i64 216) #12
  %20 = bitcast i8* %19 to %"class.blink::LayoutSVGViewportContainer"*
  tail call void @_ZN5blink26LayoutSVGViewportContainerC1EPNS_13SVGSVGElementE(%"class.blink::LayoutSVGViewportContainer"* %20, %"class.blink::SVGSVGElement"* %0) #12
  br label %21

21:                                               ; preds = %18, %15
  %22 = phi i8* [ %16, %15 ], [ %19, %18 ]
  %23 = bitcast i8* %22 to %"class.blink::LayoutObject"*
  ret %"class.blink::LayoutObject"* %23
}

declare i8* @_ZN5blink12LayoutObjectnwEm(i64) local_unnamed_addr #1

declare void @_ZN5blink13LayoutSVGRootC1EPNS_10SVGElementE(%"class.blink::LayoutSVGRoot"*, %"class.blink::SVGElement"*) unnamed_addr #1

declare void @_ZN5blink26LayoutSVGViewportContainerC1EPNS_13SVGSVGElementE(%"class.blink::LayoutSVGViewportContainer"*, %"class.blink::SVGSVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink13SVGSVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGSVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %55, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %11, i64 0, i32 2
  %13 = bitcast %"class.blink::UseCounter"* %12 to void (%"class.blink::UseCounter"*, i32)***
  %14 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %14, i64 3
  %16 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %15, align 8
  tail call void %16(%"class.blink::UseCounter"* %12, i32 250) #12
  %17 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 107
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 64
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %34, label %25

25:                                               ; preds = %7
  %26 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %27 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %26, i64 0, i32 2, i32 0, i32 0
  %28 = load %"class.blink::Document"*, %"class.blink::Document"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %28, i64 0, i32 2
  %30 = bitcast %"class.blink::UseCounter"* %29 to void (%"class.blink::UseCounter"*, i32)***
  %31 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %31, i64 3
  %33 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %32, align 8
  tail call void %33(%"class.blink::UseCounter"* %29, i32 329) #12
  br label %34

34:                                               ; preds = %7, %25
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = tail call dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"* %37) #12
  tail call void @_ZN5blink21SVGDocumentExtensions16AddTimeContainerEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"* %38, %"class.blink::SVGSVGElement"* %0) #12
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 68
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %55, label %45

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 85
  %47 = load i32, i32* %46, align 4
  %48 = icmp sgt i32 %47, 1
  br i1 %48, label %49, label %55

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %51 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK5blink17SMILTimeContainer9IsStartedEv(%"class.blink::SMILTimeContainer"* %51) #12
  br i1 %52, label %55, label %53

53:                                               ; preds = %49
  %54 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %50, align 8
  tail call void @_ZN5blink17SMILTimeContainer5StartEv(%"class.blink::SMILTimeContainer"* %54) #12
  br label %55

55:                                               ; preds = %2, %34, %45, %49, %53
  %56 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %57 = tail call i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"* %56, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  ret i32 %57
}

declare dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"*) local_unnamed_addr #1

declare void @_ZN5blink21SVGDocumentExtensions16AddTimeContainerEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGSVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink17SMILTimeContainer5StartEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

declare i32 @_ZN5blink10SVGElement12InsertedIntoERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGSVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, 256
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %9, i64 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::Document"*, %"class.blink::Document"** %10, align 8
  %12 = tail call dereferenceable(88) %"class.blink::SVGDocumentExtensions"* @_ZN5blink8Document19AccessSVGExtensionsEv(%"class.blink::Document"* %11) #12
  tail call void @_ZN5blink21SVGDocumentExtensions19RemoveTimeContainerEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"* %12, %"class.blink::SVGSVGElement"* %0) #12
  tail call void @_ZN5blink21SVGDocumentExtensions42RemoveSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"* %12, %"class.blink::SVGSVGElement"* %0) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"* %14, %"class.blink::ContainerNode"* dereferenceable(80) %1) #12
  ret void
}

declare void @_ZN5blink21SVGDocumentExtensions19RemoveTimeContainerEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGSVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink21SVGDocumentExtensions42RemoveSVGRootWithRelativeLengthDescendentsEPNS_13SVGSVGElementE(%"class.blink::SVGDocumentExtensions"*, %"class.blink::SVGSVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement11RemovedFromERNS_13ContainerNodeE(%"class.blink::SVGElement"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement15pauseAnimationsEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink17SMILTimeContainer8IsPausedEv(%"class.blink::SMILTimeContainer"* %3) #12
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  tail call void @_ZN5blink17SMILTimeContainer5PauseEv(%"class.blink::SMILTimeContainer"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  ret void
}

declare zeroext i1 @_ZNK5blink17SMILTimeContainer8IsPausedEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

declare void @_ZN5blink17SMILTimeContainer5PauseEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement17unpauseAnimationsEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink17SMILTimeContainer8IsPausedEv(%"class.blink::SMILTimeContainer"* %3) #12
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  tail call void @_ZN5blink17SMILTimeContainer7UnpauseEv(%"class.blink::SMILTimeContainer"* %6) #12
  br label %7

7:                                                ; preds = %5, %1
  ret void
}

declare void @_ZN5blink17SMILTimeContainer7UnpauseEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement16animationsPausedEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = tail call zeroext i1 @_ZNK5blink17SMILTimeContainer8IsPausedEv(%"class.blink::SMILTimeContainer"* %3) #12
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK5blink13SVGSVGElement14getCurrentTimeEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %2, align 8
  %4 = tail call i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"* %3) #12
  %5 = add i64 %4, -9223372036854775807
  %6 = icmp ult i64 %5, 2
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = icmp slt i64 %4, 0
  br i1 %8, label %13, label %18

9:                                                ; preds = %1
  %10 = sitofp i64 %4 to double
  %11 = fdiv double %10, 1.000000e+06
  %12 = fcmp ult double %11, 0x47EFFFFFE0000000
  br i1 %12, label %13, label %18

13:                                               ; preds = %7, %9
  %14 = phi double [ %11, %9 ], [ 0xFFF0000000000000, %7 ]
  %15 = fcmp ole double %14, 0xC7EFFFFFE0000000
  %16 = select i1 %15, double 0xC7EFFFFFE0000000, double %14
  %17 = fptrunc double %16 to float
  br label %18

18:                                               ; preds = %7, %9, %13
  %19 = phi float [ %17, %13 ], [ 0x47EFFFFFE0000000, %9 ], [ 0x47EFFFFFE0000000, %7 ]
  ret float %19
}

declare i64 @_ZNK5blink17SMILTimeContainer7ElapsedEv(%"class.blink::SMILTimeContainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement14setCurrentTimeEf(%"class.blink::SVGSVGElement"* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8, i32 0, i32 0
  %4 = load %"class.blink::SMILTimeContainer"*, %"class.blink::SMILTimeContainer"** %3, align 8
  %5 = fcmp olt float %1, 0.000000e+00
  %6 = select i1 %5, float 0.000000e+00, float %1
  %7 = fpext float %6 to double
  %8 = fmul double %7, 1.000000e+06
  %9 = fcmp ult double %8, 0xC3E0000000000000
  %10 = fcmp ugt double %8, 0x43DFFFFFFFFFFFFF
  %11 = fcmp ogt double %8, 0xC3E0000000000000
  %12 = select i1 %11, double %8, double 0xC3E0000000000000
  %13 = fptosi double %12 to i64
  %14 = select i1 %9, i64 0, i64 9223372036854775807
  %15 = select i1 %10, i64 %14, i64 %13
  %16 = icmp slt i64 %15, 9223372036854775805
  %17 = select i1 %16, i64 %15, i64 9223372036854775805
  tail call void @_ZN5blink17SMILTimeContainer10SetElapsedENS_8SMILTimeE(%"class.blink::SMILTimeContainer"* %4, i64 %17) #12
  ret void
}

declare void @_ZN5blink17SMILTimeContainer10SetElapsedENS_8SMILTimeE(%"class.blink::SMILTimeContainer"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement22SelfHasRelativeLengthsEv(%"class.blink::SVGSVGElement"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %4, align 8
  %6 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %5) #12
  br i1 %6, label %25, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 5, i32 0, i32 0
  %9 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %9, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %10, align 8
  %12 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %11) #12
  br i1 %12, label %25, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %15, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %16, align 8
  %18 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %17) #12
  br i1 %18, label %25, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %21, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %22, align 8
  %24 = tail call zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"* %23) #12
  br label %25

25:                                               ; preds = %19, %13, %7, %1
  %26 = phi i1 [ true, %13 ], [ true, %7 ], [ true, %1 ], [ %24, %19 ]
  ret i1 %26
}

declare zeroext i1 @_ZNK5blink9SVGLength10IsRelativeEv(%"class.blink::SVGLength"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement15HasValidViewBoxEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %3 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %3, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %5 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %5, i64 0, i32 1
  %7 = load i8, i8* %6, align 8, !range !3
  %8 = icmp ne i8 %7, 0
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink13SVGSVGElement23ShouldSynthesizeViewBoxEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, 1
  %5 = icmp eq i32 %4, 0
  %6 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %5, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %9 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %9, i64 0, i32 1, i32 0, i32 0
  br label %13

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi %"class.blink::NodeRenderingData"** [ %10, %7 ], [ %12, %11 ]
  %15 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %15, i64 0, i32 1
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutObject"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  br i1 %5, label %24, label %20

20:                                               ; preds = %19
  %21 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %22 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %22, i64 0, i32 1, i32 0, i32 0
  br label %26

24:                                               ; preds = %19
  %25 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %26

26:                                               ; preds = %20, %24
  %27 = phi %"class.blink::NodeRenderingData"** [ %23, %20 ], [ %25, %24 ]
  %28 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %28, i64 0, i32 1
  %30 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %29, align 8
  %31 = bitcast %"class.blink::LayoutObject"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %30, i32 67) #12
  br i1 %35, label %36, label %53

36:                                               ; preds = %26
  %37 = load i32, i32* %2, align 8
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %44, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %36
  %45 = bitcast %"class.blink::NodeData"** %6 to %"class.blink::NodeRenderingData"**
  br label %46

46:                                               ; preds = %40, %44
  %47 = phi %"class.blink::NodeRenderingData"** [ %43, %40 ], [ %45, %44 ]
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 1
  %50 = bitcast %"class.blink::LayoutObject"** %49 to %"class.blink::LayoutSVGRoot"**
  %51 = load %"class.blink::LayoutSVGRoot"*, %"class.blink::LayoutSVGRoot"** %50, align 8
  %52 = tail call zeroext i1 @_ZNK5blink13LayoutSVGRoot25IsEmbeddedThroughSVGImageEv(%"class.blink::LayoutSVGRoot"* %51) #12
  br label %53

53:                                               ; preds = %13, %46, %26
  %54 = phi i1 [ false, %26 ], [ false, %13 ], [ %52, %46 ]
  ret i1 %54
}

declare zeroext i1 @_ZNK5blink13LayoutSVGRoot25IsEmbeddedThroughSVGImageEv(%"class.blink::LayoutSVGRoot"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK5blink13SVGSVGElement18CurrentViewBoxRectEv(%"class.blink::SVGSVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10, i32 0, i32 0
  %4 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %3, align 8
  %5 = icmp eq %"class.blink::SVGViewSpec"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %4, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %7, align 8
  %9 = icmp eq %"class.blink::SVGRect"* %8, null
  br i1 %9, label %17, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %8, i64 0, i32 3
  %12 = bitcast %"class.blink::FloatRect"* %11 to <2 x float>*
  %13 = load <2 x float>, <2 x float>* %12, align 4
  %14 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %8, i64 0, i32 3, i32 1
  %15 = bitcast %"class.blink::FloatSize"* %14 to <2 x float>*
  %16 = load <2 x float>, <2 x float>* %15, align 4
  br label %102

17:                                               ; preds = %1, %6
  %18 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %19 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %19, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %21, i64 0, i32 3, i32 1, i32 0
  %23 = bitcast float* %22 to <2 x float>*
  %24 = load <2 x float>, <2 x float>* %23, align 4
  %25 = extractelement <2 x float> %24, i32 0
  %26 = fcmp ole float %25, 0.000000e+00
  %27 = extractelement <2 x float> %24, i32 1
  %28 = fcmp ole float %27, 0.000000e+00
  %29 = or i1 %26, %28
  br i1 %29, label %34, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %21, i64 0, i32 3, i32 0, i32 0
  %32 = bitcast float* %31 to <2 x float>*
  %33 = load <2 x float>, <2 x float>* %32, align 4
  br label %102

34:                                               ; preds = %17
  %35 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %38, label %44, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %42 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %42, i64 0, i32 1, i32 0, i32 0
  br label %46

44:                                               ; preds = %34
  %45 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %"class.blink::NodeRenderingData"** [ %43, %40 ], [ %45, %44 ]
  %48 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %48, i64 0, i32 1
  %50 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutObject"* %50, null
  br i1 %51, label %102, label %52

52:                                               ; preds = %46
  br i1 %38, label %57, label %53

53:                                               ; preds = %52
  %54 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %55 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %55, i64 0, i32 1, i32 0, i32 0
  br label %59

57:                                               ; preds = %52
  %58 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %59

59:                                               ; preds = %57, %53
  %60 = phi %"class.blink::NodeRenderingData"** [ %56, %53 ], [ %58, %57 ]
  %61 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %61, i64 0, i32 1
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = bitcast %"class.blink::LayoutObject"* %63 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* %63, i32 67) #12
  br i1 %68, label %69, label %102

69:                                               ; preds = %59
  %70 = load i32, i32* %35, align 8
  %71 = and i32 %70, 1
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %77, label %73

73:                                               ; preds = %69
  %74 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRareData"**
  %75 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %75, i64 0, i32 1, i32 0, i32 0
  br label %79

77:                                               ; preds = %69
  %78 = bitcast %"class.blink::NodeData"** %39 to %"class.blink::NodeRenderingData"**
  br label %79

79:                                               ; preds = %73, %77
  %80 = phi %"class.blink::NodeRenderingData"** [ %76, %73 ], [ %78, %77 ]
  %81 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %81, i64 0, i32 1
  %83 = bitcast %"class.blink::LayoutObject"** %82 to %"class.blink::LayoutSVGRoot"**
  %84 = load %"class.blink::LayoutSVGRoot"*, %"class.blink::LayoutSVGRoot"** %83, align 8
  %85 = tail call zeroext i1 @_ZNK5blink13LayoutSVGRoot25IsEmbeddedThroughSVGImageEv(%"class.blink::LayoutSVGRoot"* %84) #12
  br i1 %85, label %86, label %102

86:                                               ; preds = %79
  %87 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #12
  %88 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %88, align 8
  %89 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %89) #12
  %90 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6, i32 0, i32 0
  %91 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %91, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %93 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %92, align 8
  %94 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %93, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %2) #12
  %95 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7, i32 0, i32 0
  %96 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %96, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %98 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %97, align 8
  %99 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %98, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %2) #12
  %100 = insertelement <2 x float> undef, float %94, i32 0
  %101 = insertelement <2 x float> %100, float %99, i32 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #12
  br label %102

102:                                              ; preds = %46, %59, %30, %86, %79, %10
  %103 = phi <2 x float> [ %13, %10 ], [ zeroinitializer, %86 ], [ %33, %30 ], [ zeroinitializer, %79 ], [ zeroinitializer, %59 ], [ zeroinitializer, %46 ]
  %104 = phi <2 x float> [ %16, %10 ], [ %101, %86 ], [ %24, %30 ], [ zeroinitializer, %79 ], [ zeroinitializer, %59 ], [ zeroinitializer, %46 ]
  %105 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %103, 0
  %106 = insertvalue { <2 x float>, <2 x float> } %105, <2 x float> %104, 1
  ret { <2 x float>, <2 x float> } %106
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::SVGPreserveAspectRatio"* @_ZNK5blink13SVGSVGElement26CurrentPreserveAspectRatioEv(%"class.blink::SVGSVGElement"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %2, align 8
  %4 = icmp eq %"class.blink::SVGViewSpec"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SVGViewSpec", %"class.blink::SVGViewSpec"* %3, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %6, align 8
  %8 = icmp eq %"class.blink::SVGPreserveAspectRatio"* %7, null
  br i1 %8, label %9, label %83

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %11 = load %"class.blink::SVGAnimatedRect"*, %"class.blink::SVGAnimatedRect"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::SVGAnimatedRect", %"class.blink::SVGAnimatedRect"* %11, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %13 = load %"class.blink::SVGRect"*, %"class.blink::SVGRect"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::SVGRect", %"class.blink::SVGRect"* %13, i64 0, i32 1
  %15 = load i8, i8* %14, align 8, !range !3
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %78

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %21, label %27, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %27, %23
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %78, label %35

35:                                               ; preds = %29
  br i1 %21, label %40, label %36

36:                                               ; preds = %35
  %37 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %38 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %38, i64 0, i32 1, i32 0, i32 0
  br label %42

40:                                               ; preds = %35
  %41 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %42

42:                                               ; preds = %40, %36
  %43 = phi %"class.blink::NodeRenderingData"** [ %39, %36 ], [ %41, %40 ]
  %44 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %44, i64 0, i32 1
  %46 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %45, align 8
  %47 = bitcast %"class.blink::LayoutObject"* %46 to i1 (%"class.blink::LayoutObject"*, i32)***
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %47, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %46, i32 67) #12
  br i1 %51, label %52, label %78

52:                                               ; preds = %42
  %53 = load i32, i32* %18, align 8
  %54 = and i32 %53, 1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %58 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %58, i64 0, i32 1, i32 0, i32 0
  br label %62

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %62

62:                                               ; preds = %56, %60
  %63 = phi %"class.blink::NodeRenderingData"** [ %59, %56 ], [ %61, %60 ]
  %64 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %64, i64 0, i32 1
  %66 = bitcast %"class.blink::LayoutObject"** %65 to %"class.blink::LayoutSVGRoot"**
  %67 = load %"class.blink::LayoutSVGRoot"*, %"class.blink::LayoutSVGRoot"** %66, align 8
  %68 = tail call zeroext i1 @_ZNK5blink13LayoutSVGRoot25IsEmbeddedThroughSVGImageEv(%"class.blink::LayoutSVGRoot"* %67) #12
  br i1 %68, label %69, label %78

69:                                               ; preds = %62
  %70 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64 16) #12
  %71 = bitcast i8* %70 to %"class.blink::SVGPreserveAspectRatio"*
  tail call void @_ZN5blink22SVGPreserveAspectRatioC1Ev(%"class.blink::SVGPreserveAspectRatio"* %71) #12
  %72 = getelementptr inbounds i8, i8* %70, i64 -4
  %73 = bitcast i8* %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = or i16 %74, 1
  store atomic i16 %75, i16* %73 release, align 2
  %76 = getelementptr inbounds i8, i8* %70, i64 8
  %77 = bitcast i8* %76 to i32*
  store i32 1, i32* %77, align 8
  br label %83

78:                                               ; preds = %9, %29, %42, %62
  %79 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1, i32 2, i32 0, i32 0
  %80 = load %"class.blink::SVGAnimatedPreserveAspectRatio"*, %"class.blink::SVGAnimatedPreserveAspectRatio"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::SVGAnimatedPreserveAspectRatio", %"class.blink::SVGAnimatedPreserveAspectRatio"* %80, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::SVGPreserveAspectRatio"** %81, align 8
  br label %83

83:                                               ; preds = %5, %78, %69
  %84 = phi %"class.blink::SVGPreserveAspectRatio"* [ %82, %78 ], [ %71, %69 ], [ %7, %5 ]
  ret %"class.blink::SVGPreserveAspectRatio"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13SVGSVGElement14IntrinsicWidthEv(%"class.blink::SVGSVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %6, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %10) #12
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %15) #12
  %16 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store float 0.000000e+00, float* %3, align 4
  %17 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %8, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %2) #12
  store float %18, float* %4, align 4
  %19 = fcmp ogt float %18, 0.000000e+00
  %20 = select i1 %19, float* %4, float* %3
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  br label %25

25:                                               ; preds = %1, %12
  %26 = phi i64 [ %24, %12 ], [ 0, %1 ]
  %27 = phi i64 [ 1, %12 ], [ 0, %1 ]
  %28 = or i64 %27, %26
  ret i64 %28
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink13SVGSVGElement15IntrinsicHeightEv(%"class.blink::SVGSVGElement"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::SVGLengthContext", align 8
  %3 = alloca float, align 4
  %4 = alloca float, align 4
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::SVGAnimatedLength"*, %"class.blink::SVGAnimatedLength"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::SVGAnimatedLength", %"class.blink::SVGAnimatedLength"* %6, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::SVGLength"*, %"class.blink::SVGLength"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::SVGLength", %"class.blink::SVGLength"* %8, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.blink::CSSPrimitiveValue"*, %"class.blink::CSSPrimitiveValue"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"* %10) #12
  br i1 %11, label %25, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.blink::SVGLengthContext"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %14 = getelementptr inbounds %"class.blink::SVGLengthContext", %"class.blink::SVGLengthContext"* %2, i64 0, i32 0
  store %"class.blink::SVGElement"* inttoptr (i64 -6148914691236517206 to %"class.blink::SVGElement"*), %"class.blink::SVGElement"** %14, align 8
  %15 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16SVGLengthContextC1EPKNS_10SVGElementE(%"class.blink::SVGLengthContext"* nonnull %2, %"class.blink::SVGElement"* %15) #12
  %16 = bitcast float* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  store float 0.000000e+00, float* %3, align 4
  %17 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  %18 = call float @_ZNK5blink9SVGLength5ValueERKNS_16SVGLengthContextE(%"class.blink::SVGLength"* %8, %"class.blink::SVGLengthContext"* nonnull dereferenceable(8) %2) #12
  store float %18, float* %4, align 4
  %19 = fcmp ogt float %18, 0.000000e+00
  %20 = select i1 %19, float* %4, float* %3
  %21 = bitcast float* %20 to i32*
  %22 = load i32, i32* %21, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %23 = zext i32 %22 to i64
  %24 = shl nuw i64 %23, 32
  br label %25

25:                                               ; preds = %1, %12
  %26 = phi i64 [ %24, %12 ], [ 0, %1 ]
  %27 = phi i64 [ 1, %12 ], [ 0, %1 ]
  %28 = or i64 %27, %26
  ret i64 %28
}

declare void @_ZN5blink15SVGFitToViewBox22ViewBoxToViewTransformERKNS_9FloatRectEPKNS_22SVGPreserveAspectRatioERKNS_9FloatSizeE(%"class.blink::AffineTransform"* sret, %"class.blink::FloatRect"* dereferenceable(16), %"class.blink::SVGPreserveAspectRatio"*, %"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZNK5blink16SVGTransformList11ConcatenateEv(%"class.blink::AffineTransform"* sret, %"class.blink::SVGTransformList"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement11SetViewSpecEPKNS_11SVGViewSpecE(%"class.blink::SVGSVGElement"* nocapture, %"class.blink::SVGViewSpec"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10
  %4 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %3, i64 0, i32 0, i32 0
  %5 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %4, align 8
  %6 = icmp ne %"class.blink::SVGViewSpec"* %5, null
  %7 = icmp ne %"class.blink::SVGViewSpec"* %1, null
  %8 = or i1 %7, %6
  br i1 %8, label %9, label %36

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::SVGViewSpec"* %1 to i64
  %11 = bitcast %"class.blink::Member.82"* %3 to i64*
  store atomic i64 %10, i64* %11 monotonic, align 8
  %12 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %9
  %15 = bitcast %"class.blink::SVGViewSpec"* %1 to i8*
  %16 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %15) #12
  br label %17

17:                                               ; preds = %9, %14
  %18 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %21, label %27, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRareData"**
  %25 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %25, i64 0, i32 1, i32 0, i32 0
  br label %29

27:                                               ; preds = %17
  %28 = bitcast %"class.blink::NodeData"** %22 to %"class.blink::NodeRenderingData"**
  br label %29

29:                                               ; preds = %23, %27
  %30 = phi %"class.blink::NodeRenderingData"** [ %26, %23 ], [ %28, %27 ]
  %31 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %31, i64 0, i32 1
  %33 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %32, align 8
  %34 = icmp eq %"class.blink::LayoutObject"* %33, null
  br i1 %34, label %36, label %35

35:                                               ; preds = %29
  tail call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %33) #12
  br label %36

36:                                               ; preds = %35, %29, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement16SetupInitialViewERKN3WTF6StringEPNS_7ElementE(%"class.blink::SVGSVGElement"* nocapture, %"class.WTF::String"* dereferenceable(8), %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #12
  %6 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %7 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 8, i32* %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %13, label %14

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  br label %56

14:                                               ; preds = %3
  %15 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %11, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #12
  br i1 %15, label %16, label %56

16:                                               ; preds = %14
  %17 = call %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec18CreateFromFragmentERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %1) #12
  %18 = icmp eq %"class.blink::SVGViewSpec"* %17, null
  br i1 %18, label %56, label %19

19:                                               ; preds = %16
  %20 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 2
  %25 = bitcast %"class.blink::UseCounter"* %24 to void (%"class.blink::UseCounter"*, i32)***
  %26 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %25, align 8
  %27 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %26, i64 3
  %28 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %27, align 8
  call void %28(%"class.blink::UseCounter"* %24, i32 1036) #12
  %29 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10
  %30 = ptrtoint %"class.blink::SVGViewSpec"* %17 to i64
  %31 = bitcast %"class.blink::Member.82"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %19
  %35 = bitcast %"class.blink::SVGViewSpec"* %17 to i8*
  %36 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull %35) #12
  br label %37

37:                                               ; preds = %34, %19
  %38 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = and i32 %39, 1
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %41, label %47, label %43

43:                                               ; preds = %37
  %44 = bitcast %"class.blink::NodeData"** %42 to %"class.blink::NodeRareData"**
  %45 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %45, i64 0, i32 1, i32 0, i32 0
  br label %49

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::NodeData"** %42 to %"class.blink::NodeRenderingData"**
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi %"class.blink::NodeRenderingData"** [ %46, %43 ], [ %48, %47 ]
  %51 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %51, i64 0, i32 1
  %53 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %52, align 8
  %54 = icmp eq %"class.blink::LayoutObject"* %53, null
  br i1 %54, label %151, label %55

55:                                               ; preds = %49
  call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %53) #12
  br label %151

56:                                               ; preds = %13, %16, %14
  %57 = icmp eq %"class.blink::Element"* %2, null
  br i1 %57, label %121, label %58

58:                                               ; preds = %56
  %59 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 48
  %62 = icmp eq i32 %61, 32
  br i1 %62, label %63, label %121

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %65 = load %"class.blink::SVGQualifiedName"*, %"class.blink::SVGQualifiedName"** @_ZN5blink9svg_names8kViewTagE, align 8
  %66 = getelementptr inbounds %"class.blink::SVGQualifiedName", %"class.blink::SVGQualifiedName"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %64, i64 1, i32 2
  %69 = bitcast %"class.blink::Member"* %68 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %70 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %70, i64 0, i32 3, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %67, i64 0, i32 3, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %72, %74
  br i1 %75, label %76, label %121

76:                                               ; preds = %63
  %77 = bitcast %"class.blink::Element"* %2 to %"class.blink::SVGViewElement"*
  %78 = call %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec20CreateForViewElementERKNS_14SVGViewElementE(%"class.blink::SVGViewElement"* nonnull dereferenceable(208) %77) #12
  %79 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %80 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %80, i64 0, i32 2, i32 0, i32 0
  %82 = load %"class.blink::Document"*, %"class.blink::Document"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %82, i64 0, i32 2
  %84 = bitcast %"class.blink::UseCounter"* %83 to void (%"class.blink::UseCounter"*, i32)***
  %85 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %85, i64 3
  %87 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %86, align 8
  call void %87(%"class.blink::UseCounter"* %83, i32 1037) #12
  %88 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10
  %89 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %88, i64 0, i32 0, i32 0
  %90 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %89, align 8
  %91 = icmp ne %"class.blink::SVGViewSpec"* %90, null
  %92 = icmp ne %"class.blink::SVGViewSpec"* %78, null
  %93 = or i1 %92, %91
  br i1 %93, label %94, label %151

94:                                               ; preds = %76
  %95 = ptrtoint %"class.blink::SVGViewSpec"* %78 to i64
  %96 = bitcast %"class.blink::Member.82"* %88 to i64*
  store atomic i64 %95, i64* %96 monotonic, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.blink::SVGViewSpec"* %78 to i8*
  %101 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #12
  br label %102

102:                                              ; preds = %99, %94
  %103 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = and i32 %104, 1
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %106, label %112, label %108

108:                                              ; preds = %102
  %109 = bitcast %"class.blink::NodeData"** %107 to %"class.blink::NodeRareData"**
  %110 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %110, i64 0, i32 1, i32 0, i32 0
  br label %114

112:                                              ; preds = %102
  %113 = bitcast %"class.blink::NodeData"** %107 to %"class.blink::NodeRenderingData"**
  br label %114

114:                                              ; preds = %112, %108
  %115 = phi %"class.blink::NodeRenderingData"** [ %111, %108 ], [ %113, %112 ]
  %116 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %116, i64 0, i32 1
  %118 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %117, align 8
  %119 = icmp eq %"class.blink::LayoutObject"* %118, null
  br i1 %119, label %151, label %120

120:                                              ; preds = %114
  call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %118) #12
  br label %151

121:                                              ; preds = %63, %56, %58
  %122 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10
  %123 = getelementptr inbounds %"class.blink::Member.82", %"class.blink::Member.82"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.blink::SVGViewSpec"*, %"class.blink::SVGViewSpec"** %123, align 8
  %125 = icmp eq %"class.blink::SVGViewSpec"* %124, null
  br i1 %125, label %151, label %126

126:                                              ; preds = %121
  %127 = bitcast %"class.blink::Member.82"* %122 to i64*
  store atomic i64 0, i64* %127 monotonic, align 8
  %128 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %126
  %131 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #12
  br label %132

132:                                              ; preds = %130, %126
  %133 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = and i32 %134, 1
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %136, label %142, label %138

138:                                              ; preds = %132
  %139 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRareData"**
  %140 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %139, align 8
  %141 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %140, i64 0, i32 1, i32 0, i32 0
  br label %144

142:                                              ; preds = %132
  %143 = bitcast %"class.blink::NodeData"** %137 to %"class.blink::NodeRenderingData"**
  br label %144

144:                                              ; preds = %142, %138
  %145 = phi %"class.blink::NodeRenderingData"** [ %141, %138 ], [ %143, %142 ]
  %146 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %145, align 8
  %147 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %146, i64 0, i32 1
  %148 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %147, align 8
  %149 = icmp eq %"class.blink::LayoutObject"* %148, null
  br i1 %149, label %151, label %150

150:                                              ; preds = %144
  call void @_ZN5blink10SVGElement42MarkForLayoutAndParentResourceInvalidationERNS_12LayoutObjectE(%"class.blink::LayoutObject"* nonnull dereferenceable(88) %148) #12
  br label %151

151:                                              ; preds = %121, %150, %144, %120, %114, %76, %55, %49
  ret void
}

declare %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec18CreateFromFragmentERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::SVGViewSpec"* @_ZN5blink11SVGViewSpec20CreateForViewElementERKNS_14SVGViewElementE(%"class.blink::SVGViewElement"* dereferenceable(208)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink13SVGSVGElement21FinishParsingChildrenEv(%"class.blink::SVGSVGElement"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"* %2) #12
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink10SVGElement24IsOutermostSVGSVGElementEv(%"class.blink::SVGElement"* %3) #12
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZN5blink10SVGElement26SendSVGLoadEventIfPossibleEv(%"class.blink::SVGElement"* %3) #12
  br label %7

7:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN5blink7Element21FinishParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink10SVGElement26SendSVGLoadEventIfPossibleEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 4
  %4 = bitcast %"class.blink::Member.56"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 5
  %15 = bitcast %"class.blink::Member.56"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #12
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 6
  %26 = bitcast %"class.blink::Member.56"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #12
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 7
  %37 = bitcast %"class.blink::Member.56"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv) #12
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 9
  %48 = bitcast %"class.blink::Member.80"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8SVGPointEE5TraceEPNS_7VisitorEPKv) #12
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 8
  %59 = bitcast %"class.blink::Member.78"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %68, label %62

62:                                               ; preds = %57
  %63 = inttoptr i64 %60 to i8*
  %64 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %64, align 8
  %66 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %65, i64 5
  %67 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %66, align 8
  tail call void %67(%"class.blink::Visitor"* %1, i8* nonnull %63, i8* nonnull %63, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv) #12
  br label %68

68:                                               ; preds = %57, %62
  %69 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 10
  %70 = bitcast %"class.blink::Member.82"* %69 to i64*
  %71 = load atomic i64, i64* %70 monotonic, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = inttoptr i64 %71 to i8*
  %75 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %76 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %75, align 8
  %77 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %76, i64 5
  %78 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %77, align 8
  tail call void %78(%"class.blink::Visitor"* %1, i8* nonnull %74, i8* nonnull %74, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv) #12
  br label %79

79:                                               ; preds = %68, %73
  %80 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 0
  tail call void @_ZNK5blink18SVGGraphicsElement5TraceEPNS_7VisitorE(%"class.blink::SVGGraphicsElement"* %80, %"class.blink::Visitor"* %1) #12
  %81 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 0, i32 1
  tail call void @_ZNK5blink15SVGFitToViewBox5TraceEPNS_7VisitorE(%"class.blink::SVGFitToViewBox"* %81, %"class.blink::Visitor"* %1) #12
  ret void
}

declare void @_ZNK5blink18SVGGraphicsElement5TraceEPNS_7VisitorE(%"class.blink::SVGGraphicsElement"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink15SVGFitToViewBox5TraceEPNS_7VisitorE(%"class.blink::SVGFitToViewBox"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn168_NK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 -1, i32 0, i32 0, i32 2, i32 0, i32 0, i32 1
  %4 = bitcast i32* %3 to %"class.blink::SVGSVGElement"*
  tail call void @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn200_NK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %0, i64 -1, i32 0, i32 0, i32 1
  %4 = bitcast %"class.blink::HeapHashSet"* %3 to %"class.blink::SVGSVGElement"*
  tail call void @_ZNK5blink13SVGSVGElement5TraceEPNS_7VisitorE(%"class.blink::SVGSVGElement"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #12
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink13SVGSVGElement18GetWrapperTypeInfoEv(%"class.blink::SVGSVGElement"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink13SVGSVGElement18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink10SVGElement20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::SVGElement"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element8nodeNameEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node9nodeValueEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node12setNodeValueERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZNK5blink7Element11getNodeTypeEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZNK5blink7Element5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsCharacterDataNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23CanContainRangeEndPointEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink4Node11SheetLoadedEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink13ContainerNode10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::ContainerNode"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink13ContainerNode10SetDraggedEb(%"class.blink::ContainerNode"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare { i64, i64 } @_ZNK5blink13ContainerNode11BoundingBoxEv(%"class.blink::ContainerNode"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16ChildTypeAllowedENS_4Node8NodeTypeE(%"class.blink::Element"*, i32) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16DetachLayoutTreeEb(%"class.blink::SVGElement"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ComputedStyle"* @_ZN5blink7Element26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %0, i8 zeroext %1, %"class.WTF::AtomicString"* dereferenceable(8) %2) #12
  ret %"class.blink::ComputedStyle"* %4
}

declare void @_ZN5blink10SVGElement15ChildrenChangedERKNS_13ContainerNode14ChildrenChangeE(%"class.blink::SVGElement"*, %"struct.blink::ContainerNode::ChildrenChange"* dereferenceable(56)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink13ContainerNode42ChildrenChangedAllChildrenRemovedNeedsListEv(%"class.blink::ContainerNode"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13ContainerNode20ChildrenCanHaveStyleEv(%"class.blink::ContainerNode"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

declare %"class.blink::LayoutBox"* @_ZNK5blink7Element24GetLayoutBoxForScrollingEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #1

declare %"class.WTF::HashMap.2302"* @_ZNK5blink7Element24GetCheckedAttributeTypesEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element11scrollWidthEv(%"class.blink::Element"*) unnamed_addr #1

declare i32 @_ZN5blink7Element12scrollHeightEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::CSSPropertyValueSet"* @_ZN5blink7Element36AdditionalPresentationAttributeStyleEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::CSSPropertyValueSet"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element37HasExtraStyleForPresentationAttributeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement41CollectExtraStyleForPresentationAttributeEPNS_26MutableCSSPropertyValueSetE(%"class.blink::SVGElement"*, %"class.blink::MutableCSSPropertyValueSet"*) unnamed_addr #1

declare void @_ZN5blink10SVGElement16AttributeChangedERKNS_7Element27AttributeModificationParamsE(%"class.blink::SVGElement"*, %"struct.blink::Element::AttributeModificationParams"* dereferenceable(32)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element21HasLegalLinkAttributeERKNS_13QualifiedNameE(%"class.blink::Element"*, %"class.blink::QualifiedName"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(8) %"class.blink::QualifiedName"* @_ZNK5blink7Element24SubResourceAttributeNameEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element31CloneNonAttributePropertiesFromERKS0_NS_17CloneChildrenFlagE(%"class.blink::Element"*, %"class.blink::Element"* dereferenceable(104), i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink10SVGElement15AccessKeyActionENS_27SimulatedClickCreationScopeE(%"class.blink::SVGElement"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element14IsURLAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsHTMLContentAttributeERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element43IsSVGAnimationAttributeSettingJavaScriptURLERKNS_9AttributeE(%"class.blink::Element"*, %"class.blink::Attribute"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element10IsLiveLinkEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.WTF::StringImpl"* @_ZNK5blink7Element14ImageSourceURLEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Image"* @_ZN5blink7Element13ImageContentsEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Image"* null
}

declare void @_ZN5blink7Element5focusERKNS_11FocusParamsE(%"class.blink::Element"*, %"struct.blink::FocusParams"*) unnamed_addr #1

declare void @_ZN5blink7Element32UpdateFocusAppearanceWithOptionsENS_24SelectionBehaviorOnFocusEPKNS_12FocusOptionsE(%"class.blink::Element"*, i32, %"class.blink::FocusOptions"*) unnamed_addr #1

declare void @_ZN5blink7Element4blurEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement13SupportsFocusEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"* %2) #12
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::SVGGraphicsElement", %"class.blink::SVGGraphicsElement"* %0, i64 0, i32 0
  %6 = tail call zeroext i1 @_ZNK5blink10SVGElement22HasFocusEventListenersEv(%"class.blink::SVGElement"* %5) #12
  br label %7

7:                                                ; preds = %4, %1
  %8 = phi i1 [ true, %1 ], [ %6, %4 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK5blink7Element19IsKeyboardFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element16IsMouseFocusableEv(%"class.blink::Element"*) unnamed_addr #1

declare void @_ZN5blink7Element18DispatchFocusEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element17DispatchBlurEventEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare void @_ZN5blink7Element20DispatchFocusInEventERKN3WTF12AtomicStringEPS0_NS_5mojom9FocusTypeEPNS_23InputDeviceCapabilitiesE(%"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::Element"*, i32, %"class.blink::InputDeviceCapabilities"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink10SVGElement5titleEv(%"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink7Element14DefaultToolTipEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret %"class.WTF::StringImpl"* null
}

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink7Element14ShadowPseudoIdEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BeginParsingChildrenEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = and i32 %3, -1025
  store i32 %4, i32* %2, align 8
  ret void
}

declare zeroext i1 @_ZNK5blink7Element24CanGeneratePseudoElementENS_8PseudoIdE(%"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesDefaultPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25MatchesEnabledPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element26MatchesReadOnlyPseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27MatchesReadWritePseudoClassEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element28MatchesValidityPseudoClassesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink7Element25MayTriggerVirtualKeyboardEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25ShouldAppearIndeterminateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDateTimeEditElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element22IsDateTimeFieldElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element24IsPickerIndicatorElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsFormControlElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element19IsSpinButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element13IsTextControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsOptionalFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsRequiredFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12willValidateEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink7Element14IsValidElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element9IsInRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element12IsOutOfRangeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsClearButtonElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element15IsScriptElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsVTTCueBackgroundBoxEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element20IsSliderThumbElementEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element25HasNonInBodyInsertionModeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element21IsDisabledFormControlEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element20BuildPendingResourceEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink7Element9SetActiveEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink7Element10SetHoveredEb(%"class.blink::Element"*, i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element11IsAdRelatedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink10SVGElement15WillRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::SVGElement"*, i64) unnamed_addr #1

declare void @_ZN5blink7Element14DidRecalcStyleENS_17StyleRecalcChangeE(%"class.blink::Element"*, i64) unnamed_addr #1

declare void @_ZN5blink10SVGElement26CustomStyleForLayoutObjectERKNS_18StyleRecalcContextE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink7Element16GetNamedItemTypeEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

declare zeroext i1 @_ZNK5blink7Element16IsFocusableStyleEv(%"class.blink::Element"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element22ParserDidSetAttributesEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element23AreAuthorShadowsAllowedEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Element25DidAddUserAgentShadowRootERNS_10ShadowRootE(%"class.blink::Element"*, %"class.blink::ShadowRoot"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element31AlwaysCreateUserAgentShadowRootEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink7Element15DefaultTabIndexEv(%"class.blink::Element"*) unnamed_addr #1

declare dereferenceable(104) %"class.blink::Element"* @_ZNK5blink7Element33CloneWithoutAttributesAndChildrenERNS_8DocumentE(%"class.blink::Element"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink7Element27TypeShouldForceLegacyLayoutEv(%"class.blink::Element"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement20IsSVGGeometryElementEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink18SVGGraphicsElement20IsSVGGraphicsElementEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement14IsFilterEffectEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement13IsTextContentEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement17IsTextPositioningEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink10SVGElement22IsStructurallyExternalEv(%"class.blink::SVGElement"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare %"class.blink::AffineTransform"* @_ZN5blink18SVGGraphicsElement22AnimateMotionTransformEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink10SVGElement27HaveLoadedRequiredResourcesEv(%"class.blink::SVGElement"*) unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZN5blink18SVGGraphicsElement7GetBBoxEv(%"class.blink::SVGGraphicsElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
declare %"class.blink::Element"* @_ZThn80_N5blink7Element18GetAnimationTargetEv(%"class.blink::Element"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13SVGZoomAndPan13setZoomAndPanEt(%"class.blink::SVGZoomAndPan"*, i16 zeroext) unnamed_addr #0 comdat align 2 {
  %3 = add i16 %1, -1
  %4 = icmp ugt i16 %3, 1
  %5 = select i1 %4, i16 0, i16 %1
  %6 = zext i16 %5 to i32
  %7 = getelementptr inbounds %"class.blink::SVGZoomAndPan", %"class.blink::SVGZoomAndPan"* %0, i64 0, i32 1
  store i32 %6, i32* %7, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13SVGZoomAndPan13setZoomAndPanEtRNS_14ExceptionStateE(%"class.blink::SVGZoomAndPan"*, i16 zeroext, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::SVGZoomAndPan"* %0 to void (%"class.blink::SVGZoomAndPan"*, i16)***
  %5 = load void (%"class.blink::SVGZoomAndPan"*, i16)**, void (%"class.blink::SVGZoomAndPan"*, i16)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGZoomAndPan"*, i16)*, void (%"class.blink::SVGZoomAndPan"*, i16)** %5, i64 2
  %7 = load void (%"class.blink::SVGZoomAndPan"*, i16)*, void (%"class.blink::SVGZoomAndPan"*, i16)** %6, align 8
  tail call void %7(%"class.blink::SVGZoomAndPan"* %0, i16 zeroext %1) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i8*, i32, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #6 comdat align 2 {
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca i8*, align 8
  %7 = alloca %class.anon, align 8
  store i8* %1, i8** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %42

13:                                               ; preds = %4
  %14 = and i96 %10, 2
  %15 = icmp eq i96 %14, 0
  %16 = or i96 %10, 1
  store i96 %16, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %17 = load i96, i96* %9, align 4
  %18 = or i96 %17, 1180591620717411303424
  store i96 %18, i96* %9, align 4
  br i1 %15, label %19, label %46

19:                                               ; preds = %13
  %20 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %21 = and i8 %20, 25
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %32, label %23, !prof !4

23:                                               ; preds = %19
  %24 = bitcast %class.anon* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %24) #12
  %25 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 0
  store %"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"** %25, align 8
  %26 = getelementptr inbounds %class.anon, %class.anon* %7, i64 0, i32 1
  store i8** %6, i8*** %26, align 8
  %27 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #12
  %28 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  %30 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #12
  store i64 %30, i64* %29, align 8
  %31 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i32 %27, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.2, i64 0, i64 0), %class.anon* nonnull dereferenceable(16) %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %24) #12
  br label %32

32:                                               ; preds = %19, %23
  %33 = icmp eq i32 %2, 1
  br i1 %33, label %34, label %46

34:                                               ; preds = %32
  %35 = icmp ne %"class.blink::SubtreeLayoutScope"* %3, null
  br i1 %35, label %36, label %40

36:                                               ; preds = %34
  %37 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %3, i64 0, i32 0
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = icmp eq %"class.blink::LayoutObject"* %38, %0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %34
  %41 = xor i1 %35, true
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %0, i1 zeroext %41, %"class.blink::SubtreeLayoutScope"* %3) #12
  br label %46

42:                                               ; preds = %4
  %43 = or i96 %10, 1
  store i96 %43, i96* %9, align 4
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %0, i32 1) #12
  %44 = load i96, i96* %9, align 4
  %45 = or i96 %44, 1180591620717411303424
  store i96 %45, i96* %9, align 4
  br label %46

46:                                               ; preds = %36, %13, %42, %32, %40
  ret void
}

declare void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #1

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #1

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #1

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #12
  %20 = tail call i8* @_Znwm(i64 192) #13
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #12
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #12
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #12
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #12
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #12
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #12
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #12
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #12
  %40 = getelementptr inbounds %class.anon, %class.anon* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #12
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #12
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #12
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #12
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #12
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #12
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #13
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #12
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #1

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #1

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #1

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #1

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !5

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !7

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !8

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #13
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #13, !noalias !9
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !9
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #13
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN5blink10SVGElement32UpdateRelativeLengthsInformationEbPS0_(%"class.blink::SVGElement"*, i1 zeroext, %"class.blink::SVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink7Element23CreateUniqueElementDataEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #10

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink10SVGElement19InvalidateInstancesEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare void @_ZNK5blink12LayoutObject24LocalToAncestorTransformEPKNS_20LayoutBoxModelObjectEj(%"class.blink::TransformationMatrix"* sret, %"class.blink::LayoutObject"*, %"class.blink::LayoutBoxModelObject"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink8SVGTests7IsValidEv(%"class.blink::SVGTests"*) local_unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #9

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink17CSSPrimitiveValue12IsPercentageEv(%"class.blink::CSSPrimitiveValue"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink7Element13SupportsFocusEv(%"class.blink::Element"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink10SVGElement22HasFocusEventListenersEv(%"class.blink::SVGElement"*) local_unnamed_addr #1

declare void @_ZN5blink22SVGPreserveAspectRatioC1Ev(%"class.blink::SVGPreserveAspectRatio"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15SVGPropertyBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15SVGPropertyBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15SVGPropertyBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #6 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #12
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #12
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %21, i8* %22) #12
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #12
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #12
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #12
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15SVGPropertyBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGPropertyBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %5, i64 8
  %7 = load void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGPropertyBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGPropertyBase"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15SVGPropertyBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SVGPropertyBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::SVGPropertyBase"*)***
  %4 = load void (%"class.blink::SVGPropertyBase"*)**, void (%"class.blink::SVGPropertyBase"*)*** %3, align 8
  %5 = load void (%"class.blink::SVGPropertyBase"*)*, void (%"class.blink::SVGPropertyBase"*)** %4, align 8
  tail call void %5(%"class.blink::SVGPropertyBase"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15SVGPropertyBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink22SVGPropertyTearOffBase20EnsureAnimValUpdatedEv(%"class.blink::SVGPropertyTearOffBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #12
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare void @_ZN5blink9SVGLengthC1ENS0_7InitialENS_13SVGLengthModeE(%"class.blink::SVGLength"*, i32, i32) unnamed_addr #1

declare void @_ZN5blink23SVGAnimatedPropertyBaseC2ENS_20AnimatedPropertyTypeEPNS_10SVGElementERKNS_13QualifiedNameENS_13CSSPropertyIDEj(%"class.blink::SVGAnimatedPropertyBase"*, i32, %"class.blink::SVGElement"*, %"class.blink::QualifiedName"* dereferenceable(8), i32, i32) unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZNK5blink22SVGPropertyTearOffBase5TraceEPNS_7VisitorE(%"class.blink::SVGPropertyTearOffBase"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZN5blink17SMILTimeContainerC1ERNS_13SVGSVGElementE(%"class.blink::SMILTimeContainer"*, %"class.blink::SVGSVGElement"* dereferenceable(304)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_17SMILTimeContainerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #12
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #12
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17SMILTimeContainerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17SMILTimeContainerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SMILTimeContainerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SMILTimeContainer"*
  tail call void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_17SMILTimeContainerEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::SMILTimeContainer"*
  tail call void @_ZN5blink17SMILTimeContainerD1Ev(%"class.blink::SMILTimeContainer"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17SMILTimeContainerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink17SMILTimeContainer5TraceEPNS_7VisitorE(%"class.blink::SMILTimeContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink17SMILTimeContainerD1Ev(%"class.blink::SMILTimeContainer"*) unnamed_addr #3

declare void @_ZN5blink8SVGPointC1Ev(%"class.blink::SVGPoint"*) unnamed_addr #1

declare void @_ZN5blink15SVGPointTearOffC2EPNS_8SVGPointEPNS_10SVGElementE(%"class.blink::SVGPointTearOff"*, %"class.blink::SVGPoint"*, %"class.blink::SVGElement"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15ScriptWrappableD2Ev(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26SVGCurrentTranslateTearOffD0Ev(%"class.blink::SVGCurrentTranslateTearOff"*) unnamed_addr #6 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable17HasEventListenersEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18SVGPropertyTearOffINS_8SVGPointEE5TraceEPNS_7VisitorE(%"class.blink::SVGPropertyTearOff.875"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::SVGPropertyTearOff.875", %"class.blink::SVGPropertyTearOff.875"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.80"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8SVGPointEE5TraceEPNS_7VisitorEPKv) #12
  br label %13

13:                                               ; preds = %2, %7
  %14 = bitcast %"class.blink::SVGPropertyTearOff.875"* %0 to %"class.blink::SVGPropertyTearOffBase"*
  tail call void @_ZNK5blink22SVGPropertyTearOffBase5TraceEPNS_7VisitorE(%"class.blink::SVGPropertyTearOffBase"* %14, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink15SVGPointTearOff18GetWrapperTypeInfoEv(%"class.blink::SVGPointTearOff"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink15SVGPointTearOff18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26SVGCurrentTranslateTearOff12CommitChangeEv(%"class.blink::SVGCurrentTranslateTearOff"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SVGCurrentTranslateTearOff", %"class.blink::SVGCurrentTranslateTearOff"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %3 = bitcast %"class.blink::SVGElement"** %2 to %"class.blink::SVGSVGElement"**
  %4 = load %"class.blink::SVGSVGElement"*, %"class.blink::SVGSVGElement"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = and i32 %6, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.blink::SVGSVGElement", %"class.blink::SVGSVGElement"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  br i1 %8, label %14, label %10

10:                                               ; preds = %1
  %11 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRareData"**
  %12 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %12, i64 0, i32 1, i32 0, i32 0
  br label %16

14:                                               ; preds = %1
  %15 = bitcast %"class.blink::NodeData"** %9 to %"class.blink::NodeRenderingData"**
  br label %16

16:                                               ; preds = %14, %10
  %17 = phi %"class.blink::NodeRenderingData"** [ %13, %10 ], [ %15, %14 ]
  %18 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %18, i64 0, i32 1
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutObject"* %20, null
  br i1 %21, label %23, label %22

22:                                               ; preds = %16
  tail call void @_ZN5blink12LayoutObject14SetNeedsLayoutEPKcNS_15MarkingBehaviorEPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* nonnull %20, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason8kUnknownE, i64 0, i64 0), i32 1, %"class.blink::SubtreeLayoutScope"* null) #12
  tail call void @_ZN5blink12LayoutObject32SetShouldDoFullPaintInvalidationENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"* nonnull %20, i8 zeroext 3) #12
  br label %23

23:                                               ; preds = %16, %22
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink10HeapVectorINS1_6MemberINS1_4NodeEEELj0EEEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS8_EE5valueEvE4typeERS8_SB_(%"class.blink::HeapVector.1541"* dereferenceable(16), %"class.blink::HeapVector.1541"* dereferenceable(16)) local_unnamed_addr #6 comdat {
  %3 = bitcast %"class.blink::HeapVector.1541"* %0 to i64*
  %4 = load i64, i64* %3, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %5 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %6 = load i32, i32* %5, align 4
  store i32 0, i32* %5, align 4
  %7 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  store i32 0, i32* %7, align 4
  %9 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %12) #12
  br label %14

14:                                               ; preds = %11, %2
  %15 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %14
  %18 = bitcast %"class.blink::HeapVector.1541"* %0 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #12
  br label %21

21:                                               ; preds = %14, %17
  %22 = bitcast %"class.blink::HeapVector.1541"* %1 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = load i64, i64* %3, align 8
  store atomic i64 %24, i64* %22 monotonic, align 8
  store atomic i64 %23, i64* %3 monotonic, align 8
  %25 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %5, align 4
  %27 = load i32, i32* %25, align 4
  store i32 %27, i32* %5, align 4
  store i32 %26, i32* %25, align 4
  %28 = getelementptr inbounds %"class.blink::HeapVector.1541", %"class.blink::HeapVector.1541"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %7, align 4
  %30 = load i32, i32* %28, align 4
  store i32 %30, i32* %7, align 4
  store i32 %29, i32* %28, align 4
  %31 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %21
  %34 = bitcast %"class.blink::HeapVector.1541"* %0 to i8**
  %35 = load i8*, i8** %34, align 8
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #12
  br label %37

37:                                               ; preds = %33, %21
  %38 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %39 = icmp eq i32 %38, 0
  %40 = bitcast %"class.blink::HeapVector.1541"* %1 to i8**
  br i1 %39, label %44, label %41

41:                                               ; preds = %37
  %42 = load i8*, i8** %40, align 8
  %43 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %42) #12
  br label %44

44:                                               ; preds = %37, %41
  %45 = load i8*, i8** %40, align 8
  store atomic i64 %4, i64* %22 monotonic, align 8
  store i32 %6, i32* %25, align 4
  store i32 %8, i32* %28, align 4
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %51, label %48

48:                                               ; preds = %44
  %49 = inttoptr i64 %4 to i8*
  %50 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %49) #12
  br label %51

51:                                               ; preds = %48, %44
  %52 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %45) #12
  br label %56

56:                                               ; preds = %51, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18StaticNodeTypeListINS_4NodeEED0Ev(%"class.blink::StaticNodeTypeList"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18StaticNodeTypeListINS_4NodeEE5TraceEPNS_7VisitorE(%"class.blink::StaticNodeTypeList"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::HeapVector.1541"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  %7 = bitcast %"class.blink::HeapVector.1541"* %3 to i8**
  %8 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %1, i8** %7) #12
  br i1 %6, label %18, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %5 to i8*
  %14 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %15 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, i64 5
  %17 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %16, align 8
  tail call void %17(%"class.blink::Visitor"* %1, i8* nonnull %13, i8* nonnull %13, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #12
  br label %18

18:                                               ; preds = %2, %12
  %19 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"* %19, %"class.blink::Visitor"* %1) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink8NodeList18GetWrapperTypeInfoEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink8NodeList18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink18StaticNodeTypeListINS_4NodeEE6lengthEv(%"class.blink::StaticNodeTypeList"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK5blink18StaticNodeTypeListINS_4NodeEE4itemEj(%"class.blink::StaticNodeTypeList"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::StaticNodeTypeList", %"class.blink::StaticNodeTypeList"* %0, i64 0, i32 1, i32 0
  %8 = tail call dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1544"* %7, i32 %1) #12
  %9 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %8, i64 0, i32 0, i32 0
  %10 = load %"class.blink::Node"*, %"class.blink::Node"** %9, align 8
  br label %11

11:                                               ; preds = %2, %6
  %12 = phi %"class.blink::Node"* [ %10, %6 ], [ null, %2 ]
  ret %"class.blink::Node"* %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8NodeList15IsEmptyNodeListEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink8NodeList15IsChildNodeListEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Node"* @_ZNK5blink8NodeList16VirtualOwnerNodeEv(%"class.blink::NodeList"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::Node"* null
}

declare void @_ZNK5blink15ScriptWrappable5TraceEPNS_7VisitorE(%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !2

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %3, i64 %28
  %30 = bitcast %"class.blink::Member"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #12
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member"* @_ZNK3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.1544"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #12
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.9, i64 0, i64 0), i8* %14, i8* %15) #12
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #12
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #12
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #12
  %23 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member"*, %"class.blink::Member"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %24, i64 %25
  ret %"class.blink::Member"* %26
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink13NodeTraversal19NextAncestorSiblingERKNS_4NodeEPS2_(%"class.blink::Node"* dereferenceable(64), %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPNS1_18SVGGraphicsElementEEEvOT_(%"class.WTF::Vector.1544"*, %"class.blink::SVGGraphicsElement"** dereferenceable(8)) local_unnamed_addr #11 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1544"* %0, i32 %14) #12
  %15 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member"*, %"class.blink::Member"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member", %"class.blink::Member"* %16, i64 %18
  %20 = bitcast %"class.blink::SVGGraphicsElement"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #12
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.1544"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !4

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %10 = icmp eq %"class.blink::Member"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %11) #12
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #12
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.1544"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #12
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member"*, %"class.blink::Member"** %8, align 8
  %26 = icmp eq %"class.blink::Member"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #12
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #12
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !2

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #12
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #12
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !3
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.10, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.11, i64 0, i64 0)) #12
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #12
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1544"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_4NodeEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.1544"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.1544"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.1544"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #12
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #12
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64 %14) #12
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #12
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member"*, %"class.blink::Member"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !4

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.1544"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #12
  %33 = bitcast %"class.WTF::Vector.1544"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #12
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #12
  %42 = bitcast %"class.WTF::Vector.1544"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.1544", %"class.WTF::Vector.1544"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #12
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_4NodeEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.12, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.13, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #12
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #12
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.14, i64 0, i64 0), i8* %11, i8* %12) #12
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #12
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.15, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #12
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #12
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #12
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 4, i32 %28, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_4NodeEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0)) #12
  %30 = bitcast i8* %29 to %"class.blink::HeapVectorBacking"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapVectorBacking"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_4NodeEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink16SVGMatrixTearOffC1ERKNS_15AffineTransformE(%"class.blink::SVGMatrixTearOff"*, %"class.blink::AffineTransform"* dereferenceable(48)) unnamed_addr #1

declare void @_ZN5blink19SVGTransformTearOffC1EPNS_16SVGMatrixTearOffE(%"class.blink::SVGTransformTearOff"*, %"class.blink::SVGMatrixTearOff"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17SVGAnimatedLengthEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGAnimatedLength"*
  %4 = bitcast i8* %1 to void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)**, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)*, void (%"class.blink::SVGAnimatedLength"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::SVGAnimatedLength"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8SVGPointEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11SVGViewSpecEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::SVGViewSpec"*
  tail call void @_ZNK5blink11SVGViewSpec5TraceEPNS_7VisitorE(%"class.blink::SVGViewSpec"* %3, %"class.blink::Visitor"* %0) #12
  ret void
}

declare void @_ZNK5blink11SVGViewSpec5TraceEPNS_7VisitorE(%"class.blink::SVGViewSpec"*, %"class.blink::Visitor"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { cold noreturn nounwind }
attributes #11 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!11 = distinct !{!11, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
