; ModuleID = '../../gpu/command_buffer/service/multi_draw_manager.cc'
source_filename = "../../gpu/command_buffer/service/multi_draw_manager.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.gpu::gles2::MultiDrawManager::ResultData" = type { i32, i32, i32, i32, %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.1", %"class.std::__1::vector", %"class.std::__1::vector", %"class.std::__1::vector.8" }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { i8**, i8**, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { i8** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.std::__1::vector.8" = type { %"class.std::__1::__vector_base.9" }
%"class.std::__1::__vector_base.9" = type { i32*, i32*, %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { i32* }
%"class.gpu::gles2::MultiDrawManager" = type { i32, i32, i32, %"struct.gpu::gles2::MultiDrawManager::ResultData" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm = comdat any

$_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm = comdat any

$_ZNSt3__16vectorIPKvNS_9allocatorIS2_EEE8__appendEm = comdat any

@_ZN3gpu5gles216MultiDrawManager10ResultDataC1Ev = hidden unnamed_addr alias void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*), void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*)* @_ZN3gpu5gles216MultiDrawManager10ResultDataC2Ev
@_ZN3gpu5gles216MultiDrawManager10ResultDataD1Ev = hidden unnamed_addr alias void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*), void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*)* @_ZN3gpu5gles216MultiDrawManager10ResultDataD2Ev
@_ZN3gpu5gles216MultiDrawManager10ResultDataC1EOS2_ = hidden unnamed_addr alias void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*, %"struct.gpu::gles2::MultiDrawManager::ResultData"*), void (%"struct.gpu::gles2::MultiDrawManager::ResultData"*, %"struct.gpu::gles2::MultiDrawManager::ResultData"*)* @_ZN3gpu5gles216MultiDrawManager10ResultDataC2EOS2_
@_ZN3gpu5gles216MultiDrawManagerC1ENS1_16IndexStorageTypeE = hidden unnamed_addr alias void (%"class.gpu::gles2::MultiDrawManager"*, i32), void (%"class.gpu::gles2::MultiDrawManager"*, i32)* @_ZN3gpu5gles216MultiDrawManagerC2ENS1_16IndexStorageTypeE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManager10ResultDataC2Ev(%"struct.gpu::gles2::MultiDrawManager::ResultData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 1
  %3 = bitcast i32* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %3, i8 0, i64 180, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManager10ResultDataD2Ev(%"struct.gpu::gles2::MultiDrawManager::ResultData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint i32* %3 to i64
  %7 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 1
  %8 = bitcast i32** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast i32* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #9
  br label %10

10:                                               ; preds = %1, %5
  %11 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 0
  %12 = load i32*, i32** %11, align 8
  %13 = icmp eq i32* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = ptrtoint i32* %12 to i64
  %16 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 1
  %17 = bitcast i32** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast i32* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 0
  %21 = load i32*, i32** %20, align 8
  %22 = icmp eq i32* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = ptrtoint i32* %21 to i64
  %25 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 1
  %26 = bitcast i32** %25 to i64*
  store i64 %24, i64* %26, align 8
  %27 = bitcast i32* %21 to i8*
  tail call void @_ZdlPv(i8* %27) #9
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 0
  %30 = load i8**, i8*** %29, align 8
  %31 = icmp eq i8** %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %28
  %33 = ptrtoint i8** %30 to i64
  %34 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 1
  %35 = bitcast i8*** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = bitcast i8** %30 to i8*
  tail call void @_ZdlPv(i8* %36) #9
  br label %37

37:                                               ; preds = %28, %32
  %38 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = icmp eq i32* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %37
  %42 = ptrtoint i32* %39 to i64
  %43 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 1
  %44 = bitcast i32** %43 to i64*
  store i64 %42, i64* %44, align 8
  %45 = bitcast i32* %39 to i8*
  tail call void @_ZdlPv(i8* %45) #9
  br label %46

46:                                               ; preds = %37, %41
  %47 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 0
  %48 = load i32*, i32** %47, align 8
  %49 = icmp eq i32* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %46
  %51 = ptrtoint i32* %48 to i64
  %52 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 1
  %53 = bitcast i32** %52 to i64*
  store i64 %51, i64* %53, align 8
  %54 = bitcast i32* %48 to i8*
  tail call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %46, %50
  %56 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 0
  %57 = load i32*, i32** %56, align 8
  %58 = icmp eq i32* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = ptrtoint i32* %57 to i64
  %61 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 1
  %62 = bitcast i32** %61 to i64*
  store i64 %60, i64* %62, align 8
  %63 = bitcast i32* %57 to i8*
  tail call void @_ZdlPv(i8* %63) #9
  br label %64

64:                                               ; preds = %55, %59
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManager10ResultDataC2EOS2_(%"struct.gpu::gles2::MultiDrawManager::ResultData"* nocapture, %"struct.gpu::gles2::MultiDrawManager::ResultData"* nocapture dereferenceable(184)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  store i32 %5, i32* %3, align 8
  %6 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  store i32 %8, i32* %6, align 4
  %9 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 2
  %10 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 2
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %9, align 8
  %12 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 3
  %14 = load i32, i32* %13, align 4
  store i32 %14, i32* %12, align 4
  %15 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4
  %17 = bitcast %"class.std::__1::vector"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #10
  %18 = bitcast %"class.std::__1::vector"* %16 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector"* %15 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4, i32 0, i32 1
  %22 = bitcast i32** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast i32** %24 to i64*
  store i64 %23, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i32** %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast i32** %29 to i64*
  store i64 %28, i64* %30, align 8
  %31 = bitcast %"class.std::__1::vector"* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #10
  %32 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5
  %33 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5
  %34 = bitcast %"class.std::__1::vector"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #10
  %35 = bitcast %"class.std::__1::vector"* %33 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = bitcast %"class.std::__1::vector"* %32 to i64*
  store i64 %36, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5, i32 0, i32 1
  %39 = bitcast i32** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = bitcast i32** %41 to i64*
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %44 = bitcast i32** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %47 = bitcast i32** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = bitcast %"class.std::__1::vector"* %33 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #10
  %49 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6
  %50 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6
  %51 = bitcast %"class.std::__1::vector"* %49 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 24, i1 false) #10
  %52 = bitcast %"class.std::__1::vector"* %50 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::vector"* %49 to i64*
  store i64 %53, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6, i32 0, i32 1
  %56 = bitcast i32** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 1
  %59 = bitcast i32** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %61 = bitcast i32** %60 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %64 = bitcast i32** %63 to i64*
  store i64 %62, i64* %64, align 8
  %65 = bitcast %"class.std::__1::vector"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 24, i1 false) #10
  %66 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7
  %67 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7
  %68 = bitcast %"class.std::__1::vector.1"* %66 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #10
  %69 = bitcast %"class.std::__1::vector.1"* %67 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %"class.std::__1::vector.1"* %66 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7, i32 0, i32 1
  %73 = bitcast i8*** %72 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 1
  %76 = bitcast i8*** %75 to i64*
  store i64 %74, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %78 = bitcast i8*** %77 to i64*
  %79 = load i64, i64* %78, align 8
  %80 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %81 = bitcast i8*** %80 to i64*
  store i64 %79, i64* %81, align 8
  %82 = bitcast %"class.std::__1::vector.1"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #10
  %83 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8
  %84 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8
  %85 = bitcast %"class.std::__1::vector"* %83 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 24, i1 false) #10
  %86 = bitcast %"class.std::__1::vector"* %84 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.std::__1::vector"* %83 to i64*
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 1
  %93 = bitcast i32** %92 to i64*
  store i64 %91, i64* %93, align 8
  %94 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %95 = bitcast i32** %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %98 = bitcast i32** %97 to i64*
  store i64 %96, i64* %98, align 8
  %99 = bitcast %"class.std::__1::vector"* %84 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #10
  %100 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9
  %101 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9
  %102 = bitcast %"class.std::__1::vector"* %100 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #10
  %103 = bitcast %"class.std::__1::vector"* %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.std::__1::vector"* %100 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9, i32 0, i32 1
  %107 = bitcast i32** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 1
  %110 = bitcast i32** %109 to i64*
  store i64 %108, i64* %110, align 8
  %111 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %112 = bitcast i32** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %115 = bitcast i32** %114 to i64*
  store i64 %113, i64* %115, align 8
  %116 = bitcast %"class.std::__1::vector"* %101 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %116, i8 0, i64 24, i1 false) #10
  %117 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10
  %118 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10
  %119 = bitcast %"class.std::__1::vector.8"* %117 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 24, i1 false) #10
  %120 = bitcast %"class.std::__1::vector.8"* %118 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast %"class.std::__1::vector.8"* %117 to i64*
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10, i32 0, i32 1
  %124 = bitcast i32** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 1
  %127 = bitcast i32** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %129 = bitcast i32** %128 to i64*
  %130 = load i64, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %132 = bitcast i32** %131 to i64*
  store i64 %130, i64* %132, align 8
  %133 = bitcast %"class.std::__1::vector.8"* %118 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %133, i8 0, i64 24, i1 false) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden dereferenceable(184) %"struct.gpu::gles2::MultiDrawManager::ResultData"* @_ZN3gpu5gles216MultiDrawManager10ResultDataaSEOS2_(%"struct.gpu::gles2::MultiDrawManager::ResultData"* returned, %"struct.gpu::gles2::MultiDrawManager::ResultData"* dereferenceable(184)) local_unnamed_addr #1 align 2 {
  %3 = icmp eq %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, %0
  br i1 %3, label %143, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 0
  store i32 %6, i32* %7, align 8
  %8 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 1
  store i32 %9, i32* %10, align 4
  %11 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 2
  store i32 %12, i32* %13, align 8
  %14 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 3
  %15 = load i32, i32* %14, align 4
  %16 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 3
  store i32 %15, i32* %16, align 4
  %17 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4
  %19 = bitcast %"class.std::__1::vector"* %17 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %18 to i64*
  %22 = load i64, i64* %21, align 8
  store i64 %22, i64* %19, align 8
  store i64 %20, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 1
  %24 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast i32** %23 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast i32** %24 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %25, align 8
  store i64 %26, i64* %27, align 8
  %29 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %30 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %31 = bitcast i32** %29 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i32** %30 to i64*
  %34 = load i64, i64* %33, align 8
  store i64 %34, i64* %31, align 8
  store i64 %32, i64* %33, align 8
  %35 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5
  %36 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5
  %37 = bitcast %"class.std::__1::vector"* %35 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.std::__1::vector"* %36 to i64*
  %40 = load i64, i64* %39, align 8
  store i64 %40, i64* %37, align 8
  store i64 %38, i64* %39, align 8
  %41 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 1
  %42 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5, i32 0, i32 1
  %43 = bitcast i32** %41 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast i32** %42 to i64*
  %46 = load i64, i64* %45, align 8
  store i64 %46, i64* %43, align 8
  store i64 %44, i64* %45, align 8
  %47 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %48 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 5, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast i32** %47 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast i32** %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  store i64 %50, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6
  %54 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6
  %55 = bitcast %"class.std::__1::vector"* %53 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast %"class.std::__1::vector"* %54 to i64*
  %58 = load i64, i64* %57, align 8
  store i64 %58, i64* %55, align 8
  store i64 %56, i64* %57, align 8
  %59 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 1
  %60 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6, i32 0, i32 1
  %61 = bitcast i32** %59 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast i32** %60 to i64*
  %64 = load i64, i64* %63, align 8
  store i64 %64, i64* %61, align 8
  store i64 %62, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %66 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 6, i32 0, i32 2, i32 0, i32 0
  %67 = bitcast i32** %65 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast i32** %66 to i64*
  %70 = load i64, i64* %69, align 8
  store i64 %70, i64* %67, align 8
  store i64 %68, i64* %69, align 8
  %71 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7
  %72 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7
  %73 = bitcast %"class.std::__1::vector.1"* %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = bitcast %"class.std::__1::vector.1"* %72 to i64*
  %76 = load i64, i64* %75, align 8
  store i64 %76, i64* %73, align 8
  store i64 %74, i64* %75, align 8
  %77 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 1
  %78 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7, i32 0, i32 1
  %79 = bitcast i8*** %77 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast i8*** %78 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %79, align 8
  store i64 %80, i64* %81, align 8
  %83 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %84 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 7, i32 0, i32 2, i32 0, i32 0
  %85 = bitcast i8*** %83 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast i8*** %84 to i64*
  %88 = load i64, i64* %87, align 8
  store i64 %88, i64* %85, align 8
  store i64 %86, i64* %87, align 8
  %89 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8
  %90 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8
  %91 = bitcast %"class.std::__1::vector"* %89 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.std::__1::vector"* %90 to i64*
  %94 = load i64, i64* %93, align 8
  store i64 %94, i64* %91, align 8
  store i64 %92, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 1
  %96 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8, i32 0, i32 1
  %97 = bitcast i32** %95 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast i32** %96 to i64*
  %100 = load i64, i64* %99, align 8
  store i64 %100, i64* %97, align 8
  store i64 %98, i64* %99, align 8
  %101 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %102 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 8, i32 0, i32 2, i32 0, i32 0
  %103 = bitcast i32** %101 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast i32** %102 to i64*
  %106 = load i64, i64* %105, align 8
  store i64 %106, i64* %103, align 8
  store i64 %104, i64* %105, align 8
  %107 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9
  %108 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9
  %109 = bitcast %"class.std::__1::vector"* %107 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::vector"* %108 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %109, align 8
  store i64 %110, i64* %111, align 8
  %113 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 1
  %114 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9, i32 0, i32 1
  %115 = bitcast i32** %113 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast i32** %114 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  store i64 %116, i64* %117, align 8
  %119 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %120 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 9, i32 0, i32 2, i32 0, i32 0
  %121 = bitcast i32** %119 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast i32** %120 to i64*
  %124 = load i64, i64* %123, align 8
  store i64 %124, i64* %121, align 8
  store i64 %122, i64* %123, align 8
  %125 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10
  %126 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10
  %127 = bitcast %"class.std::__1::vector.8"* %125 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.8"* %126 to i64*
  %130 = load i64, i64* %129, align 8
  store i64 %130, i64* %127, align 8
  store i64 %128, i64* %129, align 8
  %131 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 1
  %132 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10, i32 0, i32 1
  %133 = bitcast i32** %131 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast i32** %132 to i64*
  %136 = load i64, i64* %135, align 8
  store i64 %136, i64* %133, align 8
  store i64 %134, i64* %135, align 8
  %137 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %138 = getelementptr inbounds %"struct.gpu::gles2::MultiDrawManager::ResultData", %"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, i64 0, i32 10, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast i32** %137 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = bitcast i32** %138 to i64*
  %142 = load i64, i64* %141, align 8
  store i64 %142, i64* %139, align 8
  store i64 %140, i64* %141, align 8
  br label %143

143:                                              ; preds = %2, %4
  ret %"struct.gpu::gles2::MultiDrawManager::ResultData"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManagerC2ENS1_16IndexStorageTypeE(%"class.gpu::gles2::MultiDrawManager"* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  store i32 2, i32* %3, align 8
  %4 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %7 = bitcast i32* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %7, i8 0, i64 180, i1 false) #10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager5BeginEi(%"class.gpu::gles2::MultiDrawManager"* nocapture, i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 2
  br i1 %5, label %6, label %9

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  store i32 %1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  store i32 0, i32* %8, align 4
  store i32 0, i32* %3, align 8
  br label %9

9:                                                ; preds = %2, %6
  %10 = phi i1 [ true, %6 ], [ false, %2 ]
  ret i1 %10
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager3EndEPNS1_10ResultDataE(%"class.gpu::gles2::MultiDrawManager"*, %"struct.gpu::gles2::MultiDrawManager::ResultData"*) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %12, label %15

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3
  store i32 2, i32* %3, align 8
  %14 = tail call dereferenceable(184) %"struct.gpu::gles2::MultiDrawManager::ResultData"* @_ZN3gpu5gles216MultiDrawManager10ResultDataaSEOS2_(%"struct.gpu::gles2::MultiDrawManager::ResultData"* %1, %"struct.gpu::gles2::MultiDrawManager::ResultData"* dereferenceable(184) %13)
  br label %15

15:                                               ; preds = %2, %6, %12
  %16 = phi i1 [ true, %12 ], [ false, %6 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager15MultiDrawArraysEjPKiS3_i(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp slt i32 %4, 0
  br i1 %6, label %59, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %4) #10
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %59, label %12, !prof !2

12:                                               ; preds = %7
  %13 = extractvalue { i32, i1 } %10, 0
  %14 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %13, %15
  br i1 %16, label %59, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  br i1 %20, label %22, label %24

22:                                               ; preds = %17
  store i32 1, i32* %18, align 8
  %23 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 0, i32* %23, align 8
  store i32 %1, i32* %21, align 8
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %29

24:                                               ; preds = %17
  %25 = icmp ne i32 %19, 2
  %26 = load i32, i32* %21, align 8
  %27 = icmp eq i32 %26, %1
  %28 = and i1 %25, %27
  br i1 %28, label %29, label %59

29:                                               ; preds = %22, %24
  %30 = icmp eq i32* %2, null
  %31 = icmp eq i32 %4, 0
  %32 = or i1 %30, %31
  br i1 %32, label %43, label %33

33:                                               ; preds = %29
  %34 = sext i32 %4 to i64
  %35 = shl nuw nsw i64 %34, 2
  %36 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = load i32, i32* %8, align 4
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i32, i32* %37, i64 %39
  %41 = bitcast i32* %40 to i8*
  %42 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %41, i8* nonnull align 4 %42, i64 %35, i1 false) #10
  br label %43

43:                                               ; preds = %33, %29
  %44 = icmp eq i32* %3, null
  %45 = or i1 %44, %31
  br i1 %45, label %56, label %46

46:                                               ; preds = %43
  %47 = sext i32 %4 to i64
  %48 = shl nuw nsw i64 %47, 2
  %49 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %50 = load i32*, i32** %49, align 8
  %51 = load i32, i32* %8, align 4
  %52 = sext i32 %51 to i64
  %53 = getelementptr inbounds i32, i32* %50, i64 %52
  %54 = bitcast i32* %53 to i8*
  %55 = bitcast i32* %3 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %54, i8* nonnull align 4 %55, i64 %48, i1 false) #10
  br label %56

56:                                               ; preds = %43, %46
  %57 = load i32, i32* %8, align 4
  %58 = add nsw i32 %57, %4
  store i32 %58, i32* %8, align 4
  br label %59

59:                                               ; preds = %7, %5, %12, %24, %56
  %60 = phi i1 [ true, %56 ], [ false, %24 ], [ false, %12 ], [ false, %5 ], [ false, %7 ]
  ret i1 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager24EnsureDrawArraysFunctionENS1_12DrawFunctionEji(%"class.gpu::gles2::MultiDrawManager"*, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %5 = icmp slt i32 %3, 0
  br i1 %5, label %28, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %8, i32 %3) #10
  %10 = extractvalue { i32, i1 } %9, 1
  br i1 %10, label %28, label %11, !prof !2

11:                                               ; preds = %6
  %12 = extractvalue { i32, i1 } %9, 0
  %13 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %12, %14
  br i1 %15, label %28, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp ne i32 %18, 2
  %20 = icmp eq i32 %18, 0
  %21 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 8
  %23 = icmp eq i32 %22, %2
  %24 = or i1 %20, %23
  %25 = and i1 %19, %24
  br i1 %20, label %26, label %28

26:                                               ; preds = %16
  store i32 1, i32* %17, align 8
  %27 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %27, align 8
  store i32 %2, i32* %21, align 8
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0)
  br label %28

28:                                               ; preds = %16, %11, %6, %4, %26
  %29 = phi i1 [ false, %11 ], [ %25, %16 ], [ true, %26 ], [ false, %4 ], [ false, %6 ]
  ret i1 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManager16CopyArraysHelperEiPKiS3_S3_S3_S3_PKj(%"class.gpu::gles2::MultiDrawManager"* nocapture, i32, i32*, i32*, i32*, i32*, i32*, i32*) local_unnamed_addr #0 align 2 {
  %9 = bitcast i32* %4 to i8*
  %10 = icmp eq i32* %2, null
  %11 = icmp eq i32 %1, 0
  %12 = or i1 %11, %10
  br i1 %12, label %24, label %13

13:                                               ; preds = %8
  %14 = sext i32 %1 to i64
  %15 = shl nuw nsw i64 %14, 2
  %16 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %17, i64 %20
  %22 = bitcast i32* %21 to i8*
  %23 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %22, i8* nonnull align 4 %23, i64 %15, i1 false) #10
  br label %24

24:                                               ; preds = %13, %8
  %25 = icmp eq i32* %3, null
  %26 = or i1 %11, %25
  br i1 %26, label %38, label %27

27:                                               ; preds = %24
  %28 = sext i32 %1 to i64
  %29 = shl nuw nsw i64 %28, 2
  %30 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %31 = load i32*, i32** %30, align 8
  %32 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %33 = load i32, i32* %32, align 4
  %34 = sext i32 %33 to i64
  %35 = getelementptr inbounds i32, i32* %31, i64 %34
  %36 = bitcast i32* %35 to i8*
  %37 = bitcast i32* %3 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %36, i8* nonnull align 4 %37, i64 %29, i1 false) #10
  br label %38

38:                                               ; preds = %27, %24
  %39 = icmp eq i32* %5, null
  %40 = or i1 %11, %39
  br i1 %40, label %52, label %41

41:                                               ; preds = %38
  %42 = sext i32 %1 to i64
  %43 = shl nuw nsw i64 %42, 2
  %44 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 0
  %45 = load i32*, i32** %44, align 8
  %46 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %45, i64 %48
  %50 = bitcast i32* %49 to i8*
  %51 = bitcast i32* %5 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 %51, i64 %43, i1 false) #10
  br label %52

52:                                               ; preds = %41, %38
  %53 = icmp eq i32* %6, null
  %54 = or i1 %11, %53
  br i1 %54, label %66, label %55

55:                                               ; preds = %52
  %56 = sext i32 %1 to i64
  %57 = shl nuw nsw i64 %56, 2
  %58 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 9, i32 0, i32 0
  %59 = load i32*, i32** %58, align 8
  %60 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %61 = load i32, i32* %60, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %59, i64 %62
  %64 = bitcast i32* %63 to i8*
  %65 = bitcast i32* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 4 %65, i64 %57, i1 false) #10
  br label %66

66:                                               ; preds = %55, %52
  %67 = icmp eq i32* %7, null
  %68 = or i1 %11, %67
  br i1 %68, label %80, label %69

69:                                               ; preds = %66
  %70 = sext i32 %1 to i64
  %71 = shl nuw nsw i64 %70, 2
  %72 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10, i32 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %75 = load i32, i32* %74, align 4
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i32, i32* %73, i64 %76
  %78 = bitcast i32* %77 to i8*
  %79 = bitcast i32* %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %78, i8* nonnull align 4 %79, i64 %71, i1 false) #10
  br label %80

80:                                               ; preds = %69, %66
  %81 = icmp eq i32* %4, null
  br i1 %81, label %261, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  %84 = load i32, i32* %83, align 8
  switch i32 %84, label %261 [
    i32 0, label %85
    i32 1, label %96
  ]

85:                                               ; preds = %82
  br i1 %11, label %261, label %86

86:                                               ; preds = %85
  %87 = sext i32 %1 to i64
  %88 = shl nuw nsw i64 %87, 2
  %89 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %90 = load i32*, i32** %89, align 8
  %91 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %92 = load i32, i32* %91, align 4
  %93 = sext i32 %92 to i64
  %94 = getelementptr inbounds i32, i32* %90, i64 %93
  %95 = bitcast i32* %94 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %95, i8* nonnull align 4 %9, i64 %88, i1 false) #10
  br label %261

96:                                               ; preds = %82
  %97 = sext i32 %1 to i64
  %98 = getelementptr inbounds i32, i32* %4, i64 %97
  br i1 %11, label %261, label %99

99:                                               ; preds = %96
  %100 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %101 = load i8**, i8*** %100, align 8
  %102 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds i8*, i8** %101, i64 %104
  %106 = shl nsw i64 %97, 2
  %107 = add nsw i64 %106, -4
  %108 = lshr exact i64 %107, 2
  %109 = add nuw nsw i64 %108, 1
  %110 = icmp ult i64 %109, 4
  br i1 %110, label %190, label %111

111:                                              ; preds = %99
  %112 = shl nsw i64 %97, 2
  %113 = add nsw i64 %112, -4
  %114 = lshr exact i64 %113, 2
  %115 = add nsw i64 %114, %104
  %116 = getelementptr i8*, i8** %101, i64 %115
  %117 = add nuw nsw i64 %114, 1
  %118 = getelementptr i32, i32* %4, i64 %117
  %119 = bitcast i32* %118 to i8**
  %120 = icmp ult i8** %105, %119
  %121 = bitcast i8** %116 to i32*
  %122 = icmp ugt i32* %121, %4
  %123 = and i1 %120, %122
  br i1 %123, label %190, label %124

124:                                              ; preds = %111
  %125 = and i64 %109, 9223372036854775804
  %126 = getelementptr i8*, i8** %105, i64 %125
  %127 = getelementptr i32, i32* %4, i64 %125
  %128 = add nsw i64 %125, -4
  %129 = lshr exact i64 %128, 2
  %130 = add nuw nsw i64 %129, 1
  %131 = and i64 %130, 1
  %132 = icmp eq i64 %128, 0
  br i1 %132, label %170, label %133

133:                                              ; preds = %124
  %134 = sub nuw nsw i64 %130, %131
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ 0, %133 ], [ %167, %135 ]
  %137 = phi i64 [ %134, %133 ], [ %168, %135 ]
  %138 = getelementptr i8*, i8** %105, i64 %136
  %139 = getelementptr i32, i32* %4, i64 %136
  %140 = bitcast i32* %139 to <2 x i32>*
  %141 = load <2 x i32>, <2 x i32>* %140, align 4, !alias.scope !3
  %142 = getelementptr i32, i32* %139, i64 2
  %143 = bitcast i32* %142 to <2 x i32>*
  %144 = load <2 x i32>, <2 x i32>* %143, align 4, !alias.scope !3
  %145 = zext <2 x i32> %141 to <2 x i64>
  %146 = zext <2 x i32> %144 to <2 x i64>
  %147 = inttoptr <2 x i64> %145 to <2 x i8*>
  %148 = inttoptr <2 x i64> %146 to <2 x i8*>
  %149 = bitcast i8** %138 to <2 x i8*>*
  store <2 x i8*> %147, <2 x i8*>* %149, align 8, !alias.scope !6, !noalias !3
  %150 = getelementptr i8*, i8** %138, i64 2
  %151 = bitcast i8** %150 to <2 x i8*>*
  store <2 x i8*> %148, <2 x i8*>* %151, align 8, !alias.scope !6, !noalias !3
  %152 = or i64 %136, 4
  %153 = getelementptr i8*, i8** %105, i64 %152
  %154 = getelementptr i32, i32* %4, i64 %152
  %155 = bitcast i32* %154 to <2 x i32>*
  %156 = load <2 x i32>, <2 x i32>* %155, align 4, !alias.scope !3
  %157 = getelementptr i32, i32* %154, i64 2
  %158 = bitcast i32* %157 to <2 x i32>*
  %159 = load <2 x i32>, <2 x i32>* %158, align 4, !alias.scope !3
  %160 = zext <2 x i32> %156 to <2 x i64>
  %161 = zext <2 x i32> %159 to <2 x i64>
  %162 = inttoptr <2 x i64> %160 to <2 x i8*>
  %163 = inttoptr <2 x i64> %161 to <2 x i8*>
  %164 = bitcast i8** %153 to <2 x i8*>*
  store <2 x i8*> %162, <2 x i8*>* %164, align 8, !alias.scope !6, !noalias !3
  %165 = getelementptr i8*, i8** %153, i64 2
  %166 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> %163, <2 x i8*>* %166, align 8, !alias.scope !6, !noalias !3
  %167 = add i64 %136, 8
  %168 = add i64 %137, -2
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %135, !llvm.loop !8

170:                                              ; preds = %135, %124
  %171 = phi i64 [ 0, %124 ], [ %167, %135 ]
  %172 = icmp eq i64 %131, 0
  br i1 %172, label %188, label %173

173:                                              ; preds = %170
  %174 = getelementptr i8*, i8** %105, i64 %171
  %175 = getelementptr i32, i32* %4, i64 %171
  %176 = bitcast i32* %175 to <2 x i32>*
  %177 = load <2 x i32>, <2 x i32>* %176, align 4, !alias.scope !3
  %178 = getelementptr i32, i32* %175, i64 2
  %179 = bitcast i32* %178 to <2 x i32>*
  %180 = load <2 x i32>, <2 x i32>* %179, align 4, !alias.scope !3
  %181 = zext <2 x i32> %177 to <2 x i64>
  %182 = zext <2 x i32> %180 to <2 x i64>
  %183 = inttoptr <2 x i64> %181 to <2 x i8*>
  %184 = inttoptr <2 x i64> %182 to <2 x i8*>
  %185 = bitcast i8** %174 to <2 x i8*>*
  store <2 x i8*> %183, <2 x i8*>* %185, align 8, !alias.scope !6, !noalias !3
  %186 = getelementptr i8*, i8** %174, i64 2
  %187 = bitcast i8** %186 to <2 x i8*>*
  store <2 x i8*> %184, <2 x i8*>* %187, align 8, !alias.scope !6, !noalias !3
  br label %188

188:                                              ; preds = %170, %173
  %189 = icmp eq i64 %109, %125
  br i1 %189, label %261, label %190

190:                                              ; preds = %188, %111, %99
  %191 = phi i8** [ %105, %111 ], [ %105, %99 ], [ %126, %188 ]
  %192 = phi i32* [ %4, %111 ], [ %4, %99 ], [ %127, %188 ]
  %193 = ptrtoint i32* %192 to i64
  %194 = add nsw i64 %97, -1
  %195 = getelementptr i32, i32* %4, i64 %194
  %196 = ptrtoint i32* %195 to i64
  %197 = sub i64 %196, %193
  %198 = lshr i64 %197, 2
  %199 = add nuw nsw i64 %198, 1
  %200 = and i64 %199, 7
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %213, label %202

202:                                              ; preds = %190, %202
  %203 = phi i8** [ %210, %202 ], [ %191, %190 ]
  %204 = phi i32* [ %209, %202 ], [ %192, %190 ]
  %205 = phi i64 [ %211, %202 ], [ %200, %190 ]
  %206 = load i32, i32* %204, align 4
  %207 = zext i32 %206 to i64
  %208 = inttoptr i64 %207 to i8*
  store i8* %208, i8** %203, align 8
  %209 = getelementptr inbounds i32, i32* %204, i64 1
  %210 = getelementptr inbounds i8*, i8** %203, i64 1
  %211 = add i64 %205, -1
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %213, label %202, !llvm.loop !10

213:                                              ; preds = %202, %190
  %214 = phi i8** [ %191, %190 ], [ %210, %202 ]
  %215 = phi i32* [ %192, %190 ], [ %209, %202 ]
  %216 = icmp ult i64 %197, 28
  br i1 %216, label %261, label %217

217:                                              ; preds = %213, %217
  %218 = phi i8** [ %259, %217 ], [ %214, %213 ]
  %219 = phi i32* [ %258, %217 ], [ %215, %213 ]
  %220 = load i32, i32* %219, align 4
  %221 = zext i32 %220 to i64
  %222 = inttoptr i64 %221 to i8*
  store i8* %222, i8** %218, align 8
  %223 = getelementptr inbounds i32, i32* %219, i64 1
  %224 = getelementptr inbounds i8*, i8** %218, i64 1
  %225 = load i32, i32* %223, align 4
  %226 = zext i32 %225 to i64
  %227 = inttoptr i64 %226 to i8*
  store i8* %227, i8** %224, align 8
  %228 = getelementptr inbounds i32, i32* %219, i64 2
  %229 = getelementptr inbounds i8*, i8** %218, i64 2
  %230 = load i32, i32* %228, align 4
  %231 = zext i32 %230 to i64
  %232 = inttoptr i64 %231 to i8*
  store i8* %232, i8** %229, align 8
  %233 = getelementptr inbounds i32, i32* %219, i64 3
  %234 = getelementptr inbounds i8*, i8** %218, i64 3
  %235 = load i32, i32* %233, align 4
  %236 = zext i32 %235 to i64
  %237 = inttoptr i64 %236 to i8*
  store i8* %237, i8** %234, align 8
  %238 = getelementptr inbounds i32, i32* %219, i64 4
  %239 = getelementptr inbounds i8*, i8** %218, i64 4
  %240 = load i32, i32* %238, align 4
  %241 = zext i32 %240 to i64
  %242 = inttoptr i64 %241 to i8*
  store i8* %242, i8** %239, align 8
  %243 = getelementptr inbounds i32, i32* %219, i64 5
  %244 = getelementptr inbounds i8*, i8** %218, i64 5
  %245 = load i32, i32* %243, align 4
  %246 = zext i32 %245 to i64
  %247 = inttoptr i64 %246 to i8*
  store i8* %247, i8** %244, align 8
  %248 = getelementptr inbounds i32, i32* %219, i64 6
  %249 = getelementptr inbounds i8*, i8** %218, i64 6
  %250 = load i32, i32* %248, align 4
  %251 = zext i32 %250 to i64
  %252 = inttoptr i64 %251 to i8*
  store i8* %252, i8** %249, align 8
  %253 = getelementptr inbounds i32, i32* %219, i64 7
  %254 = getelementptr inbounds i8*, i8** %218, i64 7
  %255 = load i32, i32* %253, align 4
  %256 = zext i32 %255 to i64
  %257 = inttoptr i64 %256 to i8*
  store i8* %257, i8** %254, align 8
  %258 = getelementptr inbounds i32, i32* %219, i64 8
  %259 = getelementptr inbounds i8*, i8** %218, i64 8
  %260 = icmp eq i32* %258, %98
  br i1 %260, label %261, label %217, !llvm.loop !12

261:                                              ; preds = %213, %217, %188, %96, %86, %85, %80, %82
  %262 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %263 = load i32, i32* %262, align 4
  %264 = add nsw i32 %263, %1
  store i32 %264, i32* %262, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager24MultiDrawArraysInstancedEjPKiS3_S3_i(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32* readonly, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %7 = icmp slt i32 %5, 0
  br i1 %7, label %73, label %8

8:                                                ; preds = %6
  %9 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %10, i32 %5) #10
  %12 = extractvalue { i32, i1 } %11, 1
  br i1 %12, label %73, label %13, !prof !2

13:                                               ; preds = %8
  %14 = extractvalue { i32, i1 } %11, 0
  %15 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %14, %16
  br i1 %17, label %73, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 8
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  br i1 %21, label %23, label %25

23:                                               ; preds = %18
  store i32 1, i32* %19, align 8
  %24 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 1, i32* %24, align 8
  store i32 %1, i32* %22, align 8
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %30

25:                                               ; preds = %18
  %26 = icmp ne i32 %20, 2
  %27 = load i32, i32* %22, align 8
  %28 = icmp eq i32 %27, %1
  %29 = and i1 %26, %28
  br i1 %29, label %30, label %73

30:                                               ; preds = %23, %25
  %31 = icmp eq i32* %2, null
  %32 = icmp eq i32 %5, 0
  %33 = or i1 %31, %32
  br i1 %33, label %44, label %34

34:                                               ; preds = %30
  %35 = sext i32 %5 to i64
  %36 = shl nuw nsw i64 %35, 2
  %37 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %38 = load i32*, i32** %37, align 8
  %39 = load i32, i32* %9, align 4
  %40 = sext i32 %39 to i64
  %41 = getelementptr inbounds i32, i32* %38, i64 %40
  %42 = bitcast i32* %41 to i8*
  %43 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %42, i8* nonnull align 4 %43, i64 %36, i1 false) #10
  br label %44

44:                                               ; preds = %34, %30
  %45 = icmp eq i32* %3, null
  %46 = or i1 %45, %32
  br i1 %46, label %57, label %47

47:                                               ; preds = %44
  %48 = sext i32 %5 to i64
  %49 = shl nuw nsw i64 %48, 2
  %50 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %9, align 4
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i32, i32* %51, i64 %53
  %55 = bitcast i32* %54 to i8*
  %56 = bitcast i32* %3 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %55, i8* nonnull align 4 %56, i64 %49, i1 false) #10
  br label %57

57:                                               ; preds = %47, %44
  %58 = icmp eq i32* %4, null
  %59 = or i1 %58, %32
  br i1 %59, label %70, label %60

60:                                               ; preds = %57
  %61 = sext i32 %5 to i64
  %62 = shl nuw nsw i64 %61, 2
  %63 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 0
  %64 = load i32*, i32** %63, align 8
  %65 = load i32, i32* %9, align 4
  %66 = sext i32 %65 to i64
  %67 = getelementptr inbounds i32, i32* %64, i64 %66
  %68 = bitcast i32* %67 to i8*
  %69 = bitcast i32* %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %68, i8* nonnull align 4 %69, i64 %62, i1 false) #10
  br label %70

70:                                               ; preds = %57, %60
  %71 = load i32, i32* %9, align 4
  %72 = add nsw i32 %71, %5
  store i32 %72, i32* %9, align 4
  br label %73

73:                                               ; preds = %8, %6, %13, %25, %70
  %74 = phi i1 [ true, %70 ], [ false, %25 ], [ false, %13 ], [ false, %6 ], [ false, %8 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager36MultiDrawArraysInstancedBaseInstanceEjPKiS3_S3_PKji(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32* readonly, i32* readonly, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %8 = icmp slt i32 %6, 0
  br i1 %8, label %87, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %6) #10
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %87, label %14, !prof !2

14:                                               ; preds = %9
  %15 = extractvalue { i32, i1 } %12, 0
  %16 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %15, %17
  br i1 %18, label %87, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  br i1 %22, label %24, label %26

24:                                               ; preds = %19
  store i32 1, i32* %20, align 8
  %25 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 2, i32* %25, align 8
  store i32 %1, i32* %23, align 8
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %31

26:                                               ; preds = %19
  %27 = icmp ne i32 %21, 2
  %28 = load i32, i32* %23, align 8
  %29 = icmp eq i32 %28, %1
  %30 = and i1 %27, %29
  br i1 %30, label %31, label %87

31:                                               ; preds = %24, %26
  %32 = icmp eq i32* %2, null
  %33 = icmp eq i32 %6, 0
  %34 = or i1 %32, %33
  br i1 %34, label %45, label %35

35:                                               ; preds = %31
  %36 = sext i32 %6 to i64
  %37 = shl nuw nsw i64 %36, 2
  %38 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4, i32 0, i32 0
  %39 = load i32*, i32** %38, align 8
  %40 = load i32, i32* %10, align 4
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds i32, i32* %39, i64 %41
  %43 = bitcast i32* %42 to i8*
  %44 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %43, i8* nonnull align 4 %44, i64 %37, i1 false) #10
  br label %45

45:                                               ; preds = %35, %31
  %46 = icmp eq i32* %3, null
  %47 = or i1 %46, %33
  br i1 %47, label %58, label %48

48:                                               ; preds = %45
  %49 = sext i32 %6 to i64
  %50 = shl nuw nsw i64 %49, 2
  %51 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %52 = load i32*, i32** %51, align 8
  %53 = load i32, i32* %10, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds i32, i32* %52, i64 %54
  %56 = bitcast i32* %55 to i8*
  %57 = bitcast i32* %3 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %56, i8* nonnull align 4 %57, i64 %50, i1 false) #10
  br label %58

58:                                               ; preds = %48, %45
  %59 = icmp eq i32* %4, null
  %60 = or i1 %59, %33
  br i1 %60, label %71, label %61

61:                                               ; preds = %58
  %62 = sext i32 %6 to i64
  %63 = shl nuw nsw i64 %62, 2
  %64 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 0
  %65 = load i32*, i32** %64, align 8
  %66 = load i32, i32* %10, align 4
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i32, i32* %65, i64 %67
  %69 = bitcast i32* %68 to i8*
  %70 = bitcast i32* %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %69, i8* nonnull align 4 %70, i64 %63, i1 false) #10
  br label %71

71:                                               ; preds = %61, %58
  %72 = icmp eq i32* %5, null
  %73 = or i1 %72, %33
  br i1 %73, label %84, label %74

74:                                               ; preds = %71
  %75 = sext i32 %6 to i64
  %76 = shl nuw nsw i64 %75, 2
  %77 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10, i32 0, i32 0
  %78 = load i32*, i32** %77, align 8
  %79 = load i32, i32* %10, align 4
  %80 = sext i32 %79 to i64
  %81 = getelementptr inbounds i32, i32* %78, i64 %80
  %82 = bitcast i32* %81 to i8*
  %83 = bitcast i32* %5 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %82, i8* nonnull align 4 %83, i64 %76, i1 false) #10
  br label %84

84:                                               ; preds = %71, %74
  %85 = load i32, i32* %10, align 4
  %86 = add nsw i32 %85, %6
  store i32 %86, i32* %10, align 4
  br label %87

87:                                               ; preds = %9, %7, %14, %26, %84
  %88 = phi i1 [ true, %84 ], [ false, %26 ], [ false, %14 ], [ false, %7 ], [ false, %9 ]
  ret i1 %88
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager17MultiDrawElementsEjPKijS3_i(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %7 = bitcast i32* %4 to i8*
  %8 = icmp slt i32 %5, 0
  br i1 %8, label %234, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %5) #10
  %13 = extractvalue { i32, i1 } %12, 1
  br i1 %13, label %234, label %14, !prof !2

14:                                               ; preds = %9
  %15 = extractvalue { i32, i1 } %12, 0
  %16 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %15, %17
  br i1 %18, label %234, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %21 = load i32, i32* %20, align 8
  %22 = icmp ne i32 %21, 2
  %23 = icmp eq i32 %21, 0
  %24 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, %1
  br i1 %26, label %27, label %31

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %3
  br label %31

31:                                               ; preds = %27, %19
  %32 = phi i1 [ false, %19 ], [ %30, %27 ]
  br i1 %23, label %33, label %36

33:                                               ; preds = %31
  store i32 1, i32* %20, align 8
  %34 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 3, i32* %34, align 8
  store i32 %1, i32* %24, align 8
  %35 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  store i32 %3, i32* %35, align 4
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %38

36:                                               ; preds = %31
  %37 = and i1 %22, %32
  br i1 %37, label %38, label %234

38:                                               ; preds = %33, %36
  %39 = icmp eq i32 %5, 0
  %40 = icmp eq i32* %2, null
  %41 = or i1 %40, %39
  br i1 %41, label %52, label %42

42:                                               ; preds = %38
  %43 = sext i32 %5 to i64
  %44 = shl nuw nsw i64 %43, 2
  %45 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %46 = load i32*, i32** %45, align 8
  %47 = load i32, i32* %10, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = bitcast i32* %49 to i8*
  %51 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %50, i8* nonnull align 4 %51, i64 %44, i1 false) #10
  br label %52

52:                                               ; preds = %42, %38
  %53 = icmp eq i32* %4, null
  br i1 %53, label %231, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  %56 = load i32, i32* %55, align 8
  switch i32 %56, label %231 [
    i32 0, label %57
    i32 1, label %67
  ]

57:                                               ; preds = %54
  br i1 %39, label %231, label %58

58:                                               ; preds = %57
  %59 = sext i32 %5 to i64
  %60 = shl nuw nsw i64 %59, 2
  %61 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %10, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = bitcast i32* %65 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %7, i64 %60, i1 false) #10
  br label %231

67:                                               ; preds = %54
  %68 = sext i32 %5 to i64
  %69 = getelementptr inbounds i32, i32* %4, i64 %68
  br i1 %39, label %231, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %72 = load i8**, i8*** %71, align 8
  %73 = load i32, i32* %10, align 4
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8*, i8** %72, i64 %74
  %76 = shl nsw i64 %68, 2
  %77 = add nsw i64 %76, -4
  %78 = lshr exact i64 %77, 2
  %79 = add nuw nsw i64 %78, 1
  %80 = icmp ult i64 %79, 4
  br i1 %80, label %160, label %81

81:                                               ; preds = %70
  %82 = shl nsw i64 %68, 2
  %83 = add nsw i64 %82, -4
  %84 = lshr exact i64 %83, 2
  %85 = add nsw i64 %84, %74
  %86 = getelementptr i8*, i8** %72, i64 %85
  %87 = add nuw nsw i64 %84, 1
  %88 = getelementptr i32, i32* %4, i64 %87
  %89 = bitcast i32* %88 to i8**
  %90 = icmp ult i8** %75, %89
  %91 = bitcast i8** %86 to i32*
  %92 = icmp ugt i32* %91, %4
  %93 = and i1 %90, %92
  br i1 %93, label %160, label %94

94:                                               ; preds = %81
  %95 = and i64 %79, 9223372036854775804
  %96 = getelementptr i8*, i8** %75, i64 %95
  %97 = getelementptr i32, i32* %4, i64 %95
  %98 = add nsw i64 %95, -4
  %99 = lshr exact i64 %98, 2
  %100 = add nuw nsw i64 %99, 1
  %101 = and i64 %100, 1
  %102 = icmp eq i64 %98, 0
  br i1 %102, label %140, label %103

103:                                              ; preds = %94
  %104 = sub nuw nsw i64 %100, %101
  br label %105

105:                                              ; preds = %105, %103
  %106 = phi i64 [ 0, %103 ], [ %137, %105 ]
  %107 = phi i64 [ %104, %103 ], [ %138, %105 ]
  %108 = getelementptr i8*, i8** %75, i64 %106
  %109 = getelementptr i32, i32* %4, i64 %106
  %110 = bitcast i32* %109 to <2 x i32>*
  %111 = load <2 x i32>, <2 x i32>* %110, align 4, !alias.scope !13
  %112 = getelementptr i32, i32* %109, i64 2
  %113 = bitcast i32* %112 to <2 x i32>*
  %114 = load <2 x i32>, <2 x i32>* %113, align 4, !alias.scope !13
  %115 = zext <2 x i32> %111 to <2 x i64>
  %116 = zext <2 x i32> %114 to <2 x i64>
  %117 = inttoptr <2 x i64> %115 to <2 x i8*>
  %118 = inttoptr <2 x i64> %116 to <2 x i8*>
  %119 = bitcast i8** %108 to <2 x i8*>*
  store <2 x i8*> %117, <2 x i8*>* %119, align 8, !alias.scope !16, !noalias !13
  %120 = getelementptr i8*, i8** %108, i64 2
  %121 = bitcast i8** %120 to <2 x i8*>*
  store <2 x i8*> %118, <2 x i8*>* %121, align 8, !alias.scope !16, !noalias !13
  %122 = or i64 %106, 4
  %123 = getelementptr i8*, i8** %75, i64 %122
  %124 = getelementptr i32, i32* %4, i64 %122
  %125 = bitcast i32* %124 to <2 x i32>*
  %126 = load <2 x i32>, <2 x i32>* %125, align 4, !alias.scope !13
  %127 = getelementptr i32, i32* %124, i64 2
  %128 = bitcast i32* %127 to <2 x i32>*
  %129 = load <2 x i32>, <2 x i32>* %128, align 4, !alias.scope !13
  %130 = zext <2 x i32> %126 to <2 x i64>
  %131 = zext <2 x i32> %129 to <2 x i64>
  %132 = inttoptr <2 x i64> %130 to <2 x i8*>
  %133 = inttoptr <2 x i64> %131 to <2 x i8*>
  %134 = bitcast i8** %123 to <2 x i8*>*
  store <2 x i8*> %132, <2 x i8*>* %134, align 8, !alias.scope !16, !noalias !13
  %135 = getelementptr i8*, i8** %123, i64 2
  %136 = bitcast i8** %135 to <2 x i8*>*
  store <2 x i8*> %133, <2 x i8*>* %136, align 8, !alias.scope !16, !noalias !13
  %137 = add i64 %106, 8
  %138 = add i64 %107, -2
  %139 = icmp eq i64 %138, 0
  br i1 %139, label %140, label %105, !llvm.loop !18

140:                                              ; preds = %105, %94
  %141 = phi i64 [ 0, %94 ], [ %137, %105 ]
  %142 = icmp eq i64 %101, 0
  br i1 %142, label %158, label %143

143:                                              ; preds = %140
  %144 = getelementptr i8*, i8** %75, i64 %141
  %145 = getelementptr i32, i32* %4, i64 %141
  %146 = bitcast i32* %145 to <2 x i32>*
  %147 = load <2 x i32>, <2 x i32>* %146, align 4, !alias.scope !13
  %148 = getelementptr i32, i32* %145, i64 2
  %149 = bitcast i32* %148 to <2 x i32>*
  %150 = load <2 x i32>, <2 x i32>* %149, align 4, !alias.scope !13
  %151 = zext <2 x i32> %147 to <2 x i64>
  %152 = zext <2 x i32> %150 to <2 x i64>
  %153 = inttoptr <2 x i64> %151 to <2 x i8*>
  %154 = inttoptr <2 x i64> %152 to <2 x i8*>
  %155 = bitcast i8** %144 to <2 x i8*>*
  store <2 x i8*> %153, <2 x i8*>* %155, align 8, !alias.scope !16, !noalias !13
  %156 = getelementptr i8*, i8** %144, i64 2
  %157 = bitcast i8** %156 to <2 x i8*>*
  store <2 x i8*> %154, <2 x i8*>* %157, align 8, !alias.scope !16, !noalias !13
  br label %158

158:                                              ; preds = %140, %143
  %159 = icmp eq i64 %79, %95
  br i1 %159, label %231, label %160

160:                                              ; preds = %158, %81, %70
  %161 = phi i8** [ %75, %81 ], [ %75, %70 ], [ %96, %158 ]
  %162 = phi i32* [ %4, %81 ], [ %4, %70 ], [ %97, %158 ]
  %163 = ptrtoint i32* %162 to i64
  %164 = add nsw i64 %68, -1
  %165 = getelementptr i32, i32* %4, i64 %164
  %166 = ptrtoint i32* %165 to i64
  %167 = sub i64 %166, %163
  %168 = lshr i64 %167, 2
  %169 = add nuw nsw i64 %168, 1
  %170 = and i64 %169, 7
  %171 = icmp eq i64 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %160, %172
  %173 = phi i8** [ %180, %172 ], [ %161, %160 ]
  %174 = phi i32* [ %179, %172 ], [ %162, %160 ]
  %175 = phi i64 [ %181, %172 ], [ %170, %160 ]
  %176 = load i32, i32* %174, align 4
  %177 = zext i32 %176 to i64
  %178 = inttoptr i64 %177 to i8*
  store i8* %178, i8** %173, align 8
  %179 = getelementptr inbounds i32, i32* %174, i64 1
  %180 = getelementptr inbounds i8*, i8** %173, i64 1
  %181 = add i64 %175, -1
  %182 = icmp eq i64 %181, 0
  br i1 %182, label %183, label %172, !llvm.loop !19

183:                                              ; preds = %172, %160
  %184 = phi i8** [ %161, %160 ], [ %180, %172 ]
  %185 = phi i32* [ %162, %160 ], [ %179, %172 ]
  %186 = icmp ult i64 %167, 28
  br i1 %186, label %231, label %187

187:                                              ; preds = %183, %187
  %188 = phi i8** [ %229, %187 ], [ %184, %183 ]
  %189 = phi i32* [ %228, %187 ], [ %185, %183 ]
  %190 = load i32, i32* %189, align 4
  %191 = zext i32 %190 to i64
  %192 = inttoptr i64 %191 to i8*
  store i8* %192, i8** %188, align 8
  %193 = getelementptr inbounds i32, i32* %189, i64 1
  %194 = getelementptr inbounds i8*, i8** %188, i64 1
  %195 = load i32, i32* %193, align 4
  %196 = zext i32 %195 to i64
  %197 = inttoptr i64 %196 to i8*
  store i8* %197, i8** %194, align 8
  %198 = getelementptr inbounds i32, i32* %189, i64 2
  %199 = getelementptr inbounds i8*, i8** %188, i64 2
  %200 = load i32, i32* %198, align 4
  %201 = zext i32 %200 to i64
  %202 = inttoptr i64 %201 to i8*
  store i8* %202, i8** %199, align 8
  %203 = getelementptr inbounds i32, i32* %189, i64 3
  %204 = getelementptr inbounds i8*, i8** %188, i64 3
  %205 = load i32, i32* %203, align 4
  %206 = zext i32 %205 to i64
  %207 = inttoptr i64 %206 to i8*
  store i8* %207, i8** %204, align 8
  %208 = getelementptr inbounds i32, i32* %189, i64 4
  %209 = getelementptr inbounds i8*, i8** %188, i64 4
  %210 = load i32, i32* %208, align 4
  %211 = zext i32 %210 to i64
  %212 = inttoptr i64 %211 to i8*
  store i8* %212, i8** %209, align 8
  %213 = getelementptr inbounds i32, i32* %189, i64 5
  %214 = getelementptr inbounds i8*, i8** %188, i64 5
  %215 = load i32, i32* %213, align 4
  %216 = zext i32 %215 to i64
  %217 = inttoptr i64 %216 to i8*
  store i8* %217, i8** %214, align 8
  %218 = getelementptr inbounds i32, i32* %189, i64 6
  %219 = getelementptr inbounds i8*, i8** %188, i64 6
  %220 = load i32, i32* %218, align 4
  %221 = zext i32 %220 to i64
  %222 = inttoptr i64 %221 to i8*
  store i8* %222, i8** %219, align 8
  %223 = getelementptr inbounds i32, i32* %189, i64 7
  %224 = getelementptr inbounds i8*, i8** %188, i64 7
  %225 = load i32, i32* %223, align 4
  %226 = zext i32 %225 to i64
  %227 = inttoptr i64 %226 to i8*
  store i8* %227, i8** %224, align 8
  %228 = getelementptr inbounds i32, i32* %189, i64 8
  %229 = getelementptr inbounds i8*, i8** %188, i64 8
  %230 = icmp eq i32* %228, %69
  br i1 %230, label %231, label %187, !llvm.loop !20

231:                                              ; preds = %183, %187, %158, %52, %54, %57, %58, %67
  %232 = load i32, i32* %10, align 4
  %233 = add nsw i32 %232, %5
  store i32 %233, i32* %10, align 4
  br label %234

234:                                              ; preds = %9, %6, %14, %36, %231
  %235 = phi i1 [ true, %231 ], [ false, %36 ], [ false, %14 ], [ false, %6 ], [ false, %9 ]
  ret i1 %235
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager26EnsureDrawElementsFunctionENS1_12DrawFunctionEjji(%"class.gpu::gles2::MultiDrawManager"*, i32, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = icmp slt i32 %4, 0
  br i1 %6, label %36, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 4
  %10 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %9, i32 %4) #10
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %36, label %12, !prof !2

12:                                               ; preds = %7
  %13 = extractvalue { i32, i1 } %10, 0
  %14 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %13, %15
  br i1 %16, label %36, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 2
  %21 = icmp eq i32 %19, 0
  %22 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, %2
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %3
  br label %29

29:                                               ; preds = %25, %17
  %30 = phi i1 [ false, %17 ], [ %28, %25 ]
  %31 = or i1 %21, %30
  %32 = and i1 %20, %31
  br i1 %21, label %33, label %36

33:                                               ; preds = %29
  store i32 1, i32* %18, align 8
  %34 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 %1, i32* %34, align 8
  store i32 %2, i32* %22, align 8
  %35 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  store i32 %3, i32* %35, align 4
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0)
  br label %36

36:                                               ; preds = %29, %12, %7, %5, %33
  %37 = phi i1 [ false, %12 ], [ %32, %29 ], [ true, %33 ], [ false, %5 ], [ false, %7 ]
  ret i1 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager26MultiDrawElementsInstancedEjPKijS3_S3_i(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32, i32* readonly, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %8 = bitcast i32* %4 to i8*
  %9 = icmp slt i32 %6, 0
  br i1 %9, label %248, label %10

10:                                               ; preds = %7
  %11 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %12, i32 %6) #10
  %14 = extractvalue { i32, i1 } %13, 1
  br i1 %14, label %248, label %15, !prof !2

15:                                               ; preds = %10
  %16 = extractvalue { i32, i1 } %13, 0
  %17 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %16, %18
  br i1 %19, label %248, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 2
  %24 = icmp eq i32 %22, 0
  %25 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, %1
  br i1 %27, label %28, label %32

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, %3
  br label %32

32:                                               ; preds = %28, %20
  %33 = phi i1 [ false, %20 ], [ %31, %28 ]
  br i1 %24, label %34, label %37

34:                                               ; preds = %32
  store i32 1, i32* %21, align 8
  %35 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 4, i32* %35, align 8
  store i32 %1, i32* %25, align 8
  %36 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  store i32 %3, i32* %36, align 4
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %39

37:                                               ; preds = %32
  %38 = and i1 %23, %33
  br i1 %38, label %39, label %248

39:                                               ; preds = %34, %37
  %40 = icmp eq i32 %6, 0
  %41 = icmp eq i32* %2, null
  %42 = or i1 %41, %40
  br i1 %42, label %53, label %43

43:                                               ; preds = %39
  %44 = sext i32 %6 to i64
  %45 = shl nuw nsw i64 %44, 2
  %46 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %47 = load i32*, i32** %46, align 8
  %48 = load i32, i32* %11, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, i32* %47, i64 %49
  %51 = bitcast i32* %50 to i8*
  %52 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %51, i8* nonnull align 4 %52, i64 %45, i1 false) #10
  br label %53

53:                                               ; preds = %43, %39
  %54 = icmp eq i32* %5, null
  %55 = or i1 %54, %40
  br i1 %55, label %66, label %56

56:                                               ; preds = %53
  %57 = sext i32 %6 to i64
  %58 = shl nuw nsw i64 %57, 2
  %59 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 0
  %60 = load i32*, i32** %59, align 8
  %61 = load i32, i32* %11, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %60, i64 %62
  %64 = bitcast i32* %63 to i8*
  %65 = bitcast i32* %5 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %64, i8* nonnull align 4 %65, i64 %58, i1 false) #10
  br label %66

66:                                               ; preds = %56, %53
  %67 = icmp eq i32* %4, null
  br i1 %67, label %245, label %68

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  %70 = load i32, i32* %69, align 8
  switch i32 %70, label %245 [
    i32 0, label %71
    i32 1, label %81
  ]

71:                                               ; preds = %68
  br i1 %40, label %245, label %72

72:                                               ; preds = %71
  %73 = sext i32 %6 to i64
  %74 = shl nuw nsw i64 %73, 2
  %75 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = load i32, i32* %11, align 4
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i32, i32* %76, i64 %78
  %80 = bitcast i32* %79 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %80, i8* nonnull align 4 %8, i64 %74, i1 false) #10
  br label %245

81:                                               ; preds = %68
  %82 = sext i32 %6 to i64
  %83 = getelementptr inbounds i32, i32* %4, i64 %82
  br i1 %40, label %245, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %86 = load i8**, i8*** %85, align 8
  %87 = load i32, i32* %11, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8*, i8** %86, i64 %88
  %90 = shl nsw i64 %82, 2
  %91 = add nsw i64 %90, -4
  %92 = lshr exact i64 %91, 2
  %93 = add nuw nsw i64 %92, 1
  %94 = icmp ult i64 %93, 4
  br i1 %94, label %174, label %95

95:                                               ; preds = %84
  %96 = shl nsw i64 %82, 2
  %97 = add nsw i64 %96, -4
  %98 = lshr exact i64 %97, 2
  %99 = add nsw i64 %98, %88
  %100 = getelementptr i8*, i8** %86, i64 %99
  %101 = add nuw nsw i64 %98, 1
  %102 = getelementptr i32, i32* %4, i64 %101
  %103 = bitcast i32* %102 to i8**
  %104 = icmp ult i8** %89, %103
  %105 = bitcast i8** %100 to i32*
  %106 = icmp ugt i32* %105, %4
  %107 = and i1 %104, %106
  br i1 %107, label %174, label %108

108:                                              ; preds = %95
  %109 = and i64 %93, 9223372036854775804
  %110 = getelementptr i8*, i8** %89, i64 %109
  %111 = getelementptr i32, i32* %4, i64 %109
  %112 = add nsw i64 %109, -4
  %113 = lshr exact i64 %112, 2
  %114 = add nuw nsw i64 %113, 1
  %115 = and i64 %114, 1
  %116 = icmp eq i64 %112, 0
  br i1 %116, label %154, label %117

117:                                              ; preds = %108
  %118 = sub nuw nsw i64 %114, %115
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %151, %119 ]
  %121 = phi i64 [ %118, %117 ], [ %152, %119 ]
  %122 = getelementptr i8*, i8** %89, i64 %120
  %123 = getelementptr i32, i32* %4, i64 %120
  %124 = bitcast i32* %123 to <2 x i32>*
  %125 = load <2 x i32>, <2 x i32>* %124, align 4, !alias.scope !21
  %126 = getelementptr i32, i32* %123, i64 2
  %127 = bitcast i32* %126 to <2 x i32>*
  %128 = load <2 x i32>, <2 x i32>* %127, align 4, !alias.scope !21
  %129 = zext <2 x i32> %125 to <2 x i64>
  %130 = zext <2 x i32> %128 to <2 x i64>
  %131 = inttoptr <2 x i64> %129 to <2 x i8*>
  %132 = inttoptr <2 x i64> %130 to <2 x i8*>
  %133 = bitcast i8** %122 to <2 x i8*>*
  store <2 x i8*> %131, <2 x i8*>* %133, align 8, !alias.scope !24, !noalias !21
  %134 = getelementptr i8*, i8** %122, i64 2
  %135 = bitcast i8** %134 to <2 x i8*>*
  store <2 x i8*> %132, <2 x i8*>* %135, align 8, !alias.scope !24, !noalias !21
  %136 = or i64 %120, 4
  %137 = getelementptr i8*, i8** %89, i64 %136
  %138 = getelementptr i32, i32* %4, i64 %136
  %139 = bitcast i32* %138 to <2 x i32>*
  %140 = load <2 x i32>, <2 x i32>* %139, align 4, !alias.scope !21
  %141 = getelementptr i32, i32* %138, i64 2
  %142 = bitcast i32* %141 to <2 x i32>*
  %143 = load <2 x i32>, <2 x i32>* %142, align 4, !alias.scope !21
  %144 = zext <2 x i32> %140 to <2 x i64>
  %145 = zext <2 x i32> %143 to <2 x i64>
  %146 = inttoptr <2 x i64> %144 to <2 x i8*>
  %147 = inttoptr <2 x i64> %145 to <2 x i8*>
  %148 = bitcast i8** %137 to <2 x i8*>*
  store <2 x i8*> %146, <2 x i8*>* %148, align 8, !alias.scope !24, !noalias !21
  %149 = getelementptr i8*, i8** %137, i64 2
  %150 = bitcast i8** %149 to <2 x i8*>*
  store <2 x i8*> %147, <2 x i8*>* %150, align 8, !alias.scope !24, !noalias !21
  %151 = add i64 %120, 8
  %152 = add i64 %121, -2
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %119, !llvm.loop !26

154:                                              ; preds = %119, %108
  %155 = phi i64 [ 0, %108 ], [ %151, %119 ]
  %156 = icmp eq i64 %115, 0
  br i1 %156, label %172, label %157

157:                                              ; preds = %154
  %158 = getelementptr i8*, i8** %89, i64 %155
  %159 = getelementptr i32, i32* %4, i64 %155
  %160 = bitcast i32* %159 to <2 x i32>*
  %161 = load <2 x i32>, <2 x i32>* %160, align 4, !alias.scope !21
  %162 = getelementptr i32, i32* %159, i64 2
  %163 = bitcast i32* %162 to <2 x i32>*
  %164 = load <2 x i32>, <2 x i32>* %163, align 4, !alias.scope !21
  %165 = zext <2 x i32> %161 to <2 x i64>
  %166 = zext <2 x i32> %164 to <2 x i64>
  %167 = inttoptr <2 x i64> %165 to <2 x i8*>
  %168 = inttoptr <2 x i64> %166 to <2 x i8*>
  %169 = bitcast i8** %158 to <2 x i8*>*
  store <2 x i8*> %167, <2 x i8*>* %169, align 8, !alias.scope !24, !noalias !21
  %170 = getelementptr i8*, i8** %158, i64 2
  %171 = bitcast i8** %170 to <2 x i8*>*
  store <2 x i8*> %168, <2 x i8*>* %171, align 8, !alias.scope !24, !noalias !21
  br label %172

172:                                              ; preds = %154, %157
  %173 = icmp eq i64 %93, %109
  br i1 %173, label %245, label %174

174:                                              ; preds = %172, %95, %84
  %175 = phi i8** [ %89, %95 ], [ %89, %84 ], [ %110, %172 ]
  %176 = phi i32* [ %4, %95 ], [ %4, %84 ], [ %111, %172 ]
  %177 = ptrtoint i32* %176 to i64
  %178 = add nsw i64 %82, -1
  %179 = getelementptr i32, i32* %4, i64 %178
  %180 = ptrtoint i32* %179 to i64
  %181 = sub i64 %180, %177
  %182 = lshr i64 %181, 2
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 7
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %197, label %186

186:                                              ; preds = %174, %186
  %187 = phi i8** [ %194, %186 ], [ %175, %174 ]
  %188 = phi i32* [ %193, %186 ], [ %176, %174 ]
  %189 = phi i64 [ %195, %186 ], [ %184, %174 ]
  %190 = load i32, i32* %188, align 4
  %191 = zext i32 %190 to i64
  %192 = inttoptr i64 %191 to i8*
  store i8* %192, i8** %187, align 8
  %193 = getelementptr inbounds i32, i32* %188, i64 1
  %194 = getelementptr inbounds i8*, i8** %187, i64 1
  %195 = add i64 %189, -1
  %196 = icmp eq i64 %195, 0
  br i1 %196, label %197, label %186, !llvm.loop !27

197:                                              ; preds = %186, %174
  %198 = phi i8** [ %175, %174 ], [ %194, %186 ]
  %199 = phi i32* [ %176, %174 ], [ %193, %186 ]
  %200 = icmp ult i64 %181, 28
  br i1 %200, label %245, label %201

201:                                              ; preds = %197, %201
  %202 = phi i8** [ %243, %201 ], [ %198, %197 ]
  %203 = phi i32* [ %242, %201 ], [ %199, %197 ]
  %204 = load i32, i32* %203, align 4
  %205 = zext i32 %204 to i64
  %206 = inttoptr i64 %205 to i8*
  store i8* %206, i8** %202, align 8
  %207 = getelementptr inbounds i32, i32* %203, i64 1
  %208 = getelementptr inbounds i8*, i8** %202, i64 1
  %209 = load i32, i32* %207, align 4
  %210 = zext i32 %209 to i64
  %211 = inttoptr i64 %210 to i8*
  store i8* %211, i8** %208, align 8
  %212 = getelementptr inbounds i32, i32* %203, i64 2
  %213 = getelementptr inbounds i8*, i8** %202, i64 2
  %214 = load i32, i32* %212, align 4
  %215 = zext i32 %214 to i64
  %216 = inttoptr i64 %215 to i8*
  store i8* %216, i8** %213, align 8
  %217 = getelementptr inbounds i32, i32* %203, i64 3
  %218 = getelementptr inbounds i8*, i8** %202, i64 3
  %219 = load i32, i32* %217, align 4
  %220 = zext i32 %219 to i64
  %221 = inttoptr i64 %220 to i8*
  store i8* %221, i8** %218, align 8
  %222 = getelementptr inbounds i32, i32* %203, i64 4
  %223 = getelementptr inbounds i8*, i8** %202, i64 4
  %224 = load i32, i32* %222, align 4
  %225 = zext i32 %224 to i64
  %226 = inttoptr i64 %225 to i8*
  store i8* %226, i8** %223, align 8
  %227 = getelementptr inbounds i32, i32* %203, i64 5
  %228 = getelementptr inbounds i8*, i8** %202, i64 5
  %229 = load i32, i32* %227, align 4
  %230 = zext i32 %229 to i64
  %231 = inttoptr i64 %230 to i8*
  store i8* %231, i8** %228, align 8
  %232 = getelementptr inbounds i32, i32* %203, i64 6
  %233 = getelementptr inbounds i8*, i8** %202, i64 6
  %234 = load i32, i32* %232, align 4
  %235 = zext i32 %234 to i64
  %236 = inttoptr i64 %235 to i8*
  store i8* %236, i8** %233, align 8
  %237 = getelementptr inbounds i32, i32* %203, i64 7
  %238 = getelementptr inbounds i8*, i8** %202, i64 7
  %239 = load i32, i32* %237, align 4
  %240 = zext i32 %239 to i64
  %241 = inttoptr i64 %240 to i8*
  store i8* %241, i8** %238, align 8
  %242 = getelementptr inbounds i32, i32* %203, i64 8
  %243 = getelementptr inbounds i8*, i8** %202, i64 8
  %244 = icmp eq i32* %242, %83
  br i1 %244, label %245, label %201, !llvm.loop !28

245:                                              ; preds = %197, %201, %172, %66, %68, %71, %72, %81
  %246 = load i32, i32* %11, align 4
  %247 = add nsw i32 %246, %6
  store i32 %247, i32* %11, align 4
  br label %248

248:                                              ; preds = %10, %7, %15, %37, %245
  %249 = phi i1 [ true, %245 ], [ false, %37 ], [ false, %15 ], [ false, %7 ], [ false, %10 ]
  ret i1 %249
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3gpu5gles216MultiDrawManager48MultiDrawElementsInstancedBaseVertexBaseInstanceEjPKijS3_S3_S3_PKji(%"class.gpu::gles2::MultiDrawManager"*, i32, i32* readonly, i32, i32* readonly, i32* readonly, i32* readonly, i32* readonly, i32) local_unnamed_addr #0 align 2 {
  %10 = bitcast i32* %4 to i8*
  %11 = icmp slt i32 %8, 0
  br i1 %11, label %276, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %8) #10
  %16 = extractvalue { i32, i1 } %15, 1
  br i1 %16, label %276, label %17, !prof !2

17:                                               ; preds = %12
  %18 = extractvalue { i32, i1 } %15, 0
  %19 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %18, %20
  br i1 %21, label %276, label %22

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp ne i32 %24, 2
  %26 = icmp eq i32 %24, 0
  %27 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 2
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, %1
  br i1 %29, label %30, label %34

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, %3
  br label %34

34:                                               ; preds = %30, %22
  %35 = phi i1 [ false, %22 ], [ %33, %30 ]
  br i1 %26, label %36, label %39

36:                                               ; preds = %34
  store i32 1, i32* %23, align 8
  %37 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  store i32 5, i32* %37, align 8
  store i32 %1, i32* %27, align 8
  %38 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 3
  store i32 %3, i32* %38, align 4
  tail call void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"* %0) #10
  br label %41

39:                                               ; preds = %34
  %40 = and i1 %25, %35
  br i1 %40, label %41, label %276

41:                                               ; preds = %36, %39
  %42 = icmp eq i32 %8, 0
  %43 = icmp eq i32* %2, null
  %44 = or i1 %43, %42
  br i1 %44, label %55, label %45

45:                                               ; preds = %41
  %46 = sext i32 %8 to i64
  %47 = shl nuw nsw i64 %46, 2
  %48 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 0
  %49 = load i32*, i32** %48, align 8
  %50 = load i32, i32* %13, align 4
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i32, i32* %49, i64 %51
  %53 = bitcast i32* %52 to i8*
  %54 = bitcast i32* %2 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %53, i8* nonnull align 4 %54, i64 %47, i1 false) #10
  br label %55

55:                                               ; preds = %45, %41
  %56 = icmp eq i32* %5, null
  %57 = or i1 %56, %42
  br i1 %57, label %68, label %58

58:                                               ; preds = %55
  %59 = sext i32 %8 to i64
  %60 = shl nuw nsw i64 %59, 2
  %61 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = load i32, i32* %13, align 4
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i32, i32* %62, i64 %64
  %66 = bitcast i32* %65 to i8*
  %67 = bitcast i32* %5 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %66, i8* nonnull align 4 %67, i64 %60, i1 false) #10
  br label %68

68:                                               ; preds = %58, %55
  %69 = icmp eq i32* %6, null
  %70 = or i1 %69, %42
  br i1 %70, label %81, label %71

71:                                               ; preds = %68
  %72 = sext i32 %8 to i64
  %73 = shl nuw nsw i64 %72, 2
  %74 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 9, i32 0, i32 0
  %75 = load i32*, i32** %74, align 8
  %76 = load i32, i32* %13, align 4
  %77 = sext i32 %76 to i64
  %78 = getelementptr inbounds i32, i32* %75, i64 %77
  %79 = bitcast i32* %78 to i8*
  %80 = bitcast i32* %6 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %79, i8* nonnull align 4 %80, i64 %73, i1 false) #10
  br label %81

81:                                               ; preds = %71, %68
  %82 = icmp eq i32* %7, null
  %83 = or i1 %82, %42
  br i1 %83, label %94, label %84

84:                                               ; preds = %81
  %85 = sext i32 %8 to i64
  %86 = shl nuw nsw i64 %85, 2
  %87 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10, i32 0, i32 0
  %88 = load i32*, i32** %87, align 8
  %89 = load i32, i32* %13, align 4
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i32, i32* %88, i64 %90
  %92 = bitcast i32* %91 to i8*
  %93 = bitcast i32* %7 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %92, i8* nonnull align 4 %93, i64 %86, i1 false) #10
  br label %94

94:                                               ; preds = %84, %81
  %95 = icmp eq i32* %4, null
  br i1 %95, label %273, label %96

96:                                               ; preds = %94
  %97 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  %98 = load i32, i32* %97, align 8
  switch i32 %98, label %273 [
    i32 0, label %99
    i32 1, label %109
  ]

99:                                               ; preds = %96
  br i1 %42, label %273, label %100

100:                                              ; preds = %99
  %101 = sext i32 %8 to i64
  %102 = shl nuw nsw i64 %101, 2
  %103 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6, i32 0, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = load i32, i32* %13, align 4
  %106 = sext i32 %105 to i64
  %107 = getelementptr inbounds i32, i32* %104, i64 %106
  %108 = bitcast i32* %107 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %108, i8* nonnull align 4 %10, i64 %102, i1 false) #10
  br label %273

109:                                              ; preds = %96
  %110 = sext i32 %8 to i64
  %111 = getelementptr inbounds i32, i32* %4, i64 %110
  br i1 %42, label %273, label %112

112:                                              ; preds = %109
  %113 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7, i32 0, i32 0
  %114 = load i8**, i8*** %113, align 8
  %115 = load i32, i32* %13, align 4
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8*, i8** %114, i64 %116
  %118 = shl nsw i64 %110, 2
  %119 = add nsw i64 %118, -4
  %120 = lshr exact i64 %119, 2
  %121 = add nuw nsw i64 %120, 1
  %122 = icmp ult i64 %121, 4
  br i1 %122, label %202, label %123

123:                                              ; preds = %112
  %124 = shl nsw i64 %110, 2
  %125 = add nsw i64 %124, -4
  %126 = lshr exact i64 %125, 2
  %127 = add nsw i64 %126, %116
  %128 = getelementptr i8*, i8** %114, i64 %127
  %129 = add nuw nsw i64 %126, 1
  %130 = getelementptr i32, i32* %4, i64 %129
  %131 = bitcast i32* %130 to i8**
  %132 = icmp ult i8** %117, %131
  %133 = bitcast i8** %128 to i32*
  %134 = icmp ugt i32* %133, %4
  %135 = and i1 %132, %134
  br i1 %135, label %202, label %136

136:                                              ; preds = %123
  %137 = and i64 %121, 9223372036854775804
  %138 = getelementptr i8*, i8** %117, i64 %137
  %139 = getelementptr i32, i32* %4, i64 %137
  %140 = add nsw i64 %137, -4
  %141 = lshr exact i64 %140, 2
  %142 = add nuw nsw i64 %141, 1
  %143 = and i64 %142, 1
  %144 = icmp eq i64 %140, 0
  br i1 %144, label %182, label %145

145:                                              ; preds = %136
  %146 = sub nuw nsw i64 %142, %143
  br label %147

147:                                              ; preds = %147, %145
  %148 = phi i64 [ 0, %145 ], [ %179, %147 ]
  %149 = phi i64 [ %146, %145 ], [ %180, %147 ]
  %150 = getelementptr i8*, i8** %117, i64 %148
  %151 = getelementptr i32, i32* %4, i64 %148
  %152 = bitcast i32* %151 to <2 x i32>*
  %153 = load <2 x i32>, <2 x i32>* %152, align 4, !alias.scope !29
  %154 = getelementptr i32, i32* %151, i64 2
  %155 = bitcast i32* %154 to <2 x i32>*
  %156 = load <2 x i32>, <2 x i32>* %155, align 4, !alias.scope !29
  %157 = zext <2 x i32> %153 to <2 x i64>
  %158 = zext <2 x i32> %156 to <2 x i64>
  %159 = inttoptr <2 x i64> %157 to <2 x i8*>
  %160 = inttoptr <2 x i64> %158 to <2 x i8*>
  %161 = bitcast i8** %150 to <2 x i8*>*
  store <2 x i8*> %159, <2 x i8*>* %161, align 8, !alias.scope !32, !noalias !29
  %162 = getelementptr i8*, i8** %150, i64 2
  %163 = bitcast i8** %162 to <2 x i8*>*
  store <2 x i8*> %160, <2 x i8*>* %163, align 8, !alias.scope !32, !noalias !29
  %164 = or i64 %148, 4
  %165 = getelementptr i8*, i8** %117, i64 %164
  %166 = getelementptr i32, i32* %4, i64 %164
  %167 = bitcast i32* %166 to <2 x i32>*
  %168 = load <2 x i32>, <2 x i32>* %167, align 4, !alias.scope !29
  %169 = getelementptr i32, i32* %166, i64 2
  %170 = bitcast i32* %169 to <2 x i32>*
  %171 = load <2 x i32>, <2 x i32>* %170, align 4, !alias.scope !29
  %172 = zext <2 x i32> %168 to <2 x i64>
  %173 = zext <2 x i32> %171 to <2 x i64>
  %174 = inttoptr <2 x i64> %172 to <2 x i8*>
  %175 = inttoptr <2 x i64> %173 to <2 x i8*>
  %176 = bitcast i8** %165 to <2 x i8*>*
  store <2 x i8*> %174, <2 x i8*>* %176, align 8, !alias.scope !32, !noalias !29
  %177 = getelementptr i8*, i8** %165, i64 2
  %178 = bitcast i8** %177 to <2 x i8*>*
  store <2 x i8*> %175, <2 x i8*>* %178, align 8, !alias.scope !32, !noalias !29
  %179 = add i64 %148, 8
  %180 = add i64 %149, -2
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %147, !llvm.loop !34

182:                                              ; preds = %147, %136
  %183 = phi i64 [ 0, %136 ], [ %179, %147 ]
  %184 = icmp eq i64 %143, 0
  br i1 %184, label %200, label %185

185:                                              ; preds = %182
  %186 = getelementptr i8*, i8** %117, i64 %183
  %187 = getelementptr i32, i32* %4, i64 %183
  %188 = bitcast i32* %187 to <2 x i32>*
  %189 = load <2 x i32>, <2 x i32>* %188, align 4, !alias.scope !29
  %190 = getelementptr i32, i32* %187, i64 2
  %191 = bitcast i32* %190 to <2 x i32>*
  %192 = load <2 x i32>, <2 x i32>* %191, align 4, !alias.scope !29
  %193 = zext <2 x i32> %189 to <2 x i64>
  %194 = zext <2 x i32> %192 to <2 x i64>
  %195 = inttoptr <2 x i64> %193 to <2 x i8*>
  %196 = inttoptr <2 x i64> %194 to <2 x i8*>
  %197 = bitcast i8** %186 to <2 x i8*>*
  store <2 x i8*> %195, <2 x i8*>* %197, align 8, !alias.scope !32, !noalias !29
  %198 = getelementptr i8*, i8** %186, i64 2
  %199 = bitcast i8** %198 to <2 x i8*>*
  store <2 x i8*> %196, <2 x i8*>* %199, align 8, !alias.scope !32, !noalias !29
  br label %200

200:                                              ; preds = %182, %185
  %201 = icmp eq i64 %121, %137
  br i1 %201, label %273, label %202

202:                                              ; preds = %200, %123, %112
  %203 = phi i8** [ %117, %123 ], [ %117, %112 ], [ %138, %200 ]
  %204 = phi i32* [ %4, %123 ], [ %4, %112 ], [ %139, %200 ]
  %205 = ptrtoint i32* %204 to i64
  %206 = add nsw i64 %110, -1
  %207 = getelementptr i32, i32* %4, i64 %206
  %208 = ptrtoint i32* %207 to i64
  %209 = sub i64 %208, %205
  %210 = lshr i64 %209, 2
  %211 = add nuw nsw i64 %210, 1
  %212 = and i64 %211, 7
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %225, label %214

214:                                              ; preds = %202, %214
  %215 = phi i8** [ %222, %214 ], [ %203, %202 ]
  %216 = phi i32* [ %221, %214 ], [ %204, %202 ]
  %217 = phi i64 [ %223, %214 ], [ %212, %202 ]
  %218 = load i32, i32* %216, align 4
  %219 = zext i32 %218 to i64
  %220 = inttoptr i64 %219 to i8*
  store i8* %220, i8** %215, align 8
  %221 = getelementptr inbounds i32, i32* %216, i64 1
  %222 = getelementptr inbounds i8*, i8** %215, i64 1
  %223 = add i64 %217, -1
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %225, label %214, !llvm.loop !35

225:                                              ; preds = %214, %202
  %226 = phi i8** [ %203, %202 ], [ %222, %214 ]
  %227 = phi i32* [ %204, %202 ], [ %221, %214 ]
  %228 = icmp ult i64 %209, 28
  br i1 %228, label %273, label %229

229:                                              ; preds = %225, %229
  %230 = phi i8** [ %271, %229 ], [ %226, %225 ]
  %231 = phi i32* [ %270, %229 ], [ %227, %225 ]
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i64
  %234 = inttoptr i64 %233 to i8*
  store i8* %234, i8** %230, align 8
  %235 = getelementptr inbounds i32, i32* %231, i64 1
  %236 = getelementptr inbounds i8*, i8** %230, i64 1
  %237 = load i32, i32* %235, align 4
  %238 = zext i32 %237 to i64
  %239 = inttoptr i64 %238 to i8*
  store i8* %239, i8** %236, align 8
  %240 = getelementptr inbounds i32, i32* %231, i64 2
  %241 = getelementptr inbounds i8*, i8** %230, i64 2
  %242 = load i32, i32* %240, align 4
  %243 = zext i32 %242 to i64
  %244 = inttoptr i64 %243 to i8*
  store i8* %244, i8** %241, align 8
  %245 = getelementptr inbounds i32, i32* %231, i64 3
  %246 = getelementptr inbounds i8*, i8** %230, i64 3
  %247 = load i32, i32* %245, align 4
  %248 = zext i32 %247 to i64
  %249 = inttoptr i64 %248 to i8*
  store i8* %249, i8** %246, align 8
  %250 = getelementptr inbounds i32, i32* %231, i64 4
  %251 = getelementptr inbounds i8*, i8** %230, i64 4
  %252 = load i32, i32* %250, align 4
  %253 = zext i32 %252 to i64
  %254 = inttoptr i64 %253 to i8*
  store i8* %254, i8** %251, align 8
  %255 = getelementptr inbounds i32, i32* %231, i64 5
  %256 = getelementptr inbounds i8*, i8** %230, i64 5
  %257 = load i32, i32* %255, align 4
  %258 = zext i32 %257 to i64
  %259 = inttoptr i64 %258 to i8*
  store i8* %259, i8** %256, align 8
  %260 = getelementptr inbounds i32, i32* %231, i64 6
  %261 = getelementptr inbounds i8*, i8** %230, i64 6
  %262 = load i32, i32* %260, align 4
  %263 = zext i32 %262 to i64
  %264 = inttoptr i64 %263 to i8*
  store i8* %264, i8** %261, align 8
  %265 = getelementptr inbounds i32, i32* %231, i64 7
  %266 = getelementptr inbounds i8*, i8** %230, i64 7
  %267 = load i32, i32* %265, align 4
  %268 = zext i32 %267 to i64
  %269 = inttoptr i64 %268 to i8*
  store i8* %269, i8** %266, align 8
  %270 = getelementptr inbounds i32, i32* %231, i64 8
  %271 = getelementptr inbounds i8*, i8** %230, i64 8
  %272 = icmp eq i32* %270, %111
  br i1 %272, label %273, label %229, !llvm.loop !36

273:                                              ; preds = %225, %229, %200, %94, %96, %99, %100, %109
  %274 = load i32, i32* %13, align 4
  %275 = add nsw i32 %274, %8
  store i32 %275, i32* %13, align 4
  br label %276

276:                                              ; preds = %12, %9, %17, %39, %273
  %277 = phi i1 [ true, %273 ], [ false, %39 ], [ false, %17 ], [ false, %9 ], [ false, %12 ]
  ret i1 %277
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu5gles216MultiDrawManager12ResizeArraysEv(%"class.gpu::gles2::MultiDrawManager"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 0
  %3 = load i32, i32* %2, align 8
  switch i32 %3, label %205 [
    i32 2, label %4
    i32 1, label %24
    i32 0, label %44
    i32 5, label %84
    i32 4, label %124
    i32 3, label %144
  ]

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10
  %6 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = sext i32 %7 to i64
  %9 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10, i32 0, i32 1
  %10 = bitcast i32** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.std::__1::vector.8"* %5 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = ashr exact i64 %14, 2
  %16 = icmp ult i64 %15, %8
  %17 = inttoptr i64 %13 to i32*
  br i1 %16, label %18, label %20

18:                                               ; preds = %4
  %19 = sub nsw i64 %8, %15
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.8"* %5, i64 %19) #10
  br label %24

20:                                               ; preds = %4
  %21 = icmp ugt i64 %15, %8
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = getelementptr inbounds i32, i32* %17, i64 %8
  store i32* %23, i32** %9, align 8
  br label %24

24:                                               ; preds = %22, %20, %18, %1
  %25 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8
  %26 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %27 = load i32, i32* %26, align 4
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 1
  %30 = bitcast i32** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector"* %25 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = ashr exact i64 %34, 2
  %36 = icmp ult i64 %35, %28
  %37 = inttoptr i64 %33 to i32*
  br i1 %36, label %38, label %40

38:                                               ; preds = %24
  %39 = sub nsw i64 %28, %35
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %25, i64 %39) #10
  br label %44

40:                                               ; preds = %24
  %41 = icmp ugt i64 %35, %28
  br i1 %41, label %42, label %44

42:                                               ; preds = %40
  %43 = getelementptr inbounds i32, i32* %37, i64 %28
  store i32* %43, i32** %29, align 8
  br label %44

44:                                               ; preds = %42, %40, %38, %1
  %45 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4
  %46 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 4, i32 0, i32 1
  %50 = bitcast i32** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.std::__1::vector"* %45 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %51, %53
  %55 = ashr exact i64 %54, 2
  %56 = icmp ult i64 %55, %48
  %57 = inttoptr i64 %53 to i32*
  br i1 %56, label %58, label %62

58:                                               ; preds = %44
  %59 = sub nsw i64 %48, %55
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %45, i64 %59) #10
  %60 = load i32, i32* %46, align 4
  %61 = sext i32 %60 to i64
  br label %66

62:                                               ; preds = %44
  %63 = icmp ugt i64 %55, %48
  br i1 %63, label %64, label %66

64:                                               ; preds = %62
  %65 = getelementptr inbounds i32, i32* %57, i64 %48
  store i32* %65, i32** %49, align 8
  br label %66

66:                                               ; preds = %58, %62, %64
  %67 = phi i64 [ %61, %58 ], [ %48, %62 ], [ %48, %64 ]
  %68 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5
  %69 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 1
  %70 = bitcast i32** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.std::__1::vector"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = ashr exact i64 %74, 2
  %76 = icmp ugt i64 %67, %75
  %77 = inttoptr i64 %73 to i32*
  br i1 %76, label %78, label %80

78:                                               ; preds = %66
  %79 = sub nsw i64 %67, %75
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %68, i64 %79) #10
  br label %205

80:                                               ; preds = %66
  %81 = icmp ult i64 %67, %75
  br i1 %81, label %82, label %205

82:                                               ; preds = %80
  %83 = getelementptr inbounds i32, i32* %77, i64 %67
  store i32* %83, i32** %69, align 8
  br label %205

84:                                               ; preds = %1
  %85 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 9
  %86 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %87 = load i32, i32* %86, align 4
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 9, i32 0, i32 1
  %90 = bitcast i32** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = bitcast %"class.std::__1::vector"* %85 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = sub i64 %91, %93
  %95 = ashr exact i64 %94, 2
  %96 = icmp ult i64 %95, %88
  %97 = inttoptr i64 %93 to i32*
  br i1 %96, label %98, label %102

98:                                               ; preds = %84
  %99 = sub nsw i64 %88, %95
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %85, i64 %99) #10
  %100 = load i32, i32* %86, align 4
  %101 = sext i32 %100 to i64
  br label %106

102:                                              ; preds = %84
  %103 = icmp ugt i64 %95, %88
  br i1 %103, label %104, label %106

104:                                              ; preds = %102
  %105 = getelementptr inbounds i32, i32* %97, i64 %88
  store i32* %105, i32** %89, align 8
  br label %106

106:                                              ; preds = %98, %102, %104
  %107 = phi i64 [ %101, %98 ], [ %88, %102 ], [ %88, %104 ]
  %108 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10
  %109 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 10, i32 0, i32 1
  %110 = bitcast i32** %109 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.std::__1::vector.8"* %108 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = sub i64 %111, %113
  %115 = ashr exact i64 %114, 2
  %116 = icmp ugt i64 %107, %115
  %117 = inttoptr i64 %113 to i32*
  br i1 %116, label %118, label %120

118:                                              ; preds = %106
  %119 = sub nsw i64 %107, %115
  tail call void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.8"* %108, i64 %119) #10
  br label %124

120:                                              ; preds = %106
  %121 = icmp ult i64 %107, %115
  br i1 %121, label %122, label %124

122:                                              ; preds = %120
  %123 = getelementptr inbounds i32, i32* %117, i64 %107
  store i32* %123, i32** %109, align 8
  br label %124

124:                                              ; preds = %122, %120, %118, %1
  %125 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8
  %126 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 8, i32 0, i32 1
  %130 = bitcast i32** %129 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.std::__1::vector"* %125 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = sub i64 %131, %133
  %135 = ashr exact i64 %134, 2
  %136 = icmp ult i64 %135, %128
  %137 = inttoptr i64 %133 to i32*
  br i1 %136, label %138, label %140

138:                                              ; preds = %124
  %139 = sub nsw i64 %128, %135
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %125, i64 %139) #10
  br label %144

140:                                              ; preds = %124
  %141 = icmp ugt i64 %135, %128
  br i1 %141, label %142, label %144

142:                                              ; preds = %140
  %143 = getelementptr inbounds i32, i32* %137, i64 %128
  store i32* %143, i32** %129, align 8
  br label %144

144:                                              ; preds = %142, %140, %138, %1
  %145 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5
  %146 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 5, i32 0, i32 1
  %150 = bitcast i32** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.std::__1::vector"* %145 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = ashr exact i64 %154, 2
  %156 = icmp ult i64 %155, %148
  %157 = inttoptr i64 %153 to i32*
  br i1 %156, label %158, label %160

158:                                              ; preds = %144
  %159 = sub nsw i64 %148, %155
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %145, i64 %159) #10
  br label %164

160:                                              ; preds = %144
  %161 = icmp ugt i64 %155, %148
  br i1 %161, label %162, label %164

162:                                              ; preds = %160
  %163 = getelementptr inbounds i32, i32* %157, i64 %148
  store i32* %163, i32** %149, align 8
  br label %164

164:                                              ; preds = %158, %160, %162
  %165 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 2
  %166 = load i32, i32* %165, align 8
  switch i32 %166, label %205 [
    i32 0, label %167
    i32 1, label %186
  ]

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6
  %169 = load i32, i32* %146, align 4
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 6, i32 0, i32 1
  %172 = bitcast i32** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::vector"* %168 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 2
  %178 = icmp ult i64 %177, %170
  %179 = inttoptr i64 %175 to i32*
  br i1 %178, label %180, label %182

180:                                              ; preds = %167
  %181 = sub nsw i64 %170, %177
  tail call void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"* %168, i64 %181) #10
  br label %205

182:                                              ; preds = %167
  %183 = icmp ugt i64 %177, %170
  br i1 %183, label %184, label %205

184:                                              ; preds = %182
  %185 = getelementptr inbounds i32, i32* %179, i64 %170
  store i32* %185, i32** %171, align 8
  br label %205

186:                                              ; preds = %164
  %187 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7
  %188 = load i32, i32* %146, align 4
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 7, i32 0, i32 1
  %191 = bitcast i8*** %190 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = bitcast %"class.std::__1::vector.1"* %187 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = sub i64 %192, %194
  %196 = ashr exact i64 %195, 3
  %197 = icmp ult i64 %196, %189
  %198 = inttoptr i64 %194 to i8**
  br i1 %197, label %199, label %201

199:                                              ; preds = %186
  %200 = sub nsw i64 %189, %196
  tail call void @_ZNSt3__16vectorIPKvNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.1"* %187, i64 %200) #10
  br label %205

201:                                              ; preds = %186
  %202 = icmp ugt i64 %196, %189
  br i1 %202, label %203, label %205

203:                                              ; preds = %201
  %204 = getelementptr inbounds i8*, i8** %198, i64 %189
  store i8** %204, i8*** %190, align 8
  br label %205

205:                                              ; preds = %203, %201, %199, %184, %182, %180, %82, %80, %78, %1, %164
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3gpu5gles216MultiDrawManager17ValidateDrawcountEi(%"class.gpu::gles2::MultiDrawManager"* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %6, i32 %1) #10
  %8 = extractvalue { i32, i1 } %7, 1
  br i1 %8, label %14, label %9, !prof !2

9:                                                ; preds = %4
  %10 = extractvalue { i32, i1 } %7, 0
  %11 = getelementptr inbounds %"class.gpu::gles2::MultiDrawManager", %"class.gpu::gles2::MultiDrawManager"* %0, i64 0, i32 3, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sle i32 %10, %12
  br label %14

14:                                               ; preds = %9, %4, %2
  %15 = phi i1 [ false, %2 ], [ %13, %9 ], [ false, %4 ]
  ret i1 %15
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIjNS_9allocatorIjEEE8__appendEm(%"class.std::__1::vector.8"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.8"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.8"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #10
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.8", %"class.std::__1::vector.8"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #10
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #6

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIiNS_9allocatorIiEEE8__appendEm(%"class.std::__1::vector"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i32** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i32** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 2
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i32*
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i32, i32* %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i32, i32* %13, i64 %18
  %20 = bitcast i32* %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 4
  %25 = and i64 %24, -4
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint i32* %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 2
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 4611686018427387903
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 2
  %41 = icmp ult i64 %40, 2305843009213693951
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 1
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 4611686018427387903
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 4611686018427387903, %38 ]
  %52 = shl i64 %51, 2
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i32*
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i32* [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i32, i32* %57, i64 %33
  %59 = getelementptr inbounds i32, i32* %57, i64 %56
  %60 = getelementptr inbounds i32, i32* %58, i64 %1
  %61 = bitcast i32* %58 to i8*
  %62 = shl i64 %1, 2
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %61, i8 0, i64 %62, i1 false) #10
  %63 = ptrtoint i32* %59 to i64
  %64 = ptrtoint i32* %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %66 = load i32*, i32** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i32* %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 2
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i32, i32* %58, i64 %71
  %73 = ptrtoint i32* %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i32* %72 to i8*
  %77 = bitcast i32* %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 4 %77, i64 %69, i1 false) #10
  %78 = load i32*, i32** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i32* [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i32* %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i32* %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIPKvNS_9allocatorIS2_EEE8__appendEm(%"class.std::__1::vector.1"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %4 = bitcast i8*** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %7 = bitcast i8*** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %5, %8
  %10 = ashr exact i64 %9, 3
  %11 = icmp ult i64 %10, %1
  br i1 %11, label %29, label %12

12:                                               ; preds = %2
  %13 = inttoptr i64 %8 to i8**
  %14 = icmp eq i64 %1, 0
  br i1 %14, label %27, label %15

15:                                               ; preds = %12
  %16 = getelementptr inbounds i8*, i8** %13, i64 %1
  %17 = inttoptr i64 %8 to i8*
  %18 = add i64 %1, -1
  %19 = getelementptr i8*, i8** %13, i64 %18
  %20 = bitcast i8** %19 to i8*
  %21 = sub i64 0, %8
  %22 = getelementptr i8, i8* %20, i64 %21
  %23 = ptrtoint i8* %22 to i64
  %24 = add i64 %23, 8
  %25 = and i64 %24, -8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 %25, i1 false) #10
  %26 = ptrtoint i8** %16 to i64
  br label %27

27:                                               ; preds = %12, %15
  %28 = phi i64 [ %26, %15 ], [ %8, %12 ]
  store i64 %28, i64* %7, align 8
  br label %84

29:                                               ; preds = %2
  %30 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = sub i64 %8, %31
  %33 = ashr exact i64 %32, 3
  %34 = add i64 %33, %1
  %35 = icmp ugt i64 %34, 2305843009213693951
  br i1 %35, label %36, label %38

36:                                               ; preds = %29
  %37 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %37) #11
  unreachable

38:                                               ; preds = %29
  %39 = sub i64 %5, %31
  %40 = ashr exact i64 %39, 3
  %41 = icmp ult i64 %40, 1152921504606846975
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = ashr exact i64 %39, 2
  %44 = icmp ult i64 %43, %34
  %45 = select i1 %44, i64 %34, i64 %43
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %55, label %47

47:                                               ; preds = %42
  %48 = icmp ugt i64 %45, 2305843009213693951
  br i1 %48, label %49, label %50

49:                                               ; preds = %47
  tail call void @abort() #11
  unreachable

50:                                               ; preds = %38, %47
  %51 = phi i64 [ %45, %47 ], [ 2305843009213693951, %38 ]
  %52 = shl i64 %51, 3
  %53 = tail call i8* @_Znwm(i64 %52) #9
  %54 = bitcast i8* %53 to i8**
  br label %55

55:                                               ; preds = %50, %42
  %56 = phi i64 [ %51, %50 ], [ 0, %42 ]
  %57 = phi i8** [ %54, %50 ], [ null, %42 ]
  %58 = getelementptr inbounds i8*, i8** %57, i64 %33
  %59 = getelementptr inbounds i8*, i8** %57, i64 %56
  %60 = getelementptr inbounds i8*, i8** %58, i64 %1
  %61 = bitcast i8** %58 to i8*
  %62 = shl i64 %1, 3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 %62, i1 false) #10
  %63 = ptrtoint i8** %59 to i64
  %64 = ptrtoint i8** %60 to i64
  %65 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %66 = load i8**, i8*** %65, align 8
  %67 = load i64, i64* %7, align 8
  %68 = ptrtoint i8** %66 to i64
  %69 = sub i64 %67, %68
  %70 = ashr exact i64 %69, 3
  %71 = sub nsw i64 0, %70
  %72 = getelementptr inbounds i8*, i8** %58, i64 %71
  %73 = ptrtoint i8** %72 to i64
  %74 = icmp sgt i64 %69, 0
  br i1 %74, label %75, label %79

75:                                               ; preds = %55
  %76 = bitcast i8** %72 to i8*
  %77 = bitcast i8** %66 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %76, i8* align 8 %77, i64 %69, i1 false) #10
  %78 = load i8**, i8*** %65, align 8
  br label %79

79:                                               ; preds = %55, %75
  %80 = phi i8** [ %66, %55 ], [ %78, %75 ]
  store i64 %73, i64* %30, align 8
  store i64 %64, i64* %7, align 8
  store i64 %63, i64* %4, align 8
  %81 = icmp eq i8** %80, null
  br i1 %81, label %84, label %82

82:                                               ; preds = %79
  %83 = bitcast i8** %80 to i8*
  tail call void @_ZdlPv(i8* %83) #9
  br label %84

84:                                               ; preds = %82, %79, %27
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { builtin nounwind }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.unroll.disable"}
!12 = distinct !{!12, !9}
!13 = !{!14}
!14 = distinct !{!14, !15}
!15 = distinct !{!15, !"LVerDomain"}
!16 = !{!17}
!17 = distinct !{!17, !15}
!18 = distinct !{!18, !9}
!19 = distinct !{!19, !11}
!20 = distinct !{!20, !9}
!21 = !{!22}
!22 = distinct !{!22, !23}
!23 = distinct !{!23, !"LVerDomain"}
!24 = !{!25}
!25 = distinct !{!25, !23}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !11}
!28 = distinct !{!28, !9}
!29 = !{!30}
!30 = distinct !{!30, !31}
!31 = distinct !{!31, !"LVerDomain"}
!32 = !{!33}
!33 = distinct !{!33, !31}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !11}
!36 = distinct !{!36, !9}
